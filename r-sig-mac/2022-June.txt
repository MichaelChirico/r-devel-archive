From rmh @end|ng |rom temp|e@edu  Fri Jun  3 04:51:46 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Fri, 3 Jun 2022 02:51:46 +0000
Subject: [R-SIG-Mac] Xquartz started crashing today
Message-ID: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>

it makes R unresponsive according to the activity monitor.
The only repair I have found is to ForceQuit R from the Activity Monitor, and start  fresh R session.
I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
I downloaded a fresh R from https://mac.r-project.org
R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

> version
               _                                          
platform       aarch64-apple-darwin20                     
arch           aarch64                                    
os             darwin20                                   
system         aarch64, darwin20                          
status         Patched                                    
major          4                                          
minor          2.0                                        
year           2022                                       
month          06                                         
day            02                                         
svn rev        82444                                      
language       R                                          
version.string R version 4.2.0 Patched (2022-06-02 r82444)
nickname       Vigorous Calisthenics                      
> 

I have MacOS 12.3 Monterey
MacBook Air (M1,2020)
Chip Apple M1
memory 16GB

The pdf() device works so I I can work, but casually plotting to the screen without explicitly
opening pdf() is not possible.

From @|mon@urb@nek @end|ng |rom R-project@org  Fri Jun  3 05:02:42 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 3 Jun 2022 15:02:42 +1200
Subject: [R-SIG-Mac] Xquartz started crashing today
In-Reply-To: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
Message-ID: <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>

Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).

Cheers,
Simon


> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
> 
> it makes R unresponsive according to the activity monitor.
> The only repair I have found is to ForceQuit R from the Activity Monitor, and start  fresh R session.
> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
> I downloaded a fresh R from https://mac.r-project.org
> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
> Copyright (C) 2022 The R Foundation for Statistical Computing
> Platform: aarch64-apple-darwin20 (64-bit)
> 
>> version
>               _                                          
> platform       aarch64-apple-darwin20                     
> arch           aarch64                                    
> os             darwin20                                   
> system         aarch64, darwin20                          
> status         Patched                                    
> major          4                                          
> minor          2.0                                        
> year           2022                                       
> month          06                                         
> day            02                                         
> svn rev        82444                                      
> language       R                                          
> version.string R version 4.2.0 Patched (2022-06-02 r82444)
> nickname       Vigorous Calisthenics                      
>> 
> 
> I have MacOS 12.3 Monterey
> MacBook Air (M1,2020)
> Chip Apple M1
> memory 16GB
> 
> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
> opening pdf() is not possible.
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From rmh @end|ng |rom temp|e@edu  Fri Jun  3 05:38:28 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Fri, 3 Jun 2022 03:38:28 +0000
Subject: [R-SIG-Mac] [External]  Xquartz started crashing today
In-Reply-To: <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
Message-ID: <D3D503D4-3668-41BF-A54C-E0F0CA3FA604@temple.edu>

Well, the crash report got intercepted for the moderator's approval
Message body is too big: 4015103 bytes with a limit of 150 KB

 2927072 Jun  2 23:19 crashreport.txt



> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
> 
> Cheers,
> Simon
> 
> 
>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>> 
>> it makes R unresponsive according to the activity monitor.
>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start  fresh R session.
>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XQI9F8yyGltywiIinmqefvCgLTGzQqZKqasjIt5XKvw%3D&amp;reserved=0
>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>> Copyright (C) 2022 The R Foundation for Statistical Computing
>> Platform: aarch64-apple-darwin20 (64-bit)
>> 
>>> version
>>              _                                          
>> platform       aarch64-apple-darwin20                     
>> arch           aarch64                                    
>> os             darwin20                                   
>> system         aarch64, darwin20                          
>> status         Patched                                    
>> major          4                                          
>> minor          2.0                                        
>> year           2022                                       
>> month          06                                         
>> day            02                                         
>> svn rev        82444                                      
>> language       R                                          
>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>> nickname       Vigorous Calisthenics                      
>>> 
>> 
>> I have MacOS 12.3 Monterey
>> MacBook Air (M1,2020)
>> Chip Apple M1
>> memory 16GB
>> 
>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>> opening pdf() is not possible.
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XgXIqDpecoiNbzqbUXhZNhr6Gp1ZG7tEtj8S0sasVVg%3D&amp;reserved=0
>> 
> 


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Fri Jun  3 08:50:28 2022
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Fri, 03 Jun 2022 08:50:28 +0200
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
Message-ID: <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>

I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.

What would be the best way for this idea/proposal going forward?

I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
Or https://github.com/r-devel/rcontribution?

Best,
Patrick
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 870 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20220603/31b51370/attachment.sig>

From rmh @end|ng |rom temp|e@edu  Fri Jun  3 17:10:06 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Fri, 3 Jun 2022 15:10:06 +0000
Subject: [R-SIG-Mac] [External]  Xquartz started crashing today
In-Reply-To: <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
Message-ID: <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>

cover letter for crash report, that also got stopped for being part of a too large email,


I am doing nothing different that I know of.
I start R within emacs using ESS with M-x R


R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> setwd('/Users/rmh/Rwd2/')
> plot(1:10)
>   C-c C-c



## it just sits there, completely frozen and ignores C-c C-c
## then I Force Quit it from the Activity Monitor
Process R terminated: 15 at Thu Jun  2 22:39:39 2022


Do you want the crash report that the Mac offers to send to Apple?

---
I just finished updating all my packages.
So now the crash generation  and report.
I entered

plot(1:10)

The rotating beachball appeared.  No graph, C-c C-c has no effect..

Force Quit from Activity Monitor and CrashReport attached:


Just for fun, I started R.app and entered plot(1:10)
Same freeze and I Force Quit it again.
I am not bothering with the Crash Report unless you tell me you need it too.

Rich

> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
> 
> Cheers,
> Simon
> 
> 
>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>> 
>> it makes R unresponsive according to the activity monitor.
>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start  fresh R session.
>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XQI9F8yyGltywiIinmqefvCgLTGzQqZKqasjIt5XKvw%3D&amp;reserved=0
>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>> Copyright (C) 2022 The R Foundation for Statistical Computing
>> Platform: aarch64-apple-darwin20 (64-bit)
>> 
>>> version
>>              _                                          
>> platform       aarch64-apple-darwin20                     
>> arch           aarch64                                    
>> os             darwin20                                   
>> system         aarch64, darwin20                          
>> status         Patched                                    
>> major          4                                          
>> minor          2.0                                        
>> year           2022                                       
>> month          06                                         
>> day            02                                         
>> svn rev        82444                                      
>> language       R                                          
>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>> nickname       Vigorous Calisthenics                      
>>> 
>> 
>> I have MacOS 12.3 Monterey
>> MacBook Air (M1,2020)
>> Chip Apple M1
>> memory 16GB
>> 
>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>> opening pdf() is not possible.
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XgXIqDpecoiNbzqbUXhZNhr6Gp1ZG7tEtj8S0sasVVg%3D&amp;reserved=0
>> 
> 


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Jun  3 18:45:21 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 3 Jun 2022 09:45:21 -0700
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
Message-ID: <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>

I see two fairly big problems with users installing R packages to
.Library by default.  One is related to package checking and CRAN, and
one is related to translation of expectations when moving between
operating systems (as Patrick already pointed out).  At the end, I'll
also argue that R_LIBS_SITE exists for those who wish to maintain
site-wide R package libraries to be shared among users, which is
better than using .Library for this.

# R CMD check

When you check a package with 'R CMD check --as-cran', or, with
environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
are run in a sandbox where only declared package dependencies and any
packages in the system package library (= .Library) are on the library
path (= .libPaths()), e.g.

print(.libPaths())
[1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
[2] "/path/to/R-4.2.0/lib/R/library"

What's in the user's library (= R_LIBS_USER) or in the site library (=
.Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
is very valuable since it helps to identify undeclared package
dependencies.

**The default behavior on macOS discussed here, where R packages are
installed to .Library, breaks this.**  Developers with non-base R
packages in .Library will not benefit from the 'R CMD check --as-cran'
checks for undeclared packages. This increases the risk of them not
being aware of the problem of undeclared packages, which is a
discussion we see from time to time on R-devel and R-pkg-devel, e.g.
when it comes to what should be listed under Suggests: or not.

BTW, this makes me wonder how many macOS developers notice this
problem only as they submit to CRAN, and have to resubmit. Also, this
issue might add extra work to the CRAN Team, e.g. spending time
locking at and responding to possible false positives, handling more
emails, and handling more re-submissions.


# Social expectations

The second problem with the current default macOS behavior is when
people hop between systems and operating systems.  Particularly, a
macOS user coming to Unix or Windows does not immediately understand
how and where R packages are installed.  They get a prompt about a
"personal library" and might choose to decline because it's not what
they're used to seeing.  Then they might end up in the Stack Overflow
cut'n'paste rabbit hole, where they find some instructions on setting
'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
until they upgrade R next year, when they start getting weird warnings
or errors of some packages not working that they slowly start to
accept as the normal behavior of R. I see this problem on large HPC
environments where I help out thousands of HPC users. Also, reading
various support forums out there, I think this is a real problem. It's
only recently, thanks to Patrick, I learned about this rather odd
macOS behavior, and I do think it is a cause for confusion and
miscommunication.  Another problem with different OS behaviors is that
it complicated documentation and instructions.  I strongly believe, it
would be beneficial to the R community if we all have the same
experience and expectations regardless of OS.

I believe the above problems are best addressed by changing the
*default* settings on macOS so that it is *not* possible to install to
.Library, and instead require a user to install to their personal
package library.  Advanced users who prefer to install to .Library,
can still configure R, or .Library, to do so.

As Patrick suggests, defaulting .Library to 755, instead of 775, or
avoid setting the "admin" group, seems like a simple solution that
would help harmonize the user experience of R.


# Maintaining a site-wide package library

> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.

I believe .Library.site/R_LIBS_SITE exists to address this purpose,
and I argue it is better suited for this than using .Library.  It also
has the benefit of *not* conflicting with the
_R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
users to opt out from centrally installed packages (by setting
R_LIBS_SITE=""), which they cannot do if they're installed in the
system library.

All the best,

Henrik

PS. FWIW, for all of the above reasons, I always set 755 on .Library,
even if I install R to my personal home folder; it simply lowers the
risk for side effects when developing and troubleshooting.

On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
<patrick.schratz at gmail.com> wrote:
>
> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>
> What would be the best way for this idea/proposal going forward?
>
> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
> Or https://github.com/r-devel/rcontribution?
>
> Best,
> Patrick_______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jun  3 19:01:25 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 3 Jun 2022 13:01:25 -0400
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
Message-ID: <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>

Hi Henrik.

You didn't address the issue of having different versions of a package 
installed in the system library versus the personal library, an issue 
that causes lots of confusion for unsophisticated users.

A possible solution for this is for R by default to refuse to install a 
package in the personal library if it is already installed in the system 
library.

Duncan Murdoch

On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
> I see two fairly big problems with users installing R packages to
> .Library by default.  One is related to package checking and CRAN, and
> one is related to translation of expectations when moving between
> operating systems (as Patrick already pointed out).  At the end, I'll
> also argue that R_LIBS_SITE exists for those who wish to maintain
> site-wide R package libraries to be shared among users, which is
> better than using .Library for this.
> 
> # R CMD check
> 
> When you check a package with 'R CMD check --as-cran', or, with
> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
> are run in a sandbox where only declared package dependencies and any
> packages in the system package library (= .Library) are on the library
> path (= .libPaths()), e.g.
> 
> print(.libPaths())
> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
> [2] "/path/to/R-4.2.0/lib/R/library"
> 
> What's in the user's library (= R_LIBS_USER) or in the site library (=
> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
> is very valuable since it helps to identify undeclared package
> dependencies.
> 
> **The default behavior on macOS discussed here, where R packages are
> installed to .Library, breaks this.**  Developers with non-base R
> packages in .Library will not benefit from the 'R CMD check --as-cran'
> checks for undeclared packages. This increases the risk of them not
> being aware of the problem of undeclared packages, which is a
> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
> when it comes to what should be listed under Suggests: or not.
> 
> BTW, this makes me wonder how many macOS developers notice this
> problem only as they submit to CRAN, and have to resubmit. Also, this
> issue might add extra work to the CRAN Team, e.g. spending time
> locking at and responding to possible false positives, handling more
> emails, and handling more re-submissions.
> 
> 
> # Social expectations
> 
> The second problem with the current default macOS behavior is when
> people hop between systems and operating systems.  Particularly, a
> macOS user coming to Unix or Windows does not immediately understand
> how and where R packages are installed.  They get a prompt about a
> "personal library" and might choose to decline because it's not what
> they're used to seeing.  Then they might end up in the Stack Overflow
> cut'n'paste rabbit hole, where they find some instructions on setting
> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
> until they upgrade R next year, when they start getting weird warnings
> or errors of some packages not working that they slowly start to
> accept as the normal behavior of R. I see this problem on large HPC
> environments where I help out thousands of HPC users. Also, reading
> various support forums out there, I think this is a real problem. It's
> only recently, thanks to Patrick, I learned about this rather odd
> macOS behavior, and I do think it is a cause for confusion and
> miscommunication.  Another problem with different OS behaviors is that
> it complicated documentation and instructions.  I strongly believe, it
> would be beneficial to the R community if we all have the same
> experience and expectations regardless of OS.
> 
> I believe the above problems are best addressed by changing the
> *default* settings on macOS so that it is *not* possible to install to
> .Library, and instead require a user to install to their personal
> package library.  Advanced users who prefer to install to .Library,
> can still configure R, or .Library, to do so.
> 
> As Patrick suggests, defaulting .Library to 755, instead of 775, or
> avoid setting the "admin" group, seems like a simple solution that
> would help harmonize the user experience of R.
> 
> 
> # Maintaining a site-wide package library
> 
>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
> 
> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
> and I argue it is better suited for this than using .Library.  It also
> has the benefit of *not* conflicting with the
> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
> users to opt out from centrally installed packages (by setting
> R_LIBS_SITE=""), which they cannot do if they're installed in the
> system library.
> 
> All the best,
> 
> Henrik
> 
> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
> even if I install R to my personal home folder; it simply lowers the
> risk for side effects when developing and troubleshooting.
> 
> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
> <patrick.schratz at gmail.com> wrote:
>>
>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>>
>> What would be the best way for this idea/proposal going forward?
>>
>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>> Or https://github.com/r-devel/rcontribution?
>>
>> Best,
>> Patrick_______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From pd@|gd @end|ng |rom gm@||@com  Fri Jun  3 19:21:39 2022
From: pd@|gd @end|ng |rom gm@||@com (Peter Dalgaard)
Date: Fri, 3 Jun 2022 19:21:39 +0200
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
Message-ID: <5A93DC6A-3816-4E3D-A4BC-A5B707C10827@gmail.com>

Eek! No, just no... 

That way users can't upgrade a package for himself on a multi-user system if the sysop won't do it for everyone.

- pd

> On 3 Jun 2022, at 19:01 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> Hi Henrik.
> 
> You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
> 
> A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
> 
> Duncan Murdoch
> 
> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
>> I see two fairly big problems with users installing R packages to
>> .Library by default.  One is related to package checking and CRAN, and
>> one is related to translation of expectations when moving between
>> operating systems (as Patrick already pointed out).  At the end, I'll
>> also argue that R_LIBS_SITE exists for those who wish to maintain
>> site-wide R package libraries to be shared among users, which is
>> better than using .Library for this.
>> # R CMD check
>> When you check a package with 'R CMD check --as-cran', or, with
>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
>> are run in a sandbox where only declared package dependencies and any
>> packages in the system package library (= .Library) are on the library
>> path (= .libPaths()), e.g.
>> print(.libPaths())
>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
>> [2] "/path/to/R-4.2.0/lib/R/library"
>> What's in the user's library (= R_LIBS_USER) or in the site library (=
>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
>> is very valuable since it helps to identify undeclared package
>> dependencies.
>> **The default behavior on macOS discussed here, where R packages are
>> installed to .Library, breaks this.**  Developers with non-base R
>> packages in .Library will not benefit from the 'R CMD check --as-cran'
>> checks for undeclared packages. This increases the risk of them not
>> being aware of the problem of undeclared packages, which is a
>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
>> when it comes to what should be listed under Suggests: or not.
>> BTW, this makes me wonder how many macOS developers notice this
>> problem only as they submit to CRAN, and have to resubmit. Also, this
>> issue might add extra work to the CRAN Team, e.g. spending time
>> locking at and responding to possible false positives, handling more
>> emails, and handling more re-submissions.
>> # Social expectations
>> The second problem with the current default macOS behavior is when
>> people hop between systems and operating systems.  Particularly, a
>> macOS user coming to Unix or Windows does not immediately understand
>> how and where R packages are installed.  They get a prompt about a
>> "personal library" and might choose to decline because it's not what
>> they're used to seeing.  Then they might end up in the Stack Overflow
>> cut'n'paste rabbit hole, where they find some instructions on setting
>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
>> until they upgrade R next year, when they start getting weird warnings
>> or errors of some packages not working that they slowly start to
>> accept as the normal behavior of R. I see this problem on large HPC
>> environments where I help out thousands of HPC users. Also, reading
>> various support forums out there, I think this is a real problem. It's
>> only recently, thanks to Patrick, I learned about this rather odd
>> macOS behavior, and I do think it is a cause for confusion and
>> miscommunication.  Another problem with different OS behaviors is that
>> it complicated documentation and instructions.  I strongly believe, it
>> would be beneficial to the R community if we all have the same
>> experience and expectations regardless of OS.
>> I believe the above problems are best addressed by changing the
>> *default* settings on macOS so that it is *not* possible to install to
>> .Library, and instead require a user to install to their personal
>> package library.  Advanced users who prefer to install to .Library,
>> can still configure R, or .Library, to do so.
>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
>> avoid setting the "admin" group, seems like a simple solution that
>> would help harmonize the user experience of R.
>> # Maintaining a site-wide package library
>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
>> and I argue it is better suited for this than using .Library.  It also
>> has the benefit of *not* conflicting with the
>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
>> users to opt out from centrally installed packages (by setting
>> R_LIBS_SITE=""), which they cannot do if they're installed in the
>> system library.
>> All the best,
>> Henrik
>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
>> even if I install R to my personal home folder; it simply lowers the
>> risk for side effects when developing and troubleshooting.
>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
>> <patrick.schratz at gmail.com> wrote:
>>> 
>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>>> 
>>> What would be the best way for this idea/proposal going forward?
>>> 
>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>>> Or https://github.com/r-devel/rcontribution?
>>> 
>>> Best,
>>> Patrick_______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jun  3 19:38:25 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 3 Jun 2022 13:38:25 -0400
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <5A93DC6A-3816-4E3D-A4BC-A5B707C10827@gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
 <5A93DC6A-3816-4E3D-A4BC-A5B707C10827@gmail.com>
Message-ID: <0477bfbd-d704-4095-14dd-f0987c8fcd98@gmail.com>

On 03/06/2022 1:21 p.m., Peter Dalgaard wrote:
> Eek! No, just no...
> 
> That way users can't upgrade a package for himself on a multi-user system if the sysop won't do it for everyone.

"by default"

Duncan Murdoch

> 
> - pd
> 
>> On 3 Jun 2022, at 19:01 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> Hi Henrik.
>>
>> You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
>>
>> A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
>>
>> Duncan Murdoch
>>
>> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
>>> I see two fairly big problems with users installing R packages to
>>> .Library by default.  One is related to package checking and CRAN, and
>>> one is related to translation of expectations when moving between
>>> operating systems (as Patrick already pointed out).  At the end, I'll
>>> also argue that R_LIBS_SITE exists for those who wish to maintain
>>> site-wide R package libraries to be shared among users, which is
>>> better than using .Library for this.
>>> # R CMD check
>>> When you check a package with 'R CMD check --as-cran', or, with
>>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
>>> are run in a sandbox where only declared package dependencies and any
>>> packages in the system package library (= .Library) are on the library
>>> path (= .libPaths()), e.g.
>>> print(.libPaths())
>>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
>>> [2] "/path/to/R-4.2.0/lib/R/library"
>>> What's in the user's library (= R_LIBS_USER) or in the site library (=
>>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
>>> is very valuable since it helps to identify undeclared package
>>> dependencies.
>>> **The default behavior on macOS discussed here, where R packages are
>>> installed to .Library, breaks this.**  Developers with non-base R
>>> packages in .Library will not benefit from the 'R CMD check --as-cran'
>>> checks for undeclared packages. This increases the risk of them not
>>> being aware of the problem of undeclared packages, which is a
>>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
>>> when it comes to what should be listed under Suggests: or not.
>>> BTW, this makes me wonder how many macOS developers notice this
>>> problem only as they submit to CRAN, and have to resubmit. Also, this
>>> issue might add extra work to the CRAN Team, e.g. spending time
>>> locking at and responding to possible false positives, handling more
>>> emails, and handling more re-submissions.
>>> # Social expectations
>>> The second problem with the current default macOS behavior is when
>>> people hop between systems and operating systems.  Particularly, a
>>> macOS user coming to Unix or Windows does not immediately understand
>>> how and where R packages are installed.  They get a prompt about a
>>> "personal library" and might choose to decline because it's not what
>>> they're used to seeing.  Then they might end up in the Stack Overflow
>>> cut'n'paste rabbit hole, where they find some instructions on setting
>>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
>>> until they upgrade R next year, when they start getting weird warnings
>>> or errors of some packages not working that they slowly start to
>>> accept as the normal behavior of R. I see this problem on large HPC
>>> environments where I help out thousands of HPC users. Also, reading
>>> various support forums out there, I think this is a real problem. It's
>>> only recently, thanks to Patrick, I learned about this rather odd
>>> macOS behavior, and I do think it is a cause for confusion and
>>> miscommunication.  Another problem with different OS behaviors is that
>>> it complicated documentation and instructions.  I strongly believe, it
>>> would be beneficial to the R community if we all have the same
>>> experience and expectations regardless of OS.
>>> I believe the above problems are best addressed by changing the
>>> *default* settings on macOS so that it is *not* possible to install to
>>> .Library, and instead require a user to install to their personal
>>> package library.  Advanced users who prefer to install to .Library,
>>> can still configure R, or .Library, to do so.
>>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
>>> avoid setting the "admin" group, seems like a simple solution that
>>> would help harmonize the user experience of R.
>>> # Maintaining a site-wide package library
>>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
>>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
>>> and I argue it is better suited for this than using .Library.  It also
>>> has the benefit of *not* conflicting with the
>>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
>>> users to opt out from centrally installed packages (by setting
>>> R_LIBS_SITE=""), which they cannot do if they're installed in the
>>> system library.
>>> All the best,
>>> Henrik
>>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
>>> even if I install R to my personal home folder; it simply lowers the
>>> risk for side effects when developing and troubleshooting.
>>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
>>> <patrick.schratz at gmail.com> wrote:
>>>>
>>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>>>>
>>>> What would be the best way for this idea/proposal going forward?
>>>>
>>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>>>> Or https://github.com/r-devel/rcontribution?
>>>>
>>>> Best,
>>>> Patrick_______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Jun  3 19:43:21 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 03 Jun 2022 10:43:21 -0700
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
Message-ID: <36EE6EF6-A061-444E-A2E0-5903C6BE686C@dcn.davis.ca.us>

That would be a disaster. The computer sysadmin's whims should not override my userland analysis setup. This is not so hard to understand that even a beginner won't "get" it if you just remind them that their user library is the primary place to look.

The only reason people get confused is because various experts make suggestions that they should even try to manage the system library in R. The longer I work with R, the less I think anyone should mess with the system R library... it should come with R and only change when the software is updated. Any other changes made to it involve unnecessary privilege escalation and/or mucking with the default behavior of any other users who might use that machine, and if I (or any hypothetical new user) decide to make a change, it should always be resolvable by wiping the user library and starting over.

On June 3, 2022 10:01:25 AM PDT, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>Hi Henrik.
>
>You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
>
>A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
>
>Duncan Murdoch
>
>On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
>> I see two fairly big problems with users installing R packages to
>> .Library by default.  One is related to package checking and CRAN, and
>> one is related to translation of expectations when moving between
>> operating systems (as Patrick already pointed out).  At the end, I'll
>> also argue that R_LIBS_SITE exists for those who wish to maintain
>> site-wide R package libraries to be shared among users, which is
>> better than using .Library for this.
>> 
>> # R CMD check
>> 
>> When you check a package with 'R CMD check --as-cran', or, with
>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
>> are run in a sandbox where only declared package dependencies and any
>> packages in the system package library (= .Library) are on the library
>> path (= .libPaths()), e.g.
>> 
>> print(.libPaths())
>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
>> [2] "/path/to/R-4.2.0/lib/R/library"
>> 
>> What's in the user's library (= R_LIBS_USER) or in the site library (=
>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
>> is very valuable since it helps to identify undeclared package
>> dependencies.
>> 
>> **The default behavior on macOS discussed here, where R packages are
>> installed to .Library, breaks this.**  Developers with non-base R
>> packages in .Library will not benefit from the 'R CMD check --as-cran'
>> checks for undeclared packages. This increases the risk of them not
>> being aware of the problem of undeclared packages, which is a
>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
>> when it comes to what should be listed under Suggests: or not.
>> 
>> BTW, this makes me wonder how many macOS developers notice this
>> problem only as they submit to CRAN, and have to resubmit. Also, this
>> issue might add extra work to the CRAN Team, e.g. spending time
>> locking at and responding to possible false positives, handling more
>> emails, and handling more re-submissions.
>> 
>> 
>> # Social expectations
>> 
>> The second problem with the current default macOS behavior is when
>> people hop between systems and operating systems.  Particularly, a
>> macOS user coming to Unix or Windows does not immediately understand
>> how and where R packages are installed.  They get a prompt about a
>> "personal library" and might choose to decline because it's not what
>> they're used to seeing.  Then they might end up in the Stack Overflow
>> cut'n'paste rabbit hole, where they find some instructions on setting
>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
>> until they upgrade R next year, when they start getting weird warnings
>> or errors of some packages not working that they slowly start to
>> accept as the normal behavior of R. I see this problem on large HPC
>> environments where I help out thousands of HPC users. Also, reading
>> various support forums out there, I think this is a real problem. It's
>> only recently, thanks to Patrick, I learned about this rather odd
>> macOS behavior, and I do think it is a cause for confusion and
>> miscommunication.  Another problem with different OS behaviors is that
>> it complicated documentation and instructions.  I strongly believe, it
>> would be beneficial to the R community if we all have the same
>> experience and expectations regardless of OS.
>> 
>> I believe the above problems are best addressed by changing the
>> *default* settings on macOS so that it is *not* possible to install to
>> .Library, and instead require a user to install to their personal
>> package library.  Advanced users who prefer to install to .Library,
>> can still configure R, or .Library, to do so.
>> 
>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
>> avoid setting the "admin" group, seems like a simple solution that
>> would help harmonize the user experience of R.
>> 
>> 
>> # Maintaining a site-wide package library
>> 
>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
>> 
>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
>> and I argue it is better suited for this than using .Library.  It also
>> has the benefit of *not* conflicting with the
>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
>> users to opt out from centrally installed packages (by setting
>> R_LIBS_SITE=""), which they cannot do if they're installed in the
>> system library.
>> 
>> All the best,
>> 
>> Henrik
>> 
>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
>> even if I install R to my personal home folder; it simply lowers the
>> risk for side effects when developing and troubleshooting.
>> 
>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
>> <patrick.schratz at gmail.com> wrote:
>>> 
>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>>> 
>>> What would be the best way for this idea/proposal going forward?
>>> 
>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>>> Or https://github.com/r-devel/rcontribution?
>>> 
>>> Best,
>>> Patrick_______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>_______________________________________________
>R-SIG-Mac mailing list
>R-SIG-Mac at r-project.org
>https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Sent from my phone. Please excuse my brevity.


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Jun  3 19:45:26 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 3 Jun 2022 10:45:26 -0700
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <0477bfbd-d704-4095-14dd-f0987c8fcd98@gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
 <5A93DC6A-3816-4E3D-A4BC-A5B707C10827@gmail.com>
 <0477bfbd-d704-4095-14dd-f0987c8fcd98@gmail.com>
Message-ID: <CAFDcVCTQ7zWV8V4JbttWXre-fkYMMUrOxrF6hzmnXqnFsLgPUQ@mail.gmail.com>

Hi Duncan, thank you for the follow-up.

> You didn't address the issue of having different versions of a package
> installed in the system library versus the personal library, an issue
> that causes lots of confusion for unsophisticated users.

I think this is a problem that applies to all operating systems and is
not specific to macOS. Whatever the solution, or best practices, is
for that, I think it should be addressed uniformly across platforms.
I have, some experience and thoughts around this too, but wouldn't it
be better if we move that discussion to R-devel?

/Henrik

On Fri, Jun 3, 2022 at 10:38 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 03/06/2022 1:21 p.m., Peter Dalgaard wrote:
> > Eek! No, just no...
> >
> > That way users can't upgrade a package for himself on a multi-user system if the sysop won't do it for everyone.
>
> "by default"
>
> Duncan Murdoch
>
> >
> > - pd
> >
> >> On 3 Jun 2022, at 19:01 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>
> >> Hi Henrik.
> >>
> >> You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
> >>
> >> A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
> >>
> >> Duncan Murdoch
> >>
> >> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
> >>> I see two fairly big problems with users installing R packages to
> >>> .Library by default.  One is related to package checking and CRAN, and
> >>> one is related to translation of expectations when moving between
> >>> operating systems (as Patrick already pointed out).  At the end, I'll
> >>> also argue that R_LIBS_SITE exists for those who wish to maintain
> >>> site-wide R package libraries to be shared among users, which is
> >>> better than using .Library for this.
> >>> # R CMD check
> >>> When you check a package with 'R CMD check --as-cran', or, with
> >>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
> >>> are run in a sandbox where only declared package dependencies and any
> >>> packages in the system package library (= .Library) are on the library
> >>> path (= .libPaths()), e.g.
> >>> print(.libPaths())
> >>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
> >>> [2] "/path/to/R-4.2.0/lib/R/library"
> >>> What's in the user's library (= R_LIBS_USER) or in the site library (=
> >>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
> >>> is very valuable since it helps to identify undeclared package
> >>> dependencies.
> >>> **The default behavior on macOS discussed here, where R packages are
> >>> installed to .Library, breaks this.**  Developers with non-base R
> >>> packages in .Library will not benefit from the 'R CMD check --as-cran'
> >>> checks for undeclared packages. This increases the risk of them not
> >>> being aware of the problem of undeclared packages, which is a
> >>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
> >>> when it comes to what should be listed under Suggests: or not.
> >>> BTW, this makes me wonder how many macOS developers notice this
> >>> problem only as they submit to CRAN, and have to resubmit. Also, this
> >>> issue might add extra work to the CRAN Team, e.g. spending time
> >>> locking at and responding to possible false positives, handling more
> >>> emails, and handling more re-submissions.
> >>> # Social expectations
> >>> The second problem with the current default macOS behavior is when
> >>> people hop between systems and operating systems.  Particularly, a
> >>> macOS user coming to Unix or Windows does not immediately understand
> >>> how and where R packages are installed.  They get a prompt about a
> >>> "personal library" and might choose to decline because it's not what
> >>> they're used to seeing.  Then they might end up in the Stack Overflow
> >>> cut'n'paste rabbit hole, where they find some instructions on setting
> >>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
> >>> until they upgrade R next year, when they start getting weird warnings
> >>> or errors of some packages not working that they slowly start to
> >>> accept as the normal behavior of R. I see this problem on large HPC
> >>> environments where I help out thousands of HPC users. Also, reading
> >>> various support forums out there, I think this is a real problem. It's
> >>> only recently, thanks to Patrick, I learned about this rather odd
> >>> macOS behavior, and I do think it is a cause for confusion and
> >>> miscommunication.  Another problem with different OS behaviors is that
> >>> it complicated documentation and instructions.  I strongly believe, it
> >>> would be beneficial to the R community if we all have the same
> >>> experience and expectations regardless of OS.
> >>> I believe the above problems are best addressed by changing the
> >>> *default* settings on macOS so that it is *not* possible to install to
> >>> .Library, and instead require a user to install to their personal
> >>> package library.  Advanced users who prefer to install to .Library,
> >>> can still configure R, or .Library, to do so.
> >>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
> >>> avoid setting the "admin" group, seems like a simple solution that
> >>> would help harmonize the user experience of R.
> >>> # Maintaining a site-wide package library
> >>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
> >>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
> >>> and I argue it is better suited for this than using .Library.  It also
> >>> has the benefit of *not* conflicting with the
> >>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
> >>> users to opt out from centrally installed packages (by setting
> >>> R_LIBS_SITE=""), which they cannot do if they're installed in the
> >>> system library.
> >>> All the best,
> >>> Henrik
> >>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
> >>> even if I install R to my personal home folder; it simply lowers the
> >>> risk for side effects when developing and troubleshooting.
> >>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
> >>> <patrick.schratz at gmail.com> wrote:
> >>>>
> >>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
> >>>>
> >>>> What would be the best way for this idea/proposal going forward?
> >>>>
> >>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
> >>>> Or https://github.com/r-devel/rcontribution?
> >>>>
> >>>> Best,
> >>>> Patrick_______________________________________________
> >>>> R-SIG-Mac mailing list
> >>>> R-SIG-Mac at r-project.org
> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>> _______________________________________________
> >>> R-SIG-Mac mailing list
> >>> R-SIG-Mac at r-project.org
> >>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>
> >> _______________________________________________
> >> R-SIG-Mac mailing list
> >> R-SIG-Mac at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jun  3 20:12:47 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 3 Jun 2022 14:12:47 -0400
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <CAFDcVCTQ7zWV8V4JbttWXre-fkYMMUrOxrF6hzmnXqnFsLgPUQ@mail.gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
 <5A93DC6A-3816-4E3D-A4BC-A5B707C10827@gmail.com>
 <0477bfbd-d704-4095-14dd-f0987c8fcd98@gmail.com>
 <CAFDcVCTQ7zWV8V4JbttWXre-fkYMMUrOxrF6hzmnXqnFsLgPUQ@mail.gmail.com>
Message-ID: <2e082d99-5373-8860-5d5c-3b55b115fe44@gmail.com>

On 03/06/2022 1:45 p.m., Henrik Bengtsson wrote:
> Hi Duncan, thank you for the follow-up.
> 
>> You didn't address the issue of having different versions of a package
>> installed in the system library versus the personal library, an issue
>> that causes lots of confusion for unsophisticated users.
> 
> I think this is a problem that applies to all operating systems and is
> not specific to macOS. Whatever the solution, or best practices, is
> for that, I think it should be addressed uniformly across platforms.
> I have, some experience and thoughts around this too, but wouldn't it
> be better if we move that discussion to R-devel?
> 

I think you misunderstood.  As I pointed out in my earlier message (a 
month ago!), duplicate installs typically aren't such a problem on 
MacOS, because by default for many users (like me), all installs go to 
the system library.

Consistency is generally a positive thing, but creating problems on 
MacOS for the sake of consistency with other systems isn't.

My latest message was an attempt to find a compromise:  make it harder 
to create this problem.

As to taking this discussion to R-devel, I think that's a bad idea 
before we agree on a specific proposal to make.

Duncan Murdoch


> /Henrik
> 
> On Fri, Jun 3, 2022 at 10:38 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 03/06/2022 1:21 p.m., Peter Dalgaard wrote:
>>> Eek! No, just no...
>>>
>>> That way users can't upgrade a package for himself on a multi-user system if the sysop won't do it for everyone.
>>
>> "by default"
>>
>> Duncan Murdoch
>>
>>>
>>> - pd
>>>
>>>> On 3 Jun 2022, at 19:01 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>
>>>> Hi Henrik.
>>>>
>>>> You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
>>>>
>>>> A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
>>>>
>>>> Duncan Murdoch
>>>>
>>>> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
>>>>> I see two fairly big problems with users installing R packages to
>>>>> .Library by default.  One is related to package checking and CRAN, and
>>>>> one is related to translation of expectations when moving between
>>>>> operating systems (as Patrick already pointed out).  At the end, I'll
>>>>> also argue that R_LIBS_SITE exists for those who wish to maintain
>>>>> site-wide R package libraries to be shared among users, which is
>>>>> better than using .Library for this.
>>>>> # R CMD check
>>>>> When you check a package with 'R CMD check --as-cran', or, with
>>>>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
>>>>> are run in a sandbox where only declared package dependencies and any
>>>>> packages in the system package library (= .Library) are on the library
>>>>> path (= .libPaths()), e.g.
>>>>> print(.libPaths())
>>>>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
>>>>> [2] "/path/to/R-4.2.0/lib/R/library"
>>>>> What's in the user's library (= R_LIBS_USER) or in the site library (=
>>>>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
>>>>> is very valuable since it helps to identify undeclared package
>>>>> dependencies.
>>>>> **The default behavior on macOS discussed here, where R packages are
>>>>> installed to .Library, breaks this.**  Developers with non-base R
>>>>> packages in .Library will not benefit from the 'R CMD check --as-cran'
>>>>> checks for undeclared packages. This increases the risk of them not
>>>>> being aware of the problem of undeclared packages, which is a
>>>>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
>>>>> when it comes to what should be listed under Suggests: or not.
>>>>> BTW, this makes me wonder how many macOS developers notice this
>>>>> problem only as they submit to CRAN, and have to resubmit. Also, this
>>>>> issue might add extra work to the CRAN Team, e.g. spending time
>>>>> locking at and responding to possible false positives, handling more
>>>>> emails, and handling more re-submissions.
>>>>> # Social expectations
>>>>> The second problem with the current default macOS behavior is when
>>>>> people hop between systems and operating systems.  Particularly, a
>>>>> macOS user coming to Unix or Windows does not immediately understand
>>>>> how and where R packages are installed.  They get a prompt about a
>>>>> "personal library" and might choose to decline because it's not what
>>>>> they're used to seeing.  Then they might end up in the Stack Overflow
>>>>> cut'n'paste rabbit hole, where they find some instructions on setting
>>>>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
>>>>> until they upgrade R next year, when they start getting weird warnings
>>>>> or errors of some packages not working that they slowly start to
>>>>> accept as the normal behavior of R. I see this problem on large HPC
>>>>> environments where I help out thousands of HPC users. Also, reading
>>>>> various support forums out there, I think this is a real problem. It's
>>>>> only recently, thanks to Patrick, I learned about this rather odd
>>>>> macOS behavior, and I do think it is a cause for confusion and
>>>>> miscommunication.  Another problem with different OS behaviors is that
>>>>> it complicated documentation and instructions.  I strongly believe, it
>>>>> would be beneficial to the R community if we all have the same
>>>>> experience and expectations regardless of OS.
>>>>> I believe the above problems are best addressed by changing the
>>>>> *default* settings on macOS so that it is *not* possible to install to
>>>>> .Library, and instead require a user to install to their personal
>>>>> package library.  Advanced users who prefer to install to .Library,
>>>>> can still configure R, or .Library, to do so.
>>>>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
>>>>> avoid setting the "admin" group, seems like a simple solution that
>>>>> would help harmonize the user experience of R.
>>>>> # Maintaining a site-wide package library
>>>>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
>>>>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
>>>>> and I argue it is better suited for this than using .Library.  It also
>>>>> has the benefit of *not* conflicting with the
>>>>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
>>>>> users to opt out from centrally installed packages (by setting
>>>>> R_LIBS_SITE=""), which they cannot do if they're installed in the
>>>>> system library.
>>>>> All the best,
>>>>> Henrik
>>>>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
>>>>> even if I install R to my personal home folder; it simply lowers the
>>>>> risk for side effects when developing and troubleshooting.
>>>>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
>>>>> <patrick.schratz at gmail.com> wrote:
>>>>>>
>>>>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>>>>>>
>>>>>> What would be the best way for this idea/proposal going forward?
>>>>>>
>>>>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>>>>>> Or https://github.com/r-devel/rcontribution?
>>>>>>
>>>>>> Best,
>>>>>> Patrick_______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>
>>


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Jun  3 20:20:07 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 3 Jun 2022 11:20:07 -0700
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <2e082d99-5373-8860-5d5c-3b55b115fe44@gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
 <5A93DC6A-3816-4E3D-A4BC-A5B707C10827@gmail.com>
 <0477bfbd-d704-4095-14dd-f0987c8fcd98@gmail.com>
 <CAFDcVCTQ7zWV8V4JbttWXre-fkYMMUrOxrF6hzmnXqnFsLgPUQ@mail.gmail.com>
 <2e082d99-5373-8860-5d5c-3b55b115fe44@gmail.com>
Message-ID: <CAFDcVCR_WzrRKwwVy20gbKW6E64_MaxNpvNV06fZPi3suAsavQ@mail.gmail.com>

I see. I'll try to re-read the whole thread to see what I was missing.
But, for my clarification, if you say:

> duplicate installs typically aren't such a problem on MacOS, because
> by default for many users (like me), all installs go to the system library.

aren't you indirectly also arguing that this behavior would benefit
users on Linux and MS Windows too, if R worked the same way there?

/Henrik

On Fri, Jun 3, 2022 at 11:12 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 03/06/2022 1:45 p.m., Henrik Bengtsson wrote:
> > Hi Duncan, thank you for the follow-up.
> >
> >> You didn't address the issue of having different versions of a package
> >> installed in the system library versus the personal library, an issue
> >> that causes lots of confusion for unsophisticated users.
> >
> > I think this is a problem that applies to all operating systems and is
> > not specific to macOS. Whatever the solution, or best practices, is
> > for that, I think it should be addressed uniformly across platforms.
> > I have, some experience and thoughts around this too, but wouldn't it
> > be better if we move that discussion to R-devel?
> >
>
> I think you misunderstood.  As I pointed out in my earlier message (a
> month ago!), duplicate installs typically aren't such a problem on
> MacOS, because by default for many users (like me), all installs go to
> the system library.
>
> Consistency is generally a positive thing, but creating problems on
> MacOS for the sake of consistency with other systems isn't.
>
> My latest message was an attempt to find a compromise:  make it harder
> to create this problem.
>
> As to taking this discussion to R-devel, I think that's a bad idea
> before we agree on a specific proposal to make.
>
> Duncan Murdoch
>
>
> > /Henrik
> >
> > On Fri, Jun 3, 2022 at 10:38 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>
> >> On 03/06/2022 1:21 p.m., Peter Dalgaard wrote:
> >>> Eek! No, just no...
> >>>
> >>> That way users can't upgrade a package for himself on a multi-user system if the sysop won't do it for everyone.
> >>
> >> "by default"
> >>
> >> Duncan Murdoch
> >>
> >>>
> >>> - pd
> >>>
> >>>> On 3 Jun 2022, at 19:01 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>>>
> >>>> Hi Henrik.
> >>>>
> >>>> You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
> >>>>
> >>>> A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
> >>>>
> >>>> Duncan Murdoch
> >>>>
> >>>> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
> >>>>> I see two fairly big problems with users installing R packages to
> >>>>> .Library by default.  One is related to package checking and CRAN, and
> >>>>> one is related to translation of expectations when moving between
> >>>>> operating systems (as Patrick already pointed out).  At the end, I'll
> >>>>> also argue that R_LIBS_SITE exists for those who wish to maintain
> >>>>> site-wide R package libraries to be shared among users, which is
> >>>>> better than using .Library for this.
> >>>>> # R CMD check
> >>>>> When you check a package with 'R CMD check --as-cran', or, with
> >>>>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
> >>>>> are run in a sandbox where only declared package dependencies and any
> >>>>> packages in the system package library (= .Library) are on the library
> >>>>> path (= .libPaths()), e.g.
> >>>>> print(.libPaths())
> >>>>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
> >>>>> [2] "/path/to/R-4.2.0/lib/R/library"
> >>>>> What's in the user's library (= R_LIBS_USER) or in the site library (=
> >>>>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
> >>>>> is very valuable since it helps to identify undeclared package
> >>>>> dependencies.
> >>>>> **The default behavior on macOS discussed here, where R packages are
> >>>>> installed to .Library, breaks this.**  Developers with non-base R
> >>>>> packages in .Library will not benefit from the 'R CMD check --as-cran'
> >>>>> checks for undeclared packages. This increases the risk of them not
> >>>>> being aware of the problem of undeclared packages, which is a
> >>>>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
> >>>>> when it comes to what should be listed under Suggests: or not.
> >>>>> BTW, this makes me wonder how many macOS developers notice this
> >>>>> problem only as they submit to CRAN, and have to resubmit. Also, this
> >>>>> issue might add extra work to the CRAN Team, e.g. spending time
> >>>>> locking at and responding to possible false positives, handling more
> >>>>> emails, and handling more re-submissions.
> >>>>> # Social expectations
> >>>>> The second problem with the current default macOS behavior is when
> >>>>> people hop between systems and operating systems.  Particularly, a
> >>>>> macOS user coming to Unix or Windows does not immediately understand
> >>>>> how and where R packages are installed.  They get a prompt about a
> >>>>> "personal library" and might choose to decline because it's not what
> >>>>> they're used to seeing.  Then they might end up in the Stack Overflow
> >>>>> cut'n'paste rabbit hole, where they find some instructions on setting
> >>>>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
> >>>>> until they upgrade R next year, when they start getting weird warnings
> >>>>> or errors of some packages not working that they slowly start to
> >>>>> accept as the normal behavior of R. I see this problem on large HPC
> >>>>> environments where I help out thousands of HPC users. Also, reading
> >>>>> various support forums out there, I think this is a real problem. It's
> >>>>> only recently, thanks to Patrick, I learned about this rather odd
> >>>>> macOS behavior, and I do think it is a cause for confusion and
> >>>>> miscommunication.  Another problem with different OS behaviors is that
> >>>>> it complicated documentation and instructions.  I strongly believe, it
> >>>>> would be beneficial to the R community if we all have the same
> >>>>> experience and expectations regardless of OS.
> >>>>> I believe the above problems are best addressed by changing the
> >>>>> *default* settings on macOS so that it is *not* possible to install to
> >>>>> .Library, and instead require a user to install to their personal
> >>>>> package library.  Advanced users who prefer to install to .Library,
> >>>>> can still configure R, or .Library, to do so.
> >>>>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
> >>>>> avoid setting the "admin" group, seems like a simple solution that
> >>>>> would help harmonize the user experience of R.
> >>>>> # Maintaining a site-wide package library
> >>>>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
> >>>>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
> >>>>> and I argue it is better suited for this than using .Library.  It also
> >>>>> has the benefit of *not* conflicting with the
> >>>>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
> >>>>> users to opt out from centrally installed packages (by setting
> >>>>> R_LIBS_SITE=""), which they cannot do if they're installed in the
> >>>>> system library.
> >>>>> All the best,
> >>>>> Henrik
> >>>>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
> >>>>> even if I install R to my personal home folder; it simply lowers the
> >>>>> risk for side effects when developing and troubleshooting.
> >>>>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
> >>>>> <patrick.schratz at gmail.com> wrote:
> >>>>>>
> >>>>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
> >>>>>>
> >>>>>> What would be the best way for this idea/proposal going forward?
> >>>>>>
> >>>>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
> >>>>>> Or https://github.com/r-devel/rcontribution?
> >>>>>>
> >>>>>> Best,
> >>>>>> Patrick_______________________________________________
> >>>>>> R-SIG-Mac mailing list
> >>>>>> R-SIG-Mac at r-project.org
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>>>> _______________________________________________
> >>>>> R-SIG-Mac mailing list
> >>>>> R-SIG-Mac at r-project.org
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>>>
> >>>> _______________________________________________
> >>>> R-SIG-Mac mailing list
> >>>> R-SIG-Mac at r-project.org
> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>>
> >>
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jun  3 20:29:17 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 3 Jun 2022 14:29:17 -0400
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <36EE6EF6-A061-444E-A2E0-5903C6BE686C@dcn.davis.ca.us>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
 <36EE6EF6-A061-444E-A2E0-5903C6BE686C@dcn.davis.ca.us>
Message-ID: <cf821c7c-62b4-ce7b-e0b1-cab00666b82d@gmail.com>

On 03/06/2022 1:43 p.m., Jeff Newmiller wrote:
> That would be a disaster. The computer sysadmin's whims should not override my userland analysis setup. This is not so hard to understand that even a beginner won't "get" it if you just remind them that their user library is the primary place to look.

On my system, as is the default on most single user MacOS systems, there 
is no difference between the sysadmin and the user, nor between the 
system library and the user library.  That's where this discussion 
started in April.

> The only reason people get confused is because various experts make suggestions that they should even try to manage the system library in R. 

No, it's because they have two libraries where one is sufficient.

The longer I work with R, the less I think anyone should mess with the 
system R library... it should come with R and only change when the 
software is updated.

To do that would require doing away with "recommended" packages.  That 
might be a good idea:  only have base packages in the system library; by 
definition they will never be updated except when R is updated.  Every 
contributed package goes into the user library.  That's functionally 
equivalent to having only one library, because there would be no way to 
install duplicate versions of packages.

> Any other changes made to it involve unnecessary privilege escalation and/or mucking with the default behavior of any other users who might use that machine, and if I (or any hypothetical new user) decide to make a change, it should always be resolvable by wiping the user library and starting over.

No, changes to it don't require privilege escalation. Most MacOS users 
on single user machines are already in the admin group, and that group 
has permission to change the system library. That's the point that 
Patrick made in his original message.  He was asking to change the 
installer so that privilege escalations *would* be required.

Duncan Murdoch

> 
> On June 3, 2022 10:01:25 AM PDT, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> Hi Henrik.
>>
>> You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
>>
>> A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
>>
>> Duncan Murdoch
>>
>> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
>>> I see two fairly big problems with users installing R packages to
>>> .Library by default.  One is related to package checking and CRAN, and
>>> one is related to translation of expectations when moving between
>>> operating systems (as Patrick already pointed out).  At the end, I'll
>>> also argue that R_LIBS_SITE exists for those who wish to maintain
>>> site-wide R package libraries to be shared among users, which is
>>> better than using .Library for this.
>>>
>>> # R CMD check
>>>
>>> When you check a package with 'R CMD check --as-cran', or, with
>>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
>>> are run in a sandbox where only declared package dependencies and any
>>> packages in the system package library (= .Library) are on the library
>>> path (= .libPaths()), e.g.
>>>
>>> print(.libPaths())
>>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
>>> [2] "/path/to/R-4.2.0/lib/R/library"
>>>
>>> What's in the user's library (= R_LIBS_USER) or in the site library (=
>>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
>>> is very valuable since it helps to identify undeclared package
>>> dependencies.
>>>
>>> **The default behavior on macOS discussed here, where R packages are
>>> installed to .Library, breaks this.**  Developers with non-base R
>>> packages in .Library will not benefit from the 'R CMD check --as-cran'
>>> checks for undeclared packages. This increases the risk of them not
>>> being aware of the problem of undeclared packages, which is a
>>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
>>> when it comes to what should be listed under Suggests: or not.
>>>
>>> BTW, this makes me wonder how many macOS developers notice this
>>> problem only as they submit to CRAN, and have to resubmit. Also, this
>>> issue might add extra work to the CRAN Team, e.g. spending time
>>> locking at and responding to possible false positives, handling more
>>> emails, and handling more re-submissions.
>>>
>>>
>>> # Social expectations
>>>
>>> The second problem with the current default macOS behavior is when
>>> people hop between systems and operating systems.  Particularly, a
>>> macOS user coming to Unix or Windows does not immediately understand
>>> how and where R packages are installed.  They get a prompt about a
>>> "personal library" and might choose to decline because it's not what
>>> they're used to seeing.  Then they might end up in the Stack Overflow
>>> cut'n'paste rabbit hole, where they find some instructions on setting
>>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
>>> until they upgrade R next year, when they start getting weird warnings
>>> or errors of some packages not working that they slowly start to
>>> accept as the normal behavior of R. I see this problem on large HPC
>>> environments where I help out thousands of HPC users. Also, reading
>>> various support forums out there, I think this is a real problem. It's
>>> only recently, thanks to Patrick, I learned about this rather odd
>>> macOS behavior, and I do think it is a cause for confusion and
>>> miscommunication.  Another problem with different OS behaviors is that
>>> it complicated documentation and instructions.  I strongly believe, it
>>> would be beneficial to the R community if we all have the same
>>> experience and expectations regardless of OS.
>>>
>>> I believe the above problems are best addressed by changing the
>>> *default* settings on macOS so that it is *not* possible to install to
>>> .Library, and instead require a user to install to their personal
>>> package library.  Advanced users who prefer to install to .Library,
>>> can still configure R, or .Library, to do so.
>>>
>>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
>>> avoid setting the "admin" group, seems like a simple solution that
>>> would help harmonize the user experience of R.
>>>
>>>
>>> # Maintaining a site-wide package library
>>>
>>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
>>>
>>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
>>> and I argue it is better suited for this than using .Library.  It also
>>> has the benefit of *not* conflicting with the
>>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
>>> users to opt out from centrally installed packages (by setting
>>> R_LIBS_SITE=""), which they cannot do if they're installed in the
>>> system library.
>>>
>>> All the best,
>>>
>>> Henrik
>>>
>>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
>>> even if I install R to my personal home folder; it simply lowers the
>>> risk for side effects when developing and troubleshooting.
>>>
>>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
>>> <patrick.schratz at gmail.com> wrote:
>>>>
>>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>>>>
>>>> What would be the best way for this idea/proposal going forward?
>>>>
>>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>>>> Or https://github.com/r-devel/rcontribution?
>>>>
>>>> Best,
>>>> Patrick_______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jun  3 20:31:33 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 3 Jun 2022 14:31:33 -0400
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <CAFDcVCR_WzrRKwwVy20gbKW6E64_MaxNpvNV06fZPi3suAsavQ@mail.gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
 <5A93DC6A-3816-4E3D-A4BC-A5B707C10827@gmail.com>
 <0477bfbd-d704-4095-14dd-f0987c8fcd98@gmail.com>
 <CAFDcVCTQ7zWV8V4JbttWXre-fkYMMUrOxrF6hzmnXqnFsLgPUQ@mail.gmail.com>
 <2e082d99-5373-8860-5d5c-3b55b115fe44@gmail.com>
 <CAFDcVCR_WzrRKwwVy20gbKW6E64_MaxNpvNV06fZPi3suAsavQ@mail.gmail.com>
Message-ID: <e3abb93f-1eb3-28a5-dd9d-0d2e3c1c86f3@gmail.com>

On 03/06/2022 2:20 p.m., Henrik Bengtsson wrote:
> I see. I'll try to re-read the whole thread to see what I was missing.
> But, for my clarification, if you say:
> 
>> duplicate installs typically aren't such a problem on MacOS, because
>> by default for many users (like me), all installs go to the system library.
> 
> aren't you indirectly also arguing that this behavior would benefit
> users on Linux and MS Windows too, if R worked the same way there?

I'm not a Linux or Windows user, so I'll leave it up to them to make 
that argument.

Duncan Murdoch

> 
> /Henrik
> 
> On Fri, Jun 3, 2022 at 11:12 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 03/06/2022 1:45 p.m., Henrik Bengtsson wrote:
>>> Hi Duncan, thank you for the follow-up.
>>>
>>>> You didn't address the issue of having different versions of a package
>>>> installed in the system library versus the personal library, an issue
>>>> that causes lots of confusion for unsophisticated users.
>>>
>>> I think this is a problem that applies to all operating systems and is
>>> not specific to macOS. Whatever the solution, or best practices, is
>>> for that, I think it should be addressed uniformly across platforms.
>>> I have, some experience and thoughts around this too, but wouldn't it
>>> be better if we move that discussion to R-devel?
>>>
>>
>> I think you misunderstood.  As I pointed out in my earlier message (a
>> month ago!), duplicate installs typically aren't such a problem on
>> MacOS, because by default for many users (like me), all installs go to
>> the system library.
>>
>> Consistency is generally a positive thing, but creating problems on
>> MacOS for the sake of consistency with other systems isn't.
>>
>> My latest message was an attempt to find a compromise:  make it harder
>> to create this problem.
>>
>> As to taking this discussion to R-devel, I think that's a bad idea
>> before we agree on a specific proposal to make.
>>
>> Duncan Murdoch
>>
>>
>>> /Henrik
>>>
>>> On Fri, Jun 3, 2022 at 10:38 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>
>>>> On 03/06/2022 1:21 p.m., Peter Dalgaard wrote:
>>>>> Eek! No, just no...
>>>>>
>>>>> That way users can't upgrade a package for himself on a multi-user system if the sysop won't do it for everyone.
>>>>
>>>> "by default"
>>>>
>>>> Duncan Murdoch
>>>>
>>>>>
>>>>> - pd
>>>>>
>>>>>> On 3 Jun 2022, at 19:01 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>>>
>>>>>> Hi Henrik.
>>>>>>
>>>>>> You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
>>>>>>
>>>>>> A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
>>>>>>
>>>>>> Duncan Murdoch
>>>>>>
>>>>>> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
>>>>>>> I see two fairly big problems with users installing R packages to
>>>>>>> .Library by default.  One is related to package checking and CRAN, and
>>>>>>> one is related to translation of expectations when moving between
>>>>>>> operating systems (as Patrick already pointed out).  At the end, I'll
>>>>>>> also argue that R_LIBS_SITE exists for those who wish to maintain
>>>>>>> site-wide R package libraries to be shared among users, which is
>>>>>>> better than using .Library for this.
>>>>>>> # R CMD check
>>>>>>> When you check a package with 'R CMD check --as-cran', or, with
>>>>>>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
>>>>>>> are run in a sandbox where only declared package dependencies and any
>>>>>>> packages in the system package library (= .Library) are on the library
>>>>>>> path (= .libPaths()), e.g.
>>>>>>> print(.libPaths())
>>>>>>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
>>>>>>> [2] "/path/to/R-4.2.0/lib/R/library"
>>>>>>> What's in the user's library (= R_LIBS_USER) or in the site library (=
>>>>>>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
>>>>>>> is very valuable since it helps to identify undeclared package
>>>>>>> dependencies.
>>>>>>> **The default behavior on macOS discussed here, where R packages are
>>>>>>> installed to .Library, breaks this.**  Developers with non-base R
>>>>>>> packages in .Library will not benefit from the 'R CMD check --as-cran'
>>>>>>> checks for undeclared packages. This increases the risk of them not
>>>>>>> being aware of the problem of undeclared packages, which is a
>>>>>>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
>>>>>>> when it comes to what should be listed under Suggests: or not.
>>>>>>> BTW, this makes me wonder how many macOS developers notice this
>>>>>>> problem only as they submit to CRAN, and have to resubmit. Also, this
>>>>>>> issue might add extra work to the CRAN Team, e.g. spending time
>>>>>>> locking at and responding to possible false positives, handling more
>>>>>>> emails, and handling more re-submissions.
>>>>>>> # Social expectations
>>>>>>> The second problem with the current default macOS behavior is when
>>>>>>> people hop between systems and operating systems.  Particularly, a
>>>>>>> macOS user coming to Unix or Windows does not immediately understand
>>>>>>> how and where R packages are installed.  They get a prompt about a
>>>>>>> "personal library" and might choose to decline because it's not what
>>>>>>> they're used to seeing.  Then they might end up in the Stack Overflow
>>>>>>> cut'n'paste rabbit hole, where they find some instructions on setting
>>>>>>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
>>>>>>> until they upgrade R next year, when they start getting weird warnings
>>>>>>> or errors of some packages not working that they slowly start to
>>>>>>> accept as the normal behavior of R. I see this problem on large HPC
>>>>>>> environments where I help out thousands of HPC users. Also, reading
>>>>>>> various support forums out there, I think this is a real problem. It's
>>>>>>> only recently, thanks to Patrick, I learned about this rather odd
>>>>>>> macOS behavior, and I do think it is a cause for confusion and
>>>>>>> miscommunication.  Another problem with different OS behaviors is that
>>>>>>> it complicated documentation and instructions.  I strongly believe, it
>>>>>>> would be beneficial to the R community if we all have the same
>>>>>>> experience and expectations regardless of OS.
>>>>>>> I believe the above problems are best addressed by changing the
>>>>>>> *default* settings on macOS so that it is *not* possible to install to
>>>>>>> .Library, and instead require a user to install to their personal
>>>>>>> package library.  Advanced users who prefer to install to .Library,
>>>>>>> can still configure R, or .Library, to do so.
>>>>>>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
>>>>>>> avoid setting the "admin" group, seems like a simple solution that
>>>>>>> would help harmonize the user experience of R.
>>>>>>> # Maintaining a site-wide package library
>>>>>>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
>>>>>>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
>>>>>>> and I argue it is better suited for this than using .Library.  It also
>>>>>>> has the benefit of *not* conflicting with the
>>>>>>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
>>>>>>> users to opt out from centrally installed packages (by setting
>>>>>>> R_LIBS_SITE=""), which they cannot do if they're installed in the
>>>>>>> system library.
>>>>>>> All the best,
>>>>>>> Henrik
>>>>>>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
>>>>>>> even if I install R to my personal home folder; it simply lowers the
>>>>>>> risk for side effects when developing and troubleshooting.
>>>>>>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
>>>>>>> <patrick.schratz at gmail.com> wrote:
>>>>>>>>
>>>>>>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>>>>>>>>
>>>>>>>> What would be the best way for this idea/proposal going forward?
>>>>>>>>
>>>>>>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>>>>>>>> Or https://github.com/r-devel/rcontribution?
>>>>>>>>
>>>>>>>> Best,
>>>>>>>> Patrick_______________________________________________
>>>>>>>> R-SIG-Mac mailing list
>>>>>>>> R-SIG-Mac at r-project.org
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>> _______________________________________________
>>>>>>> R-SIG-Mac mailing list
>>>>>>> R-SIG-Mac at r-project.org
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>
>>>>
>>


From rmh @end|ng |rom temp|e@edu  Sat Jun  4 00:03:39 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Fri, 3 Jun 2022 22:03:39 +0000
Subject: [R-SIG-Mac] [External]  Xquartz started crashing today
In-Reply-To: <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
Message-ID: <C0D7B376-B40F-4161-B3F4-FD30F85AE147@temple.edu>



> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
> 
> Cheers,
> Simon
> 
> 
>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>> 
>> it makes R unresponsive according to the activity monitor.
>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XQI9F8yyGltywiIinmqefvCgLTGzQqZKqasjIt5XKvw%3D&amp;reserved=0
>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>> Copyright (C) 2022 The R Foundation for Statistical Computing
>> Platform: aarch64-apple-darwin20 (64-bit)
>> 
>>> version
>> _ 
>> platform aarch64-apple-darwin20 
>> arch aarch64 
>> os darwin20 
>> system aarch64, darwin20 
>> status Patched 
>> major 4 
>> minor 2.0 
>> year 2022 
>> month 06 
>> day 02 
>> svn rev 82444 
>> language R 
>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>> nickname Vigorous Calisthenics 
>>> 
>> 
>> I have MacOS 12.3 Monterey
>> MacBook Air (M1,2020)
>> Chip Apple M1
>> memory 16GB
>> 
>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>> opening pdf() is not possible.
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XgXIqDpecoiNbzqbUXhZNhr6Gp1ZG7tEtj8S0sasVVg%3D&amp;reserved=0


-------------- next part --------------
A non-text attachment was scrubbed...
Name: crashab
Type: application/octet-stream
Size: 76160 bytes
Desc: crashab
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20220603/9306c68b/attachment-0001.obj>

From rmh @end|ng |rom temp|e@edu  Sat Jun  4 00:03:37 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Fri, 3 Jun 2022 22:03:37 +0000
Subject: [R-SIG-Mac] [External]  Xquartz started crashing today
In-Reply-To: <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
Message-ID: <FE4A7B1B-1205-4714-A621-17650B75B282@temple.edu>



> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
> 
> Cheers,
> Simon
> 
> 
>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>> 
>> it makes R unresponsive according to the activity monitor.
>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XQI9F8yyGltywiIinmqefvCgLTGzQqZKqasjIt5XKvw%3D&amp;reserved=0
>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>> Copyright (C) 2022 The R Foundation for Statistical Computing
>> Platform: aarch64-apple-darwin20 (64-bit)
>> 
>>> version
>> _ 
>> platform aarch64-apple-darwin20 
>> arch aarch64 
>> os darwin20 
>> system aarch64, darwin20 
>> status Patched 
>> major 4 
>> minor 2.0 
>> year 2022 
>> month 06 
>> day 02 
>> svn rev 82444 
>> language R 
>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>> nickname Vigorous Calisthenics 
>>> 
>> 
>> I have MacOS 12.3 Monterey
>> MacBook Air (M1,2020)
>> Chip Apple M1
>> memory 16GB
>> 
>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>> opening pdf() is not possible.
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XgXIqDpecoiNbzqbUXhZNhr6Gp1ZG7tEtj8S0sasVVg%3D&amp;reserved=0


-------------- next part --------------
A non-text attachment was scrubbed...
Name: crashac
Type: application/octet-stream
Size: 76162 bytes
Desc: crashac
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20220603/6200d0e5/attachment-0001.obj>

From rmh @end|ng |rom temp|e@edu  Sat Jun  4 00:03:35 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Fri, 3 Jun 2022 22:03:35 +0000
Subject: [R-SIG-Mac] [External]  Xquartz started crashing today
In-Reply-To: <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
Message-ID: <655F5B47-B578-4958-98E9-B6C9DC202933@temple.edu>

i split the crash three ways this time  two ways the 114KB got expanded to 153 and intercepted

> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
> 
> Cheers,
> Simon
> 
> 
>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>> 
>> it makes R unresponsive according to the activity monitor.
>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XQI9F8yyGltywiIinmqefvCgLTGzQqZKqasjIt5XKvw%3D&amp;reserved=0
>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>> Copyright (C) 2022 The R Foundation for Statistical Computing
>> Platform: aarch64-apple-darwin20 (64-bit)
>> 
>>> version
>> _ 
>> platform aarch64-apple-darwin20 
>> arch aarch64 
>> os darwin20 
>> system aarch64, darwin20 
>> status Patched 
>> major 4 
>> minor 2.0 
>> year 2022 
>> month 06 
>> day 02 
>> svn rev 82444 
>> language R 
>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>> nickname Vigorous Calisthenics 
>>> 
>> 
>> I have MacOS 12.3 Monterey
>> MacBook Air (M1,2020)
>> Chip Apple M1
>> memory 16GB
>> 
>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>> opening pdf() is not possible.
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XgXIqDpecoiNbzqbUXhZNhr6Gp1ZG7tEtj8S0sasVVg%3D&amp;reserved=0


-------------- next part --------------
A non-text attachment was scrubbed...
Name: crashaa
Type: application/octet-stream
Size: 76160 bytes
Desc: crashaa
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20220603/3a955b27/attachment-0001.obj>

From @|mon@urb@nek @end|ng |rom R-project@org  Sat Jun  4 05:32:35 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sat, 4 Jun 2022 15:32:35 +1200
Subject: [R-SIG-Mac] [External]  Xquartz started crashing today
In-Reply-To: <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
 <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>
Message-ID: <5FBB5DB7-492B-4202-969C-74A87DAE3F09@R-project.org>

Rich,

thanks. You sent a log of all processes on your machine, just the R report would have been fine (which is only 18k).

The hang occurs in ATSFontFindFromName() where the system is looking for fonts, so you could try: a) reboot he machine, b) run Font Book (in Applications), c) select all fonts (<Cmd><A>) d) in the menu select File -> Validate Fonts e) select any invalid fonts and remove them f) reboot

If the problem persists try re-installing the R 4.2.0 release if it makes any difference.

Cheers,
Simon


> On Jun 4, 2022, at 3:10 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
> 
> cover letter for crash report, that also got stopped for being part of a too large email,
> 
> 
> I am doing nothing different that I know of.
> I start R within emacs using ESS with M-x R
> 
> 
> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
> Copyright (C) 2022 The R Foundation for Statistical Computing
> Platform: aarch64-apple-darwin20 (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
>  Natural language support but running in an English locale
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
> 
>> setwd('/Users/rmh/Rwd2/')
>> plot(1:10)
>>  C-c C-c
> 
> 
> 
> ## it just sits there, completely frozen and ignores C-c C-c
> ## then I Force Quit it from the Activity Monitor
> Process R terminated: 15 at Thu Jun  2 22:39:39 2022
> 
> 
> Do you want the crash report that the Mac offers to send to Apple?
> 
> ---
> I just finished updating all my packages.
> So now the crash generation  and report.
> I entered
> 
> plot(1:10)
> 
> The rotating beachball appeared.  No graph, C-c C-c has no effect..
> 
> Force Quit from Activity Monitor and CrashReport attached:
> 
> 
> Just for fun, I started R.app and entered plot(1:10)
> Same freeze and I Force Quit it again.
> I am not bothering with the Crash Report unless you tell me you need it too.
> 
> Rich
> 
>> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> 
>> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
>> 
>> Cheers,
>> Simon
>> 
>> 
>>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>> 
>>> it makes R unresponsive according to the activity monitor.
>>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start  fresh R session.
>>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XQI9F8yyGltywiIinmqefvCgLTGzQqZKqasjIt5XKvw%3D&amp;reserved=0
>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>> Platform: aarch64-apple-darwin20 (64-bit)
>>> 
>>>> version
>>>             _                                          
>>> platform       aarch64-apple-darwin20                     
>>> arch           aarch64                                    
>>> os             darwin20                                   
>>> system         aarch64, darwin20                          
>>> status         Patched                                    
>>> major          4                                          
>>> minor          2.0                                        
>>> year           2022                                       
>>> month          06                                         
>>> day            02                                         
>>> svn rev        82444                                      
>>> language       R                                          
>>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>>> nickname       Vigorous Calisthenics                      
>>>> 
>>> 
>>> I have MacOS 12.3 Monterey
>>> MacBook Air (M1,2020)
>>> Chip Apple M1
>>> memory 16GB
>>> 
>>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>>> opening pdf() is not possible.
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Ca4f532c04dfe49a6fbef08da450d8937%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637898221705774944%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XgXIqDpecoiNbzqbUXhZNhr6Gp1ZG7tEtj8S0sasVVg%3D&amp;reserved=0
>>> 
>> 
> 


From rmh @end|ng |rom temp|e@edu  Sat Jun  4 06:49:00 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Sat, 4 Jun 2022 04:49:00 +0000
Subject: [R-SIG-Mac] [External]  Xquartz started crashing today
In-Reply-To: <5FBB5DB7-492B-4202-969C-74A87DAE3F09@R-project.org>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
 <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>
 <5FBB5DB7-492B-4202-969C-74A87DAE3F09@R-project.org>
Message-ID: <43891715-D5DB-45E4-B2E3-84BC686306A5@temple.edu>

Simon,

Thank you for reading this.

I sent what Apple gave me.  I had not previously tried reading one of these.
So should I be so lucky in the future, then all you need is everything between
Process:      R [
and the next occurence of
Process:   
?

and maybe also the up front stuff before the Process: information.

I already rebooted, installed a new R, and a new Xquartz.  Those didn't help.
Reinstalling R is probably irrelevant because the problem occurred first in 4.1-arm64,
which is why I upgraded to 4.2-arm64.  And it was still there.

This suggests that the problem is with the Fonts.  I have never touched them (on purpose).
I will learn a little in the next frew days and see what can be done with validation.
I will let you know.  But what made the fonts (if that is indeed the problem) go invalid.
I can't think of anything I did that could be relevant.

Rich


> On Jun 03, 2022, at 23:32, Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> Rich,
> 
> thanks. You sent a log of all processes on your machine, just the R report would have been fine (which is only 18k).
> 
> The hang occurs in ATSFontFindFromName() where the system is looking for fonts, so you could try: a) reboot he machine, b) run Font Book (in Applications), c) select all fonts (<Cmd><A>) d) in the menu select File -> Validate Fonts e) select any invalid fonts and remove them f) reboot
> 
> If the problem persists try re-installing the R 4.2.0 release if it makes any difference.
> 
> Cheers,
> Simon
> 
> 
>> On Jun 4, 2022, at 3:10 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
>> 
>> cover letter for crash report, that also got stopped for being part of a too large email,
>> 
>> 
>> I am doing nothing different that I know of.
>> I start R within emacs using ESS with M-x R
>> 
>> 
>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>> Copyright (C) 2022 The R Foundation for Statistical Computing
>> Platform: aarch64-apple-darwin20 (64-bit)
>> 
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>> 
>> Natural language support but running in an English locale
>> 
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>> 
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>> 
>>> setwd('/Users/rmh/Rwd2/')
>>> plot(1:10)
>>> C-c C-c
>> 
>> 
>> 
>> ## it just sits there, completely frozen and ignores C-c C-c
>> ## then I Force Quit it from the Activity Monitor
>> Process R terminated: 15 at Thu Jun 2 22:39:39 2022
>> 
>> 
>> Do you want the crash report that the Mac offers to send to Apple?
>> 
>> ---
>> I just finished updating all my packages.
>> So now the crash generation and report.
>> I entered
>> 
>> plot(1:10)
>> 
>> The rotating beachball appeared. No graph, C-c C-c has no effect..
>> 
>> Force Quit from Activity Monitor and CrashReport attached:
>> 
>> 
>> Just for fun, I started R.app and entered plot(1:10)
>> Same freeze and I Force Quit it again.
>> I am not bothering with the Crash Report unless you tell me you need it too.
>> 
>> Rich
>> 
>>> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>> 
>>> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
>>> 
>>> Cheers,
>>> Simon
>>> 
>>> 
>>>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>> 
>>>> it makes R unresponsive according to the activity monitor.
>>>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
>>>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>>>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7C4ba9f6e5c758463b7b4208da45dae092%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899103627102017%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=DZ%2BXBZknqyf5c5%2FSOtH6tswM8HlyMvssi6U2yTytPgU%3D&amp;reserved=0
>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>> 
>>>>> version
>>>> _ 
>>>> platform aarch64-apple-darwin20 
>>>> arch aarch64 
>>>> os darwin20 
>>>> system aarch64, darwin20 
>>>> status Patched 
>>>> major 4 
>>>> minor 2.0 
>>>> year 2022 
>>>> month 06 
>>>> day 02 
>>>> svn rev 82444 
>>>> language R 
>>>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>>>> nickname Vigorous Calisthenics 
>>>>> 
>>>> 
>>>> I have MacOS 12.3 Monterey
>>>> MacBook Air (M1,2020)
>>>> Chip Apple M1
>>>> memory 16GB
>>>> 
>>>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>>>> opening pdf() is not possible.
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C4ba9f6e5c758463b7b4208da45dae092%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899103627102017%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XHbZ1ie2cb93226uAWfqLYkd2PkYVdISzpxQHyZWXpk%3D&amp;reserved=0


From rmh @end|ng |rom temp|e@edu  Mon Jun  6 06:34:51 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Mon, 6 Jun 2022 04:34:51 +0000
Subject: [R-SIG-Mac] [External]  Xquartz started crashing today
In-Reply-To: <43891715-D5DB-45E4-B2E3-84BC686306A5@temple.edu>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
 <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>
 <5FBB5DB7-492B-4202-969C-74A87DAE3F09@R-project.org>
 <43891715-D5DB-45E4-B2E3-84BC686306A5@temple.edu>
Message-ID: <973A1A5E-AB55-4C20-B021-A7CC32AE93E2@temple.edu>

I am in the middle of validating fonts.  The machine has been running for about 12 hours, the Activity Monitor CPU
time for the Font Book app is currently at 2:35.15.  It keeps going up but very slowly.
The progress bar at the bottom of the Font Validation window has been stuck at about 1% from when it started and hasn't moved.
How long is this task supposed to take?

> On Jun 04, 2022, at 00:49, Richard M. Heiberger <rmh at temple.edu> wrote:
> 
> Simon,
> 
> Thank you for reading this.
> 
> I sent what Apple gave me. I had not previously tried reading one of these.
> So should I be so lucky in the future, then all you need is everything between
> Process: R [
> and the next occurence of
> Process: 
> ?
> 
> and maybe also the up front stuff before the Process: information.
> 
> I already rebooted, installed a new R, and a new Xquartz. Those didn't help.
> Reinstalling R is probably irrelevant because the problem occurred first in 4.1-arm64,
> which is why I upgraded to 4.2-arm64. And it was still there.
> 
> This suggests that the problem is with the Fonts. I have never touched them (on purpose).
> I will learn a little in the next frew days and see what can be done with validation.
> I will let you know. But what made the fonts (if that is indeed the problem) go invalid.
> I can't think of anything I did that could be relevant.
> 
> Rich
> 
> 
>> On Jun 03, 2022, at 23:32, Simon Urbanek <simon.urbanek at R-project.org> wrote:
>> 
>> Rich,
>> 
>> thanks. You sent a log of all processes on your machine, just the R report would have been fine (which is only 18k).
>> 
>> The hang occurs in ATSFontFindFromName() where the system is looking for fonts, so you could try: a) reboot he machine, b) run Font Book (in Applications), c) select all fonts (<Cmd><A>) d) in the menu select File -> Validate Fonts e) select any invalid fonts and remove them f) reboot
>> 
>> If the problem persists try re-installing the R 4.2.0 release if it makes any difference.
>> 
>> Cheers,
>> Simon
>> 
>> 
>>> On Jun 4, 2022, at 3:10 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>> 
>>> cover letter for crash report, that also got stopped for being part of a too large email,
>>> 
>>> 
>>> I am doing nothing different that I know of.
>>> I start R within emacs using ESS with M-x R
>>> 
>>> 
>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>> Platform: aarch64-apple-darwin20 (64-bit)
>>> 
>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>> You are welcome to redistribute it under certain conditions.
>>> Type 'license()' or 'licence()' for distribution details.
>>> 
>>> Natural language support but running in an English locale
>>> 
>>> R is a collaborative project with many contributors.
>>> Type 'contributors()' for more information and
>>> 'citation()' on how to cite R or R packages in publications.
>>> 
>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>> 'help.start()' for an HTML browser interface to help.
>>> Type 'q()' to quit R.
>>> 
>>>> setwd('/Users/rmh/Rwd2/')
>>>> plot(1:10)
>>>> C-c C-c
>>> 
>>> 
>>> 
>>> ## it just sits there, completely frozen and ignores C-c C-c
>>> ## then I Force Quit it from the Activity Monitor
>>> Process R terminated: 15 at Thu Jun 2 22:39:39 2022
>>> 
>>> 
>>> Do you want the crash report that the Mac offers to send to Apple?
>>> 
>>> ---
>>> I just finished updating all my packages.
>>> So now the crash generation and report.
>>> I entered
>>> 
>>> plot(1:10)
>>> 
>>> The rotating beachball appeared. No graph, C-c C-c has no effect..
>>> 
>>> Force Quit from Activity Monitor and CrashReport attached:
>>> 
>>> 
>>> Just for fun, I started R.app and entered plot(1:10)
>>> Same freeze and I Force Quit it again.
>>> I am not bothering with the Crash Report unless you tell me you need it too.
>>> 
>>> Rich
>>> 
>>>> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>> 
>>>> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
>>>> 
>>>> Cheers,
>>>> Simon
>>>> 
>>>> 
>>>>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>>> 
>>>>> it makes R unresponsive according to the activity monitor.
>>>>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
>>>>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>>>>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=0ynIZnv7P%2FxdWyHGUZlx%2FfMFw%2F%2Bc6KdiOaYS1kTGSGM%3D&amp;reserved=0
>>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>> 
>>>>>> version
>>>>> _ 
>>>>> platform aarch64-apple-darwin20 
>>>>> arch aarch64 
>>>>> os darwin20 
>>>>> system aarch64, darwin20 
>>>>> status Patched 
>>>>> major 4 
>>>>> minor 2.0 
>>>>> year 2022 
>>>>> month 06 
>>>>> day 02 
>>>>> svn rev 82444 
>>>>> language R 
>>>>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>>>>> nickname Vigorous Calisthenics 
>>>>>> 
>>>>> 
>>>>> I have MacOS 12.3 Monterey
>>>>> MacBook Air (M1,2020)
>>>>> Chip Apple M1
>>>>> memory 16GB
>>>>> 
>>>>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>>>>> opening pdf() is not possible.
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0


From ken @end|ng |rom kjbe@th@com@@u  Mon Jun  6 07:44:58 2022
From: ken @end|ng |rom kjbe@th@com@@u (Ken Beath)
Date: Mon, 6 Jun 2022 15:44:58 +1000
Subject: [R-SIG-Mac] [External]  Xquartz started crashing today
In-Reply-To: <973A1A5E-AB55-4C20-B021-A7CC32AE93E2@temple.edu>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
 <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>
 <5FBB5DB7-492B-4202-969C-74A87DAE3F09@R-project.org>
 <43891715-D5DB-45E4-B2E3-84BC686306A5@temple.edu>
 <973A1A5E-AB55-4C20-B021-A7CC32AE93E2@temple.edu>
Message-ID: <DD6A65E0-2A90-4765-8860-676D571B0B1C@kjbeath.com.au>

Less than 30 seconds on my iMac, so something is very wrong with your fonts or file system.

Ken

> On 6 Jun 2022, at 2:34 pm, Richard M. Heiberger <rmh at temple.edu> wrote:
> 
> I am in the middle of validating fonts. The machine has been running for about 12 hours, the Activity Monitor CPU
> time for the Font Book app is currently at 2:35.15. It keeps going up but very slowly.
> The progress bar at the bottom of the Font Validation window has been stuck at about 1% from when it started and hasn't moved.
> How long is this task supposed to take?
> 
>> On Jun 04, 2022, at 00:49, Richard M. Heiberger <rmh at temple.edu <mailto:rmh at temple.edu>> wrote:
>> 
>> Simon,
>> 
>> Thank you for reading this.
>> 
>> I sent what Apple gave me. I had not previously tried reading one of these.
>> So should I be so lucky in the future, then all you need is everything between
>> Process: R [
>> and the next occurence of
>> Process: 
>> ?
>> 
>> and maybe also the up front stuff before the Process: information.
>> 
>> I already rebooted, installed a new R, and a new Xquartz. Those didn't help.
>> Reinstalling R is probably irrelevant because the problem occurred first in 4.1-arm64,
>> which is why I upgraded to 4.2-arm64. And it was still there.
>> 
>> This suggests that the problem is with the Fonts. I have never touched them (on purpose).
>> I will learn a little in the next frew days and see what can be done with validation.
>> I will let you know. But what made the fonts (if that is indeed the problem) go invalid.
>> I can't think of anything I did that could be relevant.
>> 
>> Rich
>> 
>> 
>>> On Jun 03, 2022, at 23:32, Simon Urbanek <simon.urbanek at R-project.org> wrote:
>>> 
>>> Rich,
>>> 
>>> thanks. You sent a log of all processes on your machine, just the R report would have been fine (which is only 18k).
>>> 
>>> The hang occurs in ATSFontFindFromName() where the system is looking for fonts, so you could try: a) reboot he machine, b) run Font Book (in Applications), c) select all fonts (<Cmd><A>) d) in the menu select File -> Validate Fonts e) select any invalid fonts and remove them f) reboot
>>> 
>>> If the problem persists try re-installing the R 4.2.0 release if it makes any difference.
>>> 
>>> Cheers,
>>> Simon
>>> 
>>> 
>>>> On Jun 4, 2022, at 3:10 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>> 
>>>> cover letter for crash report, that also got stopped for being part of a too large email,
>>>> 
>>>> 
>>>> I am doing nothing different that I know of.
>>>> I start R within emacs using ESS with M-x R
>>>> 
>>>> 
>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>> 
>>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>>> You are welcome to redistribute it under certain conditions.
>>>> Type 'license()' or 'licence()' for distribution details.
>>>> 
>>>> Natural language support but running in an English locale
>>>> 
>>>> R is a collaborative project with many contributors.
>>>> Type 'contributors()' for more information and
>>>> 'citation()' on how to cite R or R packages in publications.
>>>> 
>>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>>> 'help.start()' for an HTML browser interface to help.
>>>> Type 'q()' to quit R.
>>>> 
>>>>> setwd('/Users/rmh/Rwd2/')
>>>>> plot(1:10)
>>>>> C-c C-c
>>>> 
>>>> 
>>>> 
>>>> ## it just sits there, completely frozen and ignores C-c C-c
>>>> ## then I Force Quit it from the Activity Monitor
>>>> Process R terminated: 15 at Thu Jun 2 22:39:39 2022
>>>> 
>>>> 
>>>> Do you want the crash report that the Mac offers to send to Apple?
>>>> 
>>>> ---
>>>> I just finished updating all my packages.
>>>> So now the crash generation and report.
>>>> I entered
>>>> 
>>>> plot(1:10)
>>>> 
>>>> The rotating beachball appeared. No graph, C-c C-c has no effect..
>>>> 
>>>> Force Quit from Activity Monitor and CrashReport attached:
>>>> 
>>>> 
>>>> Just for fun, I started R.app and entered plot(1:10)
>>>> Same freeze and I Force Quit it again.
>>>> I am not bothering with the Crash Report unless you tell me you need it too.
>>>> 
>>>> Rich
>>>> 
>>>>> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>>> 
>>>>> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
>>>>> 
>>>>> Cheers,
>>>>> Simon
>>>>> 
>>>>> 
>>>>>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>>>> 
>>>>>> it makes R unresponsive according to the activity monitor.
>>>>>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
>>>>>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>>>>>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=0ynIZnv7P%2FxdWyHGUZlx%2FfMFw%2F%2Bc6KdiOaYS1kTGSGM%3D&amp;reserved=0 <https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=0ynIZnv7P%2FxdWyHGUZlx%2FfMFw%2F%2Bc6KdiOaYS1kTGSGM%3D&amp;reserved=0>
>>>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>> 
>>>>>>> version
>>>>>> _ 
>>>>>> platform aarch64-apple-darwin20 
>>>>>> arch aarch64 
>>>>>> os darwin20 
>>>>>> system aarch64, darwin20 
>>>>>> status Patched 
>>>>>> major 4 
>>>>>> minor 2.0 
>>>>>> year 2022 
>>>>>> month 06 
>>>>>> day 02 
>>>>>> svn rev 82444 
>>>>>> language R 
>>>>>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>>>>>> nickname Vigorous Calisthenics 
>>>>>>> 
>>>>>> 
>>>>>> I have MacOS 12.3 Monterey
>>>>>> MacBook Air (M1,2020)
>>>>>> Chip Apple M1
>>>>>> memory 16GB
>>>>>> 
>>>>>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>>>>>> opening pdf() is not possible.
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org <mailto:R-SIG-Mac at r-project.org>
>>>>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0 <https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0>
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org <mailto:R-SIG-Mac at r-project.org>
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0 <https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0>
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org <mailto:R-SIG-Mac at r-project.org>
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac <https://stat.ethz.ch/mailman/listinfo/r-sig-mac>

	[[alternative HTML version deleted]]


From rmh @end|ng |rom temp|e@edu  Mon Jun  6 16:12:26 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Mon, 6 Jun 2022 14:12:26 +0000
Subject: [R-SIG-Mac] [External] Re: [External] Xquartz started crashing
 today
In-Reply-To: <DD6A65E0-2A90-4765-8860-676D571B0B1C@kjbeath.com.au>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
 <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>
 <5FBB5DB7-492B-4202-969C-74A87DAE3F09@R-project.org>
 <43891715-D5DB-45E4-B2E3-84BC686306A5@temple.edu>
 <973A1A5E-AB55-4C20-B021-A7CC32AE93E2@temple.edu>
 <DD6A65E0-2A90-4765-8860-676D571B0B1C@kjbeath.com.au>
Message-ID: <BL1PR11MB5239FE3AF5E1ABD510344D29D2A29@BL1PR11MB5239.namprd11.prod.outlook.com>

i think i will bring it to apple this afternoon.
what font does the default graphics device use?

this morning the time is up to 4:26.17 and the bar is still at 1%.

________________________________
From: Ken Beath <ken at kjbeath.com.au>
Sent: Monday, June 6, 2022 1:44:58 AM
To: Richard M. Heiberger <rmh at temple.edu>
Cc: Simon Urbanek <simon.urbanek at R-project.org>; r-sig-mac R <r-sig-mac at r-project.org>
Subject: [External] Re: [R-SIG-Mac] [External] Xquartz started crashing today

Less than 30 seconds on my iMac, so something is very wrong with your fonts or file system.

Ken

On 6 Jun 2022, at 2:34 pm, Richard M. Heiberger <rmh at temple.edu<mailto:rmh at temple.edu>> wrote:

I am in the middle of validating fonts. The machine has been running for about 12 hours, the Activity Monitor CPU
time for the Font Book app is currently at 2:35.15. It keeps going up but very slowly.
The progress bar at the bottom of the Font Validation window has been stuck at about 1% from when it started and hasn't moved.
How long is this task supposed to take?

On Jun 04, 2022, at 00:49, Richard M. Heiberger <rmh at temple.edu<mailto:rmh at temple.edu>> wrote:

Simon,

Thank you for reading this.

I sent what Apple gave me. I had not previously tried reading one of these.
So should I be so lucky in the future, then all you need is everything between
Process: R [
and the next occurence of
Process:
?

and maybe also the up front stuff before the Process: information.

I already rebooted, installed a new R, and a new Xquartz. Those didn't help.
Reinstalling R is probably irrelevant because the problem occurred first in 4.1-arm64,
which is why I upgraded to 4.2-arm64. And it was still there.

This suggests that the problem is with the Fonts. I have never touched them (on purpose).
I will learn a little in the next frew days and see what can be done with validation.
I will let you know. But what made the fonts (if that is indeed the problem) go invalid.
I can't think of anything I did that could be relevant.

Rich


On Jun 03, 2022, at 23:32, Simon Urbanek <simon.urbanek at R-project.org<mailto:simon.urbanek at R-project.org>> wrote:

Rich,

thanks. You sent a log of all processes on your machine, just the R report would have been fine (which is only 18k).

The hang occurs in ATSFontFindFromName() where the system is looking for fonts, so you could try: a) reboot he machine, b) run Font Book (in Applications), c) select all fonts (<Cmd><A>) d) in the menu select File -> Validate Fonts e) select any invalid fonts and remove them f) reboot

If the problem persists try re-installing the R 4.2.0 release if it makes any difference.

Cheers,
Simon


On Jun 4, 2022, at 3:10 AM, Richard M. Heiberger <rmh at temple.edu<mailto:rmh at temple.edu>> wrote:

cover letter for crash report, that also got stopped for being part of a too large email,


I am doing nothing different that I know of.
I start R within emacs using ESS with M-x R


R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

setwd('/Users/rmh/Rwd2/')
plot(1:10)
C-c C-c



## it just sits there, completely frozen and ignores C-c C-c
## then I Force Quit it from the Activity Monitor
Process R terminated: 15 at Thu Jun 2 22:39:39 2022


Do you want the crash report that the Mac offers to send to Apple?

---
I just finished updating all my packages.
So now the crash generation and report.
I entered

plot(1:10)

The rotating beachball appeared. No graph, C-c C-c has no effect..

Force Quit from Activity Monitor and CrashReport attached:


Just for fun, I started R.app and entered plot(1:10)
Same freeze and I Force Quit it again.
I am not bothering with the Crash Report unless you tell me you need it too.

Rich

On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org<mailto:simon.urbanek at r-project.org>> wrote:

Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).

Cheers,
Simon


On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu<mailto:rmh at temple.edu>> wrote:

it makes R unresponsive according to the activity monitor.
The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=0ynIZnv7P%2FxdWyHGUZlx%2FfMFw%2F%2Bc6KdiOaYS1kTGSGM%3D&amp;reserved=0<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&data=05%7C01%7Crmh%40temple.edu%7C4f567e0d985b4e59b2dd08da477fb554%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637900911102555727%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=GIFmRfpnZsQ0lJR%2FUrg7DKJEL%2FTjAQpzskMjGygb4e8%3D&reserved=0>
R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

version
_
platform aarch64-apple-darwin20
arch aarch64
os darwin20
system aarch64, darwin20
status Patched
major 4
minor 2.0
year 2022
month 06
day 02
svn rev 82444
language R
version.string R version 4.2.0 Patched (2022-06-02 r82444)
nickname Vigorous Calisthenics


I have MacOS 12.3 Monterey
MacBook Air (M1,2020)
Chip Apple M1
memory 16GB

The pdf() device works so I I can work, but casually plotting to the screen without explicitly
opening pdf() is not possible.
_______________________________________________
R-SIG-Mac mailing list
R-SIG-Mac at r-project.org<mailto:R-SIG-Mac at r-project.org>
https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&data=05%7C01%7Crmh%40temple.edu%7C4f567e0d985b4e59b2dd08da477fb554%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637900911102555727%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=VMn%2Bi7%2B3Tw7O8qmQk2xOmsir1yC38hfDgHCAq%2FtDR74%3D&reserved=0>

_______________________________________________
R-SIG-Mac mailing list
R-SIG-Mac at r-project.org<mailto:R-SIG-Mac at r-project.org>
https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&data=05%7C01%7Crmh%40temple.edu%7C4f567e0d985b4e59b2dd08da477fb554%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637900911102555727%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=VMn%2Bi7%2B3Tw7O8qmQk2xOmsir1yC38hfDgHCAq%2FtDR74%3D&reserved=0>

_______________________________________________
R-SIG-Mac mailing list
R-SIG-Mac at r-project.org<mailto:R-SIG-Mac at r-project.org>
https://stat.ethz.ch/mailman/listinfo/r-sig-mac<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&data=05%7C01%7Crmh%40temple.edu%7C4f567e0d985b4e59b2dd08da477fb554%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637900911102555727%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=VMn%2Bi7%2B3Tw7O8qmQk2xOmsir1yC38hfDgHCAq%2FtDR74%3D&reserved=0>


	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Tue Jun  7 02:41:23 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 7 Jun 2022 12:41:23 +1200
Subject: [R-SIG-Mac] 
 [External]  [External]  Xquartz started crashing today
In-Reply-To: <BL1PR11MB5239FE3AF5E1ABD510344D29D2A29@BL1PR11MB5239.namprd11.prod.outlook.com>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
 <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>
 <5FBB5DB7-492B-4202-969C-74A87DAE3F09@R-project.org>
 <43891715-D5DB-45E4-B2E3-84BC686306A5@temple.edu>
 <973A1A5E-AB55-4C20-B021-A7CC32AE93E2@temple.edu>
 <DD6A65E0-2A90-4765-8860-676D571B0B1C@kjbeath.com.au>
 <BL1PR11MB5239FE3AF5E1ABD510344D29D2A29@BL1PR11MB5239.namprd11.prod.outlook.com>
Message-ID: <75FA11B9-B820-4DC1-8A79-71EFAE74B180@R-project.org>

Rich,

it looks like the same problem, you have some infinite loop in your fonts. No idea how that can happen, possibly recursive symlink in your font directory?

Cheers.
Simon


> On Jun 7, 2022, at 2:12 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
> 
> i think i will bring it to apple this afternoon.
> what font does the default graphics device use?
> 
> this morning the time is up to 4:26.17 and the bar is still at 1%.
> 
> From: Ken Beath <ken at kjbeath.com.au>
> Sent: Monday, June 6, 2022 1:44:58 AM
> To: Richard M. Heiberger <rmh at temple.edu>
> Cc: Simon Urbanek <simon.urbanek at R-project.org>; r-sig-mac R <r-sig-mac at r-project.org>
> Subject: [External] Re: [R-SIG-Mac] [External] Xquartz started crashing today
>  
> Less than 30 seconds on my iMac, so something is very wrong with your fonts or file system.
> 
> Ken
> 
>> On 6 Jun 2022, at 2:34 pm, Richard M. Heiberger <rmh at temple.edu> wrote:
>> 
>> I am in the middle of validating fonts. The machine has been running for about 12 hours, the Activity Monitor CPU
>> time for the Font Book app is currently at 2:35.15. It keeps going up but very slowly.
>> The progress bar at the bottom of the Font Validation window has been stuck at about 1% from when it started and hasn't moved.
>> How long is this task supposed to take?
>> 
>>> On Jun 04, 2022, at 00:49, Richard M. Heiberger <rmh at temple.edu> wrote:
>>> 
>>> Simon,
>>> 
>>> Thank you for reading this.
>>> 
>>> I sent what Apple gave me. I had not previously tried reading one of these.
>>> So should I be so lucky in the future, then all you need is everything between
>>> Process: R [
>>> and the next occurence of
>>> Process: 
>>> ?
>>> 
>>> and maybe also the up front stuff before the Process: information.
>>> 
>>> I already rebooted, installed a new R, and a new Xquartz. Those didn't help.
>>> Reinstalling R is probably irrelevant because the problem occurred first in 4.1-arm64,
>>> which is why I upgraded to 4.2-arm64. And it was still there.
>>> 
>>> This suggests that the problem is with the Fonts. I have never touched them (on purpose).
>>> I will learn a little in the next frew days and see what can be done with validation.
>>> I will let you know. But what made the fonts (if that is indeed the problem) go invalid.
>>> I can't think of anything I did that could be relevant.
>>> 
>>> Rich
>>> 
>>> 
>>>> On Jun 03, 2022, at 23:32, Simon Urbanek <simon.urbanek at R-project.org> wrote:
>>>> 
>>>> Rich,
>>>> 
>>>> thanks. You sent a log of all processes on your machine, just the R report would have been fine (which is only 18k).
>>>> 
>>>> The hang occurs in ATSFontFindFromName() where the system is looking for fonts, so you could try: a) reboot he machine, b) run Font Book (in Applications), c) select all fonts (<Cmd><A>) d) in the menu select File -> Validate Fonts e) select any invalid fonts and remove them f) reboot
>>>> 
>>>> If the problem persists try re-installing the R 4.2.0 release if it makes any difference.
>>>> 
>>>> Cheers,
>>>> Simon
>>>> 
>>>> 
>>>>> On Jun 4, 2022, at 3:10 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>>> 
>>>>> cover letter for crash report, that also got stopped for being part of a too large email,
>>>>> 
>>>>> 
>>>>> I am doing nothing different that I know of.
>>>>> I start R within emacs using ESS with M-x R
>>>>> 
>>>>> 
>>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>> 
>>>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>>>> You are welcome to redistribute it under certain conditions.
>>>>> Type 'license()' or 'licence()' for distribution details.
>>>>> 
>>>>> Natural language support but running in an English locale
>>>>> 
>>>>> R is a collaborative project with many contributors.
>>>>> Type 'contributors()' for more information and
>>>>> 'citation()' on how to cite R or R packages in publications.
>>>>> 
>>>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>>>> 'help.start()' for an HTML browser interface to help.
>>>>> Type 'q()' to quit R.
>>>>> 
>>>>>> setwd('/Users/rmh/Rwd2/')
>>>>>> plot(1:10)
>>>>>> C-c C-c
>>>>> 
>>>>> 
>>>>> 
>>>>> ## it just sits there, completely frozen and ignores C-c C-c
>>>>> ## then I Force Quit it from the Activity Monitor
>>>>> Process R terminated: 15 at Thu Jun 2 22:39:39 2022
>>>>> 
>>>>> 
>>>>> Do you want the crash report that the Mac offers to send to Apple?
>>>>> 
>>>>> ---
>>>>> I just finished updating all my packages.
>>>>> So now the crash generation and report.
>>>>> I entered
>>>>> 
>>>>> plot(1:10)
>>>>> 
>>>>> The rotating beachball appeared. No graph, C-c C-c has no effect..
>>>>> 
>>>>> Force Quit from Activity Monitor and CrashReport attached:
>>>>> 
>>>>> 
>>>>> Just for fun, I started R.app and entered plot(1:10)
>>>>> Same freeze and I Force Quit it again.
>>>>> I am not bothering with the Crash Report unless you tell me you need it too.
>>>>> 
>>>>> Rich
>>>>> 
>>>>>> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>>>> 
>>>>>> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
>>>>>> 
>>>>>> Cheers,
>>>>>> Simon
>>>>>> 
>>>>>> 
>>>>>>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>>>>> 
>>>>>>> it makes R unresponsive according to the activity monitor.
>>>>>>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
>>>>>>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>>>>>>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=0ynIZnv7P%2FxdWyHGUZlx%2FfMFw%2F%2Bc6KdiOaYS1kTGSGM%3D&amp;reserved=0
>>>>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>>> 
>>>>>>>> version
>>>>>>> _ 
>>>>>>> platform aarch64-apple-darwin20 
>>>>>>> arch aarch64 
>>>>>>> os darwin20 
>>>>>>> system aarch64, darwin20 
>>>>>>> status Patched 
>>>>>>> major 4 
>>>>>>> minor 2.0 
>>>>>>> year 2022 
>>>>>>> month 06 
>>>>>>> day 02 
>>>>>>> svn rev 82444 
>>>>>>> language R 
>>>>>>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>>>>>>> nickname Vigorous Calisthenics 
>>>>>>>> 
>>>>>>> 
>>>>>>> I have MacOS 12.3 Monterey
>>>>>>> MacBook Air (M1,2020)
>>>>>>> Chip Apple M1
>>>>>>> memory 16GB
>>>>>>> 
>>>>>>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>>>>>>> opening pdf() is not possible.
>>>>>>> _______________________________________________
>>>>>>> R-SIG-Mac mailing list
>>>>>>> R-SIG-Mac at r-project.org
>>>>>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7C8cd7ad54610b4d9f187b08da45e59730%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637899149713117770%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=wn8OFMBCBfYJuMsWPLBfVajWnJE%2Fleub9zQKp%2BM%2FQus%3D&amp;reserved=0
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From rmh @end|ng |rom temp|e@edu  Tue Jun  7 03:22:50 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Tue, 7 Jun 2022 01:22:50 +0000
Subject: [R-SIG-Mac] 
 [External]  [External]  Xquartz started crashing today
In-Reply-To: <75FA11B9-B820-4DC1-8A79-71EFAE74B180@R-project.org>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
 <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>
 <5FBB5DB7-492B-4202-969C-74A87DAE3F09@R-project.org>
 <43891715-D5DB-45E4-B2E3-84BC686306A5@temple.edu>
 <973A1A5E-AB55-4C20-B021-A7CC32AE93E2@temple.edu>
 <DD6A65E0-2A90-4765-8860-676D571B0B1C@kjbeath.com.au>
 <BL1PR11MB5239FE3AF5E1ABD510344D29D2A29@BL1PR11MB5239.namprd11.prod.outlook.com>
 <75FA11B9-B820-4DC1-8A79-71EFAE74B180@R-project.org>
Message-ID: <948203F1-BBBD-4259-8150-0F9D06B5F56A@temple.edu>

all the numbers are bigger except for the 1% progress bar which hasn't moved.
I have a genius appt tomorrow.  will let you know what happened after it happens.

> On Jun 06, 2022, at 20:41, Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> Rich,
> 
> it looks like the same problem, you have some infinite loop in your fonts. No idea how that can happen, possibly recursive symlink in your font directory?
> 
> Cheers.
> Simon
> 
> 
>> On Jun 7, 2022, at 2:12 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
>> 
>> i think i will bring it to apple this afternoon.
>> what font does the default graphics device use?
>> 
>> this morning the time is up to 4:26.17 and the bar is still at 1%.
>> 
>> From: Ken Beath <ken at kjbeath.com.au>
>> Sent: Monday, June 6, 2022 1:44:58 AM
>> To: Richard M. Heiberger <rmh at temple.edu>
>> Cc: Simon Urbanek <simon.urbanek at R-project.org>; r-sig-mac R <r-sig-mac at r-project.org>
>> Subject: [External] Re: [R-SIG-Mac] [External] Xquartz started crashing today
>> 
>> Less than 30 seconds on my iMac, so something is very wrong with your fonts or file system.
>> 
>> Ken
>> 
>>> On 6 Jun 2022, at 2:34 pm, Richard M. Heiberger <rmh at temple.edu> wrote:
>>> 
>>> I am in the middle of validating fonts. The machine has been running for about 12 hours, the Activity Monitor CPU
>>> time for the Font Book app is currently at 2:35.15. It keeps going up but very slowly.
>>> The progress bar at the bottom of the Font Validation window has been stuck at about 1% from when it started and hasn't moved.
>>> How long is this task supposed to take?
>>> 
>>>> On Jun 04, 2022, at 00:49, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>> 
>>>> Simon,
>>>> 
>>>> Thank you for reading this.
>>>> 
>>>> I sent what Apple gave me. I had not previously tried reading one of these.
>>>> So should I be so lucky in the future, then all you need is everything between
>>>> Process: R [
>>>> and the next occurence of
>>>> Process: 
>>>> ?
>>>> 
>>>> and maybe also the up front stuff before the Process: information.
>>>> 
>>>> I already rebooted, installed a new R, and a new Xquartz. Those didn't help.
>>>> Reinstalling R is probably irrelevant because the problem occurred first in 4.1-arm64,
>>>> which is why I upgraded to 4.2-arm64. And it was still there.
>>>> 
>>>> This suggests that the problem is with the Fonts. I have never touched them (on purpose).
>>>> I will learn a little in the next frew days and see what can be done with validation.
>>>> I will let you know. But what made the fonts (if that is indeed the problem) go invalid.
>>>> I can't think of anything I did that could be relevant.
>>>> 
>>>> Rich
>>>> 
>>>> 
>>>>> On Jun 03, 2022, at 23:32, Simon Urbanek <simon.urbanek at R-project.org> wrote:
>>>>> 
>>>>> Rich,
>>>>> 
>>>>> thanks. You sent a log of all processes on your machine, just the R report would have been fine (which is only 18k).
>>>>> 
>>>>> The hang occurs in ATSFontFindFromName() where the system is looking for fonts, so you could try: a) reboot he machine, b) run Font Book (in Applications), c) select all fonts (<Cmd><A>) d) in the menu select File -> Validate Fonts e) select any invalid fonts and remove them f) reboot
>>>>> 
>>>>> If the problem persists try re-installing the R 4.2.0 release if it makes any difference.
>>>>> 
>>>>> Cheers,
>>>>> Simon
>>>>> 
>>>>> 
>>>>>> On Jun 4, 2022, at 3:10 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>>>> 
>>>>>> cover letter for crash report, that also got stopped for being part of a too large email,
>>>>>> 
>>>>>> 
>>>>>> I am doing nothing different that I know of.
>>>>>> I start R within emacs using ESS with M-x R
>>>>>> 
>>>>>> 
>>>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>> 
>>>>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>>>>> You are welcome to redistribute it under certain conditions.
>>>>>> Type 'license()' or 'licence()' for distribution details.
>>>>>> 
>>>>>> Natural language support but running in an English locale
>>>>>> 
>>>>>> R is a collaborative project with many contributors.
>>>>>> Type 'contributors()' for more information and
>>>>>> 'citation()' on how to cite R or R packages in publications.
>>>>>> 
>>>>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>>>>> 'help.start()' for an HTML browser interface to help.
>>>>>> Type 'q()' to quit R.
>>>>>> 
>>>>>>> setwd('/Users/rmh/Rwd2/')
>>>>>>> plot(1:10)
>>>>>>> C-c C-c
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> ## it just sits there, completely frozen and ignores C-c C-c
>>>>>> ## then I Force Quit it from the Activity Monitor
>>>>>> Process R terminated: 15 at Thu Jun 2 22:39:39 2022
>>>>>> 
>>>>>> 
>>>>>> Do you want the crash report that the Mac offers to send to Apple?
>>>>>> 
>>>>>> ---
>>>>>> I just finished updating all my packages.
>>>>>> So now the crash generation and report.
>>>>>> I entered
>>>>>> 
>>>>>> plot(1:10)
>>>>>> 
>>>>>> The rotating beachball appeared. No graph, C-c C-c has no effect..
>>>>>> 
>>>>>> Force Quit from Activity Monitor and CrashReport attached:
>>>>>> 
>>>>>> 
>>>>>> Just for fun, I started R.app and entered plot(1:10)
>>>>>> Same freeze and I Force Quit it again.
>>>>>> I am not bothering with the Crash Report unless you tell me you need it too.
>>>>>> 
>>>>>> Rich
>>>>>> 
>>>>>>> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>>>>> 
>>>>>>> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
>>>>>>> 
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>> 
>>>>>>> 
>>>>>>>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>>>>>> 
>>>>>>>> it makes R unresponsive according to the activity monitor.
>>>>>>>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
>>>>>>>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>>>>>>>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7Cba5d30f1cc9b479ebf7e08da481e755d%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637901592942888593%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=e2ElYPKeUg%2BWkjWsqIKw0dw4moPBtiWrb%2FqNZngRJZw%3D&amp;reserved=0
>>>>>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>>>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>>>> 
>>>>>>>>> version
>>>>>>>> _ 
>>>>>>>> platform aarch64-apple-darwin20 
>>>>>>>> arch aarch64 
>>>>>>>> os darwin20 
>>>>>>>> system aarch64, darwin20 
>>>>>>>> status Patched 
>>>>>>>> major 4 
>>>>>>>> minor 2.0 
>>>>>>>> year 2022 
>>>>>>>> month 06 
>>>>>>>> day 02 
>>>>>>>> svn rev 82444 
>>>>>>>> language R 
>>>>>>>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>>>>>>>> nickname Vigorous Calisthenics 
>>>>>>>>> 
>>>>>>>> 
>>>>>>>> I have MacOS 12.3 Monterey
>>>>>>>> MacBook Air (M1,2020)
>>>>>>>> Chip Apple M1
>>>>>>>> memory 16GB
>>>>>>>> 
>>>>>>>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>>>>>>>> opening pdf() is not possible.
>>>>>>>> _______________________________________________
>>>>>>>> R-SIG-Mac mailing list
>>>>>>>> R-SIG-Mac at r-project.org
>>>>>>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Cba5d30f1cc9b479ebf7e08da481e755d%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637901592942888593%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=ivQxo11WLlsE71Y50wuID4kYt8Li5YukAp9AmN0Z%2B3A%3D&amp;reserved=0
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Cba5d30f1cc9b479ebf7e08da481e755d%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637901592942888593%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=ivQxo11WLlsE71Y50wuID4kYt8Li5YukAp9AmN0Z%2B3A%3D&amp;reserved=0
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Cba5d30f1cc9b479ebf7e08da481e755d%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637901592942888593%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=ivQxo11WLlsE71Y50wuID4kYt8Li5YukAp9AmN0Z%2B3A%3D&amp;reserved=0


From rmh @end|ng |rom temp|e@edu  Tue Jun  7 20:39:57 2022
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Tue, 7 Jun 2022 18:39:57 +0000
Subject: [R-SIG-Mac] 
 [External]  [External]  Xquartz started crashing today
In-Reply-To: <75FA11B9-B820-4DC1-8A79-71EFAE74B180@R-project.org>
References: <22FF3C40-8E18-476D-9576-42A05AB81145@temple.edu>
 <5D74CEAB-EA0C-44EB-A2B6-A203C937BBDF@R-project.org>
 <C1D798ED-9460-425B-94F3-5E261D92448D@temple.edu>
 <5FBB5DB7-492B-4202-969C-74A87DAE3F09@R-project.org>
 <43891715-D5DB-45E4-B2E3-84BC686306A5@temple.edu>
 <973A1A5E-AB55-4C20-B021-A7CC32AE93E2@temple.edu>
 <DD6A65E0-2A90-4765-8860-676D571B0B1C@kjbeath.com.au>
 <BL1PR11MB5239FE3AF5E1ABD510344D29D2A29@BL1PR11MB5239.namprd11.prod.outlook.com>
 <75FA11B9-B820-4DC1-8A79-71EFAE74B180@R-project.org>
Message-ID: <04CD1305-7460-494C-8788-FF668F91DE4B@temple.edu>

Back from the Genius Bar.
Shawn did a system check and all is ok.
then we reset the fonts, and it fixed the problem.  No clue as to which font went bad or why.

Rich

> On Jun 06, 2022, at 20:41, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Rich,
> 
> it looks like the same problem, you have some infinite loop in your fonts. No idea how that can happen, possibly recursive symlink in your font directory?
> 
> Cheers.
> Simon
> 
> 
>> On Jun 7, 2022, at 2:12 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
>> 
>> i think i will bring it to apple this afternoon.
>> what font does the default graphics device use?
>> 
>> this morning the time is up to 4:26.17 and the bar is still at 1%.
>> 
>> From: Ken Beath <ken at kjbeath.com.au>
>> Sent: Monday, June 6, 2022 1:44:58 AM
>> To: Richard M. Heiberger <rmh at temple.edu>
>> Cc: Simon Urbanek <simon.urbanek at R-project.org>; r-sig-mac R <r-sig-mac at r-project.org>
>> Subject: [External] Re: [R-SIG-Mac] [External] Xquartz started crashing today
>> 
>> Less than 30 seconds on my iMac, so something is very wrong with your fonts or file system.
>> 
>> Ken
>> 
>>> On 6 Jun 2022, at 2:34 pm, Richard M. Heiberger <rmh at temple.edu> wrote:
>>> 
>>> I am in the middle of validating fonts. The machine has been running for about 12 hours, the Activity Monitor CPU
>>> time for the Font Book app is currently at 2:35.15. It keeps going up but very slowly.
>>> The progress bar at the bottom of the Font Validation window has been stuck at about 1% from when it started and hasn't moved.
>>> How long is this task supposed to take?
>>> 
>>>> On Jun 04, 2022, at 00:49, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>> 
>>>> Simon,
>>>> 
>>>> Thank you for reading this.
>>>> 
>>>> I sent what Apple gave me. I had not previously tried reading one of these.
>>>> So should I be so lucky in the future, then all you need is everything between
>>>> Process: R [
>>>> and the next occurence of
>>>> Process: 
>>>> ?
>>>> 
>>>> and maybe also the up front stuff before the Process: information.
>>>> 
>>>> I already rebooted, installed a new R, and a new Xquartz. Those didn't help.
>>>> Reinstalling R is probably irrelevant because the problem occurred first in 4.1-arm64,
>>>> which is why I upgraded to 4.2-arm64. And it was still there.
>>>> 
>>>> This suggests that the problem is with the Fonts. I have never touched them (on purpose).
>>>> I will learn a little in the next frew days and see what can be done with validation.
>>>> I will let you know. But what made the fonts (if that is indeed the problem) go invalid.
>>>> I can't think of anything I did that could be relevant.
>>>> 
>>>> Rich
>>>> 
>>>> 
>>>>> On Jun 03, 2022, at 23:32, Simon Urbanek <simon.urbanek at R-project.org> wrote:
>>>>> 
>>>>> Rich,
>>>>> 
>>>>> thanks. You sent a log of all processes on your machine, just the R report would have been fine (which is only 18k).
>>>>> 
>>>>> The hang occurs in ATSFontFindFromName() where the system is looking for fonts, so you could try: a) reboot he machine, b) run Font Book (in Applications), c) select all fonts (<Cmd><A>) d) in the menu select File -> Validate Fonts e) select any invalid fonts and remove them f) reboot
>>>>> 
>>>>> If the problem persists try re-installing the R 4.2.0 release if it makes any difference.
>>>>> 
>>>>> Cheers,
>>>>> Simon
>>>>> 
>>>>> 
>>>>>> On Jun 4, 2022, at 3:10 AM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>>>> 
>>>>>> cover letter for crash report, that also got stopped for being part of a too large email,
>>>>>> 
>>>>>> 
>>>>>> I am doing nothing different that I know of.
>>>>>> I start R within emacs using ESS with M-x R
>>>>>> 
>>>>>> 
>>>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>> 
>>>>>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>>>>>> You are welcome to redistribute it under certain conditions.
>>>>>> Type 'license()' or 'licence()' for distribution details.
>>>>>> 
>>>>>> Natural language support but running in an English locale
>>>>>> 
>>>>>> R is a collaborative project with many contributors.
>>>>>> Type 'contributors()' for more information and
>>>>>> 'citation()' on how to cite R or R packages in publications.
>>>>>> 
>>>>>> Type 'demo()' for some demos, 'help()' for on-line help, or
>>>>>> 'help.start()' for an HTML browser interface to help.
>>>>>> Type 'q()' to quit R.
>>>>>> 
>>>>>>> setwd('/Users/rmh/Rwd2/')
>>>>>>> plot(1:10)
>>>>>>> C-c C-c
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> ## it just sits there, completely frozen and ignores C-c C-c
>>>>>> ## then I Force Quit it from the Activity Monitor
>>>>>> Process R terminated: 15 at Thu Jun 2 22:39:39 2022
>>>>>> 
>>>>>> 
>>>>>> Do you want the crash report that the Mac offers to send to Apple?
>>>>>> 
>>>>>> ---
>>>>>> I just finished updating all my packages.
>>>>>> So now the crash generation and report.
>>>>>> I entered
>>>>>> 
>>>>>> plot(1:10)
>>>>>> 
>>>>>> The rotating beachball appeared. No graph, C-c C-c has no effect..
>>>>>> 
>>>>>> Force Quit from Activity Monitor and CrashReport attached:
>>>>>> 
>>>>>> 
>>>>>> Just for fun, I started R.app and entered plot(1:10)
>>>>>> Same freeze and I Force Quit it again.
>>>>>> I am not bothering with the Crash Report unless you tell me you need it too.
>>>>>> 
>>>>>> Rich
>>>>>> 
>>>>>>> On Jun 02, 2022, at 23:02, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>>>>> 
>>>>>>> Regular R does not use X11 by default, so what exactly are you doing? You'll have to provide more details, the exact way you run R, code to reproduce and where it hangs, ideally with a crash report (which macOS creates on hangs as well).
>>>>>>> 
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>> 
>>>>>>> 
>>>>>>>> On 3/06/2022, at 2:51 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>>>>>>>> 
>>>>>>>> it makes R unresponsive according to the activity monitor.
>>>>>>>> The only repair I have found is to ForceQuit R from the Activity Monitor, and start fresh R session.
>>>>>>>> I downloaded a fresh copy of XQuartz-2.8.1.dmg and have the same negative results.
>>>>>>>> I downloaded a fresh R from https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=05%7C01%7Crmh%40temple.edu%7Cba5d30f1cc9b479ebf7e08da481e755d%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637901592942888593%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=e2ElYPKeUg%2BWkjWsqIKw0dw4moPBtiWrb%2FqNZngRJZw%3D&amp;reserved=0
>>>>>>>> R version 4.2.0 Patched (2022-06-02 r82444) -- "Vigorous Calisthenics"
>>>>>>>> Copyright (C) 2022 The R Foundation for Statistical Computing
>>>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>>>> 
>>>>>>>>> version
>>>>>>>> _ 
>>>>>>>> platform aarch64-apple-darwin20 
>>>>>>>> arch aarch64 
>>>>>>>> os darwin20 
>>>>>>>> system aarch64, darwin20 
>>>>>>>> status Patched 
>>>>>>>> major 4 
>>>>>>>> minor 2.0 
>>>>>>>> year 2022 
>>>>>>>> month 06 
>>>>>>>> day 02 
>>>>>>>> svn rev 82444 
>>>>>>>> language R 
>>>>>>>> version.string R version 4.2.0 Patched (2022-06-02 r82444)
>>>>>>>> nickname Vigorous Calisthenics 
>>>>>>>>> 
>>>>>>>> 
>>>>>>>> I have MacOS 12.3 Monterey
>>>>>>>> MacBook Air (M1,2020)
>>>>>>>> Chip Apple M1
>>>>>>>> memory 16GB
>>>>>>>> 
>>>>>>>> The pdf() device works so I I can work, but casually plotting to the screen without explicitly
>>>>>>>> opening pdf() is not possible.
>>>>>>>> _______________________________________________
>>>>>>>> R-SIG-Mac mailing list
>>>>>>>> R-SIG-Mac at r-project.org
>>>>>>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Cba5d30f1cc9b479ebf7e08da481e755d%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637901592942888593%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=ivQxo11WLlsE71Y50wuID4kYt8Li5YukAp9AmN0Z%2B3A%3D&amp;reserved=0
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Cba5d30f1cc9b479ebf7e08da481e755d%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637901592942888593%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=ivQxo11WLlsE71Y50wuID4kYt8Li5YukAp9AmN0Z%2B3A%3D&amp;reserved=0
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=05%7C01%7Crmh%40temple.edu%7Cba5d30f1cc9b479ebf7e08da481e755d%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637901592942888593%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=ivQxo11WLlsE71Y50wuID4kYt8Li5YukAp9AmN0Z%2B3A%3D&amp;reserved=0


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Jun  8 11:05:18 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 8 Jun 2022 11:05:18 +0200
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <CAFDcVCTQ7zWV8V4JbttWXre-fkYMMUrOxrF6hzmnXqnFsLgPUQ@mail.gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
 <5A93DC6A-3816-4E3D-A4BC-A5B707C10827@gmail.com>
 <0477bfbd-d704-4095-14dd-f0987c8fcd98@gmail.com>
 <CAFDcVCTQ7zWV8V4JbttWXre-fkYMMUrOxrF6hzmnXqnFsLgPUQ@mail.gmail.com>
Message-ID: <25248.26190.135458.746422@stat.math.ethz.ch>

>>>>> Henrik Bengtsson 
>>>>>     on Fri, 3 Jun 2022 10:45:26 -0700 writes:

    > Hi Duncan, thank you for the follow-up.
    >> You didn't address the issue of having different versions of a package
    >> installed in the system library versus the personal library, an issue
    >> that causes lots of confusion for unsophisticated users.

    > I think this is a problem that applies to all operating systems and is
    > not specific to macOS. Whatever the solution, or best practices, is
    > for that, I think it should be addressed uniformly across platforms.
    > I have, some experience and thoughts around this too, but wouldn't it
    > be better if we move that discussion to R-devel?

    > /Henrik

I (as lurker) agree.
The problem and solutions definitely also apply (even more)
to other "Unix derivatives" than just macOS, notably to Linux
where it is probably much more common to have multi-user systems
than on the Mac ((but what do I know about Macs?)).

Martin

    > On Fri, Jun 3, 2022 at 10:38 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
    >> 
    >> On 03/06/2022 1:21 p.m., Peter Dalgaard wrote:
    >> > Eek! No, just no...
    >> >
    >> > That way users can't upgrade a package for himself on a multi-user system if the sysop won't do it for everyone.
    >> 
    >> "by default"
    >> 
    >> Duncan Murdoch
    >> 
    >> >
    >> > - pd
    >> >
    >> >> On 3 Jun 2022, at 19:01 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
    >> >>
    >> >> Hi Henrik.
    >> >>
    >> >> You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
    >> >>
    >> >> A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
    >> >>
    >> >> Duncan Murdoch
    >> >>
    >> >> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
    >> >>> I see two fairly big problems with users installing R packages to
    >> >>> .Library by default.  One is related to package checking and CRAN, and
    >> >>> one is related to translation of expectations when moving between
    >> >>> operating systems (as Patrick already pointed out).  At the end, I'll
    >> >>> also argue that R_LIBS_SITE exists for those who wish to maintain
    >> >>> site-wide R package libraries to be shared among users, which is
    >> >>> better than using .Library for this.
    >> >>> # R CMD check
    >> >>> When you check a package with 'R CMD check --as-cran', or, with
    >> >>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
    >> >>> are run in a sandbox where only declared package dependencies and any
    >> >>> packages in the system package library (= .Library) are on the library
    >> >>> path (= .libPaths()), e.g.
    >> >>> print(.libPaths())
    >> >>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
    >> >>> [2] "/path/to/R-4.2.0/lib/R/library"
    >> >>> What's in the user's library (= R_LIBS_USER) or in the site library (=
    >> >>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
    >> >>> is very valuable since it helps to identify undeclared package
    >> >>> dependencies.
    >> >>> **The default behavior on macOS discussed here, where R packages are
    >> >>> installed to .Library, breaks this.**  Developers with non-base R
    >> >>> packages in .Library will not benefit from the 'R CMD check --as-cran'
    >> >>> checks for undeclared packages. This increases the risk of them not
    >> >>> being aware of the problem of undeclared packages, which is a
    >> >>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
    >> >>> when it comes to what should be listed under Suggests: or not.
    >> >>> BTW, this makes me wonder how many macOS developers notice this
    >> >>> problem only as they submit to CRAN, and have to resubmit. Also, this
    >> >>> issue might add extra work to the CRAN Team, e.g. spending time
    >> >>> locking at and responding to possible false positives, handling more
    >> >>> emails, and handling more re-submissions.
    >> >>> # Social expectations
    >> >>> The second problem with the current default macOS behavior is when
    >> >>> people hop between systems and operating systems.  Particularly, a
    >> >>> macOS user coming to Unix or Windows does not immediately understand
    >> >>> how and where R packages are installed.  They get a prompt about a
    >> >>> "personal library" and might choose to decline because it's not what
    >> >>> they're used to seeing.  Then they might end up in the Stack Overflow
    >> >>> cut'n'paste rabbit hole, where they find some instructions on setting
    >> >>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
    >> >>> until they upgrade R next year, when they start getting weird warnings
    >> >>> or errors of some packages not working that they slowly start to
    >> >>> accept as the normal behavior of R. I see this problem on large HPC
    >> >>> environments where I help out thousands of HPC users. Also, reading
    >> >>> various support forums out there, I think this is a real problem. It's
    >> >>> only recently, thanks to Patrick, I learned about this rather odd
    >> >>> macOS behavior, and I do think it is a cause for confusion and
    >> >>> miscommunication.  Another problem with different OS behaviors is that
    >> >>> it complicated documentation and instructions.  I strongly believe, it
    >> >>> would be beneficial to the R community if we all have the same
    >> >>> experience and expectations regardless of OS.
    >> >>> I believe the above problems are best addressed by changing the
    >> >>> *default* settings on macOS so that it is *not* possible to install to
    >> >>> .Library, and instead require a user to install to their personal
    >> >>> package library.  Advanced users who prefer to install to .Library,
    >> >>> can still configure R, or .Library, to do so.
    >> >>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
    >> >>> avoid setting the "admin" group, seems like a simple solution that
    >> >>> would help harmonize the user experience of R.
    >> >>> # Maintaining a site-wide package library
    >> >>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
    >> >>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
    >> >>> and I argue it is better suited for this than using .Library.  It also
    >> >>> has the benefit of *not* conflicting with the
    >> >>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
    >> >>> users to opt out from centrally installed packages (by setting
    >> >>> R_LIBS_SITE=""), which they cannot do if they're installed in the
    >> >>> system library.
    >> >>> All the best,
    >> >>> Henrik
    >> >>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
    >> >>> even if I install R to my personal home folder; it simply lowers the
    >> >>> risk for side effects when developing and troubleshooting.
    >> >>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
    >> >>> <patrick.schratz at gmail.com> wrote:
    >> >>>>
    >> >>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
    >> >>>>
    >> >>>> What would be the best way for this idea/proposal going forward?
    >> >>>>
    >> >>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
    >> >>>> Or https://github.com/r-devel/rcontribution?
    >> >>>>
    >> >>>> Best,
    >> >>>> Patrick_______________________________________________
    >> >>>> R-SIG-Mac mailing list
    >> >>>> R-SIG-Mac at r-project.org
    >> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    >> >>> _______________________________________________
    >> >>> R-SIG-Mac mailing list
    >> >>> R-SIG-Mac at r-project.org
    >> >>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    >> >>
    >> >> _______________________________________________
    >> >> R-SIG-Mac mailing list
    >> >> R-SIG-Mac at r-project.org
    >> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    >> >
    >>


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jun  8 11:10:45 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 8 Jun 2022 05:10:45 -0400
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <25248.26190.135458.746422@stat.math.ethz.ch>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <e177d738-7210-85f5-6164-3d75ed637686@gmail.com>
 <5A93DC6A-3816-4E3D-A4BC-A5B707C10827@gmail.com>
 <0477bfbd-d704-4095-14dd-f0987c8fcd98@gmail.com>
 <CAFDcVCTQ7zWV8V4JbttWXre-fkYMMUrOxrF6hzmnXqnFsLgPUQ@mail.gmail.com>
 <25248.26190.135458.746422@stat.math.ethz.ch>
Message-ID: <759bea92-aa20-14fe-7788-fb93857819ee@gmail.com>

On 08/06/2022 5:05 a.m., Martin Maechler wrote:
>>>>>> Henrik Bengtsson
>>>>>>      on Fri, 3 Jun 2022 10:45:26 -0700 writes:
> 
>      > Hi Duncan, thank you for the follow-up.
>      >> You didn't address the issue of having different versions of a package
>      >> installed in the system library versus the personal library, an issue
>      >> that causes lots of confusion for unsophisticated users.
> 
>      > I think this is a problem that applies to all operating systems and is
>      > not specific to macOS. Whatever the solution, or best practices, is
>      > for that, I think it should be addressed uniformly across platforms.
>      > I have, some experience and thoughts around this too, but wouldn't it
>      > be better if we move that discussion to R-devel?
> 
>      > /Henrik
> 
> I (as lurker) agree.
> The problem and solutions definitely also apply (even more)
> to other "Unix derivatives" than just macOS, notably to Linux
> where it is probably much more common to have multi-user systems
> than on the Mac ((but what do I know about Macs?)).

I've got no objection to moving the multi-user discussion to R-devel. 
This thread is about single user systems.

Duncan Murdoch

> 
> Martin
> 
>      > On Fri, Jun 3, 2022 at 10:38 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>      >>
>      >> On 03/06/2022 1:21 p.m., Peter Dalgaard wrote:
>      >> > Eek! No, just no...
>      >> >
>      >> > That way users can't upgrade a package for himself on a multi-user system if the sysop won't do it for everyone.
>      >>
>      >> "by default"
>      >>
>      >> Duncan Murdoch
>      >>
>      >> >
>      >> > - pd
>      >> >
>      >> >> On 3 Jun 2022, at 19:01 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>      >> >>
>      >> >> Hi Henrik.
>      >> >>
>      >> >> You didn't address the issue of having different versions of a package installed in the system library versus the personal library, an issue that causes lots of confusion for unsophisticated users.
>      >> >>
>      >> >> A possible solution for this is for R by default to refuse to install a package in the personal library if it is already installed in the system library.
>      >> >>
>      >> >> Duncan Murdoch
>      >> >>
>      >> >> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
>      >> >>> I see two fairly big problems with users installing R packages to
>      >> >>> .Library by default.  One is related to package checking and CRAN, and
>      >> >>> one is related to translation of expectations when moving between
>      >> >>> operating systems (as Patrick already pointed out).  At the end, I'll
>      >> >>> also argue that R_LIBS_SITE exists for those who wish to maintain
>      >> >>> site-wide R package libraries to be shared among users, which is
>      >> >>> better than using .Library for this.
>      >> >>> # R CMD check
>      >> >>> When you check a package with 'R CMD check --as-cran', or, with
>      >> >>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
>      >> >>> are run in a sandbox where only declared package dependencies and any
>      >> >>> packages in the system package library (= .Library) are on the library
>      >> >>> path (= .libPaths()), e.g.
>      >> >>> print(.libPaths())
>      >> >>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
>      >> >>> [2] "/path/to/R-4.2.0/lib/R/library"
>      >> >>> What's in the user's library (= R_LIBS_USER) or in the site library (=
>      >> >>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
>      >> >>> is very valuable since it helps to identify undeclared package
>      >> >>> dependencies.
>      >> >>> **The default behavior on macOS discussed here, where R packages are
>      >> >>> installed to .Library, breaks this.**  Developers with non-base R
>      >> >>> packages in .Library will not benefit from the 'R CMD check --as-cran'
>      >> >>> checks for undeclared packages. This increases the risk of them not
>      >> >>> being aware of the problem of undeclared packages, which is a
>      >> >>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
>      >> >>> when it comes to what should be listed under Suggests: or not.
>      >> >>> BTW, this makes me wonder how many macOS developers notice this
>      >> >>> problem only as they submit to CRAN, and have to resubmit. Also, this
>      >> >>> issue might add extra work to the CRAN Team, e.g. spending time
>      >> >>> locking at and responding to possible false positives, handling more
>      >> >>> emails, and handling more re-submissions.
>      >> >>> # Social expectations
>      >> >>> The second problem with the current default macOS behavior is when
>      >> >>> people hop between systems and operating systems.  Particularly, a
>      >> >>> macOS user coming to Unix or Windows does not immediately understand
>      >> >>> how and where R packages are installed.  They get a prompt about a
>      >> >>> "personal library" and might choose to decline because it's not what
>      >> >>> they're used to seeing.  Then they might end up in the Stack Overflow
>      >> >>> cut'n'paste rabbit hole, where they find some instructions on setting
>      >> >>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
>      >> >>> until they upgrade R next year, when they start getting weird warnings
>      >> >>> or errors of some packages not working that they slowly start to
>      >> >>> accept as the normal behavior of R. I see this problem on large HPC
>      >> >>> environments where I help out thousands of HPC users. Also, reading
>      >> >>> various support forums out there, I think this is a real problem. It's
>      >> >>> only recently, thanks to Patrick, I learned about this rather odd
>      >> >>> macOS behavior, and I do think it is a cause for confusion and
>      >> >>> miscommunication.  Another problem with different OS behaviors is that
>      >> >>> it complicated documentation and instructions.  I strongly believe, it
>      >> >>> would be beneficial to the R community if we all have the same
>      >> >>> experience and expectations regardless of OS.
>      >> >>> I believe the above problems are best addressed by changing the
>      >> >>> *default* settings on macOS so that it is *not* possible to install to
>      >> >>> .Library, and instead require a user to install to their personal
>      >> >>> package library.  Advanced users who prefer to install to .Library,
>      >> >>> can still configure R, or .Library, to do so.
>      >> >>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
>      >> >>> avoid setting the "admin" group, seems like a simple solution that
>      >> >>> would help harmonize the user experience of R.
>      >> >>> # Maintaining a site-wide package library
>      >> >>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
>      >> >>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
>      >> >>> and I argue it is better suited for this than using .Library.  It also
>      >> >>> has the benefit of *not* conflicting with the
>      >> >>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
>      >> >>> users to opt out from centrally installed packages (by setting
>      >> >>> R_LIBS_SITE=""), which they cannot do if they're installed in the
>      >> >>> system library.
>      >> >>> All the best,
>      >> >>> Henrik
>      >> >>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
>      >> >>> even if I install R to my personal home folder; it simply lowers the
>      >> >>> risk for side effects when developing and troubleshooting.
>      >> >>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
>      >> >>> <patrick.schratz at gmail.com> wrote:
>      >> >>>>
>      >> >>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>      >> >>>>
>      >> >>>> What would be the best way for this idea/proposal going forward?
>      >> >>>>
>      >> >>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>      >> >>>> Or https://github.com/r-devel/rcontribution?
>      >> >>>>
>      >> >>>> Best,
>      >> >>>> Patrick_______________________________________________
>      >> >>>> R-SIG-Mac mailing list
>      >> >>>> R-SIG-Mac at r-project.org
>      >> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>      >> >>> _______________________________________________
>      >> >>> R-SIG-Mac mailing list
>      >> >>> R-SIG-Mac at r-project.org
>      >> >>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>      >> >>
>      >> >> _______________________________________________
>      >> >> R-SIG-Mac mailing list
>      >> >> R-SIG-Mac at r-project.org
>      >> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>      >> >
>      >>
> 
> 
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jun  8 14:21:13 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 8 Jun 2022 08:21:13 -0400
Subject: [R-SIG-Mac] dSYM files in M1Mac install?
Message-ID: <dfc95573-a45e-afa7-49f6-dc84bde2d02e@gmail.com>

The CRAN checks for rgl show that it has a huge libs directory.  E.g.

https://www.r-project.org/nosvn/R.check/r-release-macos-arm64/rgl-00check.html

contains this:

checking installed package size ... NOTE
   installed size is 25.6Mb
   sub-directories of 1Mb or more:
     doc 1.0Mb
     fonts 1.5Mb
     libs 20.0Mb

I don't have an M1 mac, but I used https://mac.r-project.org/macbuilder 
to build, and found that the rgl.so file that gets installed is a 
reasonable size (bigger than on my Intel Mac, but only 2.7M), but 
there's also a subdir rgl.so.dSYM which is really large.  It contains a 
file rgl.so.dSYM/Contents/Resources/DWARF/rgl.so which is about 17M.

I think that is debugging symbol information.  Is it necessary to 
install it on the M1 Mac?  If not, is there something in rgl's 
configuration that I should change, or is it part of the system 
configuration on CRAN and macbuilder?

Duncan Murdoch


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Jun  8 18:16:46 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 8 Jun 2022 18:16:46 +0200
Subject: [R-SIG-Mac] tcltk causes help() to hang in R 4.2.0 on macOS
In-Reply-To: <eab8b8ff-9619-8b59-27ee-4779875fe8c4@mcmaster.ca>
References: <753c64bf-4dbc-0d5c-9684-a9116217d9c8@mcmaster.ca>
 <6FF22407-8E58-4644-9B62-42472D859C7D@R-project.org>
 <514B9903-9154-417E-8B97-185DAA1C891F@R-project.org>
 <eab8b8ff-9619-8b59-27ee-4779875fe8c4@mcmaster.ca>
Message-ID: <2f8b7f43-0391-2758-1b8b-3f5cf5778df1@gmail.com>

For reference, this problem is not macOS specific, it also exists on 
Linux (but not on Windows which use a different code path) and the core 
problem is how to prevent re-entrant execution of R event handlers when 
run from the R/tcltk event loop, itself running from an R event handler.

R-patched now contains a defensive work-around from Simon.

We have added a more efficient and cleaner fix to R-devel, but there is 
some risk of breakage: this form is "the documented way" but didn't work 
on some systems ~22 years ago. So it would be great if people using 
Tcl/Tk in R on Unix, and particularly those with rarely used window 
managers, could test their applications or the tcltk package demos and 
report any issues well before the next release.

Thanks
Tomas

On 5/30/22 01:27, John Fox wrote:
> Dear Simon,
>
> Thank you for addressing this problem so promptly.
>
> Best,
> ?John
>
> On 2022-05-29 6:51 p.m., Simon Urbanek wrote:
>> Actually, I take back the reference to the commit - the deadlock is 
>> true, and removing the line is a work-around, but r78421 was not 
>> necessarily the regression. The issue seems to be caused by a 
>> combination of Tcl/Tk and KaTeX (the latter causes the browser to 
>> issue multiple parallel http-requests and the former causes the 
>> deadlock in its event loop) which has not been there in earlier R 
>> versions.
>>
>> Cheers,
>> Simon
>>
>>
>>> On 30/05/2022, at 10:09 AM, Simon Urbanek 
>>> <simon.urbanek at r-project.org> wrote:
>>>
>>> John,
>>>
>>> thanks, this is a regression caused by r78421 (deadlock when TclTk's 
>>> event loop is called in http processing). Removing L875 in 
>>> src/modules/internet/Rhttpd.c restores the previous behavior, but 
>>> the underlying problem is more complex and will require more 
>>> investigation.
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>> On 29/05/2022, at 5:36 AM, John Fox <jfox at mcmaster.ca> wrote:
>>>>
>>>> Dear R-sig-mac list members,
>>>>
>>>> I've discovered that loading the tcltk package apparently causes R 
>>>> 4.2.0 (including the current patched version) to hang on an M1 Mac.
>>>>
>>>> Try, e.g.,
>>>>
>>>> library("tcltk")
>>>> help("lm")
>>>>
>>>> My session info:
>>>>
>>>> ------- snip -------
>>>>
>>>>> sessionInfo()
>>>> R version 4.2.0 Patched (2022-05-28 r82413)
>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>> Running under: macOS Monterey 12.3.1
>>>>
>>>> Matrix products: default
>>>> BLAS: 
>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib
>>>> LAPACK: 
>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib
>>>>
>>>> locale:
>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>>
>>>> attached base packages:
>>>> [1] tcltk???? stats???? graphics? grDevices utils datasets? methods
>>>> [8] base
>>>>
>>>> loaded via a namespace (and not attached):
>>>> [1] compiler_4.2.0
>>>>
>>>> ------- snip -------
>>>>
>>>> Some additional details: The problem occurs both in the R macOS 
>>>> console and, if options(help_type="html"), when R is run in a 
>>>> terminal window on macOS, but not when options(help_type="text"). 
>>>> The former is the default in the Mac R console, the latter when R 
>>>> is run in a terminal.
>>>>
>>>> The problem is apparently new in R 4.2.0 -- it doesn't, e.g., occur 
>>>> in R 4.1.3. My apologies for not turning it up earlier.
>>>>
>>>> I discovered the problem when accessing help in the Rcmdr GUI, 
>>>> which uses tcltk, caused R to hang.
>>>>
>>>> Has anyone else encountered this problem?
>>>>
>>>> Best,
>>>> John
>>>> -- 
>>>> John Fox, Professor Emeritus
>>>> McMaster University
>>>> Hamilton, Ontario, Canada
>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>
>>>
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>
>>


From j|ox @end|ng |rom mcm@@ter@c@  Wed Jun  8 18:36:06 2022
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Wed, 8 Jun 2022 12:36:06 -0400
Subject: [R-SIG-Mac] tcltk causes help() to hang in R 4.2.0 on macOS
In-Reply-To: <2f8b7f43-0391-2758-1b8b-3f5cf5778df1@gmail.com>
References: <753c64bf-4dbc-0d5c-9684-a9116217d9c8@mcmaster.ca>
 <6FF22407-8E58-4644-9B62-42472D859C7D@R-project.org>
 <514B9903-9154-417E-8B97-185DAA1C891F@R-project.org>
 <eab8b8ff-9619-8b59-27ee-4779875fe8c4@mcmaster.ca>
 <2f8b7f43-0391-2758-1b8b-3f5cf5778df1@gmail.com>
Message-ID: <ff3427ea-55b6-ed5a-2b26-e9a0b8171569@mcmaster.ca>

Dear Thomas,

Thanks for this additional information.

I added some of my own defensive code to the development version of the 
Rcmdr package, to set the "help_type" option to "text" for macOS. I'll 
modify that to all non-Windows platforms, and also include this in the 
CRAN version of the package.

I currently test on macOS and Windows systems but when I have a chance 
will get a Linux system working as well.

Best,
  John

On 2022-06-08 12:16 p.m., Tomas Kalibera wrote:
> For reference, this problem is not macOS specific, it also exists on 
> Linux (but not on Windows which use a different code path) and the core 
> problem is how to prevent re-entrant execution of R event handlers when 
> run from the R/tcltk event loop, itself running from an R event handler.
> 
> R-patched now contains a defensive work-around from Simon.
> 
> We have added a more efficient and cleaner fix to R-devel, but there is 
> some risk of breakage: this form is "the documented way" but didn't work 
> on some systems ~22 years ago. So it would be great if people using 
> Tcl/Tk in R on Unix, and particularly those with rarely used window 
> managers, could test their applications or the tcltk package demos and 
> report any issues well before the next release.
> 
> Thanks
> Tomas
> 
> On 5/30/22 01:27, John Fox wrote:
>> Dear Simon,
>>
>> Thank you for addressing this problem so promptly.
>>
>> Best,
>> ?John
>>
>> On 2022-05-29 6:51 p.m., Simon Urbanek wrote:
>>> Actually, I take back the reference to the commit - the deadlock is 
>>> true, and removing the line is a work-around, but r78421 was not 
>>> necessarily the regression. The issue seems to be caused by a 
>>> combination of Tcl/Tk and KaTeX (the latter causes the browser to 
>>> issue multiple parallel http-requests and the former causes the 
>>> deadlock in its event loop) which has not been there in earlier R 
>>> versions.
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>> On 30/05/2022, at 10:09 AM, Simon Urbanek 
>>>> <simon.urbanek at r-project.org> wrote:
>>>>
>>>> John,
>>>>
>>>> thanks, this is a regression caused by r78421 (deadlock when TclTk's 
>>>> event loop is called in http processing). Removing L875 in 
>>>> src/modules/internet/Rhttpd.c restores the previous behavior, but 
>>>> the underlying problem is more complex and will require more 
>>>> investigation.
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>>
>>>>> On 29/05/2022, at 5:36 AM, John Fox <jfox at mcmaster.ca> wrote:
>>>>>
>>>>> Dear R-sig-mac list members,
>>>>>
>>>>> I've discovered that loading the tcltk package apparently causes R 
>>>>> 4.2.0 (including the current patched version) to hang on an M1 Mac.
>>>>>
>>>>> Try, e.g.,
>>>>>
>>>>> library("tcltk")
>>>>> help("lm")
>>>>>
>>>>> My session info:
>>>>>
>>>>> ------- snip -------
>>>>>
>>>>>> sessionInfo()
>>>>> R version 4.2.0 Patched (2022-05-28 r82413)
>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>> Running under: macOS Monterey 12.3.1
>>>>>
>>>>> Matrix products: default
>>>>> BLAS: 
>>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib 
>>>>>
>>>>> LAPACK: 
>>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib 
>>>>>
>>>>>
>>>>> locale:
>>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>>>
>>>>> attached base packages:
>>>>> [1] tcltk???? stats???? graphics? grDevices utils datasets? methods
>>>>> [8] base
>>>>>
>>>>> loaded via a namespace (and not attached):
>>>>> [1] compiler_4.2.0
>>>>>
>>>>> ------- snip -------
>>>>>
>>>>> Some additional details: The problem occurs both in the R macOS 
>>>>> console and, if options(help_type="html"), when R is run in a 
>>>>> terminal window on macOS, but not when options(help_type="text"). 
>>>>> The former is the default in the Mac R console, the latter when R 
>>>>> is run in a terminal.
>>>>>
>>>>> The problem is apparently new in R 4.2.0 -- it doesn't, e.g., occur 
>>>>> in R 4.1.3. My apologies for not turning it up earlier.
>>>>>
>>>>> I discovered the problem when accessing help in the Rcmdr GUI, 
>>>>> which uses tcltk, caused R to hang.
>>>>>
>>>>> Has anyone else encountered this problem?
>>>>>
>>>>> Best,
>>>>> John
>>>>> -- 
>>>>> John Fox, Professor Emeritus
>>>>> McMaster University
>>>>> Hamilton, Ontario, Canada
>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>
>>>>
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>
>>>
-- 
John Fox, Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
web: https://socialsciences.mcmaster.ca/jfox/


From j|ox @end|ng |rom mcm@@ter@c@  Wed Jun  8 18:39:45 2022
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Wed, 8 Jun 2022 12:39:45 -0400
Subject: [R-SIG-Mac] tcltk causes help() to hang in R 4.2.0 on macOS
In-Reply-To: <27598_1654706209_258Gak93008996_ff3427ea-55b6-ed5a-2b26-e9a0b8171569@mcmaster.ca>
References: <753c64bf-4dbc-0d5c-9684-a9116217d9c8@mcmaster.ca>
 <6FF22407-8E58-4644-9B62-42472D859C7D@R-project.org>
 <514B9903-9154-417E-8B97-185DAA1C891F@R-project.org>
 <eab8b8ff-9619-8b59-27ee-4779875fe8c4@mcmaster.ca>
 <2f8b7f43-0391-2758-1b8b-3f5cf5778df1@gmail.com>
 <27598_1654706209_258Gak93008996_ff3427ea-55b6-ed5a-2b26-e9a0b8171569@mcmaster.ca>
Message-ID: <92b0f13b-59cd-0e77-0d49-6733e167e04a@mcmaster.ca>



On 2022-06-08 12:36 p.m., John Fox wrote:
> Dear Thomas,
> 
> Thanks for this additional information.
> 
> I added some of my own defensive code to the development version of the 
> Rcmdr package, to set the "help_type" option to "text" for macOS. I'll 

I should have added that help_type is set to "text" for R version 4.2.0 
only!

> modify that to all non-Windows platforms, and also include this in the 
> CRAN version of the package.
> 
> I currently test on macOS and Windows systems but when I have a chance 
> will get a Linux system working as well.
> 
> Best,
>  ?John
> 
> On 2022-06-08 12:16 p.m., Tomas Kalibera wrote:
>> For reference, this problem is not macOS specific, it also exists on 
>> Linux (but not on Windows which use a different code path) and the 
>> core problem is how to prevent re-entrant execution of R event 
>> handlers when run from the R/tcltk event loop, itself running from an 
>> R event handler.
>>
>> R-patched now contains a defensive work-around from Simon.
>>
>> We have added a more efficient and cleaner fix to R-devel, but there 
>> is some risk of breakage: this form is "the documented way" but didn't 
>> work on some systems ~22 years ago. So it would be great if people 
>> using Tcl/Tk in R on Unix, and particularly those with rarely used 
>> window managers, could test their applications or the tcltk package 
>> demos and report any issues well before the next release.
>>
>> Thanks
>> Tomas
>>
>> On 5/30/22 01:27, John Fox wrote:
>>> Dear Simon,
>>>
>>> Thank you for addressing this problem so promptly.
>>>
>>> Best,
>>> ?John
>>>
>>> On 2022-05-29 6:51 p.m., Simon Urbanek wrote:
>>>> Actually, I take back the reference to the commit - the deadlock is 
>>>> true, and removing the line is a work-around, but r78421 was not 
>>>> necessarily the regression. The issue seems to be caused by a 
>>>> combination of Tcl/Tk and KaTeX (the latter causes the browser to 
>>>> issue multiple parallel http-requests and the former causes the 
>>>> deadlock in its event loop) which has not been there in earlier R 
>>>> versions.
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>>
>>>>> On 30/05/2022, at 10:09 AM, Simon Urbanek 
>>>>> <simon.urbanek at r-project.org> wrote:
>>>>>
>>>>> John,
>>>>>
>>>>> thanks, this is a regression caused by r78421 (deadlock when 
>>>>> TclTk's event loop is called in http processing). Removing L875 in 
>>>>> src/modules/internet/Rhttpd.c restores the previous behavior, but 
>>>>> the underlying problem is more complex and will require more 
>>>>> investigation.
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>>
>>>>>> On 29/05/2022, at 5:36 AM, John Fox <jfox at mcmaster.ca> wrote:
>>>>>>
>>>>>> Dear R-sig-mac list members,
>>>>>>
>>>>>> I've discovered that loading the tcltk package apparently causes R 
>>>>>> 4.2.0 (including the current patched version) to hang on an M1 Mac.
>>>>>>
>>>>>> Try, e.g.,
>>>>>>
>>>>>> library("tcltk")
>>>>>> help("lm")
>>>>>>
>>>>>> My session info:
>>>>>>
>>>>>> ------- snip -------
>>>>>>
>>>>>>> sessionInfo()
>>>>>> R version 4.2.0 Patched (2022-05-28 r82413)
>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>> Running under: macOS Monterey 12.3.1
>>>>>>
>>>>>> Matrix products: default
>>>>>> BLAS: 
>>>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib 
>>>>>>
>>>>>> LAPACK: 
>>>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib 
>>>>>>
>>>>>>
>>>>>> locale:
>>>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>>>>
>>>>>> attached base packages:
>>>>>> [1] tcltk???? stats???? graphics? grDevices utils datasets? methods
>>>>>> [8] base
>>>>>>
>>>>>> loaded via a namespace (and not attached):
>>>>>> [1] compiler_4.2.0
>>>>>>
>>>>>> ------- snip -------
>>>>>>
>>>>>> Some additional details: The problem occurs both in the R macOS 
>>>>>> console and, if options(help_type="html"), when R is run in a 
>>>>>> terminal window on macOS, but not when options(help_type="text"). 
>>>>>> The former is the default in the Mac R console, the latter when R 
>>>>>> is run in a terminal.
>>>>>>
>>>>>> The problem is apparently new in R 4.2.0 -- it doesn't, e.g., 
>>>>>> occur in R 4.1.3. My apologies for not turning it up earlier.
>>>>>>
>>>>>> I discovered the problem when accessing help in the Rcmdr GUI, 
>>>>>> which uses tcltk, caused R to hang.
>>>>>>
>>>>>> Has anyone else encountered this problem?
>>>>>>
>>>>>> Best,
>>>>>> John
>>>>>> -- 
>>>>>> John Fox, Professor Emeritus
>>>>>> McMaster University
>>>>>> Hamilton, Ontario, Canada
>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>
>>>>
-- 
John Fox, Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
web: https://socialsciences.mcmaster.ca/jfox/


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jun  8 20:29:20 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 8 Jun 2022 14:29:20 -0400
Subject: [R-SIG-Mac] dSYM files in M1Mac install?
In-Reply-To: <dfc95573-a45e-afa7-49f6-dc84bde2d02e@gmail.com>
References: <dfc95573-a45e-afa7-49f6-dc84bde2d02e@gmail.com>
Message-ID: <7a7b00b0-edb7-69ae-ee32-0508ef115bdb@gmail.com>

I just noticed that binary installs from CRAN on my Mac also include 
large *.dSYM directories, though the installs I build myself don't.  So 
this looks like a CRAN/macbuilder issue.

Duncan Murdoch

On 08/06/2022 8:21 a.m., Duncan Murdoch wrote:
> The CRAN checks for rgl show that it has a huge libs directory.  E.g.
> 
> https://www.r-project.org/nosvn/R.check/r-release-macos-arm64/rgl-00check.html
> 
> contains this:
> 
> checking installed package size ... NOTE
>     installed size is 25.6Mb
>     sub-directories of 1Mb or more:
>       doc 1.0Mb
>       fonts 1.5Mb
>       libs 20.0Mb
> 
> I don't have an M1 mac, but I used https://mac.r-project.org/macbuilder
> to build, and found that the rgl.so file that gets installed is a
> reasonable size (bigger than on my Intel Mac, but only 2.7M), but
> there's also a subdir rgl.so.dSYM which is really large.  It contains a
> file rgl.so.dSYM/Contents/Resources/DWARF/rgl.so which is about 17M.
> 
> I think that is debugging symbol information.  Is it necessary to
> install it on the M1 Mac?  If not, is there something in rgl's
> configuration that I should change, or is it part of the system
> configuration on CRAN and macbuilder?
> 
> Duncan Murdoch
> 
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jun  8 20:56:51 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 8 Jun 2022 14:56:51 -0400
Subject: [R-SIG-Mac] CRAN installer for macOS - directory permissions
In-Reply-To: <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
Message-ID: <1663a58b-12c5-94e7-e77e-c0643aa3d2e6@gmail.com>

Henrik, you posted this a couple of days ago and I didn't address the 
_R_CHECK_DEPENDS_ONLY_ point you raised.

You're right that the current implementation of _R_CHECK_DEPENDS_ONLY_ 
doesn't work if all packages are installed in one lib.  This is a flaw, 
with one fix being to never put contributed packages into the system 
lib.  (I haven't done a Linux install in a long time; don't they by 
default put recommended packages there?  They can also be Suggested 
packages, so if they're in the system lib, that's a bug.)

Another possible fix is to change how _R_CHECK_DEPENDS_ONLY_ works, so 
that it affects package loading directly, by allowing the user to 
specify a whitelist of packages (e.g. based on the dependencies in the 
DESCRIPTION file) and having the package loader refuse to load any 
package unless it's in there.  I think I like the current implementation 
better.

So I'd change my recommendation for single-user systems:  they should 
have two libs.  One contains base packages and nothing else, the other 
contains all contributed packages, including recommended ones.  Assuming 
the single user is in the admin group, they could modify the second lib, 
but only reinstalls of R would change the first one.

On a multi-user system there would typically be another lib in the user 
account.

Duncan Murdoch

On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
> I see two fairly big problems with users installing R packages to
> .Library by default.  One is related to package checking and CRAN, and
> one is related to translation of expectations when moving between
> operating systems (as Patrick already pointed out).  At the end, I'll
> also argue that R_LIBS_SITE exists for those who wish to maintain
> site-wide R package libraries to be shared among users, which is
> better than using .Library for this.
> 
> # R CMD check
> 
> When you check a package with 'R CMD check --as-cran', or, with
> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
> are run in a sandbox where only declared package dependencies and any
> packages in the system package library (= .Library) are on the library
> path (= .libPaths()), e.g.
> 
> print(.libPaths())
> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
> [2] "/path/to/R-4.2.0/lib/R/library"
> 
> What's in the user's library (= R_LIBS_USER) or in the site library (=
> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
> is very valuable since it helps to identify undeclared package
> dependencies.
> 
> **The default behavior on macOS discussed here, where R packages are
> installed to .Library, breaks this.**  Developers with non-base R
> packages in .Library will not benefit from the 'R CMD check --as-cran'
> checks for undeclared packages. This increases the risk of them not
> being aware of the problem of undeclared packages, which is a
> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
> when it comes to what should be listed under Suggests: or not.
> 
> BTW, this makes me wonder how many macOS developers notice this
> problem only as they submit to CRAN, and have to resubmit. Also, this
> issue might add extra work to the CRAN Team, e.g. spending time
> locking at and responding to possible false positives, handling more
> emails, and handling more re-submissions.
> 
> 
> # Social expectations
> 
> The second problem with the current default macOS behavior is when
> people hop between systems and operating systems.  Particularly, a
> macOS user coming to Unix or Windows does not immediately understand
> how and where R packages are installed.  They get a prompt about a
> "personal library" and might choose to decline because it's not what
> they're used to seeing.  Then they might end up in the Stack Overflow
> cut'n'paste rabbit hole, where they find some instructions on setting
> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
> until they upgrade R next year, when they start getting weird warnings
> or errors of some packages not working that they slowly start to
> accept as the normal behavior of R. I see this problem on large HPC
> environments where I help out thousands of HPC users. Also, reading
> various support forums out there, I think this is a real problem. It's
> only recently, thanks to Patrick, I learned about this rather odd
> macOS behavior, and I do think it is a cause for confusion and
> miscommunication.  Another problem with different OS behaviors is that
> it complicated documentation and instructions.  I strongly believe, it
> would be beneficial to the R community if we all have the same
> experience and expectations regardless of OS.
> 
> I believe the above problems are best addressed by changing the
> *default* settings on macOS so that it is *not* possible to install to
> .Library, and instead require a user to install to their personal
> package library.  Advanced users who prefer to install to .Library,
> can still configure R, or .Library, to do so.
> 
> As Patrick suggests, defaulting .Library to 755, instead of 775, or
> avoid setting the "admin" group, seems like a simple solution that
> would help harmonize the user experience of R.
> 
> 
> # Maintaining a site-wide package library
> 
>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
> 
> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
> and I argue it is better suited for this than using .Library.  It also
> has the benefit of *not* conflicting with the
> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
> users to opt out from centrally installed packages (by setting
> R_LIBS_SITE=""), which they cannot do if they're installed in the
> system library.
> 
> All the best,
> 
> Henrik
> 
> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
> even if I install R to my personal home folder; it simply lowers the
> risk for side effects when developing and troubleshooting.
> 
> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
> <patrick.schratz at gmail.com> wrote:
>>
>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>>
>> What would be the best way for this idea/proposal going forward?
>>
>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>> Or https://github.com/r-devel/rcontribution?
>>
>> Best,
>> Patrick_______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jun  9 02:46:36 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 9 Jun 2022 12:46:36 +1200
Subject: [R-SIG-Mac] dSYM files in M1Mac install?
In-Reply-To: <7a7b00b0-edb7-69ae-ee32-0508ef115bdb@gmail.com>
References: <dfc95573-a45e-afa7-49f6-dc84bde2d02e@gmail.com>
 <7a7b00b0-edb7-69ae-ee32-0508ef115bdb@gmail.com>
Message-ID: <AAD94567-BA23-43F4-8210-6C28DB10C975@R-project.org>

Duncan,

I?m not sure what what ?issue? you see here - can you elaborate? We do include debugging symbols in distributed binaries to facilitate debugging. I have not looked at rgl in particular, but I suppose the reason for the big dSYM size could be its static dependencies.

Cheers,
Simon


> On 9/06/2022, at 06:29, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> I just noticed that binary installs from CRAN on my Mac also include large *.dSYM directories, though the installs I build myself don't.  So this looks like a CRAN/macbuilder issue.
> 
> Duncan Murdoch
> 
> On 08/06/2022 8:21 a.m., Duncan Murdoch wrote:
>> The CRAN checks for rgl show that it has a huge libs directory.  E.g.
>> https://www.r-project.org/nosvn/R.check/r-release-macos-arm64/rgl-00check.html
>> contains this:
>> checking installed package size ... NOTE
>>    installed size is 25.6Mb
>>    sub-directories of 1Mb or more:
>>      doc 1.0Mb
>>      fonts 1.5Mb
>>      libs 20.0Mb
>> I don't have an M1 mac, but I used https://mac.r-project.org/macbuilder
>> to build, and found that the rgl.so file that gets installed is a
>> reasonable size (bigger than on my Intel Mac, but only 2.7M), but
>> there's also a subdir rgl.so.dSYM which is really large.  It contains a
>> file rgl.so.dSYM/Contents/Resources/DWARF/rgl.so which is about 17M.
>> I think that is debugging symbol information.  Is it necessary to
>> install it on the M1 Mac?  If not, is there something in rgl's
>> configuration that I should change, or is it part of the system
>> configuration on CRAN and macbuilder?
>> Duncan Murdoch
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jun  9 03:28:57 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 9 Jun 2022 13:28:57 +1200
Subject: [R-SIG-Mac] System-wide site library [Was: CRAN installer for macOS
 - directory permissions]
In-Reply-To: <1663a58b-12c5-94e7-e77e-c0643aa3d2e6@gmail.com>
References: <36345395-F4E6-4069-9900-990E283FA7AC@gmail.com>
 <9200B51A-3A42-42B1-8E1F-4A31C61D5AFA@R-project.org>
 <4F79D380-A4F5-4562-97C2-7B0C4693EEB7@gmail.com>
 <290E0344-9E1B-4979-B211-321B0633C606@R-project.org>
 <21CB0991-A1A8-4F36-B151-93AD204D7A09@gmail.com>
 <1de0018b-addd-2aed-4f00-dd4a86b08574@gmail.com>
 <CAD6tx96Jeh8Lur8wQaZ-nUWpqwQddjoLy1=MdQzX7zYJJEht3g@mail.gmail.com>
 <8a3ee598-88af-f8f6-251a-163a87887044@gmail.com>
 <A6FDE15B-51A1-49CA-8F0C-8DA76C79CD5C@gmail.com>
 <29f7add2-1da6-8a7e-82cb-c01ec6b393f2@gmail.com>
 <4E015B0C-9CF4-4AD7-9909-15A809B0628B@gmail.com>
 <2459bf24-2a7a-58fc-74a8-e8fceeb5ea9e@gmail.com>
 <CDD5A731-FD51-4C6F-944B-5F6244FFABDC@gmail.com>
 <CAFDcVCStypRY2jQPJSk8at8y=9MLVW4e=7nxwGK9P+ZwBCJcsw@mail.gmail.com>
 <1663a58b-12c5-94e7-e77e-c0643aa3d2e6@gmail.com>
Message-ID: <23E45B44-3F4C-4D10-92D9-56070A3599F2@R-project.org>

We could re-design the layout of the framework and site locations to be more in line with the modern Apple standards. Splitting the library into system (R itself only) and site library could make the framework more correctly self sufficient. The site library would then go into "/Library/Application Support/org.R-project.R/library? and user library in the equally named subdirectory of $HOME. That would directly correspond to the Apple designations of NSApplicationSupportDirectory in NSLocalDomainMask and NSUserDomainMask domains. The drawback would be that none of this is versioned any longer, so we probably would have to rely on different bundle IDs (e.g. to distinguish big-sur builds from high-sierra builds) and possibly add versioned subdirectories inside our realm. Also this would make it impossible to make self-contained R apps, because the packages are outside of the framework path structure, but I have not seen anyone using that feature in a long time.

Obviously, this would be a major breaking change so for R-devel and R.app would have to be updated to use the corresponding paths for the package management, but that?s not too hard. I wouldn?t put this on top of my list given that the effect is mostly cosmetic, but by using the Apple API it would allow the framework to be used in a container if anyone cared (there are bigger issues if anyone wanted to create an iOS version, though ;)).

Cheers,
Simon



> On 9/06/2022, at 06:56, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> Henrik, you posted this a couple of days ago and I didn't address the _R_CHECK_DEPENDS_ONLY_ point you raised.
> 
> You're right that the current implementation of _R_CHECK_DEPENDS_ONLY_ doesn't work if all packages are installed in one lib.  This is a flaw, with one fix being to never put contributed packages into the system lib.  (I haven't done a Linux install in a long time; don't they by default put recommended packages there?  They can also be Suggested packages, so if they're in the system lib, that's a bug.)
> 
> Another possible fix is to change how _R_CHECK_DEPENDS_ONLY_ works, so that it affects package loading directly, by allowing the user to specify a whitelist of packages (e.g. based on the dependencies in the DESCRIPTION file) and having the package loader refuse to load any package unless it's in there.  I think I like the current implementation better.
> 
> So I'd change my recommendation for single-user systems:  they should have two libs.  One contains base packages and nothing else, the other contains all contributed packages, including recommended ones.  Assuming the single user is in the admin group, they could modify the second lib, but only reinstalls of R would change the first one.
> 
> On a multi-user system there would typically be another lib in the user account.
> 
> Duncan Murdoch
> 
> On 03/06/2022 12:45 p.m., Henrik Bengtsson wrote:
>> I see two fairly big problems with users installing R packages to
>> .Library by default.  One is related to package checking and CRAN, and
>> one is related to translation of expectations when moving between
>> operating systems (as Patrick already pointed out).  At the end, I'll
>> also argue that R_LIBS_SITE exists for those who wish to maintain
>> site-wide R package libraries to be shared among users, which is
>> better than using .Library for this.
>> # R CMD check
>> When you check a package with 'R CMD check --as-cran', or, with
>> environment variable `_R_CHECK_DEPENDS_ONLY_` set to true, the checks
>> are run in a sandbox where only declared package dependencies and any
>> packages in the system package library (= .Library) are on the library
>> path (= .libPaths()), e.g.
>> print(.libPaths())
>> [1] "/tmp/alice/RtmpYDq3KF/RLIBS_2410b74eb16752"
>> [2] "/path/to/R-4.2.0/lib/R/library"
>> What's in the user's library (= R_LIBS_USER) or in the site library (=
>> .Library.site/R_LIBS_SITE) is not part of the testing.  This mechanism
>> is very valuable since it helps to identify undeclared package
>> dependencies.
>> **The default behavior on macOS discussed here, where R packages are
>> installed to .Library, breaks this.**  Developers with non-base R
>> packages in .Library will not benefit from the 'R CMD check --as-cran'
>> checks for undeclared packages. This increases the risk of them not
>> being aware of the problem of undeclared packages, which is a
>> discussion we see from time to time on R-devel and R-pkg-devel, e.g.
>> when it comes to what should be listed under Suggests: or not.
>> BTW, this makes me wonder how many macOS developers notice this
>> problem only as they submit to CRAN, and have to resubmit. Also, this
>> issue might add extra work to the CRAN Team, e.g. spending time
>> locking at and responding to possible false positives, handling more
>> emails, and handling more re-submissions.
>> # Social expectations
>> The second problem with the current default macOS behavior is when
>> people hop between systems and operating systems.  Particularly, a
>> macOS user coming to Unix or Windows does not immediately understand
>> how and where R packages are installed.  They get a prompt about a
>> "personal library" and might choose to decline because it's not what
>> they're used to seeing.  Then they might end up in the Stack Overflow
>> cut'n'paste rabbit hole, where they find some instructions on setting
>> 'R_LIBS_USER=$HOME/R-lib' without version specifiers.  Works fine
>> until they upgrade R next year, when they start getting weird warnings
>> or errors of some packages not working that they slowly start to
>> accept as the normal behavior of R. I see this problem on large HPC
>> environments where I help out thousands of HPC users. Also, reading
>> various support forums out there, I think this is a real problem. It's
>> only recently, thanks to Patrick, I learned about this rather odd
>> macOS behavior, and I do think it is a cause for confusion and
>> miscommunication.  Another problem with different OS behaviors is that
>> it complicated documentation and instructions.  I strongly believe, it
>> would be beneficial to the R community if we all have the same
>> experience and expectations regardless of OS.
>> I believe the above problems are best addressed by changing the
>> *default* settings on macOS so that it is *not* possible to install to
>> .Library, and instead require a user to install to their personal
>> package library.  Advanced users who prefer to install to .Library,
>> can still configure R, or .Library, to do so.
>> As Patrick suggests, defaulting .Library to 755, instead of 775, or
>> avoid setting the "admin" group, seems like a simple solution that
>> would help harmonize the user experience of R.
>> # Maintaining a site-wide package library
>>> I would argue that the current setup tends to be a lot safer than the alternatives, because it allows commonly used packages to be installed at the system level and private packages to be installed at user level. This is also the design typically used on shared machines, where you separate local packages from user packages where local ones are installed by administrators - so exactly the same setup. Moreover R upgrades are a lot cleaner, since you can easily upgrade all system packages at once so you don't have to worry about individual users having stale packages - the biggest problem for admins.
>> I believe .Library.site/R_LIBS_SITE exists to address this purpose,
>> and I argue it is better suited for this than using .Library.  It also
>> has the benefit of *not* conflicting with the
>> _R_CHECK_DEPENDS_ONLY_=true checks (Problem #1 above).  It also allows
>> users to opt out from centrally installed packages (by setting
>> R_LIBS_SITE=""), which they cannot do if they're installed in the
>> system library.
>> All the best,
>> Henrik
>> PS. FWIW, for all of the above reasons, I always set 755 on .Library,
>> even if I install R to my personal home folder; it simply lowers the
>> risk for side effects when developing and troubleshooting.
>> On Thu, Jun 2, 2022 at 11:50 PM Patrick Schratz
>> <patrick.schratz at gmail.com> wrote:
>>> 
>>> I?d like to bump this thread again, especially since I am interested in a reply from Simon (or any other core member) on the arguments raised in the most recent messages of this thread.
>>> 
>>> What would be the best way for this idea/proposal going forward?
>>> 
>>> I?ve found https://contributor.r-project.org/, which links to a public Slack channel. Would this be a better place to discuss this matter?
>>> Or https://github.com/r-devel/rcontribution?
>>> 
>>> Best,
>>> Patrick_______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jun  9 09:46:38 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 9 Jun 2022 03:46:38 -0400
Subject: [R-SIG-Mac] dSYM files in M1Mac install?
In-Reply-To: <AAD94567-BA23-43F4-8210-6C28DB10C975@R-project.org>
References: <dfc95573-a45e-afa7-49f6-dc84bde2d02e@gmail.com>
 <7a7b00b0-edb7-69ae-ee32-0508ef115bdb@gmail.com>
 <AAD94567-BA23-43F4-8210-6C28DB10C975@R-project.org>
Message-ID: <d1ec9856-8927-12c6-3181-6308b131da8b@gmail.com>

By "issue" I just meant it's under your control, not mine.

Duncan Murdoch

On 08/06/2022 8:46 p.m., Simon Urbanek wrote:
> Duncan,
> 
> I?m not sure what what ?issue? you see here - can you elaborate? We do include debugging symbols in distributed binaries to facilitate debugging. I have not looked at rgl in particular, but I suppose the reason for the big dSYM size could be its static dependencies.
> 
> Cheers,
> Simon
> 
> 
>> On 9/06/2022, at 06:29, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> I just noticed that binary installs from CRAN on my Mac also include large *.dSYM directories, though the installs I build myself don't.  So this looks like a CRAN/macbuilder issue.
>>
>> Duncan Murdoch
>>
>> On 08/06/2022 8:21 a.m., Duncan Murdoch wrote:
>>> The CRAN checks for rgl show that it has a huge libs directory.  E.g.
>>> https://www.r-project.org/nosvn/R.check/r-release-macos-arm64/rgl-00check.html
>>> contains this:
>>> checking installed package size ... NOTE
>>>     installed size is 25.6Mb
>>>     sub-directories of 1Mb or more:
>>>       doc 1.0Mb
>>>       fonts 1.5Mb
>>>       libs 20.0Mb
>>> I don't have an M1 mac, but I used https://mac.r-project.org/macbuilder
>>> to build, and found that the rgl.so file that gets installed is a
>>> reasonable size (bigger than on my Intel Mac, but only 2.7M), but
>>> there's also a subdir rgl.so.dSYM which is really large.  It contains a
>>> file rgl.so.dSYM/Contents/Resources/DWARF/rgl.so which is about 17M.
>>> I think that is debugging symbol information.  Is it necessary to
>>> install it on the M1 Mac?  If not, is there something in rgl's
>>> configuration that I should change, or is it part of the system
>>> configuration on CRAN and macbuilder?
>>> Duncan Murdoch
>>>
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Jun  9 10:14:47 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 9 Jun 2022 10:14:47 +0200
Subject: [R-SIG-Mac] tcltk causes help() to hang in R 4.2.0 on macOS
In-Reply-To: <92b0f13b-59cd-0e77-0d49-6733e167e04a@mcmaster.ca>
References: <753c64bf-4dbc-0d5c-9684-a9116217d9c8@mcmaster.ca>
 <6FF22407-8E58-4644-9B62-42472D859C7D@R-project.org>
 <514B9903-9154-417E-8B97-185DAA1C891F@R-project.org>
 <eab8b8ff-9619-8b59-27ee-4779875fe8c4@mcmaster.ca>
 <2f8b7f43-0391-2758-1b8b-3f5cf5778df1@gmail.com>
 <27598_1654706209_258Gak93008996_ff3427ea-55b6-ed5a-2b26-e9a0b8171569@mcmaster.ca>
 <92b0f13b-59cd-0e77-0d49-6733e167e04a@mcmaster.ca>
Message-ID: <d6134486-1361-d32e-a41d-d8d67f2045fc@gmail.com>


On 6/8/22 18:39, John Fox wrote:
>
>
> On 2022-06-08 12:36 p.m., John Fox wrote:
>> Dear Thomas,
>>
>> Thanks for this additional information.
>>
>> I added some of my own defensive code to the development version of 
>> the Rcmdr package, to set the "help_type" option to "text" for macOS. 
>> I'll 
>
> I should have added that help_type is set to "text" for R version 
> 4.2.0 only!

I think it is a coincidence that this was seen in R 4.2.0. The http 
server's handler has a safeguard against re-entrant execution since 
59338 (year 2012). As that safeguard was needed at that time for clients 
connecting in rapid sequence, the problem with the live-lock with tcltk 
event loop could have been triggered already then, but probably nobody 
ran into this with tcltk package loaded. PR#17773 shows that attempts 
for re-entrant/concurrent handling of http requests were seen in R 4.0.0 
with the HTML help.

Best
Tomas

>
>> modify that to all non-Windows platforms, and also include this in 
>> the CRAN version of the package.
>>
>> I currently test on macOS and Windows systems but when I have a 
>> chance will get a Linux system working as well.
>>
>> Best,
>> ??John
>>
>> On 2022-06-08 12:16 p.m., Tomas Kalibera wrote:
>>> For reference, this problem is not macOS specific, it also exists on 
>>> Linux (but not on Windows which use a different code path) and the 
>>> core problem is how to prevent re-entrant execution of R event 
>>> handlers when run from the R/tcltk event loop, itself running from 
>>> an R event handler.
>>>
>>> R-patched now contains a defensive work-around from Simon.
>>>
>>> We have added a more efficient and cleaner fix to R-devel, but there 
>>> is some risk of breakage: this form is "the documented way" but 
>>> didn't work on some systems ~22 years ago. So it would be great if 
>>> people using Tcl/Tk in R on Unix, and particularly those with rarely 
>>> used window managers, could test their applications or the tcltk 
>>> package demos and report any issues well before the next release.
>>>
>>> Thanks
>>> Tomas
>>>
>>> On 5/30/22 01:27, John Fox wrote:
>>>> Dear Simon,
>>>>
>>>> Thank you for addressing this problem so promptly.
>>>>
>>>> Best,
>>>> ?John
>>>>
>>>> On 2022-05-29 6:51 p.m., Simon Urbanek wrote:
>>>>> Actually, I take back the reference to the commit - the deadlock 
>>>>> is true, and removing the line is a work-around, but r78421 was 
>>>>> not necessarily the regression. The issue seems to be caused by a 
>>>>> combination of Tcl/Tk and KaTeX (the latter causes the browser to 
>>>>> issue multiple parallel http-requests and the former causes the 
>>>>> deadlock in its event loop) which has not been there in earlier R 
>>>>> versions.
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>>
>>>>>> On 30/05/2022, at 10:09 AM, Simon Urbanek 
>>>>>> <simon.urbanek at r-project.org> wrote:
>>>>>>
>>>>>> John,
>>>>>>
>>>>>> thanks, this is a regression caused by r78421 (deadlock when 
>>>>>> TclTk's event loop is called in http processing). Removing L875 
>>>>>> in src/modules/internet/Rhttpd.c restores the previous behavior, 
>>>>>> but the underlying problem is more complex and will require more 
>>>>>> investigation.
>>>>>>
>>>>>> Cheers,
>>>>>> Simon
>>>>>>
>>>>>>
>>>>>>> On 29/05/2022, at 5:36 AM, John Fox <jfox at mcmaster.ca> wrote:
>>>>>>>
>>>>>>> Dear R-sig-mac list members,
>>>>>>>
>>>>>>> I've discovered that loading the tcltk package apparently causes 
>>>>>>> R 4.2.0 (including the current patched version) to hang on an M1 
>>>>>>> Mac.
>>>>>>>
>>>>>>> Try, e.g.,
>>>>>>>
>>>>>>> library("tcltk")
>>>>>>> help("lm")
>>>>>>>
>>>>>>> My session info:
>>>>>>>
>>>>>>> ------- snip -------
>>>>>>>
>>>>>>>> sessionInfo()
>>>>>>> R version 4.2.0 Patched (2022-05-28 r82413)
>>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>>> Running under: macOS Monterey 12.3.1
>>>>>>>
>>>>>>> Matrix products: default
>>>>>>> BLAS: 
>>>>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib 
>>>>>>>
>>>>>>> LAPACK: 
>>>>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib 
>>>>>>>
>>>>>>>
>>>>>>> locale:
>>>>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>>>>>
>>>>>>> attached base packages:
>>>>>>> [1] tcltk???? stats???? graphics? grDevices utils datasets? methods
>>>>>>> [8] base
>>>>>>>
>>>>>>> loaded via a namespace (and not attached):
>>>>>>> [1] compiler_4.2.0
>>>>>>>
>>>>>>> ------- snip -------
>>>>>>>
>>>>>>> Some additional details: The problem occurs both in the R macOS 
>>>>>>> console and, if options(help_type="html"), when R is run in a 
>>>>>>> terminal window on macOS, but not when 
>>>>>>> options(help_type="text"). The former is the default in the Mac 
>>>>>>> R console, the latter when R is run in a terminal.
>>>>>>>
>>>>>>> The problem is apparently new in R 4.2.0 -- it doesn't, e.g., 
>>>>>>> occur in R 4.1.3. My apologies for not turning it up earlier.
>>>>>>>
>>>>>>> I discovered the problem when accessing help in the Rcmdr GUI, 
>>>>>>> which uses tcltk, caused R to hang.
>>>>>>>
>>>>>>> Has anyone else encountered this problem?
>>>>>>>
>>>>>>> Best,
>>>>>>> John
>>>>>>> -- 
>>>>>>> John Fox, Professor Emeritus
>>>>>>> McMaster University
>>>>>>> Hamilton, Ontario, Canada
>>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> R-SIG-Mac mailing list
>>>>>>> R-SIG-Mac at r-project.org
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>
>>>>>


From j|ox @end|ng |rom mcm@@ter@c@  Thu Jun  9 16:32:02 2022
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Thu, 9 Jun 2022 10:32:02 -0400
Subject: [R-SIG-Mac] tcltk causes help() to hang in R 4.2.0 on macOS
In-Reply-To: <d6134486-1361-d32e-a41d-d8d67f2045fc@gmail.com>
References: <753c64bf-4dbc-0d5c-9684-a9116217d9c8@mcmaster.ca>
 <6FF22407-8E58-4644-9B62-42472D859C7D@R-project.org>
 <514B9903-9154-417E-8B97-185DAA1C891F@R-project.org>
 <eab8b8ff-9619-8b59-27ee-4779875fe8c4@mcmaster.ca>
 <2f8b7f43-0391-2758-1b8b-3f5cf5778df1@gmail.com>
 <27598_1654706209_258Gak93008996_ff3427ea-55b6-ed5a-2b26-e9a0b8171569@mcmaster.ca>
 <92b0f13b-59cd-0e77-0d49-6733e167e04a@mcmaster.ca>
 <d6134486-1361-d32e-a41d-d8d67f2045fc@gmail.com>
Message-ID: <07e3fd56-0171-d24e-dea8-e80b297242fa@mcmaster.ca>

Dear Tomas,

On 2022-06-09 4:14 a.m., Tomas Kalibera wrote:
> 
> On 6/8/22 18:39, John Fox wrote:
>>
>>
>> On 2022-06-08 12:36 p.m., John Fox wrote:
>>> Dear Thomas,
>>>
>>> Thanks for this additional information.
>>>
>>> I added some of my own defensive code to the development version of 
>>> the Rcmdr package, to set the "help_type" option to "text" for macOS. 
>>> I'll 
>>
>> I should have added that help_type is set to "text" for R version 
>> 4.2.0 only!
> 
> I think it is a coincidence that this was seen in R 4.2.0. The http 
> server's handler has a safeguard against re-entrant execution since 
> 59338 (year 2012). As that safeguard was needed at that time for clients 
> connecting in rapid sequence, the problem with the live-lock with tcltk 
> event loop could have been triggered already then, but probably nobody 
> ran into this with tcltk package loaded. PR#17773 shows that attempts 
> for re-entrant/concurrent handling of http requests were seen in R 4.0.0 
> with the HTML help.

My experience of this issue is just with HTML help from the Rcmdr under 
macOS, but I've confirmed that the problem occurs in R 4.2.0 and not in 
R 4.1.3, possibly because the Rcmdr doesn't load tcltk (i.e., imports 
tcltk)?

Best,
  John

> 
> Best
> Tomas
> 
>>
>>> modify that to all non-Windows platforms, and also include this in 
>>> the CRAN version of the package.
>>>
>>> I currently test on macOS and Windows systems but when I have a 
>>> chance will get a Linux system working as well.
>>>
>>> Best,
>>> ??John
>>>
>>> On 2022-06-08 12:16 p.m., Tomas Kalibera wrote:
>>>> For reference, this problem is not macOS specific, it also exists on 
>>>> Linux (but not on Windows which use a different code path) and the 
>>>> core problem is how to prevent re-entrant execution of R event 
>>>> handlers when run from the R/tcltk event loop, itself running from 
>>>> an R event handler.
>>>>
>>>> R-patched now contains a defensive work-around from Simon.
>>>>
>>>> We have added a more efficient and cleaner fix to R-devel, but there 
>>>> is some risk of breakage: this form is "the documented way" but 
>>>> didn't work on some systems ~22 years ago. So it would be great if 
>>>> people using Tcl/Tk in R on Unix, and particularly those with rarely 
>>>> used window managers, could test their applications or the tcltk 
>>>> package demos and report any issues well before the next release.
>>>>
>>>> Thanks
>>>> Tomas
>>>>
>>>> On 5/30/22 01:27, John Fox wrote:
>>>>> Dear Simon,
>>>>>
>>>>> Thank you for addressing this problem so promptly.
>>>>>
>>>>> Best,
>>>>> ?John
>>>>>
>>>>> On 2022-05-29 6:51 p.m., Simon Urbanek wrote:
>>>>>> Actually, I take back the reference to the commit - the deadlock 
>>>>>> is true, and removing the line is a work-around, but r78421 was 
>>>>>> not necessarily the regression. The issue seems to be caused by a 
>>>>>> combination of Tcl/Tk and KaTeX (the latter causes the browser to 
>>>>>> issue multiple parallel http-requests and the former causes the 
>>>>>> deadlock in its event loop) which has not been there in earlier R 
>>>>>> versions.
>>>>>>
>>>>>> Cheers,
>>>>>> Simon
>>>>>>
>>>>>>
>>>>>>> On 30/05/2022, at 10:09 AM, Simon Urbanek 
>>>>>>> <simon.urbanek at r-project.org> wrote:
>>>>>>>
>>>>>>> John,
>>>>>>>
>>>>>>> thanks, this is a regression caused by r78421 (deadlock when 
>>>>>>> TclTk's event loop is called in http processing). Removing L875 
>>>>>>> in src/modules/internet/Rhttpd.c restores the previous behavior, 
>>>>>>> but the underlying problem is more complex and will require more 
>>>>>>> investigation.
>>>>>>>
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>>
>>>>>>>
>>>>>>>> On 29/05/2022, at 5:36 AM, John Fox <jfox at mcmaster.ca> wrote:
>>>>>>>>
>>>>>>>> Dear R-sig-mac list members,
>>>>>>>>
>>>>>>>> I've discovered that loading the tcltk package apparently causes 
>>>>>>>> R 4.2.0 (including the current patched version) to hang on an M1 
>>>>>>>> Mac.
>>>>>>>>
>>>>>>>> Try, e.g.,
>>>>>>>>
>>>>>>>> library("tcltk")
>>>>>>>> help("lm")
>>>>>>>>
>>>>>>>> My session info:
>>>>>>>>
>>>>>>>> ------- snip -------
>>>>>>>>
>>>>>>>>> sessionInfo()
>>>>>>>> R version 4.2.0 Patched (2022-05-28 r82413)
>>>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>>>> Running under: macOS Monterey 12.3.1
>>>>>>>>
>>>>>>>> Matrix products: default
>>>>>>>> BLAS: 
>>>>>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib 
>>>>>>>>
>>>>>>>> LAPACK: 
>>>>>>>> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib 
>>>>>>>>
>>>>>>>>
>>>>>>>> locale:
>>>>>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>>>>>>
>>>>>>>> attached base packages:
>>>>>>>> [1] tcltk???? stats???? graphics? grDevices utils datasets? methods
>>>>>>>> [8] base
>>>>>>>>
>>>>>>>> loaded via a namespace (and not attached):
>>>>>>>> [1] compiler_4.2.0
>>>>>>>>
>>>>>>>> ------- snip -------
>>>>>>>>
>>>>>>>> Some additional details: The problem occurs both in the R macOS 
>>>>>>>> console and, if options(help_type="html"), when R is run in a 
>>>>>>>> terminal window on macOS, but not when 
>>>>>>>> options(help_type="text"). The former is the default in the Mac 
>>>>>>>> R console, the latter when R is run in a terminal.
>>>>>>>>
>>>>>>>> The problem is apparently new in R 4.2.0 -- it doesn't, e.g., 
>>>>>>>> occur in R 4.1.3. My apologies for not turning it up earlier.
>>>>>>>>
>>>>>>>> I discovered the problem when accessing help in the Rcmdr GUI, 
>>>>>>>> which uses tcltk, caused R to hang.
>>>>>>>>
>>>>>>>> Has anyone else encountered this problem?
>>>>>>>>
>>>>>>>> Best,
>>>>>>>> John
>>>>>>>> -- 
>>>>>>>> John Fox, Professor Emeritus
>>>>>>>> McMaster University
>>>>>>>> Hamilton, Ontario, Canada
>>>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> R-SIG-Mac mailing list
>>>>>>>> R-SIG-Mac at r-project.org
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> R-SIG-Mac mailing list
>>>>>>> R-SIG-Mac at r-project.org
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>
>>>>>>
-- 
John Fox, Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
web: https://socialsciences.mcmaster.ca/jfox/


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Jun 10 02:19:29 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 10 Jun 2022 12:19:29 +1200
Subject: [R-SIG-Mac] tcltk causes help() to hang in R 4.2.0 on macOS
In-Reply-To: <07e3fd56-0171-d24e-dea8-e80b297242fa@mcmaster.ca>
References: <753c64bf-4dbc-0d5c-9684-a9116217d9c8@mcmaster.ca>
 <6FF22407-8E58-4644-9B62-42472D859C7D@R-project.org>
 <514B9903-9154-417E-8B97-185DAA1C891F@R-project.org>
 <eab8b8ff-9619-8b59-27ee-4779875fe8c4@mcmaster.ca>
 <2f8b7f43-0391-2758-1b8b-3f5cf5778df1@gmail.com>
 <27598_1654706209_258Gak93008996_ff3427ea-55b6-ed5a-2b26-e9a0b8171569@mcmaster.ca>
 <92b0f13b-59cd-0e77-0d49-6733e167e04a@mcmaster.ca>
 <d6134486-1361-d32e-a41d-d8d67f2045fc@gmail.com>
 <07e3fd56-0171-d24e-dea8-e80b297242fa@mcmaster.ca>
Message-ID: <A97F25F8-A86F-4642-8EF0-CD4F816ACE68@R-project.org>

John,

as Tomas pointed out the problem was there, it was just not as easily triggered, because the help before 4.2.0 was not relying on a set of additional files (here KaTeX). Rcmdr does use tcltk, obviously, so it will always trigger the loop meshing issues. I wonder whether we should re-visit native Tcl/Tk now, since if I recall the main reason it didn't work before were deadlocks in the event loop, so it's even possible that those could be fixed along similar lines...

Cheers,
Simon



> On Jun 10, 2022, at 2:32 AM, John Fox <jfox at mcmaster.ca> wrote:
> 
> Dear Tomas,
> 
> On 2022-06-09 4:14 a.m., Tomas Kalibera wrote:
>> On 6/8/22 18:39, John Fox wrote:
>>> 
>>> 
>>> On 2022-06-08 12:36 p.m., John Fox wrote:
>>>> Dear Thomas,
>>>> 
>>>> Thanks for this additional information.
>>>> 
>>>> I added some of my own defensive code to the development version of the Rcmdr package, to set the "help_type" option to "text" for macOS. I'll 
>>> 
>>> I should have added that help_type is set to "text" for R version 4.2.0 only!
>> I think it is a coincidence that this was seen in R 4.2.0. The http server's handler has a safeguard against re-entrant execution since 59338 (year 2012). As that safeguard was needed at that time for clients connecting in rapid sequence, the problem with the live-lock with tcltk event loop could have been triggered already then, but probably nobody ran into this with tcltk package loaded. PR#17773 shows that attempts for re-entrant/concurrent handling of http requests were seen in R 4.0.0 with the HTML help.
> 
> My experience of this issue is just with HTML help from the Rcmdr under macOS, but I've confirmed that the problem occurs in R 4.2.0 and not in R 4.1.3, possibly because the Rcmdr doesn't load tcltk (i.e., imports tcltk)?
> 
> Best,
> John
> 
>> Best
>> Tomas
>>> 
>>>> modify that to all non-Windows platforms, and also include this in the CRAN version of the package.
>>>> 
>>>> I currently test on macOS and Windows systems but when I have a chance will get a Linux system working as well.
>>>> 
>>>> Best,
>>>>   John
>>>> 
>>>> On 2022-06-08 12:16 p.m., Tomas Kalibera wrote:
>>>>> For reference, this problem is not macOS specific, it also exists on Linux (but not on Windows which use a different code path) and the core problem is how to prevent re-entrant execution of R event handlers when run from the R/tcltk event loop, itself running from an R event handler.
>>>>> 
>>>>> R-patched now contains a defensive work-around from Simon.
>>>>> 
>>>>> We have added a more efficient and cleaner fix to R-devel, but there is some risk of breakage: this form is "the documented way" but didn't work on some systems ~22 years ago. So it would be great if people using Tcl/Tk in R on Unix, and particularly those with rarely used window managers, could test their applications or the tcltk package demos and report any issues well before the next release.
>>>>> 
>>>>> Thanks
>>>>> Tomas
>>>>> 
>>>>> On 5/30/22 01:27, John Fox wrote:
>>>>>> Dear Simon,
>>>>>> 
>>>>>> Thank you for addressing this problem so promptly.
>>>>>> 
>>>>>> Best,
>>>>>>  John
>>>>>> 
>>>>>> On 2022-05-29 6:51 p.m., Simon Urbanek wrote:
>>>>>>> Actually, I take back the reference to the commit - the deadlock is true, and removing the line is a work-around, but r78421 was not necessarily the regression. The issue seems to be caused by a combination of Tcl/Tk and KaTeX (the latter causes the browser to issue multiple parallel http-requests and the former causes the deadlock in its event loop) which has not been there in earlier R versions.
>>>>>>> 
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>> 
>>>>>>> 
>>>>>>>> On 30/05/2022, at 10:09 AM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>>>>>> 
>>>>>>>> John,
>>>>>>>> 
>>>>>>>> thanks, this is a regression caused by r78421 (deadlock when TclTk's event loop is called in http processing). Removing L875 in src/modules/internet/Rhttpd.c restores the previous behavior, but the underlying problem is more complex and will require more investigation.
>>>>>>>> 
>>>>>>>> Cheers,
>>>>>>>> Simon
>>>>>>>> 
>>>>>>>> 
>>>>>>>>> On 29/05/2022, at 5:36 AM, John Fox <jfox at mcmaster.ca> wrote:
>>>>>>>>> 
>>>>>>>>> Dear R-sig-mac list members,
>>>>>>>>> 
>>>>>>>>> I've discovered that loading the tcltk package apparently causes R 4.2.0 (including the current patched version) to hang on an M1 Mac.
>>>>>>>>> 
>>>>>>>>> Try, e.g.,
>>>>>>>>> 
>>>>>>>>> library("tcltk")
>>>>>>>>> help("lm")
>>>>>>>>> 
>>>>>>>>> My session info:
>>>>>>>>> 
>>>>>>>>> ------- snip -------
>>>>>>>>> 
>>>>>>>>>> sessionInfo()
>>>>>>>>> R version 4.2.0 Patched (2022-05-28 r82413)
>>>>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>>>>> Running under: macOS Monterey 12.3.1
>>>>>>>>> 
>>>>>>>>> Matrix products: default
>>>>>>>>> BLAS: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib 
>>>>>>>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib 
>>>>>>>>> 
>>>>>>>>> locale:
>>>>>>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>>>>>>> 
>>>>>>>>> attached base packages:
>>>>>>>>> [1] tcltk     stats     graphics  grDevices utils datasets  methods
>>>>>>>>> [8] base
>>>>>>>>> 
>>>>>>>>> loaded via a namespace (and not attached):
>>>>>>>>> [1] compiler_4.2.0
>>>>>>>>> 
>>>>>>>>> ------- snip -------
>>>>>>>>> 
>>>>>>>>> Some additional details: The problem occurs both in the R macOS console and, if options(help_type="html"), when R is run in a terminal window on macOS, but not when options(help_type="text"). The former is the default in the Mac R console, the latter when R is run in a terminal.
>>>>>>>>> 
>>>>>>>>> The problem is apparently new in R 4.2.0 -- it doesn't, e.g., occur in R 4.1.3. My apologies for not turning it up earlier.
>>>>>>>>> 
>>>>>>>>> I discovered the problem when accessing help in the Rcmdr GUI, which uses tcltk, caused R to hang.
>>>>>>>>> 
>>>>>>>>> Has anyone else encountered this problem?
>>>>>>>>> 
>>>>>>>>> Best,
>>>>>>>>> John
>>>>>>>>> -- 
>>>>>>>>> John Fox, Professor Emeritus
>>>>>>>>> McMaster University
>>>>>>>>> Hamilton, Ontario, Canada
>>>>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>>>> 
>>>>>>>>> _______________________________________________
>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>> R-SIG-Mac at r-project.org
>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>> 
>>>>>>>> 
>>>>>>>> _______________________________________________
>>>>>>>> R-SIG-Mac mailing list
>>>>>>>> R-SIG-Mac at r-project.org
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>> 
>>>>>>> 
> -- 
> John Fox, Professor Emeritus
> McMaster University
> Hamilton, Ontario, Canada
> web: https://socialsciences.mcmaster.ca/jfox/
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From j|ox @end|ng |rom mcm@@ter@c@  Fri Jun 10 03:12:41 2022
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Thu, 9 Jun 2022 21:12:41 -0400
Subject: [R-SIG-Mac] tcltk causes help() to hang in R 4.2.0 on macOS
In-Reply-To: <A97F25F8-A86F-4642-8EF0-CD4F816ACE68@R-project.org>
References: <753c64bf-4dbc-0d5c-9684-a9116217d9c8@mcmaster.ca>
 <6FF22407-8E58-4644-9B62-42472D859C7D@R-project.org>
 <514B9903-9154-417E-8B97-185DAA1C891F@R-project.org>
 <eab8b8ff-9619-8b59-27ee-4779875fe8c4@mcmaster.ca>
 <2f8b7f43-0391-2758-1b8b-3f5cf5778df1@gmail.com>
 <27598_1654706209_258Gak93008996_ff3427ea-55b6-ed5a-2b26-e9a0b8171569@mcmaster.ca>
 <92b0f13b-59cd-0e77-0d49-6733e167e04a@mcmaster.ca>
 <d6134486-1361-d32e-a41d-d8d67f2045fc@gmail.com>
 <07e3fd56-0171-d24e-dea8-e80b297242fa@mcmaster.ca>
 <A97F25F8-A86F-4642-8EF0-CD4F816ACE68@R-project.org>
Message-ID: <797e6ab8-a7fa-89e0-91a9-1a46b0beb299@mcmaster.ca>

Dear Simon,

On 2022-06-09 8:19 p.m., Simon Urbanek wrote:
> John,
> 
> as Tomas pointed out the problem was there, it was just not as easily triggered, because the help before 4.2.0 was not relying on a set of additional files (here KaTeX). Rcmdr does use tcltk, obviously, so it will always trigger the loop meshing issues.

Thanks for the additional explanation.

For what it's worth, I've tried the Rcmdr under R 4.2.0 patched and HTML 
help works fine (as expected).

> I wonder whether we should re-visit native Tcl/Tk now, since if I recall the main reason it didn't work before were deadlocks in the event loop, so it's even possible that those could be fixed along similar lines...

You, of course, will know much better than I what's possible. I believe 
that Brian Ripley told me some time ago that he was able to get R to 
work on macOS with native Tcl/Tk. That would be desirable for several 
reasons, including (I believe) integration of Tk menus with the Mac menu 
bar and eliminating the necessity for users to install XQuartz.

Best,
  John

> 
> Cheers,
> Simon
> 
> 
> 
>> On Jun 10, 2022, at 2:32 AM, John Fox <jfox at mcmaster.ca> wrote:
>>
>> Dear Tomas,
>>
>> On 2022-06-09 4:14 a.m., Tomas Kalibera wrote:
>>> On 6/8/22 18:39, John Fox wrote:
>>>>
>>>>
>>>> On 2022-06-08 12:36 p.m., John Fox wrote:
>>>>> Dear Thomas,
>>>>>
>>>>> Thanks for this additional information.
>>>>>
>>>>> I added some of my own defensive code to the development version of the Rcmdr package, to set the "help_type" option to "text" for macOS. I'll
>>>>
>>>> I should have added that help_type is set to "text" for R version 4.2.0 only!
>>> I think it is a coincidence that this was seen in R 4.2.0. The http server's handler has a safeguard against re-entrant execution since 59338 (year 2012). As that safeguard was needed at that time for clients connecting in rapid sequence, the problem with the live-lock with tcltk event loop could have been triggered already then, but probably nobody ran into this with tcltk package loaded. PR#17773 shows that attempts for re-entrant/concurrent handling of http requests were seen in R 4.0.0 with the HTML help.
>>
>> My experience of this issue is just with HTML help from the Rcmdr under macOS, but I've confirmed that the problem occurs in R 4.2.0 and not in R 4.1.3, possibly because the Rcmdr doesn't load tcltk (i.e., imports tcltk)?
>>
>> Best,
>> John
>>
>>> Best
>>> Tomas
>>>>
>>>>> modify that to all non-Windows platforms, and also include this in the CRAN version of the package.
>>>>>
>>>>> I currently test on macOS and Windows systems but when I have a chance will get a Linux system working as well.
>>>>>
>>>>> Best,
>>>>>    John
>>>>>
>>>>> On 2022-06-08 12:16 p.m., Tomas Kalibera wrote:
>>>>>> For reference, this problem is not macOS specific, it also exists on Linux (but not on Windows which use a different code path) and the core problem is how to prevent re-entrant execution of R event handlers when run from the R/tcltk event loop, itself running from an R event handler.
>>>>>>
>>>>>> R-patched now contains a defensive work-around from Simon.
>>>>>>
>>>>>> We have added a more efficient and cleaner fix to R-devel, but there is some risk of breakage: this form is "the documented way" but didn't work on some systems ~22 years ago. So it would be great if people using Tcl/Tk in R on Unix, and particularly those with rarely used window managers, could test their applications or the tcltk package demos and report any issues well before the next release.
>>>>>>
>>>>>> Thanks
>>>>>> Tomas
>>>>>>
>>>>>> On 5/30/22 01:27, John Fox wrote:
>>>>>>> Dear Simon,
>>>>>>>
>>>>>>> Thank you for addressing this problem so promptly.
>>>>>>>
>>>>>>> Best,
>>>>>>>   John
>>>>>>>
>>>>>>> On 2022-05-29 6:51 p.m., Simon Urbanek wrote:
>>>>>>>> Actually, I take back the reference to the commit - the deadlock is true, and removing the line is a work-around, but r78421 was not necessarily the regression. The issue seems to be caused by a combination of Tcl/Tk and KaTeX (the latter causes the browser to issue multiple parallel http-requests and the former causes the deadlock in its event loop) which has not been there in earlier R versions.
>>>>>>>>
>>>>>>>> Cheers,
>>>>>>>> Simon
>>>>>>>>
>>>>>>>>
>>>>>>>>> On 30/05/2022, at 10:09 AM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>>>>>>>>
>>>>>>>>> John,
>>>>>>>>>
>>>>>>>>> thanks, this is a regression caused by r78421 (deadlock when TclTk's event loop is called in http processing). Removing L875 in src/modules/internet/Rhttpd.c restores the previous behavior, but the underlying problem is more complex and will require more investigation.
>>>>>>>>>
>>>>>>>>> Cheers,
>>>>>>>>> Simon
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> On 29/05/2022, at 5:36 AM, John Fox <jfox at mcmaster.ca> wrote:
>>>>>>>>>>
>>>>>>>>>> Dear R-sig-mac list members,
>>>>>>>>>>
>>>>>>>>>> I've discovered that loading the tcltk package apparently causes R 4.2.0 (including the current patched version) to hang on an M1 Mac.
>>>>>>>>>>
>>>>>>>>>> Try, e.g.,
>>>>>>>>>>
>>>>>>>>>> library("tcltk")
>>>>>>>>>> help("lm")
>>>>>>>>>>
>>>>>>>>>> My session info:
>>>>>>>>>>
>>>>>>>>>> ------- snip -------
>>>>>>>>>>
>>>>>>>>>>> sessionInfo()
>>>>>>>>>> R version 4.2.0 Patched (2022-05-28 r82413)
>>>>>>>>>> Platform: aarch64-apple-darwin20 (64-bit)
>>>>>>>>>> Running under: macOS Monterey 12.3.1
>>>>>>>>>>
>>>>>>>>>> Matrix products: default
>>>>>>>>>> BLAS: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib
>>>>>>>>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib
>>>>>>>>>>
>>>>>>>>>> locale:
>>>>>>>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>>>>>>>>
>>>>>>>>>> attached base packages:
>>>>>>>>>> [1] tcltk     stats     graphics  grDevices utils datasets  methods
>>>>>>>>>> [8] base
>>>>>>>>>>
>>>>>>>>>> loaded via a namespace (and not attached):
>>>>>>>>>> [1] compiler_4.2.0
>>>>>>>>>>
>>>>>>>>>> ------- snip -------
>>>>>>>>>>
>>>>>>>>>> Some additional details: The problem occurs both in the R macOS console and, if options(help_type="html"), when R is run in a terminal window on macOS, but not when options(help_type="text"). The former is the default in the Mac R console, the latter when R is run in a terminal.
>>>>>>>>>>
>>>>>>>>>> The problem is apparently new in R 4.2.0 -- it doesn't, e.g., occur in R 4.1.3. My apologies for not turning it up earlier.
>>>>>>>>>>
>>>>>>>>>> I discovered the problem when accessing help in the Rcmdr GUI, which uses tcltk, caused R to hang.
>>>>>>>>>>
>>>>>>>>>> Has anyone else encountered this problem?
>>>>>>>>>>
>>>>>>>>>> Best,
>>>>>>>>>> John
>>>>>>>>>> -- 
>>>>>>>>>> John Fox, Professor Emeritus
>>>>>>>>>> McMaster University
>>>>>>>>>> Hamilton, Ontario, Canada
>>>>>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>>>>>
>>>>>>>>>> _______________________________________________
>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>> R-SIG-Mac at r-project.org
>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>> R-SIG-Mac at r-project.org
>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>
>>>>>>>>
>> -- 
>> John Fox, Professor Emeritus
>> McMaster University
>> Hamilton, Ontario, Canada
>> web: https://socialsciences.mcmaster.ca/jfox/
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
> 
-- 
John Fox, Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
web: https://socialsciences.mcmaster.ca/jfox/


From bob @end|ng |rom rud@|@  Fri Jun 10 13:04:30 2022
From: bob @end|ng |rom rud@|@ (Bob Rudis)
Date: Fri, 10 Jun 2022 07:04:30 -0400
Subject: [R-SIG-Mac] Notarization REST API
Message-ID: <CAA-FpKXBsCdF5XNuiZDb8hfrhROeHwhZ8q-gyMzyT0wh9V_YBQ@mail.gmail.com>

FYI: there's a new notarization REST API that one can use instead of
local tooling (not sure if that will be easier for the R/R.app build
workflows)

https://developer.apple.com/documentation/notaryapi


From jcg@ntunez @end|ng |rom gm@||@com  Fri Jun 10 18:09:58 2022
From: jcg@ntunez @end|ng |rom gm@||@com (=?UTF-8?Q?Jos=C3=A9_Carlos_Guerrero_Ant=C3=BAnez?=)
Date: Fri, 10 Jun 2022 13:09:58 -0300
Subject: [R-SIG-Mac] Problems with "rgl"
Message-ID: <CAEO28jfnCSfRu+XZ38nfAs4oKWfAPPMngLSCxqM1MzDnrnPD-g@mail.gmail.com>

Hi,

When I activate this package "rangemap,
https://cran.r-project.org/web/packages/rangemap/index.html", I get an
error message, apparently it is related to "rgl", and I have reinstalled
it, version 0.108.3.

R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Platform: x86_64-apple-darwin17.0 (64-bit)

Any suggestions?

Regards,


Registered S3 methods overwritten by 'rgl':
  method               from
  knit_print.rglId
  knit_print.rglOpen3d
  sew.rglRecordedplot
Error in dyn.load(dynlib <- getDynlib(dir)) :
  unable to load shared object
'/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rgl/libs/rgl.so':

dlopen(/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rgl/libs/rgl.so,
6): Library not loaded: /opt/X11/lib/libGLU.1.dylib
  Referenced from:
/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rgl/libs/rgl.so
  Reason: Incompatible library version: rgl.so requires version 5.0.0 or
later, but libGLU.1.dylib provides version 1.3.0
Error: package or namespace load failed for ?rangemap?:
 .onLoad failed in loadNamespace() for 'rgl', details:
  call: rgl.init(initValue, onlyNULL)
  error: OpenGL is not available in this build
In addition: Warning messages:
1: Loading rgl's DLL failed.
This build of rgl depends on XQuartz, which failed to load.
 See the discussion in https://stackoverflow.com/a/66127391/2554330
2: Trying without OpenGL...



-- 
Jos? Carlos Guerrero

	[[alternative HTML version deleted]]


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Fri Jun 10 19:40:39 2022
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Fri, 10 Jun 2022 18:40:39 +0100
Subject: [R-SIG-Mac] Problems with "rgl"
In-Reply-To: <CAEO28jfnCSfRu+XZ38nfAs4oKWfAPPMngLSCxqM1MzDnrnPD-g@mail.gmail.com>
References: <CAEO28jfnCSfRu+XZ38nfAs4oKWfAPPMngLSCxqM1MzDnrnPD-g@mail.gmail.com>
Message-ID: <70c3de8a-c088-330c-7932-b4caa4502fbe@stats.ox.ac.uk>

On 10/06/2022 17:09, Jos? Carlos Guerrero Ant?nez wrote:
> Hi,
> 
> When I activate this package "rangemap,
> https://cran.r-project.org/web/packages/rangemap/index.html", I get an
> error message, apparently it is related to "rgl", and I have reinstalled
> it, version 0.108.3.

But it looks like you have not installed XQuartz.  If you have done so 
in the past, reinstall it.  As you are on Intel Mac, I think you want 
XQuartz 2.7.11 as I believe that is what is on the build machine.

As a general BTW, I had to guess that you installed a binary package and 
the output below is from library(rgl).  But please do tell us such things.


> R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
> Platform: x86_64-apple-darwin17.0 (64-bit)
> 
> Any suggestions?
> 
> Regards,
> 
> 
> Registered S3 methods overwritten by 'rgl':
>    method               from
>    knit_print.rglId
>    knit_print.rglOpen3d
>    sew.rglRecordedplot
> Error in dyn.load(dynlib <- getDynlib(dir)) :
>    unable to load shared object
> '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rgl/libs/rgl.so':
> 
> dlopen(/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rgl/libs/rgl.so,
> 6): Library not loaded: /opt/X11/lib/libGLU.1.dylib
>    Referenced from:
> /Library/Frameworks/R.framework/Versions/4.2/Resources/library/rgl/libs/rgl.so
>    Reason: Incompatible library version: rgl.so requires version 5.0.0 or
> later, but libGLU.1.dylib provides version 1.3.0
> Error: package or namespace load failed for ?rangemap?:
>   .onLoad failed in loadNamespace() for 'rgl', details:
>    call: rgl.init(initValue, onlyNULL)
>    error: OpenGL is not available in this build
> In addition: Warning messages:
> 1: Loading rgl's DLL failed.
> This build of rgl depends on XQuartz, which failed to load.
>   See the discussion in https://stackoverflow.com/a/66127391/2554330
> 2: Trying without OpenGL...
> 
> 
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From jcg@ntunez @end|ng |rom gm@||@com  Fri Jun 10 22:58:35 2022
From: jcg@ntunez @end|ng |rom gm@||@com (=?UTF-8?Q?Jos=C3=A9_Carlos_Guerrero_Ant=C3=BAnez?=)
Date: Fri, 10 Jun 2022 17:58:35 -0300
Subject: [R-SIG-Mac] Problems with "rgl"
In-Reply-To: <70c3de8a-c088-330c-7932-b4caa4502fbe@stats.ox.ac.uk>
References: <CAEO28jfnCSfRu+XZ38nfAs4oKWfAPPMngLSCxqM1MzDnrnPD-g@mail.gmail.com>
 <70c3de8a-c088-330c-7932-b4caa4502fbe@stats.ox.ac.uk>
Message-ID: <CAEO28jc+J-2BYtncW11YSt6yeHkz_DV8aUEJb7=hGDCukAAGVQ@mail.gmail.com>

Thank you Brian and Duncan,

The solution was easier than I thought, because I had to have installed
XQuartz 2.8.1 instead of 2.7 and now it works correctly.

Regards,

El vie, 10 jun 2022 a las 14:40, Prof Brian Ripley (<ripley at stats.ox.ac.uk>)
escribi?:

> On 10/06/2022 17:09, Jos? Carlos Guerrero Ant?nez wrote:
> > Hi,
> >
> > When I activate this package "rangemap,
> > https://cran.r-project.org/web/packages/rangemap/index.html", I get an
> > error message, apparently it is related to "rgl", and I have reinstalled
> > it, version 0.108.3.
>
> But it looks like you have not installed XQuartz.  If you have done so
> in the past, reinstall it.  As you are on Intel Mac, I think you want
> XQuartz 2.7.11 as I believe that is what is on the build machine.
>
> As a general BTW, I had to guess that you installed a binary package and
> the output below is from library(rgl).  But please do tell us such things.
>
>
> > R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
> > Platform: x86_64-apple-darwin17.0 (64-bit)
> >
> > Any suggestions?
> >
> > Regards,
> >
> >
> > Registered S3 methods overwritten by 'rgl':
> >    method               from
> >    knit_print.rglId
> >    knit_print.rglOpen3d
> >    sew.rglRecordedplot
> > Error in dyn.load(dynlib <- getDynlib(dir)) :
> >    unable to load shared object
> >
> '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rgl/libs/rgl.so':
> >
> >
> dlopen(/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rgl/libs/rgl.so,
> > 6): Library not loaded: /opt/X11/lib/libGLU.1.dylib
> >    Referenced from:
> >
> /Library/Frameworks/R.framework/Versions/4.2/Resources/library/rgl/libs/rgl.so
> >    Reason: Incompatible library version: rgl.so requires version 5.0.0 or
> > later, but libGLU.1.dylib provides version 1.3.0
> > Error: package or namespace load failed for ?rangemap?:
> >   .onLoad failed in loadNamespace() for 'rgl', details:
> >    call: rgl.init(initValue, onlyNULL)
> >    error: OpenGL is not available in this build
> > In addition: Warning messages:
> > 1: Loading rgl's DLL failed.
> > This build of rgl depends on XQuartz, which failed to load.
> >   See the discussion in https://stackoverflow.com/a/66127391/2554330
> > 2: Trying without OpenGL...
> >
> >
> >
>
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
>


-- 
Jos? Carlos Guerrero

	[[alternative HTML version deleted]]


From m@r|u@@ho|ert @end|ng |rom uw@ter|oo@c@  Sat Jun 11 15:52:39 2022
From: m@r|u@@ho|ert @end|ng |rom uw@ter|oo@c@ (Marius Hofert)
Date: Sat, 11 Jun 2022 13:52:39 +0000
Subject: [R-SIG-Mac] configure: error: "liblzma library and headers are
 required"
Message-ID: <YT3PR01MB102504684109F36C9CAB0805F87A99@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>

Hi,

I'd like to install R from source on a MacBook Pro 14 (M1 Pro Max) and do that
for the first time under Apple Silicon.  I could install all preliminaries from
source as I normally did under Intel Macs (even tcl and tk, gsl, gmp, mpfr, etc.).
However, the configure step of R fails with:

...
checking for lzma_version_number in -llzma... yes
checking for lzma.h... no
configure: error: "liblzma library and headers are required"

Related to this problem, I found the references below. However, none of the
suggested solutions worked for me.

The problem seems to be the installation of xz (and, as the references suggest, a similar
problem will arise from pcre2). The header file lzma.h is not found.

Here are the things I tried:

1) A plain 'brew install xz'.

2) Adding the directories where lzma.h is found to PATH:
/usr/local/bin/xz/include/lzma.h
/opt/R/arm64/include/lzma.h
/opt/homebrew/include/lzma.h
/opt/homebrew/Cellar/xz/5.2.5/include/lzma.h

3) Following https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Native-builds:
3.1) Creating /opt/R/arm64
3.2) Downloading xz-5.2.5-darwin.20-arm64.tar.xz from https://mac.r-project.org/bin/darwin20/arm64/
and unpacking it to /opt/R/arm64
3.3) Adding /opt/R/arm64 to PATH

How can xz be installed in Apple Silicon so that configure finds it including headers?

Let me know if you need more information.

Thanks & cheers,
Marius

References:
https://groups.google.com/g/r-sig-mac/c/UPPDNxn7ab4
https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Prerequisites
https://mac.r-project.org/bin/darwin20/arm64/
https://www.mail-archive.com/r-sig-mac at r-project.org/msg05844.html
https://stackoverflow.com/questions/40222371/install-r-with-shared-library-in-osx-liblzma-library-missing
https://pj.freefaculty.org/blog/?p=315







From @|mon@urb@nek @end|ng |rom R-project@org  Sun Jun 12 01:29:01 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 12 Jun 2022 11:29:01 +1200
Subject: [R-SIG-Mac] configure: error: "liblzma library and headers are
 required"
In-Reply-To: <YT3PR01MB102504684109F36C9CAB0805F87A99@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>
References: <YT3PR01MB102504684109F36C9CAB0805F87A99@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <4CBAEFCD-0D8A-4F90-8760-E7187B784A54@R-project.org>

Marius,

most package systems (ours as well as Homebrew) don't use /usr/local on arm64 to not cause inadvertent conflicts with x86_64 binaries, so they must be explicitly added to flags. You failed to provide any details, but I suspect you didn't configure R to use whichever location is necessary for the dependencies since only /usr/local is searched by default. The flags used by CRAN can be seen at
https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64
which works for the binaries installed using 

source("https://mac.R-project.org/bin/install.R")
install.libs("r-base-dev")

(Tcl/TK is not included, if needed you can install it from the release package).

Note that PATH has nothing to do with locating libraries by dyld - PATH is only used for executables so your $LOCAL/bin has to be on the PATH for pkg-config. Also note that mixing different systems is prone to cause chaos, because static and dynamic libraries have different precedence. So make sure you pick one choice (CRAN or Homebrew or Macport etc.) and stick with it.

Cheers,
Simon



> On Jun 12, 2022, at 1:52 AM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
> 
> Hi,
> 
> I'd like to install R from source on a MacBook Pro 14 (M1 Pro Max) and do that
> for the first time under Apple Silicon.  I could install all preliminaries from
> source as I normally did under Intel Macs (even tcl and tk, gsl, gmp, mpfr, etc.).
> However, the configure step of R fails with:
> 
> ...
> checking for lzma_version_number in -llzma... yes
> checking for lzma.h... no
> configure: error: "liblzma library and headers are required"
> 
> Related to this problem, I found the references below. However, none of the
> suggested solutions worked for me.
> 
> The problem seems to be the installation of xz (and, as the references suggest, a similar
> problem will arise from pcre2). The header file lzma.h is not found.
> 
> Here are the things I tried:
> 
> 1) A plain 'brew install xz'.
> 
> 2) Adding the directories where lzma.h is found to PATH:
> /usr/local/bin/xz/include/lzma.h
> /opt/R/arm64/include/lzma.h
> /opt/homebrew/include/lzma.h
> /opt/homebrew/Cellar/xz/5.2.5/include/lzma.h
> 
> 3) Following https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Native-builds:
> 3.1) Creating /opt/R/arm64
> 3.2) Downloading xz-5.2.5-darwin.20-arm64.tar.xz from https://mac.r-project.org/bin/darwin20/arm64/
> and unpacking it to /opt/R/arm64
> 3.3) Adding /opt/R/arm64 to PATH
> 
> How can xz be installed in Apple Silicon so that configure finds it including headers?
> 
> Let me know if you need more information.
> 
> Thanks & cheers,
> Marius
> 
> References:
> https://groups.google.com/g/r-sig-mac/c/UPPDNxn7ab4
> https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Prerequisites
> https://mac.r-project.org/bin/darwin20/arm64/
> https://www.mail-archive.com/r-sig-mac at r-project.org/msg05844.html
> https://stackoverflow.com/questions/40222371/install-r-with-shared-library-in-osx-liblzma-library-missing
> https://pj.freefaculty.org/blog/?p=315
> 
> 
> 
> 
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From m@r|u@@ho|ert @end|ng |rom uw@ter|oo@c@  Sun Jun 12 02:25:56 2022
From: m@r|u@@ho|ert @end|ng |rom uw@ter|oo@c@ (Marius Hofert)
Date: Sun, 12 Jun 2022 00:25:56 +0000
Subject: [R-SIG-Mac] configure: error: "liblzma library and headers are
 required"
In-Reply-To: <4CBAEFCD-0D8A-4F90-8760-E7187B784A54@R-project.org>
References: <YT3PR01MB102504684109F36C9CAB0805F87A99@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>
 <4CBAEFCD-0D8A-4F90-8760-E7187B784A54@R-project.org>
Message-ID: <YT3PR01MB10250D70EDB711AAC62D4060B87A89@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>

Hi Simon,

thanks a lot for your help. I have to admit, a lot of what you wrote is entirely
new to me (probably because we are on arm64 now). So far, on Intel Macs, I
always could easily install R from source (see below) and thus had several
versions available, my own starter script, version-independent library of R
packages, etc.  I used to use /usr/local/R for all of that (see below), which,
now will be /opt/R/arm64 I assume. However, I don't understand why suddenly
lzma.h is not found (even though it's inside /opt/R/arm64 as recommended and
also xz is found, etc.).

1) You mentioned "The flags used by CRAN... which works for the binaries
installed using source(...)".  This part I don't understand. If you already have
R running (to be able to execute the source(); install.libs() command), why are
the flags for compiling R relevant?

2) Concerning the flags on
https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64, are
these the flags used per default if I do ./configure on arm64 or does it mean
that I need to provide all those flags on arm64 because they are not the
default?

3) The install.R script you mentioned already needs to be execute from R, so you
assume R is already installed.  Is the recommended way then to install R via
binaries and then to use install.R to install the tools required to build
packages from source? Can you then still have various R versions installed
(and if so, where are they located)?

As a clarification, what I always did on Intel Macs and what I also tried now is this:

1) Install all preliminaries (GCC, Fortran, XQuartz, qpdf, Tcl/Tk, Open MPI,
GSL, GMP, MPFR, Java, XML, PCRE2, xz) either via brew or directly from source
(./configure, make, make install)

2) create /usr/local/R for the various R versions and ./usr/local/R/library for
a version-independent library of packages

3) Download R versions, say R-4.2.0.tar.gz and unpack them to /usr/local/R/R-4.2.0_source

4) Create /usr/local/R/R-4.2.0_build and execute:
export PKG_CONFIG_PATH=/opt/X11/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig
../R-4.2.0_source/configure --enable-R-shlib --with-tcl-config=/Library/Frameworks/Tcl.framework/Versions/8.6/tclConfig.sh --with-tk-config=/Library/Frameworks/Tk.framework/tkConfig.sh

The latter configure step produced the lzma.h error described. Given what you wrote
I assume I failed to specify the location of the dependencies in ./configure. So
would the right ./configure then specify all flags provided by https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64 ?


Thanks again for your help & cheers,
Marius

________________________________________
From: Simon Urbanek <simon.urbanek at R-project.org>
Sent: Saturday, June 11, 2022 19:29
To: Marius Hofert
Cc: r-sig-mac at r-project.org
Subject: Re: [R-SIG-Mac] configure: error: "liblzma library and headers are required"

Marius,

most package systems (ours as well as Homebrew) don't use /usr/local on arm64 to not cause inadvertent conflicts with x86_64 binaries, so they must be explicitly added to flags. You failed to provide any details, but I suspect you didn't configure R to use whichever location is necessary for the dependencies since only /usr/local is searched by default. The flags used by CRAN can be seen at
https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64
which works for the binaries installed using

source("https://mac.R-project.org/bin/install.R")
install.libs("r-base-dev")

(Tcl/TK is not included, if needed you can install it from the release package).

Note that PATH has nothing to do with locating libraries by dyld - PATH is only used for executables so your $LOCAL/bin has to be on the PATH for pkg-config. Also note that mixing different systems is prone to cause chaos, because static and dynamic libraries have different precedence. So make sure you pick one choice (CRAN or Homebrew or Macport etc.) and stick with it.

Cheers,
Simon



> On Jun 12, 2022, at 1:52 AM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>
> Hi,
>
> I'd like to install R from source on a MacBook Pro 14 (M1 Pro Max) and do that
> for the first time under Apple Silicon.  I could install all preliminaries from
> source as I normally did under Intel Macs (even tcl and tk, gsl, gmp, mpfr, etc.).
> However, the configure step of R fails with:
>
> ...
> checking for lzma_version_number in -llzma... yes
> checking for lzma.h... no
> configure: error: "liblzma library and headers are required"
>
> Related to this problem, I found the references below. However, none of the
> suggested solutions worked for me.
>
> The problem seems to be the installation of xz (and, as the references suggest, a similar
> problem will arise from pcre2). The header file lzma.h is not found.
>
> Here are the things I tried:
>
> 1) A plain 'brew install xz'.
>
> 2) Adding the directories where lzma.h is found to PATH:
> /usr/local/bin/xz/include/lzma.h
> /opt/R/arm64/include/lzma.h
> /opt/homebrew/include/lzma.h
> /opt/homebrew/Cellar/xz/5.2.5/include/lzma.h
>
> 3) Following https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Native-builds:
> 3.1) Creating /opt/R/arm64
> 3.2) Downloading xz-5.2.5-darwin.20-arm64.tar.xz from https://mac.r-project.org/bin/darwin20/arm64/
> and unpacking it to /opt/R/arm64
> 3.3) Adding /opt/R/arm64 to PATH
>
> How can xz be installed in Apple Silicon so that configure finds it including headers?
>
> Let me know if you need more information.
>
> Thanks & cheers,
> Marius
>
> References:
> https://groups.google.com/g/r-sig-mac/c/UPPDNxn7ab4
> https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Prerequisites
> https://mac.r-project.org/bin/darwin20/arm64/
> https://www.mail-archive.com/r-sig-mac at r-project.org/msg05844.html
> https://stackoverflow.com/questions/40222371/install-r-with-shared-library-in-osx-liblzma-library-missing
> https://pj.freefaculty.org/blog/?p=315
>
>
>
>
>
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Jun 12 08:44:41 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 12 Jun 2022 18:44:41 +1200
Subject: [R-SIG-Mac] configure: error: "liblzma library and headers are
 required"
In-Reply-To: <YT3PR01MB10250D70EDB711AAC62D4060B87A89@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>
References: <YT3PR01MB102504684109F36C9CAB0805F87A99@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>
 <4CBAEFCD-0D8A-4F90-8760-E7187B784A54@R-project.org>
 <YT3PR01MB10250D70EDB711AAC62D4060B87A89@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <53059FF6-D2A2-41B2-B5B2-2DA2F5A7ACCD@R-project.org>

Marius,

first, we can only guess since you failed to provide any details (no config.log etc.).

But to recap, R requires additional libraries that are not in the system, so it is your responsibility to provide them. How you do it is entirely up to you, there are many ways. However, if you put those libraries anywhere else than /usr/local then you have to set additional flags which will allow both the compiler and linker to find the new location, because Apple compilers only look in /usr (SDK) and in /usr/local. Given that both Homebrew and our binaries do not live in /usr/local for reasons I explained both *require* that you add the corresponding flags - which I suspect you may have failed to do.

Again, as I was saying my previous e-mail, if you use our static binaries in /opt/R/arm64 then you have add at the very least 'LDFLAGS=-L/opt/R/arm64/lib' 'CPPFLAGS=-I/opt/R/arm64/include' otherwise the compiler has no way of knowing where you put the libraries. In that case I would recommend using the other flags I listed as well unless you have strong reasons no to (especially given the Fortran idiosyncrasies on arm64).

As for install.libs() - that is merely a convenience function that gives you the list of libraries that are required to replicate the CRAN setup. It is not required - you can simply download and install the packages by hand if you wish. You can also simply use recipes to build those libraries yourself (just run scripts/build.sh r-base-dev), or an other system - it's entirely up to you. In the end R doesn't care as long as you provide working libraries and tell R where to find them.

Cheers,
Simon





> On Jun 12, 2022, at 12:25 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
> 
> Hi Simon,
> 
> thanks a lot for your help. I have to admit, a lot of what you wrote is entirely
> new to me (probably because we are on arm64 now). So far, on Intel Macs, I
> always could easily install R from source (see below) and thus had several
> versions available, my own starter script, version-independent library of R
> packages, etc.  I used to use /usr/local/R for all of that (see below), which,
> now will be /opt/R/arm64 I assume. However, I don't understand why suddenly
> lzma.h is not found (even though it's inside /opt/R/arm64 as recommended and
> also xz is found, etc.).
> 
> 1) You mentioned "The flags used by CRAN... which works for the binaries
> installed using source(...)".  This part I don't understand. If you already have
> R running (to be able to execute the source(); install.libs() command), why are
> the flags for compiling R relevant?
> 
> 2) Concerning the flags on
> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64, are
> these the flags used per default if I do ./configure on arm64 or does it mean
> that I need to provide all those flags on arm64 because they are not the
> default?
> 
> 3) The install.R script you mentioned already needs to be execute from R, so you
> assume R is already installed.  Is the recommended way then to install R via
> binaries and then to use install.R to install the tools required to build
> packages from source? Can you then still have various R versions installed
> (and if so, where are they located)?
> 
> As a clarification, what I always did on Intel Macs and what I also tried now is this:
> 
> 1) Install all preliminaries (GCC, Fortran, XQuartz, qpdf, Tcl/Tk, Open MPI,
> GSL, GMP, MPFR, Java, XML, PCRE2, xz) either via brew or directly from source
> (./configure, make, make install)
> 
> 2) create /usr/local/R for the various R versions and ./usr/local/R/library for
> a version-independent library of packages
> 
> 3) Download R versions, say R-4.2.0.tar.gz and unpack them to /usr/local/R/R-4.2.0_source
> 
> 4) Create /usr/local/R/R-4.2.0_build and execute:
> export PKG_CONFIG_PATH=/opt/X11/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig
> ../R-4.2.0_source/configure --enable-R-shlib --with-tcl-config=/Library/Frameworks/Tcl.framework/Versions/8.6/tclConfig.sh --with-tk-config=/Library/Frameworks/Tk.framework/tkConfig.sh
> 
> The latter configure step produced the lzma.h error described. Given what you wrote
> I assume I failed to specify the location of the dependencies in ./configure. So
> would the right ./configure then specify all flags provided by https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64 ?
> 
> 
> Thanks again for your help & cheers,
> Marius
> 
> ________________________________________
> From: Simon Urbanek <simon.urbanek at R-project.org>
> Sent: Saturday, June 11, 2022 19:29
> To: Marius Hofert
> Cc: r-sig-mac at r-project.org
> Subject: Re: [R-SIG-Mac] configure: error: "liblzma library and headers are required"
> 
> Marius,
> 
> most package systems (ours as well as Homebrew) don't use /usr/local on arm64 to not cause inadvertent conflicts with x86_64 binaries, so they must be explicitly added to flags. You failed to provide any details, but I suspect you didn't configure R to use whichever location is necessary for the dependencies since only /usr/local is searched by default. The flags used by CRAN can be seen at
> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64
> which works for the binaries installed using
> 
> source("https://mac.R-project.org/bin/install.R")
> install.libs("r-base-dev")
> 
> (Tcl/TK is not included, if needed you can install it from the release package).
> 
> Note that PATH has nothing to do with locating libraries by dyld - PATH is only used for executables so your $LOCAL/bin has to be on the PATH for pkg-config. Also note that mixing different systems is prone to cause chaos, because static and dynamic libraries have different precedence. So make sure you pick one choice (CRAN or Homebrew or Macport etc.) and stick with it.
> 
> Cheers,
> Simon
> 
> 
> 
>> On Jun 12, 2022, at 1:52 AM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>> 
>> Hi,
>> 
>> I'd like to install R from source on a MacBook Pro 14 (M1 Pro Max) and do that
>> for the first time under Apple Silicon.  I could install all preliminaries from
>> source as I normally did under Intel Macs (even tcl and tk, gsl, gmp, mpfr, etc.).
>> However, the configure step of R fails with:
>> 
>> ...
>> checking for lzma_version_number in -llzma... yes
>> checking for lzma.h... no
>> configure: error: "liblzma library and headers are required"
>> 
>> Related to this problem, I found the references below. However, none of the
>> suggested solutions worked for me.
>> 
>> The problem seems to be the installation of xz (and, as the references suggest, a similar
>> problem will arise from pcre2). The header file lzma.h is not found.
>> 
>> Here are the things I tried:
>> 
>> 1) A plain 'brew install xz'.
>> 
>> 2) Adding the directories where lzma.h is found to PATH:
>> /usr/local/bin/xz/include/lzma.h
>> /opt/R/arm64/include/lzma.h
>> /opt/homebrew/include/lzma.h
>> /opt/homebrew/Cellar/xz/5.2.5/include/lzma.h
>> 
>> 3) Following https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Native-builds:
>> 3.1) Creating /opt/R/arm64
>> 3.2) Downloading xz-5.2.5-darwin.20-arm64.tar.xz from https://mac.r-project.org/bin/darwin20/arm64/
>> and unpacking it to /opt/R/arm64
>> 3.3) Adding /opt/R/arm64 to PATH
>> 
>> How can xz be installed in Apple Silicon so that configure finds it including headers?
>> 
>> Let me know if you need more information.
>> 
>> Thanks & cheers,
>> Marius
>> 
>> References:
>> https://groups.google.com/g/r-sig-mac/c/UPPDNxn7ab4
>> https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Prerequisites
>> https://mac.r-project.org/bin/darwin20/arm64/
>> https://www.mail-archive.com/r-sig-mac at r-project.org/msg05844.html
>> https://stackoverflow.com/questions/40222371/install-r-with-shared-library-in-osx-liblzma-library-missing
>> https://pj.freefaculty.org/blog/?p=315
>> 
>> 
>> 
>> 
>> 
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 


From he||yj @end|ng |rom uc@d@edu  Mon Jun 13 01:04:52 2022
From: he||yj @end|ng |rom uc@d@edu (John Helly)
Date: Sun, 12 Jun 2022 13:04:52 -1000
Subject: [R-SIG-Mac] Failure using geom_polygon with 2D facet_grid: 1D works
In-Reply-To: <70c3de8a-c088-330c-7932-b4caa4502fbe@stats.ox.ac.uk>
References: <CAEO28jfnCSfRu+XZ38nfAs4oKWfAPPMngLSCxqM1MzDnrnPD-g@mail.gmail.com>
 <70c3de8a-c088-330c-7932-b4caa4502fbe@stats.ox.ac.uk>
Message-ID: <6f682225-2032-160b-c513-c28bf939c9b1@ucsd.edu>

Aloha.

I'm trying to add a state map boundary to a 2D facet_grid in ggplot 
which plots correlations against principal components (PC).

The 1D case works but I cannot discover what is causing the failure in 
the 2D case.? It may be a limit to facet_grid in some way or, more 
likely, something I don't understand.

ggplot(A0G, aes(Longitude, Latitude, color=Correlation)) +
+ geom_point(size=2*abs(A0G$Correlation)) +
+ geom_polygon(data = ca_df, aes(x=Longitude, y=Latitude, fill = NA, 
color = "black")) +
+ facet_grid(rows=vars(A0G$Lag), cols=vars(A0G$PC))

Error in `$<-.data.frame`(`*tmp*`, "PANEL", value = c(4L, 3L, 5L, 10L,? :
 ? replacement has 11112 rows, data has 516

The issue seems related to the dimensions of the map df and the data df 
but I can't grok the problem since it works in the 1D case.

 > dim(ca_df)
[1] 516?? 6

 > dim(A0G)
[1] 11112??? 18

Any suggestions welcome.? I'll just keep breaking the problem down if 
there isn't anything obvious.

J.

-- 
John Helly, University of California, San Diego / San Diego Supercomputer Center / Scripps Institution of Oceanography / 760 840 8660 mobile /http://www.sdsc.edu/~hellyj
ORCID ID: orcid.org/0000-0002-3779-0603

	[[alternative HTML version deleted]]


From dw|n@em|u@ @end|ng |rom comc@@t@net  Mon Jun 13 06:48:52 2022
From: dw|n@em|u@ @end|ng |rom comc@@t@net (David Winsemius)
Date: Sun, 12 Jun 2022 21:48:52 -0700
Subject: [R-SIG-Mac] 
 Failure using geom_polygon with 2D facet_grid: 1D works
In-Reply-To: <6f682225-2032-160b-c513-c28bf939c9b1@ucsd.edu>
References: <6f682225-2032-160b-c513-c28bf939c9b1@ucsd.edu>
Message-ID: <E91D6E4F-5D1D-4217-A7B8-DB1F8CCD2666@comcast.net>

This appears to no longer be a Mac problem. Other venues such as StackOverflow, Rstudio help forums or even Rhelp would all be more appropriate. 


If you do decide to send to Rhelp , please read the Posting Guide.  (At the moment you are sending HTML to a plain text mailing list. )
? 
David

Sent from my iPhone

> On Jun 12, 2022, at 4:05 PM, John Helly via R-SIG-Mac <r-sig-mac at r-project.org> wrote:
> 
> ?Aloha.
> 
> I'm trying to add a state map boundary to a 2D facet_grid in ggplot 
> which plots correlations against principal components (PC).
> 
> The 1D case works but I cannot discover what is causing the failure in 
> the 2D case.  It may be a limit to facet_grid in some way or, more 
> likely, something I don't understand.
> 
> ggplot(A0G, aes(Longitude, Latitude, color=Correlation)) +
> + geom_point(size=2*abs(A0G$Correlation)) +
> + geom_polygon(data = ca_df, aes(x=Longitude, y=Latitude, fill = NA, 
> color = "black")) +
> + facet_grid(rows=vars(A0G$Lag), cols=vars(A0G$PC))
> 
> Error in `$<-.data.frame`(`*tmp*`, "PANEL", value = c(4L, 3L, 5L, 10L,  :
>   replacement has 11112 rows, data has 516
> 
> The issue seems related to the dimensions of the map df and the data df 
> but I can't grok the problem since it works in the 1D case.
> 
>> dim(ca_df)
> [1] 516   6
> 
>> dim(A0G)
> [1] 11112    18
> 
> Any suggestions welcome.  I'll just keep breaking the problem down if 
> there isn't anything obvious.
> 
> J.
> 
> -- 
> John Helly, University of California, San Diego / San Diego Supercomputer Center / Scripps Institution of Oceanography / 760 840 8660 mobile /http://www.sdsc.edu/~hellyj
> ORCID ID: orcid.org/0000-0002-3779-0603
> 
>    [[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From m@r|u@@ho|ert @end|ng |rom uw@ter|oo@c@  Tue Jun 14 00:23:59 2022
From: m@r|u@@ho|ert @end|ng |rom uw@ter|oo@c@ (Marius Hofert)
Date: Mon, 13 Jun 2022 22:23:59 +0000
Subject: [R-SIG-Mac] configure: error: "liblzma library and headers are
 required"
In-Reply-To: <53059FF6-D2A2-41B2-B5B2-2DA2F5A7ACCD@R-project.org>
References: <YT3PR01MB102504684109F36C9CAB0805F87A99@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>
 <4CBAEFCD-0D8A-4F90-8760-E7187B784A54@R-project.org>
 <YT3PR01MB10250D70EDB711AAC62D4060B87A89@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>
 <53059FF6-D2A2-41B2-B5B2-2DA2F5A7ACCD@R-project.org>
Message-ID: <YT3PR01MB10250CCA410DFBD70E322CF1E87AB9@YT3PR01MB10250.CANPRD01.PROD.OUTLOOK.COM>

Hi Simon,

thanks very much for your help. I now read a bit more about the "binaries way" of doing things and went with ./build.sh r-base-dev. Everything worked flawlessly. If I'm brave I will try again installing from source next time (with all the flags you mentioned) but for now I'm glad everything seems to run again :-)

Thanks & cheers,
Marius





________________________________________
From: Simon Urbanek <simon.urbanek at R-project.org>
Sent: Sunday, June 12, 2022 02:44
To: Marius Hofert
Cc: r-sig-mac at r-project.org
Subject: Re: [R-SIG-Mac] configure: error: "liblzma library and headers are required"

Marius,

first, we can only guess since you failed to provide any details (no config.log etc.).

But to recap, R requires additional libraries that are not in the system, so it is your responsibility to provide them. How you do it is entirely up to you, there are many ways. However, if you put those libraries anywhere else than /usr/local then you have to set additional flags which will allow both the compiler and linker to find the new location, because Apple compilers only look in /usr (SDK) and in /usr/local. Given that both Homebrew and our binaries do not live in /usr/local for reasons I explained both *require* that you add the corresponding flags - which I suspect you may have failed to do.

Again, as I was saying my previous e-mail, if you use our static binaries in /opt/R/arm64 then you have add at the very least 'LDFLAGS=-L/opt/R/arm64/lib' 'CPPFLAGS=-I/opt/R/arm64/include' otherwise the compiler has no way of knowing where you put the libraries. In that case I would recommend using the other flags I listed as well unless you have strong reasons no to (especially given the Fortran idiosyncrasies on arm64).

As for install.libs() - that is merely a convenience function that gives you the list of libraries that are required to replicate the CRAN setup. It is not required - you can simply download and install the packages by hand if you wish. You can also simply use recipes to build those libraries yourself (just run scripts/build.sh r-base-dev), or an other system - it's entirely up to you. In the end R doesn't care as long as you provide working libraries and tell R where to find them.

Cheers,
Simon





> On Jun 12, 2022, at 12:25 PM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>
> Hi Simon,
>
> thanks a lot for your help. I have to admit, a lot of what you wrote is entirely
> new to me (probably because we are on arm64 now). So far, on Intel Macs, I
> always could easily install R from source (see below) and thus had several
> versions available, my own starter script, version-independent library of R
> packages, etc.  I used to use /usr/local/R for all of that (see below), which,
> now will be /opt/R/arm64 I assume. However, I don't understand why suddenly
> lzma.h is not found (even though it's inside /opt/R/arm64 as recommended and
> also xz is found, etc.).
>
> 1) You mentioned "The flags used by CRAN... which works for the binaries
> installed using source(...)".  This part I don't understand. If you already have
> R running (to be able to execute the source(); install.libs() command), why are
> the flags for compiling R relevant?
>
> 2) Concerning the flags on
> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64, are
> these the flags used per default if I do ./configure on arm64 or does it mean
> that I need to provide all those flags on arm64 because they are not the
> default?
>
> 3) The install.R script you mentioned already needs to be execute from R, so you
> assume R is already installed.  Is the recommended way then to install R via
> binaries and then to use install.R to install the tools required to build
> packages from source? Can you then still have various R versions installed
> (and if so, where are they located)?
>
> As a clarification, what I always did on Intel Macs and what I also tried now is this:
>
> 1) Install all preliminaries (GCC, Fortran, XQuartz, qpdf, Tcl/Tk, Open MPI,
> GSL, GMP, MPFR, Java, XML, PCRE2, xz) either via brew or directly from source
> (./configure, make, make install)
>
> 2) create /usr/local/R for the various R versions and ./usr/local/R/library for
> a version-independent library of packages
>
> 3) Download R versions, say R-4.2.0.tar.gz and unpack them to /usr/local/R/R-4.2.0_source
>
> 4) Create /usr/local/R/R-4.2.0_build and execute:
> export PKG_CONFIG_PATH=/opt/X11/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig
> ../R-4.2.0_source/configure --enable-R-shlib --with-tcl-config=/Library/Frameworks/Tcl.framework/Versions/8.6/tclConfig.sh --with-tk-config=/Library/Frameworks/Tk.framework/tkConfig.sh
>
> The latter configure step produced the lzma.h error described. Given what you wrote
> I assume I failed to specify the location of the dependencies in ./configure. So
> would the right ./configure then specify all flags provided by https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64 ?
>
>
> Thanks again for your help & cheers,
> Marius
>
> ________________________________________
> From: Simon Urbanek <simon.urbanek at R-project.org>
> Sent: Saturday, June 11, 2022 19:29
> To: Marius Hofert
> Cc: r-sig-mac at r-project.org
> Subject: Re: [R-SIG-Mac] configure: error: "liblzma library and headers are required"
>
> Marius,
>
> most package systems (ours as well as Homebrew) don't use /usr/local on arm64 to not cause inadvertent conflicts with x86_64 binaries, so they must be explicitly added to flags. You failed to provide any details, but I suspect you didn't configure R to use whichever location is necessary for the dependencies since only /usr/local is searched by default. The flags used by CRAN can be seen at
> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.big-sur-arm64
> which works for the binaries installed using
>
> source("https://mac.R-project.org/bin/install.R")
> install.libs("r-base-dev")
>
> (Tcl/TK is not included, if needed you can install it from the release package).
>
> Note that PATH has nothing to do with locating libraries by dyld - PATH is only used for executables so your $LOCAL/bin has to be on the PATH for pkg-config. Also note that mixing different systems is prone to cause chaos, because static and dynamic libraries have different precedence. So make sure you pick one choice (CRAN or Homebrew or Macport etc.) and stick with it.
>
> Cheers,
> Simon
>
>
>
>> On Jun 12, 2022, at 1:52 AM, Marius Hofert <marius.hofert at uwaterloo.ca> wrote:
>>
>> Hi,
>>
>> I'd like to install R from source on a MacBook Pro 14 (M1 Pro Max) and do that
>> for the first time under Apple Silicon.  I could install all preliminaries from
>> source as I normally did under Intel Macs (even tcl and tk, gsl, gmp, mpfr, etc.).
>> However, the configure step of R fails with:
>>
>> ...
>> checking for lzma_version_number in -llzma... yes
>> checking for lzma.h... no
>> configure: error: "liblzma library and headers are required"
>>
>> Related to this problem, I found the references below. However, none of the
>> suggested solutions worked for me.
>>
>> The problem seems to be the installation of xz (and, as the references suggest, a similar
>> problem will arise from pcre2). The header file lzma.h is not found.
>>
>> Here are the things I tried:
>>
>> 1) A plain 'brew install xz'.
>>
>> 2) Adding the directories where lzma.h is found to PATH:
>> /usr/local/bin/xz/include/lzma.h
>> /opt/R/arm64/include/lzma.h
>> /opt/homebrew/include/lzma.h
>> /opt/homebrew/Cellar/xz/5.2.5/include/lzma.h
>>
>> 3) Following https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Native-builds:
>> 3.1) Creating /opt/R/arm64
>> 3.2) Downloading xz-5.2.5-darwin.20-arm64.tar.xz from https://mac.r-project.org/bin/darwin20/arm64/
>> and unpacking it to /opt/R/arm64
>> 3.3) Adding /opt/R/arm64 to PATH
>>
>> How can xz be installed in Apple Silicon so that configure finds it including headers?
>>
>> Let me know if you need more information.
>>
>> Thanks & cheers,
>> Marius
>>
>> References:
>> https://groups.google.com/g/r-sig-mac/c/UPPDNxn7ab4
>> https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Prerequisites
>> https://mac.r-project.org/bin/darwin20/arm64/
>> https://www.mail-archive.com/r-sig-mac at r-project.org/msg05844.html
>> https://stackoverflow.com/questions/40222371/install-r-with-shared-library-in-osx-liblzma-library-missing
>> https://pj.freefaculty.org/blog/?p=315
>>
>>
>>
>>
>>
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>


From pm|||n @end|ng |rom gm@||@com  Tue Jun 14 13:09:42 2022
From: pm|||n @end|ng |rom gm@||@com (Petar Milin)
Date: Tue, 14 Jun 2022 12:09:42 +0100
Subject: [R-SIG-Mac] Non-zero exit status for igraph, rgl and terra packages
Message-ID: <16ED9842-B27B-4E98-974A-1FE1816CC472@gmail.com>

Hi Mac list,

I am wondering if the failure to install/update igraph, rgl and terra packages is macOS specific or more general. I was trying to follow some advice which I have found on the internet, but no luck whatsoever. Any help?

Kind regards,
Petar
	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jun 14 15:17:20 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 14 Jun 2022 09:17:20 -0400
Subject: [R-SIG-Mac] 
 Non-zero exit status for igraph, rgl and terra packages
In-Reply-To: <16ED9842-B27B-4E98-974A-1FE1816CC472@gmail.com>
References: <16ED9842-B27B-4E98-974A-1FE1816CC472@gmail.com>
Message-ID: <cac9177a-adea-37ce-bd9a-018dc7833858@gmail.com>

On 14/06/2022 7:09 a.m., Petar Milin wrote:
> Hi Mac list,
> 
> I am wondering if the failure to install/update igraph, rgl and terra packages is macOS specific or more general. I was trying to follow some advice which I have found on the internet, but no luck whatsoever. Any help?

All of those packages have dependencies that need to be installed.  I 
don't remember the dependencies for igraph and terra, but for rgl you 
need to have a current version of XQuartz with the development files in 
the standard place, or configure rgl not to use X11.

Duncan Murdoch


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Tue Jun 14 16:13:11 2022
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Tue, 14 Jun 2022 16:13:11 +0200
Subject: [R-SIG-Mac] 
 Non-zero exit status for igraph, rgl and terra packages
In-Reply-To: <cac9177a-adea-37ce-bd9a-018dc7833858@gmail.com>
References: <16ED9842-B27B-4E98-974A-1FE1816CC472@gmail.com>
 <cac9177a-adea-37ce-bd9a-018dc7833858@gmail.com>
Message-ID: <987144CE-F365-4CF3-9182-1FD25EFBC828@gmail.com>

{terra}, {sf} and maybe other spatial packages have some issues with source installation since some time, see [this discussion](https://github.com/r-spatial/sf/issues/1894) for more info.

The binaries work fine.

On 14 Jun 2022, at 15:17, Duncan Murdoch wrote:

> On 14/06/2022 7:09 a.m., Petar Milin wrote:
>> Hi Mac list,
>>
>> I am wondering if the failure to install/update igraph, rgl and terra packages is macOS specific or more general. I was trying to follow some advice which I have found on the internet, but no luck whatsoever. Any help?
>
> All of those packages have dependencies that need to be installed.  I don't remember the dependencies for igraph and terra, but for rgl you need to have a current version of XQuartz with the development files in the standard place, or configure rgl not to use X11.
>
> Duncan Murdoch
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20220614/4695cd4a/attachment.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 870 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20220614/4695cd4a/attachment.sig>

