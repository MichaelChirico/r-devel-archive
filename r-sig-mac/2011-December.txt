From Thomas.Chesney at nottingham.ac.uk  Wed Dec  7 12:05:13 2011
From: Thomas.Chesney at nottingham.ac.uk (Thomas Chesney)
Date: Wed, 7 Dec 2011 11:05:13 +0000
Subject: [R-SIG-Mac] arules installation
Message-ID: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF1@EXCHANGE2.ad.nottingham.ac.uk>

I sent the following and got the following reply to the R-Help, and then was told I should have sent it here.

On 07.12.2011 10:54, Thomas Chesney wrote:
>   I'm using R version 2.13.0 (2011-04-13) on Mac OS X and I get the following error message with library(arules):
>
> Loading required package: Matrix
> Loading required package: lattice
>
> Attaching package: 'Matrix'
>
> The following object(s) are masked from 'package:base':
>
>      det
>
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>    unable to load shared object '/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so':
>    dlopen(/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so, 6): Library not loaded: /Library/Frameworks/R.framework/Versions/2.14/Resources/lib/libR.dylib
>    Referenced from: /Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so
>    Reason: image not found
> In addition: Warning message:
> package 'arules' was built under R version 2.14.0
> Error: package/namespace load failed for 'arules'

Install an arules binary that was built for your version of R (reather 
than a later one) or install from sources.

Uwe Ligges

>
> The arules CRAN page says: Depends:   R (? 2.11.0), stats, methods, Matrix (? 0.999375-38), all of which I have - anyone know what the problem is? I'm really relunctant to update R as its Package Installer is blocked somehow by our Firewall and updating all the packages I use is a major hassle.
>
> Thank you (as always!)
>
> Thomas
>
> PS on a related note, are the package installer port settings available somewhere and I'll send them to IT, ask them to unblock it?


-------------------------------------

I tried installing from source as Prof Ligges suggested (as explained here: http://stackoverflow.com/questions/1474081/how-do-i-install-an-r-package-from-source) but got the following error:

install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz", repos=NULL, type="source")
* installing *source* package ?arules? ...
** libs
*** arch - i386
sh: make: command not found
ERROR: compilation failed for package ?arules?
* removing ?/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules?
Warning message:
In install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz",  :
  installation of package '/Users/thomas/Documents/arules_1.0-7.tar.gz' had non-zero exit status

Why would installing from source make any difference? Prof Ripley suggested I use arules for R.13.0, which I would if I could find it.

Has anyone got any advice?

Thank you,

Thomas
This message and any attachment are intended solely for the addressee and may contain confidential information. If you have received this message in error, please send it back to me, and immediately delete it.   Please do not use, copy or disclose the information contained in this message or in any attachment.  Any views or opinions expressed by the author of this email do not necessarily reflect the views of the University of Nottingham.

This message has been checked for viruses but the contents of an attachment
may still contain software viruses which could damage your computer system:
you are advised to perform your own checks. Email communications with the
University of Nottingham may be monitored as permitted by UK legislation.

From daniel.lists at mandic.com.br  Wed Dec  7 14:34:30 2011
From: daniel.lists at mandic.com.br (Daniel Serodio (lists))
Date: Wed, 07 Dec 2011 11:34:30 -0200
Subject: [R-SIG-Mac] How to report a segmentation fault
Message-ID: <4EDF6B66.6070808@mandic.com.br>

I'm a complete R newbie. My first R script is to generate a histogram 
from a CSV file, and I'm getting a segmentation fault every time.

 > csv <- read.csv(file='data.csv',head=TRUE,sep=",")
 > hist(csv$foo)

  *** caught segfault ***
address 0x0, cause 'memory not mapped'

Traceback:
  1: title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...)
  2: plot.histogram(r, freq = freq1, col = col, border = border, angle = 
angle,     density = density, main = main, xlim = xlim, ylim = ylim,     
xlab = xlab, ylab = ylab, axes = axes, labels = labels, ...)
  3: plot(r, freq = freq1, col = col, border = border, angle = 
angle,     density = density, main = main, xlim = xlim, ylim = ylim,     
xlab = xlab, ylab = ylab, axes = axes, labels = labels, ...)
  4: hist.default(csv$last_web_mail_date)
  5: hist(csv$last_web_mail_date)




How should I report this bug? I'm running R 2.14.0 (compiled by "brew") 
on Lion

Thanks in advance,
Daniel Serodio


From michael.weylandt at gmail.com  Wed Dec  7 14:36:25 2011
From: michael.weylandt at gmail.com (R. Michael Weylandt <michael.weylandt@gmail.com>)
Date: Wed, 7 Dec 2011 08:36:25 -0500
Subject: [R-SIG-Mac] arules installation
In-Reply-To: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF1@EXCHANGE2.ad.nottingham.ac.uk>
References: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF1@EXCHANGE2.ad.nottingham.ac.uk>
Message-ID: <5959C187-F2D5-4443-8161-5B2BDA2E3575@gmail.com>

You need a C compiler: the usual recommendation is XCode which you can get off your OS X install DVD or download from Apple Developer pages. 

Out of curiosity, how did you download the first time? I can still get 2.13.x packages from CRAN though I haven't tried with arules specifically. 

Michael

On Dec 7, 2011, at 6:05 AM, Thomas Chesney <Thomas.Chesney at nottingham.ac.uk> wrote:

> I sent the following and got the following reply to the R-Help, and then was told I should have sent it here.
> 
> On 07.12.2011 10:54, Thomas Chesney wrote:
>>  I'm using R version 2.13.0 (2011-04-13) on Mac OS X and I get the following error message with library(arules):
>> 
>> Loading required package: Matrix
>> Loading required package: lattice
>> 
>> Attaching package: 'Matrix'
>> 
>> The following object(s) are masked from 'package:base':
>> 
>>     det
>> 
>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>   unable to load shared object '/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so':
>>   dlopen(/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so, 6): Library not loaded: /Library/Frameworks/R.framework/Versions/2.14/Resources/lib/libR.dylib
>>   Referenced from: /Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so
>>   Reason: image not found
>> In addition: Warning message:
>> package 'arules' was built under R version 2.14.0
>> Error: package/namespace load failed for 'arules'
> 
> Install an arules binary that was built for your version of R (reather 
> than a later one) or install from sources.
> 
> Uwe Ligges
> 
>> 
>> The arules CRAN page says: Depends:   R (? 2.11.0), stats, methods, Matrix (? 0.999375-38), all of which I have - anyone know what the problem is? I'm really relunctant to update R as its Package Installer is blocked somehow by our Firewall and updating all the packages I use is a major hassle.
>> 
>> Thank you (as always!)
>> 
>> Thomas
>> 
>> PS on a related note, are the package installer port settings available somewhere and I'll send them to IT, ask them to unblock it?
> 
> 
> -------------------------------------
> 
> I tried installing from source as Prof Ligges suggested (as explained here: http://stackoverflow.com/questions/1474081/how-do-i-install-an-r-package-from-source) but got the following error:
> 
> install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz", repos=NULL, type="source")
> * installing *source* package ?arules? ...
> ** libs
> *** arch - i386
> sh: make: command not found
> ERROR: compilation failed for package ?arules?
> * removing ?/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules?
> Warning message:
> In install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz",  :
>  installation of package '/Users/thomas/Documents/arules_1.0-7.tar.gz' had non-zero exit status
> 
> Why would installing from source make any difference? Prof Ripley suggested I use arules for R.13.0, which I would if I could find it.
> 
> Has anyone got any advice?
> 
> Thank you,
> 
> Thomas
> This message and any attachment are intended solely for the addressee and may contain confidential information. If you have received this message in error, please send it back to me, and immediately delete it.   Please do not use, copy or disclose the information contained in this message or in any attachment.  Any views or opinions expressed by the author of this email do not necessarily reflect the views of the University of Nottingham.
> 
> This message has been checked for viruses but the contents of an attachment
> may still contain software viruses which could damage your computer system:
> you are advised to perform your own checks. Email communications with the
> University of Nottingham may be monitored as permitted by UK legislation.
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From sdavis2 at mail.nih.gov  Wed Dec  7 14:47:07 2011
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Wed, 7 Dec 2011 08:47:07 -0500
Subject: [R-SIG-Mac] How to report a segmentation fault
In-Reply-To: <4EDF6B66.6070808@mandic.com.br>
References: <4EDF6B66.6070808@mandic.com.br>
Message-ID: <CANeAVBm5EQKsUcvbDynkGCSn9ZGVxpAYK5rtaPO-Q=x4tkrbVA@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111207/9dba46d5/attachment.pl>

From lists at remoteinformation.com.au  Wed Dec  7 15:03:10 2011
From: lists at remoteinformation.com.au (Ben Madin)
Date: Wed, 7 Dec 2011 22:03:10 +0800
Subject: [R-SIG-Mac] How to report a segmentation fault
In-Reply-To: <4EDF6B66.6070808@mandic.com.br>
References: <4EDF6B66.6070808@mandic.com.br>
Message-ID: <404966A9-5D96-4877-B2A8-CC31EBFA0A23@remoteinformation.com.au>

Daniel,

I can't help much with the segfault, but if you want someone to help you need to provide a minimum reproducible example. In this case you have the code, but not the data - leaving me wondering :

is this dataset so huge that most computers would run out of capacity?
does it happen with a subset of the data? (even just a few rows... one row?)
does it happen with a hist of anything - what does hist(rnorm(1e4)) give you ?
is there a column called foo in the file?
is there an out of range value in the csv file?

I would suggest you supply the data (or at least as much as is required to reproduce the error), and also the output of sessionInfo()

As a R newbie, you might also want to have a look at :

http://www.r-project.org/posting-guide.html
http://www.catb.org/~esr/faqs/smart-questions.html

I hope someone can help you more than I!

cheers

Ben





 
On 07/12/2011, at 9:34 PM, Daniel Serodio (lists) wrote:

> I'm a complete R newbie. My first R script is to generate a histogram from a CSV file, and I'm getting a segmentation fault every time.
> 
> > csv <- read.csv(file='data.csv',head=TRUE,sep=",")
> > hist(csv$foo)
> 
> *** caught segfault ***
> address 0x0, cause 'memory not mapped'
> 
> Traceback:
> 1: title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...)
> 2: plot.histogram(r, freq = freq1, col = col, border = border, angle = angle,     density = density, main = main, xlim = xlim, ylim = ylim,     xlab = xlab, ylab = ylab, axes = axes, labels = labels, ...)
> 3: plot(r, freq = freq1, col = col, border = border, angle = angle,     density = density, main = main, xlim = xlim, ylim = ylim,     xlab = xlab, ylab = ylab, axes = axes, labels = labels, ...)
> 4: hist.default(csv$last_web_mail_date)
> 5: hist(csv$last_web_mail_date)
> 
> 
> 
> 
> How should I report this bug? I'm running R 2.14.0 (compiled by "brew") on Lion
> 
> Thanks in advance,
> Daniel Serodio
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From daniel.lists at mandic.com.br  Wed Dec  7 17:10:53 2011
From: daniel.lists at mandic.com.br (Daniel Serodio (lists))
Date: Wed, 07 Dec 2011 14:10:53 -0200
Subject: [R-SIG-Mac] How to report a segmentation fault
In-Reply-To: <CANeAVBm5EQKsUcvbDynkGCSn9ZGVxpAYK5rtaPO-Q=x4tkrbVA@mail.gmail.com>
References: <4EDF6B66.6070808@mandic.com.br>
	<CANeAVBm5EQKsUcvbDynkGCSn9ZGVxpAYK5rtaPO-Q=x4tkrbVA@mail.gmail.com>
Message-ID: <4EDF900D.4050707@mandic.com.br>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111207/8432334b/attachment.pl>

From michael.weylandt at gmail.com  Wed Dec  7 22:35:43 2011
From: michael.weylandt at gmail.com (R. Michael Weylandt)
Date: Wed, 7 Dec 2011 16:35:43 -0500
Subject: [R-SIG-Mac] arules installation
In-Reply-To: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF4@EXCHANGE2.ad.nottingham.ac.uk>
References: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF1@EXCHANGE2.ad.nottingham.ac.uk>
	<5959C187-F2D5-4443-8161-5B2BDA2E3575@gmail.com>
	<5EAA21940C65214F9C11DA5FBBC14F0B3004573DF4@EXCHANGE2.ad.nottingham.ac.uk>
Message-ID: <CAAmySGMJONs2gVxpUdf5syTQtQRLfFgAfCxQ=qnvb7C+Gawegw@mail.gmail.com>

Theoretically, but I've always built packages from Terminal so I can't
promise it. Also, there's an outside chance you'll need a Fortran
compiler too, but I haven't looked at the source files to confirm.

I'd also suggest you try your CRAN mirror one more time and make sure
you are getting the 2.13 version: for instance, I used this link:

http://lib.stat.cmu.edu/R/CRAN/bin/macosx/leopard/contrib/2.13/arules_1.0-7.tgz'

I believe that the link shown on the CRAN page will automatically give
you the current release (2.14) build.

Michael

2011/12/7 Thomas Chesney <Thomas.Chesney at nottingham.ac.uk>:
> Michael - thanks for the reply. So if I install my XCode C complier, then download the latest arules source file which is: arules_1.0-7.tar.gz and then run: install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz", repos=NULL, type="source") it will just work? (Why will that work with the latest version but the latest .tgz won't?)
>
> What I usually do to install a package is download the .tgz file, double click to unzip it, then copy the resulting folder into Library/Frameworks/R.Framework/Resources/Library. I could install the latest R and then do that for arules, but then I'd have to do the same for dozens of other packages (or could I just copy them to another folder, update R, and then copy them to R.Framework/Resources/Library saying no to any replace file popups?)
>
> Thomas
>
> ________________________________________
> From: R. Michael Weylandt <michael.weylandt at gmail.com> [michael.weylandt at gmail.com]
> Sent: Wednesday, December 07, 2011 1:36 PM
> To: Thomas Chesney
> Cc: r-sig-mac at r-project.org
> Subject: Re: [R-SIG-Mac] arules installation
>
> You need a C compiler: the usual recommendation is XCode which you can get off your OS X install DVD or download from Apple Developer pages.
>
> Out of curiosity, how did you download the first time? I can still get 2.13.x packages from CRAN though I haven't tried with arules specifically.
>
> Michael
>
> On Dec 7, 2011, at 6:05 AM, Thomas Chesney <Thomas.Chesney at nottingham.ac.uk> wrote:
>
>> I sent the following and got the following reply to the R-Help, and then was told I should have sent it here.
>>
>> On 07.12.2011 10:54, Thomas Chesney wrote:
>>>  I'm using R version 2.13.0 (2011-04-13) on Mac OS X and I get the following error message with library(arules):
>>>
>>> Loading required package: Matrix
>>> Loading required package: lattice
>>>
>>> Attaching package: 'Matrix'
>>>
>>> The following object(s) are masked from 'package:base':
>>>
>>>     det
>>>
>>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>>   unable to load shared object '/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so':
>>>   dlopen(/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so, 6): Library not loaded: /Library/Frameworks/R.framework/Versions/2.14/Resources/lib/libR.dylib
>>>   Referenced from: /Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so
>>>   Reason: image not found
>>> In addition: Warning message:
>>> package 'arules' was built under R version 2.14.0
>>> Error: package/namespace load failed for 'arules'
>>
>> Install an arules binary that was built for your version of R (reather
>> than a later one) or install from sources.
>>
>> Uwe Ligges
>>
>>>
>>> The arules CRAN page says: Depends:   R (? 2.11.0), stats, methods, Matrix (? 0.999375-38), all of which I have - anyone know what the problem is? I'm really relunctant to update R as its Package Installer is blocked somehow by our Firewall and updating all the packages I use is a major hassle.
>>>
>>> Thank you (as always!)
>>>
>>> Thomas
>>>
>>> PS on a related note, are the package installer port settings available somewhere and I'll send them to IT, ask them to unblock it?
>>
>>
>> -------------------------------------
>>
>> I tried installing from source as Prof Ligges suggested (as explained here: http://stackoverflow.com/questions/1474081/how-do-i-install-an-r-package-from-source) but got the following error:
>>
>> install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz", repos=NULL, type="source")
>> * installing *source* package 'arules' ...
>> ** libs
>> *** arch - i386
>> sh: make: command not found
>> ERROR: compilation failed for package 'arules'
>> * removing '/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules'
>> Warning message:
>> In install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz",  :
>>  installation of package '/Users/thomas/Documents/arules_1.0-7.tar.gz' had non-zero exit status
>>
>> Why would installing from source make any difference? Prof Ripley suggested I use arules for R.13.0, which I would if I could find it.
>>
>> Has anyone got any advice?
>>
>> Thank you,
>>
>> Thomas
>> This message and any attachment are intended solely for the addressee and may contain confidential information. If you have received this message in error, please send it back to me, and immediately delete it.   Please do not use, copy or disclose the information contained in this message or in any attachment.  Any views or opinions expressed by the author of this email do not necessarily reflect the views of the University of Nottingham.
>>
>> This message has been checked for viruses but the contents of an attachment
>> may still contain software viruses which could damage your computer system:
>> you are advised to perform your own checks. Email communications with the
>> University of Nottingham may be monitored as permitted by UK legislation.
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From rmaclist at gmail.com  Thu Dec  8 01:53:10 2011
From: rmaclist at gmail.com (Samuel Davidson)
Date: Thu, 8 Dec 2011 11:53:10 +1100
Subject: [R-SIG-Mac] R tcl/tk package running Mac OS X not working
Message-ID: <CADGWSQSg8jjAmNMNWc8WnJMT2fdDwZADcH5kRK4fBVbqxHXFjg@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111208/b8b8bd8d/attachment.pl>

From dwinsemius at comcast.net  Thu Dec  8 01:58:37 2011
From: dwinsemius at comcast.net (David Winsemius)
Date: Wed, 7 Dec 2011 19:58:37 -0500
Subject: [R-SIG-Mac] arules installation
In-Reply-To: <CAAmySGMJONs2gVxpUdf5syTQtQRLfFgAfCxQ=qnvb7C+Gawegw@mail.gmail.com>
References: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF1@EXCHANGE2.ad.nottingham.ac.uk>
	<5959C187-F2D5-4443-8161-5B2BDA2E3575@gmail.com>
	<5EAA21940C65214F9C11DA5FBBC14F0B3004573DF4@EXCHANGE2.ad.nottingham.ac.uk>
	<CAAmySGMJONs2gVxpUdf5syTQtQRLfFgAfCxQ=qnvb7C+Gawegw@mail.gmail.com>
Message-ID: <2D3BF0B2-13A7-4DF8-9357-731F9F7E84D1@comcast.net>


On Dec 7, 2011, at 4:35 PM, R. Michael Weylandt wrote:

> Theoretically, but I've always built packages from Terminal so I can't
> promise it. Also, there's an outside chance you'll need a Fortran
> compiler too, but I haven't looked at the source files to confirm.
>
> I'd also suggest you try your CRAN mirror one more time and make sure
> you are getting the 2.13 version: for instance, I used this link:
>
> http://lib.stat.cmu.edu/R/CRAN/bin/macosx/leopard/contrib/2.13/arules_1.0-7.tgz'
>
> I believe that the link shown on the CRAN page will automatically give
> you the current release (2.14) build.
>
> Michael
>
> 2011/12/7 Thomas Chesney <Thomas.Chesney at nottingham.ac.uk>:
>> Michael - thanks for the reply. So if I install my XCode C complier,

You would want all of the Xcode to be installed including the Fortran  
complier and other support.

>> then download the latest arules source file which is:  
>> arules_1.0-7.tar.gz and then run: install.packages("/Users/thomas/ 
>> Documents/arules_1.0-7.tar.gz", repos=NULL, type="source") it will  
>> just work? (Why will that work with the latest version but the  
>> latest .tgz won't?)

It should succeed that way if Xocde is properly installed. Why didn't  
you try that?

AND: Why are you staying with 2.13? Why not update your R version?

>>
>> What I usually do to install a package is download the .tgz file,  
>> double click to unzip it, then copy the resulting folder into  
>> Library/Frameworks/R.Framework/Resources/Library.

That is only going to work for  packages that are all-R and no C/Fortran

>> I could install the latest R and then do that for arules, but then  
>> I'd have to do the same for dozens of other packages (or could I  
>> just copy them to another folder, update R, and then copy them to  
>> R.Framework/Resources/Library saying no to any replace file popups?)

The usual recommendation is after updating R , which creates a new  
Resources folder with ./library/, to copy/paste the contents of the  
2.13 ../library/ into the new one and then at the R console to execute:

update.packages(checkBuilt=TRUE) # and probably also include the  
ask=FALSE option

I usually forget that ask option and then have to keep typing Y<cr>.

Best;
David.


>>
>> Thomas
>>
>> ________________________________________
>> From: R. Michael Weylandt <michael.weylandt at gmail.com> [michael.weylandt at gmail.com 
>> ]
>> Sent: Wednesday, December 07, 2011 1:36 PM
>> To: Thomas Chesney
>> Cc: r-sig-mac at r-project.org
>> Subject: Re: [R-SIG-Mac] arules installation
>>
>> You need a C compiler: the usual recommendation is XCode which you  
>> can get off your OS X install DVD or download from Apple Developer  
>> pages.
>>
>> Out of curiosity, how did you download the first time? I can still  
>> get 2.13.x packages from CRAN though I haven't tried with arules  
>> specifically.
>>
>> Michael
>>
>> On Dec 7, 2011, at 6:05 AM, Thomas Chesney <Thomas.Chesney at nottingham.ac.uk 
>> > wrote:
>>
>>> I sent the following and got the following reply to the R-Help,  
>>> and then was told I should have sent it here.
>>>
>>> On 07.12.2011 10:54, Thomas Chesney wrote:
>>>> I'm using R version 2.13.0 (2011-04-13) on Mac OS X and I get the  
>>>> following error message with library(arules):
>>>>
>>>> Loading required package: Matrix
>>>> Loading required package: lattice
>>>>
>>>> Attaching package: 'Matrix'
>>>>
>>>> The following object(s) are masked from 'package:base':
>>>>
>>>>    det
>>>>
>>>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>>>  unable to load shared object '/Library/Frameworks/R.framework/ 
>>>> Versions/2.13/Resources/library/arules/libs/i386/arules.so':
>>>>  dlopen(/Library/Frameworks/R.framework/Versions/2.13/Resources/ 
>>>> library/arules/libs/i386/arules.so, 6): Library not loaded: / 
>>>> Library/Frameworks/R.framework/Versions/2.14/Resources/lib/ 
>>>> libR.dylib
>>>>  Referenced from: /Library/Frameworks/R.framework/Versions/2.13/ 
>>>> Resources/library/arules/libs/i386/arules.so
>>>>  Reason: image not found
>>>> In addition: Warning message:
>>>> package 'arules' was built under R version 2.14.0
>>>> Error: package/namespace load failed for 'arules'
>>>
>>> Install an arules binary that was built for your version of R  
>>> (reather
>>> than a later one) or install from sources.
>>>
>>> Uwe Ligges
>>>
>>>>
>>>> The arules CRAN page says: Depends:   R (? 2.11.0), stats,  
>>>> methods, Matrix (? 0.999375-38), all of which I have - anyone  
>>>> know what the problem is? I'm really relunctant to update R as  
>>>> its Package Installer is blocked somehow by our Firewall and  
>>>> updating all the packages I use is a major hassle.
>>>>
>>>> Thank you (as always!)
>>>>
>>>> Thomas
>>>>
>>>> PS on a related note, are the package installer port settings  
>>>> available somewhere and I'll send them to IT, ask them to unblock  
>>>> it?
>>>
>>>
>>> -------------------------------------
>>>
>>> I tried installing from source as Prof Ligges suggested (as  
>>> explained here: http://stackoverflow.com/questions/1474081/how-do-i-install-an-r-package-from-source) 
>>>  but got the following error:
>>>
>>> install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz",  
>>> repos=NULL, type="source")
>>> * installing *source* package 'arules' ...
>>> ** libs
>>> *** arch - i386
>>> sh: make: command not found
>>> ERROR: compilation failed for package 'arules'
>>> * removing '/Library/Frameworks/R.framework/Versions/2.13/ 
>>> Resources/library/arules'
>>> Warning message:
>>> In install.packages("/Users/thomas/Documents/ 
>>> arules_1.0-7.tar.gz",  :
>>> installation of package '/Users/thomas/Documents/ 
>>> arules_1.0-7.tar.gz' had non-zero exit status
>>>
>>> Why would installing from source make any difference? Prof Ripley  
>>> suggested I use arules for R.13.0, which I would if I could find it.
>>>
>>> Has anyone got any advice?
>>>
>>> Thank you,
>>>
>>> Thomas
>>> This message and any attachment are intended solely for the  
>>> addressee and may contain confidential information. If you have  
>>> received this message in error, please send it back to me, and  
>>> immediately delete it.   Please do not use, copy or disclose the  
>>> information contained in this message or in any attachment.  Any  
>>> views or opinions expressed by the author of this email do not  
>>> necessarily reflect the views of the University of Nottingham.
>>>
>>> This message has been checked for viruses but the contents of an  
>>> attachment
>>> may still contain software viruses which could damage your  
>>> computer system:
>>> you are advised to perform your own checks. Email communications  
>>> with the
>>> University of Nottingham may be monitored as permitted by UK  
>>> legislation.
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

David Winsemius, MD
West Hartford, CT


From dwinsemius at comcast.net  Thu Dec  8 14:57:40 2011
From: dwinsemius at comcast.net (David Winsemius)
Date: Thu, 8 Dec 2011 08:57:40 -0500
Subject: [R-SIG-Mac] arules installation
In-Reply-To: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF6@EXCHANGE2.ad.nottingham.ac.uk>
References: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF1@EXCHANGE2.ad.nottingham.ac.uk>
	<5959C187-F2D5-4443-8161-5B2BDA2E3575@gmail.com>
	<5EAA21940C65214F9C11DA5FBBC14F0B3004573DF4@EXCHANGE2.ad.nottingham.ac.uk>
	<CAAmySGMJONs2gVxpUdf5syTQtQRLfFgAfCxQ=qnvb7C+Gawegw@mail.gmail.com>,
	<2D3BF0B2-13A7-4DF8-9357-731F9F7E84D1@comcast.net>
	<5EAA21940C65214F9C11DA5FBBC14F0B3004573DF6@EXCHANGE2.ad.nottingham.ac.uk>
Message-ID: <B7903067-A3F5-45E1-8CC9-857E96F5E0EF@comcast.net>


On Dec 8, 2011, at 5:16 AM, Thomas Chesney wrote:

> Hey it worked! Thank you *very* much. I installed XCode from my Mac  
> DVD, then downloaded the arules source file and ran R CMD INSTALL / 
> Users/thomas/Documents/arules_1.0-7.tar.gz in the terminal.
>
> So should I always use the source file of the pakages in the future?

I wouldn't. I used to do so but the system is very stable in my  
experience over the last several years. Unless you enjoy the thrill of  
seeing pages of compiler messages scrolling across you screen,  (and I  
will admit to sometimes being strangely thrilled by that experience at  
times) there isn't much point.

> How come this worked but downloading the binary didn't? The binary  
> file is somehow tied to a version of R whereas the source file isn't?

To some extent that may be true. Major version upgrades to R sometimes  
add requirements on packages or provide new functions. Source code  
from former years may also fail to compile with newer versions of R.

> Has the binary file been complied already whereas my CMD INSTALL  
> command compiled C code on my machine?

Yes. Mac binaries are *.tgz files whereas *.tar.gz files are source.  
Source files may or may not require compilation of C/Fortran code. Not  
all packages have such. Some packages are pure R and installation  
would succeed even without the Xcode resources.

> But then why would my compiled C code be different from the compiled  
> C code in the binary file?

Not sure what you mean here. Are you asking about some specific  
instance?

-- 
David.

>
> Anyway, important thing is it seems to have worked, but if someone  
> could advise on whether I should use source files in the future that  
> would be really helpful.
>
> Thomas
> ________________________________________
> From: David Winsemius [dwinsemius at comcast.net]
> Sent: Thursday, December 08, 2011 12:58 AM
> To: R.Michael Weylandt
> Cc: Thomas Chesney; r-sig-mac at r-project.org
> Subject: Re: [R-SIG-Mac] arules installation
>
> On Dec 7, 2011, at 4:35 PM, R. Michael Weylandt wrote:
>
>> Theoretically, but I've always built packages from Terminal so I  
>> can't
>> promise it. Also, there's an outside chance you'll need a Fortran
>> compiler too, but I haven't looked at the source files to confirm.
>>
>> I'd also suggest you try your CRAN mirror one more time and make sure
>> you are getting the 2.13 version: for instance, I used this link:
>>
>> http://lib.stat.cmu.edu/R/CRAN/bin/macosx/leopard/contrib/2.13/arules_1.0-7.tgz'
>>
>> I believe that the link shown on the CRAN page will automatically  
>> give
>> you the current release (2.14) build.
>>
>> Michael
>>
>> 2011/12/7 Thomas Chesney <Thomas.Chesney at nottingham.ac.uk>:
>>> Michael - thanks for the reply. So if I install my XCode C complier,
>
> You would want all of the Xcode to be installed including the Fortran
> complier and other support.
>
>>> then download the latest arules source file which is:
>>> arules_1.0-7.tar.gz and then run: install.packages("/Users/thomas/
>>> Documents/arules_1.0-7.tar.gz", repos=NULL, type="source") it will
>>> just work? (Why will that work with the latest version but the
>>> latest .tgz won't?)
>
> It should succeed that way if Xocde is properly installed. Why didn't
> you try that?
>
> AND: Why are you staying with 2.13? Why not update your R version?
>
>>>
>>> What I usually do to install a package is download the .tgz file,
>>> double click to unzip it, then copy the resulting folder into
>>> Library/Frameworks/R.Framework/Resources/Library.
>
> That is only going to work for  packages that are all-R and no C/ 
> Fortran
>
>>> I could install the latest R and then do that for arules, but then
>>> I'd have to do the same for dozens of other packages (or could I
>>> just copy them to another folder, update R, and then copy them to
>>> R.Framework/Resources/Library saying no to any replace file popups?)
>
> The usual recommendation is after updating R , which creates a new
> Resources folder with ./library/, to copy/paste the contents of the
> 2.13 ../library/ into the new one and then at the R console to  
> execute:
>
> update.packages(checkBuilt=TRUE) # and probably also include the
> ask=FALSE option
>
> I usually forget that ask option and then have to keep typing Y<cr>.
>
> Best;
> David.
>
>
>>>
>>> Thomas
>>>
>>> ________________________________________
>>> From: R. Michael Weylandt <michael.weylandt at gmail.com> [michael.weylandt at gmail.com
>>> ]
>>> Sent: Wednesday, December 07, 2011 1:36 PM
>>> To: Thomas Chesney
>>> Cc: r-sig-mac at r-project.org
>>> Subject: Re: [R-SIG-Mac] arules installation
>>>
>>> You need a C compiler: the usual recommendation is XCode which you
>>> can get off your OS X install DVD or download from Apple Developer
>>> pages.
>>>
>>> Out of curiosity, how did you download the first time? I can still
>>> get 2.13.x packages from CRAN though I haven't tried with arules
>>> specifically.
>>>
>>> Michael
>>>
>>> On Dec 7, 2011, at 6:05 AM, Thomas Chesney <Thomas.Chesney at nottingham.ac.uk
>>>> wrote:
>>>
>>>> I sent the following and got the following reply to the R-Help,
>>>> and then was told I should have sent it here.
>>>>
>>>> On 07.12.2011 10:54, Thomas Chesney wrote:
>>>>> I'm using R version 2.13.0 (2011-04-13) on Mac OS X and I get the
>>>>> following error message with library(arules):
>>>>>
>>>>> Loading required package: Matrix
>>>>> Loading required package: lattice
>>>>>
>>>>> Attaching package: 'Matrix'
>>>>>
>>>>> The following object(s) are masked from 'package:base':
>>>>>
>>>>>   det
>>>>>
>>>>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>>>> unable to load shared object '/Library/Frameworks/R.framework/
>>>>> Versions/2.13/Resources/library/arules/libs/i386/arules.so':
>>>>> dlopen(/Library/Frameworks/R.framework/Versions/2.13/Resources/
>>>>> library/arules/libs/i386/arules.so, 6): Library not loaded: /
>>>>> Library/Frameworks/R.framework/Versions/2.14/Resources/lib/
>>>>> libR.dylib
>>>>> Referenced from: /Library/Frameworks/R.framework/Versions/2.13/
>>>>> Resources/library/arules/libs/i386/arules.so
>>>>> Reason: image not found
>>>>> In addition: Warning message:
>>>>> package 'arules' was built under R version 2.14.0
>>>>> Error: package/namespace load failed for 'arules'
>>>>
>>>> Install an arules binary that was built for your version of R
>>>> (reather
>>>> than a later one) or install from sources.
>>>>
>>>> Uwe Ligges
>>>>
>>>>>
>>>>> The arules CRAN page says: Depends:   R (? 2.11.0), stats,
>>>>> methods, Matrix (? 0.999375-38), all of which I have - anyone
>>>>> know what the problem is? I'm really relunctant to update R as
>>>>> its Package Installer is blocked somehow by our Firewall and
>>>>> updating all the packages I use is a major hassle.
>>>>>
>>>>> Thank you (as always!)
>>>>>
>>>>> Thomas
>>>>>
>>>>> PS on a related note, are the package installer port settings
>>>>> available somewhere and I'll send them to IT, ask them to unblock
>>>>> it?
>>>>
>>>>
>>>> -------------------------------------
>>>>
>>>> I tried installing from source as Prof Ligges suggested (as
>>>> explained here: http://stackoverflow.com/questions/1474081/how-do-i-install-an-r-package-from-source)
>>>> but got the following error:
>>>>
>>>> install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz",
>>>> repos=NULL, type="source")
>>>> * installing *source* package 'arules' ...
>>>> ** libs
>>>> *** arch - i386
>>>> sh: make: command not found
>>>> ERROR: compilation failed for package 'arules'
>>>> * removing '/Library/Frameworks/R.framework/Versions/2.13/
>>>> Resources/library/arules'
>>>> Warning message:
>>>> In install.packages("/Users/thomas/Documents/
>>>> arules_1.0-7.tar.gz",  :
>>>> installation of package '/Users/thomas/Documents/
>>>> arules_1.0-7.tar.gz' had non-zero exit status
>>>>
>>>> Why would installing from source make any difference? Prof Ripley
>>>> suggested I use arules for R.13.0, which I would if I could find  
>>>> it.
>>>>
>>>> Has anyone got any advice?
>>>>
>>>> Thank you,
>>>>
>>>> Thomas
>>>> This message and any attachment are intended solely for the
>>>> addressee and may contain confidential information. If you have
>>>> received this message in error, please send it back to me, and
>>>> immediately delete it.   Please do not use, copy or disclose the
>>>> information contained in this message or in any attachment.  Any
>>>> views or opinions expressed by the author of this email do not
>>>> necessarily reflect the views of the University of Nottingham.
>>>>
>>>> This message has been checked for viruses but the contents of an
>>>> attachment
>>>> may still contain software viruses which could damage your
>>>> computer system:
>>>> you are advised to perform your own checks. Email communications
>>>> with the
>>>> University of Nottingham may be monitored as permitted by UK
>>>> legislation.
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> David Winsemius, MD
> West Hartford, CT
>

David Winsemius, MD
West Hartford, CT


From Thomas.Chesney at nottingham.ac.uk  Wed Dec  7 14:52:56 2011
From: Thomas.Chesney at nottingham.ac.uk (Thomas Chesney)
Date: Wed, 7 Dec 2011 13:52:56 +0000
Subject: [R-SIG-Mac] arules installation
In-Reply-To: <5959C187-F2D5-4443-8161-5B2BDA2E3575@gmail.com>
References: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF1@EXCHANGE2.ad.nottingham.ac.uk>,
	<5959C187-F2D5-4443-8161-5B2BDA2E3575@gmail.com>
Message-ID: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF4@EXCHANGE2.ad.nottingham.ac.uk>

Michael - thanks for the reply. So if I install my XCode C complier, then download the latest arules source file which is: arules_1.0-7.tar.gz and then run: install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz", repos=NULL, type="source") it will just work? (Why will that work with the latest version but the latest .tgz won't?)

What I usually do to install a package is download the .tgz file, double click to unzip it, then copy the resulting folder into Library/Frameworks/R.Framework/Resources/Library. I could install the latest R and then do that for arules, but then I'd have to do the same for dozens of other packages (or could I just copy them to another folder, update R, and then copy them to R.Framework/Resources/Library saying no to any replace file popups?)

Thomas

________________________________________
From: R. Michael Weylandt <michael.weylandt at gmail.com> [michael.weylandt at gmail.com]
Sent: Wednesday, December 07, 2011 1:36 PM
To: Thomas Chesney
Cc: r-sig-mac at r-project.org
Subject: Re: [R-SIG-Mac] arules installation

You need a C compiler: the usual recommendation is XCode which you can get off your OS X install DVD or download from Apple Developer pages.

Out of curiosity, how did you download the first time? I can still get 2.13.x packages from CRAN though I haven't tried with arules specifically.

Michael

On Dec 7, 2011, at 6:05 AM, Thomas Chesney <Thomas.Chesney at nottingham.ac.uk> wrote:

> I sent the following and got the following reply to the R-Help, and then was told I should have sent it here.
>
> On 07.12.2011 10:54, Thomas Chesney wrote:
>>  I'm using R version 2.13.0 (2011-04-13) on Mac OS X and I get the following error message with library(arules):
>>
>> Loading required package: Matrix
>> Loading required package: lattice
>>
>> Attaching package: 'Matrix'
>>
>> The following object(s) are masked from 'package:base':
>>
>>     det
>>
>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>   unable to load shared object '/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so':
>>   dlopen(/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so, 6): Library not loaded: /Library/Frameworks/R.framework/Versions/2.14/Resources/lib/libR.dylib
>>   Referenced from: /Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules/libs/i386/arules.so
>>   Reason: image not found
>> In addition: Warning message:
>> package 'arules' was built under R version 2.14.0
>> Error: package/namespace load failed for 'arules'
>
> Install an arules binary that was built for your version of R (reather
> than a later one) or install from sources.
>
> Uwe Ligges
>
>>
>> The arules CRAN page says: Depends:   R (? 2.11.0), stats, methods, Matrix (? 0.999375-38), all of which I have - anyone know what the problem is? I'm really relunctant to update R as its Package Installer is blocked somehow by our Firewall and updating all the packages I use is a major hassle.
>>
>> Thank you (as always!)
>>
>> Thomas
>>
>> PS on a related note, are the package installer port settings available somewhere and I'll send them to IT, ask them to unblock it?
>
>
> -------------------------------------
>
> I tried installing from source as Prof Ligges suggested (as explained here: http://stackoverflow.com/questions/1474081/how-do-i-install-an-r-package-from-source) but got the following error:
>
> install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz", repos=NULL, type="source")
> * installing *source* package ?arules? ...
> ** libs
> *** arch - i386
> sh: make: command not found
> ERROR: compilation failed for package ?arules?
> * removing ?/Library/Frameworks/R.framework/Versions/2.13/Resources/library/arules?
> Warning message:
> In install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz",  :
>  installation of package '/Users/thomas/Documents/arules_1.0-7.tar.gz' had non-zero exit status
>
> Why would installing from source make any difference? Prof Ripley suggested I use arules for R.13.0, which I would if I could find it.
>
> Has anyone got any advice?
>
> Thank you,
>
> Thomas
> This message and any attachment are intended solely for the addressee and may contain confidential information. If you have received this message in error, please send it back to me, and immediately delete it.   Please do not use, copy or disclose the information contained in this message or in any attachment.  Any views or opinions expressed by the author of this email do not necessarily reflect the views of the University of Nottingham.
>
> This message has been checked for viruses but the contents of an attachment
> may still contain software viruses which could damage your computer system:
> you are advised to perform your own checks. Email communications with the
> University of Nottingham may be monitored as permitted by UK legislation.
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

From ono at java.pl  Wed Dec  7 15:07:53 2011
From: ono at java.pl (Adam Strzelecki)
Date: Wed, 7 Dec 2011 15:07:53 +0100
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
Message-ID: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>

Hello R Community,

I have recently started using R for my PhD work. Aside of that I am Mac and iOS developer since few years. As far I can see R package for Mac comes in two flavors, R (32-bit) and R64 (64-bit).

Correctly if I am wrong, but the only reason of such separation (rather doing single universal version for all PPC, i386 and x86_64) is Carbon dependency for various R packages? So 32-bit version is the one that uses native Quartz or OpenGL rendering, while 64-bit version is the one that can drive over 2GB of memory but falls back to X11 as Carbon isn't available for 64-bit.

Can anyone tell me what are the packages that still relay on Carbon (quartz renderer, rgl? anything else) that would need to be ported to Cocoa so 64-bit version will offer full functionality as 32-bit counterparts on Mac, instead of falling back to X11? I guess I could help quickly porting these parts into Cocoa, so we got single (3 architecture) binary.

Cheers,
-- 
Adam Strzelecki | nanoant.com

BTW. Who's the Mac package maintainer in R project?

From Thomas.Chesney at nottingham.ac.uk  Thu Dec  8 11:16:48 2011
From: Thomas.Chesney at nottingham.ac.uk (Thomas Chesney)
Date: Thu, 8 Dec 2011 10:16:48 +0000
Subject: [R-SIG-Mac] arules installation
In-Reply-To: <2D3BF0B2-13A7-4DF8-9357-731F9F7E84D1@comcast.net>
References: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF1@EXCHANGE2.ad.nottingham.ac.uk>
	<5959C187-F2D5-4443-8161-5B2BDA2E3575@gmail.com>
	<5EAA21940C65214F9C11DA5FBBC14F0B3004573DF4@EXCHANGE2.ad.nottingham.ac.uk>
	<CAAmySGMJONs2gVxpUdf5syTQtQRLfFgAfCxQ=qnvb7C+Gawegw@mail.gmail.com>,
	<2D3BF0B2-13A7-4DF8-9357-731F9F7E84D1@comcast.net>
Message-ID: <5EAA21940C65214F9C11DA5FBBC14F0B3004573DF6@EXCHANGE2.ad.nottingham.ac.uk>

Hey it worked! Thank you *very* much. I installed XCode from my Mac DVD, then downloaded the arules source file and ran R CMD INSTALL /Users/thomas/Documents/arules_1.0-7.tar.gz in the terminal.

So should I always use the source file of the pakages in the future? How come this worked but downloading the binary didn't? The binary file is somehow tied to a version of R whereas the source file isn't? Has the binary file been complied already whereas my CMD INSTALL command compiled C code on my machine? But then why would my compiled C code be different from the compiled C code in the binary file?

Anyway, important thing is it seems to have worked, but if someone could advise on whether I should use source files in the future that would be really helpful.

Thomas
________________________________________
From: David Winsemius [dwinsemius at comcast.net]
Sent: Thursday, December 08, 2011 12:58 AM
To: R.Michael Weylandt
Cc: Thomas Chesney; r-sig-mac at r-project.org
Subject: Re: [R-SIG-Mac] arules installation

On Dec 7, 2011, at 4:35 PM, R. Michael Weylandt wrote:

> Theoretically, but I've always built packages from Terminal so I can't
> promise it. Also, there's an outside chance you'll need a Fortran
> compiler too, but I haven't looked at the source files to confirm.
>
> I'd also suggest you try your CRAN mirror one more time and make sure
> you are getting the 2.13 version: for instance, I used this link:
>
> http://lib.stat.cmu.edu/R/CRAN/bin/macosx/leopard/contrib/2.13/arules_1.0-7.tgz'
>
> I believe that the link shown on the CRAN page will automatically give
> you the current release (2.14) build.
>
> Michael
>
> 2011/12/7 Thomas Chesney <Thomas.Chesney at nottingham.ac.uk>:
>> Michael - thanks for the reply. So if I install my XCode C complier,

You would want all of the Xcode to be installed including the Fortran
complier and other support.

>> then download the latest arules source file which is:
>> arules_1.0-7.tar.gz and then run: install.packages("/Users/thomas/
>> Documents/arules_1.0-7.tar.gz", repos=NULL, type="source") it will
>> just work? (Why will that work with the latest version but the
>> latest .tgz won't?)

It should succeed that way if Xocde is properly installed. Why didn't
you try that?

AND: Why are you staying with 2.13? Why not update your R version?

>>
>> What I usually do to install a package is download the .tgz file,
>> double click to unzip it, then copy the resulting folder into
>> Library/Frameworks/R.Framework/Resources/Library.

That is only going to work for  packages that are all-R and no C/Fortran

>> I could install the latest R and then do that for arules, but then
>> I'd have to do the same for dozens of other packages (or could I
>> just copy them to another folder, update R, and then copy them to
>> R.Framework/Resources/Library saying no to any replace file popups?)

The usual recommendation is after updating R , which creates a new
Resources folder with ./library/, to copy/paste the contents of the
2.13 ../library/ into the new one and then at the R console to execute:

update.packages(checkBuilt=TRUE) # and probably also include the
ask=FALSE option

I usually forget that ask option and then have to keep typing Y<cr>.

Best;
David.


>>
>> Thomas
>>
>> ________________________________________
>> From: R. Michael Weylandt <michael.weylandt at gmail.com> [michael.weylandt at gmail.com
>> ]
>> Sent: Wednesday, December 07, 2011 1:36 PM
>> To: Thomas Chesney
>> Cc: r-sig-mac at r-project.org
>> Subject: Re: [R-SIG-Mac] arules installation
>>
>> You need a C compiler: the usual recommendation is XCode which you
>> can get off your OS X install DVD or download from Apple Developer
>> pages.
>>
>> Out of curiosity, how did you download the first time? I can still
>> get 2.13.x packages from CRAN though I haven't tried with arules
>> specifically.
>>
>> Michael
>>
>> On Dec 7, 2011, at 6:05 AM, Thomas Chesney <Thomas.Chesney at nottingham.ac.uk
>> > wrote:
>>
>>> I sent the following and got the following reply to the R-Help,
>>> and then was told I should have sent it here.
>>>
>>> On 07.12.2011 10:54, Thomas Chesney wrote:
>>>> I'm using R version 2.13.0 (2011-04-13) on Mac OS X and I get the
>>>> following error message with library(arules):
>>>>
>>>> Loading required package: Matrix
>>>> Loading required package: lattice
>>>>
>>>> Attaching package: 'Matrix'
>>>>
>>>> The following object(s) are masked from 'package:base':
>>>>
>>>>    det
>>>>
>>>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>>>  unable to load shared object '/Library/Frameworks/R.framework/
>>>> Versions/2.13/Resources/library/arules/libs/i386/arules.so':
>>>>  dlopen(/Library/Frameworks/R.framework/Versions/2.13/Resources/
>>>> library/arules/libs/i386/arules.so, 6): Library not loaded: /
>>>> Library/Frameworks/R.framework/Versions/2.14/Resources/lib/
>>>> libR.dylib
>>>>  Referenced from: /Library/Frameworks/R.framework/Versions/2.13/
>>>> Resources/library/arules/libs/i386/arules.so
>>>>  Reason: image not found
>>>> In addition: Warning message:
>>>> package 'arules' was built under R version 2.14.0
>>>> Error: package/namespace load failed for 'arules'
>>>
>>> Install an arules binary that was built for your version of R
>>> (reather
>>> than a later one) or install from sources.
>>>
>>> Uwe Ligges
>>>
>>>>
>>>> The arules CRAN page says: Depends:   R (? 2.11.0), stats,
>>>> methods, Matrix (? 0.999375-38), all of which I have - anyone
>>>> know what the problem is? I'm really relunctant to update R as
>>>> its Package Installer is blocked somehow by our Firewall and
>>>> updating all the packages I use is a major hassle.
>>>>
>>>> Thank you (as always!)
>>>>
>>>> Thomas
>>>>
>>>> PS on a related note, are the package installer port settings
>>>> available somewhere and I'll send them to IT, ask them to unblock
>>>> it?
>>>
>>>
>>> -------------------------------------
>>>
>>> I tried installing from source as Prof Ligges suggested (as
>>> explained here: http://stackoverflow.com/questions/1474081/how-do-i-install-an-r-package-from-source)
>>>  but got the following error:
>>>
>>> install.packages("/Users/thomas/Documents/arules_1.0-7.tar.gz",
>>> repos=NULL, type="source")
>>> * installing *source* package 'arules' ...
>>> ** libs
>>> *** arch - i386
>>> sh: make: command not found
>>> ERROR: compilation failed for package 'arules'
>>> * removing '/Library/Frameworks/R.framework/Versions/2.13/
>>> Resources/library/arules'
>>> Warning message:
>>> In install.packages("/Users/thomas/Documents/
>>> arules_1.0-7.tar.gz",  :
>>> installation of package '/Users/thomas/Documents/
>>> arules_1.0-7.tar.gz' had non-zero exit status
>>>
>>> Why would installing from source make any difference? Prof Ripley
>>> suggested I use arules for R.13.0, which I would if I could find it.
>>>
>>> Has anyone got any advice?
>>>
>>> Thank you,
>>>
>>> Thomas
>>> This message and any attachment are intended solely for the
>>> addressee and may contain confidential information. If you have
>>> received this message in error, please send it back to me, and
>>> immediately delete it.   Please do not use, copy or disclose the
>>> information contained in this message or in any attachment.  Any
>>> views or opinions expressed by the author of this email do not
>>> necessarily reflect the views of the University of Nottingham.
>>>
>>> This message has been checked for viruses but the contents of an
>>> attachment
>>> may still contain software viruses which could damage your
>>> computer system:
>>> you are advised to perform your own checks. Email communications
>>> with the
>>> University of Nottingham may be monitored as permitted by UK
>>> legislation.
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

David Winsemius, MD
West Hartford, CT


From ggrothendieck at gmail.com  Thu Dec  8 18:26:45 2011
From: ggrothendieck at gmail.com (ggrothendieck)
Date: Thu, 8 Dec 2011 09:26:45 -0800
Subject: [R-SIG-Mac] R tcl/tk package running Mac OS X not working
In-Reply-To: <CADGWSQSg8jjAmNMNWc8WnJMT2fdDwZADcH5kRK4fBVbqxHXFjg@mail.gmail.com>
References: <CADGWSQSg8jjAmNMNWc8WnJMT2fdDwZADcH5kRK4fBVbqxHXFjg@mail.gmail.com>
Message-ID: <10008fa2-4861-45b9-9829-d4356b3064fa@v29g2000yqv.googlegroups.com>


On Dec 7, 7:53?pm, Samuel Davidson <rmacl... at gmail.com> wrote:
> I have R 2.14 installed on a Mac OS X 10.7.2 (Lion) Patched (2011-12-06
> r57839)
>
> I noticed that when I try to use the sqldf package, R hangs. I tried the
> fix as suggested by the sqldf help, which is to execute:
>
> options(gsubfn.engine = "R")
>
> prior to loading the sqldf package. This does not work. I installed the
> tcltk-8.5.5-x11.dmg package but still no change.
>
> So R hangs whenever sqldf("select * from iris") or library(tcltk) is
> executed.

(1) library(tcltk) should not hang.   There is at the very least
something wrong with your installation of tcltk and possibly even with
your installation of R itself.  Since  you don't actually need tcltk
to use sqldf you might want to remove tcltk just to be sure and then
restart R. (2) Ensure you have the latest sqldf.  (3) run with
verbose=TRUE which gives extra info that may be useful in figuring out
what is wrong:  sqldf("select * from BOD", verbose = TRUE), (3) check
the troubleshooting section at http://sqldf.googlecode.com, (4) make
sure you don't have any unwanted database drivers loaded:  search()


From dwinsemius at comcast.net  Sat Dec 10 14:58:45 2011
From: dwinsemius at comcast.net (David Winsemius)
Date: Sat, 10 Dec 2011 08:58:45 -0500
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
Message-ID: <0C719383-430E-44C3-A7F2-92DB9D20AFA1@comcast.net>


On Dec 7, 2011, at 9:07 AM, Adam Strzelecki wrote:

> Hello R Community,
>
> I have recently started using R for my PhD work. Aside of that I am  
> Mac and iOS developer since few years. As far I can see R package  
> for Mac comes in two flavors, R (32-bit) and R64 (64-bit).

Most of them build as universal unless you do the make/compile stuff  
on your own. The compile object code gets put in the .../pckgname/ 
libs/ directory and mine have x86_64, ppc, and i386 subdirectories.

http://r.research.att.com/
>
> Correct [me] if I am wrong, but the only reason of such separation  
> (rather doing single universal version for all PPC, i386 and x86_64)  
> is Carbon dependency for various R packages? So 32-bit version is  
> the one that uses native Quartz or OpenGL rendering, while 64-bit  
> version is the one that can drive over 2GB of memory but falls back  
> to X11 as Carbon isn't available for 64-bit.
>
> Can anyone tell me what are the packages that still relay on Carbon  
> (quartz renderer, rgl? anything else) that would need to be ported  
> to Cocoa so 64-bit version will offer full functionality as 32-bit  
> counterparts on Mac, instead of falling back to X11? I guess I could  
> help quickly porting these parts into Cocoa, so we got single (3  
> architecture) binary.

I am running 64 bit Mac almost exclusively with the Mac GUI, and X11  
is only loaded for a few packages that rely on its windowing  
(typically ones that rely on TcL/Tk). I believe the 32 bit version  
addresses whatever portion of 4 GB is not occupied by system or other  
programs (not 2 GB) and would be faster and more memory efficient if  
were used on a machine with memory limited to 4 GB. There are two  
GUIs, one 32 bit and one 64 bit and they both use Quartz. I'm  
reasonably sure the Tcl/Tk dependency on X11 is cross-architecture.


> Cheers,
> -- 
> Adam Strzelecki | nanoant.com
>
> BTW. Who's the Mac package maintainer in R project?

Simon Urbanek.

He reads this list regularly and will be by to correct my errors.

-- 

David Winsemius, MD
West Hartford, CT


From simon.urbanek at r-project.org  Sat Dec 10 16:22:08 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 10 Dec 2011 10:22:08 -0500
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
Message-ID: <055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>

Adam,

On Dec 7, 2011, at 9:07 AM, Adam Strzelecki wrote:

> Hello R Community,
> 
> I have recently started using R for my PhD work. Aside of that I am Mac and iOS developer since few years. As far I can see R package for Mac comes in two flavors, R (32-bit) and R64 (64-bit).

Not really - it's one R with three architectures (i386, x86_64 and ppc) - you can choose them using R --arch <arch>.


> Correctly if I am wrong, but the only reason of such separation (rather doing single universal version for all PPC, i386 and x86_64) is Carbon dependency for various R packages?

Yes, you are wrong, that is not the rationale. The main reason is the same as why Apple uses separate files for i386, x86_64 and ppc: portability (see gcc, for example). In addition, there is no benefit in creating universal binaries, since they are very Darwin-specific and bring no benefit in this context. Think about the consequences - R code can be conditioned on the architecture, so when building packages, you have to run them for every architecture separately which is unnecessary difficult with universal binaries (you can't simply use -arch foo -arch bar like with gcc). It's much easier if you use the classic multi-lib approach where you can run separate architectures at will. (Technically the only difference is that we use thin binaries instead of fat binaries, so it's only the format on disk, not anything else)

As a side note - the R framework and all its libraries are universal as you can see, so "native" Mac apps that link the framework can be universal (and e.g. the GUI is).

Also your subject doesn't make sense - all architectures in R have exactly the same functionality. None of them is "limited" in any way. A side-effect of the multi-lib approach is that users can choose to compile only specific architectures (more for convenience than anything), but CRAN only builds complete packages (i.e., all architectures).

Cheers,
Simon


> So 32-bit version is the one that uses native Quartz or OpenGL rendering, while 64-bit version is the one that can drive over 2GB of memory but falls back to X11 as Carbon isn't available for 64-bit.
> 
> Can anyone tell me what are the packages that still relay on Carbon (quartz renderer, rgl? anything else) that would need to be ported to Cocoa so 64-bit version will offer full functionality as 32-bit counterparts on Mac, instead of falling back to X11? I guess I could help quickly porting these parts into Cocoa, so we got single (3 architecture) binary.
> 
> Cheers,
> -- 
> Adam Strzelecki | nanoant.com
> 
> BTW. Who's the Mac package maintainer in R project?
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From charles.sharpsteen at gmail.com  Sat Dec 10 23:50:03 2011
From: charles.sharpsteen at gmail.com (Charlie Sharpsteen)
Date: Sat, 10 Dec 2011 14:50:03 -0800 (PST)
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
Message-ID: <28735829.805.1323557403359.JavaMail.geo-discussion-forums@prol32>

Another important thing to note is that the multi-lib approach works well 
on other platforms like Windows and Linux where "universal binaries" do not 
exist. Using the same approach on OS X makes for one less special case to 
worry about.

-Charlie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111210/b2d54aff/attachment.html>

From charles.sharpsteen at gmail.com  Sat Dec 10 23:50:03 2011
From: charles.sharpsteen at gmail.com (Charlie Sharpsteen)
Date: Sat, 10 Dec 2011 14:50:03 -0800
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
Message-ID: <28735829.805.1323557403359.JavaMail.geo-discussion-forums@prol32>

Another important thing to note is that the multi-lib approach works well 
on other platforms like Windows and Linux where "universal binaries" do not 
exist. Using the same approach on OS X makes for one less special case to 
worry about.

-Charlie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111210/b2d54aff/attachment-0001.html>

From kji2080 at gmail.com  Wed Dec 14 00:17:04 2011
From: kji2080 at gmail.com (Jooil Kim)
Date: Tue, 13 Dec 2011 15:17:04 -0800
Subject: [R-SIG-Mac] Help on using R CMD SHLIB for compiling shared
 libraries calling Fortran?
Message-ID: <298FC0A520E041288C036F3F32B96714@gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111213/f1040769/attachment.pl>

From simon.urbanek at r-project.org  Wed Dec 14 02:51:08 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 13 Dec 2011 20:51:08 -0500
Subject: [R-SIG-Mac] Help on using R CMD SHLIB for compiling shared
	libraries calling Fortran?
In-Reply-To: <298FC0A520E041288C036F3F32B96714@gmail.com>
References: <298FC0A520E041288C036F3F32B96714@gmail.com>
Message-ID: <B36E2EA2-C0CE-4EEE-A9C5-A59CFF2C50F5@r-project.org>

Jooil,

most recent Xcode in Lion removes gcc-4.2, so you may want to install it from either from Xcode 4.0/4.1 or from
http://r.research.att.com/tools/

The direct link is
http://r.research.att.com/tools/gcc-42-5666.3-darwin11.pkg

Also you can remove the Fortran you installed before (using gfortran-uninstall) since more recent Fortran is part of the above package.

Cheers,
Simon


On Dec 13, 2011, at 6:17 PM, Jooil Kim wrote:

> Hello all,
> 
> I'm interested in calling some Fortran subroutines in R, and I have been trying out R CMD SHLIB.
> 
> I'm using R ver 2.14.0, and just installed the latest version of Xcode 4.2.1. I also downloaded and installed gfortran 4.2.3 (from the .dmg at http://cran.r-project.org/bin/macosx/tools/). My OS is Lion, with the latest updates (10.7.2) on a MacBook Pro about 2 years old.
> 
> So when I go to the command line and type the SHLIB command, I get:
> 
> $ R CMD SHLIB readgrid.f
> gcc-4.2 -arch x86_64 -std=gnu99 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/usr/local/lib -o readgrid.so readgrid.o -lgfortran -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
> /bin/sh: gcc-4.2: command not found
> make: *** [readgrid.so] Error 127
> 
> 
> 
> I think the problem is that the SHLIB command looks for "gcc-4.2" instead of "gcc". I also get a similar error ("gcc-4.2: command not found") when I try with a very simple "foo.c" program. I've tried looking through the documentation I could find, but didn't find any relevant info. Can someone give me advise on how to do this properly? Do I need to install another version of GCC on my mac?
> 
> 
> Thanks,
> 
> Jooil
> 
> -- 
> Jooil Kim
> Postdoc Fellow
> Scripps Institution of Oceanography, UC San Diego
> Mailing address:
> 9500 Gilman Drive # 0244
> La Jolla, CA 92093-0244, USA
> For FedEx/UPS:
> 8675 Discovery Way, Vaughan Hall Rm. 447
> La Jolla, CA 92037, USA
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From nils.weidmann at gmail.com  Wed Dec 14 17:00:47 2011
From: nils.weidmann at gmail.com (Nils B. Weidmann)
Date: Wed, 14 Dec 2011 17:00:47 +0100
Subject: [R-SIG-Mac] Source package compile under OS X Lion
Message-ID: <4EE8C82F.8040104@gmail.com>

I've been trying to compile the RPostgreSQL package under Lion. 
Compilation fails using the most recent Xcode 4.2. Used to work 
perfectly under Snow Leopard and Xcode 3.2.

The error message is

 > make: gcc-4.2: No such file or directory

I guess this has to do with Apple's switch to a new compiler, 
llvm-gcc-4.2. gcc-4.2 does not seem to exist anymore.

Any suggestions? Would it be possible to set the compiler path manually?

Thanks a lot!
Nils
-- 
Nils B. Weidmann
Centre for the Study of Civil War
Peace Research Institute Oslo
http://nils.weidmann.ws


From bhh at xs4all.nl  Wed Dec 14 17:22:27 2011
From: bhh at xs4all.nl (Berend Hasselman)
Date: Wed, 14 Dec 2011 17:22:27 +0100
Subject: [R-SIG-Mac] Source package compile under OS X Lion
In-Reply-To: <4EE8C82F.8040104@gmail.com>
References: <4EE8C82F.8040104@gmail.com>
Message-ID: <75D61EC5-8CA7-4736-9F1E-C5BD57C835E9@xs4all.nl>


On 14-12-2011, at 17:00, Nils B. Weidmann wrote:

> I've been trying to compile the RPostgreSQL package under Lion. Compilation fails using the most recent Xcode 4.2. Used to work perfectly under Snow Leopard and Xcode 3.2.
> 
> The error message is
> 
> > make: gcc-4.2: No such file or directory
> 
> I guess this has to do with Apple's switch to a new compiler, llvm-gcc-4.2. gcc-4.2 does not seem to exist anymore.
> 
> Any suggestions? Would it be possible to set the compiler path manually?

See this from this morning

http://thread.gmane.org/gmane.comp.lang.r.mac/6716/focus=6717

Berend

From ono at java.pl  Wed Dec 14 17:22:57 2011
From: ono at java.pl (Adam Strzelecki)
Date: Wed, 14 Dec 2011 17:22:57 +0100
Subject: [R-SIG-Mac] Source package compile under OS X Lion
In-Reply-To: <4EE8C82F.8040104@gmail.com>
References: <4EE8C82F.8040104@gmail.com>
Message-ID: <F9036B64-B407-4A30-AD44-0329F23B933E@java.pl>

I've made myself a workaround:
sudo ln -s /usr/bin/gcc /usr/local/bin/gcc-4.2

I know it is ugly hack, but it does work.
-- 
Adam Strzelecki

Wiadomo?? napisana przez Nils B. Weidmann w dniu 14 gru 2011, o godz. 17:00:

> I've been trying to compile the RPostgreSQL package under Lion. Compilation fails using the most recent Xcode 4.2. Used to work perfectly under Snow Leopard and Xcode 3.2.
> 
> The error message is
> 
> > make: gcc-4.2: No such file or directory
> 
> I guess this has to do with Apple's switch to a new compiler, llvm-gcc-4.2. gcc-4.2 does not seem to exist anymore.
> 
> Any suggestions? Would it be possible to set the compiler path manually?
> 
> Thanks a lot!
> Nils
> -- 
> Nils B. Weidmann
> Centre for the Study of Civil War
> Peace Research Institute Oslo
> http://nils.weidmann.ws
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From ono at java.pl  Wed Dec 14 17:24:26 2011
From: ono at java.pl (Adam Strzelecki)
Date: Wed, 14 Dec 2011 17:24:26 +0100
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
Message-ID: <B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>

Simon wrote:
>> I have recently started using R for my PhD work. Aside of that I am Mac and iOS developer since few years. As far I can see R package for Mac comes in two flavors, R (32-bit) and R64 (64-bit).
> 
> Not really - it's one R with three architectures (i386, x86_64 and ppc) - you can choose them using R --arch <arch>.

I've used work "flavor" intentionally, I know 32-bit version is FAT binary for both i386 and PPC (which are both 32-bit FYI) :)

Anyway I refer only to R.app and R64.app asking for the reason of coming in "two flavors". It is very uncommon and against OSX standards to provide two separate apps for 64-bits and 32-bits, where one can choose that via Finder (but usually it is not necessary at all), see: http://kb2.adobe.com/cps/509/cpsid_50983/images/Safari_32-bit_mode1.png

>> Correctly if I am wrong, but the only reason of such separation (rather doing single universal version for all PPC, i386 and x86_64) is Carbon dependency for various R packages?
> 
> Yes, you are wrong, that is not the rationale. The main reason is the same as why Apple uses separate files for i386, x86_64 and ppc: portability (see gcc, for example).

Frankly I do not see any place where Apple does use separate files for each supported architecture, here's output from `file` on couple of Apple apps and libs on my Lion 10.7.2, all of them are FAT (universal binaries):

$ file /usr/lib/libgcc_s.1.dylib 
/usr/lib/libgcc_s.1.dylib: Mach-O universal binary with 2 architectures
/usr/lib/libgcc_s.1.dylib (for architecture x86_64):	Mach-O 64-bit dynamically linked shared library x86_64
/usr/lib/libgcc_s.1.dylib (for architecture i386):	Mach-O dynamically linked shared library i386

$ file /usr/bin/gcc
/usr/bin/gcc: Mach-O universal binary with 2 architectures
/usr/bin/gcc (for architecture i386):	Mach-O executable i386
/usr/bin/gcc (for architecture x86_64):	Mach-O 64-bit executable x86_64

$ file /Applications/Safari.app/Contents/MacOS/Safari 
/Applications/Safari.app/Contents/MacOS/Safari: Mach-O universal binary with 2 architectures
/Applications/Safari.app/Contents/MacOS/Safari (for architecture i386):	Mach-O executable i386
/Applications/Safari.app/Contents/MacOS/Safari (for architecture x86_64):	Mach-O 64-bit executable x86_64

> In addition, there is no benefit in creating universal binaries, since they are very Darwin-specific and bring no benefit in this context.

There's a huge benefit of doing that. I do develop Mac apps, and FAT binaries and libs makes the other apps referring to them to refer to single file path regardless of architecture. So this is benefit for developers. Another benefit is for Mac users, that they run single app regardless if they run on PPC, i386 only Intel (first Intel Macs ?!) or latest 64-bit Macs.

> Think about the consequences - R code can be conditioned on the architecture, so when building packages, you have to run them for every architecture separately which is unnecessary difficult with universal binaries (you can't simply use -arch foo -arch bar like with gcc). It's much easier if you use the classic multi-lib approach where you can run separate architectures at will. (Technically the only difference is that we use thin binaries instead of fat binaries, so it's only the format on disk, not anything else)

Using multiple -arch arguments is not the only way of producing universal binary, you may have classic separate build process for each architecture, then during post-build you may use "lipo" command to produce single FAT binary. Anyway using separate build process for each architecture on Mac is only justified if each arch has different library dependencies and #ifdef/#ifs are not enough.

I have nothing against of having separate libraries if the user does not have to care about it. So having two R.app and R64.app IMHO only leads to confusion.

> As a side note - the R framework and all its libraries are universal as you can see, so "native" Mac apps that link the framework can be universal (and e.g. the GUI is).

Yes, I know /Library/Frameworks/R.framework/R is single universal library, but I do not understand why /Applications/R.app isn't :)

> Also your subject doesn't make sense - all architectures in R have exactly the same functionality. None of them is "limited" in any way. A side-effect of the multi-lib approach is that users can choose to compile only specific architectures (more for convenience than anything), but CRAN only builds complete packages (i.e., all architectures).

If they both have same functionality then I don't see any benefit of using 32-bit version on 64-bit OS and CPU, since 64-bit code is faster, can address more than 4GB RAM so load bigger datasets. 2GB limit refers to Windows, so was wrong with that in former mail.

However in case of R for OSX, 32-bit rgl package uses native OpenGL rendering via Carbon+AGL API, while 64-bit version uses X11 - Carbon is deprecated 32-bit only API. So this makes difference.

That's why I was asking whether there are any other packages or components of R that relay on some deprecated 32-bit libs such as Carbon and offered my help to port these parts to 64-bit Cocoa API bringing native interface.

Charlie wrote:
> Another important thing to note is that the multi-lib approach works well on other platforms like Windows and Linux where "universal binaries" do not exist. Using the same approach on OS X makes for one less special case to worry about.

If everybody was thinking like that we would all use Windows and drive only Ford cars, because it is simpler when everybody uses the same stuff :) For me FAT binaries is an advantage not a problem. Windows is just a mess, so I wouldn't treat Windows as a reference here. Linux makes you do not care about architecture once you install it (ie. Ubuntu or other distro) and use built in package manager. You just select package "R" and it just copies appropriate architecture binaries, and you get single R application.

Once again, the reason of raising this discussion was a purpose of having two separate apps - R64.app and R.app as it is very uncommon for Mac users and IMHO leads to confusion. I cannot name single other application that makes such distinction. I believe there should be only one R.app using FAT binary for all archs, running best architecture (like 64-bit on recent Macs) where possible. Also all packages referring to Carbon API should be rewritten for Cocoa.

Altogether please forgive me if I may sound like "mr wise guy" here. My only intention is to help making R more Mac user friendly.

Cheers,
-- 
Adam

From simon.urbanek at r-project.org  Wed Dec 14 20:29:27 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 14 Dec 2011 14:29:27 -0500
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
Message-ID: <73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>

Adam,

On Dec 14, 2011, at 11:24 AM, Adam Strzelecki wrote:

> Simon wrote:
>>> I have recently started using R for my PhD work. Aside of that I am Mac and iOS developer since few years. As far I can see R package for Mac comes in two flavors, R (32-bit) and R64 (64-bit).
>> 
>> Not really - it's one R with three architectures (i386, x86_64 and ppc) - you can choose them using R --arch <arch>.
> 
> I've used work "flavor" intentionally, I know 32-bit version is FAT binary for both i386 and PPC (which are both 32-bit FYI) :)
> 
> Anyway I refer only to R.app and R64.app asking for the reason of coming in "two flavors". It is very uncommon and against OSX standards to provide two separate apps for 64-bits and 32-bits, where one can choose that via Finder (but usually it is not necessary at all), see: http://kb2.adobe.com/cps/509/cpsid_50983/images/Safari_32-bit_mode1.png
> 
>>> Correctly if I am wrong, but the only reason of such separation (rather doing single universal version for all PPC, i386 and x86_64) is Carbon dependency for various R packages?
>> 
>> Yes, you are wrong, that is not the rationale. The main reason is the same as why Apple uses separate files for i386, x86_64 and ppc: portability (see gcc, for example).
> 
> Frankly I do not see any place where Apple does use separate files for each supported architecture,

Try  ls /usr/lib/gcc/*/4.2.1 and notice separate directories for ppc vs intel (first level) and 32-bit vs 64-bit (second level; top dir is 32-bit 64-has its own subdir).

ginaz:bin$ ls /usr/lib/gcc/*/4.2.1 
/usr/lib/gcc/i686-apple-darwin10/4.2.1:
crt3.o              install-tools       libgcc_eh.a         libgfortran.a       libgomp.a           x86_64
finclude            libcc_kext.a        libgcc_static.a     libgfortranbegin.a  libgomp.spec
include             libgcc.a            libgcov.a           libgfortranbegin.la libstdc++.dylib

/usr/lib/gcc/powerpc-apple-darwin10/4.2.1:
crt2.o              include             libgcc.a            libgcov.a           libgfortranbegin.la libstdc++.dylib
crt3.o              install-tools       libgcc_eh.a         libgfortran.a       libgomp.a           ppc64
finclude            libcc_kext.a        libgcc_static.a     libgfortranbegin.a  libgomp.spec


> here's output from `file` on couple of Apple apps and libs on my Lion 10.7.2, all of them are FAT (universal binaries):
> 
> $ file /usr/lib/libgcc_s.1.dylib 
> /usr/lib/libgcc_s.1.dylib: Mach-O universal binary with 2 architectures
> /usr/lib/libgcc_s.1.dylib (for architecture x86_64):	Mach-O 64-bit dynamically linked shared library x86_64
> /usr/lib/libgcc_s.1.dylib (for architecture i386):	Mach-O dynamically linked shared library i386
> 
> $ file /usr/bin/gcc
> /usr/bin/gcc: Mach-O universal binary with 2 architectures
> /usr/bin/gcc (for architecture i386):	Mach-O executable i386
> /usr/bin/gcc (for architecture x86_64):	Mach-O 64-bit executable x86_64
> 

> $ file /Applications/Safari.app/Contents/MacOS/Safari 
> /Applications/Safari.app/Contents/MacOS/Safari: Mach-O universal binary with 2 architectures
> /Applications/Safari.app/Contents/MacOS/Safari (for architecture i386):	Mach-O executable i386
> /Applications/Safari.app/Contents/MacOS/Safari (for architecture x86_64):	Mach-O 64-bit executable x86_64
> 
>> In addition, there is no benefit in creating universal binaries, since they are very Darwin-specific and bring no benefit in this context.
> 
> There's a huge benefit of doing that. I do develop Mac apps, and FAT binaries and libs makes the other apps referring to them to refer to single file path regardless of architecture.

That's why R framework does that so the discussion is really moot.


> So this is benefit for developers. Another benefit is for Mac users, that they run single app regardless if they run on PPC, i386 only Intel (first Intel Macs ?!) or latest 64-bit Macs.
> 

If they want to do that. However, with R users typically don't want to do that - you are missing important points - see below. There is nothing preventing you from lipo'ing R from R64.app into R.app if that's what you want. It doesn't change anything, though - it's still exactly the same binary.


>> Think about the consequences - R code can be conditioned on the architecture, so when building packages, you have to run them for every architecture separately which is unnecessary difficult with universal binaries (you can't simply use -arch foo -arch bar like with gcc). It's much easier if you use the classic multi-lib approach where you can run separate architectures at will. (Technically the only difference is that we use thin binaries instead of fat binaries, so it's only the format on disk, not anything else)
> 
> Using multiple -arch arguments is not the only way of producing universal binary, you may have classic separate build process for each architecture, then during post-build you may use "lipo" command to produce single FAT binary. Anyway using separate build process for each architecture on Mac is only justified if each arch has different library dependencies and #ifdef/#ifs are not enough.
> 

Please think for a moment and re-read what I said. This is not about compilation, but about R. You are completely missing the fact that there is interpreted code involved that can be (and in practice is) arch-conditional. But, again, I don't think you wanted to go there - this is about the package build process which is a whole different story and one that's certainly not Mac-specific.


> I have nothing against of having separate libraries if the user does not have to care about it. So having two R.app and R64.app IMHO only leads to confusion.
> 
>> As a side note - the R framework and all its libraries are universal as you can see, so "native" Mac apps that link the framework can be universal (and e.g. the GUI is).
> 
> Yes, I know /Library/Frameworks/R.framework/R is single universal library, but I do not understand why /Applications/R.app isn't :)
> 

a) historical reason (64-bit R was optional) b) easier way to choose architecture c) capability to run them in parallel


>> Also your subject doesn't make sense - all architectures in R have exactly the same functionality. None of them is "limited" in any way. A side-effect of the multi-lib approach is that users can choose to compile only specific architectures (more for convenience than anything), but CRAN only builds complete packages (i.e., all architectures).
> 
> If they both have same functionality then I don't see any benefit of using 32-bit version on 64-bit OS and CPU, since 64-bit code is faster, can address more than 4GB RAM so load bigger datasets.


That is plain wrong. 64-bit is not faster, it can be both slower or faster depending on the task. And it always uses more memory. There are plenty of machines with 4GB of RAM or less where running 64-bit R can cause more trouble than you want. 


> 2GB limit refers to Windows, so was wrong with that in former mail.
> 
> However in case of R for OSX, 32-bit rgl package uses native OpenGL rendering via Carbon+AGL API, while 64-bit version uses X11 - Carbon is deprecated 32-bit only API. So this makes difference.
> 
> That's why I was asking whether there are any other packages or components of R that relay on some deprecated 32-bit libs such as Carbon and offered my help to port these parts to 64-bit Cocoa API bringing native interface.
> 

Fell free, this has nothing to do with R, though. You may want to ask the maintainers of the packages in question whether they would welcome a patch.


> Charlie wrote:
>> Another important thing to note is that the multi-lib approach works well on other platforms like Windows and Linux where "universal binaries" do not exist. Using the same approach on OS X makes for one less special case to worry about.
> 
> If everybody was thinking like that we would all use Windows and drive only Ford cars, because it is simpler when everybody uses the same stuff :) For me FAT binaries is an advantage not a problem. Windows is just a mess, so I wouldn't treat Windows as a reference here. Linux makes you do not care about architecture once you install it (ie. Ubuntu or other distro) and use built in package manager. You just select package "R" and it just copies appropriate architecture binaries, and you get single R application.
> 

That's wrong as well, you can run multi-lib on Linux (typically it's done on x64 systems to run legacy x86 code, but it is very common for other architectures like MIPS). You choose the architecture the same way as on OS X using R --arch <arch>.


> Once again, the reason of raising this discussion was a purpose of having two separate apps - R64.app and R.app as it is very uncommon for Mac users and IMHO leads to confusion. I cannot name single other application that makes such distinction. I believe there should be only one R.app using FAT binary for all archs, running best architecture (like 64-bit on recent Macs) where possible. Also all packages referring to Carbon API should be rewritten for Cocoa.
> 
> Altogether please forgive me if I may sound like "mr wise guy" here. My only intention is to help making R more Mac user friendly.
> 

Well, IMHO you don't make much sense - the only thing you seem to object is the fact that we have R.app/R64.app instead of fat R.app. However, that makes no difference whatsoever - it is just a convention that comes from the way R is run (the GUI is just an add-on, it's not "the R") and either approach works just as well. It doesn't limit anything in any way so I fail to see any connection with it and you offering help. We could certainly use an experienced Mac programmer - but the good ones don't start pointless discussions but typically provide patches and we go from there (quite successfully).

Cheers,
Simon


From ono at java.pl  Wed Dec 14 21:42:32 2011
From: ono at java.pl (Adam Strzelecki)
Date: Wed, 14 Dec 2011 21:42:32 +0100
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
Message-ID: <C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>

I guess this discussion is going nowhere. Since I am always wrong I give up.

I say having both R.app, R64.app is doubtful (talking about apps from users perspective), you justify that with dumps of some GCC directories from Xcode developer tools (talking about developer tools directories from developer perspective). Can you find me single other app for Mac that comes as two .app packages for each architecture from one install?

I say installing R in 64-bit Linux and launching R GUI app launches 64-bit version (talking how Linux hides its internals), you say I am wrong because you can launch 32-bit app using --arch param. Yes you can, does it prove it is wrong what I said? Typing "R" in OSX command line also launches R in 64-bit, why not 32-bit then?

I say 64-bit code is faster (haven't used "always", but intentionally used word "code" not "program" or "libraries", because these can be badly ported to 64-bit due old compiler or 32-bit only hand optimized assembly code not working for 64-bits, I refer to the machine code that has more wider registers than in 32-bit mode), you say it is not; because it can be slower of faster depending on task, huh :/

You say 64-bit code always use more memory, then you've probably read that: http://software.intel.com/en-us/blogs/2010/07/01/the-reasons-why-64-bit-programs-require-more-stack-memory/

Altogether I am just plain wrong :)

Thank you,
-- 
Adam Strzelecki

From kji2080 at gmail.com  Wed Dec 14 22:36:06 2011
From: kji2080 at gmail.com (Jooil Kim)
Date: Wed, 14 Dec 2011 13:36:06 -0800
Subject: [R-SIG-Mac] Help on using R CMD SHLIB for compiling shared
 libraries calling Fortran?
In-Reply-To: <B36E2EA2-C0CE-4EEE-A9C5-A59CFF2C50F5@r-project.org>
References: <298FC0A520E041288C036F3F32B96714@gmail.com>
	<B36E2EA2-C0CE-4EEE-A9C5-A59CFF2C50F5@r-project.org>
Message-ID: <CFF9A0093B774DCC8AADF95E1F4DAD2E@gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111214/c4a4e81e/attachment.pl>

From charles.sharpsteen at gmail.com  Wed Dec 14 23:25:32 2011
From: charles.sharpsteen at gmail.com (Charlie Sharpsteen)
Date: Wed, 14 Dec 2011 14:25:32 -0800
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
	<C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
Message-ID: <4985417.393.1323901532028.JavaMail.geo-discussion-forums@prez5>

On Wednesday, December 14, 2011 12:42:32 PM UTC-8, Adam Strzelecki wrote:
>
> I guess this discussion is going nowhere. Since I am always wrong I give 
> up.
>
> I say having both R.app, R64.app is doubtful (talking about apps from 
> users perspective), you justify that with dumps of some GCC directories 
> from Xcode developer tools (talking about developer tools directories from 
> developer perspective). Can you find me single other app for Mac that comes 
> as two .app packages for each architecture from one install?
>
> I say installing R in 64-bit Linux and launching R GUI app launches 64-bit 
> version (talking how Linux hides its internals), you say I am wrong because 
> you can launch 32-bit app using --arch param. Yes you can, does it prove it 
> is wrong what I said? Typing "R" in OSX command line also launches R in 
> 64-bit, why not 32-bit then?
>
> I say 64-bit code is faster (haven't used "always", but intentionally used 
> word "code" not "program" or "libraries", because these can be badly ported 
> to 64-bit due old compiler or 32-bit only hand optimized assembly code not 
> working for 64-bits, I refer to the machine code that has more wider 
> registers than in 32-bit mode), you say it is not; because it can be slower 
> of faster depending on task, huh :/
>
> You say 64-bit code always use more memory, then you've probably read 
> that: 
> http://software.intel.com/en-us/blogs/2010/07/01/the-reasons-why-64-bit-programs-require-more-stack-memory/
>
> Altogether I am just plain wrong :)
>
> Thank you,
> -- 
> Adam Strzelecki
>

I think what Simon was trying to point out is that the GUI is split into 
R.app and R64.app because otherwise there is no easy way to specify if the 
R interpreter embedded in the GUI should start in 32-bit mode or 64-bit 
mode similar to the `--arch` switch provided by command line R.

So, the separation is intentional and serves the function of allowing users 
who strongly prefer the GUI to choose in which mode they want to run R. As 
stated previously in this thread, there are several valid reasons for 
running R in 32-bit mode even though the OS is x86_64 native.

-Charlie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111214/36e8c226/attachment.html>

From charles.sharpsteen at gmail.com  Wed Dec 14 23:25:32 2011
From: charles.sharpsteen at gmail.com (Charlie Sharpsteen)
Date: Wed, 14 Dec 2011 14:25:32 -0800 (PST)
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
	<C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
Message-ID: <4985417.393.1323901532028.JavaMail.geo-discussion-forums@prez5>

On Wednesday, December 14, 2011 12:42:32 PM UTC-8, Adam Strzelecki wrote:
>
> I guess this discussion is going nowhere. Since I am always wrong I give 
> up.
>
> I say having both R.app, R64.app is doubtful (talking about apps from 
> users perspective), you justify that with dumps of some GCC directories 
> from Xcode developer tools (talking about developer tools directories from 
> developer perspective). Can you find me single other app for Mac that comes 
> as two .app packages for each architecture from one install?
>
> I say installing R in 64-bit Linux and launching R GUI app launches 64-bit 
> version (talking how Linux hides its internals), you say I am wrong because 
> you can launch 32-bit app using --arch param. Yes you can, does it prove it 
> is wrong what I said? Typing "R" in OSX command line also launches R in 
> 64-bit, why not 32-bit then?
>
> I say 64-bit code is faster (haven't used "always", but intentionally used 
> word "code" not "program" or "libraries", because these can be badly ported 
> to 64-bit due old compiler or 32-bit only hand optimized assembly code not 
> working for 64-bits, I refer to the machine code that has more wider 
> registers than in 32-bit mode), you say it is not; because it can be slower 
> of faster depending on task, huh :/
>
> You say 64-bit code always use more memory, then you've probably read 
> that: 
> http://software.intel.com/en-us/blogs/2010/07/01/the-reasons-why-64-bit-programs-require-more-stack-memory/
>
> Altogether I am just plain wrong :)
>
> Thank you,
> -- 
> Adam Strzelecki
>

I think what Simon was trying to point out is that the GUI is split into 
R.app and R64.app because otherwise there is no easy way to specify if the 
R interpreter embedded in the GUI should start in 32-bit mode or 64-bit 
mode similar to the `--arch` switch provided by command line R.

So, the separation is intentional and serves the function of allowing users 
who strongly prefer the GUI to choose in which mode they want to run R. As 
stated previously in this thread, there are several valid reasons for 
running R in 32-bit mode even though the OS is x86_64 native.

-Charlie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111214/36e8c226/attachment-0001.html>

From simon.urbanek at r-project.org  Thu Dec 15 03:56:28 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 14 Dec 2011 21:56:28 -0500
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
	<C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
Message-ID: <1951CAF5-B5F4-4778-9BDE-97E328910328@r-project.org>

On Dec 14, 2011, at 3:42 PM, Adam Strzelecki wrote:

> I guess this discussion is going nowhere. Since I am always wrong I give up.
> 

I would consider understanding/learning a more productive approach than surrender, but it's up to you ;).

From the beginning you were confusing several entirely unrelated topics (plus unrelated subject), so I'll try for the last time to make it more clear and separate them properly and address them again:

a) 3-way fat R.app (your proposal) vs 2-way fat R.app + 1-way R64.app (CRAN release).
This is entirely a choice of convention and we have decided to separate 32-bit binaries from the 64-bit binary for convenience of the user. As I said there are several reason for this. Whether you like it or not is quite irrelevant - it may not be what Safari does but then Safari is not a stat computing language. Whether you use lipo to add the 64-bit binary to R.app or not is purely cosmetic, it doesn't change the fundamental functionality (except that with R.app+R64.app you can run them in parallel and start the desired architecture more easily - and the user knows what he gets and doesn't need to guess - less relevant for Safari, more so for R).


b) multi-lib approach in R itself: (for packages, modules etc.). This is deliberate and I was illustrating that it is very common even in OS X as you can see in the gcc example. The main reason is portability because this way the build system needs to be implemented only once for all platforms. This is hidden from the user so you should not care. If you do, you may need to read up on it.


c) decision to run 32-bit vs 64-bit binaries. This we leave entirely to the user. You may not be familiar with the details (the link you quoted below is quite irrelevant in the sense that the biggest waste of memory is not on the stack - unless you use deep recursion), but each of the architectures has its weaknesses and advantages. For low-memory machines it is often advisable to use 32-bit binary as the benefits of the 64-bit instruction set are really not that big (and the numerical stability is different, some would say worse). 64-bit binary *always* uses more memory, by definition, that's not even a question. The question is only how much more, and in some practical settings it can be close to 100% more. But, again, we leave this to the user.


d) "How to make Mac 64-bit version feature complete?" Well, the CRAN 64-bit version of R *is* feature complete so the question goes off an invalid assumption. Later you mentioned rgl, but that is not part of R.



> I say having both R.app, R64.app is doubtful (talking about apps from users perspective), you justify that with dumps of some GCC directories from Xcode developer tools (talking about developer tools directories from developer perspective). Can you find me single other app for Mac that comes as two .app packages for each architecture from one install?
> 
> I say installing R in 64-bit Linux and launching R GUI app

There is no such thing on Linux. R.app exists only on OS X. Windows has Rgui and it has two of them as well (32-bit and 64-bit) and they also come with two separate icons, same as on OS X. Go figure :).


> launches 64-bit version (talking how Linux hides its internals), you say I am wrong because you can launch 32-bit app using --arch param. Yes you can, does it prove it is wrong what I said? Typing "R" in OSX command line also launches R in 64-bit, why not 32-bit then?
> 

Because this decision is made at install time depending on your OS X version - it is 32-bit for Leopard, for example. Whether this is the right thing to do is up for discussion (when installed from source you'll get the last installed architecture). R.app doesn't need to make that decision, since it is always 32-bit - easy.

I hope that helps understanding it a bit better. If not, please, consider learning more about R.

Cheers,
Simon


> I say 64-bit code is faster (haven't used "always", but intentionally used word "code" not "program" or "libraries", because these can be badly ported to 64-bit due old compiler or 32-bit only hand optimized assembly code not working for 64-bits, I refer to the machine code that has more wider registers than in 32-bit mode), you say it is not; because it can be slower of faster depending on task, huh :/
> 

Yep. If you know a bit more about CPUs, you'll realize that we width of the register is quite irrelevant until you actually use it - which is not very often the case (there are very few actual 64-bit operations). The most time you use it is with pointers where you would have used 32-bit on x86 anyway so you don't gain anything, rather to the contrary. You can gain from having more registers, but only for functions with larger number of arguments (register passing) or functions that are complex enough (fn body). Also larger objects (due to double the size of pointers) mean more very slow operations (out-of-cache memory I/O) and thus slower performance. Most gains you see are in fact due to something different - the fact that x86_64 CPUs can be assumed to have extensions that some old x86 CPUs did not have (various SIMD instructions etc.) which can be used instead of the FPU.

Even if you don't know much about Intel CPU architecture, just run some benchmarks in R - you'll see that it goes either way - you'll have tasks that are slower in 64-bit and you'll have other tasks that are faster in 64-bit (you may be able to dig up examples from this list). It really depends on things like the memory I/O load + data size, types of vectors you operate on, proportion of interpreted code etc. Since R is an interpreter, you'll see bigger negative impact due to increased 64-bit pointer size than you would see in native code (the most vulnerable are generic vectors, lists, environments and character vectors - which are incidentally the most used objects).


> You say 64-bit code always use more memory, then you've probably read that: http://software.intel.com/en-us/blogs/2010/07/01/the-reasons-why-64-bit-programs-require-more-stack-memory/
> 
> Altogether I am just plain wrong :)
> 
> Thank you,
> -- 
> Adam Strzelecki
> 


From lists at remoteinformation.com.au  Thu Dec 15 05:49:51 2011
From: lists at remoteinformation.com.au (Ben Madin)
Date: Thu, 15 Dec 2011 12:49:51 +0800
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <1951CAF5-B5F4-4778-9BDE-97E328910328@r-project.org>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
	<C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
	<1951CAF5-B5F4-4778-9BDE-97E328910328@r-project.org>
Message-ID: <E7DE96B5-6DEC-4391-A29E-DE40D633037C@remoteinformation.com.au>

G'day,

I understand almost none of this (I deal with dogs and cows normally) but historically I had some R packages that would only work 32 bit (RPgSQL was one) , so it was handy to be able to run both 32 and 64 bit instances concurrently. It seems less of an issue now for me (but I'm on a relatively new machine and now use RPostgreSQL!) and most things run in 64 bit.

I guess it's more about R than Mac programming.

I'll shut up and go back to being thankful that (for me as an epidemiologist) it just works.

cheers

Ben



On 15/12/2011, at 10:56 AM, Simon Urbanek wrote:

> On Dec 14, 2011, at 3:42 PM, Adam Strzelecki wrote:
> 
>> I guess this discussion is going nowhere. Since I am always wrong I give up.
>> 
> 
> I would consider understanding/learning a more productive approach than surrender, but it's up to you ;).
> 
> From the beginning you were confusing several entirely unrelated topics (plus unrelated subject), so I'll try for the last time to make it more clear and separate them properly and address them again:
> 
> a) 3-way fat R.app (your proposal) vs 2-way fat R.app + 1-way R64.app (CRAN release).
> This is entirely a choice of convention and we have decided to separate 32-bit binaries from the 64-bit binary for convenience of the user. As I said there are several reason for this. Whether you like it or not is quite irrelevant - it may not be what Safari does but then Safari is not a stat computing language. Whether you use lipo to add the 64-bit binary to R.app or not is purely cosmetic, it doesn't change the fundamental functionality (except that with R.app+R64.app you can run them in parallel and start the desired architecture more easily - and the user knows what he gets and doesn't need to guess - less relevant for Safari, more so for R).
> 
> 
> b) multi-lib approach in R itself: (for packages, modules etc.). This is deliberate and I was illustrating that it is very common even in OS X as you can see in the gcc example. The main reason is portability because this way the build system needs to be implemented only once for all platforms. This is hidden from the user so you should not care. If you do, you may need to read up on it.
> 
> 
> c) decision to run 32-bit vs 64-bit binaries. This we leave entirely to the user. You may not be familiar with the details (the link you quoted below is quite irrelevant in the sense that the biggest waste of memory is not on the stack - unless you use deep recursion), but each of the architectures has its weaknesses and advantages. For low-memory machines it is often advisable to use 32-bit binary as the benefits of the 64-bit instruction set are really not that big (and the numerical stability is different, some would say worse). 64-bit binary *always* uses more memory, by definition, that's not even a question. The question is only how much more, and in some practical settings it can be close to 100% more. But, again, we leave this to the user.
> 
> 
> d) "How to make Mac 64-bit version feature complete?" Well, the CRAN 64-bit version of R *is* feature complete so the question goes off an invalid assumption. Later you mentioned rgl, but that is not part of R.
> 
> 
> 
>> I say having both R.app, R64.app is doubtful (talking about apps from users perspective), you justify that with dumps of some GCC directories from Xcode developer tools (talking about developer tools directories from developer perspective). Can you find me single other app for Mac that comes as two .app packages for each architecture from one install?
>> 
>> I say installing R in 64-bit Linux and launching R GUI app
> 
> There is no such thing on Linux. R.app exists only on OS X. Windows has Rgui and it has two of them as well (32-bit and 64-bit) and they also come with two separate icons, same as on OS X. Go figure :).
> 
> 
>> launches 64-bit version (talking how Linux hides its internals), you say I am wrong because you can launch 32-bit app using --arch param. Yes you can, does it prove it is wrong what I said? Typing "R" in OSX command line also launches R in 64-bit, why not 32-bit then?
>> 
> 
> Because this decision is made at install time depending on your OS X version - it is 32-bit for Leopard, for example. Whether this is the right thing to do is up for discussion (when installed from source you'll get the last installed architecture). R.app doesn't need to make that decision, since it is always 32-bit - easy.
> 
> I hope that helps understanding it a bit better. If not, please, consider learning more about R.
> 
> Cheers,
> Simon
> 
> 
>> I say 64-bit code is faster (haven't used "always", but intentionally used word "code" not "program" or "libraries", because these can be badly ported to 64-bit due old compiler or 32-bit only hand optimized assembly code not working for 64-bits, I refer to the machine code that has more wider registers than in 32-bit mode), you say it is not; because it can be slower of faster depending on task, huh :/
>> 
> 
> Yep. If you know a bit more about CPUs, you'll realize that we width of the register is quite irrelevant until you actually use it - which is not very often the case (there are very few actual 64-bit operations). The most time you use it is with pointers where you would have used 32-bit on x86 anyway so you don't gain anything, rather to the contrary. You can gain from having more registers, but only for functions with larger number of arguments (register passing) or functions that are complex enough (fn body). Also larger objects (due to double the size of pointers) mean more very slow operations (out-of-cache memory I/O) and thus slower performance. Most gains you see are in fact due to something different - the fact that x86_64 CPUs can be assumed to have extensions that some old x86 CPUs did not have (various SIMD instructions etc.) which can be used instead of the FPU.
> 
> Even if you don't know much about Intel CPU architecture, just run some benchmarks in R - you'll see that it goes either way - you'll have tasks that are slower in 64-bit and you'll have other tasks that are faster in 64-bit (you may be able to dig up examples from this list). It really depends on things like the memory I/O load + data size, types of vectors you operate on, proportion of interpreted code etc. Since R is an interpreter, you'll see bigger negative impact due to increased 64-bit pointer size than you would see in native code (the most vulnerable are generic vectors, lists, environments and character vectors - which are incidentally the most used objects).
> 
> 
>> You say 64-bit code always use more memory, then you've probably read that: http://software.intel.com/en-us/blogs/2010/07/01/the-reasons-why-64-bit-programs-require-more-stack-memory/
>> 
>> Altogether I am just plain wrong :)
>> 
>> Thank you,
>> -- 
>> Adam Strzelecki
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From ono at java.pl  Thu Dec 15 12:38:30 2011
From: ono at java.pl (Adam Strzelecki)
Date: Thu, 15 Dec 2011 12:38:30 +0100
Subject: [R-SIG-Mac] Why there are two R.app & R64.app?
In-Reply-To: <1951CAF5-B5F4-4778-9BDE-97E328910328@r-project.org>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
	<C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
	<1951CAF5-B5F4-4778-9BDE-97E328910328@r-project.org>
Message-ID: <706A4280-37E2-407C-AC46-D8F4F0FC871E@java.pl>

Simon,

First of all I really appreciate your responses and of course the work you've done. I may not completely agree with some design decisions, but anyway it is great to have such nice GUI for Mac version of R - IMHO the best GUI of all platforms.

> a) 3-way fat R.app (your proposal) vs 2-way fat R.app + 1-way R64.app (CRAN release).
> This is entirely a choice of convention and we have decided to separate 32-bit binaries from the 64-bit binary for convenience of the user. As I said there are several reason for this. Whether you like it or not is quite irrelevant - it may not be what Safari does but then Safari is not a stat computing language. Whether you use lipo to add the 64-bit binary to R.app or not is purely cosmetic, it doesn't change the fundamental functionality (except that with R.app+R64.app you can run them in parallel and start the desired architecture more easily - and the user knows what he gets and doesn't need to guess - less relevant for Safari, more so for R).

You're looking on it from developer's perspective. But regular user that want to make few plots via R do not necessarily know what is 64-bit at all. That's why on Mac there's a convention to use FAT binaries and default to 64-bit unless you specify otherwise (like via Finder properties for an app) or there's no capable CPU. All this are for sake of consistency and single experience for all apps.

This is what makes Mac/OSX different from Windows for example - conventions like similar UI for all apps, same keyboard shortcuts for same tasks, same places where every app places its configuration files. So IMHO every developer should ask himself when there comes an idea of making things "better" or "different" that break convention, whether it will really make things better or will lead to confusion.

Just to be clear, I do agree with you in general, that R user should be able to choose between 32-bit and 64-bit version, but this can be done without breaking the OSX conventions, via Finder. Probably I shouldn't be so picky about Mac's R GUI because it is really great, but I just feel it isn't right when some apps behave "different", like placing files in folders I do not expect them to do, etc. etc.

> b) multi-lib approach in R itself: (for packages, modules etc.). This is deliberate and I was illustrating that it is very common even in OS X as you can see in the gcc example. The main reason is portability because this way the build system needs to be implemented only once for all platforms. This is hidden from the user so you should not care. If you do, you may need to read up on it.

Sorry but I have to say that. You GCC example is just wrong. GCC is compiler and the folders you mention /usr/lib/gcc/*/4.2.1 are the program DATA not executable code, so these x86_64 folders inside have nothing to do to GCC program executable code itself (i.e. in ARM GCC toolchain these can refer to ARM architecture, while the compiler can run on Intel). GCC executable code as shown via `file /usr/bin/gcc` or `file /usr/lib/libgcc_s.1.dylib` is FAT binary, so Apple does not make any exception here. They do use FAT binaries everywhere.

> c) decision to run 32-bit vs 64-bit binaries. This we leave entirely to the user. You may not be familiar with the details (the link you quoted below is quite irrelevant in the sense that the biggest waste of memory is not on the stack - unless you use deep recursion), but each of the architectures has its weaknesses and advantages. For low-memory machines it is often advisable to use 32-bit binary as the benefits of the 64-bit instruction set are really not that big (and the numerical stability is different, some would say worse). 64-bit binary *always* uses more memory, by definition, that's not even a question. The question is only how much more, and in some practical settings it can be close to 100% more. But, again, we leave this to the user.

I never said that 64-bit version use less memory. But saying that 64-bit version can have twice memory usage than 32-bit version is kind of over interpretation. For sure it will (nearly) double its executable size, and also stack memory, but heap (which occupies I believe ~95% memory space in most of uses) won't grow much unless you use memory structures that are made only from pointers. All other types do not change their size in 64-bit, doubles, ints remain same size, at least for AMD64 (not talking here about Sparc or PPC64 :>)

As for memory please also not that 32-bit app 4GB addressing limit is in fact much less, rather close to ~1-1.5GB, because of two factors: VM address space fragmentation, address space range for kernel.

> d) "How to make Mac 64-bit version feature complete?" Well, the CRAN 64-bit version of R *is* feature complete so the question goes off an invalid assumption. Later you mentioned rgl, but that is not part of R.

Yes I did false assumption that there's something wrong with 64-bit version so there's separate R64.app. I am sorry about that - renaming the subject of this discussion to something more appropriate.

>> I say installing R in 64-bit Linux and launching R GUI app
> 
> There is no such thing on Linux. R.app exists only on OS X. Windows has Rgui and it has two of them as well (32-bit and 64-bit) and they also come with two separate icons, same as on OS X. Go figure :).

Sorry for the mental shortcut, I know that there's no official R GUI app for Linux, but there's "R --gui=". Still on Linux you won't know any arch distinction exists unless you dig deeper into command line params. On Mac you do, because hey, there are TWO apps installed by the packager. Which once shall I use then? Which one's better? :P

> Because this decision is made at install time depending on your OS X version - it is 32-bit for Leopard, for example. Whether this is the right thing to do is up for discussion (when installed from source you'll get the last installed architecture). R.app doesn't need to make that decision, since it is always 32-bit - easy.

No it is not, because the convention is violated. If you run Activity Monitor.app on SL or Lion you will see most of apps are 64-bit, but they don't have any "64" suffix or whatsoever. Such internals are hidden from the Mac user. Apple has decided so, and I do agree with them (even I do not agree with them in many other cases ;)), an average user does not need to know about CPU architectures, so it is OS that should choose for him, leaving of course some way to change that decision.

> I hope that helps understanding it a bit better. If not, please, consider learning more about R.

I did one thing wrong, started this discussion with wrong subject bringing a suggestion that R is somehow incomplete. I am very sorry about that, I had no indention to suggest anything like that.

Yes I do learn R, and I find it very mature and advanced software. I do have also MatLab and Mathematica (university licenses) here but I find R superior to them, as it less cluttered, better optimized and what's more important more consistent.

Best regards,
-- 
Adam

From f.calboli at imperial.ac.uk  Thu Dec 15 16:11:22 2011
From: f.calboli at imperial.ac.uk (Federico Calboli)
Date: Thu, 15 Dec 2011 15:11:22 +0000
Subject: [R-SIG-Mac] Why there are two R.app & R64.app?
In-Reply-To: <706A4280-37E2-407C-AC46-D8F4F0FC871E@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
	<C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
	<1951CAF5-B5F4-4778-9BDE-97E328910328@r-project.org>
	<706A4280-37E2-407C-AC46-D8F4F0FC871E@java.pl>
Message-ID: <921D0A7B-FEA4-412E-A89E-C4826A894E7F@imperial.ac.uk>

On 15 Dec 2011, at 11:38, Adam Strzelecki wrote:
> 
> You're looking on it from developer's perspective. But regular user that want to make few plots via R do not necessarily know what is 64-bit at all. That's why on Mac there's a convention to use FAT binaries and default to 64-bit unless you specify otherwise (like via Finder properties for an app) or there's no capable CPU. All this are for sake of consistency and single experience for all apps.

I'd like to chime in. I *am* a regular user. I *do want* to know whether I am using R in 32 or 64-bit mode. I *am* using R, which means that I am *not* Joe random, but a sample of one from a nonrandom selfselected population of people who use a modestly user unfriendly statistical alnguage, either for data analysis or for writing their own code. So, considering R users as the average Mac users is a *wrong* assumption.

> Just to be clear, I do agree with you in general, that R user should be able to choose between 32-bit and 64-bit version, but this can be done without breaking the OSX conventions, via Finder.

I damn well do already, clicking on 'R64' rather than 'R', which is the 32-bit R.app. You seem to have a personal beef with the fact that the R GUI does not behave the way *you* think it should. I do have a beef with the quality of the icon of the R.app, so I did make a higher resolution for myself and sent a copy to Simon in case he chooses to use the damn thing. If Simon does not use the hi res icon, I can change the icon of the R.app every time, at infinitum, and live with it.

If you are not happy with the R/R64 situation, write your own GUI and use it. There are other R GUIs for OSX already ("R commander"?, something like that). I'd much rather be able to change the default font permanently in the R.app that get bothered by the 32/64-bit issue.

Just a though.

F


--
Federico C. F. Calboli
Neuroepidemiology and Ageing Research
Imperial College, St. Mary's Campus
Norfolk Place, London W2 1PG

Tel +44 (0)20 75941602   Fax +44 (0)20 75943193

f.calboli [.a.t] imperial.ac.uk
f.calboli [.a.t] gmail.com


From ono at java.pl  Thu Dec 15 16:52:24 2011
From: ono at java.pl (Adam Strzelecki)
Date: Thu, 15 Dec 2011 16:52:24 +0100
Subject: [R-SIG-Mac] Why there are two R.app & R64.app?
In-Reply-To: <921D0A7B-FEA4-412E-A89E-C4826A894E7F@imperial.ac.uk>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
	<C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
	<1951CAF5-B5F4-4778-9BDE-97E328910328@r-project.org>
	<706A4280-37E2-407C-AC46-D8F4F0FC871E@java.pl>
	<921D0A7B-FEA4-412E-A89E-C4826A894E7F@imperial.ac.uk>
Message-ID: <083FEB8F-2A9F-4FE2-AFED-5F69E195FAFA@java.pl>

> If you are not happy with the R/R64 situation, write your own GUI and use it. There are other R GUIs for OSX already ("R commander"?, something like that). I'd much rather be able to change the default font permanently in the R.app that get bothered by the 32/64-bit issue.

The reason I started this thread was not to express my unhappiness, but simply asking why there are two R apps installed by the package. So that was just a curiosity. Since I do use "rgl" a lot, which falls back to X11 on 64-bit rather than native UI, I figured out (wrong) that this may be the reason. I work with pretty heavy data, have 12GB RAM, so going 64-bit was natural choice for me, but going trough X11 for OpenGL is not what I'd expect. That's why I am going to make Cocoa wrapper for rgl that should handle that.

There is nowhere any complaint stashed in what I wrote about how R works or how it looks like (the icon is IMHO nice), I was just asking for the REASON and PURPOSE having two apps. It is just Simon's arguments do not convince me, despite my regard for him. You can switch between arch via Finder, you get a report about current arch during R startup. But you guys take what I wrote (which is just an opinion) as accusations. As I said the only mistake was the original subject that was suggesting some "incompleteness" based on false assumption related to "rgl", and I am sorry about that.

Just like that.

Cheers,
-- 
Adam Strzelecki

From simon.urbanek at r-project.org  Thu Dec 15 17:43:05 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 15 Dec 2011 11:43:05 -0500
Subject: [R-SIG-Mac] Why there are two R.app & R64.app?
In-Reply-To: <083FEB8F-2A9F-4FE2-AFED-5F69E195FAFA@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<73816540-F2FE-4650-9820-D4A1D7AE2CEA@r-project.org>
	<C421E551-BDA2-41A2-B46D-5A83913F105E@java.pl>
	<1951CAF5-B5F4-4778-9BDE-97E328910328@r-project.org>
	<706A4280-37E2-407C-AC46-D8F4F0FC871E@java.pl>
	<921D0A7B-FEA4-412E-A89E-C4826A894E7F@imperial.ac.uk>
	<083FEB8F-2A9F-4FE2-AFED-5F69E195FAFA@java.pl>
Message-ID: <5E1F2FB9-CBDE-4DB4-AE31-48521CF97993@r-project.org>

Adam,

On Dec 15, 2011, at 10:52 AM, Adam Strzelecki wrote:

>> If you are not happy with the R/R64 situation, write your own GUI and use it. There are other R GUIs for OSX already ("R commander"?, something like that). I'd much rather be able to change the default font permanently in the R.app that get bothered by the 32/64-bit issue.
> 
> The reason I started this thread was not to express my unhappiness, but simply asking why there are two R apps installed by the package. So that was just a curiosity. Since I do use "rgl" a lot, which falls back to X11 on 64-bit rather than native UI, I figured out (wrong) that this may be the reason. I work with pretty heavy data, have 12GB RAM, so going 64-bit was natural choice for me, but going trough X11 for OpenGL is not what I'd expect. That's why I am going to make Cocoa wrapper for rgl that should handle that.
> 
> There is nowhere any complaint stashed in what I wrote about how R works or how it looks like (the icon is IMHO nice), I was just asking for the REASON and PURPOSE having two apps. It is just Simon's arguments do not convince me,

You asked about reasons, you got them. They are not intended to convince you. I even told you how you can make yourself happy - but note that it is about *you*, not anyone else. You have the right to disagree, but you don't have the right to impose your view on everyone else (unfortunately a more common trait in recent times) - which is what the exchange looked more like. (More off-list.)

Cheers,
Simon


> despite my regard for him. You can switch between arch via Finder, you get a report about current arch during R startup. But you guys take what I wrote (which is just an opinion) as accusations. As I said the only mistake was the original subject that was suggesting some "incompleteness" based on false assumption related to "rgl", and I am sorry about that.
> 
> Just like that.
> 
> Cheers,
> -- 
> Adam Strzelecki
> 


From timothy.c.bates at gmail.com  Wed Dec 14 17:38:53 2011
From: timothy.c.bates at gmail.com (Timothy Bates)
Date: Wed, 14 Dec 2011 16:38:53 +0000
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
Message-ID: <49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>


On 14 Dec 2011, at 4:24 PM, Adam Strzelecki wrote:
>> In addition, there is no benefit in creating universal binaries, since they are very Darwin-specific and bring no benefit in this context.
> 
> There's a huge benefit of doing that. I do develop Mac apps, and FAT binaries and libs makes the other apps referring to them to refer to single file path regardless of architecture. So this is benefit for developers. Another benefit is for Mac users, that they run single app regardless if they run on PPC, i386 only Intel (first Intel Macs ?!) or latest 64-bit Macs.


I?ll second that: It makes AppleScripting easier too: Calling ?R.app? always works, instead of every user having to customise scripts with their app version R64.app vs R.app

I work around this by deleting one binary and renaming R64 to R.app

Cheers,
tim


From simon.urbanek at r-project.org  Fri Dec 16 17:20:40 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 16 Dec 2011 11:20:40 -0500
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>
Message-ID: <4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>

On Dec 14, 2011, at 11:38 AM, Timothy Bates wrote:

> 
> On 14 Dec 2011, at 4:24 PM, Adam Strzelecki wrote:
>>> In addition, there is no benefit in creating universal binaries, since they are very Darwin-specific and bring no benefit in this context.
>> 
>> There's a huge benefit of doing that. I do develop Mac apps, and FAT binaries and libs makes the other apps referring to them to refer to single file path regardless of architecture. So this is benefit for developers. Another benefit is for Mac users, that they run single app regardless if they run on PPC, i386 only Intel (first Intel Macs ?!) or latest 64-bit Macs.
> 
> 
> I?ll second that: It makes AppleScripting easier too: Calling ?R.app? always works, instead of every user having to customise scripts with their app version R64.app vs R.app
> 

That is fair enough. Do other users have an opinion either way?


> I work around this by deleting one binary and renaming R64 to R.app
> 

You can simply run

lipo -create /Applications/R.app/Contents/MacOS/R \
 /Applications/R64.app/Contents/MacOS/R \
-o /Applications/R.app/Contents/MacOS/R 

That will create the 3-way universal R.app as discussed.

Cheers,
Simon


From bhh at xs4all.nl  Fri Dec 16 18:40:35 2011
From: bhh at xs4all.nl (Berend Hasselman)
Date: Fri, 16 Dec 2011 18:40:35 +0100
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>
	<4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
Message-ID: <E749B2E6-0B1C-40E3-8242-D1F6FF828C27@xs4all.nl>


On 16-12-2011, at 17:20, Simon Urbanek wrote:

> On Dec 14, 2011, at 11:38 AM, Timothy Bates wrote:
> 
>> 
>> On 14 Dec 2011, at 4:24 PM, Adam Strzelecki wrote:
>>>> In addition, there is no benefit in creating universal binaries, since they are very Darwin-specific and bring no benefit in this context.
>>> 
>>> There's a huge benefit of doing that. I do develop Mac apps, and FAT binaries and libs makes the other apps referring to them to refer to single file path regardless of architecture. So this is benefit for developers. Another benefit is for Mac users, that they run single app regardless if they run on PPC, i386 only Intel (first Intel Macs ?!) or latest 64-bit Macs.
>> 
>> 
>> I?ll second that: It makes AppleScripting easier too: Calling ?R.app? always works, instead of every user having to customise scripts with their app version R64.app vs R.app
>> 
> 
> That is fair enough. Do other users have an opinion either way?
> 

(Using Mac OS X 10.6.8)

Most of the time I use R 32-bit.
Currently my machine has 4Gb memory so 64-bit is not needed.
I have found that quite often 32-bit R runs faster than the 64-bit version.

In Terminal on the commandline we have R32, R64 and R (which is 64-bit).

So to have R.app be 32-bit looks a bit odd.

I don't like the Finder way to make applications start in 32-bit or 64-bit mode (Get Info and check a box).
Also for a user with no permissions to fiddle in /Applications this would make life difficult.

My suggestion would be the following:

R32.app ==> runs 32-bit R
R64.app ==> runs 64-bit R

R.app could be the main application responding to applescript "R.app", defaulting to 64-bit.
And R32 and R64 somehow start R in 32-bit and 64-bit mode respectively.

Or R32 and R64 are separate applications both responding to "R.app" (this precludes both running simultaneously?).
And R.app an alias to one  of the above.

Hopefully this makes sense.

Berend


> 
>> I work around this by deleting one binary and renaming R64 to R.app
>> 
> 
> You can simply run
> 
> lipo -create /Applications/R.app/Contents/MacOS/R \
> /Applications/R64.app/Contents/MacOS/R \
> -o /Applications/R.app/Contents/MacOS/R 
> 
> That will create the 3-way universal R.app as discussed.
> 
> Cheers,
> Simon
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From dwinsemius at comcast.net  Fri Dec 16 18:50:35 2011
From: dwinsemius at comcast.net (David Winsemius)
Date: Fri, 16 Dec 2011 12:50:35 -0500
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>
	<4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
Message-ID: <ECBA2766-76E3-49A0-BD3A-9190FEC0A936@comcast.net>


On Dec 16, 2011, at 11:20 AM, Simon Urbanek wrote:

> On Dec 14, 2011, at 11:38 AM, Timothy Bates wrote:
>
>>
>> On 14 Dec 2011, at 4:24 PM, Adam Strzelecki wrote:
>>>> In addition, there is no benefit in creating universal binaries,  
>>>> since they are very Darwin-specific and bring no benefit in this  
>>>> context.
>>>
>>> There's a huge benefit of doing that. I do develop Mac apps, and  
>>> FAT binaries and libs makes the other apps referring to them to  
>>> refer to single file path regardless of architecture. So this is  
>>> benefit for developers. Another benefit is for Mac users, that  
>>> they run single app regardless if they run on PPC, i386 only Intel  
>>> (first Intel Macs ?!) or latest 64-bit Macs.
>>
>>
>> I?ll second that: It makes AppleScripting easier too: Calling  
>> ?R.app? always works, instead of every user having to customise  
>> scripts with their app version R64.app vs R.app
>>
>
> That is fair enough. Do other users have an opinion either way?
>

I've never had any confusion at that level of using R.app or R64.app.  
I was really grateful that R64 was there when I needed it. There was  
some confusion about package availability for the 64-bit version a  
couple of years ago, but that seems to have faded away.

>
>> I work around this by deleting one binary and renaming R64 to R.app
>>
>
> You can simply run
>
> lipo -create /Applications/R.app/Contents/MacOS/R \
> /Applications/R64.app/Contents/MacOS/R \
> -o /Applications/R.app/Contents/MacOS/R
>
> That will create the 3-way universal R.app as discussed.

I don't read system commands very well. On my laptop with a hardware  
restriction to 4GB will that load R64.app if it's not needed?

>
> Cheers,
> Simon
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

David Winsemius, MD
West Hartford, CT


From dwinsemius at comcast.net  Fri Dec 16 18:54:27 2011
From: dwinsemius at comcast.net (David Winsemius)
Date: Fri, 16 Dec 2011 12:54:27 -0500
Subject: [R-SIG-Mac] Function argument display on GUI console border
Message-ID: <DCE5E33C-309F-48C4-8B1D-2DBB3782AF2C@comcast.net>


The display of function arguments along the lower border of the  
Console window now seems very erratic. If I now type

duplicated(

... I was expecting to see the usage argument list along the lower  
border. Am I the only one who has seen this feature become less  
predictably available?

 > sessionInfo()
R version 2.14.0 Patched (2011-11-13 r57650)
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] splines   stats     graphics  grDevices utils     datasets  methods
[8] base

other attached packages:
  [1] latticeExtra_0.6-19 RColorBrewer_1.0-5  Matrix_1.0-1
  [4] rms_3.3-2           Hmisc_3.9-0         timereg_1.6-0
  [7] survival_2.36-10    sos_1.3-1           brew_1.0-6
[10] lattice_0.20-0

loaded via a namespace (and not attached):
[1] cluster_1.14.1 grid_2.14.0    tools_2.14.0


David Winsemius, MD
West Hartford, CT


From simon.urbanek at r-project.org  Fri Dec 16 19:11:49 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 16 Dec 2011 13:11:49 -0500
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <ECBA2766-76E3-49A0-BD3A-9190FEC0A936@comcast.net>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>
	<4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
	<ECBA2766-76E3-49A0-BD3A-9190FEC0A936@comcast.net>
Message-ID: <741C0E33-75B4-4CC6-9D1A-2F024B572970@r-project.org>


On Dec 16, 2011, at 12:50 PM, David Winsemius wrote:

> 
> On Dec 16, 2011, at 11:20 AM, Simon Urbanek wrote:
> 
>> On Dec 14, 2011, at 11:38 AM, Timothy Bates wrote:
>> 
>>> 
>>> On 14 Dec 2011, at 4:24 PM, Adam Strzelecki wrote:
>>>>> In addition, there is no benefit in creating universal binaries, since they are very Darwin-specific and bring no benefit in this context.
>>>> 
>>>> There's a huge benefit of doing that. I do develop Mac apps, and FAT binaries and libs makes the other apps referring to them to refer to single file path regardless of architecture. So this is benefit for developers. Another benefit is for Mac users, that they run single app regardless if they run on PPC, i386 only Intel (first Intel Macs ?!) or latest 64-bit Macs.
>>> 
>>> 
>>> I?ll second that: It makes AppleScripting easier too: Calling ?R.app? always works, instead of every user having to customise scripts with their app version R64.app vs R.app
>>> 
>> 
>> That is fair enough. Do other users have an opinion either way?
>> 
> 
> I've never had any confusion at that level of using R.app or R64.app. I was really grateful that R64 was there when I needed it. There was some confusion about package availability for the 64-bit version a couple of years ago, but that seems to have faded away.
> 
>> 
>>> I work around this by deleting one binary and renaming R64 to R.app
>>> 
>> 
>> You can simply run
>> 
>> lipo -create /Applications/R.app/Contents/MacOS/R \
>> /Applications/R64.app/Contents/MacOS/R \
>> -o /Applications/R.app/Contents/MacOS/R
>> 
>> That will create the 3-way universal R.app as discussed.
> 
> I don't read system commands very well. On my laptop with a hardware restriction to 4GB will that load R64.app if it's not needed?
> 

Yes (practically). The above "lipo" command merges the 64-bit binary from R64.app into R.app (and thus R64.app becomes superfluous). By default this would make OS X 10.6+ pick 64-bit on machines that support it, even if they don't need it. You can override that behavior in the Finder, though. I'm not suggesting that it's a good thing, it's for those that would prefer just a single R.app for everything - which is what sparked this discussion.

Cheers,
Simon


From simon.urbanek at r-project.org  Fri Dec 16 19:18:38 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 16 Dec 2011 13:18:38 -0500
Subject: [R-SIG-Mac] Function argument display on GUI console border
In-Reply-To: <DCE5E33C-309F-48C4-8B1D-2DBB3782AF2C@comcast.net>
References: <DCE5E33C-309F-48C4-8B1D-2DBB3782AF2C@comcast.net>
Message-ID: <3E8980C6-2801-45BA-9FC2-7F17DCD1B462@r-project.org>


On Dec 16, 2011, at 12:54 PM, David Winsemius wrote:

> 
> The display of function arguments along the lower border of the Console window now seems very erratic. If I now type
> 
> duplicated(
> 
> ... I was expecting to see the usage argument list along the lower border.

You should see

duplcated(x, incomparables = FALSE, ...)

in the bottom bar - at least that's what I get.


> Am I the only one who has seen this feature become less predictably available?
> 

You'll have to be more precise as of what you see .... Since the console essentially just evaluates capture.output(print(args(...))), you can obviously break it by any R code that changes the behavior of the pieces involved. But then I don't know why anyone would to that ... ;)

Cheers,
Simon


> > sessionInfo()
> R version 2.14.0 Patched (2011-11-13 r57650)
> Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] splines   stats     graphics  grDevices utils     datasets  methods
> [8] base
> 
> other attached packages:
> [1] latticeExtra_0.6-19 RColorBrewer_1.0-5  Matrix_1.0-1
> [4] rms_3.3-2           Hmisc_3.9-0         timereg_1.6-0
> [7] survival_2.36-10    sos_1.3-1           brew_1.0-6
> [10] lattice_0.20-0
> 
> loaded via a namespace (and not attached):
> [1] cluster_1.14.1 grid_2.14.0    tools_2.14.0
> 
> 
> David Winsemius, MD
> West Hartford, CT
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From dwinsemius at comcast.net  Fri Dec 16 19:35:29 2011
From: dwinsemius at comcast.net (David Winsemius)
Date: Fri, 16 Dec 2011 13:35:29 -0500
Subject: [R-SIG-Mac] Function argument display on GUI console border
In-Reply-To: <3E8980C6-2801-45BA-9FC2-7F17DCD1B462@r-project.org>
References: <DCE5E33C-309F-48C4-8B1D-2DBB3782AF2C@comcast.net>
	<3E8980C6-2801-45BA-9FC2-7F17DCD1B462@r-project.org>
Message-ID: <F6C79BD3-012C-43D0-B83F-C499A857410F@comcast.net>


On Dec 16, 2011, at 1:18 PM, Simon Urbanek wrote:

>
> On Dec 16, 2011, at 12:54 PM, David Winsemius wrote:
>
>>
>> The display of function arguments along the lower border of the  
>> Console window now seems very erratic. If I now type
>>
>> duplicated(
>>
>> ... I was expecting to see the usage argument list along the lower  
>> border.
>
> You should see
>
> duplcated(x, incomparables = FALSE, ...)
>
> in the bottom bar - at least that's what I get.
>
>
>> Am I the only one who has seen this feature become less predictably  
>> available?
>>
>
> You'll have to be more precise as of what you see .... Since the  
> console essentially just evaluates capture.output(print(args(...))),  
> you can obviously break it by any R code that changes the behavior  
> of the pieces involved. But then I don't know why anyone would to  
> that ... ;)

The display of parameters seems to be reproducibly inhibited after  
backspacing  or selecting and deleting a function name that had an  
argument list displayed. If I type "duplicated(", and then see an  
argument list , then backspace over it and hit <enter> and then type  
"duplicated(" again,  I see no arguments. I did discover by accident  
that I sometimes get back the desired behavior after typing  
sessionInfo(). I will generally get display of arguments from other  
functions after that, but "duplicated" seems to be blanked out until  
<something happens to make it recognized again>.

>
> Cheers,
> Simon
>
>
>>> sessionInfo()
>> R version 2.14.0 Patched (2011-11-13 r57650)
>> Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] splines   stats     graphics  grDevices utils     datasets   
>> methods
>> [8] base
>>
>> other attached packages:
>> [1] latticeExtra_0.6-19 RColorBrewer_1.0-5  Matrix_1.0-1
>> [4] rms_3.3-2           Hmisc_3.9-0         timereg_1.6-0
>> [7] survival_2.36-10    sos_1.3-1           brew_1.0-6
>> [10] lattice_0.20-0
>>
>> loaded via a namespace (and not attached):
>> [1] cluster_1.14.1 grid_2.14.0    tools_2.14.0
>>
>>
>> David Winsemius, MD
>> West Hartford, CT
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>>
>

David Winsemius, MD
West Hartford, CT


From ono at java.pl  Fri Dec 16 19:38:28 2011
From: ono at java.pl (Adam Strzelecki)
Date: Fri, 16 Dec 2011 19:38:28 +0100
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <ECBA2766-76E3-49A0-BD3A-9190FEC0A936@comcast.net>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>
	<4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
	<ECBA2766-76E3-49A0-BD3A-9190FEC0A936@comcast.net>
Message-ID: <076547E5-C57F-4935-976E-5BF130EEF756@java.pl>

Just to give you some numbers, on my iMac Lion 10.7.2, i5 Sandy Bridge.

? When allocating matrix 10000x10000 R64 takes 798MB vs R32 taking 785MB, so 14MB is wasted for 64-bit handling
? Running R-benchmark-25.R from http://r.research.att.com/benchmarks/ in R64 renders about ~5% performance gain

I am aware these number can really differ on older OSX, notably on Leopard, also 64-bit performance can be very bad for 64-bit using vecLib on older OSX, vecLib was somehow borked by Apple.

On other side Apple depreciates slowly 32-bit in newer systems, in Lion there's no 32-bit kernel anymore, most of built-in apps are 64-bit only. Still is can run 32-bit apps, but it cannot run PPC anymore (no Rosetta).

So IMHO the picking 64-bit on 10.6+ (or 10.7+) is good option for the future, as the scientific datasets grow every year and RAM installed by default by Apple will be soon min 8GB. 

(Some tech blather: 64-bit program can allocate in fact more than 4GB when having only 4GB RAM - implies paging and swapping, unless allocated pages remain non-written. In theory 64-bit program can allocate few 1TB on 4GB RAM system, with no physical memory usage bump. Memory will be used only when user will 1st access the allocated pages.)

Regards,
-- 
Adam Strzelecki

From simon.urbanek at r-project.org  Sat Dec 17 00:22:25 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 16 Dec 2011 18:22:25 -0500
Subject: [R-SIG-Mac] Function argument display on GUI console border
In-Reply-To: <F6C79BD3-012C-43D0-B83F-C499A857410F@comcast.net>
References: <DCE5E33C-309F-48C4-8B1D-2DBB3782AF2C@comcast.net>
	<3E8980C6-2801-45BA-9FC2-7F17DCD1B462@r-project.org>
	<F6C79BD3-012C-43D0-B83F-C499A857410F@comcast.net>
Message-ID: <7251B5D8-79ED-41CF-9980-E4871E7CFD21@r-project.org>


On Dec 16, 2011, at 1:35 PM, David Winsemius wrote:

> 
> On Dec 16, 2011, at 1:18 PM, Simon Urbanek wrote:
> 
>> 
>> On Dec 16, 2011, at 12:54 PM, David Winsemius wrote:
>> 
>>> 
>>> The display of function arguments along the lower border of the Console window now seems very erratic. If I now type
>>> 
>>> duplicated(
>>> 
>>> ... I was expecting to see the usage argument list along the lower border.
>> 
>> You should see
>> 
>> duplcated(x, incomparables = FALSE, ...)
>> 
>> in the bottom bar - at least that's what I get.
>> 
>> 
>>> Am I the only one who has seen this feature become less predictably available?
>>> 
>> 
>> You'll have to be more precise as of what you see .... Since the console essentially just evaluates capture.output(print(args(...))), you can obviously break it by any R code that changes the behavior of the pieces involved. But then I don't know why anyone would to that ... ;)
> 
> The display of parameters seems to be reproducibly inhibited after backspacing  or selecting and deleting a function name that had an argument list displayed. If I type "duplicated(", and then see an argument list , then backspace over it and hit <enter> and then type "duplicated(" again,  I see no arguments.

Ah, yes - I see there is a check whether that function was already displayed which inhibits the repeated display (added in r5773 - I'm not sure why, possibly optimization to prevent re-fetching the argument list). Now fixed.

Thanks,
Simon


> I did discover by accident that I sometimes get back the desired behavior after typing sessionInfo(). I will generally get display of arguments from other functions after that, but "duplicated" seems to be blanked out until <something happens to make it recognized again>.
> 
>> 
>> Cheers,
>> Simon
>> 
>> 
>>>> sessionInfo()
>>> R version 2.14.0 Patched (2011-11-13 r57650)
>>> Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)
>>> 
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>> 
>>> attached base packages:
>>> [1] splines   stats     graphics  grDevices utils     datasets  methods
>>> [8] base
>>> 
>>> other attached packages:
>>> [1] latticeExtra_0.6-19 RColorBrewer_1.0-5  Matrix_1.0-1
>>> [4] rms_3.3-2           Hmisc_3.9-0         timereg_1.6-0
>>> [7] survival_2.36-10    sos_1.3-1           brew_1.0-6
>>> [10] lattice_0.20-0
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] cluster_1.14.1 grid_2.14.0    tools_2.14.0
>>> 
>>> 
>>> David Winsemius, MD
>>> West Hartford, CT
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> 
>> 
> 
> David Winsemius, MD
> West Hartford, CT
> 
> 


From ono at java.pl  Sun Dec 18 21:11:37 2011
From: ono at java.pl (Adam Strzelecki)
Date: Sun, 18 Dec 2011 21:11:37 +0100
Subject: [R-SIG-Mac] [patch] rgl based on Cocoa API (instead of Carbon)
Message-ID: <057D8C49-2749-41C6-B2F8-EFFC6B03A018@java.pl>

Hello,

Attaching here patch + osxgui.mm source for Cocoa based Mac backend for rgl package that makes rgl work with native UI on both 32-bit and 64-bit.

Installation notes:
? patch should be applied on SVN "rgl" sources svn://svn.r-forge.r-project.org/svnroot/rgl/pkg/rgl
? "src/osxgui.cpp" shall be removed and replaced by attached "src/osxgui.mm" (patch replaces Carbon backend)
? "configure" shall be regenerated with `autoconf` - patch only modifies "configure.ac"
? installing using `R CMD INSTALL .` in patched "rgl" directory

Cocoa backend notes:
? it does require FreeType for default system font (AFAIK present in OSX since Tiger), reason - Carbon version used deprecated aglUseFont which is 32-bit only
? it does introduce "gl.aa" setting, so having `option(gl.aa = 16)` makes pretty antialiased rendering, I'd suggest maybe that other OS backends shall use this setting too

Waiting for your feedback,
-- 
Adam Strzelecki
-------------- next part --------------
A non-text attachment was scrubbed...
Name: osxgui.mm
Type: application/octet-stream
Size: 13133 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111218/31e6c9d7/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rgl-cocoa.patch
Type: application/octet-stream
Size: 3667 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111218/31e6c9d7/attachment-0001.obj>

From ivan.calandra at uni-hamburg.de  Mon Dec 19 17:30:11 2011
From: ivan.calandra at uni-hamburg.de (Ivan Calandra)
Date: Mon, 19 Dec 2011 17:30:11 +0100
Subject: [R-SIG-Mac] Warning in script
Message-ID: <20111219173011.11545j1zeyuf5vo3@webmail.rrz.uni-hamburg.de>

Dear R-Mac users,

I have a script  
(http://dl.dropbox.com/u/25185399/Rfunctions_Calandra.R) containing  
functions that I source() when I want to use them.

When I source() it on MacOS 10.6, I get this warning:
In readLines(file) :
   ligne finale incompl?te trouv?e dans '/.../Rallfun-v1_Calandra.R'
Translation: incomplete final line found in '...'

sessionInfo()
R version 2.14.0 (2011-10-31)
Platform: i386-apple-darwin9.8.0/i386 (32-bit)
locale:
[1] fr_FR.UTF-8/fr_FR.UTF-8/fr_FR.UTF-8/C/fr_FR.UTF-8/fr_FR.UTF-8
attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

As you can see, the last line is ####
If I delete this line, I still get the same warning, which makes me  
think that this has nothing to do with what I typed, but with some  
encoding stuff. I have to say that I created this script on Windows XP  
(with the R editor), and I never got this problem on Windows (at least  
up to R2.13.1).

Since it's a warning, it works fine, but I would like to fix this  
problem because it is a bit annoying to always get this warning.

Thank you in advance for your help,
Ivan

-- 
Ivan CALANDRA
Universit? de Bourgogne
UMR CNRS 5561 Biog?osciences
6 Boulevard Gabriel
21000 Dijon, FRANCE
ivan.calandra at uni-hamburg.de


From bhh at xs4all.nl  Mon Dec 19 17:40:32 2011
From: bhh at xs4all.nl (Berend Hasselman)
Date: Mon, 19 Dec 2011 17:40:32 +0100
Subject: [R-SIG-Mac] Warning in script
In-Reply-To: <20111219173011.11545j1zeyuf5vo3@webmail.rrz.uni-hamburg.de>
References: <20111219173011.11545j1zeyuf5vo3@webmail.rrz.uni-hamburg.de>
Message-ID: <AB4D83FB-4CE8-48F7-B24C-6D16976FB3AB@xs4all.nl>


On 19-12-2011, at 17:30, Ivan Calandra wrote:

> Dear R-Mac users,
> 
> I have a script (http://dl.dropbox.com/u/25185399/Rfunctions_Calandra.R) containing functions that I source() when I want to use them.
> 
> When I source() it on MacOS 10.6, I get this warning:
> In readLines(file) :
>  ligne finale incompl?te trouv?e dans '/.../Rallfun-v1_Calandra.R'
> Translation: incomplete final line found in '...'
> 
> sessionInfo()
> R version 2.14.0 (2011-10-31)
> Platform: i386-apple-darwin9.8.0/i386 (32-bit)
> locale:
> [1] fr_FR.UTF-8/fr_FR.UTF-8/fr_FR.UTF-8/C/fr_FR.UTF-8/fr_FR.UTF-8
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> As you can see, the last line is ####
> If I delete this line, I still get the same warning, which makes me think that this has nothing to do with what I typed, but with some encoding stuff. I have to say that I created this script on Windows XP (with the R editor), and I never got this problem on Windows (at least up to R2.13.1).
> 
> Since it's a warning, it works fine, but I would like to fix this problem because it is a bit annoying to always get this warning.


See  http://r.789695.n4.nabble.com/incomplete-final-line-found-warning-td4181838.html

Berend


From ivan.calandra at uni-hamburg.de  Tue Dec 20 09:33:08 2011
From: ivan.calandra at uni-hamburg.de (Ivan Calandra)
Date: Tue, 20 Dec 2011 09:33:08 +0100
Subject: [R-SIG-Mac] Warning in script
Message-ID: <20111220093308.69725f0nsbuha9ms@webmail.rrz.uni-hamburg.de>

Thanks Berend,

I've just added an extra enter at the end and it works fine. So simple...!

Ivan



Le 19/12/11 17:40, Berend Hasselman a ?crit :
> On 19-12-2011, at 17:30, Ivan Calandra wrote:
>
>> Dear R-Mac users,
>>
>> I have a script  
>> (http://dl.dropbox.com/u/25185399/Rfunctions_Calandra.R) containing  
>> functions that I source() when I want to use them.
>>
>> When I source() it on MacOS 10.6, I get this warning:
>> In readLines(file) :
>>  ligne finale incompl?te trouv?e dans '/.../Rallfun-v1_Calandra.R'
>> Translation: incomplete final line found in '...'
>>
>> sessionInfo()
>> R version 2.14.0 (2011-10-31)
>> Platform: i386-apple-darwin9.8.0/i386 (32-bit)
>> locale:
>> [1] fr_FR.UTF-8/fr_FR.UTF-8/fr_FR.UTF-8/C/fr_FR.UTF-8/fr_FR.UTF-8
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> As you can see, the last line is ####
>> If I delete this line, I still get the same warning, which makes me  
>> think that this has nothing to do with what I typed, but with some  
>> encoding stuff. I have to say that I created this script on Windows  
>> XP (with the R editor), and I never got this problem on Windows (at  
>> least up to R2.13.1).
>>
>> Since it's a warning, it works fine, but I would like to fix this  
>> problem because it is a bit annoying to always get this warning.
>
> See   
> http://r.789695.n4.nabble.com/incomplete-final-line-found-warning-td4181838.html
>
> Berend
>
>
-- 
Ivan CALANDRA
Universit? de Bourgogne
UMR CNRS 5561 Biog?osciences
6 Boulevard Gabriel
21000 Dijon, FRANCE
ivan.calandra at uni-hamburg.de


From stefanML at collocations.de  Tue Dec 20 11:12:33 2011
From: stefanML at collocations.de (Stefan Evert)
Date: Tue, 20 Dec 2011 11:12:33 +0100
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>
	<4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
Message-ID: <E0F01331-A9BF-4378-8BD9-421B87701432@collocations.de>


On 16 Dec 2011, at 17:20, Simon Urbanek wrote:

> That is fair enough. Do other users have an opinion either way?

Yes, indeed: I find it very convenient to be able to choose whether I run 32-bit or 64-bit R.app (for the same reasons that have already been brought forward by others) and to run both flavours in parallel.

Although I've been using Mac OS X exclusively for more than 6 years, I wasn't aware of the fact that I can start a fat app in 32-bit or 64-bit mode through Finder.  I doubt that inexperienced users -- those most likely to have a less powerful machine that works better with 32-bit R -- will know about this possibility, or ever find out.  Also, Adam, can you please show us how to select 32-bit vs. 64-bit while launching R.app from the dock or through Quicksilver etc. (which is what I always do)?

Cheers,
Stefan


From stefanML at collocations.de  Tue Dec 20 11:16:07 2011
From: stefanML at collocations.de (Stefan Evert)
Date: Tue, 20 Dec 2011 11:16:07 +0100
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <076547E5-C57F-4935-976E-5BF130EEF756@java.pl>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>
	<4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
	<ECBA2766-76E3-49A0-BD3A-9190FEC0A936@comcast.net>
	<076547E5-C57F-4935-976E-5BF130EEF756@java.pl>
Message-ID: <17F82BA5-CA5D-47E9-B2B4-320997959917@collocations.de>

> Some tech blather: 64-bit program can allocate in fact more than 4GB when having only 4GB RAM - implies paging and swapping, unless allocated pages remain non-written.

And that's a very good reason why I prefer to have an easy way to launch 32-bit R.app: it keeps my MacBook Pro (which has only 6GB RAM) from locking up due to R using too much memory (of course, R will crash or abort the script, but I prefer this very much to not being able to work with the computer at all ...).

Cheers,
Stefan

From ono at java.pl  Tue Dec 20 13:18:12 2011
From: ono at java.pl (Adam Strzelecki)
Date: Tue, 20 Dec 2011 13:18:12 +0100
Subject: [R-SIG-Mac] How to make Mac 64-bit version feature complete?
In-Reply-To: <E0F01331-A9BF-4378-8BD9-421B87701432@collocations.de>
References: <26BD98F9-D750-4260-8B57-8F560130842E@java.pl>
	<055DDF3E-3D23-4439-BB63-29F57CC4B993@r-project.org>
	<B99F8BCC-6D7E-4A8F-8DAE-4A6CE2EB5546@java.pl>
	<49A1579B-1FEF-4208-A9AC-38B347127582@gmail.com>
	<4D01E113-15A9-46FA-9A3E-52C1DF0248FF@r-project.org>
	<E0F01331-A9BF-4378-8BD9-421B87701432@collocations.de>
Message-ID: <4CFADC3B-89CA-4832-9D5C-49DBF26078ED@java.pl>

Stefan wrote:
> And that's a very good reason why I prefer to have an easy way to launch 32-bit R.app: it keeps my MacBook Pro (which has only 6GB RAM) from locking up due to R using too much memory (of course, R will crash or abort the script, but I prefer this very much to not being able to work with the computer at all ...).
> (?)
> Yes, indeed: I find it very convenient to be able to choose whether I run 32-bit or 64-bit R.app (for the same reasons that have already been brought forward by others) and to run both flavours in parallel.
> (?)
> Also, Adam, can you please show us how to select 32-bit vs. 64-bit while launching R.app from the dock or through Quicksilver etc. (which is what I always do)?

I cannot, because there's no way I know. Your points are absolutely right, and since you find switching between R.app & R64.app convenient, it makes no sense to place any techie arguments against other users' habits.

Altogether as long as "'memory.limit()' is Windows-specific" it indeed makes sense to keep users pinned by default to 32-bit, because a slip of the finger on extra 0 during matrix allocation probably can blow your Mac's memory :)

Regards,
-- 
Adam Strzelecki

From sdavis2 at mail.nih.gov  Tue Dec 20 14:41:21 2011
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Tue, 20 Dec 2011 08:41:21 -0500
Subject: [R-SIG-Mac] Turning off universal package building
Message-ID: <CANeAVB=66s08kn=M1hOJ5BR=xLGC6T8=bAOLPLkN2RT990zCUw@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111220/fb915e59/attachment.pl>

From gfinak at fhcrc.org  Tue Dec 20 15:08:34 2011
From: gfinak at fhcrc.org (Finak, Greg)
Date: Tue, 20 Dec 2011 09:08:34 -0500
Subject: [R-SIG-Mac] Turning off universal package building
In-Reply-To: <CANeAVB=66s08kn=M1hOJ5BR=xLGC6T8=bAOLPLkN2RT990zCUw@mail.gmail.com>
References: <CANeAVB=66s08kn=M1hOJ5BR=xLGC6T8=bAOLPLkN2RT990zCUw@mail.gmail.com>
Message-ID: <A7A25B52-BEA7-46A9-B6F5-5307EDE6A73A@fhcrc.org>

Hi, Sean
I've had similar issues with x86_64. Passing --no-multiarch on the command line to R CMD INSTALL, or via the INSTALl_opts argument to install.packages() did the trick. Your mileage may vary.

Best,
Greg

Greg Finak, Ph.D
Post-doctoral Fellow
Vaccine and Infectious Disease Division
Fred Hutchinson Cancer Research Center
Seattle, WA


On 2011-12-20, at 8:42 AM, "Sean Davis" <sdavis2 at mail.nih.gov> wrote:

> I am running into an issue that I do not understand.  I am trying to
> install GEOquery from source using a relatively recent R development
> version (2011-12-06).  GEOquery depends on the XML package.  XML installs
> fine for i386 on my Mac Pro laptop, but not for the other two architectures
> (we can ignore the details of why for now).  When I try to install
> GEOquery, this is what I see:
> 
> $ R --arch=i386 CMD INSTALL GEOquery.tar.gz
> * installing to library
> ?/Library/Frameworks/R.framework/Versions/2.15/Resources/library?
> * installing *source* package ?GEOquery? ...
> ** R
> ** inst
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices ...
> *** tangling vignette sources ...
>   ?GEOquery.Rnw?
> ** testing if installed package can be loaded
> *** arch - i386
> Setting options('download.file.method.GEOquery'='curl')
> *** arch - ppc
> Error in paste0("(^|[^%])(%%)*%", spec) : not a BUILTIN function
> Calls: Sys.setenv -> .expand_R_libs_env_var -> expand -> gsub -> paste0
> Execution halted
> *** arch - x86_64
> Error : .onLoad failed in loadNamespace() for 'XML', details:
>  call: library.dynam("XML", pkgname, libname)
>  error: shared object ?XML.so? not found
> Error: loading failed
> Execution halted
> ERROR: loading failed for ?ppc?, ?x86_64?
> * removing
> ?/Library/Frameworks/R.framework/Versions/2.15/Resources/library/GEOquery?
> * restoring previous
> ?/Library/Frameworks/R.framework/Versions/2.15/Resources/library/GEOquery?
> 
> Why is R trying to install all three architectures when I have asked for
> only i386?  So, how can I install for i386 only?  I'm sure the answer is
> well-documented somewhere, but I have not yet found it.
> 
> Thanks,
> Sean
> 
>> sessionInfo()
> R Under development (unstable) (2011-12-06 r57839)
> Platform: i386-apple-darwin9.8.0/i386 (32-bit)
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
>    [[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

From sdavis2 at mail.nih.gov  Tue Dec 20 15:16:10 2011
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Tue, 20 Dec 2011 09:16:10 -0500
Subject: [R-SIG-Mac] Turning off universal package building
In-Reply-To: <A7A25B52-BEA7-46A9-B6F5-5307EDE6A73A@fhcrc.org>
References: <CANeAVB=66s08kn=M1hOJ5BR=xLGC6T8=bAOLPLkN2RT990zCUw@mail.gmail.com>
	<A7A25B52-BEA7-46A9-B6F5-5307EDE6A73A@fhcrc.org>
Message-ID: <CANeAVBmm4AahoSzgckAb2C8KwkAR1x1021jPVSiv2iqiO74b-A@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111220/baa670d1/attachment.pl>

From slava.razbash at gmail.com  Wed Dec 21 02:26:43 2011
From: slava.razbash at gmail.com (Slava Razbash)
Date: Wed, 21 Dec 2011 12:26:43 +1100
Subject: [R-SIG-Mac] Will RcppEigen be available on MacOS X?
Message-ID: <CANYYcsKRyhMwNBPA9Xw0kR5qnVi4RxYQHRGO3vmARxqQzDYvDQ@mail.gmail.com>

Hello,

Will RcppEigen be available on MacOS X soon? Currently, the CRAN page
says that it is not be available on MacOS X:
http://cran.r-project.org/web/packages/RcppEigen/index.html

I have been informed that it compiles fine on an Intel machine and
that the issue is probably PowerPC related.

I intend to use RcppEigen as part of a package that must work on all platforms.

Thank You,

Slava


From mailinglist.honeypot at gmail.com  Wed Dec 21 03:51:07 2011
From: mailinglist.honeypot at gmail.com (Steve Lianoglou)
Date: Tue, 20 Dec 2011 21:51:07 -0500
Subject: [R-SIG-Mac] Will RcppEigen be available on MacOS X?
In-Reply-To: <CANYYcsKRyhMwNBPA9Xw0kR5qnVi4RxYQHRGO3vmARxqQzDYvDQ@mail.gmail.com>
References: <CANYYcsKRyhMwNBPA9Xw0kR5qnVi4RxYQHRGO3vmARxqQzDYvDQ@mail.gmail.com>
Message-ID: <CAHA9McP4bCNWoKtTqEpX9Q2xtR_s8xDFcK6crE6iipEhpPPFOg@mail.gmail.com>

Hi,

On Tue, Dec 20, 2011 at 8:26 PM, Slava Razbash <slava.razbash at gmail.com> wrote:
> Hello,
>
> Will RcppEigen be available on MacOS X soon? Currently, the CRAN page
> says that it is not be available on MacOS X:
> http://cran.r-project.org/web/packages/RcppEigen/index.html
>
> I have been informed that it compiles fine on an Intel machine and
> that the issue is probably PowerPC related.
>
> I intend to use RcppEigen as part of a package that must work on all platforms.

This is an interesting something.

Firstly, assuming you have XCode installed, you can install RcppEigen by:

R> install.packages("RcppEigen", type="source")

and it compiles fine.

It is interesting because there are other projects (outside of the R
universe) that use Eigen, but can't be compiled on OS X w/o using a
more modern version of gcc than OS X uses.

I probed the authors of that (other) library to see what gives, but
they essentially pointed out that even the Eigen devs suggest to use a
newer version of gcc, even though their main page only suggest gcc 4.2
or newer.

See:

http://forum.kde.org/viewtopic.php?f=74&t=97107&p=204676&hilit=eigen+mac#p204676

-steve


>
> Thank You,
>
> Slava
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac



-- 
Steve Lianoglou
Graduate Student: Computational Systems Biology
?| Memorial Sloan-Kettering Cancer Center
?| Weill Medical College of Cornell University
Contact Info: http://cbio.mskcc.org/~lianos/contact


From slava.razbash at gmail.com  Wed Dec 21 07:16:42 2011
From: slava.razbash at gmail.com (Slava Razbash)
Date: Wed, 21 Dec 2011 17:16:42 +1100
Subject: [R-SIG-Mac] Will RcppEigen be available on MacOS X?
In-Reply-To: <20209.14567.288884.27036@max.nulle.part>
References: <CANYYcsKRyhMwNBPA9Xw0kR5qnVi4RxYQHRGO3vmARxqQzDYvDQ@mail.gmail.com>
	<20209.14567.288884.27036@max.nulle.part>
Message-ID: <CANYYcsJ_dH0u2CfALutqY8vQ7S+5A1daFNA4yvqWAWFezC6Q=g@mail.gmail.com>

Dirk,

On Wed, Dec 21, 2011 at 12:39 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
> (My reply will probably bounce at r-sig-mac where I am not subscribed.)
>
> Slava,
>
> On 21 December 2011 at 12:26, Slava Razbash wrote:
> | Hello,
> |
> | Will RcppEigen be available on MacOS X soon? Currently, the CRAN page
> | says that it is not be available on MacOS X:
> | http://cran.r-project.org/web/packages/RcppEigen/index.html
> |
> | I have been informed that it compiles fine on an Intel machine and
> | that the issue is probably PowerPC related.
>
> As discussed in earlier emails, this is somewhat complicated. On the one
> hand, it is a bit of a "Simon" issue at CRAN as Simon (whom I added as a CC)
> only admits packages that build on OS X for 32 and 64 bit Intel as well as
> ppc, and Eigen fails to crosscompile for ppc. ?So no go there.
>
> Eigen's upstream is also not in a position to fix things, and understandably
> reluctant to cater for an outdated and known-as-buggy compiler, ie g++-4.2.1.
>
> Rock, meet hard place: We're stuck.
>
> So something has to change for this to improve. ?Either we manage to petition
> Simon to whitelist packages even if they do not produce 'three architecture'
> fat binaries. ?Or else we all have to wait clang/llvm support for C++ on OS X
> which may be a while.

I am currently pursuing an alternative course of action. Thanks.

Best Regards,

Slava

>
> | I intend to use RcppEigen as part of a package that must work on all platforms.
>
> The package works. ?As Romain told you again this morning, you can always
> build RcppEigen from source on OS X.
>
> Regards, ?Dirk
>
> | Thank You,
> |
> | Slava
>
> --
> "Outside of a dog, a book is a man's best friend. Inside of a dog, it is too
> dark to read." -- Groucho Marx


From schoi at cornell.edu  Wed Dec 21 20:49:49 2011
From: schoi at cornell.edu (Sang Chul Choi)
Date: Wed, 21 Dec 2011 19:49:49 +0000
Subject: [R-SIG-Mac] Any script to package a built R binary to a Mac OS X
	installer?
Message-ID: <701A8941-B6F8-4B96-BFD2-D12249EAC916@cornell.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20111221/b2e0f31c/attachment.pl>

From schoi at cornell.edu  Wed Dec 21 21:00:42 2011
From: schoi at cornell.edu (Sang Chul Choi)
Date: Wed, 21 Dec 2011 20:00:42 +0000
Subject: [R-SIG-Mac] Any script to package a built R binary to a Mac OS
 X	installer?
In-Reply-To: <14480_1324497020_pBLJoFqq014482_701A8941-B6F8-4B96-BFD2-D12249EAC916@cornell.edu>
References: <14480_1324497020_pBLJoFqq014482_701A8941-B6F8-4B96-BFD2-D12249EAC916@cornell.edu>
Message-ID: <D2254225-DF06-46E7-9305-22CAD38DC1BE@cornell.edu>

After searching the r-sig-mac archive for packagemaker, I found one post and answers to it at https://stat.ethz.ch/pipermail/r-sig-mac/2010-July/007578.html.  Still, I am wondering if there are scripts for packaging R and R-GUI into an installation package.   

Thank you,

SangChul

On Dec 21, 2011, at 2:49 PM, Sang Chul Choi wrote:

> First, I apologize for sending this duplicate message to r-sig-gui.  I thought that was the mailing list I should send questions about Mac GUI.  I found that this r-sig-mac mailing list was the right place to ask the following question.  Thank you.
> -------------
> Hi,
> 
> I am wondering how "R.app GUI 1.41 for Mac OS X" is built from the source code, and am messing around about the R project web site.
> 
> My question is if there are some scripts for packaging built R and R-GUI binaries to a Mac OS X install package (I was able to build R and R-GUI, but I could not find a way to package them for installation). If so, where could I find it?  I'm new to either building R from scratch or packaging a Mac installation.  When I was reading "R for Mac OS X Developer's Page" at http://r.research.att.com/, I thought that there must be some scripts for packaging to create an installation file, such as R-2.14-branch-leopard.pkg in the web site at http://r.research.att.com/.  I could not find any of such script or helpful information.
> 
> Thank you,
> 
> SangChul
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From ripley at stats.ox.ac.uk  Wed Dec 21 21:10:08 2011
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 21 Dec 2011 20:10:08 +0000
Subject: [R-SIG-Mac] Any script to package a built R binary to a Mac OS
 X installer?
In-Reply-To: <701A8941-B6F8-4B96-BFD2-D12249EAC916@cornell.edu>
References: <701A8941-B6F8-4B96-BFD2-D12249EAC916@cornell.edu>
Message-ID: <4EF23D20.1@stats.ox.ac.uk>

On 21/12/2011 19:49, Sang Chul Choi wrote:
> First, I apologize for sending this duplicate message to r-sig-gui.  I thought that was the mailing list I should send questions about Mac GUI.  I found that this r-sig-mac mailing list was the right place to ask the following question.  Thank you.
> -------------
> Hi,
>
> I am wondering how "R.app GUI 1.41 for Mac OS X" is built from the source code, and am messing around about the R project web site.

Whatever that is: we run several sites.

> My question is if there are some scripts for packaging built R and R-GUI binaries to a Mac OS X install package (I was able to build R and R-GUI, but I could not find a way to package them for installation). If so, where could I find it?  I'm new to either building R from scratch or packaging a Mac installation.  When I was reading "R for Mac OS X Developer's Page" at http://r.research.att.com/, I thought that there must be some scripts for packaging to create an installation file, such as R-2.14-branch-leopard.pkg in the web site at http://r.research.att.com/.  I could not find any of such script or helpful information.

The sources for R.app are at 
https://svn.r-project.org/R-packages/trunk/Mac-GUI/, and more general 
Mac OS X build scripts are currently (they are in the process of moving) 
at https://svn.r-project.org/R-dev-web/trunk/QA/Simon/ .

Note: none of those areas are supported, so don't ask for explanations.

> Thank you,
>
> SangChul
>
> 	[[alternative HTML version deleted]]

Please do follow the posting guide (which expressly asked you not to 
send HTML) if you want any further help.

> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From simon.urbanek at r-project.org  Wed Dec 21 21:32:50 2011
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 21 Dec 2011 15:32:50 -0500
Subject: [R-SIG-Mac] Any script to package a built R binary to a Mac OS
	X installer?
In-Reply-To: <4EF23D20.1@stats.ox.ac.uk>
References: <701A8941-B6F8-4B96-BFD2-D12249EAC916@cornell.edu>
	<4EF23D20.1@stats.ox.ac.uk>
Message-ID: <B2DF1F95-6791-4A9B-8E3F-FE7AC645D6C3@r-project.org>

On Dec 21, 2011, at 3:10 PM, Prof Brian Ripley wrote:

> On 21/12/2011 19:49, Sang Chul Choi wrote:
>> First, I apologize for sending this duplicate message to r-sig-gui.  I thought that was the mailing list I should send questions about Mac GUI.  I found that this r-sig-mac mailing list was the right place to ask the following question.  Thank you.
>> -------------
>> Hi,
>> 
>> I am wondering how "R.app GUI 1.41 for Mac OS X" is built from the source code, and am messing around about the R project web site.
> 
> Whatever that is: we run several sites.
> 
>> My question is if there are some scripts for packaging built R and R-GUI binaries to a Mac OS X install package (I was able to build R and R-GUI, but I could not find a way to package them for installation). If so, where could I find it?  I'm new to either building R from scratch or packaging a Mac installation.  When I was reading "R for Mac OS X Developer's Page" at http://r.research.att.com/, I thought that there must be some scripts for packaging to create an installation file, such as R-2.14-branch-leopard.pkg in the web site at http://r.research.att.com/.  I could not find any of such script or helpful information.
> 
> The sources for R.app are at https://svn.r-project.org/R-packages/trunk/Mac-GUI/, and more general Mac OS X build scripts are currently (they are in the process of moving) at https://svn.r-project.org/R-dev-web/trunk/QA/Simon/ .
> 


Thanks, Brian.

Since the tree is a bit messy and has both R and package builds, the directory with the currently used packaging system is in 

https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R-build/packaging/leopard/

It works off the installed R version on the machine.


However, please note that the CRAN builds perform several modifications to the installation before it is packaged, so *please* change the installer ID in the PM project before you produce any installation packages! Also please make clear that whatever you are distributing is likely not compatible with CRAN R (unless you actually run all the CRAN scripts like "universal").

Thanks,
Simon


> Note: none of those areas are supported, so don't ask for explanations.
> 
>> Thank you,
>> 
>> SangChul
>> 
>> 	[[alternative HTML version deleted]]
> 
> Please do follow the posting guide (which expressly asked you not to send HTML) if you want any further help.
> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From schoi at cornell.edu  Wed Dec 21 21:49:34 2011
From: schoi at cornell.edu (Sang Chul Choi)
Date: Wed, 21 Dec 2011 20:49:34 +0000
Subject: [R-SIG-Mac] Any script to package a built R binary to a Mac OS
 X installer?
In-Reply-To: <B2DF1F95-6791-4A9B-8E3F-FE7AC645D6C3@r-project.org>
References: <701A8941-B6F8-4B96-BFD2-D12249EAC916@cornell.edu>
	<4EF23D20.1@stats.ox.ac.uk>
	<B2DF1F95-6791-4A9B-8E3F-FE7AC645D6C3@r-project.org>
Message-ID: <96C3B754-598A-4BDE-AACA-860ADB1C751A@cornell.edu>

Thank you, both of them, for the help! That is what I needed.  I think that this time, the email is just a plain text. I'm sorry for having sent HTML text.

Thank you,

SangChul

On Dec 21, 2011, at 3:32 PM, Simon Urbanek wrote:

> On Dec 21, 2011, at 3:10 PM, Prof Brian Ripley wrote:
> 
>> On 21/12/2011 19:49, Sang Chul Choi wrote:
>>> First, I apologize for sending this duplicate message to r-sig-gui.  I thought that was the mailing list I should send questions about Mac GUI.  I found that this r-sig-mac mailing list was the right place to ask the following question.  Thank you.
>>> -------------
>>> Hi,
>>> 
>>> I am wondering how "R.app GUI 1.41 for Mac OS X" is built from the source code, and am messing around about the R project web site.
>> 
>> Whatever that is: we run several sites.
>> 
>>> My question is if there are some scripts for packaging built R and R-GUI binaries to a Mac OS X install package (I was able to build R and R-GUI, but I could not find a way to package them for installation). If so, where could I find it?  I'm new to either building R from scratch or packaging a Mac installation.  When I was reading "R for Mac OS X Developer's Page" at http://r.research.att.com/, I thought that there must be some scripts for packaging to create an installation file, such as R-2.14-branch-leopard.pkg in the web site at http://r.research.att.com/.  I could not find any of such script or helpful information.
>> 
>> The sources for R.app are at https://svn.r-project.org/R-packages/trunk/Mac-GUI/, and more general Mac OS X build scripts are currently (they are in the process of moving) at https://svn.r-project.org/R-dev-web/trunk/QA/Simon/ .
>> 
> 
> 
> Thanks, Brian.
> 
> Since the tree is a bit messy and has both R and package builds, the directory with the currently used packaging system is in 
> 
> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R-build/packaging/leopard/
> 
> It works off the installed R version on the machine.
> 
> 
> However, please note that the CRAN builds perform several modifications to the installation before it is packaged, so *please* change the installer ID in the PM project before you produce any installation packages! Also please make clear that whatever you are distributing is likely not compatible with CRAN R (unless you actually run all the CRAN scripts like "universal").
> 
> Thanks,
> Simon
> 
> 
>> Note: none of those areas are supported, so don't ask for explanations.
>> 
>>> Thank you,
>>> 
>>> SangChul
>>> 
>>> 	[[alternative HTML version deleted]]
>> 
>> Please do follow the posting guide (which expressly asked you not to send HTML) if you want any further help.
>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
>> -- 
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>> University of Oxford,             Tel:  +44 1865 272861 (self)
>> 1 South Parks Road,                     +44 1865 272866 (PA)
>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
> 


From edd at debian.org  Wed Dec 21 02:40:00 2011
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 21 Dec 2011 01:40:00 -0000
Subject: [R-SIG-Mac] Will RcppEigen be available on MacOS X?
In-Reply-To: <CANYYcsKRyhMwNBPA9Xw0kR5qnVi4RxYQHRGO3vmARxqQzDYvDQ@mail.gmail.com>
References: <CANYYcsKRyhMwNBPA9Xw0kR5qnVi4RxYQHRGO3vmARxqQzDYvDQ@mail.gmail.com>
Message-ID: <20209.14567.288884.27036@max.nulle.part>


(My reply will probably bounce at r-sig-mac where I am not subscribed.)

Slava,

On 21 December 2011 at 12:26, Slava Razbash wrote:
| Hello,
| 
| Will RcppEigen be available on MacOS X soon? Currently, the CRAN page
| says that it is not be available on MacOS X:
| http://cran.r-project.org/web/packages/RcppEigen/index.html
| 
| I have been informed that it compiles fine on an Intel machine and
| that the issue is probably PowerPC related.

As discussed in earlier emails, this is somewhat complicated. On the one
hand, it is a bit of a "Simon" issue at CRAN as Simon (whom I added as a CC)
only admits packages that build on OS X for 32 and 64 bit Intel as well as
ppc, and Eigen fails to crosscompile for ppc.  So no go there.

Eigen's upstream is also not in a position to fix things, and understandably
reluctant to cater for an outdated and known-as-buggy compiler, ie g++-4.2.1.

Rock, meet hard place: We're stuck.

So something has to change for this to improve.  Either we manage to petition
Simon to whitelist packages even if they do not produce 'three architecture'
fat binaries.  Or else we all have to wait clang/llvm support for C++ on OS X
which may be a while.
 
| I intend to use RcppEigen as part of a package that must work on all platforms.

The package works.  As Romain told you again this morning, you can always
build RcppEigen from source on OS X.

Regards,  Dirk
 
| Thank You,
| 
| Slava

-- 
"Outside of a dog, a book is a man's best friend. Inside of a dog, it is too
dark to read." -- Groucho Marx


