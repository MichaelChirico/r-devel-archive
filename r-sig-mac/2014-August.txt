From endrinkoni at gmail.com  Fri Aug  1 16:26:35 2014
From: endrinkoni at gmail.com (Endrin Koni)
Date: Fri, 1 Aug 2014 16:26:35 +0200
Subject: [R-SIG-Mac] Hello
Message-ID: <CACxbAChuSu6J0bW2dR+0T8UNvb-MBKnrGTD5-ogwQbsKShLUOQ@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20140801/4d5295bf/attachment.pl>

From gcr at wisdomandwonder.com  Fri Aug  1 16:37:36 2014
From: gcr at wisdomandwonder.com (Grant Rettke)
Date: Fri, 1 Aug 2014 09:37:36 -0500
Subject: [R-SIG-Mac] Hello
In-Reply-To: <CACxbAChuSu6J0bW2dR+0T8UNvb-MBKnrGTD5-ogwQbsKShLUOQ@mail.gmail.com>
References: <CACxbAChuSu6J0bW2dR+0T8UNvb-MBKnrGTD5-ogwQbsKShLUOQ@mail.gmail.com>
Message-ID: <CAAjq1mdOYz7VqiWsWkpMdKrdGRbhJcj+4hLYnSaJKyRkEJ0Kgw@mail.gmail.com>

What did you do and what did you expect to have happen and what
happened instead?

What operating system and version of R are you running and where did
you obtain it?
Grant Rettke | ACM, ASA, FSF, IEEE, SIAM
gcr at wisdomandwonder.com | http://www.wisdomandwonder.com/
?Wisdom begins in wonder.? --Socrates
((? (x) (x x)) (? (x) (x x)))
?Life has become immeasurably better since I have been forced to stop
taking it seriously.? --Thompson


On Fri, Aug 1, 2014 at 9:26 AM, Endrin Koni <endrinkoni at gmail.com> wrote:
> I am a new user of R software on Mac but I face difficulties applying the
> commands. I am trying to watch tutorials but my program   responds in
> different way. Please can you help me to perform analyses with this
> software?
>
> Many thanks in advance
>
> Koni Endrin
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From gcr at wisdomandwonder.com  Fri Aug  1 17:34:49 2014
From: gcr at wisdomandwonder.com (Grant Rettke)
Date: Fri, 1 Aug 2014 10:34:49 -0500
Subject: [R-SIG-Mac] Hello
In-Reply-To: <CACxbACgsFW9HcU_aKnnHA8Zr6-QJpLEy3aWs2gbZwkcfR0cGnQ@mail.gmail.com>
References: <CACxbAChuSu6J0bW2dR+0T8UNvb-MBKnrGTD5-ogwQbsKShLUOQ@mail.gmail.com>
	<CAAjq1mdOYz7VqiWsWkpMdKrdGRbhJcj+4hLYnSaJKyRkEJ0Kgw@mail.gmail.com>
	<CACxbACgsFW9HcU_aKnnHA8Zr6-QJpLEy3aWs2gbZwkcfR0cGnQ@mail.gmail.com>
Message-ID: <CAAjq1mc+YRFEdxb8iDSB=pd207t7FgDfGEoMLniUxxwN8nJ0nw@mail.gmail.com>

Understood.

Would you say that you expected certain things to happen with that
particular package, and they are not happening?

Are you finding issues with core R features or just that package?

Is it unique to R-commander?

I have never used that either.
Grant Rettke | ACM, ASA, FSF, IEEE, SIAM
gcr at wisdomandwonder.com | http://www.wisdomandwonder.com/
?Wisdom begins in wonder.? --Socrates
((? (x) (x x)) (? (x) (x x)))
?Life has become immeasurably better since I have been forced to stop
taking it seriously.? --Thompson


On Fri, Aug 1, 2014 at 10:30 AM, Endrin Koni <endrinkoni at gmail.com> wrote:
> Thank you very much for the fast feedback.
> I downloaded  R R 3.1.1 GUI 1.65 Snow Leopard build (6784) in the homepage
> (http://www.r-project.org) according to my mac version Snow Leopard (Mac OS
> X Lion 10.7.5 (11G63). I live in Italy and the R commander menu is in
> italian. I also downloaded packages but many menus are not activated for
> example: In  Graphs scatter plot, linear plot etc  in Statistical Analysis
> Independent t test, paired t test; some menus from contingency tables and
> other things.
>
>
>
> On Fri, Aug 1, 2014 at 4:37 PM, Grant Rettke <gcr at wisdomandwonder.com>
> wrote:
>>
>> What did you do and what did you expect to have happen and what
>> happened instead?
>>
>> What operating system and version of R are you running and where did
>> you obtain it?
>> Grant Rettke | ACM, ASA, FSF, IEEE, SIAM
>> gcr at wisdomandwonder.com | http://www.wisdomandwonder.com/
>> ?Wisdom begins in wonder.? --Socrates
>> ((? (x) (x x)) (? (x) (x x)))
>> ?Life has become immeasurably better since I have been forced to stop
>> taking it seriously.? --Thompson
>>
>>
>> On Fri, Aug 1, 2014 at 9:26 AM, Endrin Koni <endrinkoni at gmail.com> wrote:
>> > I am a new user of R software on Mac but I face difficulties applying
>> > the
>> > commands. I am trying to watch tutorials but my program   responds in
>> > different way. Please can you help me to perform analyses with this
>> > software?
>> >
>> > Many thanks in advance
>> >
>> > Koni Endrin
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > _______________________________________________
>> > R-SIG-Mac mailing list
>> > R-SIG-Mac at r-project.org
>> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>


From gcr at wisdomandwonder.com  Fri Aug  1 17:35:13 2014
From: gcr at wisdomandwonder.com (Grant Rettke)
Date: Fri, 1 Aug 2014 10:35:13 -0500
Subject: [R-SIG-Mac] Hello
In-Reply-To: <CACxbACjbAYMLhtXEfT2ViPh3YKBM35_TSu=fYMvnJ393_iKfMg@mail.gmail.com>
References: <CACxbAChuSu6J0bW2dR+0T8UNvb-MBKnrGTD5-ogwQbsKShLUOQ@mail.gmail.com>
	<CAAjq1mdOYz7VqiWsWkpMdKrdGRbhJcj+4hLYnSaJKyRkEJ0Kgw@mail.gmail.com>
	<CACxbACjbAYMLhtXEfT2ViPh3YKBM35_TSu=fYMvnJ393_iKfMg@mail.gmail.com>
Message-ID: <CAAjq1mdXHe5vgOiitmcVi_8YBCCJyRRZUHbVNcew3HWAPPPOtw@mail.gmail.com>

Gotchat. CC'd the list for you.
Grant Rettke | ACM, ASA, FSF, IEEE, SIAM
gcr at wisdomandwonder.com | http://www.wisdomandwonder.com/
?Wisdom begins in wonder.? --Socrates
((? (x) (x x)) (? (x) (x x)))
?Life has become immeasurably better since I have been forced to stop
taking it seriously.? --Thompson


On Fri, Aug 1, 2014 at 10:34 AM, Endrin Koni <endrinkoni at gmail.com> wrote:
> And   The X Window System  XQuartz 2.6.5 (xorg-server 1.10.6)
>
>
> On Fri, Aug 1, 2014 at 4:37 PM, Grant Rettke <gcr at wisdomandwonder.com>
> wrote:
>>
>> What did you do and what did you expect to have happen and what
>> happened instead?
>>
>> What operating system and version of R are you running and where did
>> you obtain it?
>> Grant Rettke | ACM, ASA, FSF, IEEE, SIAM
>> gcr at wisdomandwonder.com | http://www.wisdomandwonder.com/
>> ?Wisdom begins in wonder.? --Socrates
>> ((? (x) (x x)) (? (x) (x x)))
>> ?Life has become immeasurably better since I have been forced to stop
>> taking it seriously.? --Thompson
>>
>>
>> On Fri, Aug 1, 2014 at 9:26 AM, Endrin Koni <endrinkoni at gmail.com> wrote:
>> > I am a new user of R software on Mac but I face difficulties applying
>> > the
>> > commands. I am trying to watch tutorials but my program   responds in
>> > different way. Please can you help me to perform analyses with this
>> > software?
>> >
>> > Many thanks in advance
>> >
>> > Koni Endrin
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > _______________________________________________
>> > R-SIG-Mac mailing list
>> > R-SIG-Mac at r-project.org
>> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>


From rmh at temple.edu  Sat Aug  2 06:15:08 2014
From: rmh at temple.edu (Richard M. Heiberger)
Date: Sat, 2 Aug 2014 00:15:08 -0400
Subject: [R-SIG-Mac] Hello
In-Reply-To: <CAAjq1mdXHe5vgOiitmcVi_8YBCCJyRRZUHbVNcew3HWAPPPOtw@mail.gmail.com>
References: <CACxbAChuSu6J0bW2dR+0T8UNvb-MBKnrGTD5-ogwQbsKShLUOQ@mail.gmail.com>
	<CAAjq1mdOYz7VqiWsWkpMdKrdGRbhJcj+4hLYnSaJKyRkEJ0Kgw@mail.gmail.com>
	<CACxbACjbAYMLhtXEfT2ViPh3YKBM35_TSu=fYMvnJ393_iKfMg@mail.gmail.com>
	<CAAjq1mdXHe5vgOiitmcVi_8YBCCJyRRZUHbVNcew3HWAPPPOtw@mail.gmail.com>
Message-ID: <CAGx1TMAj84VJmHZBbDekRgBs1YxYhDAf-tyvFRTrMsSpaeh-Hw@mail.gmail.com>

R Commander menus are sensitive to the currently active data.frame.
My guess is that you didn't declare that.  Do so on the R Commander
menu with item
"Data set:"

Also be sure to read the "Introduction to the R Commander" on the
Rcmdr Help menu item.

On Fri, Aug 1, 2014 at 11:35 AM, Grant Rettke <gcr at wisdomandwonder.com> wrote:
> Gotchat. CC'd the list for you.
> Grant Rettke | ACM, ASA, FSF, IEEE, SIAM
> gcr at wisdomandwonder.com | http://www.wisdomandwonder.com/
> ?Wisdom begins in wonder.? --Socrates
> ((? (x) (x x)) (? (x) (x x)))
> ?Life has become immeasurably better since I have been forced to stop
> taking it seriously.? --Thompson
>
>
> On Fri, Aug 1, 2014 at 10:34 AM, Endrin Koni <endrinkoni at gmail.com> wrote:
>> And   The X Window System  XQuartz 2.6.5 (xorg-server 1.10.6)
>>
>>
>> On Fri, Aug 1, 2014 at 4:37 PM, Grant Rettke <gcr at wisdomandwonder.com>
>> wrote:
>>>
>>> What did you do and what did you expect to have happen and what
>>> happened instead?
>>>
>>> What operating system and version of R are you running and where did
>>> you obtain it?
>>> Grant Rettke | ACM, ASA, FSF, IEEE, SIAM
>>> gcr at wisdomandwonder.com | http://www.wisdomandwonder.com/
>>> ?Wisdom begins in wonder.? --Socrates
>>> ((? (x) (x x)) (? (x) (x x)))
>>> ?Life has become immeasurably better since I have been forced to stop
>>> taking it seriously.? --Thompson
>>>
>>>
>>> On Fri, Aug 1, 2014 at 9:26 AM, Endrin Koni <endrinkoni at gmail.com> wrote:
>>> > I am a new user of R software on Mac but I face difficulties applying
>>> > the
>>> > commands. I am trying to watch tutorials but my program   responds in
>>> > different way. Please can you help me to perform analyses with this
>>> > software?
>>> >
>>> > Many thanks in advance
>>> >
>>> > Koni Endrin
>>> >
>>> >         [[alternative HTML version deleted]]
>>> >
>>> > _______________________________________________
>>> > R-SIG-Mac mailing list
>>> > R-SIG-Mac at r-project.org
>>> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>>
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From jkunkel1 at une.edu  Mon Aug  4 18:11:48 2014
From: jkunkel1 at une.edu (Joseph Kunkel)
Date: Mon, 4 Aug 2014 12:11:48 -0400
Subject: [R-SIG-Mac] Problem with understanding red high lit
	meta-communication from the R Mac GUI
Message-ID: <7164874D-B063-49E9-A10D-C8B53A9FEF79@une.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20140804/04caf8d0/attachment.pl>

From andy.barbour at gmail.com  Wed Aug  6 08:50:48 2014
From: andy.barbour at gmail.com (andy barbour)
Date: Tue, 5 Aug 2014 23:50:48 -0700
Subject: [R-SIG-Mac] fftw for OSX Mavericks?
Message-ID: <CADX2vnKQ+TebToxcMJJ2kM7ZswUA=GPU1tWKDeB4O4mMHA_T_w@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20140805/05057fa7/attachment.pl>

From andy.barbour at gmail.com  Wed Aug  6 09:06:41 2014
From: andy.barbour at gmail.com (Andy Barbour)
Date: Wed, 6 Aug 2014 00:06:41 -0700
Subject: [R-SIG-Mac] fftw for OSX Mavericks?
Message-ID: <CADX2vnK83OY5YPtZEcXdH_LBCcU-rEO93-RJvqzA=i6o0DxwkQ@mail.gmail.com>

Hello all,

The OSX Mavericks build for fftw (1.0-3) fails:

http://www.r-project.org/nosvn/R.check/r-release-osx-x86_64-mavericks/fftw-00install.html

because the system dependency, fftw3 (>= 3.1.2), is unavailable.

Is there any plan to fix this error?  This would also fix a number of
unavailable binaries (e.g., fftwtools, psd, seewave).

thanks,
Andy


From simon.urbanek at r-project.org  Wed Aug  6 15:27:15 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 6 Aug 2014 09:27:15 -0400
Subject: [R-SIG-Mac] fftw for OSX Mavericks?
In-Reply-To: <CADX2vnK83OY5YPtZEcXdH_LBCcU-rEO93-RJvqzA=i6o0DxwkQ@mail.gmail.com>
References: <CADX2vnK83OY5YPtZEcXdH_LBCcU-rEO93-RJvqzA=i6o0DxwkQ@mail.gmail.com>
Message-ID: <94C643CD-D498-445D-A871-C91FDCD811CF@r-project.org>

On Aug 6, 2014, at 3:06 AM, Andy Barbour <andy.barbour at gmail.com> wrote:

> Hello all,
> 
> The OSX Mavericks build for fftw (1.0-3) fails:
> 
> http://www.r-project.org/nosvn/R.check/r-release-osx-x86_64-mavericks/fftw-00install.html
> 
> because the system dependency, fftw3 (>= 3.1.2), is unavailable.
> 
> Is there any plan to fix this error?  This would also fix a number of
> unavailable binaries (e.g., fftwtools, psd, seewave).
> 

There are no plans to "fix any errors". If the package maintainer requires some dependency that is not currently available on the build machines they can ask the CRAN maintainer to install that dependency with the pertinent information.

Cheers,
Simon


From dusa.adrian at unibuc.ro  Thu Aug  7 20:41:28 2014
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Thu, 7 Aug 2014 21:41:28 +0300
Subject: [R-SIG-Mac] installing RMySQL
In-Reply-To: <7bab6903-7a6e-431e-8adc-038f7b8c5399@googlegroups.com>
References: <CAJ=0CtDdC2xBJ-uQRp=VPKgX_9wzJQJkrxRT+DeE7GgHUGcZeg@mail.gmail.com>
	<C24F7BBD-2D0F-4ED6-9B62-6D01DE16F605@schrecktech.com>
	<CAJ=0CtCWtkN1tTyKGOws0n6dONuneD29KKLE8e_mdk-wNFLUyg@mail.gmail.com>
	<7bab6903-7a6e-431e-8adc-038f7b8c5399@googlegroups.com>
Message-ID: <CAJ=0CtCsFMNu-60L8rRpS3ca-F+OTQMZqRa_bJxPhVypv9FPeQ@mail.gmail.com>

Hi Dan,

Yes indeed, I was able to install the package using your suggestion...
but... I get an error when loading the package in R:

> library(RMySQL)
Loading required package: DBI
Error : .onLoad failed in loadNamespace() for 'RMySQL', details:
  call: dyn.load(file, DLLpath = DLLpath, ...)
  error: unable to load shared object
'/Users/dusadrian/Library/R/3.1/library/RMySQL/libs/RMySQL.so':
  dlopen(/Users/dusadrian/Library/R/3.1/library/RMySQL/libs/RMySQL.so,
6): Library not loaded: libmysqlclient.18.dylib
  Referenced from: /Users/dusadrian/Library/R/3.1/library/RMySQL/libs/RMySQL.so
  Reason: image not found
Error: package or namespace load failed for ?RMySQL?


I can confirm that RMySQL.so does indeed exists in the specified path,
so I don't quite understand why it could not be loaded...

Still, this is one step further (thanks!)

Best,
Adrian

On Thu, Aug 7, 2014 at 6:46 PM,  <dweeks.pitt at gmail.com> wrote:
> Only after doing this:
>
> export DYLD_LIBRARY_PATH="/usr/local/mysql/lib"
>
> then I was able to successfully install the RMySQL package with this
> command:
>
> R CMD INSTALL --configure-args='--with-mysql-dir=/usr/local/mysql
> --with-mysql-lib=/usr/local/mysql/lib
> --with-mysql-inc=/usr/local/mysql/include' RMySQL_0.9-3.tar.gz
>
> Hope that helps,
> Dan



-- 
Adrian Dusa
University of Bucharest
Romanian Social Data Archive
Soseaua Panduri nr.90
050663 Bucharest sector 5
Romania


From dusa.adrian at unibuc.ro  Thu Aug  7 22:02:53 2014
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Thu, 7 Aug 2014 23:02:53 +0300
Subject: [R-SIG-Mac] installing RMySQL
In-Reply-To: <3980b9b4-fe77-4c69-802e-c9dfaed42db4@googlegroups.com>
References: <CAJ=0CtDdC2xBJ-uQRp=VPKgX_9wzJQJkrxRT+DeE7GgHUGcZeg@mail.gmail.com>
	<C24F7BBD-2D0F-4ED6-9B62-6D01DE16F605@schrecktech.com>
	<CAJ=0CtCWtkN1tTyKGOws0n6dONuneD29KKLE8e_mdk-wNFLUyg@mail.gmail.com>
	<7bab6903-7a6e-431e-8adc-038f7b8c5399@googlegroups.com>
	<CAJ=0CtCsFMNu-60L8rRpS3ca-F+OTQMZqRa_bJxPhVypv9FPeQ@mail.gmail.com>
	<3980b9b4-fe77-4c69-802e-c9dfaed42db4@googlegroups.com>
Message-ID: <CAJ=0CtA4-tdupNoPMDfG5YpkviBrK7CTyoekNFuTuhhhxO5HjQ@mail.gmail.com>

Yes, the second (the /usr/local/lib already contained it).
Works perfect now, thanks very much!
Adrian

On Thu, Aug 7, 2014 at 10:33 PM,  <dweeks.pitt at gmail.com> wrote:
> The other thing I did was set up symbolic links from /usr/lib and
> /usr/local/lib to /usr/local/mysql/libmysqlclient.18.dylib
>
> sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib
> /usr/local/lib/libmysqlclient.18.dylib
> sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib
> /usr/lib/libmysqlclient.18.dylib
>
> Maybe one of those symbolic links enabled R to find the library?
>
> Dan
>
>



-- 
Adrian Dusa
University of Bucharest
Romanian Social Data Archive
Soseaua Panduri nr.90
050663 Bucharest sector 5
Romania


From Roger.Dean at uws.edu.au  Fri Aug  8 02:55:46 2014
From: Roger.Dean at uws.edu.au (Roger Dean)
Date: Fri, 8 Aug 2014 00:55:46 +0000
Subject: [R-SIG-Mac] Further advice please,
 re: Remaining problems compiling rinside_sample0.cpp on Xcode 5.1.1
 on mavericks 10.9.4.
Message-ID: <68BE3243-319A-4BCE-9F1A-7E8CDFE25024@uws.edu.au>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20140808/4b0658e1/attachment.pl>

From dwinsemius at comcast.net  Sat Aug  9 18:16:45 2014
From: dwinsemius at comcast.net (David Winsemius)
Date: Sat, 9 Aug 2014 09:16:45 -0700
Subject: [R-SIG-Mac] The quartzFonts() vs "default system font"
Message-ID: <A94A8FAB-831C-4438-88B5-2CCF509BF485@comcast.net>

When I offered (on R-help) the output of quartzFonts() as a potential way to identify problem font names for the issue mentioned in the last entry in the R-Mac-FAQ <http://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html#I-see-no-text-in-a-Quartz-plot_0021> it was pointed out that the FAQ says Arial is the "default font". Yet Arial is not listed as a quartzFont on my machine:

> names(quartzFonts())
[1] "serif" "sans"  "mono" 
> quartzFonts()[ names(quartzFonts() ) ]
$serif
[1] "Times-Roman"      "Times-Bold"       "Times-Italic"     "Times-BoldItalic"

$sans
[1] "Helvetica"             "Helvetica-Bold"        "Helvetica-Oblique"    
[4] "Helvetica-BoldOblique"

$mono
[1] "Courier"             "Courier-Bold"        "Courier-Oblique"     "Courier-BoldOblique"

Is there a difference between the "system font" and the quartzFonts?

----------

And I would suggest that the current (dead) link in the FAQ to the Apple information on key bindings:

http://developer.apple.com/documentation/Cocoa/Conceptual/EventOverview/TextDefaultsBindings/chapter_9_section_2.html

.... could be replaced with this update:

https://developer.apple.com/library/mac/recipes/xcode_help-keybindings_preferences/_index.html


-- 
David Winsemius
Alameda, CA, USA


From jfox at mcmaster.ca  Tue Aug 12 21:33:04 2014
From: jfox at mcmaster.ca (John Fox)
Date: Tue, 12 Aug 2014 15:33:04 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
Message-ID: <web-522213296@cgpsrv2.cis.mcmaster.ca>

Dear list members,

Is there a way to bypass the R.app help browser, and to use instead an alternative browser, such as the one pointed to by getOption("browser")? 

I've tried a number of strategies, including setting .Platform$GUI <- "unknown". The only approach I tried that works is to mask the help() function with a modified version, but this produces other problems, such as referencing unexported objects from utils and tools.

It would be nice if the help() function had a browser argument, similar to that in browseURL(), and defaulting to the current behaviour.

Any suggestions would be appreciated.

John

------------------------------------------------
John Fox, Professor
McMaster University
Hamilton, Ontario, Canada
http://socserv.mcmaster.ca/jfox/


From marc_schwartz at me.com  Tue Aug 12 22:04:19 2014
From: marc_schwartz at me.com (Marc Schwartz)
Date: Tue, 12 Aug 2014 15:04:19 -0500
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <web-522213296@cgpsrv2.cis.mcmaster.ca>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
Message-ID: <5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>

On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:

> Dear list members,
> 
> Is there a way to bypass the R.app help browser, and to use instead an alternative browser, such as the one pointed to by getOption("browser")? 
> 
> I've tried a number of strategies, including setting .Platform$GUI <- "unknown". The only approach I tried that works is to mask the help() function with a modified version, but this produces other problems, such as referencing unexported objects from utils and tools.
> 
> It would be nice if the help() function had a browser argument, similar to that in browseURL(), and defaulting to the current behaviour.
> 
> Any suggestions would be appreciated.
> 
> John


John,

I found this post from Simon that seems to work:

  https://stat.ethz.ch/pipermail/r-sig-mac/2009-December/006908.html

I tried it on my Mac in the latest version of R.app, which I normally do not use and the help system does now popup a browser.


Regards,

Marc Schwartz


From jfox at mcmaster.ca  Tue Aug 12 22:46:01 2014
From: jfox at mcmaster.ca (John Fox)
Date: Tue, 12 Aug 2014 16:46:01 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
Message-ID: <001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>

Hi Marc,

Thanks for this. It does work, and I wasn't aware of it -- you've obviously
done a better job than I did of searching for a solution!

Although this approach works, it has the disadvantage of permanently
changing the help browser in R.app, beyond the current session, at least
until the change is explicitly undone. I think that I can work around that
by something like

	current <- system("defaults read org.R-project.R", intern=TRUE)

to discover whether the use.external.help preference exists, and if so, what
its value is; to then set the preference to YES if it's NO or unset; and
finally to remove the preference on exit.

Again, thanks -- I think that I can work with this, though it would in my
opinion be better if the help browser were settable for the current session
directly via options() in R, or if one could specify the browser in a call
to help().

Best (and thanks again),
 John

> -----Original Message-----
> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> Sent: Tuesday, August 12, 2014 4:04 PM
> To: John Fox
> Cc: r-sig-mac at r-project.org
> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> 
> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:
> 
> > Dear list members,
> >
> > Is there a way to bypass the R.app help browser, and to use instead
> an alternative browser, such as the one pointed to by
> getOption("browser")?
> >
> > I've tried a number of strategies, including setting .Platform$GUI <-
> "unknown". The only approach I tried that works is to mask the help()
> function with a modified version, but this produces other problems,
> such as referencing unexported objects from utils and tools.
> >
> > It would be nice if the help() function had a browser argument,
> similar to that in browseURL(), and defaulting to the current
> behaviour.
> >
> > Any suggestions would be appreciated.
> >
> > John
> 
> 
> John,
> 
> I found this post from Simon that seems to work:
> 
>   https://stat.ethz.ch/pipermail/r-sig-mac/2009-December/006908.html
> 
> I tried it on my Mac in the latest version of R.app, which I normally
> do not use and the help system does now popup a browser.
> 
> 
> Regards,
> 
> Marc Schwartz


From marc_schwartz at me.com  Tue Aug 12 23:09:53 2014
From: marc_schwartz at me.com (Marc Schwartz)
Date: Tue, 12 Aug 2014 16:09:53 -0500
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
Message-ID: <77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>

Hi John,

Happy to help. I recalled seeing something previously on this, so a search using rseek.org was fruitful.

The potential gotcha, of course, is if for some reason the GUI exits in a manner possibly not under your control. The setting would not be returned to the default and the therefore, as you note, retained for a subsequent session where the behavior may not be desired.

If this is for Rcmdr, perhaps this is something that could be added to a menu, where the user can alter the behavior in either direction as desired, if that makes sense.

Simon would need to comment on the potential for alternatives.

Best regards,

Marc


On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca> wrote:

> Hi Marc,
> 
> Thanks for this. It does work, and I wasn't aware of it -- you've obviously
> done a better job than I did of searching for a solution!
> 
> Although this approach works, it has the disadvantage of permanently
> changing the help browser in R.app, beyond the current session, at least
> until the change is explicitly undone. I think that I can work around that
> by something like
> 
> 	current <- system("defaults read org.R-project.R", intern=TRUE)
> 
> to discover whether the use.external.help preference exists, and if so, what
> its value is; to then set the preference to YES if it's NO or unset; and
> finally to remove the preference on exit.
> 
> Again, thanks -- I think that I can work with this, though it would in my
> opinion be better if the help browser were settable for the current session
> directly via options() in R, or if one could specify the browser in a call
> to help().
> 
> Best (and thanks again),
> John
> 
>> -----Original Message-----
>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>> Sent: Tuesday, August 12, 2014 4:04 PM
>> To: John Fox
>> Cc: r-sig-mac at r-project.org
>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>> 
>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:
>> 
>>> Dear list members,
>>> 
>>> Is there a way to bypass the R.app help browser, and to use instead
>> an alternative browser, such as the one pointed to by
>> getOption("browser")?
>>> 
>>> I've tried a number of strategies, including setting .Platform$GUI <-
>> "unknown". The only approach I tried that works is to mask the help()
>> function with a modified version, but this produces other problems,
>> such as referencing unexported objects from utils and tools.
>>> 
>>> It would be nice if the help() function had a browser argument,
>> similar to that in browseURL(), and defaulting to the current
>> behaviour.
>>> 
>>> Any suggestions would be appreciated.
>>> 
>>> John
>> 
>> 
>> John,
>> 
>> I found this post from Simon that seems to work:
>> 
>>  https://stat.ethz.ch/pipermail/r-sig-mac/2009-December/006908.html
>> 
>> I tried it on my Mac in the latest version of R.app, which I normally
>> do not use and the help system does now popup a browser.
>> 
>> 
>> Regards,
>> 
>> Marc Schwartz
> 


From jfox at mcmaster.ca  Wed Aug 13 00:15:28 2014
From: jfox at mcmaster.ca (John Fox)
Date: Tue, 12 Aug 2014 18:15:28 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
Message-ID: <001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>

Hi Marc,

> -----Original Message-----
> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> Sent: Tuesday, August 12, 2014 5:10 PM
> To: John Fox
> Cc: r-sig-mac at r-project.org
> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> 
> Hi John,
> 
> Happy to help. I recalled seeing something previously on this, so a
> search using rseek.org was fruitful.
> 
> The potential gotcha, of course, is if for some reason the GUI exits in
> a manner possibly not under your control. The setting would not be
> returned to the default and the therefore, as you note, retained for a
> subsequent session where the behavior may not be desired.
> 

Yes, there is that possibility.

> If this is for Rcmdr, perhaps this is something that could be added to
> a menu, where the user can alter the behavior in either direction as
> desired, if that makes sense.
> 

As you guessed, this is for the Rcmdr, where the built-in R.app browser
doesn't play well with dialog help buttons -- the browser is unresponsive
until the dialog that called it closes -- while an external html-help
browser works fine.

I've now successfully implemented the approach I outlined, in which the
previous setting is restored when the Commander GUI closes. As you point
out, this isn't bullet-proof, but I think it is the best I can do for now.
Allowing the user to apply the change would be safer, but users are unlikely
to discover the option.

> Simon would need to comment on the potential for alternatives.

Yes, that would be welcome. I still think that a setting via options() would
be better.

Thanks again for your help,
 John

> 
> Best regards,
> 
> Marc
> 
> 
> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca> wrote:
> 
> > Hi Marc,
> >
> > Thanks for this. It does work, and I wasn't aware of it -- you've
> obviously
> > done a better job than I did of searching for a solution!
> >
> > Although this approach works, it has the disadvantage of permanently
> > changing the help browser in R.app, beyond the current session, at
> least
> > until the change is explicitly undone. I think that I can work around
> that
> > by something like
> >
> > 	current <- system("defaults read org.R-project.R", intern=TRUE)
> >
> > to discover whether the use.external.help preference exists, and if
> so, what
> > its value is; to then set the preference to YES if it's NO or unset;
> and
> > finally to remove the preference on exit.
> >
> > Again, thanks -- I think that I can work with this, though it would
> in my
> > opinion be better if the help browser were settable for the current
> session
> > directly via options() in R, or if one could specify the browser in a
> call
> > to help().
> >
> > Best (and thanks again),
> > John
> >
> >> -----Original Message-----
> >> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >> Sent: Tuesday, August 12, 2014 4:04 PM
> >> To: John Fox
> >> Cc: r-sig-mac at r-project.org
> >> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>
> >> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:
> >>
> >>> Dear list members,
> >>>
> >>> Is there a way to bypass the R.app help browser, and to use instead
> >> an alternative browser, such as the one pointed to by
> >> getOption("browser")?
> >>>
> >>> I've tried a number of strategies, including setting .Platform$GUI
> <-
> >> "unknown". The only approach I tried that works is to mask the
> help()
> >> function with a modified version, but this produces other problems,
> >> such as referencing unexported objects from utils and tools.
> >>>
> >>> It would be nice if the help() function had a browser argument,
> >> similar to that in browseURL(), and defaulting to the current
> >> behaviour.
> >>>
> >>> Any suggestions would be appreciated.
> >>>
> >>> John
> >>
> >>
> >> John,
> >>
> >> I found this post from Simon that seems to work:
> >>
> >>  https://stat.ethz.ch/pipermail/r-sig-mac/2009-December/006908.html
> >>
> >> I tried it on my Mac in the latest version of R.app, which I
> normally
> >> do not use and the help system does now popup a browser.
> >>
> >>
> >> Regards,
> >>
> >> Marc Schwartz
> >


From simon.urbanek at r-project.org  Wed Aug 13 06:25:30 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 13 Aug 2014 00:25:30 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>
Message-ID: <FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>

John,

can't you address the underlying issue instead and don't block the event loop? A lot of things don't work if the event loop is blocked and I would argue that changing user's preferences behind the scenes is a violation of the CRAN policies.
I'm happy to help if you send me a bit more details.

Cheers,
Simon


On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:

> Hi Marc,
> 
>> -----Original Message-----
>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>> Sent: Tuesday, August 12, 2014 5:10 PM
>> To: John Fox
>> Cc: r-sig-mac at r-project.org
>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>> 
>> Hi John,
>> 
>> Happy to help. I recalled seeing something previously on this, so a
>> search using rseek.org was fruitful.
>> 
>> The potential gotcha, of course, is if for some reason the GUI exits in
>> a manner possibly not under your control. The setting would not be
>> returned to the default and the therefore, as you note, retained for a
>> subsequent session where the behavior may not be desired.
>> 
> 
> Yes, there is that possibility.
> 
>> If this is for Rcmdr, perhaps this is something that could be added to
>> a menu, where the user can alter the behavior in either direction as
>> desired, if that makes sense.
>> 
> 
> As you guessed, this is for the Rcmdr, where the built-in R.app browser
> doesn't play well with dialog help buttons -- the browser is unresponsive
> until the dialog that called it closes -- while an external html-help
> browser works fine.
> 
> I've now successfully implemented the approach I outlined, in which the
> previous setting is restored when the Commander GUI closes. As you point
> out, this isn't bullet-proof, but I think it is the best I can do for now.
> Allowing the user to apply the change would be safer, but users are unlikely
> to discover the option.
> 
>> Simon would need to comment on the potential for alternatives.
> 
> Yes, that would be welcome. I still think that a setting via options() would
> be better.
> 
> Thanks again for your help,
> John
> 
>> 
>> Best regards,
>> 
>> Marc
>> 
>> 
>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca> wrote:
>> 
>>> Hi Marc,
>>> 
>>> Thanks for this. It does work, and I wasn't aware of it -- you've
>> obviously
>>> done a better job than I did of searching for a solution!
>>> 
>>> Although this approach works, it has the disadvantage of permanently
>>> changing the help browser in R.app, beyond the current session, at
>> least
>>> until the change is explicitly undone. I think that I can work around
>> that
>>> by something like
>>> 
>>> 	current <- system("defaults read org.R-project.R", intern=TRUE)
>>> 
>>> to discover whether the use.external.help preference exists, and if
>> so, what
>>> its value is; to then set the preference to YES if it's NO or unset;
>> and
>>> finally to remove the preference on exit.
>>> 
>>> Again, thanks -- I think that I can work with this, though it would
>> in my
>>> opinion be better if the help browser were settable for the current
>> session
>>> directly via options() in R, or if one could specify the browser in a
>> call
>>> to help().
>>> 
>>> Best (and thanks again),
>>> John
>>> 
>>>> -----Original Message-----
>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>>>> Sent: Tuesday, August 12, 2014 4:04 PM
>>>> To: John Fox
>>>> Cc: r-sig-mac at r-project.org
>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>>> 
>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:
>>>> 
>>>>> Dear list members,
>>>>> 
>>>>> Is there a way to bypass the R.app help browser, and to use instead
>>>> an alternative browser, such as the one pointed to by
>>>> getOption("browser")?
>>>>> 
>>>>> I've tried a number of strategies, including setting .Platform$GUI
>> <-
>>>> "unknown". The only approach I tried that works is to mask the
>> help()
>>>> function with a modified version, but this produces other problems,
>>>> such as referencing unexported objects from utils and tools.
>>>>> 
>>>>> It would be nice if the help() function had a browser argument,
>>>> similar to that in browseURL(), and defaulting to the current
>>>> behaviour.
>>>>> 
>>>>> Any suggestions would be appreciated.
>>>>> 
>>>>> John
>>>> 
>>>> 
>>>> John,
>>>> 
>>>> I found this post from Simon that seems to work:
>>>> 
>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-December/006908.html
>>>> 
>>>> I tried it on my Mac in the latest version of R.app, which I
>> normally
>>>> do not use and the help system does now popup a browser.
>>>> 
>>>> 
>>>> Regards,
>>>> 
>>>> Marc Schwartz
>>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From jfox at mcmaster.ca  Wed Aug 13 15:14:20 2014
From: jfox at mcmaster.ca (John Fox)
Date: Wed, 13 Aug 2014 09:14:20 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>
	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>
Message-ID: <web-522291923@cgpsrv2.cis.mcmaster.ca>

Dear Simon,

Here's a simple script that will demonstrate the problem:

----- snip -----

library(tcltk)

top <- tktoplevel()
button <- ttkbutton(top, text="help", command=function() print(help(lm)))
tkgrid(button)
tkwait.window(top)

----- snip -----

The problem is produced by tkwait.window(), and this call is in all Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause problems, but obviously it's causing this problem.  I'm also not certain whether calling tkwait.windows() is necessary and will look into the consequences of removing it -- I believe that it's been there for many years, from the earliest versions of the Rcmdr.

With respect to changing using preferences, this is done only until the Commander() exits. If getting rid of the call to tkwait.window() proves problematic, I can ask the user for permission in a pop-up dialog.

Thanks for your help,
 John

On Wed, 13 Aug 2014 00:25:30 -0400
 Simon Urbanek <simon.urbanek at r-project.org> wrote:
> John,
> 
> can't you address the underlying issue instead and don't block the event loop? A lot of things don't work if the event loop is blocked and I would argue that changing user's preferences behind the scenes is a violation of the CRAN policies.
> I'm happy to help if you send me a bit more details.
> 
> Cheers,
> Simon
> 
> 
> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
> 
> > Hi Marc,
> > 
> >> -----Original Message-----
> >> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >> Sent: Tuesday, August 12, 2014 5:10 PM
> >> To: John Fox
> >> Cc: r-sig-mac at r-project.org
> >> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >> 
> >> Hi John,
> >> 
> >> Happy to help. I recalled seeing something previously on this, so a
> >> search using rseek.org was fruitful.
> >> 
> >> The potential gotcha, of course, is if for some reason the GUI exits in
> >> a manner possibly not under your control. The setting would not be
> >> returned to the default and the therefore, as you note, retained for a
> >> subsequent session where the behavior may not be desired.
> >> 
> > 
> > Yes, there is that possibility.
> > 
> >> If this is for Rcmdr, perhaps this is something that could be added to
> >> a menu, where the user can alter the behavior in either direction as
> >> desired, if that makes sense.
> >> 
> > 
> > As you guessed, this is for the Rcmdr, where the built-in R.app browser
> > doesn't play well with dialog help buttons -- the browser is unresponsive
> > until the dialog that called it closes -- while an external html-help
> > browser works fine.
> > 
> > I've now successfully implemented the approach I outlined, in which the
> > previous setting is restored when the Commander GUI closes. As you point
> > out, this isn't bullet-proof, but I think it is the best I can do for now.
> > Allowing the user to apply the change would be safer, but users are unlikely
> > to discover the option.
> > 
> >> Simon would need to comment on the potential for alternatives.
> > 
> > Yes, that would be welcome. I still think that a setting via options() would
> > be better.
> > 
> > Thanks again for your help,
> > John
> > 
> >> 
> >> Best regards,
> >> 
> >> Marc
> >> 
> >> 
> >> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca> wrote:
> >> 
> >>> Hi Marc,
> >>> 
> >>> Thanks for this. It does work, and I wasn't aware of it -- you've
> >> obviously
> >>> done a better job than I did of searching for a solution!
> >>> 
> >>> Although this approach works, it has the disadvantage of permanently
> >>> changing the help browser in R.app, beyond the current session, at
> >> least
> >>> until the change is explicitly undone. I think that I can work around
> >> that
> >>> by something like
> >>> 
> >>> 	current <- system("defaults read org.R-project.R", intern=TRUE)
> >>> 
> >>> to discover whether the use.external.help preference exists, and if
> >> so, what
> >>> its value is; to then set the preference to YES if it's NO or unset;
> >> and
> >>> finally to remove the preference on exit.
> >>> 
> >>> Again, thanks -- I think that I can work with this, though it would
> >> in my
> >>> opinion be better if the help browser were settable for the current
> >> session
> >>> directly via options() in R, or if one could specify the browser in a
> >> call
> >>> to help().
> >>> 
> >>> Best (and thanks again),
> >>> John
> >>> 
> >>>> -----Original Message-----
> >>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >>>> Sent: Tuesday, August 12, 2014 4:04 PM
> >>>> To: John Fox
> >>>> Cc: r-sig-mac at r-project.org
> >>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>>> 
> >>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:
> >>>> 
> >>>>> Dear list members,
> >>>>> 
> >>>>> Is there a way to bypass the R.app help browser, and to use instead
> >>>> an alternative browser, such as the one pointed to by
> >>>> getOption("browser")?
> >>>>> 
> >>>>> I've tried a number of strategies, including setting .Platform$GUI
> >> <-
> >>>> "unknown". The only approach I tried that works is to mask the
> >> help()
> >>>> function with a modified version, but this produces other problems,
> >>>> such as referencing unexported objects from utils and tools.
> >>>>> 
> >>>>> It would be nice if the help() function had a browser argument,
> >>>> similar to that in browseURL(), and defaulting to the current
> >>>> behaviour.
> >>>>> 
> >>>>> Any suggestions would be appreciated.
> >>>>> 
> >>>>> John
> >>>> 
> >>>> 
> >>>> John,
> >>>> 
> >>>> I found this post from Simon that seems to work:
> >>>> 
> >>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-December/006908.html
> >>>> 
> >>>> I tried it on my Mac in the latest version of R.app, which I
> >> normally
> >>>> do not use and the help system does now popup a browser.
> >>>> 
> >>>> 
> >>>> Regards,
> >>>> 
> >>>> Marc Schwartz
> >>> 
> > 
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > 
>


From pdalgd at gmail.com  Wed Aug 13 16:11:18 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 13 Aug 2014 16:11:18 +0200
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <web-522291923@cgpsrv2.cis.mcmaster.ca>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>
	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>
	<web-522291923@cgpsrv2.cis.mcmaster.ca>
Message-ID: <81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>

This isn't unique to tcltk. Anything that blocks the keyboard loop blocks the help browser too. Try e.g. opening the help for ls, type Sys.sleep(15) and watch the beach ball in the help browser as you try to scroll in it.

-pd


On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:

> Dear Simon,
> 
> Here's a simple script that will demonstrate the problem:
> 
> ----- snip -----
> 
> library(tcltk)
> 
> top <- tktoplevel()
> button <- ttkbutton(top, text="help", command=function() print(help(lm)))
> tkgrid(button)
> tkwait.window(top)
> 
> ----- snip -----
> 
> The problem is produced by tkwait.window(), and this call is in all Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause problems, but obviously it's causing this problem.  I'm also not certain whether calling tkwait.windows() is necessary and will look into the consequences of removing it -- I believe that it's been there for many years, from the earliest versions of the Rcmdr.
> 
> With respect to changing using preferences, this is done only until the Commander() exits. If getting rid of the call to tkwait.window() proves problematic, I can ask the user for permission in a pop-up dialog.
> 
> Thanks for your help,
> John
> 
> On Wed, 13 Aug 2014 00:25:30 -0400
> Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> John,
>> 
>> can't you address the underlying issue instead and don't block the event loop? A lot of things don't work if the event loop is blocked and I would argue that changing user's preferences behind the scenes is a violation of the CRAN policies.
>> I'm happy to help if you send me a bit more details.
>> 
>> Cheers,
>> Simon
>> 
>> 
>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
>> 
>>> Hi Marc,
>>> 
>>>> -----Original Message-----
>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>>>> Sent: Tuesday, August 12, 2014 5:10 PM
>>>> To: John Fox
>>>> Cc: r-sig-mac at r-project.org
>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>>> 
>>>> Hi John,
>>>> 
>>>> Happy to help. I recalled seeing something previously on this, so a
>>>> search using rseek.org was fruitful.
>>>> 
>>>> The potential gotcha, of course, is if for some reason the GUI exits in
>>>> a manner possibly not under your control. The setting would not be
>>>> returned to the default and the therefore, as you note, retained for a
>>>> subsequent session where the behavior may not be desired.
>>>> 
>>> 
>>> Yes, there is that possibility.
>>> 
>>>> If this is for Rcmdr, perhaps this is something that could be added to
>>>> a menu, where the user can alter the behavior in either direction as
>>>> desired, if that makes sense.
>>>> 
>>> 
>>> As you guessed, this is for the Rcmdr, where the built-in R.app browser
>>> doesn't play well with dialog help buttons -- the browser is unresponsive
>>> until the dialog that called it closes -- while an external html-help
>>> browser works fine.
>>> 
>>> I've now successfully implemented the approach I outlined, in which the
>>> previous setting is restored when the Commander GUI closes. As you point
>>> out, this isn't bullet-proof, but I think it is the best I can do for now.
>>> Allowing the user to apply the change would be safer, but users are unlikely
>>> to discover the option.
>>> 
>>>> Simon would need to comment on the potential for alternatives.
>>> 
>>> Yes, that would be welcome. I still think that a setting via options() would
>>> be better.
>>> 
>>> Thanks again for your help,
>>> John
>>> 
>>>> 
>>>> Best regards,
>>>> 
>>>> Marc
>>>> 
>>>> 
>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca> wrote:
>>>> 
>>>>> Hi Marc,
>>>>> 
>>>>> Thanks for this. It does work, and I wasn't aware of it -- you've
>>>> obviously
>>>>> done a better job than I did of searching for a solution!
>>>>> 
>>>>> Although this approach works, it has the disadvantage of permanently
>>>>> changing the help browser in R.app, beyond the current session, at
>>>> least
>>>>> until the change is explicitly undone. I think that I can work around
>>>> that
>>>>> by something like
>>>>> 
>>>>> 	current <- system("defaults read org.R-project.R", intern=TRUE)
>>>>> 
>>>>> to discover whether the use.external.help preference exists, and if
>>>> so, what
>>>>> its value is; to then set the preference to YES if it's NO or unset;
>>>> and
>>>>> finally to remove the preference on exit.
>>>>> 
>>>>> Again, thanks -- I think that I can work with this, though it would
>>>> in my
>>>>> opinion be better if the help browser were settable for the current
>>>> session
>>>>> directly via options() in R, or if one could specify the browser in a
>>>> call
>>>>> to help().
>>>>> 
>>>>> Best (and thanks again),
>>>>> John
>>>>> 
>>>>>> -----Original Message-----
>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
>>>>>> To: John Fox
>>>>>> Cc: r-sig-mac at r-project.org
>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>>>>> 
>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:
>>>>>> 
>>>>>>> Dear list members,
>>>>>>> 
>>>>>>> Is there a way to bypass the R.app help browser, and to use instead
>>>>>> an alternative browser, such as the one pointed to by
>>>>>> getOption("browser")?
>>>>>>> 
>>>>>>> I've tried a number of strategies, including setting .Platform$GUI
>>>> <-
>>>>>> "unknown". The only approach I tried that works is to mask the
>>>> help()
>>>>>> function with a modified version, but this produces other problems,
>>>>>> such as referencing unexported objects from utils and tools.
>>>>>>> 
>>>>>>> It would be nice if the help() function had a browser argument,
>>>>>> similar to that in browseURL(), and defaulting to the current
>>>>>> behaviour.
>>>>>>> 
>>>>>>> Any suggestions would be appreciated.
>>>>>>> 
>>>>>>> John
>>>>>> 
>>>>>> 
>>>>>> John,
>>>>>> 
>>>>>> I found this post from Simon that seems to work:
>>>>>> 
>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-December/006908.html
>>>>>> 
>>>>>> I tried it on my Mac in the latest version of R.app, which I
>>>> normally
>>>>>> do not use and the help system does now popup a browser.
>>>>>> 
>>>>>> 
>>>>>> Regards,
>>>>>> 
>>>>>> Marc Schwartz
>>>>> 
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From ripley at stats.ox.ac.uk  Wed Aug 13 17:08:23 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 13 Aug 2014 16:08:23 +0100
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>	<web-522291923@cgpsrv2.cis.mcmaster.ca>
	<81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>
Message-ID: <53EB7F67.80203@stats.ox.ac.uk>

On 13/08/2014 15:11, peter dalgaard wrote:
> This isn't unique to tcltk. Anything that blocks the keyboard loop blocks the help browser too. Try e.g. opening the help for ls, type Sys.sleep(15) and watch the beach ball in the help browser as you try to scroll in it.

But Sys.sleep should not be blocking an event loop: from its help

      The intention is that this function suspends execution of R
      expressions but wakes the process up often enough to respond to
      GUI events, typically every 0.5 seconds.

The mechanisms to mesh event loops which are in place for Sys.sleep  are 
R_CheckUserInterrupt (which calls R_ProcessEvents) and R_runHandlers.

Note that the help for tkwait says (on my box)

        While  the  tkwait command is waiting it processes events in the 
normal
        fashion, so the application will continue to respond to  user 
interac-
        tions.   If  an  event handler invokes tkwait again, the nested 
call to
        tkwait must complete before the outer call can complete.

but as this is X11 Tk, it means X11/Unix events.  You can demonstrate 
that, as e.g the http server still works (use help.start() first).


> -pd
>
>
> On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:
>
>> Dear Simon,
>>
>> Here's a simple script that will demonstrate the problem:
>>
>> ----- snip -----
>>
>> library(tcltk)
>>
>> top <- tktoplevel()
>> button <- ttkbutton(top, text="help", command=function() print(help(lm)))
>> tkgrid(button)
>> tkwait.window(top)
>>
>> ----- snip -----
>>
>> The problem is produced by tkwait.window(), and this call is in all Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause problems, but obviously it's causing this problem.  I'm also not certain whether calling tkwait.windows() is necessary and will look into the consequences of removing it -- I believe that it's been there for many years, from the earliest versions of the Rcmdr.
>>
>> With respect to changing using preferences, this is done only until the Commander() exits. If getting rid of the call to tkwait.window() proves problematic, I can ask the user for permission in a pop-up dialog.
>>
>> Thanks for your help,
>> John
>>
>> On Wed, 13 Aug 2014 00:25:30 -0400
>> Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>> John,
>>>
>>> can't you address the underlying issue instead and don't block the event loop? A lot of things don't work if the event loop is blocked and I would argue that changing user's preferences behind the scenes is a violation of the CRAN policies.
>>> I'm happy to help if you send me a bit more details.
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
>>>
>>>> Hi Marc,
>>>>
>>>>> -----Original Message-----
>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>>>>> Sent: Tuesday, August 12, 2014 5:10 PM
>>>>> To: John Fox
>>>>> Cc: r-sig-mac at r-project.org
>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>>>>
>>>>> Hi John,
>>>>>
>>>>> Happy to help. I recalled seeing something previously on this, so a
>>>>> search using rseek.org was fruitful.
>>>>>
>>>>> The potential gotcha, of course, is if for some reason the GUI exits in
>>>>> a manner possibly not under your control. The setting would not be
>>>>> returned to the default and the therefore, as you note, retained for a
>>>>> subsequent session where the behavior may not be desired.
>>>>>
>>>>
>>>> Yes, there is that possibility.
>>>>
>>>>> If this is for Rcmdr, perhaps this is something that could be added to
>>>>> a menu, where the user can alter the behavior in either direction as
>>>>> desired, if that makes sense.
>>>>>
>>>>
>>>> As you guessed, this is for the Rcmdr, where the built-in R.app browser
>>>> doesn't play well with dialog help buttons -- the browser is unresponsive
>>>> until the dialog that called it closes -- while an external html-help
>>>> browser works fine.
>>>>
>>>> I've now successfully implemented the approach I outlined, in which the
>>>> previous setting is restored when the Commander GUI closes. As you point
>>>> out, this isn't bullet-proof, but I think it is the best I can do for now.
>>>> Allowing the user to apply the change would be safer, but users are unlikely
>>>> to discover the option.
>>>>
>>>>> Simon would need to comment on the potential for alternatives.
>>>>
>>>> Yes, that would be welcome. I still think that a setting via options() would
>>>> be better.
>>>>
>>>> Thanks again for your help,
>>>> John
>>>>
>>>>>
>>>>> Best regards,
>>>>>
>>>>> Marc
>>>>>
>>>>>
>>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca> wrote:
>>>>>
>>>>>> Hi Marc,
>>>>>>
>>>>>> Thanks for this. It does work, and I wasn't aware of it -- you've
>>>>> obviously
>>>>>> done a better job than I did of searching for a solution!
>>>>>>
>>>>>> Although this approach works, it has the disadvantage of permanently
>>>>>> changing the help browser in R.app, beyond the current session, at
>>>>> least
>>>>>> until the change is explicitly undone. I think that I can work around
>>>>> that
>>>>>> by something like
>>>>>>
>>>>>> 	current <- system("defaults read org.R-project.R", intern=TRUE)
>>>>>>
>>>>>> to discover whether the use.external.help preference exists, and if
>>>>> so, what
>>>>>> its value is; to then set the preference to YES if it's NO or unset;
>>>>> and
>>>>>> finally to remove the preference on exit.
>>>>>>
>>>>>> Again, thanks -- I think that I can work with this, though it would
>>>>> in my
>>>>>> opinion be better if the help browser were settable for the current
>>>>> session
>>>>>> directly via options() in R, or if one could specify the browser in a
>>>>> call
>>>>>> to help().
>>>>>>
>>>>>> Best (and thanks again),
>>>>>> John
>>>>>>
>>>>>>> -----Original Message-----
>>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
>>>>>>> To: John Fox
>>>>>>> Cc: r-sig-mac at r-project.org
>>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>>>>>>
>>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:
>>>>>>>
>>>>>>>> Dear list members,
>>>>>>>>
>>>>>>>> Is there a way to bypass the R.app help browser, and to use instead
>>>>>>> an alternative browser, such as the one pointed to by
>>>>>>> getOption("browser")?
>>>>>>>>
>>>>>>>> I've tried a number of strategies, including setting .Platform$GUI
>>>>> <-
>>>>>>> "unknown". The only approach I tried that works is to mask the
>>>>> help()
>>>>>>> function with a modified version, but this produces other problems,
>>>>>>> such as referencing unexported objects from utils and tools.
>>>>>>>>
>>>>>>>> It would be nice if the help() function had a browser argument,
>>>>>>> similar to that in browseURL(), and defaulting to the current
>>>>>>> behaviour.
>>>>>>>>
>>>>>>>> Any suggestions would be appreciated.
>>>>>>>>
>>>>>>>> John
>>>>>>>
>>>>>>>
>>>>>>> John,
>>>>>>>
>>>>>>> I found this post from Simon that seems to work:
>>>>>>>
>>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-December/006908.html
>>>>>>>
>>>>>>> I tried it on my Mac in the latest version of R.app, which I
>>>>> normally
>>>>>>> do not use and the help system does now popup a browser.
>>>>>>>
>>>>>>>
>>>>>>> Regards,
>>>>>>>
>>>>>>> Marc Schwartz
>>>>>>
>>>>
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>
>>>
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From jfox at mcmaster.ca  Wed Aug 13 18:56:51 2014
From: jfox at mcmaster.ca (John Fox)
Date: Wed, 13 Aug 2014 12:56:51 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <53EB7F67.80203@stats.ox.ac.uk>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>	<web-522291923@cgpsrv2.cis.mcmaster.ca>
	<81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>
	<53EB7F67.80203@stats.ox.ac.uk>
Message-ID: <002901cfb717$947c0400$bd740c00$@mcmaster.ca>

Dear Brian and Peter,

Thanks for picking up this issue. 

The behaviour that Brian reports is exactly what I observed, and the Tcl/Tk
doc that he quotes is what I consulted. It's not surprising to me that the R
process waits until the Tk window calling tkwait.window() is destroyed. I
suppose that because the internal help browser runs under the R process, it
too waits, while an external browser -- as is spawned by help.start() --
runs in an independent process.

As I mentioned, I've removed the call to tkwait.window() in the Rcmdr
sources (it's in a "macro" called by every Rcmdr modal dialog) and will test
whether there are negative consequences. I've observed none so far.

BTW, the same issue arises when the Rcmdr is run inside of RStudio, which
directs help to its own browser.

Best,
 John

> -----Original Message-----
> From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk]
> Sent: Wednesday, August 13, 2014 11:08 AM
> To: peter dalgaard; John Fox
> Cc: R-SIG-Mac
> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> 
> On 13/08/2014 15:11, peter dalgaard wrote:
> > This isn't unique to tcltk. Anything that blocks the keyboard loop
> blocks the help browser too. Try e.g. opening the help for ls, type
> Sys.sleep(15) and watch the beach ball in the help browser as you try
> to scroll in it.
> 
> But Sys.sleep should not be blocking an event loop: from its help
> 
>       The intention is that this function suspends execution of R
>       expressions but wakes the process up often enough to respond to
>       GUI events, typically every 0.5 seconds.
> 
> The mechanisms to mesh event loops which are in place for Sys.sleep
> are
> R_CheckUserInterrupt (which calls R_ProcessEvents) and R_runHandlers.
> 
> Note that the help for tkwait says (on my box)
> 
>         While  the  tkwait command is waiting it processes events in
> the
> normal
>         fashion, so the application will continue to respond to  user
> interac-
>         tions.   If  an  event handler invokes tkwait again, the nested
> call to
>         tkwait must complete before the outer call can complete.
> 
> but as this is X11 Tk, it means X11/Unix events.  You can demonstrate
> that, as e.g the http server still works (use help.start() first).
> 
> 
> > -pd
> >
> >
> > On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:
> >
> >> Dear Simon,
> >>
> >> Here's a simple script that will demonstrate the problem:
> >>
> >> ----- snip -----
> >>
> >> library(tcltk)
> >>
> >> top <- tktoplevel()
> >> button <- ttkbutton(top, text="help", command=function()
> print(help(lm)))
> >> tkgrid(button)
> >> tkwait.window(top)
> >>
> >> ----- snip -----
> >>
> >> The problem is produced by tkwait.window(), and this call is in all
> Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause
> problems, but obviously it's causing this problem.  I'm also not
> certain whether calling tkwait.windows() is necessary and will look
> into the consequences of removing it -- I believe that it's been there
> for many years, from the earliest versions of the Rcmdr.
> >>
> >> With respect to changing using preferences, this is done only until
> the Commander() exits. If getting rid of the call to tkwait.window()
> proves problematic, I can ask the user for permission in a pop-up
> dialog.
> >>
> >> Thanks for your help,
> >> John
> >>
> >> On Wed, 13 Aug 2014 00:25:30 -0400
> >> Simon Urbanek <simon.urbanek at r-project.org> wrote:
> >>> John,
> >>>
> >>> can't you address the underlying issue instead and don't block the
> event loop? A lot of things don't work if the event loop is blocked and
> I would argue that changing user's preferences behind the scenes is a
> violation of the CRAN policies.
> >>> I'm happy to help if you send me a bit more details.
> >>>
> >>> Cheers,
> >>> Simon
> >>>
> >>>
> >>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
> >>>
> >>>> Hi Marc,
> >>>>
> >>>>> -----Original Message-----
> >>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >>>>> Sent: Tuesday, August 12, 2014 5:10 PM
> >>>>> To: John Fox
> >>>>> Cc: r-sig-mac at r-project.org
> >>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>>>>
> >>>>> Hi John,
> >>>>>
> >>>>> Happy to help. I recalled seeing something previously on this, so
> a
> >>>>> search using rseek.org was fruitful.
> >>>>>
> >>>>> The potential gotcha, of course, is if for some reason the GUI
> exits in
> >>>>> a manner possibly not under your control. The setting would not
> be
> >>>>> returned to the default and the therefore, as you note, retained
> for a
> >>>>> subsequent session where the behavior may not be desired.
> >>>>>
> >>>>
> >>>> Yes, there is that possibility.
> >>>>
> >>>>> If this is for Rcmdr, perhaps this is something that could be
> added to
> >>>>> a menu, where the user can alter the behavior in either direction
> as
> >>>>> desired, if that makes sense.
> >>>>>
> >>>>
> >>>> As you guessed, this is for the Rcmdr, where the built-in R.app
> browser
> >>>> doesn't play well with dialog help buttons -- the browser is
> unresponsive
> >>>> until the dialog that called it closes -- while an external html-
> help
> >>>> browser works fine.
> >>>>
> >>>> I've now successfully implemented the approach I outlined, in
> which the
> >>>> previous setting is restored when the Commander GUI closes. As you
> point
> >>>> out, this isn't bullet-proof, but I think it is the best I can do
> for now.
> >>>> Allowing the user to apply the change would be safer, but users
> are unlikely
> >>>> to discover the option.
> >>>>
> >>>>> Simon would need to comment on the potential for alternatives.
> >>>>
> >>>> Yes, that would be welcome. I still think that a setting via
> options() would
> >>>> be better.
> >>>>
> >>>> Thanks again for your help,
> >>>> John
> >>>>
> >>>>>
> >>>>> Best regards,
> >>>>>
> >>>>> Marc
> >>>>>
> >>>>>
> >>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca> wrote:
> >>>>>
> >>>>>> Hi Marc,
> >>>>>>
> >>>>>> Thanks for this. It does work, and I wasn't aware of it --
> you've
> >>>>> obviously
> >>>>>> done a better job than I did of searching for a solution!
> >>>>>>
> >>>>>> Although this approach works, it has the disadvantage of
> permanently
> >>>>>> changing the help browser in R.app, beyond the current session,
> at
> >>>>> least
> >>>>>> until the change is explicitly undone. I think that I can work
> around
> >>>>> that
> >>>>>> by something like
> >>>>>>
> >>>>>> 	current <- system("defaults read org.R-project.R",
> intern=TRUE)
> >>>>>>
> >>>>>> to discover whether the use.external.help preference exists, and
> if
> >>>>> so, what
> >>>>>> its value is; to then set the preference to YES if it's NO or
> unset;
> >>>>> and
> >>>>>> finally to remove the preference on exit.
> >>>>>>
> >>>>>> Again, thanks -- I think that I can work with this, though it
> would
> >>>>> in my
> >>>>>> opinion be better if the help browser were settable for the
> current
> >>>>> session
> >>>>>> directly via options() in R, or if one could specify the browser
> in a
> >>>>> call
> >>>>>> to help().
> >>>>>>
> >>>>>> Best (and thanks again),
> >>>>>> John
> >>>>>>
> >>>>>>> -----Original Message-----
> >>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
> >>>>>>> To: John Fox
> >>>>>>> Cc: r-sig-mac at r-project.org
> >>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>>>>>>
> >>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:
> >>>>>>>
> >>>>>>>> Dear list members,
> >>>>>>>>
> >>>>>>>> Is there a way to bypass the R.app help browser, and to use
> instead
> >>>>>>> an alternative browser, such as the one pointed to by
> >>>>>>> getOption("browser")?
> >>>>>>>>
> >>>>>>>> I've tried a number of strategies, including setting
> .Platform$GUI
> >>>>> <-
> >>>>>>> "unknown". The only approach I tried that works is to mask the
> >>>>> help()
> >>>>>>> function with a modified version, but this produces other
> problems,
> >>>>>>> such as referencing unexported objects from utils and tools.
> >>>>>>>>
> >>>>>>>> It would be nice if the help() function had a browser
> argument,
> >>>>>>> similar to that in browseURL(), and defaulting to the current
> >>>>>>> behaviour.
> >>>>>>>>
> >>>>>>>> Any suggestions would be appreciated.
> >>>>>>>>
> >>>>>>>> John
> >>>>>>>
> >>>>>>>
> >>>>>>> John,
> >>>>>>>
> >>>>>>> I found this post from Simon that seems to work:
> >>>>>>>
> >>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-
> December/006908.html
> >>>>>>>
> >>>>>>> I tried it on my Mac in the latest version of R.app, which I
> >>>>> normally
> >>>>>>> do not use and the help system does now popup a browser.
> >>>>>>>
> >>>>>>>
> >>>>>>> Regards,
> >>>>>>>
> >>>>>>> Marc Schwartz
> >>>>>>
> >>>>
> >>>> _______________________________________________
> >>>> R-SIG-Mac mailing list
> >>>> R-SIG-Mac at r-project.org
> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>>>
> >>>
> >>
> >> _______________________________________________
> >> R-SIG-Mac mailing list
> >> R-SIG-Mac at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
> 
> 
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
> 1 South Parks Road, Oxford OX1 3TG, UK


From rmh at temple.edu  Wed Aug 13 19:29:45 2014
From: rmh at temple.edu (Richard M. Heiberger)
Date: Wed, 13 Aug 2014 13:29:45 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <002901cfb717$947c0400$bd740c00$@mcmaster.ca>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>
	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>
	<web-522291923@cgpsrv2.cis.mcmaster.ca>
	<81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>
	<53EB7F67.80203@stats.ox.ac.uk>
	<002901cfb717$947c0400$bd740c00$@mcmaster.ca>
Message-ID: <CAGx1TMBKBy7H1jmQ86ckyEXGxFQAXkvyFsxit8We8HXqjb7Zuw@mail.gmail.com>

John,

I have noticed what I think is a related issue.  I normally run R
under emacs with ESS.
help files open an emacs buffer.  When I run Rcmdr on the Mac, then
Rcmdr changes the help
file location to something on the Mac.  It restores the emacs buffer
destination when I close Rcmdr.
Is there, or can there be, an option to leave the help files in emacs?

Thanks

Rich


On Wed, Aug 13, 2014 at 12:56 PM, John Fox <jfox at mcmaster.ca> wrote:
> Dear Brian and Peter,
>
> Thanks for picking up this issue.
>
> The behaviour that Brian reports is exactly what I observed, and the Tcl/Tk
> doc that he quotes is what I consulted. It's not surprising to me that the R
> process waits until the Tk window calling tkwait.window() is destroyed. I
> suppose that because the internal help browser runs under the R process, it
> too waits, while an external browser -- as is spawned by help.start() --
> runs in an independent process.
>
> As I mentioned, I've removed the call to tkwait.window() in the Rcmdr
> sources (it's in a "macro" called by every Rcmdr modal dialog) and will test
> whether there are negative consequences. I've observed none so far.
>
> BTW, the same issue arises when the Rcmdr is run inside of RStudio, which
> directs help to its own browser.
>
> Best,
>  John
>
>> -----Original Message-----
>> From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk]
>> Sent: Wednesday, August 13, 2014 11:08 AM
>> To: peter dalgaard; John Fox
>> Cc: R-SIG-Mac
>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>
>> On 13/08/2014 15:11, peter dalgaard wrote:
>> > This isn't unique to tcltk. Anything that blocks the keyboard loop
>> blocks the help browser too. Try e.g. opening the help for ls, type
>> Sys.sleep(15) and watch the beach ball in the help browser as you try
>> to scroll in it.
>>
>> But Sys.sleep should not be blocking an event loop: from its help
>>
>>       The intention is that this function suspends execution of R
>>       expressions but wakes the process up often enough to respond to
>>       GUI events, typically every 0.5 seconds.
>>
>> The mechanisms to mesh event loops which are in place for Sys.sleep
>> are
>> R_CheckUserInterrupt (which calls R_ProcessEvents) and R_runHandlers.
>>
>> Note that the help for tkwait says (on my box)
>>
>>         While  the  tkwait command is waiting it processes events in
>> the
>> normal
>>         fashion, so the application will continue to respond to  user
>> interac-
>>         tions.   If  an  event handler invokes tkwait again, the nested
>> call to
>>         tkwait must complete before the outer call can complete.
>>
>> but as this is X11 Tk, it means X11/Unix events.  You can demonstrate
>> that, as e.g the http server still works (use help.start() first).
>>
>>
>> > -pd
>> >
>> >
>> > On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:
>> >
>> >> Dear Simon,
>> >>
>> >> Here's a simple script that will demonstrate the problem:
>> >>
>> >> ----- snip -----
>> >>
>> >> library(tcltk)
>> >>
>> >> top <- tktoplevel()
>> >> button <- ttkbutton(top, text="help", command=function()
>> print(help(lm)))
>> >> tkgrid(button)
>> >> tkwait.window(top)
>> >>
>> >> ----- snip -----
>> >>
>> >> The problem is produced by tkwait.window(), and this call is in all
>> Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause
>> problems, but obviously it's causing this problem.  I'm also not
>> certain whether calling tkwait.windows() is necessary and will look
>> into the consequences of removing it -- I believe that it's been there
>> for many years, from the earliest versions of the Rcmdr.
>> >>
>> >> With respect to changing using preferences, this is done only until
>> the Commander() exits. If getting rid of the call to tkwait.window()
>> proves problematic, I can ask the user for permission in a pop-up
>> dialog.
>> >>
>> >> Thanks for your help,
>> >> John
>> >>
>> >> On Wed, 13 Aug 2014 00:25:30 -0400
>> >> Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> >>> John,
>> >>>
>> >>> can't you address the underlying issue instead and don't block the
>> event loop? A lot of things don't work if the event loop is blocked and
>> I would argue that changing user's preferences behind the scenes is a
>> violation of the CRAN policies.
>> >>> I'm happy to help if you send me a bit more details.
>> >>>
>> >>> Cheers,
>> >>> Simon
>> >>>
>> >>>
>> >>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
>> >>>
>> >>>> Hi Marc,
>> >>>>
>> >>>>> -----Original Message-----
>> >>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>> >>>>> Sent: Tuesday, August 12, 2014 5:10 PM
>> >>>>> To: John Fox
>> >>>>> Cc: r-sig-mac at r-project.org
>> >>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>> >>>>>
>> >>>>> Hi John,
>> >>>>>
>> >>>>> Happy to help. I recalled seeing something previously on this, so
>> a
>> >>>>> search using rseek.org was fruitful.
>> >>>>>
>> >>>>> The potential gotcha, of course, is if for some reason the GUI
>> exits in
>> >>>>> a manner possibly not under your control. The setting would not
>> be
>> >>>>> returned to the default and the therefore, as you note, retained
>> for a
>> >>>>> subsequent session where the behavior may not be desired.
>> >>>>>
>> >>>>
>> >>>> Yes, there is that possibility.
>> >>>>
>> >>>>> If this is for Rcmdr, perhaps this is something that could be
>> added to
>> >>>>> a menu, where the user can alter the behavior in either direction
>> as
>> >>>>> desired, if that makes sense.
>> >>>>>
>> >>>>
>> >>>> As you guessed, this is for the Rcmdr, where the built-in R.app
>> browser
>> >>>> doesn't play well with dialog help buttons -- the browser is
>> unresponsive
>> >>>> until the dialog that called it closes -- while an external html-
>> help
>> >>>> browser works fine.
>> >>>>
>> >>>> I've now successfully implemented the approach I outlined, in
>> which the
>> >>>> previous setting is restored when the Commander GUI closes. As you
>> point
>> >>>> out, this isn't bullet-proof, but I think it is the best I can do
>> for now.
>> >>>> Allowing the user to apply the change would be safer, but users
>> are unlikely
>> >>>> to discover the option.
>> >>>>
>> >>>>> Simon would need to comment on the potential for alternatives.
>> >>>>
>> >>>> Yes, that would be welcome. I still think that a setting via
>> options() would
>> >>>> be better.
>> >>>>
>> >>>> Thanks again for your help,
>> >>>> John
>> >>>>
>> >>>>>
>> >>>>> Best regards,
>> >>>>>
>> >>>>> Marc
>> >>>>>
>> >>>>>
>> >>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca> wrote:
>> >>>>>
>> >>>>>> Hi Marc,
>> >>>>>>
>> >>>>>> Thanks for this. It does work, and I wasn't aware of it --
>> you've
>> >>>>> obviously
>> >>>>>> done a better job than I did of searching for a solution!
>> >>>>>>
>> >>>>>> Although this approach works, it has the disadvantage of
>> permanently
>> >>>>>> changing the help browser in R.app, beyond the current session,
>> at
>> >>>>> least
>> >>>>>> until the change is explicitly undone. I think that I can work
>> around
>> >>>>> that
>> >>>>>> by something like
>> >>>>>>
>> >>>>>>        current <- system("defaults read org.R-project.R",
>> intern=TRUE)
>> >>>>>>
>> >>>>>> to discover whether the use.external.help preference exists, and
>> if
>> >>>>> so, what
>> >>>>>> its value is; to then set the preference to YES if it's NO or
>> unset;
>> >>>>> and
>> >>>>>> finally to remove the preference on exit.
>> >>>>>>
>> >>>>>> Again, thanks -- I think that I can work with this, though it
>> would
>> >>>>> in my
>> >>>>>> opinion be better if the help browser were settable for the
>> current
>> >>>>> session
>> >>>>>> directly via options() in R, or if one could specify the browser
>> in a
>> >>>>> call
>> >>>>>> to help().
>> >>>>>>
>> >>>>>> Best (and thanks again),
>> >>>>>> John
>> >>>>>>
>> >>>>>>> -----Original Message-----
>> >>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>> >>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
>> >>>>>>> To: John Fox
>> >>>>>>> Cc: r-sig-mac at r-project.org
>> >>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>> >>>>>>>
>> >>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca> wrote:
>> >>>>>>>
>> >>>>>>>> Dear list members,
>> >>>>>>>>
>> >>>>>>>> Is there a way to bypass the R.app help browser, and to use
>> instead
>> >>>>>>> an alternative browser, such as the one pointed to by
>> >>>>>>> getOption("browser")?
>> >>>>>>>>
>> >>>>>>>> I've tried a number of strategies, including setting
>> .Platform$GUI
>> >>>>> <-
>> >>>>>>> "unknown". The only approach I tried that works is to mask the
>> >>>>> help()
>> >>>>>>> function with a modified version, but this produces other
>> problems,
>> >>>>>>> such as referencing unexported objects from utils and tools.
>> >>>>>>>>
>> >>>>>>>> It would be nice if the help() function had a browser
>> argument,
>> >>>>>>> similar to that in browseURL(), and defaulting to the current
>> >>>>>>> behaviour.
>> >>>>>>>>
>> >>>>>>>> Any suggestions would be appreciated.
>> >>>>>>>>
>> >>>>>>>> John
>> >>>>>>>
>> >>>>>>>
>> >>>>>>> John,
>> >>>>>>>
>> >>>>>>> I found this post from Simon that seems to work:
>> >>>>>>>
>> >>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-
>> December/006908.html
>> >>>>>>>
>> >>>>>>> I tried it on my Mac in the latest version of R.app, which I
>> >>>>> normally
>> >>>>>>> do not use and the help system does now popup a browser.
>> >>>>>>>
>> >>>>>>>
>> >>>>>>> Regards,
>> >>>>>>>
>> >>>>>>> Marc Schwartz
>> >>>>>>
>> >>>>
>> >>>> _______________________________________________
>> >>>> R-SIG-Mac mailing list
>> >>>> R-SIG-Mac at r-project.org
>> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> >>>>
>> >>>
>> >>
>> >> _______________________________________________
>> >> R-SIG-Mac mailing list
>> >> R-SIG-Mac at r-project.org
>> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> >
>>
>>
>> --
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Emeritus Professor of Applied Statistics, University of Oxford
>> 1 South Parks Road, Oxford OX1 3TG, UK
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From jfox at mcmaster.ca  Wed Aug 13 21:08:23 2014
From: jfox at mcmaster.ca (John Fox)
Date: Wed, 13 Aug 2014 15:08:23 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <CAGx1TMBKBy7H1jmQ86ckyEXGxFQAXkvyFsxit8We8HXqjb7Zuw@mail.gmail.com>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>	<web-522291923@cgpsrv2.cis.mcmaster.ca>	<81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>	<53EB7F67.80203@stats.ox.ac.uk>	<002901cfb717$947c0400$bd740c00$@mcmaster.ca>
	<CAGx1TMBKBy7H1jmQ86ckyEXGxFQAXkvyFsxit8We8HXqjb7Zuw@mail.gmail.com>
Message-ID: <003501cfb729$f43463d0$dc9d2b70$@mcmaster.ca>

Dear Rich,

> -----Original Message-----
> From: Richard M. Heiberger [mailto:rmh at temple.edu]
> Sent: Wednesday, August 13, 2014 1:30 PM
> To: John Fox
> Cc: Prof Brian Ripley; peter dalgaard; R-SIG-Mac
> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> 
> John,
> 
> I have noticed what I think is a related issue.  I normally run R
> under emacs with ESS.
> help files open an emacs buffer.  When I run Rcmdr on the Mac, then
> Rcmdr changes the help
> file location to something on the Mac.  It restores the emacs buffer
> destination when I close Rcmdr.
> Is there, or can there be, an option to leave the help files in emacs?

At the moment, help handling is in flux as a consequence of this thred. Currently in the new Rcmdr version 2.1-0 on R-Forge, there is an Rcmdr help_type option that overrides (and restores on exit) the help_type option in options(). By default, this is set to "html", but you should be able to set it to whatever works with emacs -- I suppose options(Rcmdr=list(help_type="text")) would do the trick.

Please try this out and let me know if it does what you want. The Rcmdr package isn't currently building on R-Forge for reasons that I don't completely understand: R-Forge complains that some package dependencies are missing, but these "missing" packages *are* on CRAN. So you'll have to download the Rcmdr sources via svn checkout svn://svn.r-forge.r-project.org/svnroot/rcmdr/pkg/Rcmdr-current and build the package yourself.

Best,
 John

> Thanks
> 
> Rich
> 
> 
> On Wed, Aug 13, 2014 at 12:56 PM, John Fox <jfox at mcmaster.ca> wrote:
> > Dear Brian and Peter,
> >
> > Thanks for picking up this issue.
> >
> > The behaviour that Brian reports is exactly what I observed, and the
> Tcl/Tk
> > doc that he quotes is what I consulted. It's not surprising to me
> that the R
> > process waits until the Tk window calling tkwait.window() is
> destroyed. I
> > suppose that because the internal help browser runs under the R
> process, it
> > too waits, while an external browser -- as is spawned by help.start()
> --
> > runs in an independent process.
> >
> > As I mentioned, I've removed the call to tkwait.window() in the Rcmdr
> > sources (it's in a "macro" called by every Rcmdr modal dialog) and
> will test
> > whether there are negative consequences. I've observed none so far.
> >
> > BTW, the same issue arises when the Rcmdr is run inside of RStudio,
> which
> > directs help to its own browser.
> >
> > Best,
> >  John
> >
> >> -----Original Message-----
> >> From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk]
> >> Sent: Wednesday, August 13, 2014 11:08 AM
> >> To: peter dalgaard; John Fox
> >> Cc: R-SIG-Mac
> >> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>
> >> On 13/08/2014 15:11, peter dalgaard wrote:
> >> > This isn't unique to tcltk. Anything that blocks the keyboard loop
> >> blocks the help browser too. Try e.g. opening the help for ls, type
> >> Sys.sleep(15) and watch the beach ball in the help browser as you
> try
> >> to scroll in it.
> >>
> >> But Sys.sleep should not be blocking an event loop: from its help
> >>
> >>       The intention is that this function suspends execution of R
> >>       expressions but wakes the process up often enough to respond
> to
> >>       GUI events, typically every 0.5 seconds.
> >>
> >> The mechanisms to mesh event loops which are in place for Sys.sleep
> >> are
> >> R_CheckUserInterrupt (which calls R_ProcessEvents) and
> R_runHandlers.
> >>
> >> Note that the help for tkwait says (on my box)
> >>
> >>         While  the  tkwait command is waiting it processes events in
> >> the
> >> normal
> >>         fashion, so the application will continue to respond to
> user
> >> interac-
> >>         tions.   If  an  event handler invokes tkwait again, the
> nested
> >> call to
> >>         tkwait must complete before the outer call can complete.
> >>
> >> but as this is X11 Tk, it means X11/Unix events.  You can
> demonstrate
> >> that, as e.g the http server still works (use help.start() first).
> >>
> >>
> >> > -pd
> >> >
> >> >
> >> > On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:
> >> >
> >> >> Dear Simon,
> >> >>
> >> >> Here's a simple script that will demonstrate the problem:
> >> >>
> >> >> ----- snip -----
> >> >>
> >> >> library(tcltk)
> >> >>
> >> >> top <- tktoplevel()
> >> >> button <- ttkbutton(top, text="help", command=function()
> >> print(help(lm)))
> >> >> tkgrid(button)
> >> >> tkwait.window(top)
> >> >>
> >> >> ----- snip -----
> >> >>
> >> >> The problem is produced by tkwait.window(), and this call is in
> all
> >> Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause
> >> problems, but obviously it's causing this problem.  I'm also not
> >> certain whether calling tkwait.windows() is necessary and will look
> >> into the consequences of removing it -- I believe that it's been
> there
> >> for many years, from the earliest versions of the Rcmdr.
> >> >>
> >> >> With respect to changing using preferences, this is done only
> until
> >> the Commander() exits. If getting rid of the call to tkwait.window()
> >> proves problematic, I can ask the user for permission in a pop-up
> >> dialog.
> >> >>
> >> >> Thanks for your help,
> >> >> John
> >> >>
> >> >> On Wed, 13 Aug 2014 00:25:30 -0400
> >> >> Simon Urbanek <simon.urbanek at r-project.org> wrote:
> >> >>> John,
> >> >>>
> >> >>> can't you address the underlying issue instead and don't block
> the
> >> event loop? A lot of things don't work if the event loop is blocked
> and
> >> I would argue that changing user's preferences behind the scenes is
> a
> >> violation of the CRAN policies.
> >> >>> I'm happy to help if you send me a bit more details.
> >> >>>
> >> >>> Cheers,
> >> >>> Simon
> >> >>>
> >> >>>
> >> >>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
> >> >>>
> >> >>>> Hi Marc,
> >> >>>>
> >> >>>>> -----Original Message-----
> >> >>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >> >>>>> Sent: Tuesday, August 12, 2014 5:10 PM
> >> >>>>> To: John Fox
> >> >>>>> Cc: r-sig-mac at r-project.org
> >> >>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >> >>>>>
> >> >>>>> Hi John,
> >> >>>>>
> >> >>>>> Happy to help. I recalled seeing something previously on this,
> so
> >> a
> >> >>>>> search using rseek.org was fruitful.
> >> >>>>>
> >> >>>>> The potential gotcha, of course, is if for some reason the GUI
> >> exits in
> >> >>>>> a manner possibly not under your control. The setting would
> not
> >> be
> >> >>>>> returned to the default and the therefore, as you note,
> retained
> >> for a
> >> >>>>> subsequent session where the behavior may not be desired.
> >> >>>>>
> >> >>>>
> >> >>>> Yes, there is that possibility.
> >> >>>>
> >> >>>>> If this is for Rcmdr, perhaps this is something that could be
> >> added to
> >> >>>>> a menu, where the user can alter the behavior in either
> direction
> >> as
> >> >>>>> desired, if that makes sense.
> >> >>>>>
> >> >>>>
> >> >>>> As you guessed, this is for the Rcmdr, where the built-in R.app
> >> browser
> >> >>>> doesn't play well with dialog help buttons -- the browser is
> >> unresponsive
> >> >>>> until the dialog that called it closes -- while an external
> html-
> >> help
> >> >>>> browser works fine.
> >> >>>>
> >> >>>> I've now successfully implemented the approach I outlined, in
> >> which the
> >> >>>> previous setting is restored when the Commander GUI closes. As
> you
> >> point
> >> >>>> out, this isn't bullet-proof, but I think it is the best I can
> do
> >> for now.
> >> >>>> Allowing the user to apply the change would be safer, but users
> >> are unlikely
> >> >>>> to discover the option.
> >> >>>>
> >> >>>>> Simon would need to comment on the potential for alternatives.
> >> >>>>
> >> >>>> Yes, that would be welcome. I still think that a setting via
> >> options() would
> >> >>>> be better.
> >> >>>>
> >> >>>> Thanks again for your help,
> >> >>>> John
> >> >>>>
> >> >>>>>
> >> >>>>> Best regards,
> >> >>>>>
> >> >>>>> Marc
> >> >>>>>
> >> >>>>>
> >> >>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca>
> wrote:
> >> >>>>>
> >> >>>>>> Hi Marc,
> >> >>>>>>
> >> >>>>>> Thanks for this. It does work, and I wasn't aware of it --
> >> you've
> >> >>>>> obviously
> >> >>>>>> done a better job than I did of searching for a solution!
> >> >>>>>>
> >> >>>>>> Although this approach works, it has the disadvantage of
> >> permanently
> >> >>>>>> changing the help browser in R.app, beyond the current
> session,
> >> at
> >> >>>>> least
> >> >>>>>> until the change is explicitly undone. I think that I can
> work
> >> around
> >> >>>>> that
> >> >>>>>> by something like
> >> >>>>>>
> >> >>>>>>        current <- system("defaults read org.R-project.R",
> >> intern=TRUE)
> >> >>>>>>
> >> >>>>>> to discover whether the use.external.help preference exists,
> and
> >> if
> >> >>>>> so, what
> >> >>>>>> its value is; to then set the preference to YES if it's NO or
> >> unset;
> >> >>>>> and
> >> >>>>>> finally to remove the preference on exit.
> >> >>>>>>
> >> >>>>>> Again, thanks -- I think that I can work with this, though it
> >> would
> >> >>>>> in my
> >> >>>>>> opinion be better if the help browser were settable for the
> >> current
> >> >>>>> session
> >> >>>>>> directly via options() in R, or if one could specify the
> browser
> >> in a
> >> >>>>> call
> >> >>>>>> to help().
> >> >>>>>>
> >> >>>>>> Best (and thanks again),
> >> >>>>>> John
> >> >>>>>>
> >> >>>>>>> -----Original Message-----
> >> >>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >> >>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
> >> >>>>>>> To: John Fox
> >> >>>>>>> Cc: r-sig-mac at r-project.org
> >> >>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >> >>>>>>>
> >> >>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca>
> wrote:
> >> >>>>>>>
> >> >>>>>>>> Dear list members,
> >> >>>>>>>>
> >> >>>>>>>> Is there a way to bypass the R.app help browser, and to use
> >> instead
> >> >>>>>>> an alternative browser, such as the one pointed to by
> >> >>>>>>> getOption("browser")?
> >> >>>>>>>>
> >> >>>>>>>> I've tried a number of strategies, including setting
> >> .Platform$GUI
> >> >>>>> <-
> >> >>>>>>> "unknown". The only approach I tried that works is to mask
> the
> >> >>>>> help()
> >> >>>>>>> function with a modified version, but this produces other
> >> problems,
> >> >>>>>>> such as referencing unexported objects from utils and tools.
> >> >>>>>>>>
> >> >>>>>>>> It would be nice if the help() function had a browser
> >> argument,
> >> >>>>>>> similar to that in browseURL(), and defaulting to the
> current
> >> >>>>>>> behaviour.
> >> >>>>>>>>
> >> >>>>>>>> Any suggestions would be appreciated.
> >> >>>>>>>>
> >> >>>>>>>> John
> >> >>>>>>>
> >> >>>>>>>
> >> >>>>>>> John,
> >> >>>>>>>
> >> >>>>>>> I found this post from Simon that seems to work:
> >> >>>>>>>
> >> >>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-
> >> December/006908.html
> >> >>>>>>>
> >> >>>>>>> I tried it on my Mac in the latest version of R.app, which I
> >> >>>>> normally
> >> >>>>>>> do not use and the help system does now popup a browser.
> >> >>>>>>>
> >> >>>>>>>
> >> >>>>>>> Regards,
> >> >>>>>>>
> >> >>>>>>> Marc Schwartz
> >> >>>>>>
> >> >>>>
> >> >>>> _______________________________________________
> >> >>>> R-SIG-Mac mailing list
> >> >>>> R-SIG-Mac at r-project.org
> >> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >> >>>>
> >> >>>
> >> >>
> >> >> _______________________________________________
> >> >> R-SIG-Mac mailing list
> >> >> R-SIG-Mac at r-project.org
> >> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >> >
> >>
> >>
> >> --
> >> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> >> Emeritus Professor of Applied Statistics, University of Oxford
> >> 1 South Parks Road, Oxford OX1 3TG, UK
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From rmh at temple.edu  Thu Aug 14 02:33:47 2014
From: rmh at temple.edu (Richard M. Heiberger)
Date: Wed, 13 Aug 2014 20:33:47 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <003501cfb729$f43463d0$dc9d2b70$@mcmaster.ca>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>
	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>
	<web-522291923@cgpsrv2.cis.mcmaster.ca>
	<81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>
	<53EB7F67.80203@stats.ox.ac.uk>
	<002901cfb717$947c0400$bd740c00$@mcmaster.ca>
	<CAGx1TMBKBy7H1jmQ86ckyEXGxFQAXkvyFsxit8We8HXqjb7Zuw@mail.gmail.com>
	<003501cfb729$f43463d0$dc9d2b70$@mcmaster.ca>
Message-ID: <CAGx1TMCCLORYwcRPeO1LXUTAT8LU9Z1geebCJnZ13LtdWBExkA@mail.gmail.com>

I have a hypothesis why R-Forge might be having trouble.
This is the first time I used Rcmdr in R_3.1.1 on the Mac.
It said it needed to install sem, relimp, lmtest, aplpack.
It also installed the dependency matrixcalc.
matrixcalc is not in the Rcmdr "Suggests:" list.

My guess is that adding matrixcalc to the Suggests list might be the
missing item
that will allow building on R-Forge.

Rich

On Wed, Aug 13, 2014 at 3:08 PM, John Fox <jfox at mcmaster.ca> wrote:
> Dear Rich,
>
>> -----Original Message-----
>> From: Richard M. Heiberger [mailto:rmh at temple.edu]
>> Sent: Wednesday, August 13, 2014 1:30 PM
>> To: John Fox
>> Cc: Prof Brian Ripley; peter dalgaard; R-SIG-Mac
>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>
>> John,
>>
>> I have noticed what I think is a related issue.  I normally run R
>> under emacs with ESS.
>> help files open an emacs buffer.  When I run Rcmdr on the Mac, then
>> Rcmdr changes the help
>> file location to something on the Mac.  It restores the emacs buffer
>> destination when I close Rcmdr.
>> Is there, or can there be, an option to leave the help files in emacs?
>
> At the moment, help handling is in flux as a consequence of this thred. Currently in the new Rcmdr version 2.1-0 on R-Forge, there is an Rcmdr help_type option that overrides (and restores on exit) the help_type option in options(). By default, this is set to "html", but you should be able to set it to whatever works with emacs -- I suppose options(Rcmdr=list(help_type="text")) would do the trick.
>
> Please try this out and let me know if it does what you want. The Rcmdr package isn't currently building on R-Forge for reasons that I don't completely understand: R-Forge complains that some package dependencies are missing, but these "missing" packages *are* on CRAN. So you'll have to download the Rcmdr sources via svn checkout svn://svn.r-forge.r-project.org/svnroot/rcmdr/pkg/Rcmdr-current and build the package yourself.
>
> Best,
>  John
>
>> Thanks
>>
>> Rich
>>
>>
>> On Wed, Aug 13, 2014 at 12:56 PM, John Fox <jfox at mcmaster.ca> wrote:
>> > Dear Brian and Peter,
>> >
>> > Thanks for picking up this issue.
>> >
>> > The behaviour that Brian reports is exactly what I observed, and the
>> Tcl/Tk
>> > doc that he quotes is what I consulted. It's not surprising to me
>> that the R
>> > process waits until the Tk window calling tkwait.window() is
>> destroyed. I
>> > suppose that because the internal help browser runs under the R
>> process, it
>> > too waits, while an external browser -- as is spawned by help.start()
>> --
>> > runs in an independent process.
>> >
>> > As I mentioned, I've removed the call to tkwait.window() in the Rcmdr
>> > sources (it's in a "macro" called by every Rcmdr modal dialog) and
>> will test
>> > whether there are negative consequences. I've observed none so far.
>> >
>> > BTW, the same issue arises when the Rcmdr is run inside of RStudio,
>> which
>> > directs help to its own browser.
>> >
>> > Best,
>> >  John
>> >
>> >> -----Original Message-----
>> >> From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk]
>> >> Sent: Wednesday, August 13, 2014 11:08 AM
>> >> To: peter dalgaard; John Fox
>> >> Cc: R-SIG-Mac
>> >> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>> >>
>> >> On 13/08/2014 15:11, peter dalgaard wrote:
>> >> > This isn't unique to tcltk. Anything that blocks the keyboard loop
>> >> blocks the help browser too. Try e.g. opening the help for ls, type
>> >> Sys.sleep(15) and watch the beach ball in the help browser as you
>> try
>> >> to scroll in it.
>> >>
>> >> But Sys.sleep should not be blocking an event loop: from its help
>> >>
>> >>       The intention is that this function suspends execution of R
>> >>       expressions but wakes the process up often enough to respond
>> to
>> >>       GUI events, typically every 0.5 seconds.
>> >>
>> >> The mechanisms to mesh event loops which are in place for Sys.sleep
>> >> are
>> >> R_CheckUserInterrupt (which calls R_ProcessEvents) and
>> R_runHandlers.
>> >>
>> >> Note that the help for tkwait says (on my box)
>> >>
>> >>         While  the  tkwait command is waiting it processes events in
>> >> the
>> >> normal
>> >>         fashion, so the application will continue to respond to
>> user
>> >> interac-
>> >>         tions.   If  an  event handler invokes tkwait again, the
>> nested
>> >> call to
>> >>         tkwait must complete before the outer call can complete.
>> >>
>> >> but as this is X11 Tk, it means X11/Unix events.  You can
>> demonstrate
>> >> that, as e.g the http server still works (use help.start() first).
>> >>
>> >>
>> >> > -pd
>> >> >
>> >> >
>> >> > On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:
>> >> >
>> >> >> Dear Simon,
>> >> >>
>> >> >> Here's a simple script that will demonstrate the problem:
>> >> >>
>> >> >> ----- snip -----
>> >> >>
>> >> >> library(tcltk)
>> >> >>
>> >> >> top <- tktoplevel()
>> >> >> button <- ttkbutton(top, text="help", command=function()
>> >> print(help(lm)))
>> >> >> tkgrid(button)
>> >> >> tkwait.window(top)
>> >> >>
>> >> >> ----- snip -----
>> >> >>
>> >> >> The problem is produced by tkwait.window(), and this call is in
>> all
>> >> Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause
>> >> problems, but obviously it's causing this problem.  I'm also not
>> >> certain whether calling tkwait.windows() is necessary and will look
>> >> into the consequences of removing it -- I believe that it's been
>> there
>> >> for many years, from the earliest versions of the Rcmdr.
>> >> >>
>> >> >> With respect to changing using preferences, this is done only
>> until
>> >> the Commander() exits. If getting rid of the call to tkwait.window()
>> >> proves problematic, I can ask the user for permission in a pop-up
>> >> dialog.
>> >> >>
>> >> >> Thanks for your help,
>> >> >> John
>> >> >>
>> >> >> On Wed, 13 Aug 2014 00:25:30 -0400
>> >> >> Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> >> >>> John,
>> >> >>>
>> >> >>> can't you address the underlying issue instead and don't block
>> the
>> >> event loop? A lot of things don't work if the event loop is blocked
>> and
>> >> I would argue that changing user's preferences behind the scenes is
>> a
>> >> violation of the CRAN policies.
>> >> >>> I'm happy to help if you send me a bit more details.
>> >> >>>
>> >> >>> Cheers,
>> >> >>> Simon
>> >> >>>
>> >> >>>
>> >> >>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
>> >> >>>
>> >> >>>> Hi Marc,
>> >> >>>>
>> >> >>>>> -----Original Message-----
>> >> >>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>> >> >>>>> Sent: Tuesday, August 12, 2014 5:10 PM
>> >> >>>>> To: John Fox
>> >> >>>>> Cc: r-sig-mac at r-project.org
>> >> >>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>> >> >>>>>
>> >> >>>>> Hi John,
>> >> >>>>>
>> >> >>>>> Happy to help. I recalled seeing something previously on this,
>> so
>> >> a
>> >> >>>>> search using rseek.org was fruitful.
>> >> >>>>>
>> >> >>>>> The potential gotcha, of course, is if for some reason the GUI
>> >> exits in
>> >> >>>>> a manner possibly not under your control. The setting would
>> not
>> >> be
>> >> >>>>> returned to the default and the therefore, as you note,
>> retained
>> >> for a
>> >> >>>>> subsequent session where the behavior may not be desired.
>> >> >>>>>
>> >> >>>>
>> >> >>>> Yes, there is that possibility.
>> >> >>>>
>> >> >>>>> If this is for Rcmdr, perhaps this is something that could be
>> >> added to
>> >> >>>>> a menu, where the user can alter the behavior in either
>> direction
>> >> as
>> >> >>>>> desired, if that makes sense.
>> >> >>>>>
>> >> >>>>
>> >> >>>> As you guessed, this is for the Rcmdr, where the built-in R.app
>> >> browser
>> >> >>>> doesn't play well with dialog help buttons -- the browser is
>> >> unresponsive
>> >> >>>> until the dialog that called it closes -- while an external
>> html-
>> >> help
>> >> >>>> browser works fine.
>> >> >>>>
>> >> >>>> I've now successfully implemented the approach I outlined, in
>> >> which the
>> >> >>>> previous setting is restored when the Commander GUI closes. As
>> you
>> >> point
>> >> >>>> out, this isn't bullet-proof, but I think it is the best I can
>> do
>> >> for now.
>> >> >>>> Allowing the user to apply the change would be safer, but users
>> >> are unlikely
>> >> >>>> to discover the option.
>> >> >>>>
>> >> >>>>> Simon would need to comment on the potential for alternatives.
>> >> >>>>
>> >> >>>> Yes, that would be welcome. I still think that a setting via
>> >> options() would
>> >> >>>> be better.
>> >> >>>>
>> >> >>>> Thanks again for your help,
>> >> >>>> John
>> >> >>>>
>> >> >>>>>
>> >> >>>>> Best regards,
>> >> >>>>>
>> >> >>>>> Marc
>> >> >>>>>
>> >> >>>>>
>> >> >>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca>
>> wrote:
>> >> >>>>>
>> >> >>>>>> Hi Marc,
>> >> >>>>>>
>> >> >>>>>> Thanks for this. It does work, and I wasn't aware of it --
>> >> you've
>> >> >>>>> obviously
>> >> >>>>>> done a better job than I did of searching for a solution!
>> >> >>>>>>
>> >> >>>>>> Although this approach works, it has the disadvantage of
>> >> permanently
>> >> >>>>>> changing the help browser in R.app, beyond the current
>> session,
>> >> at
>> >> >>>>> least
>> >> >>>>>> until the change is explicitly undone. I think that I can
>> work
>> >> around
>> >> >>>>> that
>> >> >>>>>> by something like
>> >> >>>>>>
>> >> >>>>>>        current <- system("defaults read org.R-project.R",
>> >> intern=TRUE)
>> >> >>>>>>
>> >> >>>>>> to discover whether the use.external.help preference exists,
>> and
>> >> if
>> >> >>>>> so, what
>> >> >>>>>> its value is; to then set the preference to YES if it's NO or
>> >> unset;
>> >> >>>>> and
>> >> >>>>>> finally to remove the preference on exit.
>> >> >>>>>>
>> >> >>>>>> Again, thanks -- I think that I can work with this, though it
>> >> would
>> >> >>>>> in my
>> >> >>>>>> opinion be better if the help browser were settable for the
>> >> current
>> >> >>>>> session
>> >> >>>>>> directly via options() in R, or if one could specify the
>> browser
>> >> in a
>> >> >>>>> call
>> >> >>>>>> to help().
>> >> >>>>>>
>> >> >>>>>> Best (and thanks again),
>> >> >>>>>> John
>> >> >>>>>>
>> >> >>>>>>> -----Original Message-----
>> >> >>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>> >> >>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
>> >> >>>>>>> To: John Fox
>> >> >>>>>>> Cc: r-sig-mac at r-project.org
>> >> >>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>> >> >>>>>>>
>> >> >>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca>
>> wrote:
>> >> >>>>>>>
>> >> >>>>>>>> Dear list members,
>> >> >>>>>>>>
>> >> >>>>>>>> Is there a way to bypass the R.app help browser, and to use
>> >> instead
>> >> >>>>>>> an alternative browser, such as the one pointed to by
>> >> >>>>>>> getOption("browser")?
>> >> >>>>>>>>
>> >> >>>>>>>> I've tried a number of strategies, including setting
>> >> .Platform$GUI
>> >> >>>>> <-
>> >> >>>>>>> "unknown". The only approach I tried that works is to mask
>> the
>> >> >>>>> help()
>> >> >>>>>>> function with a modified version, but this produces other
>> >> problems,
>> >> >>>>>>> such as referencing unexported objects from utils and tools.
>> >> >>>>>>>>
>> >> >>>>>>>> It would be nice if the help() function had a browser
>> >> argument,
>> >> >>>>>>> similar to that in browseURL(), and defaulting to the
>> current
>> >> >>>>>>> behaviour.
>> >> >>>>>>>>
>> >> >>>>>>>> Any suggestions would be appreciated.
>> >> >>>>>>>>
>> >> >>>>>>>> John
>> >> >>>>>>>
>> >> >>>>>>>
>> >> >>>>>>> John,
>> >> >>>>>>>
>> >> >>>>>>> I found this post from Simon that seems to work:
>> >> >>>>>>>
>> >> >>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-
>> >> December/006908.html
>> >> >>>>>>>
>> >> >>>>>>> I tried it on my Mac in the latest version of R.app, which I
>> >> >>>>> normally
>> >> >>>>>>> do not use and the help system does now popup a browser.
>> >> >>>>>>>
>> >> >>>>>>>
>> >> >>>>>>> Regards,
>> >> >>>>>>>
>> >> >>>>>>> Marc Schwartz
>> >> >>>>>>
>> >> >>>>
>> >> >>>> _______________________________________________
>> >> >>>> R-SIG-Mac mailing list
>> >> >>>> R-SIG-Mac at r-project.org
>> >> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> >> >>>>
>> >> >>>
>> >> >>
>> >> >> _______________________________________________
>> >> >> R-SIG-Mac mailing list
>> >> >> R-SIG-Mac at r-project.org
>> >> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> >> >
>> >>
>> >>
>> >> --
>> >> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> >> Emeritus Professor of Applied Statistics, University of Oxford
>> >> 1 South Parks Road, Oxford OX1 3TG, UK
>> >
>> > _______________________________________________
>> > R-SIG-Mac mailing list
>> > R-SIG-Mac at r-project.org
>> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From rmh at temple.edu  Thu Aug 14 03:11:34 2014
From: rmh at temple.edu (Richard M. Heiberger)
Date: Wed, 13 Aug 2014 21:11:34 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <CAGx1TMCCLORYwcRPeO1LXUTAT8LU9Z1geebCJnZ13LtdWBExkA@mail.gmail.com>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>
	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>
	<web-522291923@cgpsrv2.cis.mcmaster.ca>
	<81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>
	<53EB7F67.80203@stats.ox.ac.uk>
	<002901cfb717$947c0400$bd740c00$@mcmaster.ca>
	<CAGx1TMBKBy7H1jmQ86ckyEXGxFQAXkvyFsxit8We8HXqjb7Zuw@mail.gmail.com>
	<003501cfb729$f43463d0$dc9d2b70$@mcmaster.ca>
	<CAGx1TMCCLORYwcRPeO1LXUTAT8LU9Z1geebCJnZ13LtdWBExkA@mail.gmail.com>
Message-ID: <CAGx1TMBDetiUy+0x9De4fhyAxpMDyT-AwHVKpAKvGkTQyYnuYQ@mail.gmail.com>

I downloaded Rcmdr_2.1-0 and installed it on my Mac.
I am using
57531778 Jul 16 23:58 R-3.1-branch-mavericks.pkg
R version 3.1.1 Patched (2014-07-16 r66175)
Rcmdr needs RcmdrMisc which I see is in the same
svn download, so I installed it too.

I don't see anything on the Tools > Options that looks relevant to the
help system.

options("Rcmdr") comes up NULL.

I tried

> Rcmdr <- list( "help_type"="text")
> options()$Rcmdr
NULL
> options(Rcmdr=Rcmdr)
> options("Rcmdr")
$Rcmdr
$Rcmdr$help_type
[1] "text"

and also
> options("help_type"="text")

Neither helped.  Help files are sent to an X11 viewer.

I detached Rcmdr with unload=TRUE and help files went back to an emacs buffer.

Please suggest something else for me to try.

Rich


On Wed, Aug 13, 2014 at 8:33 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
> I have a hypothesis why R-Forge might be having trouble.
> This is the first time I used Rcmdr in R_3.1.1 on the Mac.
> It said it needed to install sem, relimp, lmtest, aplpack.
> It also installed the dependency matrixcalc.
> matrixcalc is not in the Rcmdr "Suggests:" list.
>
> My guess is that adding matrixcalc to the Suggests list might be the
> missing item
> that will allow building on R-Forge.
>
> Rich
>
> On Wed, Aug 13, 2014 at 3:08 PM, John Fox <jfox at mcmaster.ca> wrote:
>> Dear Rich,
>>
>>> -----Original Message-----
>>> From: Richard M. Heiberger [mailto:rmh at temple.edu]
>>> Sent: Wednesday, August 13, 2014 1:30 PM
>>> To: John Fox
>>> Cc: Prof Brian Ripley; peter dalgaard; R-SIG-Mac
>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>>
>>> John,
>>>
>>> I have noticed what I think is a related issue.  I normally run R
>>> under emacs with ESS.
>>> help files open an emacs buffer.  When I run Rcmdr on the Mac, then
>>> Rcmdr changes the help
>>> file location to something on the Mac.  It restores the emacs buffer
>>> destination when I close Rcmdr.
>>> Is there, or can there be, an option to leave the help files in emacs?
>>
>> At the moment, help handling is in flux as a consequence of this thred. Currently in the new Rcmdr version 2.1-0 on R-Forge, there is an Rcmdr help_type option that overrides (and restores on exit) the help_type option in options(). By default, this is set to "html", but you should be able to set it to whatever works with emacs -- I suppose options(Rcmdr=list(help_type="text")) would do the trick.
>>
>> Please try this out and let me know if it does what you want. The Rcmdr package isn't currently building on R-Forge for reasons that I don't completely understand: R-Forge complains that some package dependencies are missing, but these "missing" packages *are* on CRAN. So you'll have to download the Rcmdr sources via svn checkout svn://svn.r-forge.r-project.org/svnroot/rcmdr/pkg/Rcmdr-current and build the package yourself.
>>
>> Best,
>>  John
>>
>>> Thanks
>>>
>>> Rich
>>>
>>>
>>> On Wed, Aug 13, 2014 at 12:56 PM, John Fox <jfox at mcmaster.ca> wrote:
>>> > Dear Brian and Peter,
>>> >
>>> > Thanks for picking up this issue.
>>> >
>>> > The behaviour that Brian reports is exactly what I observed, and the
>>> Tcl/Tk
>>> > doc that he quotes is what I consulted. It's not surprising to me
>>> that the R
>>> > process waits until the Tk window calling tkwait.window() is
>>> destroyed. I
>>> > suppose that because the internal help browser runs under the R
>>> process, it
>>> > too waits, while an external browser -- as is spawned by help.start()
>>> --
>>> > runs in an independent process.
>>> >
>>> > As I mentioned, I've removed the call to tkwait.window() in the Rcmdr
>>> > sources (it's in a "macro" called by every Rcmdr modal dialog) and
>>> will test
>>> > whether there are negative consequences. I've observed none so far.
>>> >
>>> > BTW, the same issue arises when the Rcmdr is run inside of RStudio,
>>> which
>>> > directs help to its own browser.
>>> >
>>> > Best,
>>> >  John
>>> >
>>> >> -----Original Message-----
>>> >> From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk]
>>> >> Sent: Wednesday, August 13, 2014 11:08 AM
>>> >> To: peter dalgaard; John Fox
>>> >> Cc: R-SIG-Mac
>>> >> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>> >>
>>> >> On 13/08/2014 15:11, peter dalgaard wrote:
>>> >> > This isn't unique to tcltk. Anything that blocks the keyboard loop
>>> >> blocks the help browser too. Try e.g. opening the help for ls, type
>>> >> Sys.sleep(15) and watch the beach ball in the help browser as you
>>> try
>>> >> to scroll in it.
>>> >>
>>> >> But Sys.sleep should not be blocking an event loop: from its help
>>> >>
>>> >>       The intention is that this function suspends execution of R
>>> >>       expressions but wakes the process up often enough to respond
>>> to
>>> >>       GUI events, typically every 0.5 seconds.
>>> >>
>>> >> The mechanisms to mesh event loops which are in place for Sys.sleep
>>> >> are
>>> >> R_CheckUserInterrupt (which calls R_ProcessEvents) and
>>> R_runHandlers.
>>> >>
>>> >> Note that the help for tkwait says (on my box)
>>> >>
>>> >>         While  the  tkwait command is waiting it processes events in
>>> >> the
>>> >> normal
>>> >>         fashion, so the application will continue to respond to
>>> user
>>> >> interac-
>>> >>         tions.   If  an  event handler invokes tkwait again, the
>>> nested
>>> >> call to
>>> >>         tkwait must complete before the outer call can complete.
>>> >>
>>> >> but as this is X11 Tk, it means X11/Unix events.  You can
>>> demonstrate
>>> >> that, as e.g the http server still works (use help.start() first).
>>> >>
>>> >>
>>> >> > -pd
>>> >> >
>>> >> >
>>> >> > On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:
>>> >> >
>>> >> >> Dear Simon,
>>> >> >>
>>> >> >> Here's a simple script that will demonstrate the problem:
>>> >> >>
>>> >> >> ----- snip -----
>>> >> >>
>>> >> >> library(tcltk)
>>> >> >>
>>> >> >> top <- tktoplevel()
>>> >> >> button <- ttkbutton(top, text="help", command=function()
>>> >> print(help(lm)))
>>> >> >> tkgrid(button)
>>> >> >> tkwait.window(top)
>>> >> >>
>>> >> >> ----- snip -----
>>> >> >>
>>> >> >> The problem is produced by tkwait.window(), and this call is in
>>> all
>>> >> Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause
>>> >> problems, but obviously it's causing this problem.  I'm also not
>>> >> certain whether calling tkwait.windows() is necessary and will look
>>> >> into the consequences of removing it -- I believe that it's been
>>> there
>>> >> for many years, from the earliest versions of the Rcmdr.
>>> >> >>
>>> >> >> With respect to changing using preferences, this is done only
>>> until
>>> >> the Commander() exits. If getting rid of the call to tkwait.window()
>>> >> proves problematic, I can ask the user for permission in a pop-up
>>> >> dialog.
>>> >> >>
>>> >> >> Thanks for your help,
>>> >> >> John
>>> >> >>
>>> >> >> On Wed, 13 Aug 2014 00:25:30 -0400
>>> >> >> Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>> >> >>> John,
>>> >> >>>
>>> >> >>> can't you address the underlying issue instead and don't block
>>> the
>>> >> event loop? A lot of things don't work if the event loop is blocked
>>> and
>>> >> I would argue that changing user's preferences behind the scenes is
>>> a
>>> >> violation of the CRAN policies.
>>> >> >>> I'm happy to help if you send me a bit more details.
>>> >> >>>
>>> >> >>> Cheers,
>>> >> >>> Simon
>>> >> >>>
>>> >> >>>
>>> >> >>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
>>> >> >>>
>>> >> >>>> Hi Marc,
>>> >> >>>>
>>> >> >>>>> -----Original Message-----
>>> >> >>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>>> >> >>>>> Sent: Tuesday, August 12, 2014 5:10 PM
>>> >> >>>>> To: John Fox
>>> >> >>>>> Cc: r-sig-mac at r-project.org
>>> >> >>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>> >> >>>>>
>>> >> >>>>> Hi John,
>>> >> >>>>>
>>> >> >>>>> Happy to help. I recalled seeing something previously on this,
>>> so
>>> >> a
>>> >> >>>>> search using rseek.org was fruitful.
>>> >> >>>>>
>>> >> >>>>> The potential gotcha, of course, is if for some reason the GUI
>>> >> exits in
>>> >> >>>>> a manner possibly not under your control. The setting would
>>> not
>>> >> be
>>> >> >>>>> returned to the default and the therefore, as you note,
>>> retained
>>> >> for a
>>> >> >>>>> subsequent session where the behavior may not be desired.
>>> >> >>>>>
>>> >> >>>>
>>> >> >>>> Yes, there is that possibility.
>>> >> >>>>
>>> >> >>>>> If this is for Rcmdr, perhaps this is something that could be
>>> >> added to
>>> >> >>>>> a menu, where the user can alter the behavior in either
>>> direction
>>> >> as
>>> >> >>>>> desired, if that makes sense.
>>> >> >>>>>
>>> >> >>>>
>>> >> >>>> As you guessed, this is for the Rcmdr, where the built-in R.app
>>> >> browser
>>> >> >>>> doesn't play well with dialog help buttons -- the browser is
>>> >> unresponsive
>>> >> >>>> until the dialog that called it closes -- while an external
>>> html-
>>> >> help
>>> >> >>>> browser works fine.
>>> >> >>>>
>>> >> >>>> I've now successfully implemented the approach I outlined, in
>>> >> which the
>>> >> >>>> previous setting is restored when the Commander GUI closes. As
>>> you
>>> >> point
>>> >> >>>> out, this isn't bullet-proof, but I think it is the best I can
>>> do
>>> >> for now.
>>> >> >>>> Allowing the user to apply the change would be safer, but users
>>> >> are unlikely
>>> >> >>>> to discover the option.
>>> >> >>>>
>>> >> >>>>> Simon would need to comment on the potential for alternatives.
>>> >> >>>>
>>> >> >>>> Yes, that would be welcome. I still think that a setting via
>>> >> options() would
>>> >> >>>> be better.
>>> >> >>>>
>>> >> >>>> Thanks again for your help,
>>> >> >>>> John
>>> >> >>>>
>>> >> >>>>>
>>> >> >>>>> Best regards,
>>> >> >>>>>
>>> >> >>>>> Marc
>>> >> >>>>>
>>> >> >>>>>
>>> >> >>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca>
>>> wrote:
>>> >> >>>>>
>>> >> >>>>>> Hi Marc,
>>> >> >>>>>>
>>> >> >>>>>> Thanks for this. It does work, and I wasn't aware of it --
>>> >> you've
>>> >> >>>>> obviously
>>> >> >>>>>> done a better job than I did of searching for a solution!
>>> >> >>>>>>
>>> >> >>>>>> Although this approach works, it has the disadvantage of
>>> >> permanently
>>> >> >>>>>> changing the help browser in R.app, beyond the current
>>> session,
>>> >> at
>>> >> >>>>> least
>>> >> >>>>>> until the change is explicitly undone. I think that I can
>>> work
>>> >> around
>>> >> >>>>> that
>>> >> >>>>>> by something like
>>> >> >>>>>>
>>> >> >>>>>>        current <- system("defaults read org.R-project.R",
>>> >> intern=TRUE)
>>> >> >>>>>>
>>> >> >>>>>> to discover whether the use.external.help preference exists,
>>> and
>>> >> if
>>> >> >>>>> so, what
>>> >> >>>>>> its value is; to then set the preference to YES if it's NO or
>>> >> unset;
>>> >> >>>>> and
>>> >> >>>>>> finally to remove the preference on exit.
>>> >> >>>>>>
>>> >> >>>>>> Again, thanks -- I think that I can work with this, though it
>>> >> would
>>> >> >>>>> in my
>>> >> >>>>>> opinion be better if the help browser were settable for the
>>> >> current
>>> >> >>>>> session
>>> >> >>>>>> directly via options() in R, or if one could specify the
>>> browser
>>> >> in a
>>> >> >>>>> call
>>> >> >>>>>> to help().
>>> >> >>>>>>
>>> >> >>>>>> Best (and thanks again),
>>> >> >>>>>> John
>>> >> >>>>>>
>>> >> >>>>>>> -----Original Message-----
>>> >> >>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
>>> >> >>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
>>> >> >>>>>>> To: John Fox
>>> >> >>>>>>> Cc: r-sig-mac at r-project.org
>>> >> >>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
>>> >> >>>>>>>
>>> >> >>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca>
>>> wrote:
>>> >> >>>>>>>
>>> >> >>>>>>>> Dear list members,
>>> >> >>>>>>>>
>>> >> >>>>>>>> Is there a way to bypass the R.app help browser, and to use
>>> >> instead
>>> >> >>>>>>> an alternative browser, such as the one pointed to by
>>> >> >>>>>>> getOption("browser")?
>>> >> >>>>>>>>
>>> >> >>>>>>>> I've tried a number of strategies, including setting
>>> >> .Platform$GUI
>>> >> >>>>> <-
>>> >> >>>>>>> "unknown". The only approach I tried that works is to mask
>>> the
>>> >> >>>>> help()
>>> >> >>>>>>> function with a modified version, but this produces other
>>> >> problems,
>>> >> >>>>>>> such as referencing unexported objects from utils and tools.
>>> >> >>>>>>>>
>>> >> >>>>>>>> It would be nice if the help() function had a browser
>>> >> argument,
>>> >> >>>>>>> similar to that in browseURL(), and defaulting to the
>>> current
>>> >> >>>>>>> behaviour.
>>> >> >>>>>>>>
>>> >> >>>>>>>> Any suggestions would be appreciated.
>>> >> >>>>>>>>
>>> >> >>>>>>>> John
>>> >> >>>>>>>
>>> >> >>>>>>>
>>> >> >>>>>>> John,
>>> >> >>>>>>>
>>> >> >>>>>>> I found this post from Simon that seems to work:
>>> >> >>>>>>>
>>> >> >>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-
>>> >> December/006908.html
>>> >> >>>>>>>
>>> >> >>>>>>> I tried it on my Mac in the latest version of R.app, which I
>>> >> >>>>> normally
>>> >> >>>>>>> do not use and the help system does now popup a browser.
>>> >> >>>>>>>
>>> >> >>>>>>>
>>> >> >>>>>>> Regards,
>>> >> >>>>>>>
>>> >> >>>>>>> Marc Schwartz
>>> >> >>>>>>
>>> >> >>>>
>>> >> >>>> _______________________________________________
>>> >> >>>> R-SIG-Mac mailing list
>>> >> >>>> R-SIG-Mac at r-project.org
>>> >> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> >> >>>>
>>> >> >>>
>>> >> >>
>>> >> >> _______________________________________________
>>> >> >> R-SIG-Mac mailing list
>>> >> >> R-SIG-Mac at r-project.org
>>> >> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> >> >
>>> >>
>>> >>
>>> >> --
>>> >> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>>> >> Emeritus Professor of Applied Statistics, University of Oxford
>>> >> 1 South Parks Road, Oxford OX1 3TG, UK
>>> >
>>> > _______________________________________________
>>> > R-SIG-Mac mailing list
>>> > R-SIG-Mac at r-project.org
>>> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>


From jfox at mcmaster.ca  Thu Aug 14 14:09:07 2014
From: jfox at mcmaster.ca (John Fox)
Date: Thu, 14 Aug 2014 08:09:07 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <CAGx1TMCCLORYwcRPeO1LXUTAT8LU9Z1geebCJnZ13LtdWBExkA@mail.gmail.com>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>
	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>
	<web-522291923@cgpsrv2.cis.mcmaster.ca>
	<81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>
	<53EB7F67.80203@stats.ox.ac.uk>
	<002901cfb717$947c0400$bd740c00$@mcmaster.ca>
	<CAGx1TMBKBy7H1jmQ86ckyEXGxFQAXkvyFsxit8We8HXqjb7Zuw@mail.gmail.com>
	<003501cfb729$f43463d0$dc9d2b70$@mcmaster.ca>
	<CAGx1TMCCLORYwcRPeO1LXUTAT8LU9Z1geebCJnZ13LtdWBExkA@mail.gmail.com>
Message-ID: <web-522442973@cgpsrv2.cis.mcmaster.ca>

Dear Rich,

On Wed, 13 Aug 2014 20:33:47 -0400
 "Richard M. Heiberger" <rmh at temple.edu> wrote:
> I have a hypothesis why R-Forge might be having trouble.
> This is the first time I used Rcmdr in R_3.1.1 on the Mac.
> It said it needed to install sem, relimp, lmtest, aplpack.
> It also installed the dependency matrixcalc.
> matrixcalc is not in the Rcmdr "Suggests:" list.
> 
> My guess is that adding matrixcalc to the Suggests list might be the
> missing item
> that will allow building on R-Forge.

No, these packages in "Suggests" are not new in version 2.1-0 of the Rcmdr; they are also in the current CRAN version. matrixcalc is required by sem, and that indirect dependency doesn't cause a problem.

Here's what R-Forge isn't finding: " 'abind' 'aplpack' 'colorspace' 'effects' 'e1071' 'Hmisc' 'knitr'
  'leaps' 'lmtest' 'markdown' 'multcomp' 'relimp' 'rgl' 'rJava' 'RODBC'
  'sem' ".

BTW, I noticed that this problem doesn't occur anymore on the Linux platform on R-Forge, just on Windows, so maybe it's being fixed.

Thanks for trying to help,
 John

> 
> Rich
> 
> On Wed, Aug 13, 2014 at 3:08 PM, John Fox <jfox at mcmaster.ca> wrote:
> > Dear Rich,
> >
> >> -----Original Message-----
> >> From: Richard M. Heiberger [mailto:rmh at temple.edu]
> >> Sent: Wednesday, August 13, 2014 1:30 PM
> >> To: John Fox
> >> Cc: Prof Brian Ripley; peter dalgaard; R-SIG-Mac
> >> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>
> >> John,
> >>
> >> I have noticed what I think is a related issue.  I normally run R
> >> under emacs with ESS.
> >> help files open an emacs buffer.  When I run Rcmdr on the Mac, then
> >> Rcmdr changes the help
> >> file location to something on the Mac.  It restores the emacs buffer
> >> destination when I close Rcmdr.
> >> Is there, or can there be, an option to leave the help files in emacs?
> >
> > At the moment, help handling is in flux as a consequence of this thred. Currently in the new Rcmdr version 2.1-0 on R-Forge, there is an Rcmdr help_type option that overrides (and restores on exit) the help_type option in options(). By default, this is set to "html", but you should be able to set it to whatever works with emacs -- I suppose options(Rcmdr=list(help_type="text")) would do the trick.
> >
> > Please try this out and let me know if it does what you want. The Rcmdr package isn't currently building on R-Forge for reasons that I don't completely understand: R-Forge complains that some package dependencies are missing, but these "missing" packages *are* on CRAN. So you'll have to download the Rcmdr sources via svn checkout svn://svn.r-forge.r-project.org/svnroot/rcmdr/pkg/Rcmdr-current and build the package yourself.
> >
> > Best,
> >  John
> >
> >> Thanks
> >>
> >> Rich
> >>
> >>
> >> On Wed, Aug 13, 2014 at 12:56 PM, John Fox <jfox at mcmaster.ca> wrote:
> >> > Dear Brian and Peter,
> >> >
> >> > Thanks for picking up this issue.
> >> >
> >> > The behaviour that Brian reports is exactly what I observed, and the
> >> Tcl/Tk
> >> > doc that he quotes is what I consulted. It's not surprising to me
> >> that the R
> >> > process waits until the Tk window calling tkwait.window() is
> >> destroyed. I
> >> > suppose that because the internal help browser runs under the R
> >> process, it
> >> > too waits, while an external browser -- as is spawned by help.start()
> >> --
> >> > runs in an independent process.
> >> >
> >> > As I mentioned, I've removed the call to tkwait.window() in the Rcmdr
> >> > sources (it's in a "macro" called by every Rcmdr modal dialog) and
> >> will test
> >> > whether there are negative consequences. I've observed none so far.
> >> >
> >> > BTW, the same issue arises when the Rcmdr is run inside of RStudio,
> >> which
> >> > directs help to its own browser.
> >> >
> >> > Best,
> >> >  John
> >> >
> >> >> -----Original Message-----
> >> >> From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk]
> >> >> Sent: Wednesday, August 13, 2014 11:08 AM
> >> >> To: peter dalgaard; John Fox
> >> >> Cc: R-SIG-Mac
> >> >> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >> >>
> >> >> On 13/08/2014 15:11, peter dalgaard wrote:
> >> >> > This isn't unique to tcltk. Anything that blocks the keyboard loop
> >> >> blocks the help browser too. Try e.g. opening the help for ls, type
> >> >> Sys.sleep(15) and watch the beach ball in the help browser as you
> >> try
> >> >> to scroll in it.
> >> >>
> >> >> But Sys.sleep should not be blocking an event loop: from its help
> >> >>
> >> >>       The intention is that this function suspends execution of R
> >> >>       expressions but wakes the process up often enough to respond
> >> to
> >> >>       GUI events, typically every 0.5 seconds.
> >> >>
> >> >> The mechanisms to mesh event loops which are in place for Sys.sleep
> >> >> are
> >> >> R_CheckUserInterrupt (which calls R_ProcessEvents) and
> >> R_runHandlers.
> >> >>
> >> >> Note that the help for tkwait says (on my box)
> >> >>
> >> >>         While  the  tkwait command is waiting it processes events in
> >> >> the
> >> >> normal
> >> >>         fashion, so the application will continue to respond to
> >> user
> >> >> interac-
> >> >>         tions.   If  an  event handler invokes tkwait again, the
> >> nested
> >> >> call to
> >> >>         tkwait must complete before the outer call can complete.
> >> >>
> >> >> but as this is X11 Tk, it means X11/Unix events.  You can
> >> demonstrate
> >> >> that, as e.g the http server still works (use help.start() first).
> >> >>
> >> >>
> >> >> > -pd
> >> >> >
> >> >> >
> >> >> > On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:
> >> >> >
> >> >> >> Dear Simon,
> >> >> >>
> >> >> >> Here's a simple script that will demonstrate the problem:
> >> >> >>
> >> >> >> ----- snip -----
> >> >> >>
> >> >> >> library(tcltk)
> >> >> >>
> >> >> >> top <- tktoplevel()
> >> >> >> button <- ttkbutton(top, text="help", command=function()
> >> >> print(help(lm)))
> >> >> >> tkgrid(button)
> >> >> >> tkwait.window(top)
> >> >> >>
> >> >> >> ----- snip -----
> >> >> >>
> >> >> >> The problem is produced by tkwait.window(), and this call is in
> >> all
> >> >> Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause
> >> >> problems, but obviously it's causing this problem.  I'm also not
> >> >> certain whether calling tkwait.windows() is necessary and will look
> >> >> into the consequences of removing it -- I believe that it's been
> >> there
> >> >> for many years, from the earliest versions of the Rcmdr.
> >> >> >>
> >> >> >> With respect to changing using preferences, this is done only
> >> until
> >> >> the Commander() exits. If getting rid of the call to tkwait.window()
> >> >> proves problematic, I can ask the user for permission in a pop-up
> >> >> dialog.
> >> >> >>
> >> >> >> Thanks for your help,
> >> >> >> John
> >> >> >>
> >> >> >> On Wed, 13 Aug 2014 00:25:30 -0400
> >> >> >> Simon Urbanek <simon.urbanek at r-project.org> wrote:
> >> >> >>> John,
> >> >> >>>
> >> >> >>> can't you address the underlying issue instead and don't block
> >> the
> >> >> event loop? A lot of things don't work if the event loop is blocked
> >> and
> >> >> I would argue that changing user's preferences behind the scenes is
> >> a
> >> >> violation of the CRAN policies.
> >> >> >>> I'm happy to help if you send me a bit more details.
> >> >> >>>
> >> >> >>> Cheers,
> >> >> >>> Simon
> >> >> >>>
> >> >> >>>
> >> >> >>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
> >> >> >>>
> >> >> >>>> Hi Marc,
> >> >> >>>>
> >> >> >>>>> -----Original Message-----
> >> >> >>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >> >> >>>>> Sent: Tuesday, August 12, 2014 5:10 PM
> >> >> >>>>> To: John Fox
> >> >> >>>>> Cc: r-sig-mac at r-project.org
> >> >> >>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >> >> >>>>>
> >> >> >>>>> Hi John,
> >> >> >>>>>
> >> >> >>>>> Happy to help. I recalled seeing something previously on this,
> >> so
> >> >> a
> >> >> >>>>> search using rseek.org was fruitful.
> >> >> >>>>>
> >> >> >>>>> The potential gotcha, of course, is if for some reason the GUI
> >> >> exits in
> >> >> >>>>> a manner possibly not under your control. The setting would
> >> not
> >> >> be
> >> >> >>>>> returned to the default and the therefore, as you note,
> >> retained
> >> >> for a
> >> >> >>>>> subsequent session where the behavior may not be desired.
> >> >> >>>>>
> >> >> >>>>
> >> >> >>>> Yes, there is that possibility.
> >> >> >>>>
> >> >> >>>>> If this is for Rcmdr, perhaps this is something that could be
> >> >> added to
> >> >> >>>>> a menu, where the user can alter the behavior in either
> >> direction
> >> >> as
> >> >> >>>>> desired, if that makes sense.
> >> >> >>>>>
> >> >> >>>>
> >> >> >>>> As you guessed, this is for the Rcmdr, where the built-in R.app
> >> >> browser
> >> >> >>>> doesn't play well with dialog help buttons -- the browser is
> >> >> unresponsive
> >> >> >>>> until the dialog that called it closes -- while an external
> >> html-
> >> >> help
> >> >> >>>> browser works fine.
> >> >> >>>>
> >> >> >>>> I've now successfully implemented the approach I outlined, in
> >> >> which the
> >> >> >>>> previous setting is restored when the Commander GUI closes. As
> >> you
> >> >> point
> >> >> >>>> out, this isn't bullet-proof, but I think it is the best I can
> >> do
> >> >> for now.
> >> >> >>>> Allowing the user to apply the change would be safer, but users
> >> >> are unlikely
> >> >> >>>> to discover the option.
> >> >> >>>>
> >> >> >>>>> Simon would need to comment on the potential for alternatives.
> >> >> >>>>
> >> >> >>>> Yes, that would be welcome. I still think that a setting via
> >> >> options() would
> >> >> >>>> be better.
> >> >> >>>>
> >> >> >>>> Thanks again for your help,
> >> >> >>>> John
> >> >> >>>>
> >> >> >>>>>
> >> >> >>>>> Best regards,
> >> >> >>>>>
> >> >> >>>>> Marc
> >> >> >>>>>
> >> >> >>>>>
> >> >> >>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca>
> >> wrote:
> >> >> >>>>>
> >> >> >>>>>> Hi Marc,
> >> >> >>>>>>
> >> >> >>>>>> Thanks for this. It does work, and I wasn't aware of it --
> >> >> you've
> >> >> >>>>> obviously
> >> >> >>>>>> done a better job than I did of searching for a solution!
> >> >> >>>>>>
> >> >> >>>>>> Although this approach works, it has the disadvantage of
> >> >> permanently
> >> >> >>>>>> changing the help browser in R.app, beyond the current
> >> session,
> >> >> at
> >> >> >>>>> least
> >> >> >>>>>> until the change is explicitly undone. I think that I can
> >> work
> >> >> around
> >> >> >>>>> that
> >> >> >>>>>> by something like
> >> >> >>>>>>
> >> >> >>>>>>        current <- system("defaults read org.R-project.R",
> >> >> intern=TRUE)
> >> >> >>>>>>
> >> >> >>>>>> to discover whether the use.external.help preference exists,
> >> and
> >> >> if
> >> >> >>>>> so, what
> >> >> >>>>>> its value is; to then set the preference to YES if it's NO or
> >> >> unset;
> >> >> >>>>> and
> >> >> >>>>>> finally to remove the preference on exit.
> >> >> >>>>>>
> >> >> >>>>>> Again, thanks -- I think that I can work with this, though it
> >> >> would
> >> >> >>>>> in my
> >> >> >>>>>> opinion be better if the help browser were settable for the
> >> >> current
> >> >> >>>>> session
> >> >> >>>>>> directly via options() in R, or if one could specify the
> >> browser
> >> >> in a
> >> >> >>>>> call
> >> >> >>>>>> to help().
> >> >> >>>>>>
> >> >> >>>>>> Best (and thanks again),
> >> >> >>>>>> John
> >> >> >>>>>>
> >> >> >>>>>>> -----Original Message-----
> >> >> >>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >> >> >>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
> >> >> >>>>>>> To: John Fox
> >> >> >>>>>>> Cc: r-sig-mac at r-project.org
> >> >> >>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >> >> >>>>>>>
> >> >> >>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca>
> >> wrote:
> >> >> >>>>>>>
> >> >> >>>>>>>> Dear list members,
> >> >> >>>>>>>>
> >> >> >>>>>>>> Is there a way to bypass the R.app help browser, and to use
> >> >> instead
> >> >> >>>>>>> an alternative browser, such as the one pointed to by
> >> >> >>>>>>> getOption("browser")?
> >> >> >>>>>>>>
> >> >> >>>>>>>> I've tried a number of strategies, including setting
> >> >> .Platform$GUI
> >> >> >>>>> <-
> >> >> >>>>>>> "unknown". The only approach I tried that works is to mask
> >> the
> >> >> >>>>> help()
> >> >> >>>>>>> function with a modified version, but this produces other
> >> >> problems,
> >> >> >>>>>>> such as referencing unexported objects from utils and tools.
> >> >> >>>>>>>>
> >> >> >>>>>>>> It would be nice if the help() function had a browser
> >> >> argument,
> >> >> >>>>>>> similar to that in browseURL(), and defaulting to the
> >> current
> >> >> >>>>>>> behaviour.
> >> >> >>>>>>>>
> >> >> >>>>>>>> Any suggestions would be appreciated.
> >> >> >>>>>>>>
> >> >> >>>>>>>> John
> >> >> >>>>>>>
> >> >> >>>>>>>
> >> >> >>>>>>> John,
> >> >> >>>>>>>
> >> >> >>>>>>> I found this post from Simon that seems to work:
> >> >> >>>>>>>
> >> >> >>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-
> >> >> December/006908.html
> >> >> >>>>>>>
> >> >> >>>>>>> I tried it on my Mac in the latest version of R.app, which I
> >> >> >>>>> normally
> >> >> >>>>>>> do not use and the help system does now popup a browser.
> >> >> >>>>>>>
> >> >> >>>>>>>
> >> >> >>>>>>> Regards,
> >> >> >>>>>>>
> >> >> >>>>>>> Marc Schwartz
> >> >> >>>>>>
> >> >> >>>>
> >> >> >>>> _______________________________________________
> >> >> >>>> R-SIG-Mac mailing list
> >> >> >>>> R-SIG-Mac at r-project.org
> >> >> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >> >> >>>>
> >> >> >>>
> >> >> >>
> >> >> >> _______________________________________________
> >> >> >> R-SIG-Mac mailing list
> >> >> >> R-SIG-Mac at r-project.org
> >> >> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >> >> >
> >> >>
> >> >>
> >> >> --
> >> >> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> >> >> Emeritus Professor of Applied Statistics, University of Oxford
> >> >> 1 South Parks Road, Oxford OX1 3TG, UK
> >> >
> >> > _______________________________________________
> >> > R-SIG-Mac mailing list
> >> > R-SIG-Mac at r-project.org
> >> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >

------------------------------------------------
John Fox, Professor
McMaster University
Hamilton, Ontario, Canada
http://socserv.mcmaster.ca/jfox/


From jfox at mcmaster.ca  Thu Aug 14 14:26:12 2014
From: jfox at mcmaster.ca (John Fox)
Date: Thu, 14 Aug 2014 08:26:12 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <CAGx1TMBDetiUy+0x9De4fhyAxpMDyT-AwHVKpAKvGkTQyYnuYQ@mail.gmail.com>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>
	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>
	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>
	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>
	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>
	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>
	<web-522291923@cgpsrv2.cis.mcmaster.ca>
	<81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>
	<53EB7F67.80203@stats.ox.ac.uk>
	<002901cfb717$947c0400$bd740c00$@mcmaster.ca>
	<CAGx1TMBKBy7H1jmQ86ckyEXGxFQAXkvyFsxit8We8HXqjb7Zuw@mail.gmail.com>
	<003501cfb729$f43463d0$dc9d2b70$@mcmaster.ca>
	<CAGx1TMCCLORYwcRPeO1LXUTAT8LU9Z1geebCJnZ13LtdWBExkA@mail.gmail.com>
	<CAGx1TMBDetiUy+0x9De4fhyAxpMDyT-AwHVKpAKvGkTQyYnuYQ@mail.gmail.com>
Message-ID: <web-522445269@cgpsrv2.cis.mcmaster.ca>

Dear Rich,

On Wed, 13 Aug 2014 21:11:34 -0400
 "Richard M. Heiberger" <rmh at temple.edu> wrote:
> I downloaded Rcmdr_2.1-0 and installed it on my Mac.
> I am using
> 57531778 Jul 16 23:58 R-3.1-branch-mavericks.pkg
> R version 3.1.1 Patched (2014-07-16 r66175)
> Rcmdr needs RcmdrMisc which I see is in the same
> svn download, so I installed it too.
> 
> I don't see anything on the Tools > Options that looks relevant to the
> help system.

No, not all Rcmdr options are there. 

> 
> options("Rcmdr") comes up NULL.
> 

Yes, until you've set it.

> I tried
> 
> > Rcmdr <- list( "help_type"="text")
> > options()$Rcmdr
> NULL
> > options(Rcmdr=Rcmdr)
> > options("Rcmdr")
> $Rcmdr
> $Rcmdr$help_type
> [1] "text"
> 
> and also
> > options("help_type"="text")
> 
> Neither helped.  Help files are sent to an X11 viewer.

Looking at the current Rcmdr code on R-Forge, I actually removed the application of the Rcmdr help_type option in the last set of changes, so it's simply ignored. I apologize for the misinformation in my previous message.

OTOH, the standard R help_type option should then control help, so setting options(help_type="text") should produce plain-text help. I just checked on my Windows system under the R Console, and it behaves as expected. If you're seeing the plain-text help in X-Windows, I don't know how to make it appear instead in Emacs.

Sorry,
 John

> 
> I detached Rcmdr with unload=TRUE and help files went back to an emacs buffer.
> 
> Please suggest something else for me to try.
> 
> Rich
> 
> 
> On Wed, Aug 13, 2014 at 8:33 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
> > I have a hypothesis why R-Forge might be having trouble.
> > This is the first time I used Rcmdr in R_3.1.1 on the Mac.
> > It said it needed to install sem, relimp, lmtest, aplpack.
> > It also installed the dependency matrixcalc.
> > matrixcalc is not in the Rcmdr "Suggests:" list.
> >
> > My guess is that adding matrixcalc to the Suggests list might be the
> > missing item
> > that will allow building on R-Forge.
> >
> > Rich
> >
> > On Wed, Aug 13, 2014 at 3:08 PM, John Fox <jfox at mcmaster.ca> wrote:
> >> Dear Rich,
> >>
> >>> -----Original Message-----
> >>> From: Richard M. Heiberger [mailto:rmh at temple.edu]
> >>> Sent: Wednesday, August 13, 2014 1:30 PM
> >>> To: John Fox
> >>> Cc: Prof Brian Ripley; peter dalgaard; R-SIG-Mac
> >>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>>
> >>> John,
> >>>
> >>> I have noticed what I think is a related issue.  I normally run R
> >>> under emacs with ESS.
> >>> help files open an emacs buffer.  When I run Rcmdr on the Mac, then
> >>> Rcmdr changes the help
> >>> file location to something on the Mac.  It restores the emacs buffer
> >>> destination when I close Rcmdr.
> >>> Is there, or can there be, an option to leave the help files in emacs?
> >>
> >> At the moment, help handling is in flux as a consequence of this thred. Currently in the new Rcmdr version 2.1-0 on R-Forge, there is an Rcmdr help_type option that overrides (and restores on exit) the help_type option in options(). By default, this is set to "html", but you should be able to set it to whatever works with emacs -- I suppose options(Rcmdr=list(help_type="text")) would do the trick.
> >>
> >> Please try this out and let me know if it does what you want. The Rcmdr package isn't currently building on R-Forge for reasons that I don't completely understand: R-Forge complains that some package dependencies are missing, but these "missing" packages *are* on CRAN. So you'll have to download the Rcmdr sources via svn checkout svn://svn.r-forge.r-project.org/svnroot/rcmdr/pkg/Rcmdr-current and build the package yourself.
> >>
> >> Best,
> >>  John
> >>
> >>> Thanks
> >>>
> >>> Rich
> >>>
> >>>
> >>> On Wed, Aug 13, 2014 at 12:56 PM, John Fox <jfox at mcmaster.ca> wrote:
> >>> > Dear Brian and Peter,
> >>> >
> >>> > Thanks for picking up this issue.
> >>> >
> >>> > The behaviour that Brian reports is exactly what I observed, and the
> >>> Tcl/Tk
> >>> > doc that he quotes is what I consulted. It's not surprising to me
> >>> that the R
> >>> > process waits until the Tk window calling tkwait.window() is
> >>> destroyed. I
> >>> > suppose that because the internal help browser runs under the R
> >>> process, it
> >>> > too waits, while an external browser -- as is spawned by help.start()
> >>> --
> >>> > runs in an independent process.
> >>> >
> >>> > As I mentioned, I've removed the call to tkwait.window() in the Rcmdr
> >>> > sources (it's in a "macro" called by every Rcmdr modal dialog) and
> >>> will test
> >>> > whether there are negative consequences. I've observed none so far.
> >>> >
> >>> > BTW, the same issue arises when the Rcmdr is run inside of RStudio,
> >>> which
> >>> > directs help to its own browser.
> >>> >
> >>> > Best,
> >>> >  John
> >>> >
> >>> >> -----Original Message-----
> >>> >> From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk]
> >>> >> Sent: Wednesday, August 13, 2014 11:08 AM
> >>> >> To: peter dalgaard; John Fox
> >>> >> Cc: R-SIG-Mac
> >>> >> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>> >>
> >>> >> On 13/08/2014 15:11, peter dalgaard wrote:
> >>> >> > This isn't unique to tcltk. Anything that blocks the keyboard loop
> >>> >> blocks the help browser too. Try e.g. opening the help for ls, type
> >>> >> Sys.sleep(15) and watch the beach ball in the help browser as you
> >>> try
> >>> >> to scroll in it.
> >>> >>
> >>> >> But Sys.sleep should not be blocking an event loop: from its help
> >>> >>
> >>> >>       The intention is that this function suspends execution of R
> >>> >>       expressions but wakes the process up often enough to respond
> >>> to
> >>> >>       GUI events, typically every 0.5 seconds.
> >>> >>
> >>> >> The mechanisms to mesh event loops which are in place for Sys.sleep
> >>> >> are
> >>> >> R_CheckUserInterrupt (which calls R_ProcessEvents) and
> >>> R_runHandlers.
> >>> >>
> >>> >> Note that the help for tkwait says (on my box)
> >>> >>
> >>> >>         While  the  tkwait command is waiting it processes events in
> >>> >> the
> >>> >> normal
> >>> >>         fashion, so the application will continue to respond to
> >>> user
> >>> >> interac-
> >>> >>         tions.   If  an  event handler invokes tkwait again, the
> >>> nested
> >>> >> call to
> >>> >>         tkwait must complete before the outer call can complete.
> >>> >>
> >>> >> but as this is X11 Tk, it means X11/Unix events.  You can
> >>> demonstrate
> >>> >> that, as e.g the http server still works (use help.start() first).
> >>> >>
> >>> >>
> >>> >> > -pd
> >>> >> >
> >>> >> >
> >>> >> > On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:
> >>> >> >
> >>> >> >> Dear Simon,
> >>> >> >>
> >>> >> >> Here's a simple script that will demonstrate the problem:
> >>> >> >>
> >>> >> >> ----- snip -----
> >>> >> >>
> >>> >> >> library(tcltk)
> >>> >> >>
> >>> >> >> top <- tktoplevel()
> >>> >> >> button <- ttkbutton(top, text="help", command=function()
> >>> >> print(help(lm)))
> >>> >> >> tkgrid(button)
> >>> >> >> tkwait.window(top)
> >>> >> >>
> >>> >> >> ----- snip -----
> >>> >> >>
> >>> >> >> The problem is produced by tkwait.window(), and this call is in
> >>> all
> >>> >> Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause
> >>> >> problems, but obviously it's causing this problem.  I'm also not
> >>> >> certain whether calling tkwait.windows() is necessary and will look
> >>> >> into the consequences of removing it -- I believe that it's been
> >>> there
> >>> >> for many years, from the earliest versions of the Rcmdr.
> >>> >> >>
> >>> >> >> With respect to changing using preferences, this is done only
> >>> until
> >>> >> the Commander() exits. If getting rid of the call to tkwait.window()
> >>> >> proves problematic, I can ask the user for permission in a pop-up
> >>> >> dialog.
> >>> >> >>
> >>> >> >> Thanks for your help,
> >>> >> >> John
> >>> >> >>
> >>> >> >> On Wed, 13 Aug 2014 00:25:30 -0400
> >>> >> >> Simon Urbanek <simon.urbanek at r-project.org> wrote:
> >>> >> >>> John,
> >>> >> >>>
> >>> >> >>> can't you address the underlying issue instead and don't block
> >>> the
> >>> >> event loop? A lot of things don't work if the event loop is blocked
> >>> and
> >>> >> I would argue that changing user's preferences behind the scenes is
> >>> a
> >>> >> violation of the CRAN policies.
> >>> >> >>> I'm happy to help if you send me a bit more details.
> >>> >> >>>
> >>> >> >>> Cheers,
> >>> >> >>> Simon
> >>> >> >>>
> >>> >> >>>
> >>> >> >>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
> >>> >> >>>
> >>> >> >>>> Hi Marc,
> >>> >> >>>>
> >>> >> >>>>> -----Original Message-----
> >>> >> >>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >>> >> >>>>> Sent: Tuesday, August 12, 2014 5:10 PM
> >>> >> >>>>> To: John Fox
> >>> >> >>>>> Cc: r-sig-mac at r-project.org
> >>> >> >>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>> >> >>>>>
> >>> >> >>>>> Hi John,
> >>> >> >>>>>
> >>> >> >>>>> Happy to help. I recalled seeing something previously on this,
> >>> so
> >>> >> a
> >>> >> >>>>> search using rseek.org was fruitful.
> >>> >> >>>>>
> >>> >> >>>>> The potential gotcha, of course, is if for some reason the GUI
> >>> >> exits in
> >>> >> >>>>> a manner possibly not under your control. The setting would
> >>> not
> >>> >> be
> >>> >> >>>>> returned to the default and the therefore, as you note,
> >>> retained
> >>> >> for a
> >>> >> >>>>> subsequent session where the behavior may not be desired.
> >>> >> >>>>>
> >>> >> >>>>
> >>> >> >>>> Yes, there is that possibility.
> >>> >> >>>>
> >>> >> >>>>> If this is for Rcmdr, perhaps this is something that could be
> >>> >> added to
> >>> >> >>>>> a menu, where the user can alter the behavior in either
> >>> direction
> >>> >> as
> >>> >> >>>>> desired, if that makes sense.
> >>> >> >>>>>
> >>> >> >>>>
> >>> >> >>>> As you guessed, this is for the Rcmdr, where the built-in R.app
> >>> >> browser
> >>> >> >>>> doesn't play well with dialog help buttons -- the browser is
> >>> >> unresponsive
> >>> >> >>>> until the dialog that called it closes -- while an external
> >>> html-
> >>> >> help
> >>> >> >>>> browser works fine.
> >>> >> >>>>
> >>> >> >>>> I've now successfully implemented the approach I outlined, in
> >>> >> which the
> >>> >> >>>> previous setting is restored when the Commander GUI closes. As
> >>> you
> >>> >> point
> >>> >> >>>> out, this isn't bullet-proof, but I think it is the best I can
> >>> do
> >>> >> for now.
> >>> >> >>>> Allowing the user to apply the change would be safer, but users
> >>> >> are unlikely
> >>> >> >>>> to discover the option.
> >>> >> >>>>
> >>> >> >>>>> Simon would need to comment on the potential for alternatives.
> >>> >> >>>>
> >>> >> >>>> Yes, that would be welcome. I still think that a setting via
> >>> >> options() would
> >>> >> >>>> be better.
> >>> >> >>>>
> >>> >> >>>> Thanks again for your help,
> >>> >> >>>> John
> >>> >> >>>>
> >>> >> >>>>>
> >>> >> >>>>> Best regards,
> >>> >> >>>>>
> >>> >> >>>>> Marc
> >>> >> >>>>>
> >>> >> >>>>>
> >>> >> >>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca>
> >>> wrote:
> >>> >> >>>>>
> >>> >> >>>>>> Hi Marc,
> >>> >> >>>>>>
> >>> >> >>>>>> Thanks for this. It does work, and I wasn't aware of it --
> >>> >> you've
> >>> >> >>>>> obviously
> >>> >> >>>>>> done a better job than I did of searching for a solution!
> >>> >> >>>>>>
> >>> >> >>>>>> Although this approach works, it has the disadvantage of
> >>> >> permanently
> >>> >> >>>>>> changing the help browser in R.app, beyond the current
> >>> session,
> >>> >> at
> >>> >> >>>>> least
> >>> >> >>>>>> until the change is explicitly undone. I think that I can
> >>> work
> >>> >> around
> >>> >> >>>>> that
> >>> >> >>>>>> by something like
> >>> >> >>>>>>
> >>> >> >>>>>>        current <- system("defaults read org.R-project.R",
> >>> >> intern=TRUE)
> >>> >> >>>>>>
> >>> >> >>>>>> to discover whether the use.external.help preference exists,
> >>> and
> >>> >> if
> >>> >> >>>>> so, what
> >>> >> >>>>>> its value is; to then set the preference to YES if it's NO or
> >>> >> unset;
> >>> >> >>>>> and
> >>> >> >>>>>> finally to remove the preference on exit.
> >>> >> >>>>>>
> >>> >> >>>>>> Again, thanks -- I think that I can work with this, though it
> >>> >> would
> >>> >> >>>>> in my
> >>> >> >>>>>> opinion be better if the help browser were settable for the
> >>> >> current
> >>> >> >>>>> session
> >>> >> >>>>>> directly via options() in R, or if one could specify the
> >>> browser
> >>> >> in a
> >>> >> >>>>> call
> >>> >> >>>>>> to help().
> >>> >> >>>>>>
> >>> >> >>>>>> Best (and thanks again),
> >>> >> >>>>>> John
> >>> >> >>>>>>
> >>> >> >>>>>>> -----Original Message-----
> >>> >> >>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> >>> >> >>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
> >>> >> >>>>>>> To: John Fox
> >>> >> >>>>>>> Cc: r-sig-mac at r-project.org
> >>> >> >>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >>> >> >>>>>>>
> >>> >> >>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca>
> >>> wrote:
> >>> >> >>>>>>>
> >>> >> >>>>>>>> Dear list members,
> >>> >> >>>>>>>>
> >>> >> >>>>>>>> Is there a way to bypass the R.app help browser, and to use
> >>> >> instead
> >>> >> >>>>>>> an alternative browser, such as the one pointed to by
> >>> >> >>>>>>> getOption("browser")?
> >>> >> >>>>>>>>
> >>> >> >>>>>>>> I've tried a number of strategies, including setting
> >>> >> .Platform$GUI
> >>> >> >>>>> <-
> >>> >> >>>>>>> "unknown". The only approach I tried that works is to mask
> >>> the
> >>> >> >>>>> help()
> >>> >> >>>>>>> function with a modified version, but this produces other
> >>> >> problems,
> >>> >> >>>>>>> such as referencing unexported objects from utils and tools.
> >>> >> >>>>>>>>
> >>> >> >>>>>>>> It would be nice if the help() function had a browser
> >>> >> argument,
> >>> >> >>>>>>> similar to that in browseURL(), and defaulting to the
> >>> current
> >>> >> >>>>>>> behaviour.
> >>> >> >>>>>>>>
> >>> >> >>>>>>>> Any suggestions would be appreciated.
> >>> >> >>>>>>>>
> >>> >> >>>>>>>> John
> >>> >> >>>>>>>
> >>> >> >>>>>>>
> >>> >> >>>>>>> John,
> >>> >> >>>>>>>
> >>> >> >>>>>>> I found this post from Simon that seems to work:
> >>> >> >>>>>>>
> >>> >> >>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-
> >>> >> December/006908.html
> >>> >> >>>>>>>
> >>> >> >>>>>>> I tried it on my Mac in the latest version of R.app, which I
> >>> >> >>>>> normally
> >>> >> >>>>>>> do not use and the help system does now popup a browser.
> >>> >> >>>>>>>
> >>> >> >>>>>>>
> >>> >> >>>>>>> Regards,
> >>> >> >>>>>>>
> >>> >> >>>>>>> Marc Schwartz
> >>> >> >>>>>>
> >>> >> >>>>
> >>> >> >>>> _______________________________________________
> >>> >> >>>> R-SIG-Mac mailing list
> >>> >> >>>> R-SIG-Mac at r-project.org
> >>> >> >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>> >> >>>>
> >>> >> >>>
> >>> >> >>
> >>> >> >> _______________________________________________
> >>> >> >> R-SIG-Mac mailing list
> >>> >> >> R-SIG-Mac at r-project.org
> >>> >> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>> >> >
> >>> >>
> >>> >>
> >>> >> --
> >>> >> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> >>> >> Emeritus Professor of Applied Statistics, University of Oxford
> >>> >> 1 South Parks Road, Oxford OX1 3TG, UK
> >>> >
> >>> > _______________________________________________
> >>> > R-SIG-Mac mailing list
> >>> > R-SIG-Mac at r-project.org
> >>> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>

------------------------------------------------
John Fox, Professor
McMaster University
Hamilton, Ontario, Canada
http://socserv.mcmaster.ca/jfox/


From Roger.Dean at uws.edu.au  Mon Aug 18 05:11:18 2014
From: Roger.Dean at uws.edu.au (Roger Dean)
Date: Mon, 18 Aug 2014 03:11:18 +0000
Subject: [R-SIG-Mac] Remaining problems compiling rinside_sample0.cpp on
 Xcode 5.1.1 on mavericks 10.9.4.
Message-ID: <DB602F70-C5DB-4B31-AA48-57DEDF047659@uws.edu.au>

Hi again Colleagues,
Following my earlier query, I carefully followed (and extensively trialled) the helpful leads you gave. (I had to repost this new query, as my first sending was unsuccessful. Sorry about that.)

In essence, you confirmed that the build failure was due to my having allowed a conflict to develop between String.h from Rcpp and string.h from the standard C library, so that at some points it was finding the wrong one of these two headers. The cumulated advice on this I gleaned was to avoid duplication of RCpp header paths offered in the search dialogue, and to use -idirafter to try to ensure that the R-associated headers are searched after the path containing the standard libstdc++. I did this, and got rid of the numerous errors that previously appeared early in the linking process. But now I still seem to have a residue of the problem appearing when the Rinside_sample0 main function gets into operation.

I would very much appreciate a further burst of advice on solving this remaining problem.

FIRST: here is the problem as shown by the error messages from Xcode:
Three 'Apple Mach-0 Linker (ld) Errors':
: "RInside::parseEvalQ(std::string const&)", referenced from:
 _main in rinside_sample0.o
: "RInside::operator[](std::string const&)", referenced from:
 _main in rinside_sample0.o
 Symbol(s) not found for architecture x86_64
Linker command failed with exit code 1 (use -v to see invocation)

And the detail:
 Ld /Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Products/Debug/rRinsideXcodetest2 normal x86_64
    cd /Users/RogerDean/Desktop/RInside-test/rRinsideXcodetest2
    export MACOSX_DEPLOYMENT_TARGET=10.9
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk -L/Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Products/Debug -L/Users/RogerDean/Desktop/RInside-test/rRinsideXcodetest2/rRinsideXcodetest2 -F/Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Products/Debug -filelist /Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Intermediates/rRinsideXcodetest2.build/Debug/rRinsideXcodetest2.build/Objects-normal/x86_64/rRinsideXcodetest2.LinkFileList -mmacosx-version-min=10.9 -stdlib=libstdc++ -lRlapack -lR -lRblas.0 -lRInside -Xlinker -dependency_info -Xlinker /Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Intermediates/rRinsideXcodetest2.build/Debug/rRinsideXcodetest2.build/Objects-normal/x86_64/rRinsideXcodetest2_dependency_info.dat -o /Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Products/Debug/rRinsideXcodetest2

Undefined symbols for architecture x86_64:
  "RInside::parseEvalQ(std::string const&)", referenced from:
      _main in rinside_sample0.o
  "RInside::operator[](std::string const&)", referenced from:
      _main in rinside_sample0.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)

so it seems still to be an issue to do with string operation as far as I can tell. I have tried a range of the architecture options, and currently have 'Native Architecture (x86-64)' as the choice.

SECOND, here are the places in Xcode and details of the paths I am currently providing (I have tried a range of alternative sites for placing these paths and directives in the Xcode build settings, that either worsened or did not change the outcome):
************
The 'system' paths:
//:configuration = Debug
HEADER_SEARCH_PATHS = /$(inherited) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include

//:configuration = Release
HEADER_SEARCH_PATHS = /$(inherited) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include

//:completeSettings = some
HEADER_SEARCH_PATHS

the 'R' paths:
I have tried these in "User header search paths" with "Always search user paths" = YES, with similar results. The guidance on Always search user paths seems unclear, and also inconsistent with the idea of the -idirafter directive, so I currently have these paths in "Other C++ Flags" as follows:

//:configuration = Debug
OTHER_CPLUSPLUSFLAGS = -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/library/RInside/include -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/library/Rcpp/include
-idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/include

//:configuration = Release
OTHER_CPLUSPLUSFLAGS = -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/library/RInside/include -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/library/Rcpp/include
-idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/include

//:completeSettings = some
OTHER_CPLUSPLUSFLAGS

***********
Third, there is also the direction to use the particular libstdc++ library, and the restriction of macosx types. These I have currently placed in OTHER_CODE_SIGN_FLAGS:

//:configuration = Debug
OTHER_CODE_SIGN_FLAGS = -stdlib=libstdc++ -mmacosx-version-min=10.6

//:configuration = Release
OTHER_CODE_SIGN_FLAGS = -stdlib=libstdc++ -mmacosx-version-min=10.6

//:completeSettings = some
OTHER_CODE_SIGN_FLAGS

NB Judging by the detail above, the latter part is getting over-ridden somehow so min=10.9.


Finally, I'll confirm that I also have set up the .R/Makevars according to the best advice I could again glean from your comments, the related SO posts,  and my searches, dealing particularly with selecting the clang++ compiler. As you see above, I chose to put the -idirafter directives into the Xcode settings rather than in Makevars, which seemed more appropriate since I think these directives to some degree specific to this R project and not general to all R projects. I did also try placing all the -idirafter paths in Makevars, without any improvement, Here is my current .R/Makevars:

CC=clang
CXX=clang++
CFLAGS="-mtune=native -g -O2 -Wall -pedantic -Wconversion"
CXXFLAGS="-stdlib=libstdc++ -mmacosx-version-min=10.6 -mtune=native -g -O3 -Wall -pedantic -Wconversion"
FLIBS=-lgfortran
F77="gfortran-4.2 -arch x86_64"
FC=$F77
OBJC=clang
So I do have some duplication, but as the specs are the same I assume this will function as a safeguard. Again, I have fiddled with most of these permutations.

A subsidiary question I have is whether the libR.dylib and libRInside.dylib are actually needed in the Xcode project, or whether they will/should be built during the compiling?

I am hoping another round of advice from you experts might allow me to solve my remaining problem. Many thanks again in advance for your advice and time.

Roger Dean


Prof Roger Dean, MARCS Institute, University of Western Sydney
roger.dean at uws.edu.au<mailto:roger.dean at uws.edu.au>




	[[alternative HTML version deleted]]


From dweeks.pitt at gmail.com  Thu Aug  7 17:46:23 2014
From: dweeks.pitt at gmail.com (dweeks.pitt at gmail.com)
Date: Thu, 7 Aug 2014 08:46:23 -0700
Subject: [R-SIG-Mac] installing RMySQL
In-Reply-To: <CAJ=0CtCWtkN1tTyKGOws0n6dONuneD29KKLE8e_mdk-wNFLUyg@mail.gmail.com>
References: <CAJ=0CtDdC2xBJ-uQRp=VPKgX_9wzJQJkrxRT+DeE7GgHUGcZeg@mail.gmail.com>
	<C24F7BBD-2D0F-4ED6-9B62-6D01DE16F605@schrecktech.com>
	<CAJ=0CtCWtkN1tTyKGOws0n6dONuneD29KKLE8e_mdk-wNFLUyg@mail.gmail.com>
Message-ID: <7bab6903-7a6e-431e-8adc-038f7b8c5399@googlegroups.com>

Only after doing this:

export DYLD_LIBRARY_PATH="/usr/local/mysql/lib"

then I was able to successfully install the RMySQL package with this 
command:

R CMD INSTALL --configure-args='--with-mysql-dir=/usr/local/mysql 
--with-mysql-lib=/usr/local/mysql/lib 
--with-mysql-inc=/usr/local/mysql/include' RMySQL_0.9-3.tar.gz

Hope that helps,
Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20140807/c16aea90/attachment-0002.html>

From dweeks.pitt at gmail.com  Thu Aug  7 17:46:23 2014
From: dweeks.pitt at gmail.com (dweeks.pitt at gmail.com)
Date: Thu, 7 Aug 2014 08:46:23 -0700 (PDT)
Subject: [R-SIG-Mac] installing RMySQL
In-Reply-To: <CAJ=0CtCWtkN1tTyKGOws0n6dONuneD29KKLE8e_mdk-wNFLUyg@mail.gmail.com>
References: <CAJ=0CtDdC2xBJ-uQRp=VPKgX_9wzJQJkrxRT+DeE7GgHUGcZeg@mail.gmail.com>
	<C24F7BBD-2D0F-4ED6-9B62-6D01DE16F605@schrecktech.com>
	<CAJ=0CtCWtkN1tTyKGOws0n6dONuneD29KKLE8e_mdk-wNFLUyg@mail.gmail.com>
Message-ID: <7bab6903-7a6e-431e-8adc-038f7b8c5399@googlegroups.com>

Only after doing this:

export DYLD_LIBRARY_PATH="/usr/local/mysql/lib"

then I was able to successfully install the RMySQL package with this 
command:

R CMD INSTALL --configure-args='--with-mysql-dir=/usr/local/mysql 
--with-mysql-lib=/usr/local/mysql/lib 
--with-mysql-inc=/usr/local/mysql/include' RMySQL_0.9-3.tar.gz

Hope that helps,
Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20140807/c16aea90/attachment-0003.html>

From dweeks.pitt at gmail.com  Thu Aug  7 21:33:01 2014
From: dweeks.pitt at gmail.com (dweeks.pitt at gmail.com)
Date: Thu, 7 Aug 2014 12:33:01 -0700 (PDT)
Subject: [R-SIG-Mac] installing RMySQL
In-Reply-To: <CAJ=0CtCsFMNu-60L8rRpS3ca-F+OTQMZqRa_bJxPhVypv9FPeQ@mail.gmail.com>
References: <CAJ=0CtDdC2xBJ-uQRp=VPKgX_9wzJQJkrxRT+DeE7GgHUGcZeg@mail.gmail.com>
	<C24F7BBD-2D0F-4ED6-9B62-6D01DE16F605@schrecktech.com>
	<CAJ=0CtCWtkN1tTyKGOws0n6dONuneD29KKLE8e_mdk-wNFLUyg@mail.gmail.com>
	<7bab6903-7a6e-431e-8adc-038f7b8c5399@googlegroups.com>
	<CAJ=0CtCsFMNu-60L8rRpS3ca-F+OTQMZqRa_bJxPhVypv9FPeQ@mail.gmail.com>
Message-ID: <3980b9b4-fe77-4c69-802e-c9dfaed42db4@googlegroups.com>

The other thing I did was set up symbolic links from /usr/lib and 
/usr/local/lib to /usr/local/mysql/libmysqlclient.18.dylib

sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib 
/usr/local/lib/libmysqlclient.18.dylib
sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib 
/usr/lib/libmysqlclient.18.dylib

Maybe one of those symbolic links enabled R to find the library?

Dan


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20140807/f21a2505/attachment-0002.html>

From dweeks.pitt at gmail.com  Thu Aug  7 21:33:01 2014
From: dweeks.pitt at gmail.com (dweeks.pitt at gmail.com)
Date: Thu, 7 Aug 2014 12:33:01 -0700
Subject: [R-SIG-Mac] installing RMySQL
In-Reply-To: <CAJ=0CtCsFMNu-60L8rRpS3ca-F+OTQMZqRa_bJxPhVypv9FPeQ@mail.gmail.com>
References: <CAJ=0CtDdC2xBJ-uQRp=VPKgX_9wzJQJkrxRT+DeE7GgHUGcZeg@mail.gmail.com>
	<C24F7BBD-2D0F-4ED6-9B62-6D01DE16F605@schrecktech.com>
	<CAJ=0CtCWtkN1tTyKGOws0n6dONuneD29KKLE8e_mdk-wNFLUyg@mail.gmail.com>
	<7bab6903-7a6e-431e-8adc-038f7b8c5399@googlegroups.com>
	<CAJ=0CtCsFMNu-60L8rRpS3ca-F+OTQMZqRa_bJxPhVypv9FPeQ@mail.gmail.com>
Message-ID: <3980b9b4-fe77-4c69-802e-c9dfaed42db4@googlegroups.com>

The other thing I did was set up symbolic links from /usr/lib and 
/usr/local/lib to /usr/local/mysql/libmysqlclient.18.dylib

sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib 
/usr/local/lib/libmysqlclient.18.dylib
sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib 
/usr/lib/libmysqlclient.18.dylib

Maybe one of those symbolic links enabled R to find the library?

Dan


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20140807/f21a2505/attachment-0003.html>

From simon.urbanek at r-project.org  Mon Aug 18 15:59:55 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 18 Aug 2014 09:59:55 -0400
Subject: [R-SIG-Mac] Remaining problems compiling rinside_sample0.cpp on
	Xcode 5.1.1 on mavericks 10.9.4.
In-Reply-To: <DB602F70-C5DB-4B31-AA48-57DEDF047659@uws.edu.au>
References: <DB602F70-C5DB-4B31-AA48-57DEDF047659@uws.edu.au>
Message-ID: <CB299AC2-6D1E-4FBB-872D-9EBDF4E6F9D0@r-project.org>

Roger,

it would be much easier if you actually posted your sample Xcode project. Most of the trying you're trying are either irrelevant to the project (Makevars) are not necessary or don't work

In principle the right way to go about this is to use the R framework - that's how you link Xcode projects to R (see the Mac GUI as an example or the REngine Obj-C R API). You have essentially the choice of either using the R build system or using Xcode's build system. It appears and you are trying to mix pieces from both which won't work.

Cheers,
Simon


On Aug 17, 2014, at 11:11 PM, Roger Dean <Roger.Dean at uws.edu.au> wrote:

> Hi again Colleagues,
> Following my earlier query, I carefully followed (and extensively trialled) the helpful leads you gave. (I had to repost this new query, as my first sending was unsuccessful. Sorry about that.)
> 
> In essence, you confirmed that the build failure was due to my having allowed a conflict to develop between String.h from Rcpp and string.h from the standard C library, so that at some points it was finding the wrong one of these two headers. The cumulated advice on this I gleaned was to avoid duplication of RCpp header paths offered in the search dialogue, and to use -idirafter to try to ensure that the R-associated headers are searched after the path containing the standard libstdc++. I did this, and got rid of the numerous errors that previously appeared early in the linking process. But now I still seem to have a residue of the problem appearing when the Rinside_sample0 main function gets into operation.
> 
> I would very much appreciate a further burst of advice on solving this remaining problem.
> 
> FIRST: here is the problem as shown by the error messages from Xcode:
> Three 'Apple Mach-0 Linker (ld) Errors':
> : "RInside::parseEvalQ(std::string const&)", referenced from:
> _main in rinside_sample0.o
> : "RInside::operator[](std::string const&)", referenced from:
> _main in rinside_sample0.o
> Symbol(s) not found for architecture x86_64
> Linker command failed with exit code 1 (use -v to see invocation)
> 
> And the detail:
> Ld /Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Products/Debug/rRinsideXcodetest2 normal x86_64
>    cd /Users/RogerDean/Desktop/RInside-test/rRinsideXcodetest2
>    export MACOSX_DEPLOYMENT_TARGET=10.9
>    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk -L/Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Products/Debug -L/Users/RogerDean/Desktop/RInside-test/rRinsideXcodetest2/rRinsideXcodetest2 -F/Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Products/Debug -filelist /Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Intermediates/rRinsideXcodetest2.build/Debug/rRinsideXcodetest2.build/Objects-normal/x86_64/rRinsideXcodetest2.LinkFileList -mmacosx-version-min=10.9 -stdlib=libstdc++ -lRlapack -lR -lRblas.0 -lRInside -Xlinker -dependency_info -Xlinker /Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifd!
> cdgmneurclwb/Build/Intermediates/rRinsideXcodetest2.build/Debug/rRinsideXcodetest2.build/Objects-normal/x86_64/rRinsideXcodetest2_dependency_info.dat -o /Users/RogerDean/Library/Developer/Xcode/DerivedData/rRinsideXcodetest2-cfwgtxcrotrppifdcdgmneurclwb/Build/Products/Debug/rRinsideXcodetest2
> 
> Undefined symbols for architecture x86_64:
>  "RInside::parseEvalQ(std::string const&)", referenced from:
>      _main in rinside_sample0.o
>  "RInside::operator[](std::string const&)", referenced from:
>      _main in rinside_sample0.o
> ld: symbol(s) not found for architecture x86_64
> clang: error: linker command failed with exit code 1 (use -v to see invocation)
> 
> so it seems still to be an issue to do with string operation as far as I can tell. I have tried a range of the architecture options, and currently have 'Native Architecture (x86-64)' as the choice.
> 
> SECOND, here are the places in Xcode and details of the paths I am currently providing (I have tried a range of alternative sites for placing these paths and directives in the Xcode build settings, that either worsened or did not change the outcome):
> ************
> The 'system' paths:
> //:configuration = Debug
> HEADER_SEARCH_PATHS = /$(inherited) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include
> 
> //:configuration = Release
> HEADER_SEARCH_PATHS = /$(inherited) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include
> 
> //:completeSettings = some
> HEADER_SEARCH_PATHS
> 
> the 'R' paths:
> I have tried these in "User header search paths" with "Always search user paths" = YES, with similar results. The guidance on Always search user paths seems unclear, and also inconsistent with the idea of the -idirafter directive, so I currently have these paths in "Other C++ Flags" as follows:
> 
> //:configuration = Debug
> OTHER_CPLUSPLUSFLAGS = -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/library/RInside/include -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/library/Rcpp/include
> -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/include
> 
> //:configuration = Release
> OTHER_CPLUSPLUSFLAGS = -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/library/RInside/include -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/library/Rcpp/include
> -idirafter/Library/Frameworks/R.framework/Versions/3.1/Resources/include
> 
> //:completeSettings = some
> OTHER_CPLUSPLUSFLAGS
> 
> ***********
> Third, there is also the direction to use the particular libstdc++ library, and the restriction of macosx types. These I have currently placed in OTHER_CODE_SIGN_FLAGS:
> 
> //:configuration = Debug
> OTHER_CODE_SIGN_FLAGS = -stdlib=libstdc++ -mmacosx-version-min=10.6
> 
> //:configuration = Release
> OTHER_CODE_SIGN_FLAGS = -stdlib=libstdc++ -mmacosx-version-min=10.6
> 
> //:completeSettings = some
> OTHER_CODE_SIGN_FLAGS
> 
> NB Judging by the detail above, the latter part is getting over-ridden somehow so min=10.9.
> 
> 
> Finally, I'll confirm that I also have set up the .R/Makevars according to the best advice I could again glean from your comments, the related SO posts,  and my searches, dealing particularly with selecting the clang++ compiler. As you see above, I chose to put the -idirafter directives into the Xcode settings rather than in Makevars, which seemed more appropriate since I think these directives to some degree specific to this R project and not general to all R projects. I did also try placing all the -idirafter paths in Makevars, without any improvement, Here is my current .R/Makevars:
> 
> CC=clang
> CXX=clang++
> CFLAGS="-mtune=native -g -O2 -Wall -pedantic -Wconversion"
> CXXFLAGS="-stdlib=libstdc++ -mmacosx-version-min=10.6 -mtune=native -g -O3 -Wall -pedantic -Wconversion"
> FLIBS=-lgfortran
> F77="gfortran-4.2 -arch x86_64"
> FC=$F77
> OBJC=clang
> So I do have some duplication, but as the specs are the same I assume this will function as a safeguard. Again, I have fiddled with most of these permutations.
> 
> A subsidiary question I have is whether the libR.dylib and libRInside.dylib are actually needed in the Xcode project, or whether they will/should be built during the compiling?
> 
> I am hoping another round of advice from you experts might allow me to solve my remaining problem. Many thanks again in advance for your advice and time.
> 
> Roger Dean
> 
> 
> Prof Roger Dean, MARCS Institute, University of Western Sydney
> roger.dean at uws.edu.au<mailto:roger.dean at uws.edu.au>
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From simon.urbanek at r-project.org  Mon Aug 18 16:03:28 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 18 Aug 2014 10:03:28 -0400
Subject: [R-SIG-Mac] installing RMySQL
In-Reply-To: <3980b9b4-fe77-4c69-802e-c9dfaed42db4@googlegroups.com>
References: <CAJ=0CtDdC2xBJ-uQRp=VPKgX_9wzJQJkrxRT+DeE7GgHUGcZeg@mail.gmail.com>
	<C24F7BBD-2D0F-4ED6-9B62-6D01DE16F605@schrecktech.com>
	<CAJ=0CtCWtkN1tTyKGOws0n6dONuneD29KKLE8e_mdk-wNFLUyg@mail.gmail.com>
	<7bab6903-7a6e-431e-8adc-038f7b8c5399@googlegroups.com>
	<CAJ=0CtCsFMNu-60L8rRpS3ca-F+OTQMZqRa_bJxPhVypv9FPeQ@mail.gmail.com>
	<3980b9b4-fe77-4c69-802e-c9dfaed42db4@googlegroups.com>
Message-ID: <4CD64B00-91BB-4D27-B16E-1C752445FA07@r-project.org>


On Aug 7, 2014, at 3:33 PM, dweeks.pitt at gmail.com wrote:

> The other thing I did was set up symbolic links from /usr/lib and /usr/local/lib to /usr/local/mysql/libmysqlclient.18.dylib
> 
> sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib /usr/local/lib/libmysqlclient.18.dylib
> sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib /usr/lib/libmysqlclient.18.dylib
> 
> Maybe one of those symbolic links enabled R to find the library?
> 

Check the IDs in your library (see otool -L) - if the symlink works then the ID doesn't match its actual location (or it's empty). Adjust it with install_name_tool -change if that's the case. Don't set DYLD_LIBRARY_PATH it overrides the search path and cause a lot of trouble - if you have to then your binary is using the wrong ID. Obviously, you'll need to recompile the package when you change the ID.

Cheers,
Simon


> Dan
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From murdoch.duncan at gmail.com  Thu Aug 21 14:03:31 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 21 Aug 2014 08:03:31 -0400
Subject: [R-SIG-Mac] Help with windowWillClose notification
Message-ID: <53F5E013.5040201@gmail.com>

I'm hoping someone here who understands Cocoa programming can help me
with my rgl problems (previously mentioned in the "rgl for R-devel"
thread in July).

To recap:  I had a bug report that this sequence crashes R.app:

library(rgl)
demo(subdivision)

#  Close the window by clicking on the X

rgl.demo.subdivision() # This fn was created by the demo

I can track down the problem to see that the cleanup code that was
supposed to be called when the window was closed wasn't called yet,
so rgl tries to put the new plotting results into a window that isn't
there, and dies.

The cleanup code was tied to a -dealloc method on the NSOpenGLView
object; Simon's guess was that the deallocation is asynchronous, and
just hasn't been called yet.  Simon suggested it should be on a
"windowWillClose:" notification.

Okay, so I've tried to do it on the windowWillClose notification, but I
really don't know what I'm doing, so the current version still dies.
Sometimes it gives an R.app error about an "unrecognized selector sent"
 and sometimes it just crashes.  Generally it makes it a little further
than the previous version, letting the second window open and only dying
when I close it.

Does anyone know of any other examples of R packages that open Cocoa
windows, so I could see how they do their cleanup?  Or would anyone like
to volunteer to look at the code and tell me what I'm doing wrong?

Duncan Murdoch


From jfox at mcmaster.ca  Thu Aug 21 16:12:15 2014
From: jfox at mcmaster.ca (John Fox)
Date: Thu, 21 Aug 2014 10:12:15 -0400
Subject: [R-SIG-Mac] bypassing the R.app help browser?
In-Reply-To: <5366_1407949012_s7DGupbk012581_002901cfb717$947c0400$bd740c00$@mcmaster.ca>
References: <web-522213296@cgpsrv2.cis.mcmaster.ca>	<5E7DAE55-D864-4F3D-BBAF-A66F2E5722E6@me.com>	<001801cfb66e$6dcd69b0$49683d10$@mcmaster.ca>	<77483535-644D-48B8-B52C-A08B1F73E7DE@me.com>	<001a01cfb67a$ec9e33d0$c5da9b70$@mcmaster.ca>	<FD3AFECD-18B1-47F3-A1AF-661C4402BED6@r-project.org>	<web-522291923@cgpsrv2.cis.mcmaster.ca>	<81F0DD63-C0FA-46E4-8442-276CF0B8E4BF@gmail.com>	<53EB7F67.80203@stats.ox.ac.uk>
	<5366_1407949012_s7DGupbk012581_002901cfb717$947c0400$bd740c00$@mcmaster.ca>
Message-ID: <001701cfbd49$e90b5510$bb21ff30$@mcmaster.ca>

Dear Brian, Peter, and Simon,

As I explained, I removed the call to tkwait.window() in Rcmdr modal
dialogs, and I've now had a chance to test the consequences. AFAICS, in
almost all cases, the change is benign. Because control is returned to the R
command prompt before a dialog closes, there is the possibility that a user
will put R in a state that produce an error (e.g., erasing a data set that
existed when the dialog opened), but that seems to me unlikely.

In some cases, however, when the OK button is pressed in a dialog, another
dialog opens, and, to work properly, the function dispatched by the OK
button should wait until the second dialog closes, since it requires
information supplied by the user in the second dialog. Removing
tkwait.window() from the second dialog produces an error in this
circumstance. I've therefore introduced an optional force.tkwait argument,
which defaults to FALSE, to the Rcmdr dialogSuffix() macro; setting the
argument to TRUE in a secondary dialog solves the problem that I outlined. 

With these changes, I think that the Rcmdr now behaves correctly on all
platforms, permitting, e.g., help pages to display properly under Mac OS X
and in RStudio.

Thanks to everyone who addressed this problem,
 John

> -----Original Message-----
> From: r-sig-mac-bounces at r-project.org [mailto:r-sig-mac-bounces at r-
> project.org] On Behalf Of John Fox
> Sent: Wednesday, August 13, 2014 12:57 PM
> To: 'Prof Brian Ripley'; 'peter dalgaard'
> Cc: 'R-SIG-Mac'
> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> 
> Dear Brian and Peter,
> 
> Thanks for picking up this issue.
> 
> The behaviour that Brian reports is exactly what I observed, and the
> Tcl/Tk
> doc that he quotes is what I consulted. It's not surprising to me that
> the R
> process waits until the Tk window calling tkwait.window() is destroyed.
> I
> suppose that because the internal help browser runs under the R
> process, it
> too waits, while an external browser -- as is spawned by help.start() -
> -
> runs in an independent process.
> 
> As I mentioned, I've removed the call to tkwait.window() in the Rcmdr
> sources (it's in a "macro" called by every Rcmdr modal dialog) and will
> test
> whether there are negative consequences. I've observed none so far.
> 
> BTW, the same issue arises when the Rcmdr is run inside of RStudio,
> which
> directs help to its own browser.
> 
> Best,
>  John
> 
> > -----Original Message-----
> > From: Prof Brian Ripley [mailto:ripley at stats.ox.ac.uk]
> > Sent: Wednesday, August 13, 2014 11:08 AM
> > To: peter dalgaard; John Fox
> > Cc: R-SIG-Mac
> > Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> >
> > On 13/08/2014 15:11, peter dalgaard wrote:
> > > This isn't unique to tcltk. Anything that blocks the keyboard loop
> > blocks the help browser too. Try e.g. opening the help for ls, type
> > Sys.sleep(15) and watch the beach ball in the help browser as you try
> > to scroll in it.
> >
> > But Sys.sleep should not be blocking an event loop: from its help
> >
> >       The intention is that this function suspends execution of R
> >       expressions but wakes the process up often enough to respond to
> >       GUI events, typically every 0.5 seconds.
> >
> > The mechanisms to mesh event loops which are in place for Sys.sleep
> > are
> > R_CheckUserInterrupt (which calls R_ProcessEvents) and R_runHandlers.
> >
> > Note that the help for tkwait says (on my box)
> >
> >         While  the  tkwait command is waiting it processes events in
> > the
> > normal
> >         fashion, so the application will continue to respond to  user
> > interac-
> >         tions.   If  an  event handler invokes tkwait again, the
> nested
> > call to
> >         tkwait must complete before the outer call can complete.
> >
> > but as this is X11 Tk, it means X11/Unix events.  You can demonstrate
> > that, as e.g the http server still works (use help.start() first).
> >
> >
> > > -pd
> > >
> > >
> > > On 13 Aug 2014, at 15:14 , John Fox <jfox at mcmaster.ca> wrote:
> > >
> > >> Dear Simon,
> > >>
> > >> Here's a simple script that will demonstrate the problem:
> > >>
> > >> ----- snip -----
> > >>
> > >> library(tcltk)
> > >>
> > >> top <- tktoplevel()
> > >> button <- ttkbutton(top, text="help", command=function()
> > print(help(lm)))
> > >> tkgrid(button)
> > >> tkwait.window(top)
> > >>
> > >> ----- snip -----
> > >>
> > >> The problem is produced by tkwait.window(), and this call is in
> all
> > Rcmdr modal dialogs. As I read the Tcl/Tk docs, it shouldn't cause
> > problems, but obviously it's causing this problem.  I'm also not
> > certain whether calling tkwait.windows() is necessary and will look
> > into the consequences of removing it -- I believe that it's been
> there
> > for many years, from the earliest versions of the Rcmdr.
> > >>
> > >> With respect to changing using preferences, this is done only
> until
> > the Commander() exits. If getting rid of the call to tkwait.window()
> > proves problematic, I can ask the user for permission in a pop-up
> > dialog.
> > >>
> > >> Thanks for your help,
> > >> John
> > >>
> > >> On Wed, 13 Aug 2014 00:25:30 -0400
> > >> Simon Urbanek <simon.urbanek at r-project.org> wrote:
> > >>> John,
> > >>>
> > >>> can't you address the underlying issue instead and don't block
> the
> > event loop? A lot of things don't work if the event loop is blocked
> and
> > I would argue that changing user's preferences behind the scenes is a
> > violation of the CRAN policies.
> > >>> I'm happy to help if you send me a bit more details.
> > >>>
> > >>> Cheers,
> > >>> Simon
> > >>>
> > >>>
> > >>> On Aug 12, 2014, at 6:15 PM, John Fox <jfox at mcmaster.ca> wrote:
> > >>>
> > >>>> Hi Marc,
> > >>>>
> > >>>>> -----Original Message-----
> > >>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> > >>>>> Sent: Tuesday, August 12, 2014 5:10 PM
> > >>>>> To: John Fox
> > >>>>> Cc: r-sig-mac at r-project.org
> > >>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> > >>>>>
> > >>>>> Hi John,
> > >>>>>
> > >>>>> Happy to help. I recalled seeing something previously on this,
> so
> > a
> > >>>>> search using rseek.org was fruitful.
> > >>>>>
> > >>>>> The potential gotcha, of course, is if for some reason the GUI
> > exits in
> > >>>>> a manner possibly not under your control. The setting would not
> > be
> > >>>>> returned to the default and the therefore, as you note,
> retained
> > for a
> > >>>>> subsequent session where the behavior may not be desired.
> > >>>>>
> > >>>>
> > >>>> Yes, there is that possibility.
> > >>>>
> > >>>>> If this is for Rcmdr, perhaps this is something that could be
> > added to
> > >>>>> a menu, where the user can alter the behavior in either
> direction
> > as
> > >>>>> desired, if that makes sense.
> > >>>>>
> > >>>>
> > >>>> As you guessed, this is for the Rcmdr, where the built-in R.app
> > browser
> > >>>> doesn't play well with dialog help buttons -- the browser is
> > unresponsive
> > >>>> until the dialog that called it closes -- while an external
> html-
> > help
> > >>>> browser works fine.
> > >>>>
> > >>>> I've now successfully implemented the approach I outlined, in
> > which the
> > >>>> previous setting is restored when the Commander GUI closes. As
> you
> > point
> > >>>> out, this isn't bullet-proof, but I think it is the best I can
> do
> > for now.
> > >>>> Allowing the user to apply the change would be safer, but users
> > are unlikely
> > >>>> to discover the option.
> > >>>>
> > >>>>> Simon would need to comment on the potential for alternatives.
> > >>>>
> > >>>> Yes, that would be welcome. I still think that a setting via
> > options() would
> > >>>> be better.
> > >>>>
> > >>>> Thanks again for your help,
> > >>>> John
> > >>>>
> > >>>>>
> > >>>>> Best regards,
> > >>>>>
> > >>>>> Marc
> > >>>>>
> > >>>>>
> > >>>>> On Aug 12, 2014, at 3:46 PM, John Fox <jfox at mcmaster.ca> wrote:
> > >>>>>
> > >>>>>> Hi Marc,
> > >>>>>>
> > >>>>>> Thanks for this. It does work, and I wasn't aware of it --
> > you've
> > >>>>> obviously
> > >>>>>> done a better job than I did of searching for a solution!
> > >>>>>>
> > >>>>>> Although this approach works, it has the disadvantage of
> > permanently
> > >>>>>> changing the help browser in R.app, beyond the current
> session,
> > at
> > >>>>> least
> > >>>>>> until the change is explicitly undone. I think that I can work
> > around
> > >>>>> that
> > >>>>>> by something like
> > >>>>>>
> > >>>>>> 	current <- system("defaults read org.R-project.R",
> > intern=TRUE)
> > >>>>>>
> > >>>>>> to discover whether the use.external.help preference exists,
> and
> > if
> > >>>>> so, what
> > >>>>>> its value is; to then set the preference to YES if it's NO or
> > unset;
> > >>>>> and
> > >>>>>> finally to remove the preference on exit.
> > >>>>>>
> > >>>>>> Again, thanks -- I think that I can work with this, though it
> > would
> > >>>>> in my
> > >>>>>> opinion be better if the help browser were settable for the
> > current
> > >>>>> session
> > >>>>>> directly via options() in R, or if one could specify the
> browser
> > in a
> > >>>>> call
> > >>>>>> to help().
> > >>>>>>
> > >>>>>> Best (and thanks again),
> > >>>>>> John
> > >>>>>>
> > >>>>>>> -----Original Message-----
> > >>>>>>> From: Marc Schwartz [mailto:marc_schwartz at me.com]
> > >>>>>>> Sent: Tuesday, August 12, 2014 4:04 PM
> > >>>>>>> To: John Fox
> > >>>>>>> Cc: r-sig-mac at r-project.org
> > >>>>>>> Subject: Re: [R-SIG-Mac] bypassing the R.app help browser?
> > >>>>>>>
> > >>>>>>> On Aug 12, 2014, at 2:33 PM, John Fox <jfox at mcmaster.ca>
> wrote:
> > >>>>>>>
> > >>>>>>>> Dear list members,
> > >>>>>>>>
> > >>>>>>>> Is there a way to bypass the R.app help browser, and to use
> > instead
> > >>>>>>> an alternative browser, such as the one pointed to by
> > >>>>>>> getOption("browser")?
> > >>>>>>>>
> > >>>>>>>> I've tried a number of strategies, including setting
> > .Platform$GUI
> > >>>>> <-
> > >>>>>>> "unknown". The only approach I tried that works is to mask
> the
> > >>>>> help()
> > >>>>>>> function with a modified version, but this produces other
> > problems,
> > >>>>>>> such as referencing unexported objects from utils and tools.
> > >>>>>>>>
> > >>>>>>>> It would be nice if the help() function had a browser
> > argument,
> > >>>>>>> similar to that in browseURL(), and defaulting to the current
> > >>>>>>> behaviour.
> > >>>>>>>>
> > >>>>>>>> Any suggestions would be appreciated.
> > >>>>>>>>
> > >>>>>>>> John
> > >>>>>>>
> > >>>>>>>
> > >>>>>>> John,
> > >>>>>>>
> > >>>>>>> I found this post from Simon that seems to work:
> > >>>>>>>
> > >>>>>>> https://stat.ethz.ch/pipermail/r-sig-mac/2009-
> > December/006908.html
> > >>>>>>>
> > >>>>>>> I tried it on my Mac in the latest version of R.app, which I
> > >>>>> normally
> > >>>>>>> do not use and the help system does now popup a browser.
> > >>>>>>>
> > >>>>>>>
> > >>>>>>> Regards,
> > >>>>>>>
> > >>>>>>> Marc Schwartz
> > >>>>>>
> > >>>>
> > >>>> _______________________________________________
> > >>>> R-SIG-Mac mailing list
> > >>>> R-SIG-Mac at r-project.org
> > >>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > >>>>
> > >>>
> > >>
> > >> _______________________________________________
> > >> R-SIG-Mac mailing list
> > >> R-SIG-Mac at r-project.org
> > >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > >
> >
> >
> > --
> > Brian D. Ripley,                  ripley at stats.ox.ac.uk
> > Emeritus Professor of Applied Statistics, University of Oxford
> > 1 South Parks Road, Oxford OX1 3TG, UK
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From tobias.verbeke at openanalytics.eu  Sat Aug 23 17:43:19 2014
From: tobias.verbeke at openanalytics.eu (Tobias Verbeke)
Date: Sat, 23 Aug 2014 17:43:19 +0200 (CEST)
Subject: [R-SIG-Mac] compile R on Mac OS 10.9.4 with cairo support
In-Reply-To: <1022832699.144213.1408794571657.JavaMail.zimbra@openanalytics.eu>
Message-ID: <1801972854.144375.1408808599427.JavaMail.zimbra@openanalytics.eu>

Dear list,

I'm trying to compile R from source on Mac OS 10.9.4 using the flags from

https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R-build/conf.mavericks-x86_64

I untarred the following libraries from http://r.research.att.com/libs/

gfortran-4.8.2-darwin13.tar.bz2
tcl8.6.0-darwin10-x86_64.tar.gz
tk8.6.0-darwin10-x86_64.tar.gz
freetype-2.5.3-darwin10-bin2.tar.gz
pkg-config-0.25-darwin9-bin3.tar.gz
fontconfig-2.11.1-darwin10-bin2.tar.gz
fontconfig-2.11.1-add.tar.gz
cairo-1.12.16-darwin10-bin2.tar.gz
jpeg-v8d-darwin9-bin4.tar.gz
libpng-1.5.18-darwin10-bin2.tar.gz
tiff-4.0.3-darwin10-bin2.tar.gz
pixman-0.32.4-darwin10-bin2.tar.gz
xz-5.0.5-darwin10-bin2.tar.gz

Then I applied the patch from http://r.research.att.com/libs/cairo-1.12.16-darwin13-static-pkgconfig.patch using

cd /usr/local/lib/pkgconfig
sudo curl -O http://r.research.att.com/libs/cairo-1.12.16-darwin13-static-pkgconfig.patch
sudo patch < cairo-1.12.16-darwin13-static-pkgconfig.patch

Some patches are rejected and the resulting 'fontconfig.pc.rej' looks as follows:

***************
*** 13,18 ****
  Version: 2.11.0
  Requires:  freetype2
  Requires.private:  libxml-2.0
- Libs: -L${libdir} -lfontconfig
- Libs.private:  -L/usr/local/lib -lfreetype    -lxml2  
  Cflags: -I${includedir}  -I/usr/local/include/freetype2 -I/usr/local/include/libpng15    -I/usr/include/libxml2  
--- 13,18 ----
  Version: 2.11.0
  Requires:  freetype2
  Requires.private:  libxml-2.0
+ Libs: /usr/local/lib/libfontconfig.a
+ Libs.private:  /usr/local/lib/libfreetype.a -lxml2
  Cflags: -I${includedir}  -I/usr/local/include/freetype2 -I/usr/local/include/libpng15    -I/usr/include/libxml2  

Compilation itself goes fine, but I do not succeed in getting proper cairo support.

The config.log has the following:

checking whether pkg-config knows about cairo... yes
Package libxml-2.0 was not found in the pkg-config search path.
Perhaps you should add the directory containing `libxml-2.0.pc'
to the PKG_CONFIG_PATH environment variable
Package 'libxml-2.0', required by 'Fontconfig', not found
Package libxml-2.0 was not found in the pkg-config search path.
Perhaps you should add the directory containing `libxml-2.0.pc'
to the PKG_CONFIG_PATH environment variable
Package 'libxml-2.0', required by 'Fontconfig', not found
Package libxml-2.0 was not found in the pkg-config search path.
Perhaps you should add the directory containing `libxml-2.0.pc'
to the PKG_CONFIG_PATH environment variable
Package 'libxml-2.0', required by 'Fontconfig', not found
Package libxml-2.0 was not found in the pkg-config search path.
Perhaps you should add the directory containing `libxml-2.0.pc'
to the PKG_CONFIG_PATH environment variable
Package 'libxml-2.0', required by 'Fontconfig', not found
checking whether cairo is >= 1.2 and works... no

Executing

sudo find / -name libxml-2.0.pc

does not give any results.

I must have overlooked something. Is there other information I can provide?

Many thanks in advance for any pointers.

Best,
Tobias


From ripley at stats.ox.ac.uk  Mon Aug 25 09:03:31 2014
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 25 Aug 2014 08:03:31 +0100
Subject: [R-SIG-Mac] compile R on Mac OS 10.9.4 with cairo support
In-Reply-To: <1801972854.144375.1408808599427.JavaMail.zimbra@openanalytics.eu>
References: <1801972854.144375.1408808599427.JavaMail.zimbra@openanalytics.eu>
Message-ID: <53FADFC3.8080001@stats.ox.ac.uk>

On 23/08/2014 16:43, Tobias Verbeke wrote:
> Dear list,
>
> I'm trying to compile R from source on Mac OS 10.9.4 using the flags from
>
> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R-build/conf.mavericks-x86_64
>
> I untarred the following libraries from http://r.research.att.com/libs/
>
> gfortran-4.8.2-darwin13.tar.bz2
> tcl8.6.0-darwin10-x86_64.tar.gz
> tk8.6.0-darwin10-x86_64.tar.gz
> freetype-2.5.3-darwin10-bin2.tar.gz
> pkg-config-0.25-darwin9-bin3.tar.gz
> fontconfig-2.11.1-darwin10-bin2.tar.gz
> fontconfig-2.11.1-add.tar.gz
> cairo-1.12.16-darwin10-bin2.tar.gz
> jpeg-v8d-darwin9-bin4.tar.gz
> libpng-1.5.18-darwin10-bin2.tar.gz
> tiff-4.0.3-darwin10-bin2.tar.gz
> pixman-0.32.4-darwin10-bin2.tar.gz
> xz-5.0.5-darwin10-bin2.tar.gz
>
> Then I applied the patch from http://r.research.att.com/libs/cairo-1.12.16-darwin13-static-pkgconfig.patch using
>
> cd /usr/local/lib/pkgconfig
> sudo curl -O http://r.research.att.com/libs/cairo-1.12.16-darwin13-static-pkgconfig.patch
> sudo patch < cairo-1.12.16-darwin13-static-pkgconfig.patch
>
> Some patches are rejected and the resulting 'fontconfig.pc.rej' looks as follows:
>
> ***************
> *** 13,18 ****
>    Version: 2.11.0
>    Requires:  freetype2
>    Requires.private:  libxml-2.0
> - Libs: -L${libdir} -lfontconfig
> - Libs.private:  -L/usr/local/lib -lfreetype    -lxml2
>    Cflags: -I${includedir}  -I/usr/local/include/freetype2 -I/usr/local/include/libpng15    -I/usr/include/libxml2
> --- 13,18 ----
>    Version: 2.11.0
>    Requires:  freetype2
>    Requires.private:  libxml-2.0
> + Libs: /usr/local/lib/libfontconfig.a
> + Libs.private:  /usr/local/lib/libfreetype.a -lxml2
>    Cflags: -I${includedir}  -I/usr/local/include/freetype2 -I/usr/local/include/libpng15    -I/usr/include/libxml2
>
> Compilation itself goes fine, but I do not succeed in getting proper cairo support.
>
> The config.log has the following:
>
> checking whether pkg-config knows about cairo... yes
> Package libxml-2.0 was not found in the pkg-config search path.
> Perhaps you should add the directory containing `libxml-2.0.pc'
> to the PKG_CONFIG_PATH environment variable
> Package 'libxml-2.0', required by 'Fontconfig', not found
> Package libxml-2.0 was not found in the pkg-config search path.
> Perhaps you should add the directory containing `libxml-2.0.pc'
> to the PKG_CONFIG_PATH environment variable
> Package 'libxml-2.0', required by 'Fontconfig', not found
> Package libxml-2.0 was not found in the pkg-config search path.
> Perhaps you should add the directory containing `libxml-2.0.pc'
> to the PKG_CONFIG_PATH environment variable
> Package 'libxml-2.0', required by 'Fontconfig', not found
> Package libxml-2.0 was not found in the pkg-config search path.
> Perhaps you should add the directory containing `libxml-2.0.pc'
> to the PKG_CONFIG_PATH environment variable
> Package 'libxml-2.0', required by 'Fontconfig', not found
> checking whether cairo is >= 1.2 and works... no
>
> Executing
>
> sudo find / -name libxml-2.0.pc
>
> does not give any results.
>
> I must have overlooked something. Is there other information I can provide?

Apple overlooked something.  The pkg-config you are using is not 
provided by Apple, and Apple does not provide pkg-config files for the 
software it provides[*] where installing from sources would do so.

I do have a /usr/local/lib/pkgconfig/libxml-2.0.pc, containing

prefix=/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=${prefix}/include
modules=1

Name: libXML
Version: 2.9.1
Description: libXML library version2.
Requires:
Libs: -L${libdir} -lxml2
Libs.private:  -lpthread -lz  -liconv -lm
Cflags: -I${includedir}/libxml2

from a source installation of libxml2.

[*] Strangely, /usr/lib/pkgconfig is not quite empty on my box.

>
> Many thanks in advance for any pointers.
>
> Best,
> Tobias
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford
1 South Parks Road, Oxford OX1 3TG, UK


From simon.urbanek at r-project.org  Mon Aug 25 16:41:42 2014
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 25 Aug 2014 10:41:42 -0400
Subject: [R-SIG-Mac] compile R on Mac OS 10.9.4 with cairo support
In-Reply-To: <53FADFC3.8080001@stats.ox.ac.uk>
References: <1801972854.144375.1408808599427.JavaMail.zimbra@openanalytics.eu>
	<53FADFC3.8080001@stats.ox.ac.uk>
Message-ID: <3E1322C4-ABAE-477F-8696-B1A1F55BA4A5@r-project.org>


On Aug 25, 2014, at 3:03 AM, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:

> On 23/08/2014 16:43, Tobias Verbeke wrote:
>> Dear list,
>> 
>> I'm trying to compile R from source on Mac OS 10.9.4 using the flags from
>> 
>> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R-build/conf.mavericks-x86_64
>> 
>> I untarred the following libraries from http://r.research.att.com/libs/
>> 
>> gfortran-4.8.2-darwin13.tar.bz2
>> tcl8.6.0-darwin10-x86_64.tar.gz
>> tk8.6.0-darwin10-x86_64.tar.gz
>> freetype-2.5.3-darwin10-bin2.tar.gz
>> pkg-config-0.25-darwin9-bin3.tar.gz
>> fontconfig-2.11.1-darwin10-bin2.tar.gz
>> fontconfig-2.11.1-add.tar.gz
>> cairo-1.12.16-darwin10-bin2.tar.gz
>> jpeg-v8d-darwin9-bin4.tar.gz
>> libpng-1.5.18-darwin10-bin2.tar.gz
>> tiff-4.0.3-darwin10-bin2.tar.gz
>> pixman-0.32.4-darwin10-bin2.tar.gz
>> xz-5.0.5-darwin10-bin2.tar.gz
>> 
>> Then I applied the patch from http://r.research.att.com/libs/cairo-1.12.16-darwin13-static-pkgconfig.patch using
>> 
>> cd /usr/local/lib/pkgconfig
>> sudo curl -O http://r.research.att.com/libs/cairo-1.12.16-darwin13-static-pkgconfig.patch
>> sudo patch < cairo-1.12.16-darwin13-static-pkgconfig.patch
>> 
>> Some patches are rejected and the resulting 'fontconfig.pc.rej' looks as follows:
>> 
>> ***************
>> *** 13,18 ****
>>   Version: 2.11.0
>>   Requires:  freetype2
>>   Requires.private:  libxml-2.0
>> - Libs: -L${libdir} -lfontconfig
>> - Libs.private:  -L/usr/local/lib -lfreetype    -lxml2
>>   Cflags: -I${includedir}  -I/usr/local/include/freetype2 -I/usr/local/include/libpng15    -I/usr/include/libxml2
>> --- 13,18 ----
>>   Version: 2.11.0
>>   Requires:  freetype2
>>   Requires.private:  libxml-2.0
>> + Libs: /usr/local/lib/libfontconfig.a
>> + Libs.private:  /usr/local/lib/libfreetype.a -lxml2
>>   Cflags: -I${includedir}  -I/usr/local/include/freetype2 -I/usr/local/include/libpng15    -I/usr/include/libxml2
>> 
>> Compilation itself goes fine, but I do not succeed in getting proper cairo support.
>> 
>> The config.log has the following:
>> 
>> checking whether pkg-config knows about cairo... yes
>> Package libxml-2.0 was not found in the pkg-config search path.
>> Perhaps you should add the directory containing `libxml-2.0.pc'
>> to the PKG_CONFIG_PATH environment variable
>> Package 'libxml-2.0', required by 'Fontconfig', not found
>> Package libxml-2.0 was not found in the pkg-config search path.
>> Perhaps you should add the directory containing `libxml-2.0.pc'
>> to the PKG_CONFIG_PATH environment variable
>> Package 'libxml-2.0', required by 'Fontconfig', not found
>> Package libxml-2.0 was not found in the pkg-config search path.
>> Perhaps you should add the directory containing `libxml-2.0.pc'
>> to the PKG_CONFIG_PATH environment variable
>> Package 'libxml-2.0', required by 'Fontconfig', not found
>> Package libxml-2.0 was not found in the pkg-config search path.
>> Perhaps you should add the directory containing `libxml-2.0.pc'
>> to the PKG_CONFIG_PATH environment variable
>> Package 'libxml-2.0', required by 'Fontconfig', not found
>> checking whether cairo is >= 1.2 and works... no
>> 
>> Executing
>> 
>> sudo find / -name libxml-2.0.pc
>> 
>> does not give any results.
>> 
>> I must have overlooked something. Is there other information I can provide?
> 
> Apple overlooked something.  The pkg-config you are using is not provided by Apple, and Apple does not provide pkg-config files for the software it provides[*] where installing from sources would do so.
> 
> I do have a /usr/local/lib/pkgconfig/libxml-2.0.pc, containing
> 
> prefix=/usr
> exec_prefix=${prefix}
> libdir=${exec_prefix}/lib
> includedir=${prefix}/include
> modules=1
> 
> Name: libXML
> Version: 2.9.1
> Description: libXML library version2.
> Requires:
> Libs: -L${libdir} -lxml2
> Libs.private:  -lpthread -lz  -liconv -lm
> Cflags: -I${includedir}/libxml2
> 
> from a source installation of libxml2.
> 
> [*] Strangely, /usr/lib/pkgconfig is not quite empty on my box.
> 

Indeed, I have

$ ls -l /usr/lib/pkgconfig/
total 32
-rw-r--r--  1 root  wheel   329 Dec  6  2013 apr-1.pc
-rw-r--r--  1 root  wheel   446 Dec  6  2013 apr-util-1.pc
-rw-r--r--  1 root  wheel   239 Dec  6  2013 libcrypto.pc
-rw-r--r--  1 root  wheel  1803 Mar 26 16:16 libcurl.pc
-rw-r--r--  1 root  wheel   327 Dec  6  2013 libedit.pc
-rw-r--r--  1 root  wheel   275 Mar 26 16:17 libexslt.pc
-rw-r--r--  1 root  wheel  3591 Dec  6  2013 libiodbc.pc
-rw-r--r--  1 root  wheel   268 Dec  6  2013 libpcre.pc
-rw-r--r--  1 root  wheel   301 Dec  6  2013 libpcreposix.pc
-rw-r--r--  1 root  wheel   254 Dec  6  2013 libssl.pc
-rw-r--r--  1 root  wheel   268 Mar 26 16:17 libxml-2.0.pc
-rw-r--r--  1 root  wheel   265 Mar 26 16:17 libxslt.pc
-rw-r--r--  1 root  wheel   264 Dec  6  2013 openssl.pc

Those are all for system libraries. But I can't really tell where they come from - some of them are from the base system:

$ pkgutil --file-info /usr/lib/pkgconfig/libpcre.pc
volume: /
path: /usr/lib/pkgconfig/libpcre.pc

pkgid: com.apple.pkg.Essentials
pkg-version: 10.9.0.1.1.1306847324
install-time: 1386365859

but the one in question doesn't have a record:

$ pkgutil --file-info /usr/lib/pkgconfig/libxml-2.0.pc
volume: /
path: /usr/lib/pkgconfig/libxml-2.0.pc

I have put the ones without provenance into

http://r.research.att.com/libs/pkgconfig-system-stubs-darwin13.tar.gz

in case they are useful

Cheers,
Simon



>> 
>> Many thanks in advance for any pointers.
>> 
>> Best,
>> Tobias
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
> 1 South Parks Road, Oxford OX1 3TG, UK
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From thomas.tse at standardperpetual.com  Mon Aug 25 09:27:17 2014
From: thomas.tse at standardperpetual.com (Thomas Tse, CFA FRM)
Date: Mon, 25 Aug 2014 15:27:17 +0800
Subject: [R-SIG-Mac] kernel_task uses all memory with foreach()
Message-ID: <F6D65EB6-4F6F-4695-9DD6-D9258C7A55EF@standardperpetual.com>

Hello,

I'm trying to use foreach() in my iMac (identifier iMac14,3) but it comes out a "your system has run out of application memory" issue.

After taking a look into Activity Monitor, I see that "kernel_task" keeps consuming memory until it uses all RAM. I use a lot of gc() within foreach() so that each R session is not taking a lot of memories ... the problem seems to be with kernel_task, which does not release RAM.

Anyone could suggest a solution?

Many thanks,
Tom

From bpbond at gmail.com  Tue Aug 26 12:14:24 2014
From: bpbond at gmail.com (Ben Bond-Lamberty)
Date: Tue, 26 Aug 2014 06:14:24 -0400
Subject: [R-SIG-Mac] kernel_task uses all memory with foreach()
In-Reply-To: <F6D65EB6-4F6F-4695-9DD6-D9258C7A55EF@standardperpetual.com>
References: <F6D65EB6-4F6F-4695-9DD6-D9258C7A55EF@standardperpetual.com>
Message-ID: <CAGg1N9+D9hQ6kH_0xRoO9L7MJFNNjU01FhPapNg0Wbfd9PeKcw@mail.gmail.com>

It seems unlikely that the problem is with kernel_task; I and many
others have used foreach() extensively without a problem. Total guess:
you're testing and running your code repeatedly, and in doing so,
pausing but not killing the child processes. These are accumulating,
and consuming system resources.

Best would be to post a reproducible example, if possible.

Ben

On Mon, Aug 25, 2014 at 3:27 AM, Thomas Tse, CFA FRM
<thomas.tse at standardperpetual.com> wrote:
> Hello,
>
> I'm trying to use foreach() in my iMac (identifier iMac14,3) but it comes out a "your system has run out of application memory" issue.
>
> After taking a look into Activity Monitor, I see that "kernel_task" keeps consuming memory until it uses all RAM. I use a lot of gc() within foreach() so that each R session is not taking a lot of memories ... the problem seems to be with kernel_task, which does not release RAM.
>
> Anyone could suggest a solution?
>
> Many thanks,
> Tom
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From murdoch.duncan at gmail.com  Sat Aug 30 21:04:28 2014
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 30 Aug 2014 15:04:28 -0400
Subject: [R-SIG-Mac] Bug in R.app code editor
Message-ID: <5402203C.60508@gmail.com>

The following sequence reliably crashes R.app, with sessionInfo() as
follows:

R version 3.1.1 (2014-07-10)
Platform: x86_64-apple-darwin13.1.0 (64-bit)

locale:
[1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

Here's the sequence:

Start R.app as usual, with no history, no Rdata available.

Go to a web page in Firefox and copy a table.  For example the table of
CRAN test results on this page:

http://cran.r-project.org/web/checks/check_results_MASS.html

Do the copying by selecting a point in the top left cell and dragging
over the whole table, then Apple-C.

Back in R.app, open a new document to edit, and paste the text.  This
causes a crash with error report as shown below.  I haven't tried a
nightly build; I don't have a lot of connectivity right now.

Duncan Murdoch

Process:         R [2567]
Path:            /Applications/R.app/Contents/MacOS/R
Identifier:      org.R-project.R
Version:         R 3.1.1 GUI 1.65 Mavericks build (6784)
Code Type:       X86-64 (Native)
Parent Process:  launchd [254]
Responsible:     R [2567]
User ID:         501

Date/Time:       2014-08-30 15:03:07.049 -0400
OS Version:      Mac OS X 10.9.4 (13E28)
Report Version:  11
Anonymous UUID:  7E50F7DF-044C-6884-B23C-C8AE83B8139D

Sleep/Wake UUID: 6EF4F23A-9C9E-4636-9415-433329A64CD4

Crashed Thread:  0  Dispatch queue: com.apple.main-thread

Exception Type:  EXC_BAD_ACCESS (SIGSEGV)
Exception Codes: KERN_INVALID_ADDRESS at 0x0000000000000000

VM Regions Near 0:
-->
    __TEXT                 000000010f4b7000-000000010f542000 [  556K]
r-x/rwx SM=COW  /Applications/R.app/Contents/MacOS/R

Thread 0 Crashed:: Dispatch queue: com.apple.main-thread
0   ???                           	000000000000000000 0 + 0
1   org.R-project.R               	0x000000010f522ebf
-[RScriptEditorTypeSetter actionForControlCharacterAtIndex:] + 47
2   com.apple.AppKit              	0x00007fff8327e3c0 -[NSTypesetter
_layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:maxCharacterIndex:nextGlyphIndex:nextCharacterIndex:]
+ 1462
3   com.apple.AppKit              	0x00007fff82bf40a8 -[NSTypesetter
layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
+ 108
4   com.apple.AppKit              	0x00007fff82bf3fac -[NSATSTypesetter
layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
+ 1151
5   com.apple.AppKit              	0x00007fff82bf3e5d -[NSATSTypesetter
layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
+ 816
6   com.apple.AppKit              	0x00007fff82bffb19
-[NSLayoutManager(NSPrivate) _recalculateUsageForTextContainerAtIndex:]
+ 919
7   com.apple.AppKit              	0x00007fff82c0b233
-[NSLayoutManager(NSPrivate)
_validatedStoredUsageForTextContainerAtIndex:] + 82
8   com.apple.AppKit              	0x00007fff82c0b1b7 -[NSLayoutManager
usedRectForTextContainer:] + 122
9   com.apple.AppKit              	0x00007fff82cf2506 -[NSTextView
textContainerOrigin] + 342
10  com.apple.AppKit              	0x00007fff82bf772a -[NSLayoutManager
_primitiveInvalidateDisplayForGlyphRange:] + 3044
11  com.apple.AppKit              	0x00007fff82bf662f -[NSLayoutManager
invalidateDisplayForCharacterRange:] + 431
12  com.apple.AppKit              	0x00007fff82c0b105
-[NSLayoutManager(NSPrivate) _invalidateDisplayIfNeeded] + 72
13  com.apple.AppKit              	0x00007fff82c014d5 -[NSLayoutManager
textContainerForGlyphAtIndex:effectiveRange:] + 534
14  com.apple.AppKit              	0x00007fff8327e008 -[NSTypesetter
_layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:maxCharacterIndex:nextGlyphIndex:nextCharacterIndex:]
+ 510
15  com.apple.AppKit              	0x00007fff82bf40a8 -[NSTypesetter
layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
+ 108
16  com.apple.AppKit              	0x00007fff82bf3fac -[NSATSTypesetter
layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
+ 1151
17  com.apple.AppKit              	0x00007fff82c03d30
-[NSLayoutManager(NSPrivate)
_fillLayoutHoleForCharacterRange:desiredNumberOfLines:isSoft:] + 4129
18  com.apple.AppKit              	0x00007fff82cac8d9
_NSFastFillAllLayoutHolesForGlyphRange + 1435
19  com.apple.AppKit              	0x00007fff82cf6009
-[NSLayoutManager(NSPrivate)
_firstPassGlyphRangeForBoundingRect:inTextContainer:okToFillHoles:] + 1393
20  com.apple.AppKit              	0x00007fff82cf4cb4
-[NSLayoutManager(NSPrivate)
_glyphRangeForBoundingRect:inTextContainer:fast:okToFillHoles:] + 875
21  com.apple.AppKit              	0x00007fff82c5fe52 -[NSTextView
setNeedsDisplayInRect:avoidAdditionalLayout:] + 1466
22  org.R-project.R               	0x000000010f5088eb
-[RScriptEditorTextView doSyntaxHighlighting] + 2203
23  com.apple.Foundation          	0x00007fff837fdcb7
__NSFireDelayedPerform + 333
24  com.apple.CoreFoundation      	0x00007fff849ce3e4
__CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 20
25  com.apple.CoreFoundation      	0x00007fff849cdf1f __CFRunLoopDoTimer
+ 1151
26  com.apple.CoreFoundation      	0x00007fff84a3f5aa
__CFRunLoopDoTimers + 298
27  com.apple.CoreFoundation      	0x00007fff849896a5 __CFRunLoopRun + 1525
28  com.apple.CoreFoundation      	0x00007fff84988e75
CFRunLoopRunSpecific + 309
29  com.apple.HIToolbox           	0x00007fff844c9a0d
RunCurrentEventLoopInMode + 226
30  com.apple.HIToolbox           	0x00007fff844c9685
ReceiveNextEventCommon + 173
31  com.apple.HIToolbox           	0x00007fff844c95bc
_BlockUntilNextEventMatchingListInModeWithFilter + 65
32  com.apple.AppKit              	0x00007fff82b2d24e _DPSNextEvent + 1434
33  com.apple.AppKit              	0x00007fff82b2c89b -[NSApplication
nextEventMatchingMask:untilDate:inMode:dequeue:] + 122
34  org.R-project.R               	0x000000010f4c30ac -[RController
doProcessEvents:] + 204
35  org.R-project.R               	0x000000010f4bd4ba -[RController
handleReadConsole:] + 186
36  org.R-project.R               	0x000000010f4c6d89 Re_ReadConsole + 185
37  libR.dylib                    	0x000000010f6a5491 R_ReplDLLdo1 + 145
(main.c:340)
38  org.R-project.R               	0x000000010f4d5157
run_REngineRmainloop + 295
39  org.R-project.R               	0x000000010f4c952a -[REngine runREPL]
+ 138
40  org.R-project.R               	0x000000010f4b84df main + 815
41  libdyld.dylib                 	0x00007fff80b2e5fd start + 1

Thread 1:: Dispatch queue: com.apple.libdispatch-manager
0   libsystem_kernel.dylib        	0x00007fff8db8d662 kevent64 + 10
1   libdispatch.dylib             	0x00007fff836a8421
_dispatch_mgr_invoke + 239
2   libdispatch.dylib             	0x00007fff836a8136
_dispatch_mgr_thread + 52

Thread 2:
0   libsystem_kernel.dylib        	0x00007fff8db8c9aa __select + 10
1   org.R-project.R               	0x000000010f4bb11c -[RController
readThread:] + 604
2   com.apple.Foundation          	0x00007fff8380076b __NSThread__main__
+ 1318
3   libsystem_pthread.dylib       	0x00007fff8033e899 _pthread_body + 138
4   libsystem_pthread.dylib       	0x00007fff8033e72a _pthread_start + 137
5   libsystem_pthread.dylib       	0x00007fff80342fc9 thread_start + 13

Thread 3:
0   libsystem_kernel.dylib        	0x00007fff8db88a1a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff8db87d18 mach_msg + 64
2   com.apple.CoreFoundation      	0x00007fff84989f15
__CFRunLoopServiceMachPort + 181
3   com.apple.CoreFoundation      	0x00007fff84989539 __CFRunLoopRun + 1161
4   com.apple.CoreFoundation      	0x00007fff84988e75
CFRunLoopRunSpecific + 309
5   com.apple.AppKit              	0x00007fff82ccd05e _NSEventThread + 144
6   libsystem_pthread.dylib       	0x00007fff8033e899 _pthread_body + 138
7   libsystem_pthread.dylib       	0x00007fff8033e72a _pthread_start + 137
8   libsystem_pthread.dylib       	0x00007fff80342fc9 thread_start + 13

Thread 4:
0   libsystem_kernel.dylib        	0x00007fff8db8ce6a __workq_kernreturn
+ 10
1   libsystem_pthread.dylib       	0x00007fff8033ff08 _pthread_wqthread
+ 330
2   libsystem_pthread.dylib       	0x00007fff80342fb9 start_wqthread + 13

Thread 5:
0   libsystem_kernel.dylib        	0x00007fff8db8ce6a __workq_kernreturn
+ 10
1   libsystem_pthread.dylib       	0x00007fff8033ff08 _pthread_wqthread
+ 330
2   libsystem_pthread.dylib       	0x00007fff80342fb9 start_wqthread + 13

Thread 6:
0   libsystem_kernel.dylib        	0x00007fff8db8ce6a __workq_kernreturn
+ 10
1   libsystem_pthread.dylib       	0x00007fff8033ff08 _pthread_wqthread
+ 330
2   libsystem_pthread.dylib       	0x00007fff80342fb9 start_wqthread + 13

Thread 7:
0   libsystem_kernel.dylib        	0x00007fff8db8ce6a __workq_kernreturn
+ 10
1   libsystem_pthread.dylib       	0x00007fff8033ff08 _pthread_wqthread
+ 330
2   libsystem_pthread.dylib       	0x00007fff80342fb9 start_wqthread + 13

Thread 8:: JavaScriptCore::BlockFree
0   libsystem_kernel.dylib        	0x00007fff8db8c716 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff80340c3b _pthread_cond_wait
+ 727
2   com.apple.JavaScriptCore      	0x00007fff80d07116
WTF::ThreadCondition::timedWait(WTF::Mutex&, double) + 118
3   com.apple.JavaScriptCore      	0x00007fff80d06c35
JSC::BlockAllocator::blockFreeingThreadMain() + 117
4   com.apple.JavaScriptCore      	0x00007fff80cfbf5f
WTF::wtfThreadEntryPoint(void*) + 15
5   libsystem_pthread.dylib       	0x00007fff8033e899 _pthread_body + 138
6   libsystem_pthread.dylib       	0x00007fff8033e72a _pthread_start + 137
7   libsystem_pthread.dylib       	0x00007fff80342fc9 thread_start + 13

Thread 9:: JavaScriptCore::Marking
0   libsystem_kernel.dylib        	0x00007fff8db8c716 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff80340c3b _pthread_cond_wait
+ 727
2   com.apple.JavaScriptCore      	0x00007fff80d07737
JSC::GCThread::waitForNextPhase() + 119
3   com.apple.JavaScriptCore      	0x00007fff80d075c8
JSC::GCThread::gcThreadMain() + 88
4   com.apple.JavaScriptCore      	0x00007fff80cfbf5f
WTF::wtfThreadEntryPoint(void*) + 15
5   libsystem_pthread.dylib       	0x00007fff8033e899 _pthread_body + 138
6   libsystem_pthread.dylib       	0x00007fff8033e72a _pthread_start + 137
7   libsystem_pthread.dylib       	0x00007fff80342fc9 thread_start + 13

Thread 10:: JavaScriptCore::Marking
0   libsystem_kernel.dylib        	0x00007fff8db8c716 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff80340c3b _pthread_cond_wait
+ 727
2   com.apple.JavaScriptCore      	0x00007fff80d07737
JSC::GCThread::waitForNextPhase() + 119
3   com.apple.JavaScriptCore      	0x00007fff80d075c8
JSC::GCThread::gcThreadMain() + 88
4   com.apple.JavaScriptCore      	0x00007fff80cfbf5f
WTF::wtfThreadEntryPoint(void*) + 15
5   libsystem_pthread.dylib       	0x00007fff8033e899 _pthread_body + 138
6   libsystem_pthread.dylib       	0x00007fff8033e72a _pthread_start + 137
7   libsystem_pthread.dylib       	0x00007fff80342fc9 thread_start + 13

Thread 11:: JavaScriptCore::Marking
0   libsystem_kernel.dylib        	0x00007fff8db8c716 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff80340c3b _pthread_cond_wait
+ 727
2   com.apple.JavaScriptCore      	0x00007fff80d07737
JSC::GCThread::waitForNextPhase() + 119
3   com.apple.JavaScriptCore      	0x00007fff80d075c8
JSC::GCThread::gcThreadMain() + 88
4   com.apple.JavaScriptCore      	0x00007fff80cfbf5f
WTF::wtfThreadEntryPoint(void*) + 15
5   libsystem_pthread.dylib       	0x00007fff8033e899 _pthread_body + 138
6   libsystem_pthread.dylib       	0x00007fff8033e72a _pthread_start + 137
7   libsystem_pthread.dylib       	0x00007fff80342fc9 thread_start + 13

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x0000000000000000  rbx: 0x000060800019cb10  rcx:
0x00000000000000c8  rdx: 0x00000000000002f1
  rdi: 0x0000000000000000  rsi: 0x000000010f52d0b2  rbp:
0x00007fff50744250  rsp: 0x00007fff50744228
   r8: 0x0000000000032068   r9: 0x00007fff50744140  r10:
0x00007faa942d7aa0  r11: 0x000000010f557eb8
  r12: 0x000060800019cb10  r13: 0x00000000000002f2  r14:
0x00000000000002f1  r15: 0x0000000000000200
  rip: 0x0000000000000000  rfl: 0x0000000000010246  cr2: 0x0000000000000000

Logical CPU:     3
Error Code:      0x00000014
Trap Number:     14


Binary Images:
       0x10f4b7000 -        0x10f541fff +org.R-project.R (R 3.1.1 GUI
1.65 Mavericks build - 6784) <10B61A0F-565A-3E74-82D8-FBFCC30BC0B8>
/Applications/R.app/Contents/MacOS/R
       0x10f5c9000 -        0x10f844fe7 +libR.dylib (0)
<BF5E814F-C0E6-3647-A913-75DD6F1EDDB7>
/Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libR.dylib
       0x10f976000 -        0x10f9a0fff +libRblas.dylib (0)
<13F4C740-AB3E-3B13-BCB4-A5513049FE0D>
/Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libRblas.dylib
       0x10f9ac000 -        0x10fabefef +libgfortran.3.dylib (0)
<226557F4-FB34-3A43-9430-1F33A37F404F>
/Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libgfortran.3.dylib
       0x10fb1d000 -        0x10fb51fff +libquadmath.0.dylib (0)
<BA696A38-3B0F-3BF9-B426-2D06DCEF4E42>
/Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libquadmath.0.dylib
       0x10fb5f000 -        0x10fb89fd9 +libreadline.5.2.dylib (5.2)
/Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libreadline.5.2.dylib
       0x10fba0000 -        0x10fbb4fe7 +libgcc_s_x86_64.1.dylib (0)
<6C92C546-0443-36CE-8C95-C9465E72D088>
/Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libgcc_s_x86_64.1.dylib
       0x10fc46000 -        0x10fc46ffd +cl_kernels (???)
<A433BB4F-321C-492F-87AA-374EEBDD62CE> cl_kernels
       0x11330e000 -        0x11330efeb +cl_kernels (???)
<132EBB74-3F1B-47EA-8366-AB6712891041> cl_kernels
       0x113349000 -        0x11334aff9 +cl_kernels (???)
<12A13F2E-8839-417D-89A4-442A7D863640> cl_kernels
       0x1133cc000 -        0x1133cdfe4 +cl_kernels (???)
<754DC994-6B7D-4024-8ADF-6DFCF0631C43> cl_kernels
       0x113408000 -        0x1134eefef  unorm8_bgra.dylib (2.3.58)
<280D6FDD-8CA5-36EC-9EA1-D7DC09598E20>
/System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib
       0x114a5b000 -        0x114a62ff7 +utils.so (0)
<428DF2C3-7DA7-3A3E-AAF8-889F0319FFE2>
/Library/Frameworks/R.framework/Versions/3.1/Resources/library/utils/libs/utils.so
       0x114a69000 -        0x114a6fff7 +methods.so (0)
<81CFAFF3-FAAD-3C4A-9C22-5CAB38C8CECB>
/Library/Frameworks/R.framework/Versions/3.1/Resources/library/methods/libs/methods.so
       0x114e15000 -        0x114e47ff7 +grDevices.so (0)
<778D872B-1CF5-377D-9148-E08AB99A4B81>
/Library/Frameworks/R.framework/Versions/3.1/Resources/library/grDevices/libs/grDevices.so
       0x114e9f000 -        0x114edefff +graphics.so (0)
<3F2771AC-084D-35DE-8A95-C27685B86C83>
/Library/Frameworks/R.framework/Versions/3.1/Resources/library/graphics/libs/graphics.so
       0x11501a000 -        0x1150bafe7 +stats.so (0)
<AB7B0CF0-53D6-3576-A03A-9945C2766D09>
/Library/Frameworks/R.framework/Versions/3.1/Resources/library/stats/libs/stats.so
       0x1150d3000 -        0x11528ffef +libRlapack.dylib (0)
<4201E577-33D3-3928-8F8E-32F2C9C0FB8D>
/Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libRlapack.dylib
       0x11532e000 -        0x11532efff +cl_kernels (???)
<A504DD08-1183-4E5F-91AE-6E1104997409> cl_kernels
       0x115330000 -        0x115410ff7  unorm8_rgba.dylib (2.3.58)
<8252DC3E-7434-34C6-B4B9-CFD59B923D12>
/System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_rgba.dylib
    0x7fff64739000 -     0x7fff6476c817  dyld (239.4)
<042C4CED-6FB2-3B1C-948B-CAF2EE3B9F7A> /usr/lib/dyld
    0x7fff8008f000 -     0x7fff800e1fff  libc++.1.dylib (120)
<4F68DFC5-2077-39A8-A449-CAC5FDEE7BDE> /usr/lib/libc++.1.dylib
    0x7fff800e2000 -     0x7fff8033cff9  com.apple.security (7.0 -
55471.14.8) <EA03E140-2509-3A07-8440-2DC97C0D478B>
/System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff8033d000 -     0x7fff80344ff7  libsystem_pthread.dylib
(53.1.4) <AB498556-B555-310E-9041-F67EC9E00E2C>
/usr/lib/system/libsystem_pthread.dylib
    0x7fff80345000 -     0x7fff8038cfff  libFontRegistry.dylib (127)
<A77A0480-AA5D-3CC8-8B68-69985CD546DC>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff8038d000 -     0x7fff80397fff  libcommonCrypto.dylib (60049)
<8C4F0CA0-389C-3EDC-B155-E62DD2187E1D> /usr/lib/system/libcommonCrypto.dylib
    0x7fff803c7000 -     0x7fff803c8ff7
libDiagnosticMessagesClient.dylib (100)
<4CDB0F7B-C0AF-3424-BC39-495696F0DB1E>
/usr/lib/libDiagnosticMessagesClient.dylib
    0x7fff803c9000 -     0x7fff803daff7  libz.1.dylib (53)
<42E0C8C6-CA38-3CA4-8619-D24ED5DD492E> /usr/lib/libz.1.dylib
    0x7fff803db000 -     0x7fff8041dff7  libauto.dylib (185.5)
<F45C36E8-B606-3886-B5B1-B6745E757CA8> /usr/lib/libauto.dylib
    0x7fff8041e000 -     0x7fff80666ff7  com.apple.CoreData (107 -
481.3) <E78734AA-E3D0-33CB-A014-620BBCAB2E96>
/System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff80667000 -     0x7fff8066cff7  com.apple.MediaAccessibility
(1.0 - 43) <D309D83D-5FAE-37A4-85ED-FFBDA8B66B82>
/System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff80672000 -     0x7fff80689ffa  libAVFAudio.dylib (32.2)
<52DA516B-DE79-322C-9E1B-2658019289D7>
/System/Library/Frameworks/AVFoundation.framework/Versions/A/Resources/libAVFAudio.dylib
    0x7fff8068a000 -     0x7fff80696ff7  com.apple.OpenDirectory (10.9 -
173.90.1) <256C265B-7FA6-326D-9F60-18DADF5F3A0E>
/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff80939000 -     0x7fff80960ff7  com.apple.shortcut (2.6 - 2.6)
<A62BC973-6782-3893-B014-EC6503AB7EAD>
/System/Library/PrivateFrameworks/Shortcut.framework/Versions/A/Shortcut
    0x7fff80961000 -     0x7fff809affff  libcorecrypto.dylib (161.1)
<F3973C28-14B6-3006-BB2B-00DD7F09ABC7> /usr/lib/system/libcorecrypto.dylib
    0x7fff80a12000 -     0x7fff80a15fff  com.apple.help (1.3.3 - 46)
<AE763646-D07A-3F9A-ACD4-F5CBD734EE36>
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff80a19000 -     0x7fff80a66ff2
com.apple.print.framework.PrintCore (9.0 - 428)
<8D8253E3-302F-3DB2-9C5C-572CB974E8B3>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff80a67000 -     0x7fff80a69fff  com.apple.EFILogin (2.0 - 2)
<C360E8AF-E9BB-3BBA-9DF0-57A92CEF00D4>
/System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin
    0x7fff80a6a000 -     0x7fff80a6dffc  com.apple.IOSurface (91.1 -
91.1) <D00EEB0C-8AA8-3986-90C1-C97B2486E8FA>
/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff80a6e000 -     0x7fff80aadfff  libGLU.dylib (9.6.1)
<AE032555-3E2F-3DBF-A26D-EA4576061605>
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff80aae000 -     0x7fff80ab6fff  libsystem_dnssd.dylib
(522.92.1) <17B03FFD-92C5-3282-9981-EBB28B456207>
/usr/lib/system/libsystem_dnssd.dylib
    0x7fff80ab7000 -     0x7fff80abfffc  libGFXShared.dylib (9.6.1)
<25BBF325-AC57-3BAA-9427-2D14CC243AE6>
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff80ad9000 -     0x7fff80adafff  liblangid.dylib (117)
<9546E641-F730-3AB0-B3CD-E0E2FDD173D9> /usr/lib/liblangid.dylib
    0x7fff80b2b000 -     0x7fff80b2eff7  libdyld.dylib (239.4)
<7C9EC3B7-DDE3-33FF-953F-4067C743951D> /usr/lib/system/libdyld.dylib
    0x7fff80be6000 -     0x7fff80cd5fff  libFontParser.dylib (111.1)
<835A8253-6AB9-3AAB-9CBF-171440DEC486>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
    0x7fff80cd6000 -     0x7fff80cd6fff  com.apple.ApplicationServices
(48 - 48) <3E3F01A8-314D-378F-835E-9CC4F8820031>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff80cf3000 -     0x7fff8106aff6  com.apple.JavaScriptCore (9537
- 9537.77.1) <F588191A-25E6-31AC-A325-B7779DC6D1EC>
/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
    0x7fff8106b000 -     0x7fff8106cfff  com.apple.TrustEvaluationAgent
(2.0 - 25) <334A82F4-4AE4-3719-A511-86D0B0723E2B>
/System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
    0x7fff81094000 -     0x7fff8119aff7  com.apple.ImageIO.framework
(3.3.0 - 1043) <C4ADE5B1-A540-34E1-A043-118185489C9D>
/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff8119b000 -     0x7fff8119cfff  libunc.dylib (28)
<62682455-1862-36FE-8A04-7A6B91256438> /usr/lib/system/libunc.dylib
    0x7fff81247000 -     0x7fff81250ffd  com.apple.CommonAuth (4.0 -
2.0) <32BA436F-6319-3A0B-B5D2-2EB75FF36B5B>
/System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff81251000 -     0x7fff81285fff  libssl.0.9.8.dylib (50)
<B15F967C-B002-36C2-9621-3456D8509F50> /usr/lib/libssl.0.9.8.dylib
    0x7fff81286000 -     0x7fff812edff7  com.apple.CoreUtils (2.0 -
200.34.4) <E53B97FE-E067-33F6-A9C1-D4EC2A20FB9F>
/System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
    0x7fff81351000 -     0x7fff8135eff7  libxar.1.dylib (202)
<5572AA71-E98D-3FE1-9402-BB4A84E0E71E> /usr/lib/libxar.1.dylib
    0x7fff8135f000 -     0x7fff821b2ffb  com.apple.WebCore (9537 -
9537.77.4) <9C4E816A-0DAC-31B2-85C3-910164F3E741>
/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore
    0x7fff821b3000 -     0x7fff822e3ff7  com.apple.desktopservices
(1.8.3 - 1.8.3) <225BEC20-F8E0-3F22-9560-890A1A5B9050>
/System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fff822e5000 -     0x7fff822e7fff  com.apple.SecCodeWrapper (3.0 -
1) <DE7CA981-2B8B-34AC-845D-06D5C8F10441>
/System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper
    0x7fff822e8000 -     0x7fff822f0ff3  libCGCMS.A.dylib (599.25.10.1)
<9A4FAAD7-1C16-33F8-A615-1DCAB0546E31>
/System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGCMS.A.dylib
    0x7fff822f1000 -     0x7fff822faff3  libsystem_notify.dylib (121)
<52571EC3-6894-37E4-946E-064B021ED44E>
/usr/lib/system/libsystem_notify.dylib
    0x7fff822fb000 -     0x7fff825e5fff
com.apple.CoreServices.CarbonCore (1077.17 - 1077.17)
<3A2E92FD-DEE2-3D45-9619-11500801A61C>
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff825e6000 -     0x7fff825e8fff  com.apple.ExceptionHandling
(1.5 - 10) <0DD670E1-08D5-3570-BE98-19030BEA9845>
/System/Library/Frameworks/ExceptionHandling.framework/Versions/A/ExceptionHandling
    0x7fff825e9000 -     0x7fff826abff5  com.apple.CoreText (367.20 -
367.20) <B80D086D-93A9-3C35-860E-9C3FDD027F3B>
/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff826ac000 -     0x7fff826b9ff0  libbz2.1.0.dylib (29)
<0B98AC35-B138-349C-8063-2B987A75D24C> /usr/lib/libbz2.1.0.dylib
    0x7fff827e0000 -     0x7fff82ab1ff4  com.apple.CoreImage (9.4.0)
<2C636ECD-0F1A-357C-9EFF-0452476FDDF5>
/System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff82aec000 -     0x7fff82aeefff  libRadiance.dylib (1043)
<9813995C-DEAA-3992-8DF8-320E4E4E288B>
/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff82aef000 -     0x7fff82afafff  libGL.dylib (9.6.1)
<4B65BF9F-F34A-3CD1-94E8-DB26DAA0A59D>
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff82b04000 -     0x7fff82b08fff  libpam.2.dylib (20)
<B93CE8F5-DAA8-30A1-B1F6-F890509513CB> /usr/lib/libpam.2.dylib
    0x7fff82b09000 -     0x7fff8367fff7  com.apple.AppKit (6.9 -
1265.21) <9DC13B27-841D-3839-93B2-3EDE66157BDE>
/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff83695000 -     0x7fff836a4ff8  com.apple.LangAnalysis (1.7.0 -
1.7.0) <8FE131B6-1180-3892-98F5-C9C9B79072D4>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff836a5000 -     0x7fff836bffff  libdispatch.dylib (339.92.1)
<C4E4A18D-3C3B-3C9C-8709-A4270D998DE7> /usr/lib/system/libdispatch.dylib
    0x7fff836c0000 -     0x7fff836c9fff
com.apple.speech.synthesis.framework (4.7.1 - 4.7.1)
<383FB557-E88E-3239-82B8-15F9F885B702>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff836d6000 -     0x7fff8371bff6  com.apple.HIServices (1.23 -
468) <5970AF5C-F5BD-3B6A-97C9-95B2CA98D71D>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff8371c000 -     0x7fff83763ff7  libcups.2.dylib (372.4)
<36EA4350-43B4-3A5C-9904-10685BFDA7D4> /usr/lib/libcups.2.dylib
    0x7fff8379a000 -     0x7fff83a98fff  com.apple.Foundation (6.9 -
1056.13) <2EE9AB07-3EA0-37D3-B407-4A520F2CB497>
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff83a99000 -     0x7fff83af2fff  libTIFF.dylib (1043)
<D7CAE68F-6087-3B40-9CB8-EC6DB47BF877>
/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff83bd1000 -     0x7fff83bd2ffb  libremovefile.dylib (33)
<3543F917-928E-3DB2-A2F4-7AB73B4970EF> /usr/lib/system/libremovefile.dylib
    0x7fff83bd3000 -     0x7fff83bd9ff7  libCGXCoreImage.A.dylib
(599.25.10.1) <1AB1B2B2-55A9-3780-BCB9-1B3CE375D739>
/System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXCoreImage.A.dylib
    0x7fff83bda000 -     0x7fff83bdafff  com.apple.Carbon (154 - 157)
<45A9A40A-78FF-3EA0-8FAB-A4F81052FA55>
/System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff83bed000 -     0x7fff83c09fff  libresolv.9.dylib (54)
<11C2C826-F1C6-39C6-B4E8-6E0C41D4FA95> /usr/lib/libresolv.9.dylib
    0x7fff83d71000 -     0x7fff83da2ff7  libtidy.A.dylib (15.12)
<BF757E3C-733A-3B6B-809A-A3949D46466E> /usr/lib/libtidy.A.dylib
    0x7fff83de4000 -     0x7fff83e7fff7  com.apple.PDFKit (2.9.2 -
2.9.2) <0CDC6467-9227-3D98-B4D4-660796AE9F6B>
/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit
    0x7fff83e80000 -     0x7fff83ecbfff  com.apple.ImageCaptureCore (5.0
- 5.0) <F529EDDC-E2F5-30CA-9938-AF23296B5C5B>
/System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
    0x7fff83ecc000 -     0x7fff83ee4ff7  com.apple.openscripting (1.4 -
157) <B3B037D7-1019-31E6-9D17-08E699AF3701>
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff83f9b000 -     0x7fff83fa2ff8  liblaunch.dylib (842.92.1)
<A40A0C7B-3216-39B4-8AE0-B5D3BAF1DA8A> /usr/lib/system/liblaunch.dylib
    0x7fff83fa3000 -     0x7fff83fa7ff7  libsystem_stats.dylib (93.90.3)
<4E51D5B0-92A0-3D0D-B90E-495A1ED3E391> /usr/lib/system/libsystem_stats.dylib
    0x7fff83fa8000 -     0x7fff84389ffe  libLAPACK.dylib (1094.5)
<7E7A9B8D-1638-3914-BAE0-663B69865986>
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff8439b000 -     0x7fff84427ff7  com.apple.ink.framework (10.9 -
207) <8A50B893-AD03-3826-8555-A54FEAF08F47>
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff84428000 -     0x7fff84428fff  com.apple.Accelerate.vecLib
(3.9 - vecLib 3.9) <F8D0CC77-98AC-3B58-9FE6-0C25421827B6>
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff84481000 -     0x7fff84483ff7  com.apple.securityhi (9.0 -
55005) <18C42525-688C-3D47-B9C9-1E0F8F58FA64>
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
    0x7fff8449b000 -     0x7fff84745ff5  com.apple.HIToolbox (2.1.1 -
698) <A388E773-AE7B-3FD1-8662-A98E6E24EA16>
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff84746000 -     0x7fff8476effb  libxslt.1.dylib (13)
<C9794936-633C-3F0C-9E71-30190B9B41C1> /usr/lib/libxslt.1.dylib
    0x7fff8476f000 -     0x7fff84778fff  com.apple.DisplayServicesFW
(2.8 - 360.8.14) <816A9CED-1BC0-3C76-8103-1B9BE0F723BB>
/System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
    0x7fff84779000 -     0x7fff8478bfff  com.apple.ImageCapture (9.0 -
9.0) <BE0B65DA-3031-359B-8BBA-B9803D4ADBF4>
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff8478c000 -     0x7fff8478dff7  libSystem.B.dylib (1197.1.1)
<E303F2F8-A8CF-3DF3-84B3-F2D0EE41CCF6> /usr/lib/libSystem.B.dylib
    0x7fff8478e000 -     0x7fff847a4fff  com.apple.CoreMediaAuthoring
(2.2 - 947) <F1886A05-1C29-3F88-88C0-4A1013530AD1>
/System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
    0x7fff847a5000 -     0x7fff847a7fff  libCVMSPluginSupport.dylib
(9.6.1) <FB37F4C4-1E84-3349-BB03-92CA0A5F6837>
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff847a8000 -     0x7fff84918ff4  com.apple.CFNetwork (673.4 -
673.4) <F3BF6020-99BE-3844-A7B8-352B93AD02F3>
/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff84919000 -     0x7fff84afefff  com.apple.CoreFoundation (6.9 -
855.17) <729BD6DA-1F63-3E72-A148-26F21EBF52BB>
/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff84aff000 -     0x7fff84b01fff  com.apple.Mangrove (1.0 - 1)
<72F5CBC7-4E78-374E-98EA-C3700136904E>
/System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fff84daf000 -     0x7fff84db6ffb  libcopyfile.dylib (103.92.1)
<CF29DFF6-0589-3590-834C-82E2316612E8> /usr/lib/system/libcopyfile.dylib
    0x7fff84dfe000 -     0x7fff84e04ff7  com.apple.XPCService (2.0 - 1)
<2CE632D7-FE57-36CF-91D4-C57D0F2E0BFE>
/System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService
    0x7fff84e05000 -     0x7fff84e05fff  com.apple.Accelerate (1.9 -
Accelerate 1.9) <509BB27A-AE62-366D-86D8-0B06D217CF56>
/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff84e06000 -     0x7fff84e21ff7  libsystem_malloc.dylib
(23.10.1) <A695B4E4-38E9-332E-A772-29D31E3F1385>
/usr/lib/system/libsystem_malloc.dylib
    0x7fff84e22000 -     0x7fff84e27ff7  libunwind.dylib (35.3)
<78DCC358-2FC1-302E-B395-0155B47CB547> /usr/lib/system/libunwind.dylib
    0x7fff84e2d000 -     0x7fff84e2fff7  libquarantine.dylib (71)
<7A1A2BCB-C03D-3A25-BFA4-3E569B2D2C38> /usr/lib/system/libquarantine.dylib
    0x7fff84e30000 -     0x7fff84e39ff7  libcldcpuengine.dylib (2.3.58)
<E3A84FEC-4060-39C2-A469-159A443D2B6D>
/System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib
    0x7fff84e3a000 -     0x7fff84e83fff  com.apple.CoreMedia (1.0 -
1273.54) <CAB7303A-9AB2-317A-99C3-BEAA8AE8764B>
/System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff84f0e000 -     0x7fff84f0effd  com.apple.audio.units.AudioUnit
(1.10 - 1.10) <68B21135-55A6-3563-A3D6-3E692A7DEB7F>
/System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff84f16000 -     0x7fff85007ff9  libiconv.2.dylib (41)
<BB44B115-AC32-3877-A0ED-AEC6232A4563> /usr/lib/libiconv.2.dylib
    0x7fff8521f000 -     0x7fff85270fff  com.apple.QuickLookFramework
(5.0 - 622.7) <17685CEC-C94B-3F83-ADE1-B24840B35E44>
/System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
    0x7fff85271000 -     0x7fff85b9132b  com.apple.CoreGraphics (1.600.0
- 599.25.10.1) <EC14B831-96BB-3A50-A451-E36BDC8F59FB>
/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff85b92000 -     0x7fff85bd0ff7  libGLImage.dylib (9.6.1)
<5E02B38C-9F36-39BE-8746-724F0D8BBFC0>
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff85bd1000 -     0x7fff85bf5ff7  libJPEG.dylib (1043)
<25723F3F-48A6-3AC5-A7A3-58E418FEBF3F>
/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff85bf6000 -     0x7fff85c01ff7  com.apple.NetAuth (5.0 - 5.0)
<C811E662-9EC3-3B74-808A-A75D624F326B>
/System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fff85c2c000 -     0x7fff85c30ff7  libGIF.dylib (1043)
<AF0FE71A-27AB-31E0-8CEA-BC0BF2091FA8>
/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff85c55000 -     0x7fff85c84fd2  libsystem_m.dylib (3047.16)
<B7F0E2E4-2777-33FC-A787-D6430B630D54> /usr/lib/system/libsystem_m.dylib
    0x7fff85c9f000 -     0x7fff85cc4ff7  com.apple.CoreVideo (1.8 -
117.2) <4674339E-26D0-35FA-9958-422832B39B12>
/System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff8603d000 -     0x7fff86066ff7  libc++abi.dylib (49.1)
<21A807D3-6732-3455-B77F-743E9F916DF0> /usr/lib/libc++abi.dylib
    0x7fff86067000 -     0x7fff86131fff  com.apple.LaunchServices
(572.28 - 572.28) <FDED4724-4CB6-3DE5-B785-AE6D4C261CF6>
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff86132000 -     0x7fff86137fff  com.apple.DiskArbitration (2.6
- 2.6) <A4165553-770E-3D27-B217-01FC1F852B87>
/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff86195000 -     0x7fff86196fff  libsystem_sandbox.dylib
(278.11.1) <0D0B13EA-6B7A-3AC8-BE60-B548543BEB77>
/usr/lib/system/libsystem_sandbox.dylib
    0x7fff86197000 -     0x7fff861aaff7  com.apple.AppContainer (3.0 -
1) <BD342039-430E-39FE-BC2D-8F97B557548E>
/System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer
    0x7fff86544000 -     0x7fff866b2ff7  libBLAS.dylib (1094.5)
<DE93A590-5FA5-32A2-A16C-5D7D7361769F>
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff866b3000 -     0x7fff866bfffb  com.apple.AppleFSCompression
(56.92.1 - 1.0) <066255FD-DBD1-3041-8DDA-7AFC41C9096D>
/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
    0x7fff866c0000 -     0x7fff8686df27  libobjc.A.dylib (551.1)
<AD7FD984-271E-30F4-A361-6B20319EC73B> /usr/lib/libobjc.A.dylib
    0x7fff86e13000 -     0x7fff86e23fff  libbsm.0.dylib (33)
<2CAC00A2-1352-302A-88FA-C567D4D69179> /usr/lib/libbsm.0.dylib
    0x7fff86e24000 -     0x7fff86e70ffe  com.apple.CoreMediaIO (408.0 -
4570) <72371044-3FF2-3538-8EE1-C7C20F7C60A0>
/System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff86e71000 -     0x7fff86eb6fff  libcurl.4.dylib (78.94.1)
<88F27F9B-052E-3375-938D-2603E90D8AD5> /usr/lib/libcurl.4.dylib
    0x7fff86eb7000 -     0x7fff86f38fff  com.apple.CoreSymbolication
(3.0.1 - 141.0.5) <20E484C4-9F0E-3DF6-BB27-D509859FF57A>
/System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fff86f39000 -     0x7fff86f4bff7
com.apple.MultitouchSupport.framework (245.13 - 245.13)
<E51DE5CA-9859-3C13-A24F-37EF4385C1D6>
/System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fff86fa2000 -     0x7fff8702dfff  libCoreStorage.dylib (380)
<DE9B3F8C-045C-3010-9A25-C8CD72F1066B> /usr/lib/libCoreStorage.dylib
    0x7fff8702e000 -     0x7fff87047ff7  com.apple.Kerberos (3.0 - 1)
<F108AFEB-198A-3BAF-BCA5-9DFCE55EFF92>
/System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff87048000 -     0x7fff87095fff  com.apple.AppleVAFramework
(5.0.27 - 5.0.27) <608D91BD-9D88-3FAB-9A06-24C1DAEA092D>
/System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff87096000 -     0x7fff874e4fef  com.apple.VideoToolbox (1.0 -
1273.54) <4699BB55-7387-3981-9217-869215F00CA9>
/System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff875e2000 -     0x7fff875ebffb  libCGInterfaces.dylib (271)
<68EFBEFE-7506-3235-99A2-5B69EDBFD7B8>
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Resources/libCGInterfaces.dylib
    0x7fff875ee000 -     0x7fff876a6ff7  com.apple.DiscRecording (8.0 -
8000.4.6) <CDAAAD04-A1D0-3C67-ABCC-EFC9E8D44E7E>
/System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording
    0x7fff876a7000 -     0x7fff87772fff  libvDSP.dylib (423.32)
<3BF732BE-DDE0-38EB-8C54-E4E3C64F77A7>
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff87773000 -     0x7fff87776ffa  libCGXType.A.dylib
(599.25.10.1) <9E609F91-BD17-3C51-A877-C80E7183A867>
/System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib
    0x7fff87777000 -     0x7fff87848fff  com.apple.QuickLookUIFramework
(5.0 - 622.7) <13841701-34C2-353D-868D-3E08D020C90F>
/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
    0x7fff87849000 -     0x7fff8784aff7  com.apple.print.framework.Print
(9.0 - 260) <EE00FAE1-DA03-3EC2-8571-562518C46994>
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff8784b000 -     0x7fff87866ff7  libCRFSuite.dylib (34)
<FFAE75FA-C54E-398B-AA97-18164CD9789D> /usr/lib/libCRFSuite.dylib
    0x7fff87867000 -     0x7fff8786ffff  libMatch.1.dylib (19)
<021293AB-407D-309A-87F5-8E782F46753E> /usr/lib/libMatch.1.dylib
    0x7fff878f8000 -     0x7fff87ccffef  com.apple.CoreAUC (6.25.00 -
6.25.00) <2D7DC96C-BA83-3220-A03F-C790D50A23D8>
/System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff87cd0000 -     0x7fff87d47fff
com.apple.CoreServices.OSServices (600.4 - 600.4)
<C63562F5-6DF5-3EE9-8897-FF61A44C8251>
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff87dd8000 -     0x7fff87ddaffb  libutil.dylib (34)
<DAC4A6CF-A1BB-3874-9569-A919316D30E8> /usr/lib/libutil.dylib
    0x7fff87ddb000 -     0x7fff87e0aff7  com.apple.CoreAVCHD (5.7.0 -
5700.4.3) <404369C0-ED9F-3010-8D2F-BC55285F7808>
/System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff87e0b000 -     0x7fff87e66ffb  com.apple.AE (665.5 - 665.5)
<BBA230F9-144C-3CAB-A77A-0621719244CD>
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff87e67000 -     0x7fff87e7eff7  com.apple.CFOpenDirectory (10.9
- 173.90.1) <EBC0A1F2-9054-3D39-99AE-A3F655E55D6A>
/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff87e7f000 -     0x7fff87f50ff1  com.apple.DiskImagesFramework
(10.9 - 371.1) <D85430A6-1410-3B5F-9D11-17E2440B786E>
/System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages
    0x7fff87f51000 -     0x7fff87fb5fff  com.apple.datadetectorscore
(5.0 - 354.5) <0AE9749A-6BFC-3032-B802-210DF59AEDB0>
/System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fff87fb6000 -     0x7fff8807aff7  com.apple.backup.framework
(1.5.4 - 1.5.4) <195DA868-47A5-37E6-8CF0-9BCF11846899>
/System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
    0x7fff8807b000 -     0x7fff880ccff7  com.apple.audio.CoreAudio
(4.2.1 - 4.2.1) <BE13E840-FB45-3BC2-BCF5-031629754FD5>
/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff880cd000 -     0x7fff880cdff7  libkeymgr.dylib (28)
<3AA8D85D-CF00-3BD3-A5A0-E28E1A32A6D8> /usr/lib/system/libkeymgr.dylib
    0x7fff880ce000 -     0x7fff880d2ff7  libheimdal-asn1.dylib
(323.92.1) <CAE21FFF-5763-399C-B7C5-EEBFFEEF2242>
/usr/lib/libheimdal-asn1.dylib
    0x7fff880d3000 -     0x7fff8812bff7  com.apple.Symbolication (1.4 -
129.0.2) <B1F008C4-184D-36A2-922F-4A67A075D512>
/System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
    0x7fff8812c000 -     0x7fff8812ffff  com.apple.TCC (1.0 - 1)
<32A075D9-47FD-3E71-95BC-BFB0D583F41C>
/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fff8813c000 -     0x7fff88157ff7  libPng.dylib (1043)
<23D2DAB7-C9A9-392F-989A-871E89E7751D>
/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff881ef000 -     0x7fff881fcff4  com.apple.Librarian (1.2 - 1)
<F1A2744D-8536-32C7-8218-9972C6300DAE>
/System/Library/PrivateFrameworks/Librarian.framework/Versions/A/Librarian
    0x7fff881fd000 -     0x7fff881fdfff  com.apple.CoreServices (59 -
59) <7A697B5E-F179-30DF-93F2-8B503CEEEFD5>
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff88204000 -     0x7fff88215ff7  libsystem_asl.dylib (217.1.4)
<655FB343-52CF-3E2F-B14D-BEBF5AAEF94D> /usr/lib/system/libsystem_asl.dylib
    0x7fff88216000 -     0x7fff8823dffb  libsystem_info.dylib (449.1.3)
<7D41A156-D285-3849-A2C3-C04ADE797D98> /usr/lib/system/libsystem_info.dylib
    0x7fff88291000 -     0x7fff882d2fff  com.apple.PerformanceAnalysis
(1.47 - 47) <7B73DFF4-75DB-3403-80D2-0F3FE48764C3>
/System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fff882d3000 -     0x7fff88342ff1
com.apple.ApplicationServices.ATS (360 - 363.3)
<546E89D9-2AE7-3111-B2B8-2366650D22F0>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff88343000 -     0x7fff88343fff  com.apple.Cocoa (6.8 - 20)
<E90E99D7-A425-3301-A025-D9E0CD11918E>
/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff8836b000 -     0x7fff88452ff7  libxml2.2.dylib (26)
<A1DADD11-89E5-3DE4-8802-07186225967F> /usr/lib/libxml2.2.dylib
    0x7fff88453000 -     0x7fff88537fff  com.apple.coreui (2.1 - 231)
<432DB40C-6B7E-39C8-9FB5-B95917930056>
/System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fff88925000 -     0x7fff88a66fff  com.apple.QTKit (7.7.3 -
2826.19) <E634E6EC-2C7A-3F86-997B-CFC5D9F89E6B>
/System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
    0x7fff88a7e000 -     0x7fff88b06ff7  com.apple.CorePDF (4.0 - 4)
<92D15ED1-D2E1-3ECB-93FF-42888219A99F>
/System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
    0x7fff88b1b000 -     0x7fff88b21fff  com.apple.AOSNotification
(1.7.0 - 760.3) <7901B867-60F7-3645-BB3E-18C51A6FBCC6>
/System/Library/PrivateFrameworks/AOSNotification.framework/Versions/A/AOSNotification
    0x7fff88b22000 -     0x7fff88b46fff  com.apple.quartzfilters (1.8.0
- 1.7.0) <39C08086-9866-372F-9420-81F5689149DF>
/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
    0x7fff88b47000 -     0x7fff88b57ffb  libsasl2.2.dylib (170)
<C8E25710-68B6-368A-BF3E-48EC7273177B> /usr/lib/libsasl2.2.dylib
    0x7fff88b58000 -     0x7fff88b60ff7
com.apple.speech.recognition.framework (4.2.4 - 4.2.4)
<98BBB3E4-6239-3EF1-90B2-84EA0D3B8D61>
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff88d3f000 -     0x7fff88d6bfff  com.apple.CoreServicesInternal
(184.9 - 184.9) <4DEA54F9-81D6-3EDB-AA3C-1F9C497B3379>
/System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fff88d6c000 -     0x7fff88d71fff  libmacho.dylib (845)
<1D2910DF-C036-3A82-A3FD-44FF73B5FF9B> /usr/lib/system/libmacho.dylib
    0x7fff88d72000 -     0x7fff89295fff  com.apple.QuartzComposer (5.1 -
319) <8B90921F-911B-3240-A1D5-3C084F3E6A36>
/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
    0x7fff892a0000 -     0x7fff89330ff7  com.apple.Metadata (10.7.0 -
800.28) <E85AEB1B-CB17-38BC-B5C6-AAB50B47AF05>
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff89331000 -     0x7fff8933bff7  libcsfde.dylib (380)
<A5CF6F85-0537-399F-968B-1536B1235E65> /usr/lib/libcsfde.dylib
    0x7fff8933c000 -     0x7fff89371ffc  com.apple.LDAPFramework (2.4.28
- 194.5) <4ADD0595-25B9-3F09-897E-3FB790AD2C5A>
/System/Library/Frameworks/LDAP.framework/Versions/A/LDAP
    0x7fff89372000 -     0x7fff8938bff7  com.apple.Ubiquity (1.3 - 289)
<C7F1B734-CE81-334D-BE41-8B20D95A1F9B>
/System/Library/PrivateFrameworks/Ubiquity.framework/Versions/A/Ubiquity
    0x7fff8938c000 -     0x7fff89399fff  com.apple.Sharing (132.2 -
132.2) <F983394A-226D-3244-B511-FA51FDB6ADDA>
/System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fff8939a000 -     0x7fff893fdffb  com.apple.SystemConfiguration
(1.13.1 - 1.13.1) <2C8E1A73-5AD6-3A7D-8ED8-D6755555A993>
/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff893fe000 -     0x7fff89426ffb  libRIP.A.dylib (599.25.10.1)
<623091DF-5769-3326-90EB-44EFC8087660>
/System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib
    0x7fff8946d000 -     0x7fff89475ff7  com.apple.AppleSRP (5.0 - 1)
<ABC7F088-1FD5-3768-B9F3-847F355E90B3>
/System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP
    0x7fff89476000 -     0x7fff897acfff  com.apple.MediaToolbox (1.0 -
1273.54) <CB6F6690-D44C-30B5-93AB-CAB198D51884>
/System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff8980c000 -     0x7fff89836ff7  libsandbox.1.dylib (278.11.1)
<D98EE9E5-BEB9-3396-924B-9CD100E81C41> /usr/lib/libsandbox.1.dylib
    0x7fff8984a000 -     0x7fff89850ff7  libsystem_platform.dylib
(24.90.1) <3C3D3DA8-32B9-3243-98EC-D89B9A1670B3>
/usr/lib/system/libsystem_platform.dylib
    0x7fff8a115000 -     0x7fff8a2cdffb  libicucore.A.dylib (511.34)
<616A65D6-3F20-3EAB-8CA8-273AD890261C> /usr/lib/libicucore.A.dylib
    0x7fff8a2ce000 -     0x7fff8a341fff  com.apple.securityfoundation
(6.0 - 55122.3) <8575DF7A-EC79-3FCE-A737-7512363A5B12>
/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff8a342000 -     0x7fff8a37bff7  com.apple.QD (3.50 - 298)
<C1F20764-DEF0-34CF-B3AB-AB5480D64E66>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff8a37c000 -     0x7fff8a4d0ff3
com.apple.audio.toolbox.AudioToolbox (1.10 - 1.10)
<69B273E8-5A8E-3FC7-B807-C16B657662FE>
/System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff8a4d1000 -     0x7fff8a4eeff7  com.apple.framework.Apple80211
(9.4 - 940.60) <043C7CFD-B57B-3F9D-B0FE-CA4B97C43968>
/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff8a550000 -     0x7fff8a57ffff  com.apple.DebugSymbols (106 -
106) <E1BDED08-523A-36F4-B2DA-9D5C712F0AC7>
/System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fff8a582000 -     0x7fff8a589fff  com.apple.NetFS (6.0 - 4.0)
<8E26C099-CE9D-3819-91A2-64EA929C6137>
/System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
    0x7fff8a58a000 -     0x7fff8a6c0ffd  com.apple.WebKit (9537 -
9537.77.4) <A0291E16-4ED9-30E8-B9A2-DB836778EE9E>
/System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
    0x7fff8a6c1000 -     0x7fff8a85dff3  com.apple.QuartzCore (1.8 -
332.3) <72003E51-1287-395B-BCBC-331597D45C5E>
/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff8a85e000 -     0x7fff8ab32fc7  com.apple.vImage (7.0 - 7.0)
<D241DBFA-AC49-31E2-893D-EAAC31890C90>
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff8ab33000 -     0x7fff8aba0fff  com.apple.SearchKit (1.4.0 -
1.4.0) <B9B8D510-A27E-36B0-93E9-17146D9E9045>
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff8af8a000 -     0x7fff8b03aff7  libvMisc.dylib (423.32)
<049C0735-1808-39B9-943F-76CB8021744F>
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff8b03b000 -     0x7fff8b15dfff  com.apple.avfoundation (2.0 -
651.12.1) <FF001F98-E198-3B1D-A7EB-A8C48E6E34A3>
/System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff8b15e000 -     0x7fff8b15effd  libOpenScriptingUtil.dylib
(157) <19F0E769-0989-3062-9AFB-8976E90E9759>
/usr/lib/libOpenScriptingUtil.dylib
    0x7fff8b15f000 -     0x7fff8b23efff  libcrypto.0.9.8.dylib (50)
<B95B9DBA-39D3-3EEF-AF43-44608B28894E> /usr/lib/libcrypto.0.9.8.dylib
    0x7fff8b2a0000 -     0x7fff8b2a2ff3  libsystem_configuration.dylib
(596.15) <4998CB6A-9D54-390A-9F57-5D1AC53C135C>
/usr/lib/system/libsystem_configuration.dylib
    0x7fff8b2e0000 -     0x7fff8b304fff  libxpc.dylib (300.90.2)
<AB40CD57-F454-3FD4-B415-63B3C0D5C624> /usr/lib/system/libxpc.dylib
    0x7fff8b31f000 -     0x7fff8b349ff7  libpcap.A.dylib (42)
<91D3FF51-D6FE-3C05-98C9-1182E0EC3D58> /usr/lib/libpcap.A.dylib
    0x7fff8b34a000 -     0x7fff8b434fff  libsqlite3.dylib (158)
<00269BF9-43BE-39E0-9C85-24585B9923C8> /usr/lib/libsqlite3.dylib
    0x7fff8b51e000 -     0x7fff8b529fff  libkxld.dylib (2422.110.17)
<B6140BAB-0EAF-3E4F-B055-314068056BB4> /usr/lib/system/libkxld.dylib
    0x7fff8b774000 -     0x7fff8b7d9ffb  com.apple.Heimdal (4.0 - 2.0)
<F34D6627-9F80-3823-8B57-DB629307DF87>
/System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fff8b7ed000 -     0x7fff8b812ff7  com.apple.ChunkingLibrary (2.0
- 155.1) <B845DC7A-D1EA-31E2-967C-D1FE0C628036>
/System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff8b813000 -     0x7fff8b816fff  com.apple.AppleSystemInfo (3.0
- 3.0) <61FE171D-3D88-313F-A832-280AEC8F4AB7>
/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
    0x7fff8b817000 -     0x7fff8b821ff7  com.apple.CrashReporterSupport
(10.9 - 539) <B25A09EC-A021-32EC-86F8-05B4837E0EDE>
/System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fff8b89b000 -     0x7fff8b924fff  com.apple.ColorSync (4.9.0 -
4.9.0) <B756B908-9AD1-3F5D-83F9-7A0B068387D2>
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff8b925000 -     0x7fff8b955fff  libncurses.5.4.dylib (42)
<BF763D62-9149-37CB-B1D2-F66A2510E6DD> /usr/lib/libncurses.5.4.dylib
    0x7fff8b956000 -     0x7fff8b959fff  libCoreVMClient.dylib (58.1)
<EBC36C69-C896-3C3D-8589-3E9023E7E56F>
/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff8bc6a000 -     0x7fff8bcd0fff  com.apple.framework.CoreWiFi
(2.0 - 200.21.1) <5491896D-78C5-30B6-96E9-D8DDECF3BE73>
/System/Library/Frameworks/CoreWiFi.framework/Versions/A/CoreWiFi
    0x7fff8bcd1000 -     0x7fff8bd02fff  com.apple.MediaKit (15 - 709)
<23E33409-5C39-3F93-9E73-2B0E9EE8883E>
/System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit
    0x7fff8bd03000 -     0x7fff8bd03fff  com.apple.quartzframework (1.5
- 1.5) <3B2A72DB-39FC-3C5B-98BE-605F37777F37>
/System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff8bd91000 -     0x7fff8bd9bff7  com.apple.AppSandbox (3.0 - 1)
<9F27DC25-C566-3AEF-92D3-DCFE7836916D>
/System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox
    0x7fff8bdb8000 -     0x7fff8bdc2ff7  com.apple.bsd.ServiceManagement
(2.0 - 2.0) <2D27B498-BB9C-3D88-B05A-76908A8A26F3>
/System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff8bdc5000 -     0x7fff8be24fff  com.apple.framework.CoreWLAN
(4.3.3 - 433.48) <1F17FA12-6E84-309D-9808-C536D445FA6E>
/System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff8be25000 -     0x7fff8be26ff7  libsystem_blocks.dylib (63)
<FB856CD1-2AEA-3907-8E9B-1E54B6827F82>
/usr/lib/system/libsystem_blocks.dylib
    0x7fff8be27000 -     0x7fff8bf56fef  com.apple.MediaControlSender
(2.0 - 200.34.4) <FC24EC8D-2E46-3F76-AF63-749F30857B96>
/System/Library/PrivateFrameworks/MediaControlSender.framework/Versions/A/MediaControlSender
    0x7fff8bf79000 -     0x7fff8bfb1ff7  com.apple.RemoteViewServices
(2.0 - 94) <3F34D630-3DDB-3411-BC28-A56A9B55EBDA>
/System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fff8bfb2000 -     0x7fff8c3e5ffb  com.apple.vision.FaceCore
(3.0.0 - 3.0.0) <F42BFC9C-0B16-35EF-9A07-91B7FDAB7FC5>
/System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fff8c87f000 -     0x7fff8c886fff  libcompiler_rt.dylib (35)
<4CD916B2-1B17-362A-B403-EF24A1DAC141> /usr/lib/system/libcompiler_rt.dylib
    0x7fff8c8cb000 -     0x7fff8c906fff  com.apple.bom (14.0 - 193.1)
<EF24A562-6D3C-379E-8B9B-FAE0E4A0EF7C>
/System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom
    0x7fff8d0ea000 -     0x7fff8d13dfff  com.apple.ScalableUserInterface
(1.0 - 1) <CF745298-7373-38D2-B3B1-727D5A569E48>
/System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/ScalableUserInterface.framework/Versions/A/ScalableUserInterface
    0x7fff8d36a000 -     0x7fff8d36efff  com.apple.CommonPanels (1.2.6 -
96) <6B434AFD-50F8-37C7-9A56-162C17E375B3>
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff8d36f000 -     0x7fff8d396ff7  libsystem_network.dylib (241.3)
<8B1E1F1D-A5CC-3BAE-8B1E-ABC84337A364>
/usr/lib/system/libsystem_network.dylib
    0x7fff8d397000 -     0x7fff8d3a3ff7  com.apple.HelpData (2.1.4 - 90)
<BEA1C549-40D3-35BF-9204-CB679FCB0648>
/System/Library/PrivateFrameworks/HelpData.framework/Versions/A/HelpData
    0x7fff8d3a4000 -     0x7fff8d3d4fff  com.apple.IconServices (25 -
25.17) <4751127E-FBD5-3ED5-8510-08D4E4166EFE>
/System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fff8d3d5000 -     0x7fff8d3edff7  com.apple.GenerationalStorage
(2.0 - 160.3) <64749B08-0212-3AC8-9B49-73D662B09304>
/System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fff8d3ee000 -     0x7fff8d41dff9  com.apple.GSS (4.0 - 2.0)
<44E914BE-B0D0-3E05-9451-CA9E539AFA52>
/System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff8d41e000 -     0x7fff8d4a7ff7  libsystem_c.dylib (997.90.3)
<6FD3A400-4BB2-3B95-B90C-BE6E9D0D78FA> /usr/lib/system/libsystem_c.dylib
    0x7fff8d5a6000 -     0x7fff8d5b4fff  com.apple.opengl (9.6.1 -
9.6.1) <B22FA400-5824-36AF-9945-5FEC31995A0E>
/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff8d641000 -     0x7fff8d8a2fff  com.apple.imageKit (2.5 - 774)
<AACDE16E-ED9F-3B3F-A792-69BA1942753B>
/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
    0x7fff8d8a3000 -     0x7fff8db37ff7  com.apple.RawCamera.bundle
(5.06 - 751) <A8B1EEDB-FDCB-3EDC-9728-E3FAA644A499>
/System/Library/CoreServices/RawCamera.bundle/Contents/MacOS/RawCamera
    0x7fff8db77000 -     0x7fff8db93ff7  libsystem_kernel.dylib
(2422.110.17) <873931CE-D1AF-3596-AADB-D2E63C9AB29F>
/usr/lib/system/libsystem_kernel.dylib
    0x7fff8db94000 -     0x7fff8dc00fff  com.apple.framework.IOKit
(2.0.1 - 907.100.13) <057FDBA3-56D6-3903-8C0B-849214BF1985>
/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff8dc01000 -     0x7fff8dc05ff7  libcache.dylib (62)
<BDC1E65B-72A1-3DA3-A57C-B23159CAAD0B> /usr/lib/system/libcache.dylib
    0x7fff8dc06000 -     0x7fff8dcf4fff  libJP2.dylib (1043)
<C4031D64-6C57-3FB4-9D87-874D387381DB>
/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff8dcf5000 -     0x7fff8dd1efff  com.apple.DictionaryServices
(1.2 - 208) <A539A058-BA57-35EE-AA08-D0B0E835127D>
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff8dd1f000 -     0x7fff8dd6dff7  com.apple.opencl (2.3.59 -
2.3.59) <044485A4-A50C-34CE-A1F9-35A50CC68313>
/System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 1
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 6866
    thread_create: 0
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=219.7M resident=75.9M(35%)
swapped_out_or_unallocated=143.9M(65%)
Writable regions: Total=1.2G written=35.7M(3%) resident=76.0M(6%)
swapped_out=0K(0%) unallocated=1.1G(94%)

REGION TYPE                        VIRTUAL
===========                        =======
CG backing stores                    8560K
CG image                              544K
CG raster data                        136K
CG shared images                      212K
CoreAnimation                        28.2M
CoreGraphics                            4K
CoreImage                              72K
Foundation                              4K
Image IO                              776K
JS JIT generated code                   8K
JS JIT generated code (reserved)      1.0G        reserved VM address
space (unallocated)
JS VM register file (reserved)       4096K        reserved VM address
space (unallocated)
JS garbage collector                  256K
Kernel Alloc Once                       8K
MALLOC                               93.1M
MALLOC (admin)                         32K
Memory Tag 242                         12K
Memory Tag 251                         28K
OpenCL                                 48K
SQLite page cache                     256K
STACK GUARD                          56.0M
Stack                                13.1M
VM_ALLOCATE                          16.5M
WebKit Malloc                        2304K
__DATA                               28.3M
__IMAGE                               528K
__LINKEDIT                           67.9M
__TEXT                              151.8M
__UNICODE                             544K
mapped file                          53.6M
shared memory                           4K
===========                        =======
TOTAL                                 1.5G
TOTAL, minus reserved VM space      522.7M


Model: MacBookAir6,2, BootROM MBA61.0099.B12, 2 processors, Intel Core
i7, 1.7 GHz, 8 GB, SMC 2.13f9
Graphics: Intel HD Graphics 5000, Intel HD Graphics 5000, Built-In
Memory Module: BANK 0/DIMM0, 4 GB, DDR3, 1600 MHz, 0x02FE, -
Memory Module: BANK 1/DIMM0, 4 GB, DDR3, 1600 MHz, 0x02FE, -
AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x117),
Broadcom BCM43xx 1.0 (6.30.223.154.65)
Bluetooth: Version 4.2.6f1 14216, 3 services, 23 devices, 1 incoming
serial ports
Network Service: AirPort, AirPort, en0
Serial ATA Device: APPLE SSD SM0512F, 500.28 GB
USB Device: Internal Memory Card Reader
USB Device: BRCM20702 Hub
USB Device: Bluetooth USB Host Controller
Thunderbolt Bus: MacBook Air, Apple Inc., 23.6


From bhive01 at gmail.com  Sat Aug 30 21:38:44 2014
From: bhive01 at gmail.com (Brandon Hurr)
Date: Sat, 30 Aug 2014 12:38:44 -0700
Subject: [R-SIG-Mac] Bug in R.app code editor
In-Reply-To: <5402203C.60508@gmail.com>
References: <5402203C.60508@gmail.com>
Message-ID: <CAG2OMvvrmLDKL3NsazwiTf_n+egAsXk+qhD1FHg-aEg+_wjnEg@mail.gmail.com>

Duncan

I could not replicate on my air, but I'm running Yosemite beta 2 and
copied from Chrome 38.0.2125.24 beta (64-bit).

http://imgur.com/oBCvqlK

> sessionInfo()
R version 3.1.1 (2014-07-10)
Platform: x86_64-apple-darwin13.1.0 (64-bit)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

Model Name: MacBook Air
Model Identifier: MacBookAir4,2
Processor Name: Intel Core i5
Processor Speed: 1.7 GHz
Number of Processors: 1
Total Number of Cores: 2
L2 Cache (per Core): 256 KB
L3 Cache: 3 MB
Memory: 4 GB
Boot ROM Version: MBA41.0077.B11
SMC Version (system): 1.73f66

On Sat, Aug 30, 2014 at 12:04 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> The following sequence reliably crashes R.app, with sessionInfo() as
> follows:
>
> R version 3.1.1 (2014-07-10)
> Platform: x86_64-apple-darwin13.1.0 (64-bit)
>
> locale:
> [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> Here's the sequence:
>
> Start R.app as usual, with no history, no Rdata available.
>
> Go to a web page in Firefox and copy a table.  For example the table of
> CRAN test results on this page:
>
> http://cran.r-project.org/web/checks/check_results_MASS.html
>
> Do the copying by selecting a point in the top left cell and dragging
> over the whole table, then Apple-C.
>
> Back in R.app, open a new document to edit, and paste the text.  This
> causes a crash with error report as shown below.  I haven't tried a
> nightly build; I don't have a lot of connectivity right now.
>
> Duncan Murdoch
>
> Process:         R [2567]
> Path:            /Applications/R.app/Contents/MacOS/R
> Identifier:      org.R-project.R
> Version:         R 3.1.1 GUI 1.65 Mavericks build (6784)
> Code Type:       X86-64 (Native)
> Parent Process:  launchd [254]
> Responsible:     R [2567]
> User ID:         501
>
> Date/Time:       2014-08-30 15:03:07.049 -0400
> OS Version:      Mac OS X 10.9.4 (13E28)
> Report Version:  11
> Anonymous UUID:  7E50F7DF-044C-6884-B23C-C8AE83B8139D
>
> Sleep/Wake UUID: 6EF4F23A-9C9E-4636-9415-433329A64CD4
>
> Crashed Thread:  0  Dispatch queue: com.apple.main-thread
>
> Exception Type:  EXC_BAD_ACCESS (SIGSEGV)
> Exception Codes: KERN_INVALID_ADDRESS at 0x0000000000000000
>
> VM Regions Near 0:
> -->
>     __TEXT                 000000010f4b7000-000000010f542000 [  556K]
> r-x/rwx SM=COW  /Applications/R.app/Contents/MacOS/R
>
> Thread 0 Crashed:: Dispatch queue: com.apple.main-thread
> 0   ???                                 000000000000000000 0 + 0
> 1   org.R-project.R                     0x000000010f522ebf
> -[RScriptEditorTypeSetter actionForControlCharacterAtIndex:] + 47
> 2   com.apple.AppKit                    0x00007fff8327e3c0 -[NSTypesetter
> _layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:maxCharacterIndex:nextGlyphIndex:nextCharacterIndex:]
> + 1462
> 3   com.apple.AppKit                    0x00007fff82bf40a8 -[NSTypesetter
> layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
> + 108
> 4   com.apple.AppKit                    0x00007fff82bf3fac -[NSATSTypesetter
> layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
> + 1151
> 5   com.apple.AppKit                    0x00007fff82bf3e5d -[NSATSTypesetter
> layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
> + 816
> 6   com.apple.AppKit                    0x00007fff82bffb19
> -[NSLayoutManager(NSPrivate) _recalculateUsageForTextContainerAtIndex:]
> + 919
> 7   com.apple.AppKit                    0x00007fff82c0b233
> -[NSLayoutManager(NSPrivate)
> _validatedStoredUsageForTextContainerAtIndex:] + 82
> 8   com.apple.AppKit                    0x00007fff82c0b1b7 -[NSLayoutManager
> usedRectForTextContainer:] + 122
> 9   com.apple.AppKit                    0x00007fff82cf2506 -[NSTextView
> textContainerOrigin] + 342
> 10  com.apple.AppKit                    0x00007fff82bf772a -[NSLayoutManager
> _primitiveInvalidateDisplayForGlyphRange:] + 3044
> 11  com.apple.AppKit                    0x00007fff82bf662f -[NSLayoutManager
> invalidateDisplayForCharacterRange:] + 431
> 12  com.apple.AppKit                    0x00007fff82c0b105
> -[NSLayoutManager(NSPrivate) _invalidateDisplayIfNeeded] + 72
> 13  com.apple.AppKit                    0x00007fff82c014d5 -[NSLayoutManager
> textContainerForGlyphAtIndex:effectiveRange:] + 534
> 14  com.apple.AppKit                    0x00007fff8327e008 -[NSTypesetter
> _layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:maxCharacterIndex:nextGlyphIndex:nextCharacterIndex:]
> + 510
> 15  com.apple.AppKit                    0x00007fff82bf40a8 -[NSTypesetter
> layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
> + 108
> 16  com.apple.AppKit                    0x00007fff82bf3fac -[NSATSTypesetter
> layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
> + 1151
> 17  com.apple.AppKit                    0x00007fff82c03d30
> -[NSLayoutManager(NSPrivate)
> _fillLayoutHoleForCharacterRange:desiredNumberOfLines:isSoft:] + 4129
> 18  com.apple.AppKit                    0x00007fff82cac8d9
> _NSFastFillAllLayoutHolesForGlyphRange + 1435
> 19  com.apple.AppKit                    0x00007fff82cf6009
> -[NSLayoutManager(NSPrivate)
> _firstPassGlyphRangeForBoundingRect:inTextContainer:okToFillHoles:] + 1393
> 20  com.apple.AppKit                    0x00007fff82cf4cb4
> -[NSLayoutManager(NSPrivate)
> _glyphRangeForBoundingRect:inTextContainer:fast:okToFillHoles:] + 875
> 21  com.apple.AppKit                    0x00007fff82c5fe52 -[NSTextView
> setNeedsDisplayInRect:avoidAdditionalLayout:] + 1466
> 22  org.R-project.R                     0x000000010f5088eb
> -[RScriptEditorTextView doSyntaxHighlighting] + 2203
> 23  com.apple.Foundation                0x00007fff837fdcb7
> __NSFireDelayedPerform + 333
> 24  com.apple.CoreFoundation            0x00007fff849ce3e4
> __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 20
> 25  com.apple.CoreFoundation            0x00007fff849cdf1f __CFRunLoopDoTimer
> + 1151
> 26  com.apple.CoreFoundation            0x00007fff84a3f5aa
> __CFRunLoopDoTimers + 298
> 27  com.apple.CoreFoundation            0x00007fff849896a5 __CFRunLoopRun + 1525
> 28  com.apple.CoreFoundation            0x00007fff84988e75
> CFRunLoopRunSpecific + 309
> 29  com.apple.HIToolbox                 0x00007fff844c9a0d
> RunCurrentEventLoopInMode + 226
> 30  com.apple.HIToolbox                 0x00007fff844c9685
> ReceiveNextEventCommon + 173
> 31  com.apple.HIToolbox                 0x00007fff844c95bc
> _BlockUntilNextEventMatchingListInModeWithFilter + 65
> 32  com.apple.AppKit                    0x00007fff82b2d24e _DPSNextEvent + 1434
> 33  com.apple.AppKit                    0x00007fff82b2c89b -[NSApplication
> nextEventMatchingMask:untilDate:inMode:dequeue:] + 122
> 34  org.R-project.R                     0x000000010f4c30ac -[RController
> doProcessEvents:] + 204
> 35  org.R-project.R                     0x000000010f4bd4ba -[RController
> handleReadConsole:] + 186
> 36  org.R-project.R                     0x000000010f4c6d89 Re_ReadConsole + 185
> 37  libR.dylib                          0x000000010f6a5491 R_ReplDLLdo1 + 145
> (main.c:340)
> 38  org.R-project.R                     0x000000010f4d5157
> run_REngineRmainloop + 295
> 39  org.R-project.R                     0x000000010f4c952a -[REngine runREPL]
> + 138
> 40  org.R-project.R                     0x000000010f4b84df main + 815
> 41  libdyld.dylib                       0x00007fff80b2e5fd start + 1
>
> Thread 1:: Dispatch queue: com.apple.libdispatch-manager
> 0   libsystem_kernel.dylib              0x00007fff8db8d662 kevent64 + 10
> 1   libdispatch.dylib                   0x00007fff836a8421
> _dispatch_mgr_invoke + 239
> 2   libdispatch.dylib                   0x00007fff836a8136
> _dispatch_mgr_thread + 52
>
> Thread 2:
> 0   libsystem_kernel.dylib              0x00007fff8db8c9aa __select + 10
> 1   org.R-project.R                     0x000000010f4bb11c -[RController
> readThread:] + 604
> 2   com.apple.Foundation                0x00007fff8380076b __NSThread__main__
> + 1318
> 3   libsystem_pthread.dylib             0x00007fff8033e899 _pthread_body + 138
> 4   libsystem_pthread.dylib             0x00007fff8033e72a _pthread_start + 137
> 5   libsystem_pthread.dylib             0x00007fff80342fc9 thread_start + 13
>
> Thread 3:
> 0   libsystem_kernel.dylib              0x00007fff8db88a1a mach_msg_trap + 10
> 1   libsystem_kernel.dylib              0x00007fff8db87d18 mach_msg + 64
> 2   com.apple.CoreFoundation            0x00007fff84989f15
> __CFRunLoopServiceMachPort + 181
> 3   com.apple.CoreFoundation            0x00007fff84989539 __CFRunLoopRun + 1161
> 4   com.apple.CoreFoundation            0x00007fff84988e75
> CFRunLoopRunSpecific + 309
> 5   com.apple.AppKit                    0x00007fff82ccd05e _NSEventThread + 144
> 6   libsystem_pthread.dylib             0x00007fff8033e899 _pthread_body + 138
> 7   libsystem_pthread.dylib             0x00007fff8033e72a _pthread_start + 137
> 8   libsystem_pthread.dylib             0x00007fff80342fc9 thread_start + 13
>
> Thread 4:
> 0   libsystem_kernel.dylib              0x00007fff8db8ce6a __workq_kernreturn
> + 10
> 1   libsystem_pthread.dylib             0x00007fff8033ff08 _pthread_wqthread
> + 330
> 2   libsystem_pthread.dylib             0x00007fff80342fb9 start_wqthread + 13
>
> Thread 5:
> 0   libsystem_kernel.dylib              0x00007fff8db8ce6a __workq_kernreturn
> + 10
> 1   libsystem_pthread.dylib             0x00007fff8033ff08 _pthread_wqthread
> + 330
> 2   libsystem_pthread.dylib             0x00007fff80342fb9 start_wqthread + 13
>
> Thread 6:
> 0   libsystem_kernel.dylib              0x00007fff8db8ce6a __workq_kernreturn
> + 10
> 1   libsystem_pthread.dylib             0x00007fff8033ff08 _pthread_wqthread
> + 330
> 2   libsystem_pthread.dylib             0x00007fff80342fb9 start_wqthread + 13
>
> Thread 7:
> 0   libsystem_kernel.dylib              0x00007fff8db8ce6a __workq_kernreturn
> + 10
> 1   libsystem_pthread.dylib             0x00007fff8033ff08 _pthread_wqthread
> + 330
> 2   libsystem_pthread.dylib             0x00007fff80342fb9 start_wqthread + 13
>
> Thread 8:: JavaScriptCore::BlockFree
> 0   libsystem_kernel.dylib              0x00007fff8db8c716 __psynch_cvwait + 10
> 1   libsystem_pthread.dylib             0x00007fff80340c3b _pthread_cond_wait
> + 727
> 2   com.apple.JavaScriptCore            0x00007fff80d07116
> WTF::ThreadCondition::timedWait(WTF::Mutex&, double) + 118
> 3   com.apple.JavaScriptCore            0x00007fff80d06c35
> JSC::BlockAllocator::blockFreeingThreadMain() + 117
> 4   com.apple.JavaScriptCore            0x00007fff80cfbf5f
> WTF::wtfThreadEntryPoint(void*) + 15
> 5   libsystem_pthread.dylib             0x00007fff8033e899 _pthread_body + 138
> 6   libsystem_pthread.dylib             0x00007fff8033e72a _pthread_start + 137
> 7   libsystem_pthread.dylib             0x00007fff80342fc9 thread_start + 13
>
> Thread 9:: JavaScriptCore::Marking
> 0   libsystem_kernel.dylib              0x00007fff8db8c716 __psynch_cvwait + 10
> 1   libsystem_pthread.dylib             0x00007fff80340c3b _pthread_cond_wait
> + 727
> 2   com.apple.JavaScriptCore            0x00007fff80d07737
> JSC::GCThread::waitForNextPhase() + 119
> 3   com.apple.JavaScriptCore            0x00007fff80d075c8
> JSC::GCThread::gcThreadMain() + 88
> 4   com.apple.JavaScriptCore            0x00007fff80cfbf5f
> WTF::wtfThreadEntryPoint(void*) + 15
> 5   libsystem_pthread.dylib             0x00007fff8033e899 _pthread_body + 138
> 6   libsystem_pthread.dylib             0x00007fff8033e72a _pthread_start + 137
> 7   libsystem_pthread.dylib             0x00007fff80342fc9 thread_start + 13
>
> Thread 10:: JavaScriptCore::Marking
> 0   libsystem_kernel.dylib              0x00007fff8db8c716 __psynch_cvwait + 10
> 1   libsystem_pthread.dylib             0x00007fff80340c3b _pthread_cond_wait
> + 727
> 2   com.apple.JavaScriptCore            0x00007fff80d07737
> JSC::GCThread::waitForNextPhase() + 119
> 3   com.apple.JavaScriptCore            0x00007fff80d075c8
> JSC::GCThread::gcThreadMain() + 88
> 4   com.apple.JavaScriptCore            0x00007fff80cfbf5f
> WTF::wtfThreadEntryPoint(void*) + 15
> 5   libsystem_pthread.dylib             0x00007fff8033e899 _pthread_body + 138
> 6   libsystem_pthread.dylib             0x00007fff8033e72a _pthread_start + 137
> 7   libsystem_pthread.dylib             0x00007fff80342fc9 thread_start + 13
>
> Thread 11:: JavaScriptCore::Marking
> 0   libsystem_kernel.dylib              0x00007fff8db8c716 __psynch_cvwait + 10
> 1   libsystem_pthread.dylib             0x00007fff80340c3b _pthread_cond_wait
> + 727
> 2   com.apple.JavaScriptCore            0x00007fff80d07737
> JSC::GCThread::waitForNextPhase() + 119
> 3   com.apple.JavaScriptCore            0x00007fff80d075c8
> JSC::GCThread::gcThreadMain() + 88
> 4   com.apple.JavaScriptCore            0x00007fff80cfbf5f
> WTF::wtfThreadEntryPoint(void*) + 15
> 5   libsystem_pthread.dylib             0x00007fff8033e899 _pthread_body + 138
> 6   libsystem_pthread.dylib             0x00007fff8033e72a _pthread_start + 137
> 7   libsystem_pthread.dylib             0x00007fff80342fc9 thread_start + 13
>
> Thread 0 crashed with X86 Thread State (64-bit):
>   rax: 0x0000000000000000  rbx: 0x000060800019cb10  rcx:
> 0x00000000000000c8  rdx: 0x00000000000002f1
>   rdi: 0x0000000000000000  rsi: 0x000000010f52d0b2  rbp:
> 0x00007fff50744250  rsp: 0x00007fff50744228
>    r8: 0x0000000000032068   r9: 0x00007fff50744140  r10:
> 0x00007faa942d7aa0  r11: 0x000000010f557eb8
>   r12: 0x000060800019cb10  r13: 0x00000000000002f2  r14:
> 0x00000000000002f1  r15: 0x0000000000000200
>   rip: 0x0000000000000000  rfl: 0x0000000000010246  cr2: 0x0000000000000000
>
> Logical CPU:     3
> Error Code:      0x00000014
> Trap Number:     14
>
>
> Binary Images:
>        0x10f4b7000 -        0x10f541fff +org.R-project.R (R 3.1.1 GUI
> 1.65 Mavericks build - 6784) <10B61A0F-565A-3E74-82D8-FBFCC30BC0B8>
> /Applications/R.app/Contents/MacOS/R
>        0x10f5c9000 -        0x10f844fe7 +libR.dylib (0)
> <BF5E814F-C0E6-3647-A913-75DD6F1EDDB7>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libR.dylib
>        0x10f976000 -        0x10f9a0fff +libRblas.dylib (0)
> <13F4C740-AB3E-3B13-BCB4-A5513049FE0D>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libRblas.dylib
>        0x10f9ac000 -        0x10fabefef +libgfortran.3.dylib (0)
> <226557F4-FB34-3A43-9430-1F33A37F404F>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libgfortran.3.dylib
>        0x10fb1d000 -        0x10fb51fff +libquadmath.0.dylib (0)
> <BA696A38-3B0F-3BF9-B426-2D06DCEF4E42>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libquadmath.0.dylib
>        0x10fb5f000 -        0x10fb89fd9 +libreadline.5.2.dylib (5.2)
> /Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libreadline.5.2.dylib
>        0x10fba0000 -        0x10fbb4fe7 +libgcc_s_x86_64.1.dylib (0)
> <6C92C546-0443-36CE-8C95-C9465E72D088>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libgcc_s_x86_64.1.dylib
>        0x10fc46000 -        0x10fc46ffd +cl_kernels (???)
> <A433BB4F-321C-492F-87AA-374EEBDD62CE> cl_kernels
>        0x11330e000 -        0x11330efeb +cl_kernels (???)
> <132EBB74-3F1B-47EA-8366-AB6712891041> cl_kernels
>        0x113349000 -        0x11334aff9 +cl_kernels (???)
> <12A13F2E-8839-417D-89A4-442A7D863640> cl_kernels
>        0x1133cc000 -        0x1133cdfe4 +cl_kernels (???)
> <754DC994-6B7D-4024-8ADF-6DFCF0631C43> cl_kernels
>        0x113408000 -        0x1134eefef  unorm8_bgra.dylib (2.3.58)
> <280D6FDD-8CA5-36EC-9EA1-D7DC09598E20>
> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib
>        0x114a5b000 -        0x114a62ff7 +utils.so (0)
> <428DF2C3-7DA7-3A3E-AAF8-889F0319FFE2>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/library/utils/libs/utils.so
>        0x114a69000 -        0x114a6fff7 +methods.so (0)
> <81CFAFF3-FAAD-3C4A-9C22-5CAB38C8CECB>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/library/methods/libs/methods.so
>        0x114e15000 -        0x114e47ff7 +grDevices.so (0)
> <778D872B-1CF5-377D-9148-E08AB99A4B81>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/library/grDevices/libs/grDevices.so
>        0x114e9f000 -        0x114edefff +graphics.so (0)
> <3F2771AC-084D-35DE-8A95-C27685B86C83>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/library/graphics/libs/graphics.so
>        0x11501a000 -        0x1150bafe7 +stats.so (0)
> <AB7B0CF0-53D6-3576-A03A-9945C2766D09>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/library/stats/libs/stats.so
>        0x1150d3000 -        0x11528ffef +libRlapack.dylib (0)
> <4201E577-33D3-3928-8F8E-32F2C9C0FB8D>
> /Library/Frameworks/R.framework/Versions/3.1/Resources/lib/libRlapack.dylib
>        0x11532e000 -        0x11532efff +cl_kernels (???)
> <A504DD08-1183-4E5F-91AE-6E1104997409> cl_kernels
>        0x115330000 -        0x115410ff7  unorm8_rgba.dylib (2.3.58)
> <8252DC3E-7434-34C6-B4B9-CFD59B923D12>
> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_rgba.dylib
>     0x7fff64739000 -     0x7fff6476c817  dyld (239.4)
> <042C4CED-6FB2-3B1C-948B-CAF2EE3B9F7A> /usr/lib/dyld
>     0x7fff8008f000 -     0x7fff800e1fff  libc++.1.dylib (120)
> <4F68DFC5-2077-39A8-A449-CAC5FDEE7BDE> /usr/lib/libc++.1.dylib
>     0x7fff800e2000 -     0x7fff8033cff9  com.apple.security (7.0 -
> 55471.14.8) <EA03E140-2509-3A07-8440-2DC97C0D478B>
> /System/Library/Frameworks/Security.framework/Versions/A/Security
>     0x7fff8033d000 -     0x7fff80344ff7  libsystem_pthread.dylib
> (53.1.4) <AB498556-B555-310E-9041-F67EC9E00E2C>
> /usr/lib/system/libsystem_pthread.dylib
>     0x7fff80345000 -     0x7fff8038cfff  libFontRegistry.dylib (127)
> <A77A0480-AA5D-3CC8-8B68-69985CD546DC>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
>     0x7fff8038d000 -     0x7fff80397fff  libcommonCrypto.dylib (60049)
> <8C4F0CA0-389C-3EDC-B155-E62DD2187E1D> /usr/lib/system/libcommonCrypto.dylib
>     0x7fff803c7000 -     0x7fff803c8ff7
> libDiagnosticMessagesClient.dylib (100)
> <4CDB0F7B-C0AF-3424-BC39-495696F0DB1E>
> /usr/lib/libDiagnosticMessagesClient.dylib
>     0x7fff803c9000 -     0x7fff803daff7  libz.1.dylib (53)
> <42E0C8C6-CA38-3CA4-8619-D24ED5DD492E> /usr/lib/libz.1.dylib
>     0x7fff803db000 -     0x7fff8041dff7  libauto.dylib (185.5)
> <F45C36E8-B606-3886-B5B1-B6745E757CA8> /usr/lib/libauto.dylib
>     0x7fff8041e000 -     0x7fff80666ff7  com.apple.CoreData (107 -
> 481.3) <E78734AA-E3D0-33CB-A014-620BBCAB2E96>
> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
>     0x7fff80667000 -     0x7fff8066cff7  com.apple.MediaAccessibility
> (1.0 - 43) <D309D83D-5FAE-37A4-85ED-FFBDA8B66B82>
> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
>     0x7fff80672000 -     0x7fff80689ffa  libAVFAudio.dylib (32.2)
> <52DA516B-DE79-322C-9E1B-2658019289D7>
> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Resources/libAVFAudio.dylib
>     0x7fff8068a000 -     0x7fff80696ff7  com.apple.OpenDirectory (10.9 -
> 173.90.1) <256C265B-7FA6-326D-9F60-18DADF5F3A0E>
> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
>     0x7fff80939000 -     0x7fff80960ff7  com.apple.shortcut (2.6 - 2.6)
> <A62BC973-6782-3893-B014-EC6503AB7EAD>
> /System/Library/PrivateFrameworks/Shortcut.framework/Versions/A/Shortcut
>     0x7fff80961000 -     0x7fff809affff  libcorecrypto.dylib (161.1)
> <F3973C28-14B6-3006-BB2B-00DD7F09ABC7> /usr/lib/system/libcorecrypto.dylib
>     0x7fff80a12000 -     0x7fff80a15fff  com.apple.help (1.3.3 - 46)
> <AE763646-D07A-3F9A-ACD4-F5CBD734EE36>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
>     0x7fff80a19000 -     0x7fff80a66ff2
> com.apple.print.framework.PrintCore (9.0 - 428)
> <8D8253E3-302F-3DB2-9C5C-572CB974E8B3>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
>     0x7fff80a67000 -     0x7fff80a69fff  com.apple.EFILogin (2.0 - 2)
> <C360E8AF-E9BB-3BBA-9DF0-57A92CEF00D4>
> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin
>     0x7fff80a6a000 -     0x7fff80a6dffc  com.apple.IOSurface (91.1 -
> 91.1) <D00EEB0C-8AA8-3986-90C1-C97B2486E8FA>
> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
>     0x7fff80a6e000 -     0x7fff80aadfff  libGLU.dylib (9.6.1)
> <AE032555-3E2F-3DBF-A26D-EA4576061605>
> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
>     0x7fff80aae000 -     0x7fff80ab6fff  libsystem_dnssd.dylib
> (522.92.1) <17B03FFD-92C5-3282-9981-EBB28B456207>
> /usr/lib/system/libsystem_dnssd.dylib
>     0x7fff80ab7000 -     0x7fff80abfffc  libGFXShared.dylib (9.6.1)
> <25BBF325-AC57-3BAA-9427-2D14CC243AE6>
> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
>     0x7fff80ad9000 -     0x7fff80adafff  liblangid.dylib (117)
> <9546E641-F730-3AB0-B3CD-E0E2FDD173D9> /usr/lib/liblangid.dylib
>     0x7fff80b2b000 -     0x7fff80b2eff7  libdyld.dylib (239.4)
> <7C9EC3B7-DDE3-33FF-953F-4067C743951D> /usr/lib/system/libdyld.dylib
>     0x7fff80be6000 -     0x7fff80cd5fff  libFontParser.dylib (111.1)
> <835A8253-6AB9-3AAB-9CBF-171440DEC486>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
>     0x7fff80cd6000 -     0x7fff80cd6fff  com.apple.ApplicationServices
> (48 - 48) <3E3F01A8-314D-378F-835E-9CC4F8820031>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
>     0x7fff80cf3000 -     0x7fff8106aff6  com.apple.JavaScriptCore (9537
> - 9537.77.1) <F588191A-25E6-31AC-A325-B7779DC6D1EC>
> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
>     0x7fff8106b000 -     0x7fff8106cfff  com.apple.TrustEvaluationAgent
> (2.0 - 25) <334A82F4-4AE4-3719-A511-86D0B0723E2B>
> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
>     0x7fff81094000 -     0x7fff8119aff7  com.apple.ImageIO.framework
> (3.3.0 - 1043) <C4ADE5B1-A540-34E1-A043-118185489C9D>
> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
>     0x7fff8119b000 -     0x7fff8119cfff  libunc.dylib (28)
> <62682455-1862-36FE-8A04-7A6B91256438> /usr/lib/system/libunc.dylib
>     0x7fff81247000 -     0x7fff81250ffd  com.apple.CommonAuth (4.0 -
> 2.0) <32BA436F-6319-3A0B-B5D2-2EB75FF36B5B>
> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
>     0x7fff81251000 -     0x7fff81285fff  libssl.0.9.8.dylib (50)
> <B15F967C-B002-36C2-9621-3456D8509F50> /usr/lib/libssl.0.9.8.dylib
>     0x7fff81286000 -     0x7fff812edff7  com.apple.CoreUtils (2.0 -
> 200.34.4) <E53B97FE-E067-33F6-A9C1-D4EC2A20FB9F>
> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
>     0x7fff81351000 -     0x7fff8135eff7  libxar.1.dylib (202)
> <5572AA71-E98D-3FE1-9402-BB4A84E0E71E> /usr/lib/libxar.1.dylib
>     0x7fff8135f000 -     0x7fff821b2ffb  com.apple.WebCore (9537 -
> 9537.77.4) <9C4E816A-0DAC-31B2-85C3-910164F3E741>
> /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore
>     0x7fff821b3000 -     0x7fff822e3ff7  com.apple.desktopservices
> (1.8.3 - 1.8.3) <225BEC20-F8E0-3F22-9560-890A1A5B9050>
> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
>     0x7fff822e5000 -     0x7fff822e7fff  com.apple.SecCodeWrapper (3.0 -
> 1) <DE7CA981-2B8B-34AC-845D-06D5C8F10441>
> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper
>     0x7fff822e8000 -     0x7fff822f0ff3  libCGCMS.A.dylib (599.25.10.1)
> <9A4FAAD7-1C16-33F8-A615-1DCAB0546E31>
> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGCMS.A.dylib
>     0x7fff822f1000 -     0x7fff822faff3  libsystem_notify.dylib (121)
> <52571EC3-6894-37E4-946E-064B021ED44E>
> /usr/lib/system/libsystem_notify.dylib
>     0x7fff822fb000 -     0x7fff825e5fff
> com.apple.CoreServices.CarbonCore (1077.17 - 1077.17)
> <3A2E92FD-DEE2-3D45-9619-11500801A61C>
> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
>     0x7fff825e6000 -     0x7fff825e8fff  com.apple.ExceptionHandling
> (1.5 - 10) <0DD670E1-08D5-3570-BE98-19030BEA9845>
> /System/Library/Frameworks/ExceptionHandling.framework/Versions/A/ExceptionHandling
>     0x7fff825e9000 -     0x7fff826abff5  com.apple.CoreText (367.20 -
> 367.20) <B80D086D-93A9-3C35-860E-9C3FDD027F3B>
> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
>     0x7fff826ac000 -     0x7fff826b9ff0  libbz2.1.0.dylib (29)
> <0B98AC35-B138-349C-8063-2B987A75D24C> /usr/lib/libbz2.1.0.dylib
>     0x7fff827e0000 -     0x7fff82ab1ff4  com.apple.CoreImage (9.4.0)
> <2C636ECD-0F1A-357C-9EFF-0452476FDDF5>
> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage
>     0x7fff82aec000 -     0x7fff82aeefff  libRadiance.dylib (1043)
> <9813995C-DEAA-3992-8DF8-320E4E4E288B>
> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
>     0x7fff82aef000 -     0x7fff82afafff  libGL.dylib (9.6.1)
> <4B65BF9F-F34A-3CD1-94E8-DB26DAA0A59D>
> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
>     0x7fff82b04000 -     0x7fff82b08fff  libpam.2.dylib (20)
> <B93CE8F5-DAA8-30A1-B1F6-F890509513CB> /usr/lib/libpam.2.dylib
>     0x7fff82b09000 -     0x7fff8367fff7  com.apple.AppKit (6.9 -
> 1265.21) <9DC13B27-841D-3839-93B2-3EDE66157BDE>
> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
>     0x7fff83695000 -     0x7fff836a4ff8  com.apple.LangAnalysis (1.7.0 -
> 1.7.0) <8FE131B6-1180-3892-98F5-C9C9B79072D4>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
>     0x7fff836a5000 -     0x7fff836bffff  libdispatch.dylib (339.92.1)
> <C4E4A18D-3C3B-3C9C-8709-A4270D998DE7> /usr/lib/system/libdispatch.dylib
>     0x7fff836c0000 -     0x7fff836c9fff
> com.apple.speech.synthesis.framework (4.7.1 - 4.7.1)
> <383FB557-E88E-3239-82B8-15F9F885B702>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
>     0x7fff836d6000 -     0x7fff8371bff6  com.apple.HIServices (1.23 -
> 468) <5970AF5C-F5BD-3B6A-97C9-95B2CA98D71D>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
>     0x7fff8371c000 -     0x7fff83763ff7  libcups.2.dylib (372.4)
> <36EA4350-43B4-3A5C-9904-10685BFDA7D4> /usr/lib/libcups.2.dylib
>     0x7fff8379a000 -     0x7fff83a98fff  com.apple.Foundation (6.9 -
> 1056.13) <2EE9AB07-3EA0-37D3-B407-4A520F2CB497>
> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
>     0x7fff83a99000 -     0x7fff83af2fff  libTIFF.dylib (1043)
> <D7CAE68F-6087-3B40-9CB8-EC6DB47BF877>
> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
>     0x7fff83bd1000 -     0x7fff83bd2ffb  libremovefile.dylib (33)
> <3543F917-928E-3DB2-A2F4-7AB73B4970EF> /usr/lib/system/libremovefile.dylib
>     0x7fff83bd3000 -     0x7fff83bd9ff7  libCGXCoreImage.A.dylib
> (599.25.10.1) <1AB1B2B2-55A9-3780-BCB9-1B3CE375D739>
> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXCoreImage.A.dylib
>     0x7fff83bda000 -     0x7fff83bdafff  com.apple.Carbon (154 - 157)
> <45A9A40A-78FF-3EA0-8FAB-A4F81052FA55>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
>     0x7fff83bed000 -     0x7fff83c09fff  libresolv.9.dylib (54)
> <11C2C826-F1C6-39C6-B4E8-6E0C41D4FA95> /usr/lib/libresolv.9.dylib
>     0x7fff83d71000 -     0x7fff83da2ff7  libtidy.A.dylib (15.12)
> <BF757E3C-733A-3B6B-809A-A3949D46466E> /usr/lib/libtidy.A.dylib
>     0x7fff83de4000 -     0x7fff83e7fff7  com.apple.PDFKit (2.9.2 -
> 2.9.2) <0CDC6467-9227-3D98-B4D4-660796AE9F6B>
> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit
>     0x7fff83e80000 -     0x7fff83ecbfff  com.apple.ImageCaptureCore (5.0
> - 5.0) <F529EDDC-E2F5-30CA-9938-AF23296B5C5B>
> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
>     0x7fff83ecc000 -     0x7fff83ee4ff7  com.apple.openscripting (1.4 -
> 157) <B3B037D7-1019-31E6-9D17-08E699AF3701>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
>     0x7fff83f9b000 -     0x7fff83fa2ff8  liblaunch.dylib (842.92.1)
> <A40A0C7B-3216-39B4-8AE0-B5D3BAF1DA8A> /usr/lib/system/liblaunch.dylib
>     0x7fff83fa3000 -     0x7fff83fa7ff7  libsystem_stats.dylib (93.90.3)
> <4E51D5B0-92A0-3D0D-B90E-495A1ED3E391> /usr/lib/system/libsystem_stats.dylib
>     0x7fff83fa8000 -     0x7fff84389ffe  libLAPACK.dylib (1094.5)
> <7E7A9B8D-1638-3914-BAE0-663B69865986>
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
>     0x7fff8439b000 -     0x7fff84427ff7  com.apple.ink.framework (10.9 -
> 207) <8A50B893-AD03-3826-8555-A54FEAF08F47>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
>     0x7fff84428000 -     0x7fff84428fff  com.apple.Accelerate.vecLib
> (3.9 - vecLib 3.9) <F8D0CC77-98AC-3B58-9FE6-0C25421827B6>
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
>     0x7fff84481000 -     0x7fff84483ff7  com.apple.securityhi (9.0 -
> 55005) <18C42525-688C-3D47-B9C9-1E0F8F58FA64>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
>     0x7fff8449b000 -     0x7fff84745ff5  com.apple.HIToolbox (2.1.1 -
> 698) <A388E773-AE7B-3FD1-8662-A98E6E24EA16>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
>     0x7fff84746000 -     0x7fff8476effb  libxslt.1.dylib (13)
> <C9794936-633C-3F0C-9E71-30190B9B41C1> /usr/lib/libxslt.1.dylib
>     0x7fff8476f000 -     0x7fff84778fff  com.apple.DisplayServicesFW
> (2.8 - 360.8.14) <816A9CED-1BC0-3C76-8103-1B9BE0F723BB>
> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
>     0x7fff84779000 -     0x7fff8478bfff  com.apple.ImageCapture (9.0 -
> 9.0) <BE0B65DA-3031-359B-8BBA-B9803D4ADBF4>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
>     0x7fff8478c000 -     0x7fff8478dff7  libSystem.B.dylib (1197.1.1)
> <E303F2F8-A8CF-3DF3-84B3-F2D0EE41CCF6> /usr/lib/libSystem.B.dylib
>     0x7fff8478e000 -     0x7fff847a4fff  com.apple.CoreMediaAuthoring
> (2.2 - 947) <F1886A05-1C29-3F88-88C0-4A1013530AD1>
> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
>     0x7fff847a5000 -     0x7fff847a7fff  libCVMSPluginSupport.dylib
> (9.6.1) <FB37F4C4-1E84-3349-BB03-92CA0A5F6837>
> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
>     0x7fff847a8000 -     0x7fff84918ff4  com.apple.CFNetwork (673.4 -
> 673.4) <F3BF6020-99BE-3844-A7B8-352B93AD02F3>
> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
>     0x7fff84919000 -     0x7fff84afefff  com.apple.CoreFoundation (6.9 -
> 855.17) <729BD6DA-1F63-3E72-A148-26F21EBF52BB>
> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
>     0x7fff84aff000 -     0x7fff84b01fff  com.apple.Mangrove (1.0 - 1)
> <72F5CBC7-4E78-374E-98EA-C3700136904E>
> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
>     0x7fff84daf000 -     0x7fff84db6ffb  libcopyfile.dylib (103.92.1)
> <CF29DFF6-0589-3590-834C-82E2316612E8> /usr/lib/system/libcopyfile.dylib
>     0x7fff84dfe000 -     0x7fff84e04ff7  com.apple.XPCService (2.0 - 1)
> <2CE632D7-FE57-36CF-91D4-C57D0F2E0BFE>
> /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService
>     0x7fff84e05000 -     0x7fff84e05fff  com.apple.Accelerate (1.9 -
> Accelerate 1.9) <509BB27A-AE62-366D-86D8-0B06D217CF56>
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
>     0x7fff84e06000 -     0x7fff84e21ff7  libsystem_malloc.dylib
> (23.10.1) <A695B4E4-38E9-332E-A772-29D31E3F1385>
> /usr/lib/system/libsystem_malloc.dylib
>     0x7fff84e22000 -     0x7fff84e27ff7  libunwind.dylib (35.3)
> <78DCC358-2FC1-302E-B395-0155B47CB547> /usr/lib/system/libunwind.dylib
>     0x7fff84e2d000 -     0x7fff84e2fff7  libquarantine.dylib (71)
> <7A1A2BCB-C03D-3A25-BFA4-3E569B2D2C38> /usr/lib/system/libquarantine.dylib
>     0x7fff84e30000 -     0x7fff84e39ff7  libcldcpuengine.dylib (2.3.58)
> <E3A84FEC-4060-39C2-A469-159A443D2B6D>
> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib
>     0x7fff84e3a000 -     0x7fff84e83fff  com.apple.CoreMedia (1.0 -
> 1273.54) <CAB7303A-9AB2-317A-99C3-BEAA8AE8764B>
> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
>     0x7fff84f0e000 -     0x7fff84f0effd  com.apple.audio.units.AudioUnit
> (1.10 - 1.10) <68B21135-55A6-3563-A3D6-3E692A7DEB7F>
> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
>     0x7fff84f16000 -     0x7fff85007ff9  libiconv.2.dylib (41)
> <BB44B115-AC32-3877-A0ED-AEC6232A4563> /usr/lib/libiconv.2.dylib
>     0x7fff8521f000 -     0x7fff85270fff  com.apple.QuickLookFramework
> (5.0 - 622.7) <17685CEC-C94B-3F83-ADE1-B24840B35E44>
> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
>     0x7fff85271000 -     0x7fff85b9132b  com.apple.CoreGraphics (1.600.0
> - 599.25.10.1) <EC14B831-96BB-3A50-A451-E36BDC8F59FB>
> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
>     0x7fff85b92000 -     0x7fff85bd0ff7  libGLImage.dylib (9.6.1)
> <5E02B38C-9F36-39BE-8746-724F0D8BBFC0>
> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
>     0x7fff85bd1000 -     0x7fff85bf5ff7  libJPEG.dylib (1043)
> <25723F3F-48A6-3AC5-A7A3-58E418FEBF3F>
> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
>     0x7fff85bf6000 -     0x7fff85c01ff7  com.apple.NetAuth (5.0 - 5.0)
> <C811E662-9EC3-3B74-808A-A75D624F326B>
> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
>     0x7fff85c2c000 -     0x7fff85c30ff7  libGIF.dylib (1043)
> <AF0FE71A-27AB-31E0-8CEA-BC0BF2091FA8>
> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
>     0x7fff85c55000 -     0x7fff85c84fd2  libsystem_m.dylib (3047.16)
> <B7F0E2E4-2777-33FC-A787-D6430B630D54> /usr/lib/system/libsystem_m.dylib
>     0x7fff85c9f000 -     0x7fff85cc4ff7  com.apple.CoreVideo (1.8 -
> 117.2) <4674339E-26D0-35FA-9958-422832B39B12>
> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
>     0x7fff8603d000 -     0x7fff86066ff7  libc++abi.dylib (49.1)
> <21A807D3-6732-3455-B77F-743E9F916DF0> /usr/lib/libc++abi.dylib
>     0x7fff86067000 -     0x7fff86131fff  com.apple.LaunchServices
> (572.28 - 572.28) <FDED4724-4CB6-3DE5-B785-AE6D4C261CF6>
> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
>     0x7fff86132000 -     0x7fff86137fff  com.apple.DiskArbitration (2.6
> - 2.6) <A4165553-770E-3D27-B217-01FC1F852B87>
> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
>     0x7fff86195000 -     0x7fff86196fff  libsystem_sandbox.dylib
> (278.11.1) <0D0B13EA-6B7A-3AC8-BE60-B548543BEB77>
> /usr/lib/system/libsystem_sandbox.dylib
>     0x7fff86197000 -     0x7fff861aaff7  com.apple.AppContainer (3.0 -
> 1) <BD342039-430E-39FE-BC2D-8F97B557548E>
> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer
>     0x7fff86544000 -     0x7fff866b2ff7  libBLAS.dylib (1094.5)
> <DE93A590-5FA5-32A2-A16C-5D7D7361769F>
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
>     0x7fff866b3000 -     0x7fff866bfffb  com.apple.AppleFSCompression
> (56.92.1 - 1.0) <066255FD-DBD1-3041-8DDA-7AFC41C9096D>
> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
>     0x7fff866c0000 -     0x7fff8686df27  libobjc.A.dylib (551.1)
> <AD7FD984-271E-30F4-A361-6B20319EC73B> /usr/lib/libobjc.A.dylib
>     0x7fff86e13000 -     0x7fff86e23fff  libbsm.0.dylib (33)
> <2CAC00A2-1352-302A-88FA-C567D4D69179> /usr/lib/libbsm.0.dylib
>     0x7fff86e24000 -     0x7fff86e70ffe  com.apple.CoreMediaIO (408.0 -
> 4570) <72371044-3FF2-3538-8EE1-C7C20F7C60A0>
> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
>     0x7fff86e71000 -     0x7fff86eb6fff  libcurl.4.dylib (78.94.1)
> <88F27F9B-052E-3375-938D-2603E90D8AD5> /usr/lib/libcurl.4.dylib
>     0x7fff86eb7000 -     0x7fff86f38fff  com.apple.CoreSymbolication
> (3.0.1 - 141.0.5) <20E484C4-9F0E-3DF6-BB27-D509859FF57A>
> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
>     0x7fff86f39000 -     0x7fff86f4bff7
> com.apple.MultitouchSupport.framework (245.13 - 245.13)
> <E51DE5CA-9859-3C13-A24F-37EF4385C1D6>
> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
>     0x7fff86fa2000 -     0x7fff8702dfff  libCoreStorage.dylib (380)
> <DE9B3F8C-045C-3010-9A25-C8CD72F1066B> /usr/lib/libCoreStorage.dylib
>     0x7fff8702e000 -     0x7fff87047ff7  com.apple.Kerberos (3.0 - 1)
> <F108AFEB-198A-3BAF-BCA5-9DFCE55EFF92>
> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
>     0x7fff87048000 -     0x7fff87095fff  com.apple.AppleVAFramework
> (5.0.27 - 5.0.27) <608D91BD-9D88-3FAB-9A06-24C1DAEA092D>
> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
>     0x7fff87096000 -     0x7fff874e4fef  com.apple.VideoToolbox (1.0 -
> 1273.54) <4699BB55-7387-3981-9217-869215F00CA9>
> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
>     0x7fff875e2000 -     0x7fff875ebffb  libCGInterfaces.dylib (271)
> <68EFBEFE-7506-3235-99A2-5B69EDBFD7B8>
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Resources/libCGInterfaces.dylib
>     0x7fff875ee000 -     0x7fff876a6ff7  com.apple.DiscRecording (8.0 -
> 8000.4.6) <CDAAAD04-A1D0-3C67-ABCC-EFC9E8D44E7E>
> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording
>     0x7fff876a7000 -     0x7fff87772fff  libvDSP.dylib (423.32)
> <3BF732BE-DDE0-38EB-8C54-E4E3C64F77A7>
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
>     0x7fff87773000 -     0x7fff87776ffa  libCGXType.A.dylib
> (599.25.10.1) <9E609F91-BD17-3C51-A877-C80E7183A867>
> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib
>     0x7fff87777000 -     0x7fff87848fff  com.apple.QuickLookUIFramework
> (5.0 - 622.7) <13841701-34C2-353D-868D-3E08D020C90F>
> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
>     0x7fff87849000 -     0x7fff8784aff7  com.apple.print.framework.Print
> (9.0 - 260) <EE00FAE1-DA03-3EC2-8571-562518C46994>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
>     0x7fff8784b000 -     0x7fff87866ff7  libCRFSuite.dylib (34)
> <FFAE75FA-C54E-398B-AA97-18164CD9789D> /usr/lib/libCRFSuite.dylib
>     0x7fff87867000 -     0x7fff8786ffff  libMatch.1.dylib (19)
> <021293AB-407D-309A-87F5-8E782F46753E> /usr/lib/libMatch.1.dylib
>     0x7fff878f8000 -     0x7fff87ccffef  com.apple.CoreAUC (6.25.00 -
> 6.25.00) <2D7DC96C-BA83-3220-A03F-C790D50A23D8>
> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
>     0x7fff87cd0000 -     0x7fff87d47fff
> com.apple.CoreServices.OSServices (600.4 - 600.4)
> <C63562F5-6DF5-3EE9-8897-FF61A44C8251>
> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
>     0x7fff87dd8000 -     0x7fff87ddaffb  libutil.dylib (34)
> <DAC4A6CF-A1BB-3874-9569-A919316D30E8> /usr/lib/libutil.dylib
>     0x7fff87ddb000 -     0x7fff87e0aff7  com.apple.CoreAVCHD (5.7.0 -
> 5700.4.3) <404369C0-ED9F-3010-8D2F-BC55285F7808>
> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
>     0x7fff87e0b000 -     0x7fff87e66ffb  com.apple.AE (665.5 - 665.5)
> <BBA230F9-144C-3CAB-A77A-0621719244CD>
> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
>     0x7fff87e67000 -     0x7fff87e7eff7  com.apple.CFOpenDirectory (10.9
> - 173.90.1) <EBC0A1F2-9054-3D39-99AE-A3F655E55D6A>
> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
>     0x7fff87e7f000 -     0x7fff87f50ff1  com.apple.DiskImagesFramework
> (10.9 - 371.1) <D85430A6-1410-3B5F-9D11-17E2440B786E>
> /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages
>     0x7fff87f51000 -     0x7fff87fb5fff  com.apple.datadetectorscore
> (5.0 - 354.5) <0AE9749A-6BFC-3032-B802-210DF59AEDB0>
> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
>     0x7fff87fb6000 -     0x7fff8807aff7  com.apple.backup.framework
> (1.5.4 - 1.5.4) <195DA868-47A5-37E6-8CF0-9BCF11846899>
> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
>     0x7fff8807b000 -     0x7fff880ccff7  com.apple.audio.CoreAudio
> (4.2.1 - 4.2.1) <BE13E840-FB45-3BC2-BCF5-031629754FD5>
> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
>     0x7fff880cd000 -     0x7fff880cdff7  libkeymgr.dylib (28)
> <3AA8D85D-CF00-3BD3-A5A0-E28E1A32A6D8> /usr/lib/system/libkeymgr.dylib
>     0x7fff880ce000 -     0x7fff880d2ff7  libheimdal-asn1.dylib
> (323.92.1) <CAE21FFF-5763-399C-B7C5-EEBFFEEF2242>
> /usr/lib/libheimdal-asn1.dylib
>     0x7fff880d3000 -     0x7fff8812bff7  com.apple.Symbolication (1.4 -
> 129.0.2) <B1F008C4-184D-36A2-922F-4A67A075D512>
> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
>     0x7fff8812c000 -     0x7fff8812ffff  com.apple.TCC (1.0 - 1)
> <32A075D9-47FD-3E71-95BC-BFB0D583F41C>
> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
>     0x7fff8813c000 -     0x7fff88157ff7  libPng.dylib (1043)
> <23D2DAB7-C9A9-392F-989A-871E89E7751D>
> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
>     0x7fff881ef000 -     0x7fff881fcff4  com.apple.Librarian (1.2 - 1)
> <F1A2744D-8536-32C7-8218-9972C6300DAE>
> /System/Library/PrivateFrameworks/Librarian.framework/Versions/A/Librarian
>     0x7fff881fd000 -     0x7fff881fdfff  com.apple.CoreServices (59 -
> 59) <7A697B5E-F179-30DF-93F2-8B503CEEEFD5>
> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
>     0x7fff88204000 -     0x7fff88215ff7  libsystem_asl.dylib (217.1.4)
> <655FB343-52CF-3E2F-B14D-BEBF5AAEF94D> /usr/lib/system/libsystem_asl.dylib
>     0x7fff88216000 -     0x7fff8823dffb  libsystem_info.dylib (449.1.3)
> <7D41A156-D285-3849-A2C3-C04ADE797D98> /usr/lib/system/libsystem_info.dylib
>     0x7fff88291000 -     0x7fff882d2fff  com.apple.PerformanceAnalysis
> (1.47 - 47) <7B73DFF4-75DB-3403-80D2-0F3FE48764C3>
> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
>     0x7fff882d3000 -     0x7fff88342ff1
> com.apple.ApplicationServices.ATS (360 - 363.3)
> <546E89D9-2AE7-3111-B2B8-2366650D22F0>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
>     0x7fff88343000 -     0x7fff88343fff  com.apple.Cocoa (6.8 - 20)
> <E90E99D7-A425-3301-A025-D9E0CD11918E>
> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
>     0x7fff8836b000 -     0x7fff88452ff7  libxml2.2.dylib (26)
> <A1DADD11-89E5-3DE4-8802-07186225967F> /usr/lib/libxml2.2.dylib
>     0x7fff88453000 -     0x7fff88537fff  com.apple.coreui (2.1 - 231)
> <432DB40C-6B7E-39C8-9FB5-B95917930056>
> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
>     0x7fff88925000 -     0x7fff88a66fff  com.apple.QTKit (7.7.3 -
> 2826.19) <E634E6EC-2C7A-3F86-997B-CFC5D9F89E6B>
> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
>     0x7fff88a7e000 -     0x7fff88b06ff7  com.apple.CorePDF (4.0 - 4)
> <92D15ED1-D2E1-3ECB-93FF-42888219A99F>
> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
>     0x7fff88b1b000 -     0x7fff88b21fff  com.apple.AOSNotification
> (1.7.0 - 760.3) <7901B867-60F7-3645-BB3E-18C51A6FBCC6>
> /System/Library/PrivateFrameworks/AOSNotification.framework/Versions/A/AOSNotification
>     0x7fff88b22000 -     0x7fff88b46fff  com.apple.quartzfilters (1.8.0
> - 1.7.0) <39C08086-9866-372F-9420-81F5689149DF>
> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
>     0x7fff88b47000 -     0x7fff88b57ffb  libsasl2.2.dylib (170)
> <C8E25710-68B6-368A-BF3E-48EC7273177B> /usr/lib/libsasl2.2.dylib
>     0x7fff88b58000 -     0x7fff88b60ff7
> com.apple.speech.recognition.framework (4.2.4 - 4.2.4)
> <98BBB3E4-6239-3EF1-90B2-84EA0D3B8D61>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
>     0x7fff88d3f000 -     0x7fff88d6bfff  com.apple.CoreServicesInternal
> (184.9 - 184.9) <4DEA54F9-81D6-3EDB-AA3C-1F9C497B3379>
> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
>     0x7fff88d6c000 -     0x7fff88d71fff  libmacho.dylib (845)
> <1D2910DF-C036-3A82-A3FD-44FF73B5FF9B> /usr/lib/system/libmacho.dylib
>     0x7fff88d72000 -     0x7fff89295fff  com.apple.QuartzComposer (5.1 -
> 319) <8B90921F-911B-3240-A1D5-3C084F3E6A36>
> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
>     0x7fff892a0000 -     0x7fff89330ff7  com.apple.Metadata (10.7.0 -
> 800.28) <E85AEB1B-CB17-38BC-B5C6-AAB50B47AF05>
> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
>     0x7fff89331000 -     0x7fff8933bff7  libcsfde.dylib (380)
> <A5CF6F85-0537-399F-968B-1536B1235E65> /usr/lib/libcsfde.dylib
>     0x7fff8933c000 -     0x7fff89371ffc  com.apple.LDAPFramework (2.4.28
> - 194.5) <4ADD0595-25B9-3F09-897E-3FB790AD2C5A>
> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP
>     0x7fff89372000 -     0x7fff8938bff7  com.apple.Ubiquity (1.3 - 289)
> <C7F1B734-CE81-334D-BE41-8B20D95A1F9B>
> /System/Library/PrivateFrameworks/Ubiquity.framework/Versions/A/Ubiquity
>     0x7fff8938c000 -     0x7fff89399fff  com.apple.Sharing (132.2 -
> 132.2) <F983394A-226D-3244-B511-FA51FDB6ADDA>
> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
>     0x7fff8939a000 -     0x7fff893fdffb  com.apple.SystemConfiguration
> (1.13.1 - 1.13.1) <2C8E1A73-5AD6-3A7D-8ED8-D6755555A993>
> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
>     0x7fff893fe000 -     0x7fff89426ffb  libRIP.A.dylib (599.25.10.1)
> <623091DF-5769-3326-90EB-44EFC8087660>
> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib
>     0x7fff8946d000 -     0x7fff89475ff7  com.apple.AppleSRP (5.0 - 1)
> <ABC7F088-1FD5-3768-B9F3-847F355E90B3>
> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP
>     0x7fff89476000 -     0x7fff897acfff  com.apple.MediaToolbox (1.0 -
> 1273.54) <CB6F6690-D44C-30B5-93AB-CAB198D51884>
> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
>     0x7fff8980c000 -     0x7fff89836ff7  libsandbox.1.dylib (278.11.1)
> <D98EE9E5-BEB9-3396-924B-9CD100E81C41> /usr/lib/libsandbox.1.dylib
>     0x7fff8984a000 -     0x7fff89850ff7  libsystem_platform.dylib
> (24.90.1) <3C3D3DA8-32B9-3243-98EC-D89B9A1670B3>
> /usr/lib/system/libsystem_platform.dylib
>     0x7fff8a115000 -     0x7fff8a2cdffb  libicucore.A.dylib (511.34)
> <616A65D6-3F20-3EAB-8CA8-273AD890261C> /usr/lib/libicucore.A.dylib
>     0x7fff8a2ce000 -     0x7fff8a341fff  com.apple.securityfoundation
> (6.0 - 55122.3) <8575DF7A-EC79-3FCE-A737-7512363A5B12>
> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
>     0x7fff8a342000 -     0x7fff8a37bff7  com.apple.QD (3.50 - 298)
> <C1F20764-DEF0-34CF-B3AB-AB5480D64E66>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
>     0x7fff8a37c000 -     0x7fff8a4d0ff3
> com.apple.audio.toolbox.AudioToolbox (1.10 - 1.10)
> <69B273E8-5A8E-3FC7-B807-C16B657662FE>
> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
>     0x7fff8a4d1000 -     0x7fff8a4eeff7  com.apple.framework.Apple80211
> (9.4 - 940.60) <043C7CFD-B57B-3F9D-B0FE-CA4B97C43968>
> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
>     0x7fff8a550000 -     0x7fff8a57ffff  com.apple.DebugSymbols (106 -
> 106) <E1BDED08-523A-36F4-B2DA-9D5C712F0AC7>
> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
>     0x7fff8a582000 -     0x7fff8a589fff  com.apple.NetFS (6.0 - 4.0)
> <8E26C099-CE9D-3819-91A2-64EA929C6137>
> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
>     0x7fff8a58a000 -     0x7fff8a6c0ffd  com.apple.WebKit (9537 -
> 9537.77.4) <A0291E16-4ED9-30E8-B9A2-DB836778EE9E>
> /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
>     0x7fff8a6c1000 -     0x7fff8a85dff3  com.apple.QuartzCore (1.8 -
> 332.3) <72003E51-1287-395B-BCBC-331597D45C5E>
> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
>     0x7fff8a85e000 -     0x7fff8ab32fc7  com.apple.vImage (7.0 - 7.0)
> <D241DBFA-AC49-31E2-893D-EAAC31890C90>
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
>     0x7fff8ab33000 -     0x7fff8aba0fff  com.apple.SearchKit (1.4.0 -
> 1.4.0) <B9B8D510-A27E-36B0-93E9-17146D9E9045>
> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
>     0x7fff8af8a000 -     0x7fff8b03aff7  libvMisc.dylib (423.32)
> <049C0735-1808-39B9-943F-76CB8021744F>
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
>     0x7fff8b03b000 -     0x7fff8b15dfff  com.apple.avfoundation (2.0 -
> 651.12.1) <FF001F98-E198-3B1D-A7EB-A8C48E6E34A3>
> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
>     0x7fff8b15e000 -     0x7fff8b15effd  libOpenScriptingUtil.dylib
> (157) <19F0E769-0989-3062-9AFB-8976E90E9759>
> /usr/lib/libOpenScriptingUtil.dylib
>     0x7fff8b15f000 -     0x7fff8b23efff  libcrypto.0.9.8.dylib (50)
> <B95B9DBA-39D3-3EEF-AF43-44608B28894E> /usr/lib/libcrypto.0.9.8.dylib
>     0x7fff8b2a0000 -     0x7fff8b2a2ff3  libsystem_configuration.dylib
> (596.15) <4998CB6A-9D54-390A-9F57-5D1AC53C135C>
> /usr/lib/system/libsystem_configuration.dylib
>     0x7fff8b2e0000 -     0x7fff8b304fff  libxpc.dylib (300.90.2)
> <AB40CD57-F454-3FD4-B415-63B3C0D5C624> /usr/lib/system/libxpc.dylib
>     0x7fff8b31f000 -     0x7fff8b349ff7  libpcap.A.dylib (42)
> <91D3FF51-D6FE-3C05-98C9-1182E0EC3D58> /usr/lib/libpcap.A.dylib
>     0x7fff8b34a000 -     0x7fff8b434fff  libsqlite3.dylib (158)
> <00269BF9-43BE-39E0-9C85-24585B9923C8> /usr/lib/libsqlite3.dylib
>     0x7fff8b51e000 -     0x7fff8b529fff  libkxld.dylib (2422.110.17)
> <B6140BAB-0EAF-3E4F-B055-314068056BB4> /usr/lib/system/libkxld.dylib
>     0x7fff8b774000 -     0x7fff8b7d9ffb  com.apple.Heimdal (4.0 - 2.0)
> <F34D6627-9F80-3823-8B57-DB629307DF87>
> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
>     0x7fff8b7ed000 -     0x7fff8b812ff7  com.apple.ChunkingLibrary (2.0
> - 155.1) <B845DC7A-D1EA-31E2-967C-D1FE0C628036>
> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
>     0x7fff8b813000 -     0x7fff8b816fff  com.apple.AppleSystemInfo (3.0
> - 3.0) <61FE171D-3D88-313F-A832-280AEC8F4AB7>
> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
>     0x7fff8b817000 -     0x7fff8b821ff7  com.apple.CrashReporterSupport
> (10.9 - 539) <B25A09EC-A021-32EC-86F8-05B4837E0EDE>
> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
>     0x7fff8b89b000 -     0x7fff8b924fff  com.apple.ColorSync (4.9.0 -
> 4.9.0) <B756B908-9AD1-3F5D-83F9-7A0B068387D2>
> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
>     0x7fff8b925000 -     0x7fff8b955fff  libncurses.5.4.dylib (42)
> <BF763D62-9149-37CB-B1D2-F66A2510E6DD> /usr/lib/libncurses.5.4.dylib
>     0x7fff8b956000 -     0x7fff8b959fff  libCoreVMClient.dylib (58.1)
> <EBC36C69-C896-3C3D-8589-3E9023E7E56F>
> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
>     0x7fff8bc6a000 -     0x7fff8bcd0fff  com.apple.framework.CoreWiFi
> (2.0 - 200.21.1) <5491896D-78C5-30B6-96E9-D8DDECF3BE73>
> /System/Library/Frameworks/CoreWiFi.framework/Versions/A/CoreWiFi
>     0x7fff8bcd1000 -     0x7fff8bd02fff  com.apple.MediaKit (15 - 709)
> <23E33409-5C39-3F93-9E73-2B0E9EE8883E>
> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit
>     0x7fff8bd03000 -     0x7fff8bd03fff  com.apple.quartzframework (1.5
> - 1.5) <3B2A72DB-39FC-3C5B-98BE-605F37777F37>
> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
>     0x7fff8bd91000 -     0x7fff8bd9bff7  com.apple.AppSandbox (3.0 - 1)
> <9F27DC25-C566-3AEF-92D3-DCFE7836916D>
> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox
>     0x7fff8bdb8000 -     0x7fff8bdc2ff7  com.apple.bsd.ServiceManagement
> (2.0 - 2.0) <2D27B498-BB9C-3D88-B05A-76908A8A26F3>
> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
>     0x7fff8bdc5000 -     0x7fff8be24fff  com.apple.framework.CoreWLAN
> (4.3.3 - 433.48) <1F17FA12-6E84-309D-9808-C536D445FA6E>
> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
>     0x7fff8be25000 -     0x7fff8be26ff7  libsystem_blocks.dylib (63)
> <FB856CD1-2AEA-3907-8E9B-1E54B6827F82>
> /usr/lib/system/libsystem_blocks.dylib
>     0x7fff8be27000 -     0x7fff8bf56fef  com.apple.MediaControlSender
> (2.0 - 200.34.4) <FC24EC8D-2E46-3F76-AF63-749F30857B96>
> /System/Library/PrivateFrameworks/MediaControlSender.framework/Versions/A/MediaControlSender
>     0x7fff8bf79000 -     0x7fff8bfb1ff7  com.apple.RemoteViewServices
> (2.0 - 94) <3F34D630-3DDB-3411-BC28-A56A9B55EBDA>
> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
>     0x7fff8bfb2000 -     0x7fff8c3e5ffb  com.apple.vision.FaceCore
> (3.0.0 - 3.0.0) <F42BFC9C-0B16-35EF-9A07-91B7FDAB7FC5>
> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
>     0x7fff8c87f000 -     0x7fff8c886fff  libcompiler_rt.dylib (35)
> <4CD916B2-1B17-362A-B403-EF24A1DAC141> /usr/lib/system/libcompiler_rt.dylib
>     0x7fff8c8cb000 -     0x7fff8c906fff  com.apple.bom (14.0 - 193.1)
> <EF24A562-6D3C-379E-8B9B-FAE0E4A0EF7C>
> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom
>     0x7fff8d0ea000 -     0x7fff8d13dfff  com.apple.ScalableUserInterface
> (1.0 - 1) <CF745298-7373-38D2-B3B1-727D5A569E48>
> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/ScalableUserInterface.framework/Versions/A/ScalableUserInterface
>     0x7fff8d36a000 -     0x7fff8d36efff  com.apple.CommonPanels (1.2.6 -
> 96) <6B434AFD-50F8-37C7-9A56-162C17E375B3>
> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
>     0x7fff8d36f000 -     0x7fff8d396ff7  libsystem_network.dylib (241.3)
> <8B1E1F1D-A5CC-3BAE-8B1E-ABC84337A364>
> /usr/lib/system/libsystem_network.dylib
>     0x7fff8d397000 -     0x7fff8d3a3ff7  com.apple.HelpData (2.1.4 - 90)
> <BEA1C549-40D3-35BF-9204-CB679FCB0648>
> /System/Library/PrivateFrameworks/HelpData.framework/Versions/A/HelpData
>     0x7fff8d3a4000 -     0x7fff8d3d4fff  com.apple.IconServices (25 -
> 25.17) <4751127E-FBD5-3ED5-8510-08D4E4166EFE>
> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
>     0x7fff8d3d5000 -     0x7fff8d3edff7  com.apple.GenerationalStorage
> (2.0 - 160.3) <64749B08-0212-3AC8-9B49-73D662B09304>
> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
>     0x7fff8d3ee000 -     0x7fff8d41dff9  com.apple.GSS (4.0 - 2.0)
> <44E914BE-B0D0-3E05-9451-CA9E539AFA52>
> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
>     0x7fff8d41e000 -     0x7fff8d4a7ff7  libsystem_c.dylib (997.90.3)
> <6FD3A400-4BB2-3B95-B90C-BE6E9D0D78FA> /usr/lib/system/libsystem_c.dylib
>     0x7fff8d5a6000 -     0x7fff8d5b4fff  com.apple.opengl (9.6.1 -
> 9.6.1) <B22FA400-5824-36AF-9945-5FEC31995A0E>
> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
>     0x7fff8d641000 -     0x7fff8d8a2fff  com.apple.imageKit (2.5 - 774)
> <AACDE16E-ED9F-3B3F-A792-69BA1942753B>
> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
>     0x7fff8d8a3000 -     0x7fff8db37ff7  com.apple.RawCamera.bundle
> (5.06 - 751) <A8B1EEDB-FDCB-3EDC-9728-E3FAA644A499>
> /System/Library/CoreServices/RawCamera.bundle/Contents/MacOS/RawCamera
>     0x7fff8db77000 -     0x7fff8db93ff7  libsystem_kernel.dylib
> (2422.110.17) <873931CE-D1AF-3596-AADB-D2E63C9AB29F>
> /usr/lib/system/libsystem_kernel.dylib
>     0x7fff8db94000 -     0x7fff8dc00fff  com.apple.framework.IOKit
> (2.0.1 - 907.100.13) <057FDBA3-56D6-3903-8C0B-849214BF1985>
> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
>     0x7fff8dc01000 -     0x7fff8dc05ff7  libcache.dylib (62)
> <BDC1E65B-72A1-3DA3-A57C-B23159CAAD0B> /usr/lib/system/libcache.dylib
>     0x7fff8dc06000 -     0x7fff8dcf4fff  libJP2.dylib (1043)
> <C4031D64-6C57-3FB4-9D87-874D387381DB>
> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
>     0x7fff8dcf5000 -     0x7fff8dd1efff  com.apple.DictionaryServices
> (1.2 - 208) <A539A058-BA57-35EE-AA08-D0B0E835127D>
> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
>     0x7fff8dd1f000 -     0x7fff8dd6dff7  com.apple.opencl (2.3.59 -
> 2.3.59) <044485A4-A50C-34CE-A1F9-35A50CC68313>
> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
>
> External Modification Summary:
>   Calls made by other processes targeting this process:
>     task_for_pid: 1
>     thread_create: 0
>     thread_set_state: 0
>   Calls made by this process:
>     task_for_pid: 0
>     thread_create: 0
>     thread_set_state: 0
>   Calls made by all processes on this machine:
>     task_for_pid: 6866
>     thread_create: 0
>     thread_set_state: 0
>
> VM Region Summary:
> ReadOnly portion of Libraries: Total=219.7M resident=75.9M(35%)
> swapped_out_or_unallocated=143.9M(65%)
> Writable regions: Total=1.2G written=35.7M(3%) resident=76.0M(6%)
> swapped_out=0K(0%) unallocated=1.1G(94%)
>
> REGION TYPE                        VIRTUAL
> ===========                        =======
> CG backing stores                    8560K
> CG image                              544K
> CG raster data                        136K
> CG shared images                      212K
> CoreAnimation                        28.2M
> CoreGraphics                            4K
> CoreImage                              72K
> Foundation                              4K
> Image IO                              776K
> JS JIT generated code                   8K
> JS JIT generated code (reserved)      1.0G        reserved VM address
> space (unallocated)
> JS VM register file (reserved)       4096K        reserved VM address
> space (unallocated)
> JS garbage collector                  256K
> Kernel Alloc Once                       8K
> MALLOC                               93.1M
> MALLOC (admin)                         32K
> Memory Tag 242                         12K
> Memory Tag 251                         28K
> OpenCL                                 48K
> SQLite page cache                     256K
> STACK GUARD                          56.0M
> Stack                                13.1M
> VM_ALLOCATE                          16.5M
> WebKit Malloc                        2304K
> __DATA                               28.3M
> __IMAGE                               528K
> __LINKEDIT                           67.9M
> __TEXT                              151.8M
> __UNICODE                             544K
> mapped file                          53.6M
> shared memory                           4K
> ===========                        =======
> TOTAL                                 1.5G
> TOTAL, minus reserved VM space      522.7M
>
>
> Model: MacBookAir6,2, BootROM MBA61.0099.B12, 2 processors, Intel Core
> i7, 1.7 GHz, 8 GB, SMC 2.13f9
> Graphics: Intel HD Graphics 5000, Intel HD Graphics 5000, Built-In
> Memory Module: BANK 0/DIMM0, 4 GB, DDR3, 1600 MHz, 0x02FE, -
> Memory Module: BANK 1/DIMM0, 4 GB, DDR3, 1600 MHz, 0x02FE, -
> AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x117),
> Broadcom BCM43xx 1.0 (6.30.223.154.65)
> Bluetooth: Version 4.2.6f1 14216, 3 services, 23 devices, 1 incoming
> serial ports
> Network Service: AirPort, AirPort, en0
> Serial ATA Device: APPLE SSD SM0512F, 500.28 GB
> USB Device: Internal Memory Card Reader
> USB Device: BRCM20702 Hub
> USB Device: Bluetooth USB Host Controller
> Thunderbolt Bus: MacBook Air, Apple Inc., 23.6
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From pdalgd at gmail.com  Sat Aug 30 21:57:01 2014
From: pdalgd at gmail.com (peter dalgaard)
Date: Sat, 30 Aug 2014 21:57:01 +0200
Subject: [R-SIG-Mac] Bug in R.app code editor
In-Reply-To: <CAG2OMvvrmLDKL3NsazwiTf_n+egAsXk+qhD1FHg-aEg+_wjnEg@mail.gmail.com>
References: <5402203C.60508@gmail.com>
	<CAG2OMvvrmLDKL3NsazwiTf_n+egAsXk+qhD1FHg-aEg+_wjnEg@mail.gmail.com>
Message-ID: <FBEE70AB-58C3-4755-BA29-AA237991816A@gmail.com>

I see it, but as a hang, not a crash.

-pd

On 30 Aug 2014, at 21:38 , Brandon Hurr <bhive01 at gmail.com> wrote:

> Duncan
> 
> I could not replicate on my air, but I'm running Yosemite beta 2 and
> copied from Chrome 38.0.2125.24 beta (64-bit).

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


