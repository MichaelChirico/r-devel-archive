From chris at ckblack.org  Thu May  5 20:43:38 2016
From: chris at ckblack.org (Chris Black)
Date: Thu, 5 May 2016 13:43:38 -0500
Subject: [R-SIG-Mac] Intermittent plotting failures on new Quartz window
Message-ID: <6DDA89CF-4B13-4CBE-B12C-3EB1C4458328@ckblack.org>

Hi, all. I?m getting some puzzling, intermittent plot failures that seem to occur only when I?m in an interactive session, arranging plots with very different drawing speeds, and only when Quartz needs to open a new window before plotting. 

I posted a longer version of this at https://gist.github.com/infotroph/c68fc7a3f8594473361f87e2a348ddf9, but here?s a minimal example:

set.seed(34565)
library(ggplot2)
library(gridExtra)
library(grid)

p1 = ggplot(diamonds, aes(x, price))+geom_point() 
p2 = ggplot(mtcars, aes(wt, mpg))+geom_point()

graphics.off()
pp=arrangeGrob(p1, p2)
grid.draw(pp)

Expected result: New graphics window containing a two-panel plot with diamonds on the top and cars on the bottom.
Observed result: Usually (~80% of the time?), a new graphics window with the top panel incompletely drawn (usually just axes with no points or panel grid), and the bottom panel as expected. Rarely (~20%?), the complete plot as expected. 

I can modulate the success rate somewhat by putting different lengths of Sys.sleep() in between the arrangeGrob and grid.draw calls, and I can guarantee success by calling dev.new() before arrangeGrob. See the above-linked Gist for details and for session info from a few other folks ? thus far only the Quartz users can reproduce it, hence my starting with this list. 

Session info:

R for 3.2.4 GUI 1.67 Mavericks build (7152)
R version 3.2.4 (2016-03-10)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.11.3 (El Capitan)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] grid      stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] gridExtra_2.2.1 ggplot2_2.1.0  

loaded via a namespace (and not attached):
[1] labeling_0.3     colorspace_1.2-6 scales_0.4.0     plyr_1.8.3      
[5] tools_3.2.4      gtable_0.2.0     Rcpp_0.12.4      munsell_0.4.3   

From charles.dimaggio at gmail.com  Fri May  6 00:16:17 2016
From: charles.dimaggio at gmail.com (Charles DiMaggio)
Date: Thu, 5 May 2016 18:16:17 -0400
Subject: [R-SIG-Mac] R 3.2.2 Hangs Reading Files in El Capitan [Solved]
Message-ID: <FCE03872-D0EB-46C7-81F1-8C7E641BD5B6@gmail.com>

Been a while, but wanted to close the page on a previous post describing R hanging on readRDS() and load() for largish (say 500MB or larger) files. Tried again with recent release (3.3.0).  Am able to read in large files under El Cap.  While the file is reading in, I get a disconcerting spinning pinwheel of death and a check under Force Quit reports R is not responding.  But if I wait it out, it eventually reads in.  Odd.  But I can live with it.

Cheers

Charles






Charles DiMaggio, PhD, MPH
Professor of Surgery and Population Health
Director of Injury Research
Department of Surgery
New York University School of Medicine
462 First Avenue, NBV 15
New York, NY 10016-9196
Charles.Dimaggio at nyumc.org
Office: 212.263.3202
Mobile: 516.308.6426 






	[[alternative HTML version deleted]]


From bhive01 at gmail.com  Fri May  6 00:49:41 2016
From: bhive01 at gmail.com (Brandon Hurr)
Date: Thu, 5 May 2016 15:49:41 -0700
Subject: [R-SIG-Mac] R 3.2.2 Hangs Reading Files in El Capitan [Solved]
In-Reply-To: <FCE03872-D0EB-46C7-81F1-8C7E641BD5B6@gmail.com>
References: <FCE03872-D0EB-46C7-81F1-8C7E641BD5B6@gmail.com>
Message-ID: <CAG2OMvtj9S=LmwEsus1-gfZqRcwBvKdeZhZbm11-=NY+=oGQ_A@mail.gmail.com>

You might be interested in the speed wars that are happening in the
file reading/writing space currently.

Matt Dowle/Arun Srinivasan's data.table and Hadley Wickham/Wes
McKinney's Feather have made huge speed advances in reading/writing
large datasets from disks (mostly csv).

Data Table fread()/fwrite():
https://github.com/Rdatatable/data.table
https://stackoverflow.com/questions/35763574/fastest-way-to-read-in-100-000-dat-gz-files
http://blog.h2o.ai/2016/04/fast-csv-writing-for-r/


Feather read_feather()/write_feather()
https://github.com/wesm/feather

I don't often have big datasets (10s of MBs) so I don't see the
benefits of these much, but you might.

HTH,
B

On Thu, May 5, 2016 at 3:16 PM, Charles DiMaggio
<charles.dimaggio at gmail.com> wrote:
> Been a while, but wanted to close the page on a previous post describing R hanging on readRDS() and load() for largish (say 500MB or larger) files. Tried again with recent release (3.3.0).  Am able to read in large files under El Cap.  While the file is reading in, I get a disconcerting spinning pinwheel of death and a check under Force Quit reports R is not responding.  But if I wait it out, it eventually reads in.  Odd.  But I can live with it.
>
> Cheers
>
> Charles
>
>
>
>
>
>
> Charles DiMaggio, PhD, MPH
> Professor of Surgery and Population Health
> Director of Injury Research
> Department of Surgery
> New York University School of Medicine
> 462 First Avenue, NBV 15
> New York, NY 10016-9196
> Charles.Dimaggio at nyumc.org
> Office: 212.263.3202
> Mobile: 516.308.6426
>
>
>
>
>
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From simon.urbanek at r-project.org  Fri May  6 15:07:21 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 6 May 2016 09:07:21 -0400
Subject: [R-SIG-Mac] R 3.2.2 Hangs Reading Files in El Capitan [Solved]
In-Reply-To: <CAG2OMvtj9S=LmwEsus1-gfZqRcwBvKdeZhZbm11-=NY+=oGQ_A@mail.gmail.com>
References: <FCE03872-D0EB-46C7-81F1-8C7E641BD5B6@gmail.com>
	<CAG2OMvtj9S=LmwEsus1-gfZqRcwBvKdeZhZbm11-=NY+=oGQ_A@mail.gmail.com>
Message-ID: <80C1A71D-6C7D-44C3-B2CA-73CFE6A487A1@r-project.org>

Brandon,
note that the post was about RDS which is more efficient than all the options you list (in particular when not compressed). General advice is to avoid strings. Numeric vectors are several orders of magnitude faster than strings to load/save.
Cheers,
Simon


> On May 5, 2016, at 6:49 PM, Brandon Hurr <bhive01 at gmail.com> wrote:
> 
> You might be interested in the speed wars that are happening in the
> file reading/writing space currently.
> 
> Matt Dowle/Arun Srinivasan's data.table and Hadley Wickham/Wes
> McKinney's Feather have made huge speed advances in reading/writing
> large datasets from disks (mostly csv).
> 
> Data Table fread()/fwrite():
> https://github.com/Rdatatable/data.table
> https://stackoverflow.com/questions/35763574/fastest-way-to-read-in-100-000-dat-gz-files
> http://blog.h2o.ai/2016/04/fast-csv-writing-for-r/
> 
> 
> Feather read_feather()/write_feather()
> https://github.com/wesm/feather
> 
> I don't often have big datasets (10s of MBs) so I don't see the
> benefits of these much, but you might.
> 
> HTH,
> B
> 
> On Thu, May 5, 2016 at 3:16 PM, Charles DiMaggio
> <charles.dimaggio at gmail.com> wrote:
>> Been a while, but wanted to close the page on a previous post describing R hanging on readRDS() and load() for largish (say 500MB or larger) files. Tried again with recent release (3.3.0).  Am able to read in large files under El Cap.  While the file is reading in, I get a disconcerting spinning pinwheel of death and a check under Force Quit reports R is not responding.  But if I wait it out, it eventually reads in.  Odd.  But I can live with it.
>> 
>> Cheers
>> 
>> Charles
>> 
>> 
>> 
>> 
>> 
>> 
>> Charles DiMaggio, PhD, MPH
>> Professor of Surgery and Population Health
>> Director of Injury Research
>> Department of Surgery
>> New York University School of Medicine
>> 462 First Avenue, NBV 15
>> New York, NY 10016-9196
>> Charles.Dimaggio at nyumc.org
>> Office: 212.263.3202
>> Mobile: 516.308.6426
>> 
>> 
>> 
>> 
>> 
>> 
>>        [[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From bhive01 at gmail.com  Sat May  7 00:03:46 2016
From: bhive01 at gmail.com (Brandon Hurr)
Date: Fri, 6 May 2016 15:03:46 -0700
Subject: [R-SIG-Mac] R 3.2.2 Hangs Reading Files in El Capitan [Solved]
In-Reply-To: <80C1A71D-6C7D-44C3-B2CA-73CFE6A487A1@r-project.org>
References: <FCE03872-D0EB-46C7-81F1-8C7E641BD5B6@gmail.com>
	<CAG2OMvtj9S=LmwEsus1-gfZqRcwBvKdeZhZbm11-=NY+=oGQ_A@mail.gmail.com>
	<80C1A71D-6C7D-44C3-B2CA-73CFE6A487A1@r-project.org>
Message-ID: <CAG2OMvunw14Yu97P4=aDb6uftRjtjEqY7ZZO80B3V5jYeyNebQ@mail.gmail.com>

Simon,

Absolutely was about RDS, but R is all about choices and the
underlying issue was time to read in data which fread and feather are
quite fast at. I assume when you say efficient you are referring to
disk space?

I put together a script to look at this further with and without
compression*. If speed is a priority over disk space then Feather and
data.table (CSV) are good options**. CSV is portable to any system and
feather can be used by python/Julia. RDS/RDA saves a lot of space and,
but are slower to write and read due to compression.

I hope that's helpful to those thinking about their priorities for
file IO in R.

Brandon

* http://rpubs.com/bhive01/fileioinr
**  writing a CSV with data.table is freaky fast if you can get OpenMP
working on your machine
https://github.com/Rdatatable/data.table/issues/1692 Reading that same
CSV is comparable to RDS.


On Fri, May 6, 2016 at 6:07 AM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
> Brandon,
> note that the post was about RDS which is more efficient than all the options you list (in particular when not compressed). General advice is to avoid strings. Numeric vectors are several orders of magnitude faster than strings to load/save.
> Cheers,
> Simon
>
>
>> On May 5, 2016, at 6:49 PM, Brandon Hurr <bhive01 at gmail.com> wrote:
>>
>> You might be interested in the speed wars that are happening in the
>> file reading/writing space currently.
>>
>> Matt Dowle/Arun Srinivasan's data.table and Hadley Wickham/Wes
>> McKinney's Feather have made huge speed advances in reading/writing
>> large datasets from disks (mostly csv).
>>
>> Data Table fread()/fwrite():
>> https://github.com/Rdatatable/data.table
>> https://stackoverflow.com/questions/35763574/fastest-way-to-read-in-100-000-dat-gz-files
>> http://blog.h2o.ai/2016/04/fast-csv-writing-for-r/
>>
>>
>> Feather read_feather()/write_feather()
>> https://github.com/wesm/feather
>>
>> I don't often have big datasets (10s of MBs) so I don't see the
>> benefits of these much, but you might.
>>
>> HTH,
>> B
>>
>> On Thu, May 5, 2016 at 3:16 PM, Charles DiMaggio
>> <charles.dimaggio at gmail.com> wrote:
>>> Been a while, but wanted to close the page on a previous post describing R hanging on readRDS() and load() for largish (say 500MB or larger) files. Tried again with recent release (3.3.0).  Am able to read in large files under El Cap.  While the file is reading in, I get a disconcerting spinning pinwheel of death and a check under Force Quit reports R is not responding.  But if I wait it out, it eventually reads in.  Odd.  But I can live with it.
>>>
>>> Cheers
>>>
>>> Charles
>>>
>>>
>>>
>>>
>>>
>>>
>>> Charles DiMaggio, PhD, MPH
>>> Professor of Surgery and Population Health
>>> Director of Injury Research
>>> Department of Surgery
>>> New York University School of Medicine
>>> 462 First Avenue, NBV 15
>>> New York, NY 10016-9196
>>> Charles.Dimaggio at nyumc.org
>>> Office: 212.263.3202
>>> Mobile: 516.308.6426
>>>
>>>
>>>
>>>
>>>
>>>
>>>        [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>


From simon.urbanek at r-project.org  Sat May  7 03:01:47 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 6 May 2016 21:01:47 -0400
Subject: [R-SIG-Mac] R 3.2.2 Hangs Reading Files in El Capitan [Solved]
In-Reply-To: <CAG2OMvunw14Yu97P4=aDb6uftRjtjEqY7ZZO80B3V5jYeyNebQ@mail.gmail.com>
References: <FCE03872-D0EB-46C7-81F1-8C7E641BD5B6@gmail.com>
	<CAG2OMvtj9S=LmwEsus1-gfZqRcwBvKdeZhZbm11-=NY+=oGQ_A@mail.gmail.com>
	<80C1A71D-6C7D-44C3-B2CA-73CFE6A487A1@r-project.org>
	<CAG2OMvunw14Yu97P4=aDb6uftRjtjEqY7ZZO80B3V5jYeyNebQ@mail.gmail.com>
Message-ID: <CF7229DA-C268-4C68-A82A-85A04B3550C0@r-project.org>


On May 6, 2016, at 6:03 PM, Brandon Hurr <bhive01 at gmail.com> wrote:

> Simon,
> 
> Absolutely was about RDS, but R is all about choices and the
> underlying issue was time to read in data which fread and feather are
> quite fast at. I assume when you say efficient you are referring to
> disk space?
> 

No, parsing data is always slower than native formats. Really fastest is readBin (and similar direct I/O approaches), followed by feather and RDS (the only reason RDS is not the fastest is that there is an extra copy in-memory) -- unless you have slow disk, of course.


> I put together a script to look at this further with and without
> compression*. If speed is a priority over disk space then Feather and
> data.table (CSV) are good options**. CSV is portable to any system and
> feather can be used by python/Julia. RDS/RDA saves a lot of space and,
> but are slower to write and read due to compression.
> 

That's why I said uncompressed RDS [compress=FALSE] - you compress only if you want to save space, not speed :).

FWIW according to our benchmarks iotools is the fastest for reading CSV if you want to get into that arena, but that's whole another story - my point was that the question was NOT about CSV or anything parsed - and neither about writing - which is why this is getting really OT.

Cheers,
Simon



> I hope that's helpful to those thinking about their priorities for
> file IO in R.
> 
> Brandon
> 
> * http://rpubs.com/bhive01/fileioinr
> **  writing a CSV with data.table is freaky fast if you can get OpenMP
> working on your machine
> https://github.com/Rdatatable/data.table/issues/1692 Reading that same
> CSV is comparable to RDS.
> 
> 
> On Fri, May 6, 2016 at 6:07 AM, Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>> Brandon,
>> note that the post was about RDS which is more efficient than all the options you list (in particular when not compressed). General advice is to avoid strings. Numeric vectors are several orders of magnitude faster than strings to load/save.
>> Cheers,
>> Simon
>> 
>> 
>>> On May 5, 2016, at 6:49 PM, Brandon Hurr <bhive01 at gmail.com> wrote:
>>> 
>>> You might be interested in the speed wars that are happening in the
>>> file reading/writing space currently.
>>> 
>>> Matt Dowle/Arun Srinivasan's data.table and Hadley Wickham/Wes
>>> McKinney's Feather have made huge speed advances in reading/writing
>>> large datasets from disks (mostly csv).
>>> 
>>> Data Table fread()/fwrite():
>>> https://github.com/Rdatatable/data.table
>>> https://stackoverflow.com/questions/35763574/fastest-way-to-read-in-100-000-dat-gz-files
>>> http://blog.h2o.ai/2016/04/fast-csv-writing-for-r/
>>> 
>>> 
>>> Feather read_feather()/write_feather()
>>> https://github.com/wesm/feather
>>> 
>>> I don't often have big datasets (10s of MBs) so I don't see the
>>> benefits of these much, but you might.
>>> 
>>> HTH,
>>> B
>>> 
>>> On Thu, May 5, 2016 at 3:16 PM, Charles DiMaggio
>>> <charles.dimaggio at gmail.com> wrote:
>>>> Been a while, but wanted to close the page on a previous post describing R hanging on readRDS() and load() for largish (say 500MB or larger) files. Tried again with recent release (3.3.0).  Am able to read in large files under El Cap.  While the file is reading in, I get a disconcerting spinning pinwheel of death and a check under Force Quit reports R is not responding.  But if I wait it out, it eventually reads in.  Odd.  But I can live with it.
>>>> 
>>>> Cheers
>>>> 
>>>> Charles
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> Charles DiMaggio, PhD, MPH
>>>> Professor of Surgery and Population Health
>>>> Director of Injury Research
>>>> Department of Surgery
>>>> New York University School of Medicine
>>>> 462 First Avenue, NBV 15
>>>> New York, NY 10016-9196
>>>> Charles.Dimaggio at nyumc.org
>>>> Office: 212.263.3202
>>>> Mobile: 516.308.6426
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>>       [[alternative HTML version deleted]]
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>> 
> 


From charles.dimaggio at gmail.com  Sat May  7 15:59:16 2016
From: charles.dimaggio at gmail.com (Charles DiMaggio)
Date: Sat, 7 May 2016 09:59:16 -0400
Subject: [R-SIG-Mac] R 3.2.2 Hangs Reading Files in El Capitan [Solved]
In-Reply-To: <CF7229DA-C268-4C68-A82A-85A04B3550C0@r-project.org>
References: <FCE03872-D0EB-46C7-81F1-8C7E641BD5B6@gmail.com>
	<CAG2OMvtj9S=LmwEsus1-gfZqRcwBvKdeZhZbm11-=NY+=oGQ_A@mail.gmail.com>
	<80C1A71D-6C7D-44C3-B2CA-73CFE6A487A1@r-project.org>
	<CAG2OMvunw14Yu97P4=aDb6uftRjtjEqY7ZZO80B3V5jYeyNebQ@mail.gmail.com>
	<CF7229DA-C268-4C68-A82A-85A04B3550C0@r-project.org>
Message-ID: <AA53AC4F-5C25-48A9-A730-AA806BBC5525@gmail.com>

Glad the post elicited some discussion.  Haven?t played with feather.  I?ve used data.table and it is indeed appreciably faster than base approaches for getting big csv?s into R.  I also find dplyr (with say MonetDB) to be a solution for out-of-memory approaches to large data sets. But, for native R files, I?ve found RDS to be fastest.  


Cheers

Charles






On May 6, 2016, at 9:01 PM, Simon Urbanek <simon.urbanek at r-project.org> wrote:

> 
> On May 6, 2016, at 6:03 PM, Brandon Hurr <bhive01 at gmail.com> wrote:
> 
>> Simon,
>> 
>> Absolutely was about RDS, but R is all about choices and the
>> underlying issue was time to read in data which fread and feather are
>> quite fast at. I assume when you say efficient you are referring to
>> disk space?
>> 
> 
> No, parsing data is always slower than native formats. Really fastest is readBin (and similar direct I/O approaches), followed by feather and RDS (the only reason RDS is not the fastest is that there is an extra copy in-memory) -- unless you have slow disk, of course.
> 
> 
>> I put together a script to look at this further with and without
>> compression*. If speed is a priority over disk space then Feather and
>> data.table (CSV) are good options**. CSV is portable to any system and
>> feather can be used by python/Julia. RDS/RDA saves a lot of space and,
>> but are slower to write and read due to compression.
>> 
> 
> That's why I said uncompressed RDS [compress=FALSE] - you compress only if you want to save space, not speed :).
> 
> FWIW according to our benchmarks iotools is the fastest for reading CSV if you want to get into that arena, but that's whole another story - my point was that the question was NOT about CSV or anything parsed - and neither about writing - which is why this is getting really OT.
> 
> Cheers,
> Simon
> 
> 
> 
>> I hope that's helpful to those thinking about their priorities for
>> file IO in R.
>> 
>> Brandon
>> 
>> * http://rpubs.com/bhive01/fileioinr
>> **  writing a CSV with data.table is freaky fast if you can get OpenMP
>> working on your machine
>> https://github.com/Rdatatable/data.table/issues/1692 Reading that same
>> CSV is comparable to RDS.
>> 
>> 
>> On Fri, May 6, 2016 at 6:07 AM, Simon Urbanek
>> <simon.urbanek at r-project.org> wrote:
>>> Brandon,
>>> note that the post was about RDS which is more efficient than all the options you list (in particular when not compressed). General advice is to avoid strings. Numeric vectors are several orders of magnitude faster than strings to load/save.
>>> Cheers,
>>> Simon
>>> 
>>> 
>>>> On May 5, 2016, at 6:49 PM, Brandon Hurr <bhive01 at gmail.com> wrote:
>>>> 
>>>> You might be interested in the speed wars that are happening in the
>>>> file reading/writing space currently.
>>>> 
>>>> Matt Dowle/Arun Srinivasan's data.table and Hadley Wickham/Wes
>>>> McKinney's Feather have made huge speed advances in reading/writing
>>>> large datasets from disks (mostly csv).
>>>> 
>>>> Data Table fread()/fwrite():
>>>> https://github.com/Rdatatable/data.table
>>>> https://stackoverflow.com/questions/35763574/fastest-way-to-read-in-100-000-dat-gz-files
>>>> http://blog.h2o.ai/2016/04/fast-csv-writing-for-r/
>>>> 
>>>> 
>>>> Feather read_feather()/write_feather()
>>>> https://github.com/wesm/feather
>>>> 
>>>> I don't often have big datasets (10s of MBs) so I don't see the
>>>> benefits of these much, but you might.
>>>> 
>>>> HTH,
>>>> B
>>>> 
>>>> On Thu, May 5, 2016 at 3:16 PM, Charles DiMaggio
>>>> <charles.dimaggio at gmail.com> wrote:
>>>>> Been a while, but wanted to close the page on a previous post describing R hanging on readRDS() and load() for largish (say 500MB or larger) files. Tried again with recent release (3.3.0).  Am able to read in large files under El Cap.  While the file is reading in, I get a disconcerting spinning pinwheel of death and a check under Force Quit reports R is not responding.  But if I wait it out, it eventually reads in.  Odd.  But I can live with it.
>>>>> 
>>>>> Cheers
>>>>> 
>>>>> Charles
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> Charles DiMaggio, PhD, MPH
>>>>> Professor of Surgery and Population Health
>>>>> Director of Injury Research
>>>>> Department of Surgery
>>>>> New York University School of Medicine
>>>>> 462 First Avenue, NBV 15
>>>>> New York, NY 10016-9196
>>>>> Charles.Dimaggio at nyumc.org
>>>>> Office: 212.263.3202
>>>>> Mobile: 516.308.6426
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>>      [[alternative HTML version deleted]]
>>>>> 
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>> 
>> 
> 


	[[alternative HTML version deleted]]


From mick.jordan at oracle.com  Mon May  9 20:50:18 2016
From: mick.jordan at oracle.com (Mick Jordan)
Date: Mon, 9 May 2016 11:50:18 -0700
Subject: [R-SIG-Mac] third party installer
Message-ID: <5730DBEA.8060903@oracle.com>

What third party installer is used for the standard Mac OS X build? 
Looking at the following I can't figure out where lzma is coming from. I 
am using MacPorts (on El Cap) which puts lzma in /opt/local/include.

Mick Jordan

$ head /Library/Frameworks/R.framework/Resources/etc/Makeconf
# etc/Makeconf.  Generated from Makeconf.in by configure.
#
# ${R_HOME}/etc/Makeconf
#
# R was configured using the following call
# (not including env. vars and site configuration)
# configure  'CC=clang' 'CXX=clang++' 'OBJC=clang' 'F77=gfortran-4.8' 'FC=gfortran-4.8' 'CFLAGS=-Wall -mtune=core2 -g -O2' 'CXXFLAGS=-Wall -mtune=core2 -g -O2' 'OBJCFLAGS=-Wall -mtune=core2 -g -O2' 'FCFLAGS=-Wall -g -O2' 'F77FLAGS=-Wall -g -O2' '--with-system-zlib' '--enable-memory-profiling' 'CPPFLAGS=-I/usr/local/include -I/usr/local/include/freetype2 -I/opt/X11/include' '--x-libraries=/opt/X11/lib' '--x-includes=/usr/local/include' '--enable-R-framework'


From simon.urbanek at r-project.org  Mon May  9 22:04:33 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 9 May 2016 16:04:33 -0400
Subject: [R-SIG-Mac] third party installer
In-Reply-To: <5730DBEA.8060903@oracle.com>
References: <5730DBEA.8060903@oracle.com>
Message-ID: <D76CB12C-0098-4608-A081-711AE098F69A@r-project.org>


On May 9, 2016, at 2:50 PM, Mick Jordan <mick.jordan at oracle.com> wrote:

> What third party installer is used for the standard Mac OS X build? Looking at the following I can't figure out where lzma is coming from. I am using MacPorts (on El Cap) which puts lzma in /opt/local/include.
> 


No 3rd party, only static libs used on CRAN, i.e., what is in
http://r.research.att.com/libs/

Cheers,
Simon


> Mick Jordan
> 
> $ head /Library/Frameworks/R.framework/Resources/etc/Makeconf
> # etc/Makeconf.  Generated from Makeconf.in by configure.
> #
> # ${R_HOME}/etc/Makeconf
> #
> # R was configured using the following call
> # (not including env. vars and site configuration)
> # configure  'CC=clang' 'CXX=clang++' 'OBJC=clang' 'F77=gfortran-4.8' 'FC=gfortran-4.8' 'CFLAGS=-Wall -mtune=core2 -g -O2' 'CXXFLAGS=-Wall -mtune=core2 -g -O2' 'OBJCFLAGS=-Wall -mtune=core2 -g -O2' 'FCFLAGS=-Wall -g -O2' 'F77FLAGS=-Wall -g -O2' '--with-system-zlib' '--enable-memory-profiling' 'CPPFLAGS=-I/usr/local/include -I/usr/local/include/freetype2 -I/opt/X11/include' '--x-libraries=/opt/X11/lib' '--x-includes=/usr/local/include' '--enable-R-framework'
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From dwinsemius at comcast.net  Mon May  9 22:19:37 2016
From: dwinsemius at comcast.net (David Winsemius)
Date: Mon, 9 May 2016 13:19:37 -0700
Subject: [R-SIG-Mac] third party installer
In-Reply-To: <D76CB12C-0098-4608-A081-711AE098F69A@r-project.org>
References: <5730DBEA.8060903@oracle.com>
	<D76CB12C-0098-4608-A081-711AE098F69A@r-project.org>
Message-ID: <BBB4234C-12F3-432B-83B5-0A640179E0B2@comcast.net>


> On May 9, 2016, at 1:04 PM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> 
> On May 9, 2016, at 2:50 PM, Mick Jordan <mick.jordan at oracle.com> wrote:
> 
>> What third party installer is used for the standard Mac OS X build? Looking at the following I can't figure out where lzma is coming from. I am using MacPorts (on El Cap) which puts lzma in /opt/local/include.
>> 
> 
> 
> No 3rd party, only static libs used on CRAN, i.e., what is in
> http://r.research.att.com/libs/

It wasn't obvious where lzma was being derived in any of those sources, so I made my best efforts and decided it was probably from xz-5.2.1.tar.bz2

Was my searching correct?

-- 
David.

> 
> Cheers,
> Simon
> 
> 
>> Mick Jordan
>> 
>> $ head /Library/Frameworks/R.framework/Resources/etc/Makeconf
>> # etc/Makeconf.  Generated from Makeconf.in by configure.
>> #
>> # ${R_HOME}/etc/Makeconf
>> #
>> # R was configured using the following call
>> # (not including env. vars and site configuration)
>> # configure  'CC=clang' 'CXX=clang++' 'OBJC=clang' 'F77=gfortran-4.8' 'FC=gfortran-4.8' 'CFLAGS=-Wall -mtune=core2 -g -O2' 'CXXFLAGS=-Wall -mtune=core2 -g -O2' 'OBJCFLAGS=-Wall -mtune=core2 -g -O2' 'FCFLAGS=-Wall -g -O2' 'F77FLAGS=-Wall -g -O2' '--with-system-zlib' '--enable-memory-profiling' 'CPPFLAGS=-I/usr/local/include -I/usr/local/include/freetype2 -I/opt/X11/include' '--x-libraries=/opt/X11/lib' '--x-includes=/usr/local/include' '--enable-R-framework'
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

David Winsemius
Alameda, CA, USA


From dwinsemius at comcast.net  Mon May  9 23:08:26 2016
From: dwinsemius at comcast.net (David Winsemius)
Date: Mon, 9 May 2016 14:08:26 -0700
Subject: [R-SIG-Mac] third party installer
In-Reply-To: <BBB4234C-12F3-432B-83B5-0A640179E0B2@comcast.net>
References: <5730DBEA.8060903@oracle.com>
	<D76CB12C-0098-4608-A081-711AE098F69A@r-project.org>
	<BBB4234C-12F3-432B-83B5-0A640179E0B2@comcast.net>
Message-ID: <9A2A7071-6128-4AD5-9F05-786C395DE382@comcast.net>


> On May 9, 2016, at 1:19 PM, David Winsemius <dwinsemius at comcast.net> wrote:
> 
> 
>> On May 9, 2016, at 1:04 PM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> 
>> 
>> On May 9, 2016, at 2:50 PM, Mick Jordan <mick.jordan at oracle.com> wrote:
>> 
>>> What third party installer is used for the standard Mac OS X build? Looking at the following I can't figure out where lzma is coming from. I am using MacPorts (on El Cap) which puts lzma in /opt/local/include.
>>> 
>> 
>> 
>> No 3rd party, only static libs used on CRAN, i.e., what is in
>> http://r.research.att.com/libs/
> 
> It wasn't obvious where lzma was being derived in any of those sources, so I made my best efforts and decided it was probably from xz-5.2.1.tar.bz2
> 
> Was my searching correct?
> 

As a followup can anyone suggest how I should  address (or whether I should even worry about) the error reported when I follow the installation advice for that package on that page:

$ curl -O http://r.research.att.com/libs/xz-5.2.1-darwin.13-x86_64.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  617k  100  617k    0     0   352k      0  0:00:01  0:00:01 --:--:--  352k
david-winsemiuss-mac-pro:~ davidwinsemius$ sudo tar fvxz xz-5.2.1-darwin.13-x86_64.tar.gz -C /
Password:
x usr/: Can't set user=0/group=0 for usrCan't update time for usr
x usr/local/
x usr/local/bin/
x usr/local/include/
x usr/local/lib/
x usr/local/share/
x usr/local/share/doc/
x usr/local/share/man/
x usr/local/share/man/man1/
x usr/local/share/man/man1/lzcat.1
x usr/local/share/man/man1/lzcmp.1
x usr/local/share/man/man1/lzdiff.1
x usr/local/share/man/man1/lzegrep.1
x usr/local/share/man/man1/lzfgrep.1
x usr/local/share/man/man1/lzgrep.1
x usr/local/share/man/man1/lzless.1
x usr/local/share/man/man1/lzma.1
x usr/local/share/man/man1/lzmadec.1
x usr/local/share/man/man1/lzmainfo.1
x usr/local/share/man/man1/lzmore.1
x usr/local/share/man/man1/unlzma.1
x usr/local/share/man/man1/unxz.1
x usr/local/share/man/man1/xz.1
x usr/local/share/man/man1/xzcat.1
x usr/local/share/man/man1/xzcmp.1
x usr/local/share/man/man1/xzdec.1
x usr/local/share/man/man1/xzdiff.1
x usr/local/share/man/man1/xzegrep.1
x usr/local/share/man/man1/xzfgrep.1
x usr/local/share/man/man1/xzgrep.1
x usr/local/share/man/man1/xzless.1
x usr/local/share/man/man1/xzmore.1
x usr/local/share/doc/xz/
x usr/local/share/doc/xz/AUTHORS
x usr/local/share/doc/xz/COPYING
x usr/local/share/doc/xz/COPYING.GPLv2
x usr/local/share/doc/xz/examples/
x usr/local/share/doc/xz/examples_old/
x usr/local/share/doc/xz/faq.txt
x usr/local/share/doc/xz/history.txt
x usr/local/share/doc/xz/lzma-file-format.txt
x usr/local/share/doc/xz/NEWS
x usr/local/share/doc/xz/README
x usr/local/share/doc/xz/THANKS
x usr/local/share/doc/xz/TODO
x usr/local/share/doc/xz/xz-file-format.txt
x usr/local/share/doc/xz/examples_old/xz_pipe_comp.c
x usr/local/share/doc/xz/examples_old/xz_pipe_decomp.c
x usr/local/share/doc/xz/examples/00_README.txt
x usr/local/share/doc/xz/examples/01_compress_easy.c
x usr/local/share/doc/xz/examples/02_decompress.c
x usr/local/share/doc/xz/examples/03_compress_custom.c
x usr/local/share/doc/xz/examples/04_compress_easy_mt.c
x usr/local/share/doc/xz/examples/Makefile
x usr/local/lib/liblzma.a
x usr/local/lib/liblzma.la
x usr/local/lib/pkgconfig/
x usr/local/lib/pkgconfig/liblzma.pc
x usr/local/include/lzma/
x usr/local/include/lzma.h
x usr/local/include/lzma/base.h
x usr/local/include/lzma/bcj.h
x usr/local/include/lzma/block.h
x usr/local/include/lzma/check.h
x usr/local/include/lzma/container.h
x usr/local/include/lzma/delta.h
x usr/local/include/lzma/filter.h
x usr/local/include/lzma/hardware.h
x usr/local/include/lzma/index.h
x usr/local/include/lzma/index_hash.h
x usr/local/include/lzma/lzma12.h
x usr/local/include/lzma/stream_flags.h
x usr/local/include/lzma/version.h
x usr/local/include/lzma/vli.h
x usr/local/bin/lzcat
x usr/local/bin/lzcmp
x usr/local/bin/lzdiff
x usr/local/bin/lzegrep
x usr/local/bin/lzfgrep
x usr/local/bin/lzgrep
x usr/local/bin/lzless
x usr/local/bin/lzma
x usr/local/bin/lzmadec
x usr/local/bin/lzmainfo
x usr/local/bin/lzmore
x usr/local/bin/unlzma
x usr/local/bin/unxz
x usr/local/bin/xz
x usr/local/bin/xzcat
x usr/local/bin/xzcmp
x usr/local/bin/xzdec
x usr/local/bin/xzdiff
x usr/local/bin/xzegrep
x usr/local/bin/xzfgrep
x usr/local/bin/xzgrep
x usr/local/bin/xzless
x usr/local/bin/xzmore
tar: Error exit delayed from previous errors.

System Version:	OS X 10.11.4 (15E65)
  Kernel Version:	Darwin 15.4.0

Model Name:	Mac Pro
  Model Identifier:	MacPro3,1
  Processor Name:	Quad-Core Intel Xeon
  Processor Speed:	2.8 GHz
  Number of Processors:	2
  Total Number of Cores:	8
  L2 Cache (per Processor):	12 MB
  Memory:	32 GB

(This is probably not really necessary from a current R session;)
R version 3.3.0 RC (2016-05-01 r70572) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

--snipped a bunch of pkg loading information

[R.app GUI 1.68 (7201) x86_64-apple-darwin13.4.0]

-- 
David.

> -- 
> David.
> 
>> 
>> Cheers,
>> Simon
>> 
>> 
>>> Mick Jordan
>>> 
>>> $ head /Library/Frameworks/R.framework/Resources/etc/Makeconf
>>> # etc/Makeconf.  Generated from Makeconf.in by configure.
>>> #
>>> # ${R_HOME}/etc/Makeconf
>>> #
>>> # R was configured using the following call
>>> # (not including env. vars and site configuration)
>>> # configure  'CC=clang' 'CXX=clang++' 'OBJC=clang' 'F77=gfortran-4.8' 'FC=gfortran-4.8' 'CFLAGS=-Wall -mtune=core2 -g -O2' 'CXXFLAGS=-Wall -mtune=core2 -g -O2' 'OBJCFLAGS=-Wall -mtune=core2 -g -O2' 'FCFLAGS=-Wall -g -O2' 'F77FLAGS=-Wall -g -O2' '--with-system-zlib' '--enable-memory-profiling' 'CPPFLAGS=-I/usr/local/include -I/usr/local/include/freetype2 -I/opt/X11/include' '--x-libraries=/opt/X11/lib' '--x-includes=/usr/local/include' '--enable-R-framework'
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> David Winsemius
> Alameda, CA, USA
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

David Winsemius
Alameda, CA, USA


From Dan.Kelley at Dal.Ca  Tue May 10 16:36:22 2016
From: Dan.Kelley at Dal.Ca (Daniel Kelley)
Date: Tue, 10 May 2016 14:36:22 +0000
Subject: [R-SIG-Mac] rgdal problem with wintri projection (OSX, R-3.3.0,
	rgdal 1.1-9)
Message-ID: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>

On OSX, I find that inverse projections yield segmentation faults with the newly-released R (version 3.3.0). This works with both rgdal 1.1-8 and also with 1.1-9 (released yesterday).

Below my signature line is a transcript, within which it is shown that the forward projection from lon=lat=0 yields x=y=0 as expected, but that trying to do the inverse projection with x=y=0 yields a segmentation fault. I?ve put in a sessionInfo() to show the machine type, etc.

I note that aitoff also fails. I?ve not tested the full suite of projections.

NOTE: this test works fine with R-3.2.1.

Dan E. Kelley, Professor  and Graduate Coordinator
Oceanography Department, Dalhousie University
PO BOX 15000
Halifax, NS B3H 4R2
phone:(902)494-1694 fax:(?)-3877 Dan.Kelley at Dal.CA  
http://oceanography.dal.ca/person/Kelley_Dan.html


$ R --no-save < wintri.R

R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> sessionInfo()
R version 3.3.0 (2016-05-03)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.11.5 (El Capitan)

locale:
[1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     
> library(rgdal)
Loading required package: sp
rgdal: version: 1.1-9, (SVN revision 617M)
 Geospatial Data Abstraction Library extensions to R successfully loaded
 Loaded GDAL runtime: GDAL 1.11.4, released 2016/01/25
 Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/gdal
 Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
 Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/proj
 Linking to sp version: 1.2-3 
> lon <- 0
> lat <- 0
> proj <- "+proj=wintri"
> xy <- rgdal::project(cbind(lon, lat), proj=proj)
> print(xy)
     lon lat
[1,]   0   0
> rgdal::project(xy, proj=proj, inv=TRUE)

 *** caught segfault ***
address 0x0, cause 'memory not mapped'

Traceback:
 1: .Call("project_inv", as.integer(nc), as.double(xy[, 1]), as.double(xy[,     2]), proj, as.logical(use_ob_tran), PACKAGE = "rgdal")
 2: rgdal::project(xy, proj = proj, inv = TRUE)
An irrecoverable exception occurred. R is aborting now ...
Segmentation fault: 11


From dwinsemius at comcast.net  Tue May 10 18:55:35 2016
From: dwinsemius at comcast.net (David Winsemius)
Date: Tue, 10 May 2016 09:55:35 -0700
Subject: [R-SIG-Mac] rgdal problem with wintri projection (OSX, R-3.3.0,
	rgdal 1.1-9)
In-Reply-To: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>
References: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>
Message-ID: <912355A5-D0B8-49D1-AF5F-14B16D05D5B0@comcast.net>


> On May 10, 2016, at 7:36 AM, Daniel Kelley <Dan.Kelley at Dal.Ca> wrote:
> 
> On OSX, I find that inverse projections yield segmentation faults with the newly-released R (version 3.3.0). This works with both rgdal 1.1-8 and also with 1.1-9 (released yesterday).
> 
> Below my signature line is a transcript, within which it is shown that the forward projection from lon=lat=0 yields x=y=0 as expected, but that trying to do the inverse projection with x=y=0 yields a segmentation fault. I?ve put in a sessionInfo() to show the machine type, etc.
> 
> I note that aitoff also fails. I?ve not tested the full suite of projections.
> 
> NOTE: this test works fine with R-3.2.1.
> 
> Dan E. Kelley, Professor  and Graduate Coordinator
> Oceanography Department, Dalhousie University
> PO BOX 15000
> Halifax, NS B3H 4R2
> phone:(902)494-1694 fax:(?)-3877 Dan.Kelley at Dal.CA  
> http://oceanography.dal.ca/person/Kelley_Dan.html
> 
> 
> $ R --no-save < wintri.R
> 
> R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
> Copyright (C) 2016 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
>  Natural language support but running in an English locale
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
> 
>> sessionInfo()
> R version 3.3.0 (2016-05-03)
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> Running under: OS X 10.11.5 (El Capitan)
> 
> locale:
> [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base     
>> library(rgdal)
> Loading required package: sp
> rgdal: version: 1.1-9, (SVN revision 617M)
> Geospatial Data Abstraction Library extensions to R successfully loaded
> Loaded GDAL runtime: GDAL 1.11.4, released 2016/01/25
> Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/gdal
> Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
> Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/proj
> Linking to sp version: 1.2-3 
>> lon <- 0
>> lat <- 0
>> proj <- "+proj=wintri"
>> xy <- rgdal::project(cbind(lon, lat), proj=proj)
>> print(xy)
>     lon lat
> [1,]   0   0
>> rgdal::project(xy, proj=proj, inv=TRUE)
> 
> *** caught segfault ***
> address 0x0, cause 'memory not mapped'
> 
> Traceback:
> 1: .Call("project_inv", as.integer(nc), as.double(xy[, 1]), as.double(xy[,     2]), proj, as.logical(use_ob_tran), PACKAGE = "rgdal")
> 2: rgdal::project(xy, proj = proj, inv = TRUE)
> An irrecoverable exception occurred. R is aborting now ...
> Segmentation fault: 11

I was using slightly out of date versions of the R packages. With rgdal 1.1-8 and sp 1.2-3 there was no segfault. I thought that the difference might be due to the fact that I'm using a later version of PROJ.4 runtime: Rel. 4.9.2, 08 September 2015, [PJ_VERSION: 492].  However, "updating" to rgdal 1.1-9 now produces the same segfault.


-- 

David Winsemius
Alameda, CA, USA


From Roger.Bivand at nhh.no  Wed May 11 12:44:08 2016
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 11 May 2016 10:44:08 +0000
Subject: [R-SIG-Mac]
	=?utf-8?q?rgdal_problem_with_wintri_projection_=28OSX?=
	=?utf-8?b?LCBSLTMuMy4wLAlyZ2RhbCAxLjEtOSk=?=
References: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>
	<912355A5-D0B8-49D1-AF5F-14B16D05D5B0@comcast.net>
Message-ID: <loom.20160511T123111-786@post.gmane.org>

David Winsemius <dwinsemius <at> comcast.net> writes:

> 
> 
> > On May 10, 2016, at 7:36 AM, Daniel Kelley <Dan.Kelley <at> Dal.Ca> wrote:
> > 
> > On OSX, I find that inverse projections yield segmentation faults with
the newly-released R (version
> 3.3.0). This works with both rgdal 1.1-8 and also with 1.1-9 (released
yesterday).
> > 

...


> >> rgdal::project(xy, proj=proj, inv=TRUE)
> > 
> > *** caught segfault ***
> > address 0x0, cause 'memory not mapped'
> > 
> > Traceback:
> > 1: .Call("project_inv", as.integer(nc), as.double(xy[, 1]),
as.double(xy[,     2]), proj,
> as.logical(use_ob_tran), PACKAGE = "rgdal")
> > 2: rgdal::project(xy, proj = proj, inv = TRUE)
> > An irrecoverable exception occurred. R is aborting now ...
> > Segmentation fault: 11
> 

This appears to affect 1.1-9 on OSX. As rgdal maintainer, obviously I'd like
to resolve this, but have mo access to OSX hardware at all. I'm assuming
that the rgdal version is installed as binary from CRAN (thanks to Simon for
providing the binary package!).

Do we know whether the OSX version matters?

Do we know that the same rgdal version 1.1-9 installed from source suffers
from the same problem; if it does, is 1.1-8 free of the problem (as with the
CRAN binary)?

There may be a user-facing work-around - use spTransform (or rawTransform())
rather than project(), but I cannot check it myself:

xy <- rawTransform("+proj=longlat", "+proj=wintri", n=1L, x=0, y=0)
rawTransform("+proj=wintri", "+proj=longlat", n=1L, x=xy[[1]][1], y=xy[[2]][1])

This is using different functions in the PROJ.4 library.

If anyone could provide gdb or similar output of a backtrace, that would be
very helpful.

Roger

> I was using slightly out of date versions of the R packages. With rgdal
1.1-8 and sp 1.2-3 there was no
> segfault. I thought that the difference might be due to the fact that I'm
using a later version of PROJ.4
> runtime: Rel. 4.9.2, 08 September 2015, [PJ_VERSION: 492].  However,
"updating" to rgdal 1.1-9 now
> produces the same segfault.
>


From Dan.Kelley at Dal.Ca  Wed May 11 13:25:26 2016
From: Dan.Kelley at Dal.Ca (Daniel Kelley)
Date: Wed, 11 May 2016 11:25:26 +0000
Subject: [R-SIG-Mac] rgdal problem with wintri projection (OSX, R-3.3.0,
	rgdal 1.1-9)
In-Reply-To: <loom.20160511T123111-786@post.gmane.org>
References: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>
	<912355A5-D0B8-49D1-AF5F-14B16D05D5B0@comcast.net>
	<loom.20160511T123111-786@post.gmane.org>
Message-ID: <54A04088-BD9F-4457-994C-494F4781DA0A@dal.ca>

I apologize for not providing sufficient information in my original posting.  Below I am putting, in markdown notation, the test results with two setups.  I think the key thing is that R 3.3.0 is linking with an old version of proj (4.8.0) whereas R 3.2.1 was linking with a new version (4.9.1).


# Test 1 with R 3.2.1 (works)

    R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
    Copyright (C) 2015 The R Foundation for Statistical Computing
    Platform: x86_64-apple-darwin10.8.0 (64-bit)
    
    R is free software and comes with ABSOLUTELY NO WARRANTY.
    You are welcome to redistribute it under certain conditions.
    Type 'license()' or 'licence()' for distribution details.
    
      Natural language support but running in an English locale
    
    R is a collaborative project with many contributors.
    Type 'contributors()' for more information and
    'citation()' on how to cite R or R packages in publications.
    
    Type 'demo()' for some demos, 'help()' for on-line help, or
    'help.start()' for an HTML browser interface to help.
    Type 'q()' to quit R.
    
    > sessionInfo()
    R version 3.2.1 (2015-06-18)
    Platform: x86_64-apple-darwin10.8.0 (64-bit)
    Running under: OS X 10.11.5 (unknown)
    
    locale:
    [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
    
    attached base packages:
    [1] stats     graphics  grDevices utils     datasets  methods   base     
    > library(rgdal)
    Loading required package: sp
    rgdal: version: 0.9-3, (SVN revision 530)
     Geospatial Data Abstraction Library extensions to R successfully loaded
     Loaded GDAL runtime: GDAL 1.11.2, released 2015/02/10
     Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.2/Resources/library/rgdal/gdal
     Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491]
     Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.2/Resources/library/rgdal/proj
     Linking to sp version: 1.1-0 
    > lon <- 0
    > lat <- 0
    > proj <- "+proj=wintri"
    > xy <- rgdal::project(cbind(lon, lat), proj=proj)
    > print(xy)
         [,1] [,2]
    [1,]    0    0
    > rgdal::project(xy, proj=proj, inv=TRUE)
         [,1] [,2]
    [1,]    0    0
    > 
    > 




# Test 2 with R 3.3.0 (seg-faults)


    R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
    Copyright (C) 2016 The R Foundation for Statistical Computing
    Platform: x86_64-apple-darwin13.4.0 (64-bit)
    
    R is free software and comes with ABSOLUTELY NO WARRANTY.
    You are welcome to redistribute it under certain conditions.
    Type 'license()' or 'licence()' for distribution details.
    
      Natural language support but running in an English locale
    
    R is a collaborative project with many contributors.
    Type 'contributors()' for more information and
    'citation()' on how to cite R or R packages in publications.
    
    Type 'demo()' for some demos, 'help()' for on-line help, or
    'help.start()' for an HTML browser interface to help.
    Type 'q()' to quit R.
    
    > sessionInfo()
    R version 3.3.0 (2016-05-03)
    Platform: x86_64-apple-darwin13.4.0 (64-bit)
    Running under: OS X 10.11.5 (El Capitan)
    
    locale:
    [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
    
    attached base packages:
    [1] stats     graphics  grDevices utils     datasets  methods   base     
    > library(rgdal)
    Loading required package: sp
    rgdal: version: 1.1-9, (SVN revision 617M)
     Geospatial Data Abstraction Library extensions to R successfully loaded
     Loaded GDAL runtime: GDAL 1.11.4, released 2016/01/25
     Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/gdal
     Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
     Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/proj
     Linking to sp version: 1.2-3 
    > lon <- 0
    > lat <- 0
    > proj <- "+proj=wintri"
    > xy <- rgdal::project(cbind(lon, lat), proj=proj)
    > print(xy)
         lon lat
    [1,]   0   0
    > rgdal::project(xy, proj=proj, inv=TRUE)
    
     *** caught segfault ***
    address 0x0, cause 'memory not mapped'
    
    Traceback:
     1: .Call("project_inv", as.integer(nc), as.double(xy[, 1]), as.double(xy[,     2]), proj, as.logical(use_ob_tran), PACKAGE = "rgdal")
     2: rgdal::project(xy, proj = proj, inv = TRUE)
    An irrecoverable exception occurred. R is aborting now ...


From simon.urbanek at r-project.org  Wed May 11 15:41:39 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 11 May 2016 09:41:39 -0400
Subject: [R-SIG-Mac] rgdal problem with wintri projection (OSX, R-3.3.0,
	rgdal 1.1-9)
In-Reply-To: <loom.20160511T123111-786@post.gmane.org>
References: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>
	<912355A5-D0B8-49D1-AF5F-14B16D05D5B0@comcast.net>
	<loom.20160511T123111-786@post.gmane.org>
Message-ID: <FC1BA37B-5791-4D07-9CCB-A2B802A48230@r-project.org>

> rgdal::project(xy, proj=proj, inv=TRUE)
Process 6803 stopped
* thread #1: tid = 0xc72bb10, 0x0000000000000000, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
    frame #0: 0x0000000000000000
error: memory read failed for 0x0
(lldb) bt
* thread #1: tid = 0xc72bb10, 0x0000000000000000, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
  * frame #0: 0x0000000000000000
    frame #1: 0x00000001068a2657 rgdal.so`pj_inv(xy=(x = 0, y = 0), P=0x000000010070ac10) + 215 at pj_inv.c:22
    frame #2: 0x0000000106011f2b rgdal.so`project_inv(n=<unavailable>, x=0x0000000105db1d28, y=0x0000000105db1c68, projarg=<unavailable>, ob_tran=<unavailable>) + 251 at projectit.cpp:300
    frame #3: 0x000000010007b827 libR.dylib`do_dotcall(call=0x0000000105b632b0, op=<unavailable>, args=<unavailable>, env=<unavailable>) + 327 at dotcode.c:1251
    frame #4: 0x00000001000a8e4c libR.dylib`Rf_eval(e=0x0000000105b632b0, rho=0x0000000105b7a408) + 988 at eval.c:713

I'll look into the PROJ4 version issue as well and keep you posted.

Cheers,
Simon


On May 11, 2016, at 6:44 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:

> David Winsemius <dwinsemius <at> comcast.net> writes:
> 
>> 
>> 
>>> On May 10, 2016, at 7:36 AM, Daniel Kelley <Dan.Kelley <at> Dal.Ca> wrote:
>>> 
>>> On OSX, I find that inverse projections yield segmentation faults with
> the newly-released R (version
>> 3.3.0). This works with both rgdal 1.1-8 and also with 1.1-9 (released
> yesterday).
>>> 
> 
> ...
> 
> 
>>>> rgdal::project(xy, proj=proj, inv=TRUE)
>>> 
>>> *** caught segfault ***
>>> address 0x0, cause 'memory not mapped'
>>> 
>>> Traceback:
>>> 1: .Call("project_inv", as.integer(nc), as.double(xy[, 1]),
> as.double(xy[,     2]), proj,
>> as.logical(use_ob_tran), PACKAGE = "rgdal")
>>> 2: rgdal::project(xy, proj = proj, inv = TRUE)
>>> An irrecoverable exception occurred. R is aborting now ...
>>> Segmentation fault: 11
>> 
> 
> This appears to affect 1.1-9 on OSX. As rgdal maintainer, obviously I'd like
> to resolve this, but have mo access to OSX hardware at all. I'm assuming
> that the rgdal version is installed as binary from CRAN (thanks to Simon for
> providing the binary package!).
> 
> Do we know whether the OSX version matters?
> 
> Do we know that the same rgdal version 1.1-9 installed from source suffers
> from the same problem; if it does, is 1.1-8 free of the problem (as with the
> CRAN binary)?
> 
> There may be a user-facing work-around - use spTransform (or rawTransform())
> rather than project(), but I cannot check it myself:
> 
> xy <- rawTransform("+proj=longlat", "+proj=wintri", n=1L, x=0, y=0)
> rawTransform("+proj=wintri", "+proj=longlat", n=1L, x=xy[[1]][1], y=xy[[2]][1])
> 
> This is using different functions in the PROJ.4 library.
> 
> If anyone could provide gdb or similar output of a backtrace, that would be
> very helpful.
> 
> Roger
> 
>> I was using slightly out of date versions of the R packages. With rgdal
> 1.1-8 and sp 1.2-3 there was no
>> segfault. I thought that the difference might be due to the fact that I'm
> using a later version of PROJ.4
>> runtime: Rel. 4.9.2, 08 September 2015, [PJ_VERSION: 492].  However,
> "updating" to rgdal 1.1-9 now
>> produces the same segfault.
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From simon.urbanek at r-project.org  Wed May 11 16:00:40 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 11 May 2016 10:00:40 -0400
Subject: [R-SIG-Mac] rgdal problem with wintri projection (OSX, R-3.3.0,
	rgdal 1.1-9)
In-Reply-To: <54A04088-BD9F-4457-994C-494F4781DA0A@dal.ca>
References: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>
	<912355A5-D0B8-49D1-AF5F-14B16D05D5B0@comcast.net>
	<loom.20160511T123111-786@post.gmane.org>
	<54A04088-BD9F-4457-994C-494F4781DA0A@dal.ca>
Message-ID: <09A2871F-BA03-41AE-979C-04BDCE718AFF@r-project.org>

Thanks, that was the correct hint - updating PROJ4 to 4.9.1 seems to fix the issue. The new binary is now up - until all mirrors sync up please use the main Mac server:
install.packages("rgdal",,"http://r.research.att.com")

Roger, can you, please, add a corresponding regression test to rgdal so a failure like the one below would be picked up on check?

Thanks,
Simon


On May 11, 2016, at 7:25 AM, Daniel Kelley <Dan.Kelley at Dal.Ca> wrote:

> I apologize for not providing sufficient information in my original posting.  Below I am putting, in markdown notation, the test results with two setups.  I think the key thing is that R 3.3.0 is linking with an old version of proj (4.8.0) whereas R 3.2.1 was linking with a new version (4.9.1).
> 
> 
> # Test 1 with R 3.2.1 (works)
> 
>    R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
>    Copyright (C) 2015 The R Foundation for Statistical Computing
>    Platform: x86_64-apple-darwin10.8.0 (64-bit)
> 
>    R is free software and comes with ABSOLUTELY NO WARRANTY.
>    You are welcome to redistribute it under certain conditions.
>    Type 'license()' or 'licence()' for distribution details.
> 
>      Natural language support but running in an English locale
> 
>    R is a collaborative project with many contributors.
>    Type 'contributors()' for more information and
>    'citation()' on how to cite R or R packages in publications.
> 
>    Type 'demo()' for some demos, 'help()' for on-line help, or
>    'help.start()' for an HTML browser interface to help.
>    Type 'q()' to quit R.
> 
>> sessionInfo()
>    R version 3.2.1 (2015-06-18)
>    Platform: x86_64-apple-darwin10.8.0 (64-bit)
>    Running under: OS X 10.11.5 (unknown)
> 
>    locale:
>    [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
> 
>    attached base packages:
>    [1] stats     graphics  grDevices utils     datasets  methods   base     
>> library(rgdal)
>    Loading required package: sp
>    rgdal: version: 0.9-3, (SVN revision 530)
>     Geospatial Data Abstraction Library extensions to R successfully loaded
>     Loaded GDAL runtime: GDAL 1.11.2, released 2015/02/10
>     Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.2/Resources/library/rgdal/gdal
>     Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491]
>     Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.2/Resources/library/rgdal/proj
>     Linking to sp version: 1.1-0 
>> lon <- 0
>> lat <- 0
>> proj <- "+proj=wintri"
>> xy <- rgdal::project(cbind(lon, lat), proj=proj)
>> print(xy)
>         [,1] [,2]
>    [1,]    0    0
>> rgdal::project(xy, proj=proj, inv=TRUE)
>         [,1] [,2]
>    [1,]    0    0
>> 
>> 
> 
> 
> 
> 
> # Test 2 with R 3.3.0 (seg-faults)
> 
> 
>    R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
>    Copyright (C) 2016 The R Foundation for Statistical Computing
>    Platform: x86_64-apple-darwin13.4.0 (64-bit)
> 
>    R is free software and comes with ABSOLUTELY NO WARRANTY.
>    You are welcome to redistribute it under certain conditions.
>    Type 'license()' or 'licence()' for distribution details.
> 
>      Natural language support but running in an English locale
> 
>    R is a collaborative project with many contributors.
>    Type 'contributors()' for more information and
>    'citation()' on how to cite R or R packages in publications.
> 
>    Type 'demo()' for some demos, 'help()' for on-line help, or
>    'help.start()' for an HTML browser interface to help.
>    Type 'q()' to quit R.
> 
>> sessionInfo()
>    R version 3.3.0 (2016-05-03)
>    Platform: x86_64-apple-darwin13.4.0 (64-bit)
>    Running under: OS X 10.11.5 (El Capitan)
> 
>    locale:
>    [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
> 
>    attached base packages:
>    [1] stats     graphics  grDevices utils     datasets  methods   base     
>> library(rgdal)
>    Loading required package: sp
>    rgdal: version: 1.1-9, (SVN revision 617M)
>     Geospatial Data Abstraction Library extensions to R successfully loaded
>     Loaded GDAL runtime: GDAL 1.11.4, released 2016/01/25
>     Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/gdal
>     Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
>     Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/proj
>     Linking to sp version: 1.2-3 
>> lon <- 0
>> lat <- 0
>> proj <- "+proj=wintri"
>> xy <- rgdal::project(cbind(lon, lat), proj=proj)
>> print(xy)
>         lon lat
>    [1,]   0   0
>> rgdal::project(xy, proj=proj, inv=TRUE)
> 
>     *** caught segfault ***
>    address 0x0, cause 'memory not mapped'
> 
>    Traceback:
>     1: .Call("project_inv", as.integer(nc), as.double(xy[, 1]), as.double(xy[,     2]), proj, as.logical(use_ob_tran), PACKAGE = "rgdal")
>     2: rgdal::project(xy, proj = proj, inv = TRUE)
>    An irrecoverable exception occurred. R is aborting now ...
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From Dan.Kelley at Dal.Ca  Wed May 11 16:12:44 2016
From: Dan.Kelley at Dal.Ca (Daniel Kelley)
Date: Wed, 11 May 2016 14:12:44 +0000
Subject: [R-SIG-Mac] rgdal problem with wintri projection (OSX, R-3.3.0,
 rgdal 1.1-9)
In-Reply-To: <09A2871F-BA03-41AE-979C-04BDCE718AFF@r-project.org>
References: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>
	<912355A5-D0B8-49D1-AF5F-14B16D05D5B0@comcast.net>
	<loom.20160511T123111-786@post.gmane.org>
	<54A04088-BD9F-4457-994C-494F4781DA0A@dal.ca>
	<09A2871F-BA03-41AE-979C-04BDCE718AFF@r-project.org>
Message-ID: <6CAF0369-70D0-4771-9ED8-2585A076154F@dal.ca>

This is fantastic ? thanks, Simon and Roger! Users of the ?oce? package (which uses rgdal for map-projection calculations) will be very grateful.

Dan.

Dan E. Kelley, Professor  and Graduate Coordinator
Oceanography Department, Dalhousie University
PO BOX 15000
Halifax, NS B3H 4R2
phone:(902)494-1694 fax:(?)-3877 Dan.Kelley at Dal.CA  
http://oceanography.dal.ca/person/Kelley_Dan.html




From Roger.Bivand at nhh.no  Wed May 11 17:21:25 2016
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 11 May 2016 17:21:25 +0200
Subject: [R-SIG-Mac] rgdal problem with wintri projection (OSX, R-3.3.0,
 rgdal 1.1-9)
In-Reply-To: <09A2871F-BA03-41AE-979C-04BDCE718AFF@r-project.org>
References: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>
	<912355A5-D0B8-49D1-AF5F-14B16D05D5B0@comcast.net>
	<loom.20160511T123111-786@post.gmane.org>
	<54A04088-BD9F-4457-994C-494F4781DA0A@dal.ca>
	<09A2871F-BA03-41AE-979C-04BDCE718AFF@r-project.org>
Message-ID: <alpine.LFD.2.20.1605111719400.3376@reclus.nhh.no>

On Wed, 11 May 2016, Simon Urbanek wrote:

> Thanks, that was the correct hint - updating PROJ4 to 4.9.1 seems to fix 
> the issue. The new binary is now up - until all mirrors sync up please 
> use the main Mac server:
> install.packages("rgdal",,"http://r.research.att.com")
>
> Roger, can you, please, add a corresponding regression test to rgdal so 
> a failure like the one below would be picked up on check?

Yes, of course, and thank you for resolving this so fast. The next release 
will also have extra protection contributed by Barry Rowlingson (still 
testing).

Roger

>
> Thanks,
> Simon
>
>
> On May 11, 2016, at 7:25 AM, Daniel Kelley <Dan.Kelley at Dal.Ca> wrote:
>
>> I apologize for not providing sufficient information in my original posting.  Below I am putting, in markdown notation, the test results with two setups.  I think the key thing is that R 3.3.0 is linking with an old version of proj (4.8.0) whereas R 3.2.1 was linking with a new version (4.9.1).
>>
>>
>> # Test 1 with R 3.2.1 (works)
>>
>>    R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
>>    Copyright (C) 2015 The R Foundation for Statistical Computing
>>    Platform: x86_64-apple-darwin10.8.0 (64-bit)
>>
>>    R is free software and comes with ABSOLUTELY NO WARRANTY.
>>    You are welcome to redistribute it under certain conditions.
>>    Type 'license()' or 'licence()' for distribution details.
>>
>>      Natural language support but running in an English locale
>>
>>    R is a collaborative project with many contributors.
>>    Type 'contributors()' for more information and
>>    'citation()' on how to cite R or R packages in publications.
>>
>>    Type 'demo()' for some demos, 'help()' for on-line help, or
>>    'help.start()' for an HTML browser interface to help.
>>    Type 'q()' to quit R.
>>
>>> sessionInfo()
>>    R version 3.2.1 (2015-06-18)
>>    Platform: x86_64-apple-darwin10.8.0 (64-bit)
>>    Running under: OS X 10.11.5 (unknown)
>>
>>    locale:
>>    [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
>>
>>    attached base packages:
>>    [1] stats     graphics  grDevices utils     datasets  methods   base
>>> library(rgdal)
>>    Loading required package: sp
>>    rgdal: version: 0.9-3, (SVN revision 530)
>>     Geospatial Data Abstraction Library extensions to R successfully loaded
>>     Loaded GDAL runtime: GDAL 1.11.2, released 2015/02/10
>>     Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.2/Resources/library/rgdal/gdal
>>     Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491]
>>     Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.2/Resources/library/rgdal/proj
>>     Linking to sp version: 1.1-0
>>> lon <- 0
>>> lat <- 0
>>> proj <- "+proj=wintri"
>>> xy <- rgdal::project(cbind(lon, lat), proj=proj)
>>> print(xy)
>>         [,1] [,2]
>>    [1,]    0    0
>>> rgdal::project(xy, proj=proj, inv=TRUE)
>>         [,1] [,2]
>>    [1,]    0    0
>>>
>>>
>>
>>
>>
>>
>> # Test 2 with R 3.3.0 (seg-faults)
>>
>>
>>    R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
>>    Copyright (C) 2016 The R Foundation for Statistical Computing
>>    Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>
>>    R is free software and comes with ABSOLUTELY NO WARRANTY.
>>    You are welcome to redistribute it under certain conditions.
>>    Type 'license()' or 'licence()' for distribution details.
>>
>>      Natural language support but running in an English locale
>>
>>    R is a collaborative project with many contributors.
>>    Type 'contributors()' for more information and
>>    'citation()' on how to cite R or R packages in publications.
>>
>>    Type 'demo()' for some demos, 'help()' for on-line help, or
>>    'help.start()' for an HTML browser interface to help.
>>    Type 'q()' to quit R.
>>
>>> sessionInfo()
>>    R version 3.3.0 (2016-05-03)
>>    Platform: x86_64-apple-darwin13.4.0 (64-bit)
>>    Running under: OS X 10.11.5 (El Capitan)
>>
>>    locale:
>>    [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
>>
>>    attached base packages:
>>    [1] stats     graphics  grDevices utils     datasets  methods   base
>>> library(rgdal)
>>    Loading required package: sp
>>    rgdal: version: 1.1-9, (SVN revision 617M)
>>     Geospatial Data Abstraction Library extensions to R successfully loaded
>>     Loaded GDAL runtime: GDAL 1.11.4, released 2016/01/25
>>     Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/gdal
>>     Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
>>     Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/proj
>>     Linking to sp version: 1.2-3
>>> lon <- 0
>>> lat <- 0
>>> proj <- "+proj=wintri"
>>> xy <- rgdal::project(cbind(lon, lat), proj=proj)
>>> print(xy)
>>         lon lat
>>    [1,]   0   0
>>> rgdal::project(xy, proj=proj, inv=TRUE)
>>
>>     *** caught segfault ***
>>    address 0x0, cause 'memory not mapped'
>>
>>    Traceback:
>>     1: .Call("project_inv", as.integer(nc), as.double(xy[, 1]), as.double(xy[,     2]), proj, as.logical(use_ob_tran), PACKAGE = "rgdal")
>>     2: rgdal::project(xy, proj = proj, inv = TRUE)
>>    An irrecoverable exception occurred. R is aborting now ...
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no
http://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
http://depsy.org/person/434412


From Roger.Bivand at nhh.no  Wed May 11 23:09:49 2016
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 11 May 2016 23:09:49 +0200
Subject: [R-SIG-Mac] rgdal problem with wintri projection (OSX, R-3.3.0,
 rgdal 1.1-9)
In-Reply-To: <alpine.LFD.2.20.1605111719400.3376@reclus.nhh.no>
References: <ED8A23C9-E6ED-404C-AD90-8D952C02A11F@dal.ca>
	<912355A5-D0B8-49D1-AF5F-14B16D05D5B0@comcast.net>
	<loom.20160511T123111-786@post.gmane.org>
	<54A04088-BD9F-4457-994C-494F4781DA0A@dal.ca>
	<09A2871F-BA03-41AE-979C-04BDCE718AFF@r-project.org>
	<alpine.LFD.2.20.1605111719400.3376@reclus.nhh.no>
Message-ID: <alpine.LFD.2.20.1605112303500.10839@reclus.nhh.no>

On Wed, 11 May 2016, Roger Bivand wrote:

> On Wed, 11 May 2016, Simon Urbanek wrote:
>
>>  Thanks, that was the correct hint - updating PROJ4 to 4.9.1 seems to fix
>>  the issue. The new binary is now up - until all mirrors sync up please use
>>  the main Mac server:
>>  install.packages("rgdal",,"http://r.research.att.com")
>>
>>  Roger, can you, please, add a corresponding regression test to rgdal so a
>>  failure like the one below would be picked up on check?
>
> Yes, of course, and thank you for resolving this so fast. The next release 
> will also have extra protection contributed by Barry Rowlingson (still 
> testing).

rgdal_1.1-10 submitted to CRAN with additional tests which reproduce the 
issue (as far as I can tell without being able to check directly), and 
with a fix by Barry Rowlingson for another problem identified while trying 
to add the tests. In addition, project() now has an added argument 
legacy=, which if TRUE will use PROJ.4 pj_fwd() and pj_inv(), or if FALSE 
will use pj_transform() (on Windows 32-bit it will always use 
pj_transform()).

The sources are committed to R-Forge.

Anyone able to test this version is very welcome to try it out.

Roger

>
> Roger
>
>>
>>  Thanks,
>>  Simon
>> 
>>
>>  On May 11, 2016, at 7:25 AM, Daniel Kelley <Dan.Kelley at Dal.Ca> wrote:
>> 
>> >  I apologize for not providing sufficient information in my original 
>> >  posting.  Below I am putting, in markdown notation, the test results 
>> >  with two setups.  I think the key thing is that R 3.3.0 is linking with 
>> >  an old version of proj (4.8.0) whereas R 3.2.1 was linking with a new 
>> >  version (4.9.1).
>> > 
>> > 
>> >  # Test 1 with R 3.2.1 (works)
>> > 
>> >     R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
>> >     Copyright (C) 2015 The R Foundation for Statistical Computing
>> >     Platform: x86_64-apple-darwin10.8.0 (64-bit)
>> > 
>> >     R is free software and comes with ABSOLUTELY NO WARRANTY.
>> >     You are welcome to redistribute it under certain conditions.
>> >     Type 'license()' or 'licence()' for distribution details.
>> > 
>> >       Natural language support but running in an English locale
>> > 
>> >     R is a collaborative project with many contributors.
>> >     Type 'contributors()' for more information and
>> >     'citation()' on how to cite R or R packages in publications.
>> > 
>> >     Type 'demo()' for some demos, 'help()' for on-line help, or
>> >     'help.start()' for an HTML browser interface to help.
>> >     Type 'q()' to quit R.
>> > 
>> > >  sessionInfo()
>> >     R version 3.2.1 (2015-06-18)
>> >     Platform: x86_64-apple-darwin10.8.0 (64-bit)
>> >     Running under: OS X 10.11.5 (unknown)
>> > 
>> >     locale:
>> >     [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
>> > 
>> >     attached base packages:
>> >     [1] stats     graphics  grDevices utils     datasets  methods   base
>> > >  library(rgdal)
>> >     Loading required package: sp
>> >     rgdal: version: 0.9-3, (SVN revision 530)
>> >      Geospatial Data Abstraction Library extensions to R successfully 
>> >      loaded
>> >      Loaded GDAL runtime: GDAL 1.11.2, released 2015/02/10
>> >      Path to GDAL shared files: 
>> >      /Library/Frameworks/R.framework/Versions/3.2/Resources/library/rgdal/gdal
>> >      Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491]
>> >      Path to PROJ.4 shared files: 
>> >      /Library/Frameworks/R.framework/Versions/3.2/Resources/library/rgdal/proj
>> >      Linking to sp version: 1.1-0
>> > >  lon <- 0
>> > >  lat <- 0
>> > >  proj <- "+proj=wintri"
>> > >  xy <- rgdal::project(cbind(lon, lat), proj=proj)
>> > >  print(xy)
>> >          [,1] [,2]
>> >     [1,]    0    0
>> > >  rgdal::project(xy, proj=proj, inv=TRUE)
>> >          [,1] [,2]
>> >     [1,]    0    0
>> > > 
>> > > 
>> > 
>> > 
>> > 
>> > 
>> >  # Test 2 with R 3.3.0 (seg-faults)
>> > 
>> > 
>> >     R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
>> >     Copyright (C) 2016 The R Foundation for Statistical Computing
>> >     Platform: x86_64-apple-darwin13.4.0 (64-bit)
>> > 
>> >     R is free software and comes with ABSOLUTELY NO WARRANTY.
>> >     You are welcome to redistribute it under certain conditions.
>> >     Type 'license()' or 'licence()' for distribution details.
>> > 
>> >       Natural language support but running in an English locale
>> > 
>> >     R is a collaborative project with many contributors.
>> >     Type 'contributors()' for more information and
>> >     'citation()' on how to cite R or R packages in publications.
>> > 
>> >     Type 'demo()' for some demos, 'help()' for on-line help, or
>> >     'help.start()' for an HTML browser interface to help.
>> >     Type 'q()' to quit R.
>> > 
>> > >  sessionInfo()
>> >     R version 3.3.0 (2016-05-03)
>> >     Platform: x86_64-apple-darwin13.4.0 (64-bit)
>> >     Running under: OS X 10.11.5 (El Capitan)
>> > 
>> >     locale:
>> >     [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8
>> > 
>> >     attached base packages:
>> >     [1] stats     graphics  grDevices utils     datasets  methods   base
>> > >  library(rgdal)
>> >     Loading required package: sp
>> >     rgdal: version: 1.1-9, (SVN revision 617M)
>> >      Geospatial Data Abstraction Library extensions to R successfully 
>> >      loaded
>> >      Loaded GDAL runtime: GDAL 1.11.4, released 2016/01/25
>> >      Path to GDAL shared files: 
>> >      /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/gdal
>> >      Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
>> >      Path to PROJ.4 shared files: 
>> >      /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rgdal/proj
>> >      Linking to sp version: 1.2-3
>> > >  lon <- 0
>> > >  lat <- 0
>> > >  proj <- "+proj=wintri"
>> > >  xy <- rgdal::project(cbind(lon, lat), proj=proj)
>> > >  print(xy)
>> >          lon lat
>> >     [1,]   0   0
>> > >  rgdal::project(xy, proj=proj, inv=TRUE)
>> > 
>> >     *** caught segfault ***
>> >     address 0x0, cause 'memory not mapped'
>> > 
>> >     Traceback:
>> >      1: .Call("project_inv", as.integer(nc), as.double(xy[, 1]), 
>> >      as.double(xy[,     2]), proj, as.logical(use_ob_tran), PACKAGE = 
>> >      "rgdal")
>> >      2: rgdal::project(xy, proj = proj, inv = TRUE)
>> >     An irrecoverable exception occurred. R is aborting now ...
>> > 
>> >  _______________________________________________
>> >  R-SIG-Mac mailing list
>> >  R-SIG-Mac at r-project.org
>> >  https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> > 
>> 
>> 
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no
http://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
http://depsy.org/person/434412


From tim.bates at ed.ac.uk  Fri May 20 14:08:18 2016
From: tim.bates at ed.ac.uk (Timothy Bates)
Date: Fri, 20 May 2016 13:08:18 +0100
Subject: [R-SIG-Mac] UI suggestion: allow a tab with no more suggestions to
	fill in "$"
Message-ID: <BE57B471-B482-41A8-88E5-3F515385A41C@ed.ac.uk>


Like most of us I am sure, I use the tab completion system a lot, not just to complete object names, but to pick from the drop-list created when one hits tab after a $ sign.

Current situation to get to  "object$part1$level2? the user currently has to type:
1. "obj?" (completed to "object")
2. Type "$?" and pick part1
3. Type "$?" and pick level2

Suggestion: make a second "tab" press fill in the $-sign. That would reduce the above to:
1. "obj?" (completed to "object")
2. Type "? ?" and pick part1
3. Type "? ?" and pick level2

MUCH quicker, as the dollar sign involves lifting finger off tab key, hitting (for English) shift-4 (a two hand operation, or an awkward one-hand stretch), then moving back to the tab key.

Users of the @ accessor  might feel left out - perhaps give them shift-tab :-)

PS: Still be nice bump up the font size in the bottom tool-tip bar, if only back to the old physical height (or perhaps just re-use the RStudio tool-tip completion system)
-- 
The University of Edinburgh is a charitable body, registered in
Scotland, with registration number SC005336.


From simon.urbanek at r-project.org  Tue May 24 01:59:26 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 23 May 2016 19:59:26 -0400
Subject: [R-SIG-Mac] UI suggestion: allow a tab with no more suggestions
	to fill in "$"
In-Reply-To: <BE57B471-B482-41A8-88E5-3F515385A41C@ed.ac.uk>
References: <BE57B471-B482-41A8-88E5-3F515385A41C@ed.ac.uk>
Message-ID: <EADD7A2C-FECF-4164-93E6-AF4D88246592@r-project.org>

Tim,

but how should be determine that you want $? If it's a matrix, maybe you want [ ... if it's a function maybe you want ( ... it looks like a hornet's nest to me, but if you provide logic, we may be able to code it up ;)

Cheers,
Simon


On May 20, 2016, at 8:08 AM, Timothy Bates <tim.bates at ed.ac.uk> wrote:

> 
> Like most of us I am sure, I use the tab completion system a lot, not just to complete object names, but to pick from the drop-list created when one hits tab after a $ sign.
> 
> Current situation to get to  "object$part1$level2? the user currently has to type:
> 1. "obj?" (completed to "object")
> 2. Type "$?" and pick part1
> 3. Type "$?" and pick level2
> 
> Suggestion: make a second "tab" press fill in the $-sign. That would reduce the above to:
> 1. "obj?" (completed to "object")
> 2. Type "? ?" and pick part1
> 3. Type "? ?" and pick level2
> 
> MUCH quicker, as the dollar sign involves lifting finger off tab key, hitting (for English) shift-4 (a two hand operation, or an awkward one-hand stretch), then moving back to the tab key.
> 
> Users of the @ accessor  might feel left out - perhaps give them shift-tab :-)
> 
> PS: Still be nice bump up the font size in the bottom tool-tip bar, if only back to the old physical height (or perhaps just re-use the RStudio tool-tip completion system)
> -- 
> The University of Edinburgh is a charitable body, registered in
> Scotland, with registration number SC005336.
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From tim.bates at ed.ac.uk  Tue May 24 22:09:01 2016
From: tim.bates at ed.ac.uk (Timothy Bates)
Date: Tue, 24 May 2016 21:09:01 +0100
Subject: [R-SIG-Mac] UI suggestion: allow a tab with no more suggestions
	to fill in "$"
In-Reply-To: <EADD7A2C-FECF-4164-93E6-AF4D88246592@r-project.org>
References: <BE57B471-B482-41A8-88E5-3F515385A41C@ed.ac.uk>
	<EADD7A2C-FECF-4164-93E6-AF4D88246592@r-project.org>
Message-ID: <5A5A30F5-0F19-46E6-96D0-DEEAAD11031C@ed.ac.uk>


On 24 May 2016, at 12:59 am, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> how should be determine that you want $? If it's a matrix, maybe you want [ ... if it's a function maybe you want ( ... it looks like a hornet's nest to me, but if you provide logic, we may be able to code it up ;)
> Cheers, Simon

Hi Simon,

My logic is as follows:

1. When a name is already complete, when the user pushes tab again, they are expecting ?more? name completion, i.e.,  they want to access a $ or @ sub-component. Currently, nothing happens, and the user feels ?thwarted?? like the typing ?Simon" but then having to type a space and a tab to get "Urbanek" :-)

2. Most object components are $ indexed rather than @ indexed), so $ is the best guess.

Based on this, a simple logic of "append $ if the current name is a valid name" would be an advance in many cases. I can?t see a downside.

A smarter logic would call .DollarNames() on the current word and if it found $ items, then append the $ and display the dropdown, if not, beep.

Re ?why not offer mtcars[] instead of mtcars$?? or adding the round brackets to a function, I think the answer is that while perhaps an appropriately smart version of rcompgen could support this, users are expecting tab completion to complete names and in R, that means a complete addressable name for an object component.

So I think that having tab add a $ accessor would seem natural, whereas having one tab complete the name, and the next one add brackets would not.

Currently, I find that the mental context switch from completing a name to accessing or filling in parameters is sufficiently ?different? that typing the bracket ending seems natural, and it?s nice that R.app gives us the closing bracket for free.

Cheers, tim

https://stat.ethz.ch/R-manual/R-devel/library/utils/html/rcompgen.html

PS: Indeed, a type-aware completion system would be great (as you imply). I enjoy the feature in RStudio now where valid completions are given, for instance, within a square bracket context. i.e., mtcars[1,?] gives a drop down of column names - much easier than running names() in the terminal to remember what is what.


> 
> On May 20, 2016, at 8:08 AM, Timothy Bates <tim.bates at ed.ac.uk> wrote:
>> Like most of us I am sure, I use the tab completion system a lot, not just to complete object names, but to pick from the drop-list created when one hits tab after a $ sign.
>> 
>> Current situation to get to  "object$part1$level2? the user currently has to type:
>> 1. "obj?" (completed to "object")
>> 2. Type "$?" and pick part1
>> 3. Type "$?" and pick level2
>> 
>> Suggestion: make a second "tab" press fill in the $-sign. That would reduce the above to:
>> 1. "obj?" (completed to "object")
>> 2. Type "? ?" and pick part1
>> 3. Type "? ?" and pick level2
>> 
>> MUCH quicker, as the dollar sign involves lifting finger off tab key, hitting (for English) shift-4 (a two hand operation, or an awkward one-hand stretch), then moving back to the tab key.
>> 
>> Users of the @ accessor  might feel left out - perhaps give them shift-tab :-)
>> 
>> PS: Still be nice bump up the font size in the bottom tool-tip bar, if only back to the old physical height (or perhaps just re-use the RStudio tool-tip completion system)


-- 
The University of Edinburgh is a charitable body, registered in
Scotland, with registration number SC005336.


From simon.urbanek at r-project.org  Tue May 24 23:08:03 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 24 May 2016 17:08:03 -0400
Subject: [R-SIG-Mac] UI suggestion: allow a tab with no more suggestions
	to fill in "$"
In-Reply-To: <5A5A30F5-0F19-46E6-96D0-DEEAAD11031C@ed.ac.uk>
References: <BE57B471-B482-41A8-88E5-3F515385A41C@ed.ac.uk>
	<EADD7A2C-FECF-4164-93E6-AF4D88246592@r-project.org>
	<5A5A30F5-0F19-46E6-96D0-DEEAAD11031C@ed.ac.uk>
Message-ID: <DE828AD6-05FA-4874-917C-6B21D8845185@r-project.org>


> On May 24, 2016, at 4:09 PM, Timothy Bates <tim.bates at ed.ac.uk> wrote:
> 
> 
> On 24 May 2016, at 12:59 am, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> how should be determine that you want $? If it's a matrix, maybe you want [ ... if it's a function maybe you want ( ... it looks like a hornet's nest to me, but if you provide logic, we may be able to code it up ;)
>> Cheers, Simon
> 
> Hi Simon,
> 
> My logic is as follows:
> 
> 1. When a name is already complete, when the user pushes tab again, they are expecting ?more? name completion, i.e.,  they want to access a $ or @ sub-component.


That seems like a very strong assumption and my point questioning that assumption. For a lot of objects $ makes no sense which is why I'm reluctant to add $ unconditionally. Really, it only makes sense for lists (and some subclasses) - anything else gets a bit dodgy (it works for some but not others).

That said, I suppose one possible approach would be to catch any completion that yields just the items itself and if that happens attempt a completion with $ appended and see what it yields. If it yields anything additional, return that result instead. You can test whether you like that by using something like the following:


add.fn("rcompgen.completion", function (x)
{
    comp <- function(x) {
         utils:::.assignLinebuffer(x)
         utils:::.assignEnd(nchar(x))
         utils:::.guessTokenFromLine()
         utils:::.completeToken()
         utils:::.CompletionEnv[["comps"]]
    }
    res <- unique(comp(x))
    if (nzchar(x) && identical(res, x) && !identical(substr(x, nchar(x), nchar(x) + 1L), "$")) {
       rc <- comp(paste0(x, "$"))
       if (!identical(substr(rc, nchar(rc), nchar(rc) + 1L), "$")) res <- rc
    }
    res
})

Obviously, you can eve spin that further and carry on with @ if $ doesn't work.

Cheers,
Simon





> Currently, nothing happens, and the user feels ?thwarted?? like the typing ?Simon" but then having to type a space and a tab to get "Urbanek" :-)
> 
> 2. Most object components are $ indexed rather than @ indexed), so $ is the best guess.
> 
> Based on this, a simple logic of "append $ if the current name is a valid name" would be an advance in many cases. I can?t see a downside.
> 
> A smarter logic would call .DollarNames() on the current word and if it found $ items, then append the $ and display the dropdown, if not, beep.
> 
> Re ?why not offer mtcars[] instead of mtcars$?? or adding the round brackets to a function, I think the answer is that while perhaps an appropriately smart version of rcompgen could support this, users are expecting tab completion to complete names and in R, that means a complete addressable name for an object component.
> 
> So I think that having tab add a $ accessor would seem natural, whereas having one tab complete the name, and the next one add brackets would not.
> 
> Currently, I find that the mental context switch from completing a name to accessing or filling in parameters is sufficiently ?different? that typing the bracket ending seems natural, and it?s nice that R.app gives us the closing bracket for free.
> 
> Cheers, tim
> 
> https://stat.ethz.ch/R-manual/R-devel/library/utils/html/rcompgen.html
> 
> PS: Indeed, a type-aware completion system would be great (as you imply). I enjoy the feature in RStudio now where valid completions are given, for instance, within a square bracket context. i.e., mtcars[1,?] gives a drop down of column names - much easier than running names() in the terminal to remember what is what.
> 
> 
>> 
>> On May 20, 2016, at 8:08 AM, Timothy Bates <tim.bates at ed.ac.uk> wrote:
>>> Like most of us I am sure, I use the tab completion system a lot, not just to complete object names, but to pick from the drop-list created when one hits tab after a $ sign.
>>> 
>>> Current situation to get to  "object$part1$level2? the user currently has to type:
>>> 1. "obj?" (completed to "object")
>>> 2. Type "$?" and pick part1
>>> 3. Type "$?" and pick level2
>>> 
>>> Suggestion: make a second "tab" press fill in the $-sign. That would reduce the above to:
>>> 1. "obj?" (completed to "object")
>>> 2. Type "? ?" and pick part1
>>> 3. Type "? ?" and pick level2
>>> 
>>> MUCH quicker, as the dollar sign involves lifting finger off tab key, hitting (for English) shift-4 (a two hand operation, or an awkward one-hand stretch), then moving back to the tab key.
>>> 
>>> Users of the @ accessor  might feel left out - perhaps give them shift-tab :-)
>>> 
>>> PS: Still be nice bump up the font size in the bottom tool-tip bar, if only back to the old physical height (or perhaps just re-use the RStudio tool-tip completion system)
> 
> 
> -- 
> The University of Edinburgh is a charitable body, registered in
> Scotland, with registration number SC005336.
> 


From cgw at witthoft.com  Fri May  6 13:30:52 2016
From: cgw at witthoft.com (cgw at witthoft.com)
Date: Fri, 06 May 2016 11:30:52 -0000
Subject: [R-SIG-Mac] Hangs Reading Large Files
In-Reply-To: <mailman.17.1462528803.4394.r-sig-mac@r-project.org>
References: <mailman.17.1462528803.4394.r-sig-mac@r-project.org>
Message-ID: <f662b753a05d433383e95a4ba1f4bf49@witthoft.com>

When an executable is performing a processor-intensive task without any
"hooks" for interrupts,  the "not responding"  status is normal, as is
the pinwheel -- which is doing what it's supposed to; it's just that
none of us like it when it spins for too long. 

Message: 2
Date: Thu, 5 May 2016 18:16:17 -0400
From: Charles DiMaggio <charles.dimaggio at gmail.com>
To: r-sig-mac at r-project.org
Subject: [R-SIG-Mac] R 3.2.2 Hangs Reading Files in El Capitan
    [Solved]
Message-ID: <FCE03872-D0EB-46C7-81F1-8C7E641BD5B6 at gmail.com>
Content-Type: text/plain; charset="UTF-8"

Been a while, but wanted to close the page on a previous post describing
R hanging on readRDS() and load() for largish (say 500MB or larger)
files. Tried again with recent release (3.3.0).  Am able to read in
large files under El Cap.  While the file is reading in, I get a
disconcerting spinning pinwheel of death and a check under Force Quit
reports R is not responding.  But if I wait it out, it eventually reads
in.  Odd.  But I can live with it.

Cheers

Charles
	[[alternative HTML version deleted]]


From stephanie.j.peacock at gmail.com  Thu May 12 19:40:20 2016
From: stephanie.j.peacock at gmail.com (Steph Peacock)
Date: Thu, 12 May 2016 17:40:20 -0000
Subject: [R-SIG-Mac] R.app GUI under El Capitan: No response or
	"CGContextGetCTM: invalid context 0x0"
References: <f34367ebb35c4c9585d6ebab13a0b353@BADWLRZ-SW13MB2.ads.mwn.de>
	<F19071CA-00DC-4DF6-B066-7FA56328A75D@gmail.com>
	<D26AA501.104F7%ali.uenlue@tum.de>
Message-ID: <loom.20160512T193036-333@post.gmane.org>

I have also been having this problem when saving plots for months -
extremely frustrating. Seems to freeze regularly, especially if I try to
navigate to a different folder when saving. 

I seem to get the same lack of response sometimes when saving a workspace
file.  This occurs almost every time if I select Workspace -> Save
Workspace, and on occasion when using the command line save.image(). Was any
solution found? 

See also
http://r.789695.n4.nabble.com/R-G-GUI-freezes-saving-plot-td4718731.html 

Happy to provide details on request.


From mmargolis6 at gmail.com  Fri May 20 15:07:12 2016
From: mmargolis6 at gmail.com (Michael Margolis)
Date: Fri, 20 May 2016 08:07:12 -0500
Subject: [R-SIG-Mac] GUI bug
Message-ID: <15C65BC1-1046-4C0F-AF71-F70DDFDB39E3@gmail.com>

The following message has been generated when I uncollapse a function in the GUI editor (that is, click the little triangle next to to a line number where I have previously hidden the function contents). This started when I upgraded to 3.3.0. It is sporadic, and has not yet been associated with any real problem.

2016-05-20 07:59:37.369 R[4066:3108487] *** RController: caught ObjC exception while processing system events. Update to the latest GUI version and consider reporting this properly (see FAQ) if it persists and is not known. 
*** reason: *** -[__NSArrayM objectAtIndex:]: index 18446744073709551615 beyond bounds [0 .. 205]
*** name: NSRangeException, info: (null)
*** Version: R 3.3.0 (70573) R.app R 3.3.0 GUI 1.68 Mavericks build
Consider saving your work soon in case this develops into a problem.

From cgw at witthoft.com  Wed May 25 13:51:06 2016
From: cgw at witthoft.com (cgw at witthoft.com)
Date: Wed, 25 May 2016 07:51:06 -0400
Subject: [R-SIG-Mac] UI suggestion: allow a tab with no more suggestions
 to fill in "$"
In-Reply-To: <mailman.19.1464170402.26424.r-sig-mac@r-project.org>
References: <mailman.19.1464170402.26424.r-sig-mac@r-project.org>
Message-ID: <7f7b840d8d67049da053ad35886f2560@witthoft.com>

I have to agree with Simon here that "best guess" will only lead to pain
in many cases.  

The best solution, albeit the most painful for Simon :-( , is to have a
Preferences pane where the user can specify what a tab does, i.e.
"nothing", " $", "@" , "$first_named_list_item", and so on.   But even
then, what if there are objects  "foo"  and "foolish" in your workspace?
 You want to write  "foo$bar" , but which gets precedence when you enter
a tab?  "foo$bar" or "foolish" ?

[Tim wrote...]
1. When a name is already complete, when the user pushes tab again, they
are expecting ?more? name completion, i.e.,  they want to access a $ or
@ sub-component. Currently, nothing happens, and the user feels
?thwarted?? like the typing ?Simon" but then having to type a space and
a tab to get "Urbanek" :-)

2. Most object components are $ indexed rather than @ indexed), so $ is
the best guess.
	[[alternative HTML version deleted]]


From jephrey14 at gmail.com  Thu May 26 11:21:29 2016
From: jephrey14 at gmail.com (Jeffrey Agyapong)
Date: Thu, 26 May 2016 09:21:29 +0000
Subject: [R-SIG-Mac] Command lines for R on Macintosh
Message-ID: <F1C13980-DB46-4DAC-8AAB-CA5780A7E62E@gmail.com>

I recently installed R.3.3.0 on mac and I seem to have problems with the command lines. The command lines for windows seems to be different from that for Macintosh. For example I tried the following commands and didn?t work;
> getwd()
[1] "/Users/Dimples"
> setwd("/Users/Dimples/Jeff")
Error in setwd("/Users/Dimples/Jeff") : cannot change working directory
> setwd("/Users/Dimples/Desktop/R/Jeff")
Error in setwd("/Users/Dimples/Desktop/R/Jeff") : 
  cannot change working directory
> setwd("/Users/Dimples/JeffR")
Error in setwd("/Users/Dimples/JeffR") : cannot change working directory
> setwd("/Untitled/Users/Dimples/Desktop/R/JeffRR")
Error in setwd("/Untitled/Users/Dimples/Desktop/R/JeffRR") : 
  cannot change working directory
> setwd("/Users/Dimples/Desktop/R/JeffRR")
Error in setwd("/Users/Dimples/Desktop/R/JeffRR") : 
  cannot change working directory
> setwd("/Users/Dimples/Desktop/JeffRR")
Error in setwd("/Users/Dimples/Desktop/JeffRR") : 
  cannot change working directory
> setwd("/Users/Dimples/Desktop/JeffRR")
Error in setwd("/Users/Dimples/Desktop/JeffRR") : 
  cannot change working directory
 Can I receive any help with which app I can use to run CRAN R on macintosh or how to run R app on macintosh.

Best regards,
Jeff

From simon.urbanek at r-project.org  Mon May 30 22:59:23 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 30 May 2016 16:59:23 -0400
Subject: [R-SIG-Mac] Intermittent plotting failures on new Quartz window
In-Reply-To: <3BE45281-70CD-4FDE-8678-06C5BA6A32C0@igb.illinois.edu>
References: <3BE45281-70CD-4FDE-8678-06C5BA6A32C0@igb.illinois.edu>
Message-ID: <FA4BE30A-DB30-4154-BE2A-CBB83F2416E2@r-project.org>

I though I read this before - yes, it looks like a timing issue that has to do with OS X providing windows asynchronously, so the drawing space is not ready yet while R is already plotting so the plot is incomplete. R doesn't know that so it doesn't redraw unless you resize the plot or play the history (cmd-left/right) -- the fact that the history shows the full plot proves that this is not something on the R side (since the display list is complete), but rather the initial rendering doesn't have a window to draw into. I didn't find any API for Quartz to know when the window is actually ready. This only affects creating a new window and plotting into it before it's ready. Once the window is shown, everything works as expected - so you're probably better of using plot.new() first before you start creating the grobs.

Cheers,
Simon


On Apr 30, 2016, at 5:21 PM, Chris Black <black11 at igb.illinois.edu> wrote:

> Hi, all. I?m getting some puzzling, intermittent plot failures that seem to occur only when I?m in an interactive session, arranging plots with very different drawing speeds, and only when Quartz needs to open a new window before plotting. 
> 
> I posted a longer version of this at https://gist.github.com/infotroph/c68fc7a3f8594473361f87e2a348ddf9, but here?s a minimal example:
> 
> set.seed(34565)
> library(ggplot2)
> library(gridExtra)
> library(grid)
> 
> p1 = ggplot(diamonds, aes(x, price))+geom_point() 
> p2 = ggplot(mtcars, aes(wt, mpg))+geom_point()
> 
> graphics.off()
> pp=arrangeGrob(p1, p2)
> grid.draw(pp)
> 
> Expected result: New graphics window containing a two-panel plot with diamonds on the top and cars on the bottom.
> Observed result: Usually (~80% of the time?), a new graphics window with the top panel incompletely drawn (usually just axes with no points or panel grid), and the bottom panel as expected. Rarely (~20%?), the complete plot as expected. 
> 
> I can modulate the success rate somewhat by putting different lengths of Sys.sleep() in between the arrangeGrob and grid.draw calls, and I can guarantee success by calling dev.new() before arrangeGrob. See the above-linked Gist for details and for session info from a few other folks ? thus far only the Quartz users can reproduce it, hence my starting with this list. 
> 
> Session info:
> 
> R for 3.2.4 GUI 1.67 Mavericks build (7152)
> R version 3.2.4 (2016-03-10)
> Platform: x86_64-apple-darwin13.4.0 (64-bit)
> Running under: OS X 10.11.3 (El Capitan)
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] grid      stats     graphics  grDevices utils     datasets  methods  
> [8] base     
> 
> other attached packages:
> [1] gridExtra_2.2.1 ggplot2_2.1.0  
> 
> loaded via a namespace (and not attached):
> [1] labeling_0.3     colorspace_1.2-6 scales_0.4.0     plyr_1.8.3      
> [5] tools_3.2.4      gtable_0.2.0     Rcpp_0.12.4      munsell_0.4.3   
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From tim.bates at ed.ac.uk  Tue May 31 10:12:28 2016
From: tim.bates at ed.ac.uk (Timothy Bates)
Date: Tue, 31 May 2016 09:12:28 +0100
Subject: [R-SIG-Mac] UI suggestion: allow a tab with no more suggestions
	to fill in "$"
In-Reply-To: <7f7b840d8d67049da053ad35886f2560@witthoft.com>
References: <mailman.19.1464170402.26424.r-sig-mac@r-project.org>
	<7f7b840d8d67049da053ad35886f2560@witthoft.com>
Message-ID: <37390CF5-D2E1-48FA-9B07-FF62A8383F6F@ed.ac.uk>

Hi all,
Simon send code that would essentially allow users to customise the behavior in a very R-ish way. Perhaps someone could even release a package R.app.options to contain functions like this.

Code copied below: I can?t get it to work as add.fn doesn?t exist for me: no doubt soluble, as Simon says it?s loaded as part of the GUI-tools.

While there are a good many things I?d like in the R.app, I realise this is all stuff to create and maintain, so not requesting new preference pane items. So having this as custom code in a package to be launched at  startup would suffice.

re what to do about foo?> when foo$part and foolish both exist. My request was that the tab only do something when the current behavior does nothing. Alternatively, a hierarchial menu would solve this also:

foo$part
     foolish
     tile

A bundle storing options and executing a custom add.fn("rcompgen.completion", function (x)  would allow flexibility over some of these choice.

cheers,
t

> "foo"  and "foolish" in your workspace?
> You want to write  "foo$bar" , but which gets precedence when you enter
> a tab?  "foo$bar" or "foolish? ?

> On 25 May 2016, at 12:51 pm, <cgw at witthoft.com> <cgw at witthoft.com> wrote:
> I have to agree with Simon here that "best guess" will only lead to pain
> in many cases.  
> 
> The best solution, albeit the most painful for Simon :-( , is to have a
> Preferences pane where the user can specify what a tab does, i.e.
> "nothing", " $", "@" , "$first_named_list_item", and so on.   But even
> then, what if there are objects  "foo"  and "foolish" in your workspace?
> You want to write  "foo$bar" , but which gets precedence when you enter
> a tab?  "foo$bar" or "foolish" ?
> 
> [Tim wrote...]
> 1. When a name is already complete, when the user pushes tab again, they
> are expecting ?more? name completion, i.e.,  they want to access a $ or
> @ sub-component. Currently, nothing happens, and the user feels
> ?thwarted?? like the typing ?Simon" but then having to type a space and
> a tab to get "Urbanek" :-)
> 
> 2. Most object components are $ indexed rather than @ indexed), so $ is
> the best guess.

On 24 May 2016, at 10:08 pm, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> That seems like a very strong assumption and my point questioning that assumption. For a lot of objects $ makes no sense which is why I'm reluctant to add $ unconditionally. Really, it only makes sense for lists (and some subclasses) - anything else gets a bit dodgy (it works for some but not others).
> 
> That said, I suppose one possible approach would be to catch any completion that yields just the items itself and if that happens attempt a completion with $ appended and see what it yields. If it yields anything additional, return that result instead. You can test whether you like that by using something like the following:
> 
# add.fn is part of the GUI-tools which are automatically loaded when the R.app GUI starts
# and rcompgen.completion what the GUI uses to call the completion code.

add.fn("rcompgen.completion", function (x) {
 comp <- function(x) {
      utils:::.assignLinebuffer(x)
      utils:::.assignEnd(nchar(x))
      utils:::.guessTokenFromLine()
      utils:::.completeToken()
      utils:::.CompletionEnv[["comps"]]
 }
 res <- unique(comp(x))
 if (nzchar(x) && identical(res, x) && !identical(substr(x, nchar(x), nchar(x) + 1L), "$")) {
    rc <- comp(paste0(x, "$"))
    if (!identical(substr(rc, nchar(rc), nchar(rc) + 1L), "$")) res <- rc
 }
 res
})

# Obviously, you can eve spin that further and carry on with @ if $ doesn't work.


-- 
The University of Edinburgh is a charitable body, registered in
Scotland, with registration number SC005336.


From pdalgd at gmail.com  Tue May 31 10:13:01 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 31 May 2016 10:13:01 +0200
Subject: [R-SIG-Mac] Command lines for R on Macintosh
In-Reply-To: <F1C13980-DB46-4DAC-8AAB-CA5780A7E62E@gmail.com>
References: <F1C13980-DB46-4DAC-8AAB-CA5780A7E62E@gmail.com>
Message-ID: <71DF5907-26C0-4F4F-8197-973CA7F5C14E@gmail.com>

I don't see a problem with that:

Peters-iMac:~ pd$ r-release-branch/BUILD-dist/bin/R

R version 3.3.0 Patched (2016-05-26 r70684) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0/x86_64 (64-bit)
[....]
> getwd()
[1] "/Users/pd"
> setwd("/Users/pd/tmp")
> getwd()
[1] "/Users/pd/tmp"

Suspecting a permission issue on your turf: Do you have nonstandard umask setting, can the owner of the R process (which you start how?) read your files, etc.

-pd 

> On 26 May 2016, at 11:21 , Jeffrey Agyapong <jephrey14 at gmail.com> wrote:
> 
> I recently installed R.3.3.0 on mac and I seem to have problems with the command lines. The command lines for windows seems to be different from that for Macintosh. For example I tried the following commands and didn?t work;
>> getwd()
> [1] "/Users/Dimples"
>> setwd("/Users/Dimples/Jeff")
> Error in setwd("/Users/Dimples/Jeff") : cannot change working directory
>> setwd("/Users/Dimples/Desktop/R/Jeff")
> Error in setwd("/Users/Dimples/Desktop/R/Jeff") : 
>  cannot change working directory
>> setwd("/Users/Dimples/JeffR")
> Error in setwd("/Users/Dimples/JeffR") : cannot change working directory
>> setwd("/Untitled/Users/Dimples/Desktop/R/JeffRR")
> Error in setwd("/Untitled/Users/Dimples/Desktop/R/JeffRR") : 
>  cannot change working directory
>> setwd("/Users/Dimples/Desktop/R/JeffRR")
> Error in setwd("/Users/Dimples/Desktop/R/JeffRR") : 
>  cannot change working directory
>> setwd("/Users/Dimples/Desktop/JeffRR")
> Error in setwd("/Users/Dimples/Desktop/JeffRR") : 
>  cannot change working directory
>> setwd("/Users/Dimples/Desktop/JeffRR")
> Error in setwd("/Users/Dimples/Desktop/JeffRR") : 
>  cannot change working directory
> Can I receive any help with which app I can use to run CRAN R on macintosh or how to run R app on macintosh.
> 
> Best regards,
> Jeff
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From simon.urbanek at r-project.org  Tue May 31 15:01:09 2016
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 31 May 2016 09:01:09 -0400
Subject: [R-SIG-Mac] UI suggestion: allow a tab with no more suggestions
	to fill in "$"
In-Reply-To: <37390CF5-D2E1-48FA-9B07-FF62A8383F6F@ed.ac.uk>
References: <mailman.19.1464170402.26424.r-sig-mac@r-project.org>
	<7f7b840d8d67049da053ad35886f2560@witthoft.com>
	<37390CF5-D2E1-48FA-9B07-FF62A8383F6F@ed.ac.uk>
Message-ID: <63ECA1CD-7873-4592-93F1-B4778108C790@r-project.org>

If you don't see add.fn(), then use this instead which is equivalent:

RGUI = as.environment("tools:RGUI")
RGUI$rcompgen.completion <- function (x) {
comp <- function(x) {
     utils:::.assignLinebuffer(x)
     utils:::.assignEnd(nchar(x))
     utils:::.guessTokenFromLine()
     utils:::.completeToken()
     utils:::.CompletionEnv[["comps"]]
}
res <- unique(comp(x))
if (nzchar(x) && identical(res, x) && !identical(substr(x, nchar(x), nchar(x) + 1L), "$")) {
   rc <- comp(paste0(x, "$"))
   if (!identical(substr(rc, nchar(rc), nchar(rc) + 1L), "$")) res <- rc
}
res
}

Cheers,
Simon



> On May 31, 2016, at 4:12 AM, Timothy Bates <tim.bates at ed.ac.uk> wrote:
> 
> Hi all,
> Simon send code that would essentially allow users to customise the behavior in a very R-ish way. Perhaps someone could even release a package R.app.options to contain functions like this.
> 
> Code copied below: I can?t get it to work as add.fn doesn?t exist for me: no doubt soluble, as Simon says it?s loaded as part of the GUI-tools.
> 
> While there are a good many things I?d like in the R.app, I realise this is all stuff to create and maintain, so not requesting new preference pane items. So having this as custom code in a package to be launched at  startup would suffice.
> 
> re what to do about foo?> when foo$part and foolish both exist. My request was that the tab only do something when the current behavior does nothing. Alternatively, a hierarchial menu would solve this also:
> 
> foo$part
>     foolish
>     tile
> 
> A bundle storing options and executing a custom add.fn("rcompgen.completion", function (x)  would allow flexibility over some of these choice.
> 
> cheers,
> t
> 
>> "foo"  and "foolish" in your workspace?
>> You want to write  "foo$bar" , but which gets precedence when you enter
>> a tab?  "foo$bar" or "foolish? ?
> 
>> On 25 May 2016, at 12:51 pm, <cgw at witthoft.com> <cgw at witthoft.com> wrote:
>> I have to agree with Simon here that "best guess" will only lead to pain
>> in many cases.  
>> 
>> The best solution, albeit the most painful for Simon :-( , is to have a
>> Preferences pane where the user can specify what a tab does, i.e.
>> "nothing", " $", "@" , "$first_named_list_item", and so on.   But even
>> then, what if there are objects  "foo"  and "foolish" in your workspace?
>> You want to write  "foo$bar" , but which gets precedence when you enter
>> a tab?  "foo$bar" or "foolish" ?
>> 
>> [Tim wrote...]
>> 1. When a name is already complete, when the user pushes tab again, they
>> are expecting ?more? name completion, i.e.,  they want to access a $ or
>> @ sub-component. Currently, nothing happens, and the user feels
>> ?thwarted?? like the typing ?Simon" but then having to type a space and
>> a tab to get "Urbanek" :-)
>> 
>> 2. Most object components are $ indexed rather than @ indexed), so $ is
>> the best guess.
> 
> On 24 May 2016, at 10:08 pm, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> That seems like a very strong assumption and my point questioning that assumption. For a lot of objects $ makes no sense which is why I'm reluctant to add $ unconditionally. Really, it only makes sense for lists (and some subclasses) - anything else gets a bit dodgy (it works for some but not others).
>> 
>> That said, I suppose one possible approach would be to catch any completion that yields just the items itself and if that happens attempt a completion with $ appended and see what it yields. If it yields anything additional, return that result instead. You can test whether you like that by using something like the following:
>> 
> # add.fn is part of the GUI-tools which are automatically loaded when the R.app GUI starts
> # and rcompgen.completion what the GUI uses to call the completion code.
> 
> add.fn("rcompgen.completion", function (x) {
> comp <- function(x) {
>      utils:::.assignLinebuffer(x)
>      utils:::.assignEnd(nchar(x))
>      utils:::.guessTokenFromLine()
>      utils:::.completeToken()
>      utils:::.CompletionEnv[["comps"]]
> }
> res <- unique(comp(x))
> if (nzchar(x) && identical(res, x) && !identical(substr(x, nchar(x), nchar(x) + 1L), "$")) {
>    rc <- comp(paste0(x, "$"))
>    if (!identical(substr(rc, nchar(rc), nchar(rc) + 1L), "$")) res <- rc
> }
> res
> })
> 
> # Obviously, you can eve spin that further and carry on with @ if $ doesn't work.
> 
> 
> -- 
> The University of Edinburgh is a charitable body, registered in
> Scotland, with registration number SC005336.
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From charles.dimaggio at gmail.com  Tue May 31 15:08:23 2016
From: charles.dimaggio at gmail.com (Charles DiMaggio)
Date: Tue, 31 May 2016 09:08:23 -0400
Subject: [R-SIG-Mac] Hangs Reading Large Files
In-Reply-To: <f662b753a05d433383e95a4ba1f4bf49@witthoft.com>
References: <mailman.17.1462528803.4394.r-sig-mac@r-project.org>
	<f662b753a05d433383e95a4ba1f4bf49@witthoft.com>
Message-ID: <151E3AF4-5622-4395-9DCE-C2219A362B2F@gmail.com>

Thank for that. Makes sense.  Odd thing is I never noticed this behavior before El Cap.  In Mavericks, would see the small grey spinning progress indicator which was much more reassuring that things were as they should be.

Cheers

Charles


Charles DiMaggio, PhD, MPH
Professor of Surgery and Population Health
Director of Injury Research
New York University School of Medicine
Division of Trauma, Emergency Surgery and Surgical Critical Care
Bellevue Hospital Center
462 First Avenue, NBV 15
New York, NY 10016-9196
Charles.Dimaggio at nyumc.org
Office: 212.263.3202
Direct: 516.308.6426

> On May 6, 2016, at 7:30 AM, cgw at witthoft.com wrote:
> 
> When an executable is performing a processor-intensive task without any
> "hooks" for interrupts,  the "not responding"  status is normal, as is
> the pinwheel -- which is doing what it's supposed to; it's just that
> none of us like it when it spins for too long. 
> 
> Message: 2
> Date: Thu, 5 May 2016 18:16:17 -0400
> From: Charles DiMaggio <charles.dimaggio at gmail.com>
> To: r-sig-mac at r-project.org
> Subject: [R-SIG-Mac] R 3.2.2 Hangs Reading Files in El Capitan
>    [Solved]
> Message-ID: <FCE03872-D0EB-46C7-81F1-8C7E641BD5B6 at gmail.com>
> Content-Type: text/plain; charset="UTF-8"
> 
> Been a while, but wanted to close the page on a previous post describing
> R hanging on readRDS() and load() for largish (say 500MB or larger)
> files. Tried again with recent release (3.3.0).  Am able to read in
> large files under El Cap.  While the file is reading in, I get a
> disconcerting spinning pinwheel of death and a check under Force Quit
> reports R is not responding.  But if I wait it out, it eventually reads
> in.  Odd.  But I can live with it.
> 
> Cheers
> 
> Charles
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


	[[alternative HTML version deleted]]


From tim.bates at ed.ac.uk  Tue May 31 15:08:29 2016
From: tim.bates at ed.ac.uk (Timothy Bates)
Date: Tue, 31 May 2016 14:08:29 +0100
Subject: [R-SIG-Mac] UI suggestion: allow a tab with no more suggestions
	to fill in "$"
In-Reply-To: <63ECA1CD-7873-4592-93F1-B4778108C790@r-project.org>
References: <mailman.19.1464170402.26424.r-sig-mac@r-project.org>
	<7f7b840d8d67049da053ad35886f2560@witthoft.com>
	<37390CF5-D2E1-48FA-9B07-FF62A8383F6F@ed.ac.uk>
	<63ECA1CD-7873-4592-93F1-B4778108C790@r-project.org>
Message-ID: <825165D7-B10C-4A2D-A4D2-DBED87363A6D@ed.ac.uk>

smokin? - thanks Simon. Nice to learn a new trick too!

and I must say, felt great when "mtcars ?? yielded this, without having to hit $ !




> On 31 May 2016, at 2:01 pm, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> If you don't see add.fn(), then use this instead which is equivalent:
> 
> RGUI = as.environment("tools:RGUI")
> RGUI$rcompgen.completion <- function (x) {
> comp <- function(x) {
>     utils:::.assignLinebuffer(x)
>     utils:::.assignEnd(nchar(x))
>     utils:::.guessTokenFromLine()
>     utils:::.completeToken()
>     utils:::.CompletionEnv[["comps"]]
> }
> res <- unique(comp(x))
> if (nzchar(x) && identical(res, x) && !identical(substr(x, nchar(x), nchar(x) + 1L), "$")) {
>   rc <- comp(paste0(x, "$"))
>   if (!identical(substr(rc, nchar(rc), nchar(rc) + 1L), "$")) res <- rc
> }
> res
> }
> 
> Cheers,
> Simon
> 
> 
> 
>> On May 31, 2016, at 4:12 AM, Timothy Bates <tim.bates at ed.ac.uk> wrote:
>> 
>> Hi all,
>> Simon send code that would essentially allow users to customise the behavior in a very R-ish way. Perhaps someone could even release a package R.app.options to contain functions like this.
>> 
>> Code copied below: I can?t get it to work as add.fn doesn?t exist for me: no doubt soluble, as Simon says it?s loaded as part of the GUI-tools.
>> 
>> While there are a good many things I?d like in the R.app, I realise this is all stuff to create and maintain, so not requesting new preference pane items. So having this as custom code in a package to be launched at  startup would suffice.
>> 
>> re what to do about foo?> when foo$part and foolish both exist. My request was that the tab only do something when the current behavior does nothing. Alternatively, a hierarchial menu would solve this also:
>> 
>> foo$part
>>    foolish
>>    tile
>> 
>> A bundle storing options and executing a custom add.fn("rcompgen.completion", function (x)  would allow flexibility over some of these choice.
>> 
>> cheers,
>> t
>> 
>>> "foo"  and "foolish" in your workspace?
>>> You want to write  "foo$bar" , but which gets precedence when you enter
>>> a tab?  "foo$bar" or "foolish? ?
>> 
>>> On 25 May 2016, at 12:51 pm, <cgw at witthoft.com> <cgw at witthoft.com> wrote:
>>> I have to agree with Simon here that "best guess" will only lead to pain
>>> in many cases.  
>>> 
>>> The best solution, albeit the most painful for Simon :-( , is to have a
>>> Preferences pane where the user can specify what a tab does, i.e.
>>> "nothing", " $", "@" , "$first_named_list_item", and so on.   But even
>>> then, what if there are objects  "foo"  and "foolish" in your workspace?
>>> You want to write  "foo$bar" , but which gets precedence when you enter
>>> a tab?  "foo$bar" or "foolish" ?
>>> 
>>> [Tim wrote...]
>>> 1. When a name is already complete, when the user pushes tab again, they
>>> are expecting ?more? name completion, i.e.,  they want to access a $ or
>>> @ sub-component. Currently, nothing happens, and the user feels
>>> ?thwarted?? like the typing ?Simon" but then having to type a space and
>>> a tab to get "Urbanek" :-)
>>> 
>>> 2. Most object components are $ indexed rather than @ indexed), so $ is
>>> the best guess.
>> 
>> On 24 May 2016, at 10:08 pm, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>> That seems like a very strong assumption and my point questioning that assumption. For a lot of objects $ makes no sense which is why I'm reluctant to add $ unconditionally. Really, it only makes sense for lists (and some subclasses) - anything else gets a bit dodgy (it works for some but not others).
>>> 
>>> That said, I suppose one possible approach would be to catch any completion that yields just the items itself and if that happens attempt a completion with $ appended and see what it yields. If it yields anything additional, return that result instead. You can test whether you like that by using something like the following:
>>> 
>> # add.fn is part of the GUI-tools which are automatically loaded when the R.app GUI starts
>> # and rcompgen.completion what the GUI uses to call the completion code.
>> 
>> add.fn("rcompgen.completion", function (x) {
>> comp <- function(x) {
>>     utils:::.assignLinebuffer(x)
>>     utils:::.assignEnd(nchar(x))
>>     utils:::.guessTokenFromLine()
>>     utils:::.completeToken()
>>     utils:::.CompletionEnv[["comps"]]
>> }
>> res <- unique(comp(x))
>> if (nzchar(x) && identical(res, x) && !identical(substr(x, nchar(x), nchar(x) + 1L), "$")) {
>>   rc <- comp(paste0(x, "$"))
>>   if (!identical(substr(rc, nchar(rc), nchar(rc) + 1L), "$")) res <- rc
>> }
>> res
>> })
>> 
>> # Obviously, you can eve spin that further and carry on with @ if $ doesn't work.
>> 
>> 
>> -- 
>> The University of Edinburgh is a charitable body, registered in
>> Scotland, with registration number SC005336.
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20160531/5ac7085d/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot 2016-05-31 14.04.55.png
Type: image/png
Size: 35116 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20160531/5ac7085d/attachment-0001.png>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20160531/5ac7085d/attachment-0001.pl>

