From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr  1 06:27:35 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 1 Apr 2020 17:27:35 +1300
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
Message-ID: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>

Dear Mac users,

R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from

https://mac.R-project.org

before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.

The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.

For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/

The new R build system is in
https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
Packages build system has not changed and is in
https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages

We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.

Please test R pre-releases and provide feedback!

Thanks,
Simon


From hp@ge@ @end|ng |rom |redhutch@org  Wed Apr  1 07:19:27 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 31 Mar 2020 22:19:27 -0700
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
Message-ID: <6c604991-51f4-c6f7-5328-c708cd569007@fredhutch.org>

Thanks Simon. A couple of days ago we've started to use the R 4.0.0 
alpha build from https://mac.r-project.org/ for the Bioconductor build 
system. Bioconductor packages depend on thousands of CRAN packages and 
one thing that makes it hard for us and for our users to build/check 
Bioconductor packages at the moment is the absence of Mac binary 
packages for R 4.0.0 on CRAN. Do you have an estimate of when they will 
become available?

Another question is where they are going to be hosted on CRAN. We need 
to follow CRAN's layout for Bioconductor package repositories.

Thanks!
H.


On 3/31/20 21:27, Simon Urbanek wrote:
> Dear Mac users,
> 
> R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
> 
> https://urldefense.proofpoint.com/v2/url?u=https-3A__mac.R-2Dproject.org&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=FJYxweW9WiMXbNMPpMM0bHXy020Gx9P-dHMrWmt7YzE&e=
> 
> before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
> 
> The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
> 
> For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in https://urldefense.proofpoint.com/v2/url?u=http-3A__mac.r-2Dproject.org_libs-2D4_&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=3ZbcXBticg_8MfXltGKdQ9SFNqqeLqqwK_pUhEet7QY&e=
> 
> The new R build system is in
> https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_R4&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=Mmt7_pVM5aUDR3hz93-e-PtadG7wSYpaZe8Ayi5Pv4I&e=
> Packages build system has not changed and is in
> https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_packages&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=eId6n08LVeIAMhMXe3jvLFKn9QGi4_by8owFreDDc84&e=
> 
> We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
> 
> Please test R pre-releases and provide feedback!
> 
> Thanks,
> Simon
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=ubqivtpb1OZ2I0MEbVvGlGDK-tfti3DPtIv4LQ-Ks6A&e=
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr  1 09:37:43 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 1 Apr 2020 20:37:43 +1300
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <6c604991-51f4-c6f7-5328-c708cd569007@fredhutch.org>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <6c604991-51f4-c6f7-5328-c708cd569007@fredhutch.org>
Message-ID: <42043961-2CD4-42B0-A8DD-6EEDBF404B58@R-project.org>

Herv?,


> On 1/04/2020, at 6:19 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
> 
> Thanks Simon. A couple of days ago we've started to use the R 4.0.0 alpha build from https://mac.r-project.org/ for the Bioconductor build system. Bioconductor packages depend on thousands of CRAN packages and one thing that makes it hard for us and for our users to build/check Bioconductor packages at the moment is the absence of Mac binary packages for R 4.0.0 on CRAN. Do you have an estimate of when they will become available?
> 

Both the packages and R are now available. I always recommend using the Mac-master https://mac.R-project.org as "mirror" since that one is most up-to-date.


> Another question is where they are going to be hosted on CRAN. We need to follow CRAN's layout for Bioconductor package repositories.
> 


We have removed the extra layer, the package type is back to "mac.binary", so bin/macosx/contrib is the location.

Cheers,
Simon



> Thanks!
> H.
> 
> 
> On 3/31/20 21:27, Simon Urbanek wrote:
>> Dear Mac users,
>> R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__mac.R-2Dproject.org&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=FJYxweW9WiMXbNMPpMM0bHXy020Gx9P-dHMrWmt7YzE&e=
>> before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>> The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>> For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in https://urldefense.proofpoint.com/v2/url?u=http-3A__mac.r-2Dproject.org_libs-2D4_&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=3ZbcXBticg_8MfXltGKdQ9SFNqqeLqqwK_pUhEet7QY&e=
>> The new R build system is in
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_R4&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=Mmt7_pVM5aUDR3hz93-e-PtadG7wSYpaZe8Ayi5Pv4I&e=
>> Packages build system has not changed and is in
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_packages&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=eId6n08LVeIAMhMXe3jvLFKn9QGi4_by8owFreDDc84&e=
>> We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>> Please test R pre-releases and provide feedback!
>> Thanks,
>> Simon
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=ubqivtpb1OZ2I0MEbVvGlGDK-tfti3DPtIv4LQ-Ks6A&e=
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Wed Apr  1 10:47:28 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Wed, 1 Apr 2020 10:47:28 +0200
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
References: <1c9e9c47-3206-4f96-9d7e-ee11b0b7efba@Spark>
Message-ID: <bb3ab29e-902d-4e91-8d40-d58c84fd6c5f@Spark>

Thanks Simon,

This simplifies things a lot and clears up the process. While the instructions on?https://mac.r-project.org/?are more clear now I think there is still simplification needed for the install process and custom modifications that are needed.
This not only applies to the dev page but finally also to production end users if the SDK 10.15 issues (see below) persists.

I?ve scripted all installation steps (R-devel, gfortran, SDK 10.13) and will probably write a blog post about it to make the R community more aware about it. Let me know if anything is wrong about it - otherwise I?ll use the code below in the blog post.

# install R-devel
wget https://mac.r-project.org/el-capitan/R-devel/R-devel-el-capitan-sa-x86_64.tar.gz
sudo tar fvxz R*.tar.gz -C /
rm R-devel-el-capitan-sa-x86_64.tar.gz

# install gfortran
wget https://github.com/fxcoudert/gfortran-for-macOS/releases/download/8.2/gfortran-8.2-Mojave.dmg
sudo hdiutil attach gfortran*.dmg
sudo installer -package /Volumes/gfortran*/gfortran*/gfortran*.pkg -target /
sudo hdiutil detach /Volumes/gfortran-8.2-Mojave

# install SDK10.13
wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.13.sdk.tar.xz
tar fvxz MacOSX10.13.sdk.tar.xz
sudo mv MacOSX10.13.sdk /Library/Developer/CommandLineTools/SDKs/
rm -rf MacOSX10.13*

In addition people need to set custom CFLAGS in ~/.R/Makevars to actually use it:

CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
CCFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
CXXFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
CPPFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk

In addition there really seem to be major problems regarding the 10.15 SDK. For example, {igraph} which is a package on which lots of other packages depend, cannot be installed from source with SDK 10.15 but works with SDK 10.13.

Patrick
On 1. Apr 2020, 09:38 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> Herv?,
>
>
> > On 1/04/2020, at 6:19 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
> >
> > Thanks Simon. A couple of days ago we've started to use the R 4.0.0 alpha build from https://mac.r-project.org/ for the Bioconductor build system. Bioconductor packages depend on thousands of CRAN packages and one thing that makes it hard for us and for our users to build/check Bioconductor packages at the moment is the absence of Mac binary packages for R 4.0.0 on CRAN. Do you have an estimate of when they will become available?
> >
>
> Both the packages and R are now available. I always recommend using the Mac-master https://mac.R-project.org as "mirror" since that one is most up-to-date.
>
>
> > Another question is where they are going to be hosted on CRAN. We need to follow CRAN's layout for Bioconductor package repositories.
> >
>
>
> We have removed the extra layer, the package type is back to "mac.binary", so bin/macosx/contrib is the location.
>
> Cheers,
> Simon
>
>
>
> > Thanks!
> > H.
> >
> >
> > On 3/31/20 21:27, Simon Urbanek wrote:
> > > Dear Mac users,
> > > R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
> > > https://urldefense.proofpoint.com/v2/url?u=https-3A__mac.R-2Dproject.org&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=FJYxweW9WiMXbNMPpMM0bHXy020Gx9P-dHMrWmt7YzE&e=
> > > before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
> > > The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
> > > For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in https://urldefense.proofpoint.com/v2/url?u=http-3A__mac.r-2Dproject.org_libs-2D4_&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=3ZbcXBticg_8MfXltGKdQ9SFNqqeLqqwK_pUhEet7QY&e=
> > > The new R build system is in
> > > https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_R4&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=Mmt7_pVM5aUDR3hz93-e-PtadG7wSYpaZe8Ayi5Pv4I&e=
> > > Packages build system has not changed and is in
> > > https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_packages&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=eId6n08LVeIAMhMXe3jvLFKn9QGi4_by8owFreDDc84&e=
> > > We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
> > > Please test R pre-releases and provide feedback!
> > > Thanks,
> > > Simon
> > > _______________________________________________
> > > R-SIG-Mac mailing list
> > > R-SIG-Mac at r-project.org
> > > https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=ubqivtpb1OZ2I0MEbVvGlGDK-tfti3DPtIv4LQ-Ks6A&e=
> >
> > --
> > Herv? Pag?s
> >
> > Program in Computational Biology
> > Division of Public Health Sciences
> > Fred Hutchinson Cancer Research Center
> > 1100 Fairview Ave. N, M1-B514
> > P.O. Box 19024
> > Seattle, WA 98109-1024
> >
> > E-mail: hpages at fredhutch.org
> > Phone: (206) 667-5791
> > Fax: (206) 667-1319
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

	[[alternative HTML version deleted]]


From h@n@on @end|ng |rom dep@uw@edu  Wed Apr  1 13:30:18 2020
From: h@n@on @end|ng |rom dep@uw@edu (Bryan Hanson)
Date: Wed, 1 Apr 2020 07:30:18 -0400
Subject: [R-SIG-Mac] PCRE JIT compilation error
Message-ID: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>

On a fresh install of the binary from mac.r-project.org, if I simply do:

library()

I see:

R > library()
There were 30 warnings (use warnings() to see them)
R > warnings()
Warning messages:
1: In strsplit(x, "\n[ \t\n]*\n", perl = TRUE) : PCRE JIT compilation error
	'no more memory'
2: In FUN(X[[i]], ...) : PCRE JIT compilation error
	'no more memory'

etc.  The usual window with installed packages does open.

Starting the conversation here on the Mac list, though it may be a bigger problem.

Thanks, Bryan
****************
Prof. Bryan Hanson (emeritus)
Dept of Chemistry & Biochemistry
DePauw University
Greencastle IN 46135 USA
Web: academic.depauw.edu/~hanson/index.html
Repo: github.com/bryanhanson
Nerdy Blog: ChemoSpec.org
The Twit: @ProfBryanHanson
I?m usually @ -4 GMT/UTC

R > sessionInfo()
R version 4.0.0 alpha (2020-03-29 r78109)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Mojave 10.14.6

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods  
[7] base     

loaded via a namespace (and not attached):
[1] compiler_4.0.0












	[[alternative HTML version deleted]]


From D@n@Ke||ey @end|ng |rom D@|@C@  Wed Apr  1 13:36:53 2020
From: D@n@Ke||ey @end|ng |rom D@|@C@ (Daniel Kelley)
Date: Wed, 1 Apr 2020 11:36:53 +0000
Subject: [R-SIG-Mac] R 4.0: many PCRE JIT compilation errors
Message-ID: <785201FA-8641-4ED3-9060-DD6D92BAFD3A@dal.ca>

I am  trying to build the "oce" package, and I get many (tens of thousands) of warnings of form similar to

```R
Warning in gsub("\n \\.([^\n])", "\n  .\\1", gsub("\n[ \t]*\n", "\n .\n ",  :
  PCRE JIT compilation error
	'no more memory'
```

I am working through the build/check/install in stages, and documenting things at

https://github.com/dankelley/oce/issues/1674

in case that's of any help to anyone else.  Perhaps my grep() and gsub() calls are poorly framed, but I've never seen this warning before, and I suspect the warnings (or some of them) may be coming from he "R CMD" stage itself, so my guess is that this is an indication of a problem with R-4.0/macos.

I wish to note my deep thanks to the team behind macos development for R.

PS. I'm glad to hear that there may be an upcoming macos equivalent to winbuilder, because I have had very uneven success with rhub (working one day, failing another, on identical code, etc).

Dan E. Kelley [he/him/his 314ppm]
Professor and Senator
Department of Oceanography
Dalhousie University
PO BOX 15000
Halifax, NS, Canada B3H 4R2
Dan.Kelley at Dal.CA


From kr@wut@chke @end|ng |rom un|-pot@d@m@de  Wed Apr  1 14:36:44 2020
From: kr@wut@chke @end|ng |rom un|-pot@d@m@de (Matthias Krawutschke)
Date: Wed, 1 Apr 2020 14:36:44 +0200
Subject: [R-SIG-Mac] PCRE JIT compilation error
In-Reply-To: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
References: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
Message-ID: <001701d60822$370ae720$a520b560$@uni-potsdam.de>

Hello together,
i?ve got this message too, but my systems show me first the list of all installed libraries on my MAC.

Best regards and take care?.



Matthias Krawutschke, Dipl. Inf.

Universit?t Potsdam
ZIM - Zentrum f?r Informationstechnologie und Medienmanagement
Team Infrastruktur Server und Storage 
Spezialized: High-Performance-Computing and Kubernetes


Campus Am Neuen Palais: Am Neuen Palais 10 | 14469 Potsdam
Tel: +49 331 977-153065, Fax: +49 331 977-1750

Internet: https://www.uni-potsdam.de/de/zim/angebote-loesungen/hpc.html


-----Urspr?ngliche Nachricht-----
Von: R-SIG-Mac <r-sig-mac-bounces at r-project.org> Im Auftrag von Bryan Hanson
Gesendet: Mittwoch, 1. April 2020 13:30
An: r-sig-mac R <r-sig-mac at r-project.org>
Betreff: [R-SIG-Mac] PCRE JIT compilation error

On a fresh install of the binary from mac.r-project.org, if I simply do:

library()

I see:

R > library()
There were 30 warnings (use warnings() to see them) R > warnings() Warning messages:
1: In strsplit(x, "\n[ \t\n]*\n", perl = TRUE) : PCRE JIT compilation error
	'no more memory'
2: In FUN(X[[i]], ...) : PCRE JIT compilation error
	'no more memory'

etc.  The usual window with installed packages does open.

Starting the conversation here on the Mac list, though it may be a bigger problem.

Thanks, Bryan
****************
Prof. Bryan Hanson (emeritus)
Dept of Chemistry & Biochemistry
DePauw University
Greencastle IN 46135 USA
Web: academic.depauw.edu/~hanson/index.html
Repo: github.com/bryanhanson
Nerdy Blog: ChemoSpec.org
The Twit: @ProfBryanHanson
I?m usually @ -4 GMT/UTC

R > sessionInfo()
R version 4.0.0 alpha (2020-03-29 r78109)
Platform: x86_64-apple-darwin17.0 (64-bit) Running under: macOS Mojave 10.14.6

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods  
[7] base     

loaded via a namespace (and not attached):
[1] compiler_4.0.0












	[[alternative HTML version deleted]]

_______________________________________________
R-SIG-Mac mailing list
R-SIG-Mac at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From h@n@on @end|ng |rom dep@uw@edu  Wed Apr  1 15:20:23 2020
From: h@n@on @end|ng |rom dep@uw@edu (Bryan Hanson)
Date: Wed, 1 Apr 2020 09:20:23 -0400
Subject: [R-SIG-Mac] PCRE JIT compilation error
In-Reply-To: <001701d60822$370ae720$a520b560$@uni-potsdam.de>
References: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
 <001701d60822$370ae720$a520b560$@uni-potsdam.de>
Message-ID: <8FF70D61-A143-45A6-BEA6-ED00FCA993FD@depauw.edu>

Having played with things a bit more, this message appears all over the place as people are beginning to report.

Another simple way to trigger it is to do:

?dist

Bryan

> On Apr 1, 2020, at 8:36 AM, Matthias Krawutschke <krawutschke at uni-potsdam.de> wrote:
> 
> Hello together,
> i?ve got this message too, but my systems show me first the list of all installed libraries on my MAC.
> 
> Best regards and take care?.
> 
> 
> 
> Matthias Krawutschke, Dipl. Inf.
> 
> Universit?t Potsdam
> ZIM - Zentrum f?r Informationstechnologie und Medienmanagement
> Team Infrastruktur Server und Storage 
> Spezialized: High-Performance-Computing and Kubernetes
> 
> 
> Campus Am Neuen Palais: Am Neuen Palais 10 | 14469 Potsdam
> Tel: +49 331 977-153065, Fax: +49 331 977-1750
> 
> Internet: https://www.uni-potsdam.de/de/zim/angebote-loesungen/hpc.html
> 
> 
> -----Urspr?ngliche Nachricht-----
> Von: R-SIG-Mac <r-sig-mac-bounces at r-project.org> Im Auftrag von Bryan Hanson
> Gesendet: Mittwoch, 1. April 2020 13:30
> An: r-sig-mac R <r-sig-mac at r-project.org>
> Betreff: [R-SIG-Mac] PCRE JIT compilation error
> 
> On a fresh install of the binary from mac.r-project.org, if I simply do:
> 
> library()
> 
> I see:
> 
> R > library()
> There were 30 warnings (use warnings() to see them) R > warnings() Warning messages:
> 1: In strsplit(x, "\n[ \t\n]*\n", perl = TRUE) : PCRE JIT compilation error
> 	'no more memory'
> 2: In FUN(X[[i]], ...) : PCRE JIT compilation error
> 	'no more memory'
> 
> etc.  The usual window with installed packages does open.
> 
> Starting the conversation here on the Mac list, though it may be a bigger problem.
> 
> Thanks, Bryan
> ****************
> Prof. Bryan Hanson (emeritus)
> Dept of Chemistry & Biochemistry
> DePauw University
> Greencastle IN 46135 USA
> Web: academic.depauw.edu/~hanson/index.html
> Repo: github.com/bryanhanson
> Nerdy Blog: ChemoSpec.org
> The Twit: @ProfBryanHanson
> I?m usually @ -4 GMT/UTC
> 
> R > sessionInfo()
> R version 4.0.0 alpha (2020-03-29 r78109)
> Platform: x86_64-apple-darwin17.0 (64-bit) Running under: macOS Mojave 10.14.6
> 
> Matrix products: default
> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods  
> [7] base     
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.0.0
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From b@|@mut2 @end|ng |rom ||||no|@@edu  Wed Apr  1 15:30:34 2020
From: b@|@mut2 @end|ng |rom ||||no|@@edu (Balamuta, James Joseph)
Date: Wed, 1 Apr 2020 13:30:34 +0000
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
Message-ID: <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>

Simon,

Thanks for the overview! A few quick questions:

1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again? 
2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
3. How likely is the oldest system requirement to be bumped in a patch release? 

Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help! 

Best,

JJB

?On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:

    Dear Mac users,
    
    R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
    
    https://mac.R-project.org
    
    before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
    
    The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
    
    For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
    
    The new R build system is in
    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
    Packages build system has not changed and is in
    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
    
    We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
    
    Please test R pre-releases and provide feedback!
    
    Thanks,
    Simon
    
    _______________________________________________
    R-SIG-Mac mailing list
    R-SIG-Mac at r-project.org
    https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    


From pd@|gd @end|ng |rom gm@||@com  Wed Apr  1 15:37:15 2020
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Wed, 1 Apr 2020 15:37:15 +0200
Subject: [R-SIG-Mac] PCRE JIT compilation error
In-Reply-To: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
References: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
Message-ID: <04A5E82D-5A13-4DDE-8BC8-08416B388942@gmail.com>

Yes, this has been happening to a number of people, including Simon Urbanek...

Oddly enough, I'm seeing nothing of the sort on my slightly different build setup: 

clang8 + gfortran6.1 as per https://cran.r-project.org/bin/macosx/tools
PCRE2 from http://mac.r-project.org/libs/ 

$ cat config.site 
prefix=$HOME/tmp
CC=clang
CXX=clang++
with_blas="-framework vecLib"
with_lapack=yes
x_includes=/opt/X11/include
x_libraries=/opt/X11/lib
CURL_CONFIG=/usr/bin/curl-config

(And no, it is not because JIT is off:

> options("PCRE_use_JIT")
$PCRE_use_JIT
[1] TRUE

)


-pd

> On 1 Apr 2020, at 13:30 , Bryan Hanson <hanson at depauw.edu> wrote:
> 
> On a fresh install of the binary from mac.r-project.org, if I simply do:
> 
> library()
> 
> I see:
> 
> R > library()
> There were 30 warnings (use warnings() to see them)
> R > warnings()
> Warning messages:
> 1: In strsplit(x, "\n[ \t\n]*\n", perl = TRUE) : PCRE JIT compilation error
> 	'no more memory'
> 2: In FUN(X[[i]], ...) : PCRE JIT compilation error
> 	'no more memory'
> 
> etc.  The usual window with installed packages does open.
> 
> Starting the conversation here on the Mac list, though it may be a bigger problem.
> 
> Thanks, Bryan
> ****************
> Prof. Bryan Hanson (emeritus)
> Dept of Chemistry & Biochemistry
> DePauw University
> Greencastle IN 46135 USA
> Web: academic.depauw.edu/~hanson/index.html
> Repo: github.com/bryanhanson
> Nerdy Blog: ChemoSpec.org
> The Twit: @ProfBryanHanson
> I?m usually @ -4 GMT/UTC
> 
> R > sessionInfo()
> R version 4.0.0 alpha (2020-03-29 r78109)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Mojave 10.14.6
> 
> Matrix products: default
> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods  
> [7] base     
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.0.0
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From bob @end|ng |rom rud@|@  Wed Apr  1 15:38:30 2020
From: bob @end|ng |rom rud@|@ (Bob Rudis)
Date: Wed, 1 Apr 2020 09:38:30 -0400
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
Message-ID: <B364FBC3-6797-4573-AA4F-198F84B6A3BA@rud.is>

I shall pile on with an additional offer of assistance, Simon and a huge #ty for this and all the work you do.

> On Apr 1, 2020, at 09:30, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
> 
> Simon,
> 
> Thanks for the overview! A few quick questions:
> 
> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again? 
> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
> 3. How likely is the oldest system requirement to be bumped in a patch release? 
> 
> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help! 
> 
> Best,
> 
> JJB
> 
> ?On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
> 
>    Dear Mac users,
> 
>    R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
> 
>    https://mac.R-project.org
> 
>    before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
> 
>    The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
> 
>    For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
> 
>    The new R build system is in
>    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>    Packages build system has not changed and is in
>    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
> 
>    We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
> 
>    Please test R pre-releases and provide feedback!
> 
>    Thanks,
>    Simon
> 
>    _______________________________________________
>    R-SIG-Mac mailing list
>    R-SIG-Mac at r-project.org
>    https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Wed Apr  1 16:07:41 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Wed, 1 Apr 2020 16:07:41 +0200
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <B364FBC3-6797-4573-AA4F-198F84B6A3BA@rud.is>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <B364FBC3-6797-4573-AA4F-198F84B6A3BA@rud.is>
Message-ID: <2350cf0f-3efa-46d1-94f3-0f4dcfbd289b@Spark>

The same goes here regarding support.

I am (co-)maintaining a package on ropensci focusing on provider-agnostic CI approaches for R (tic) and have quite some experience with all the little culprits there.

Since you mentioned Travis: Be aware that the R community is (slowly but actively) moving away from Travis for a few reasons.
Also on GitHub Actions you can only build on 10.15 (Catalina) right now.

Best, Patrick
On 1. Apr 2020, 15:41 +0200, Bob Rudis <bob at rud.is>, wrote:
> I shall pile on with an additional offer of assistance, Simon and a huge #ty for this and all the work you do.
>
> > On Apr 1, 2020, at 09:30, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
> >
> > Simon,
> >
> > Thanks for the overview! A few quick questions:
> >
> > 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again?
> > 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
> > 3. How likely is the oldest system requirement to be bumped in a patch release?
> >
> > Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help!
> >
> > Best,
> >
> > JJB
> >
> > On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
> >
> > Dear Mac users,
> >
> > R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
> >
> > https://mac.R-project.org
> >
> > before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
> >
> > The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
> >
> > For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
> >
> > The new R build system is in
> > https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
> > Packages build system has not changed and is in
> > https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
> >
> > We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
> >
> > Please test R pre-releases and provide feedback!
> >
> > Thanks,
> > Simon
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

	[[alternative HTML version deleted]]


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Wed Apr  1 16:14:30 2020
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Wed, 1 Apr 2020 15:14:30 +0100
Subject: [R-SIG-Mac] PCRE JIT compilation error
In-Reply-To: <04A5E82D-5A13-4DDE-8BC8-08416B388942@gmail.com>
References: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
 <04A5E82D-5A13-4DDE-8BC8-08416B388942@gmail.com>
Message-ID: <eccecfe8-1c6b-925a-42cc-6db2e3da22cf@stats.ox.ac.uk>

It seems to depend on the OS version: there are known issues with PCRE 
JIT and macOS 10.15 not just with R, but not for everyone.

Similarly, installation issues of some Rcpp-using packages is only known 
to occur under 10.15 and not with 10.13 (which is what will be used for 
building binary packages and has been extensively tested there).  These 
should go away with the next Rcpp update, available pro tem via

install.packages("Rcpp", repos="https://rcppcore.github.io/drat")

So it really is necessary to remind people to follow the posting guide 
and include the output from sessionInfo() or at the very least

 > osVersion
[1] "macOS Catalina 10.15.4"


On 01/04/2020 14:37, peter dalgaard wrote:
> Yes, this has been happening to a number of people, including Simon Urbanek...
> 
> Oddly enough, I'm seeing nothing of the sort on my slightly different build setup:
> 
> clang8 + gfortran6.1 as per https://cran.r-project.org/bin/macosx/tools
> PCRE2 from http://mac.r-project.org/libs/
> 
> $ cat config.site
> prefix=$HOME/tmp
> CC=clang
> CXX=clang++
> with_blas="-framework vecLib"
> with_lapack=yes
> x_includes=/opt/X11/include
> x_libraries=/opt/X11/lib
> CURL_CONFIG=/usr/bin/curl-config
> 
> (And no, it is not because JIT is off:
> 
>> options("PCRE_use_JIT")
> $PCRE_use_JIT
> [1] TRUE
> 
> )
> 
> 
> -pd
> 
>> On 1 Apr 2020, at 13:30 , Bryan Hanson <hanson at depauw.edu> wrote:
>>
>> On a fresh install of the binary from mac.r-project.org, if I simply do:
>>
>> library()
>>
>> I see:
>>
>> R > library()
>> There were 30 warnings (use warnings() to see them)
>> R > warnings()
>> Warning messages:
>> 1: In strsplit(x, "\n[ \t\n]*\n", perl = TRUE) : PCRE JIT compilation error
>> 	'no more memory'
>> 2: In FUN(X[[i]], ...) : PCRE JIT compilation error
>> 	'no more memory'
>>
>> etc.  The usual window with installed packages does open.
>>
>> Starting the conversation here on the Mac list, though it may be a bigger problem.
>>
>> Thanks, Bryan
>> ****************
>> Prof. Bryan Hanson (emeritus)
>> Dept of Chemistry & Biochemistry
>> DePauw University
>> Greencastle IN 46135 USA
>> Web: academic.depauw.edu/~hanson/index.html
>> Repo: github.com/bryanhanson
>> Nerdy Blog: ChemoSpec.org
>> The Twit: @ProfBryanHanson
>> I?m usually @ -4 GMT/UTC
>>
>> R > sessionInfo()
>> R version 4.0.0 alpha (2020-03-29 r78109)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Mojave 10.14.6
>>
>> Matrix products: default
>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods
>> [7] base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>> 	[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From pd@|gd @end|ng |rom gm@||@com  Wed Apr  1 16:26:47 2020
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Wed, 1 Apr 2020 16:26:47 +0200
Subject: [R-SIG-Mac] PCRE JIT compilation error
In-Reply-To: <eccecfe8-1c6b-925a-42cc-6db2e3da22cf@stats.ox.ac.uk>
References: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
 <04A5E82D-5A13-4DDE-8BC8-08416B388942@gmail.com>
 <eccecfe8-1c6b-925a-42cc-6db2e3da22cf@stats.ox.ac.uk>
Message-ID: <B01F5B5A-4618-4E3C-9EF5-D82EAE79D23B@gmail.com>

Yes, sorry:

> osVersion
[1] "macOS Mojave 10.14.6"


> On 1 Apr 2020, at 16:14 , Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> 
> It seems to depend on the OS version: there are known issues with PCRE JIT and macOS 10.15 not just with R, but not for everyone.
> 
> Similarly, installation issues of some Rcpp-using packages is only known to occur under 10.15 and not with 10.13 (which is what will be used for building binary packages and has been extensively tested there).  These should go away with the next Rcpp update, available pro tem via
> 
> install.packages("Rcpp", repos="https://rcppcore.github.io/drat")
> 
> So it really is necessary to remind people to follow the posting guide and include the output from sessionInfo() or at the very least
> 
> > osVersion
> [1] "macOS Catalina 10.15.4"
> 
> 
> On 01/04/2020 14:37, peter dalgaard wrote:
>> Yes, this has been happening to a number of people, including Simon Urbanek...
>> Oddly enough, I'm seeing nothing of the sort on my slightly different build setup:
>> clang8 + gfortran6.1 as per https://cran.r-project.org/bin/macosx/tools
>> PCRE2 from http://mac.r-project.org/libs/
>> $ cat config.site
>> prefix=$HOME/tmp
>> CC=clang
>> CXX=clang++
>> with_blas="-framework vecLib"
>> with_lapack=yes
>> x_includes=/opt/X11/include
>> x_libraries=/opt/X11/lib
>> CURL_CONFIG=/usr/bin/curl-config
>> (And no, it is not because JIT is off:
>>> options("PCRE_use_JIT")
>> $PCRE_use_JIT
>> [1] TRUE
>> )
>> -pd
>>> On 1 Apr 2020, at 13:30 , Bryan Hanson <hanson at depauw.edu> wrote:
>>> 
>>> On a fresh install of the binary from mac.r-project.org, if I simply do:
>>> 
>>> library()
>>> 
>>> I see:
>>> 
>>> R > library()
>>> There were 30 warnings (use warnings() to see them)
>>> R > warnings()
>>> Warning messages:
>>> 1: In strsplit(x, "\n[ \t\n]*\n", perl = TRUE) : PCRE JIT compilation error
>>> 	'no more memory'
>>> 2: In FUN(X[[i]], ...) : PCRE JIT compilation error
>>> 	'no more memory'
>>> 
>>> etc.  The usual window with installed packages does open.
>>> 
>>> Starting the conversation here on the Mac list, though it may be a bigger problem.
>>> 
>>> Thanks, Bryan
>>> ****************
>>> Prof. Bryan Hanson (emeritus)
>>> Dept of Chemistry & Biochemistry
>>> DePauw University
>>> Greencastle IN 46135 USA
>>> Web: academic.depauw.edu/~hanson/index.html
>>> Repo: github.com/bryanhanson
>>> Nerdy Blog: ChemoSpec.org
>>> The Twit: @ProfBryanHanson
>>> I?m usually @ -4 GMT/UTC
>>> 
>>> R > sessionInfo()
>>> R version 4.0.0 alpha (2020-03-29 r78109)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Mojave 10.14.6
>>> 
>>> Matrix products: default
>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>> 
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods
>>> [7] base
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.0.0
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 	[[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From gor@n@bro@trom @end|ng |rom umu@@e  Wed Apr  1 16:43:25 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Wed, 1 Apr 2020 16:43:25 +0200
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
Message-ID: <985b5ec0-8970-c909-57fc-b8b8e602e349@umu.se>

Hello JJB,

Den 2020-04-01 kl. 15:30, skrev Balamuta, James Joseph:
> Simon,
> 
> Thanks for the overview! A few quick questions:
> 
> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again?
> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?

One reason is that I am on 10.13(.6) without possibility to upgrade to 
10.14 (MacBook Pro & Air, 2010).

> 3. How likely is the oldest system requirement to be bumped in a patch release?

Hopefully very unlikely;)

Best, G?ran

PS. I have installed and run the 4.0.0 binary without any problem (so far).

> 
> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help!
> 
> Best,
> 
> JJB
> 
> ?On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
> 
>      Dear Mac users,
>      
>      R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>      
>      https://mac.R-project.org
>      
>      before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>      
>      The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>      
>      For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
>      
>      The new R build system is in
>      https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>      Packages build system has not changed and is in
>      https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
>      
>      We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>      
>      Please test R pre-releases and provide feedback!
>      
>      Thanks,
>      Simon
>      
>      _______________________________________________
>      R-SIG-Mac mailing list
>      R-SIG-Mac at r-project.org
>      https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>      
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From bob @end|ng |rom rud@|@  Wed Apr  1 17:08:11 2020
From: bob @end|ng |rom rud@|@ (Bob Rudis)
Date: Wed, 1 Apr 2020 11:08:11 -0400
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
Message-ID: <547A98ED-988C-476E-BDE5-CF0233779B28@rud.is>

Hey Simon!

At the bottom of https://mac.r-project.org/libs-4/ is:

    curl -O http://mac.R_project.org/libs-4/pkgconfig-0.28-darwin.17-x86_64.tar.gz

While most folks will figure it out, it should be:

    curl -O http://mac.R-project.org/libs-4/pkgconfig-0.28-darwin.17-x86_64.tar.gz

(dash instead of underline).

-boB


> On Apr 1, 2020, at 09:30, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
> 
> Simon,
> 
> Thanks for the overview! A few quick questions:
> 
> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again? 
> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
> 3. How likely is the oldest system requirement to be bumped in a patch release? 
> 
> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help! 
> 
> Best,
> 
> JJB
> 
> ?On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
> 
>    Dear Mac users,
> 
>    R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
> 
>    https://mac.R-project.org
> 
>    before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
> 
>    The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
> 
>    For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
> 
>    The new R build system is in
>    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>    Packages build system has not changed and is in
>    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
> 
>    We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
> 
>    Please test R pre-releases and provide feedback!
> 
>    Thanks,
>    Simon
> 
>    _______________________________________________
>    R-SIG-Mac mailing list
>    R-SIG-Mac at r-project.org
>    https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From hp@ge@ @end|ng |rom |redhutch@org  Wed Apr  1 19:27:55 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 1 Apr 2020 10:27:55 -0700
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <42043961-2CD4-42B0-A8DD-6EEDBF404B58@R-project.org>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <6c604991-51f4-c6f7-5328-c708cd569007@fredhutch.org>
 <42043961-2CD4-42B0-A8DD-6EEDBF404B58@R-project.org>
Message-ID: <079550de-acaf-2e52-069c-fea92df55be6@fredhutch.org>

I see bin/macosx/contrib/4.0/ now (e.g. 
https://cran.r-project.org/bin/macosx/contrib/4.0/). Thanks!

H.

On 4/1/20 00:37, Simon Urbanek wrote:
> Herv?,
> 
> 
>> On 1/04/2020, at 6:19 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>>
>> Thanks Simon. A couple of days ago we've started to use the R 4.0.0 alpha build from https://urldefense.proofpoint.com/v2/url?u=https-3A__mac.r-2Dproject.org_&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=SgN9XTf8oSzk28ZilVDsjOU2Fpf0lRzDmF8QEBnwJno&s=n2gZ5tfjXIG7SNEmqQd8-QMsUj5t6y0-r1r-qaCgd7I&e=  for the Bioconductor build system. Bioconductor packages depend on thousands of CRAN packages and one thing that makes it hard for us and for our users to build/check Bioconductor packages at the moment is the absence of Mac binary packages for R 4.0.0 on CRAN. Do you have an estimate of when they will become available?
>>
> 
> Both the packages and R are now available. I always recommend using the Mac-master https://urldefense.proofpoint.com/v2/url?u=https-3A__mac.R-2Dproject.org&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=SgN9XTf8oSzk28ZilVDsjOU2Fpf0lRzDmF8QEBnwJno&s=-zAfQSmtuRs4uqHBVFcX5ssEWKX2vsSrEqVTwxI_WuM&e=  as "mirror" since that one is most up-to-date.
> 
> 
>> Another question is where they are going to be hosted on CRAN. We need to follow CRAN's layout for Bioconductor package repositories.
>>
> 
> 
> We have removed the extra layer, the package type is back to "mac.binary", so bin/macosx/contrib is the location.
> 
> Cheers,
> Simon
> 
> 
> 
>> Thanks!
>> H.
>>
>>
>> On 3/31/20 21:27, Simon Urbanek wrote:
>>> Dear Mac users,
>>> R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__mac.R-2Dproject.org&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=FJYxweW9WiMXbNMPpMM0bHXy020Gx9P-dHMrWmt7YzE&e=
>>> before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>>> The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>>> For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in https://urldefense.proofpoint.com/v2/url?u=http-3A__mac.r-2Dproject.org_libs-2D4_&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=3ZbcXBticg_8MfXltGKdQ9SFNqqeLqqwK_pUhEet7QY&e=
>>> The new R build system is in
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_R4&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=Mmt7_pVM5aUDR3hz93-e-PtadG7wSYpaZe8Ayi5Pv4I&e=
>>> Packages build system has not changed and is in
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_packages&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=eId6n08LVeIAMhMXe3jvLFKn9QGi4_by8owFreDDc84&e=
>>> We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>>> Please test R pre-releases and provide feedback!
>>> Thanks,
>>> Simon
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=ubqivtpb1OZ2I0MEbVvGlGDK-tfti3DPtIv4LQ-Ks6A&e=
>>
>> -- 
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fredhutch.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=SgN9XTf8oSzk28ZilVDsjOU2Fpf0lRzDmF8QEBnwJno&s=YYSVtiQcmB4RkVD99iuy0he9BllxyvVdXbwhUSNO4OA&e=
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From c@r| @end|ng |rom w|ttho|t@com  Wed Apr  1 20:48:50 2020
From: c@r| @end|ng |rom w|ttho|t@com (Carl Witthoft)
Date: Wed, 1 Apr 2020 14:48:50 -0400
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
Message-ID: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>


  If I should ask over at r-sig-debian instead of here, please tell me. 
I don't wish to clog r-sig-mac with off-topic stuff.


I've been watching the massive headaches people are dealing with trying 
to keep R fully compatible with each MacOS X upgrade,  I'm wondering 
whether replacing my iMac (2009) with a new Mac really makes sense from 
an R - user point of view, as opposed to getting some inexpensive 
desktop and installing Linux.  I know I can run R and RStudio under 
Linux, for example,  but don't know what limitations, if any there are 
when it comes to building packages from source, getting compatible 
compilers,  and so on.

What have some of you 'power R users' discovered when/if you tried to 
build , or incorporate Bioconductor or other repository's packages under 
Linux?


-- 
Carl Witthoft
carl at witthoft.com
resume: https://app.box.com/file/498153801347


From bgunter@4567 @end|ng |rom gm@||@com  Wed Apr  1 20:57:15 2020
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Wed, 1 Apr 2020 11:57:15 -0700
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
In-Reply-To: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
Message-ID: <CAGxFJbRDCLSU4SUEyDcoR-e9AzT3p1THEej3A+k5bZmCVPUPAg@mail.gmail.com>

As you are asking about R experience from Unix-alike OS users, I think
you would clearly do better to ask on the - debian and/or -fedora
sigs.

Bert Gunter

"The trouble with having an open mind is that people keep coming along
and sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )

On Wed, Apr 1, 2020 at 11:49 AM Carl Witthoft <carl at witthoft.com> wrote:
>
>
>   If I should ask over at r-sig-debian instead of here, please tell me.
> I don't wish to clog r-sig-mac with off-topic stuff.
>
>
> I've been watching the massive headaches people are dealing with trying
> to keep R fully compatible with each MacOS X upgrade,  I'm wondering
> whether replacing my iMac (2009) with a new Mac really makes sense from
> an R - user point of view, as opposed to getting some inexpensive
> desktop and installing Linux.  I know I can run R and RStudio under
> Linux, for example,  but don't know what limitations, if any there are
> when it comes to building packages from source, getting compatible
> compilers,  and so on.
>
> What have some of you 'power R users' discovered when/if you tried to
> build , or incorporate Bioconductor or other repository's packages under
> Linux?
>
>
> --
> Carl Witthoft
> carl at witthoft.com
> resume: https://app.box.com/file/498153801347
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From hp@ge@ @end|ng |rom |redhutch@org  Wed Apr  1 21:27:52 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 1 Apr 2020 12:27:52 -0700
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
In-Reply-To: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
Message-ID: <c916a46d-0138-0c8f-fc97-f4efd290d38b@fredhutch.org>

My 2 cents: Just go for the inexpensive desktop + Linux. Debian-based or 
RedHat-based distros are great for developing R/Bioconductor packages. 
I've been maintaining/troubleshooting package builds on 
Linux/Windows/Mac for 15 years and Linux is **by far** the easiest 
platform to deal with. Still a mystery to me why one would choose macOS 
for developing R/Bioconductor packages.

H.

On 4/1/20 11:48, Carl Witthoft wrote:
> 
>  ?If I should ask over at r-sig-debian instead of here, please tell me. 
> I don't wish to clog r-sig-mac with off-topic stuff.
> 
> 
> I've been watching the massive headaches people are dealing with trying 
> to keep R fully compatible with each MacOS X upgrade,? I'm wondering 
> whether replacing my iMac (2009) with a new Mac really makes sense from 
> an R - user point of view, as opposed to getting some inexpensive 
> desktop and installing Linux.? I know I can run R and RStudio under 
> Linux, for example,? but don't know what limitations, if any there are 
> when it comes to building packages from source, getting compatible 
> compilers,? and so on.
> 
> What have some of you 'power R users' discovered when/if you tried to 
> build , or incorporate Bioconductor or other repository's packages under 
> Linux?
> 
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr  1 22:29:37 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 2 Apr 2020 09:29:37 +1300
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <bb3ab29e-902d-4e91-8d40-d58c84fd6c5f@Spark>
References: <1c9e9c47-3206-4f96-9d7e-ee11b0b7efba@Spark>
 <bb3ab29e-902d-4e91-8d40-d58c84fd6c5f@Spark>
Message-ID: <4C6D40BA-2382-42E1-8349-D3D065E934C6@R-project.org>

Patrick,

firstly, please don't post such things - they are often wrong (as are parts of what you included it this e-mail) and it's impossible for us to track all blogs that have incorrect advice. Unfortunately, a lot of the issues we see out there are due to people finding bad advice and using it. Ideally, it should be sufficient to point to the official R documentation since that is the canonical source. If you post a blog, it should point to the official documentation. If that documentation is missing or not covering a need, please post here so we can fix it. It is more important that the official source is complete and much better for the community than to have random tidbits that may or may not be correct floating around.

As for the script, please do not use R tar balls - first, you're picking the wrong one (there is no R-devel for el-capitan. R 4.0.0 pre-releases are in R-4-0-branch and they are built for high sierra). Second, the tar ball doesn't have the entitlements enabled so it doesn't match the release. Please use the signed R package. This may change, but with the complications of the Apple notarization process that's what it is today.

Then there is the question of the SDK. What are you trying to setup here? What you posted here has nothing to do with the CRAN setup. You don't need 10.13 SDK to compile igraph, it compiles just fine using stock command line tools on High Sierra which is what we use on CRAN. You can, of course, pick any SDK you like, but please don't tell people that's what they should do. One of the most annoying issues is that people are recommending messing with Makevars which is incredibly fragile and will cause things to break left and right with any update. It's ok to do that for a very special purpose, but no regular user should have Makevars in their home.

So if you really want to serve the community, please suggest improvements to the official documentation and post them here. If you have special needs, ask about them here.

Thanks,
Simon



> On 1/04/2020, at 9:47 PM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> 
> Thanks Simon,
> 
> This simplifies things a lot and clears up the process. While the instructions on https://mac.r-project.org/ are more clear now I think there is still simplification needed for the install process and custom modifications that are needed.
> This not only applies to the dev page but finally also to production end users if the SDK 10.15 issues (see below) persists.
> 
> I?ve scripted all installation steps (R-devel, gfortran, SDK 10.13) and will probably write a blog post about it to make the R community more aware about it. Let me know if anything is wrong about it - otherwise I?ll use the code below in the blog post.
> 
> # install R-devel
> wget https://mac.r-project.org/el-capitan/R-devel/R-devel-el-capitan-sa-x86_64.tar.gz
> sudo tar fvxz R*.tar.gz -C /
> rm R-devel-el-capitan-sa-x86_64.tar.gz
> 
> # install gfortran
> wget https://github.com/fxcoudert/gfortran-for-macOS/releases/download/8.2/gfortran-8.2-Mojave.dmg
> sudo hdiutil attach gfortran*.dmg
> sudo installer -package /Volumes/gfortran*/gfortran*/gfortran*.pkg -target /
> sudo hdiutil detach /Volumes/gfortran-8.2-Mojave
> 
> # install SDK10.13
> wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.13.sdk.tar.xz
> tar fvxz MacOSX10.13.sdk.tar.xz
> sudo mv MacOSX10.13.sdk /Library/Developer/CommandLineTools/SDKs/
> rm -rf MacOSX10.13*
> 
> In addition people need to set custom CFLAGS in ~/.R/Makevars to actually use it:
> 
> CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> CCFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> CXXFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> CPPFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> 
> In addition there really seem to be major problems regarding the 10.15 SDK. For example, {igraph} which is a package on which lots of other packages depend, cannot be installed from source with SDK 10.15 but works with SDK 10.13.
> 
> Patrick
> On 1. Apr 2020, 09:38 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
>> Herv?,
>> 
>> 
>>> On 1/04/2020, at 6:19 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>>> 
>>> Thanks Simon. A couple of days ago we've started to use the R 4.0.0 alpha build from https://mac.r-project.org/ for the Bioconductor build system. Bioconductor packages depend on thousands of CRAN packages and one thing that makes it hard for us and for our users to build/check Bioconductor packages at the moment is the absence of Mac binary packages for R 4.0.0 on CRAN. Do you have an estimate of when they will become available?
>>> 
>> 
>> Both the packages and R are now available. I always recommend using the Mac-master https://mac.R-project.org as "mirror" since that one is most up-to-date.
>> 
>> 
>>> Another question is where they are going to be hosted on CRAN. We need to follow CRAN's layout for Bioconductor package repositories.
>>> 
>> 
>> 
>> We have removed the extra layer, the package type is back to "mac.binary", so bin/macosx/contrib is the location.
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>> Thanks!
>>> H.
>>> 
>>> 
>>> On 3/31/20 21:27, Simon Urbanek wrote:
>>>> Dear Mac users,
>>>> R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__mac.R-2Dproject.org&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=FJYxweW9WiMXbNMPpMM0bHXy020Gx9P-dHMrWmt7YzE&e=
>>>> before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>>>> The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>>>> For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in https://urldefense.proofpoint.com/v2/url?u=http-3A__mac.r-2Dproject.org_libs-2D4_&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=3ZbcXBticg_8MfXltGKdQ9SFNqqeLqqwK_pUhEet7QY&e=
>>>> The new R build system is in
>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_R4&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=Mmt7_pVM5aUDR3hz93-e-PtadG7wSYpaZe8Ayi5Pv4I&e=
>>>> Packages build system has not changed and is in
>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_packages&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=eId6n08LVeIAMhMXe3jvLFKn9QGi4_by8owFreDDc84&e=
>>>> We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>>>> Please test R pre-releases and provide feedback!
>>>> Thanks,
>>>> Simon
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=ubqivtpb1OZ2I0MEbVvGlGDK-tfti3DPtIv4LQ-Ks6A&e=
>>> 
>>> --
>>> Herv? Pag?s
>>> 
>>> Program in Computational Biology
>>> Division of Public Health Sciences
>>> Fred Hutchinson Cancer Research Center
>>> 1100 Fairview Ave. N, M1-B514
>>> P.O. Box 19024
>>> Seattle, WA 98109-1024
>>> 
>>> E-mail: hpages at fredhutch.org
>>> Phone: (206) 667-5791
>>> Fax: (206) 667-1319
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr  1 22:46:22 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 2 Apr 2020 09:46:22 +1300
Subject: [R-SIG-Mac] PCRE JIT compilation error
In-Reply-To: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
References: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
Message-ID: <AB359FD0-F6BD-45BF-AB25-DAE6AC30157D@R-project.org>

Bryan,

thanks! There seems to be an issue with PCRE2 JIT on Mojave. I have now disabled JIT in PCRE2 which seems to be the recommended fix 

I have built the latest version of R 4.0.0 alpha - it is now available from

http://mac.r-project.org/high-sierra/R-4.0-branch/R-4.0-branch.pkg

as usual.

Thanks,
Simon


> On 2/04/2020, at 12:30 AM, Bryan Hanson <hanson at depauw.edu> wrote:
> 
> On a fresh install of the binary from mac.r-project.org, if I simply do:
> 
> library()
> 
> I see:
> 
> R > library()
> There were 30 warnings (use warnings() to see them)
> R > warnings()
> Warning messages:
> 1: In strsplit(x, "\n[ \t\n]*\n", perl = TRUE) : PCRE JIT compilation error
> 	'no more memory'
> 2: In FUN(X[[i]], ...) : PCRE JIT compilation error
> 	'no more memory'
> 
> etc.  The usual window with installed packages does open.
> 
> Starting the conversation here on the Mac list, though it may be a bigger problem.
> 
> Thanks, Bryan
> ****************
> Prof. Bryan Hanson (emeritus)
> Dept of Chemistry & Biochemistry
> DePauw University
> Greencastle IN 46135 USA
> Web: academic.depauw.edu/~hanson/index.html
> Repo: github.com/bryanhanson
> Nerdy Blog: ChemoSpec.org
> The Twit: @ProfBryanHanson
> I?m usually @ -4 GMT/UTC
> 
> R > sessionInfo()
> R version 4.0.0 alpha (2020-03-29 r78109)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Mojave 10.14.6
> 
> Matrix products: default
> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods  
> [7] base     
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.0.0
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr  1 23:02:59 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 2 Apr 2020 10:02:59 +1300
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
Message-ID: <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>

JJB,

1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.

2. we're talking about the oldest system that our binaries will run on, so 10.13 is actually very aggressive. There is still a very significant portion of users that have older versions of macOS and cannot upgrade. Apple is interested in selling new products, we are interested in supporting people that need a statistical software regardless of their income.

3. not at all. As I said, 10.13 is already way too high, in fact we picked it precisely so we don't need to change it for several years.

Just to make sure we're clear - it's ok to use Catalina to build binaries for let's say macOS 10.11, so it's not about what system you use to build. It is about who is able to use the resulting software. The current R builds are actually running on Catalina.

Thanks for your offer, it would be very helpful. Travis would be a good start - it needs command line tools, GNU fortran from
https://github.com/fxcoudert/gfortran-for-macOS/releases/download/8.2/gfortran-8.2-Mojave.dmg
the binaries from
http://mac.r-project.org/libs-4/
and there is actually a machine-readable list in
http://mac.r-project.org/libs-4/INDEX
and R from
http://mac.r-project.org/high-sierra/R-4.0-branch/R-4.0-branch.pkg

Thanks,
Simon


> On 2/04/2020, at 2:30 AM, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
> 
> Simon,
> 
> Thanks for the overview! A few quick questions:
> 
> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again? 
> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
> 3. How likely is the oldest system requirement to be bumped in a patch release? 
> 
> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help! 
> 
> Best,
> 
> JJB
> 
> ?On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
> 
>    Dear Mac users,
> 
>    R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
> 
>    https://mac.R-project.org
> 
>    before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
> 
>    The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
> 
>    For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
> 
>    The new R build system is in
>    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>    Packages build system has not changed and is in
>    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
> 
>    We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
> 
>    Please test R pre-releases and provide feedback!
> 
>    Thanks,
>    Simon
> 
>    _______________________________________________
>    R-SIG-Mac mailing list
>    R-SIG-Mac at r-project.org
>    https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr  1 23:05:11 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 2 Apr 2020 10:05:11 +1300
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <2350cf0f-3efa-46d1-94f3-0f4dcfbd289b@Spark>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <B364FBC3-6797-4573-AA4F-198F84B6A3BA@rud.is>
 <2350cf0f-3efa-46d1-94f3-0f4dcfbd289b@Spark>
Message-ID: <7AE55E81-616C-4054-8AE9-0EACADD9A2BF@R-project.org>

Patrick, Bob et al ,

thanks! Please start a new thread here about CI builds - I'm open to whatever the best or most popular options are.

Thanks,
Simon


> On 2/04/2020, at 3:07 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> 
> The same goes here regarding support.
> 
> I am (co-)maintaining a package on ropensci focusing on provider-agnostic CI approaches for R (tic) and have quite some experience with all the little culprits there.
> 
> Since you mentioned Travis: Be aware that the R community is (slowly but actively) moving away from Travis for a few reasons.
> Also on GitHub Actions you can only build on 10.15 (Catalina) right now.
> 
> Best, Patrick
> On 1. Apr 2020, 15:41 +0200, Bob Rudis <bob at rud.is>, wrote:
>> I shall pile on with an additional offer of assistance, Simon and a huge #ty for this and all the work you do.
>> 
>>> On Apr 1, 2020, at 09:30, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
>>> 
>>> Simon,
>>> 
>>> Thanks for the overview! A few quick questions:
>>> 
>>> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again?
>>> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
>>> 3. How likely is the oldest system requirement to be bumped in a patch release?
>>> 
>>> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help!
>>> 
>>> Best,
>>> 
>>> JJB
>>> 
>>> On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
>>> 
>>> Dear Mac users,
>>> 
>>> R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>>> 
>>> https://mac.R-project.org
>>> 
>>> before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>>> 
>>> The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>>> 
>>> For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
>>> 
>>> The new R build system is in
>>> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>>> Packages build system has not changed and is in
>>> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
>>> 
>>> We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>>> 
>>> Please test R pre-releases and provide feedback!
>>> 
>>> Thanks,
>>> Simon
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr  1 23:08:06 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 2 Apr 2020 10:08:06 +1300
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <547A98ED-988C-476E-BDE5-CF0233779B28@rud.is>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <547A98ED-988C-476E-BDE5-CF0233779B28@rud.is>
Message-ID: <AA0DF15A-48D0-4E1C-9FAF-1A9A21CAFAFE@R-project.org>

Thanks! Now fixed.
Simon


> On 2/04/2020, at 4:08 AM, Bob Rudis <bob at rud.is> wrote:
> 
> Hey Simon!
> 
> At the bottom of https://mac.r-project.org/libs-4/ is:
> 
>    curl -O http://mac.R_project.org/libs-4/pkgconfig-0.28-darwin.17-x86_64.tar.gz
> 
> While most folks will figure it out, it should be:
> 
>    curl -O http://mac.R-project.org/libs-4/pkgconfig-0.28-darwin.17-x86_64.tar.gz
> 
> (dash instead of underline).
> 
> -boB
> 
> 
>> On Apr 1, 2020, at 09:30, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
>> 
>> Simon,
>> 
>> Thanks for the overview! A few quick questions:
>> 
>> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again? 
>> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
>> 3. How likely is the oldest system requirement to be bumped in a patch release? 
>> 
>> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help! 
>> 
>> Best,
>> 
>> JJB
>> 
>> ?On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
>> 
>>   Dear Mac users,
>> 
>>   R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>> 
>>   https://mac.R-project.org
>> 
>>   before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>> 
>>   The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>> 
>>   For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
>> 
>>   The new R build system is in
>>   https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>>   Packages build system has not changed and is in
>>   https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
>> 
>>   We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>> 
>>   Please test R pre-releases and provide feedback!
>> 
>>   Thanks,
>>   Simon
>> 
>>   _______________________________________________
>>   R-SIG-Mac mailing list
>>   R-SIG-Mac at r-project.org
>>   https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr  1 23:17:03 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 2 Apr 2020 10:17:03 +1300
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
In-Reply-To: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
Message-ID: <42CAC511-E296-49E8-A235-E0AEDA74971B@R-project.org>

Carl,

I would argue that you won't really gain anything - if you use R the Linux-way (build R from sources), it would be the same on macOS and Linux - and some people do that. So for R I don't think there is a difference. I'm using Linux for everything other than my desktop/laptop and the main reason I'm sticking with macOS at the edge is the availability of software for dealing with the rest of the world (MS Office, Adobe, Apple Mail etc.). If you don't need any of it, then you may be happy with Linux. The biggest issue there tends to be setting up your machine as the hardware support is far less streamlined than on macOS. Some of my friends are running Linux on Mac hardware - but you need the be real expert for that.

Cheers,
Simon


> On 2/04/2020, at 7:48 AM, Carl Witthoft <carl at witthoft.com> wrote:
> 
> 
> If I should ask over at r-sig-debian instead of here, please tell me. I don't wish to clog r-sig-mac with off-topic stuff.
> 
> 
> I've been watching the massive headaches people are dealing with trying to keep R fully compatible with each MacOS X upgrade,  I'm wondering whether replacing my iMac (2009) with a new Mac really makes sense from an R - user point of view, as opposed to getting some inexpensive desktop and installing Linux.  I know I can run R and RStudio under Linux, for example,  but don't know what limitations, if any there are when it comes to building packages from source, getting compatible compilers,  and so on.
> 
> What have some of you 'power R users' discovered when/if you tried to build , or incorporate Bioconductor or other repository's packages under Linux?
> 
> 
> -- 
> Carl Witthoft
> carl at witthoft.com
> resume: https://app.box.com/file/498153801347
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From b@|@mut2 @end|ng |rom ||||no|@@edu  Wed Apr  1 23:52:53 2020
From: b@|@mut2 @end|ng |rom ||||no|@@edu (Balamuta, James Joseph)
Date: Wed, 1 Apr 2020 21:52:53 +0000
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>
Message-ID: <B713592F-3B80-4E19-BCE1-7C1DBE9D9324@illinois.edu>

Simon,

Thank you for the quick response! 

>  1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.

Best news leading into R 4.0.0.

> 2.  we're talking about the oldest system that our binaries will run on, so 10.13 is actually very aggressive.

Okay.  

> There is still a very significant portion of users that have older versions of macOS and cannot upgrade. Apple is interested in selling new products, we are interested in supporting people that need a statistical software regardless of their income.

Agreed. When I asked this question, I was worried about the backwards compatibility issues arising from the new security model enacted on 10.14/10.15 that caused installer signing problems in R 3.6.3.

>    3. not at all. As I said, 10.13 is already way too high, in fact we picked it precisely so we don't need to change it for several years.

Great to hear 10.13 will be the default for several years to come! As an added benefit, it is the last version with support for NVIDIA eGPUs.

Regarding Travis, I'll update the build script here with the new changes.

https://github.com/travis-ci/travis-build/blob/ab196aed5b227288a2f4dcb5c7822868b430b110/lib/travis/build/script/r.rb 

Best,

JJB

?On 4/1/20, 4:03 PM, "Simon Urbanek" <simon.urbanek at R-project.org> wrote:

    JJB,
    
    1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
    
    2. we're talking about the oldest system that our binaries will run on, so 10.13 is actually very aggressive. There is still a very significant portion of users that have older versions of macOS and cannot upgrade. Apple is interested in selling new products, we are interested in supporting people that need a statistical software regardless of their income.
    
    3. not at all. As I said, 10.13 is already way too high, in fact we picked it precisely so we don't need to change it for several years.
    
    Just to make sure we're clear - it's ok to use Catalina to build binaries for let's say macOS 10.11, so it's not about what system you use to build. It is about who is able to use the resulting software. The current R builds are actually running on Catalina.
    
    Thanks for your offer, it would be very helpful. Travis would be a good start - it needs command line tools, GNU fortran from
    https://github.com/fxcoudert/gfortran-for-macOS/releases/download/8.2/gfortran-8.2-Mojave.dmg
    the binaries from
    http://mac.r-project.org/libs-4/
    and there is actually a machine-readable list in
    http://mac.r-project.org/libs-4/INDEX
    and R from
    http://mac.r-project.org/high-sierra/R-4.0-branch/R-4.0-branch.pkg
    
    Thanks,
    Simon
    
    
    > On 2/04/2020, at 2:30 AM, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
    > 
    > Simon,
    > 
    > Thanks for the overview! A few quick questions:
    > 
    > 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again? 
    > 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
    > 3. How likely is the oldest system requirement to be bumped in a patch release? 
    > 
    > Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help! 
    > 
    > Best,
    > 
    > JJB
    > 
    > On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
    > 
    >    Dear Mac users,
    > 
    >    R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
    > 
    >    https://mac.R-project.org
    > 
    >    before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
    > 
    >    The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
    > 
    >    For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
    > 
    >    The new R build system is in
    >    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
    >    Packages build system has not changed and is in
    >    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
    > 
    >    We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
    > 
    >    Please test R pre-releases and provide feedback!
    > 
    >    Thanks,
    >    Simon
    > 
    >    _______________________________________________
    >    R-SIG-Mac mailing list
    >    R-SIG-Mac at r-project.org
    >    https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    > 
    > 
    > _______________________________________________
    > R-SIG-Mac mailing list
    > R-SIG-Mac at r-project.org
    > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    
    


From h@n@on @end|ng |rom dep@uw@edu  Thu Apr  2 00:10:02 2020
From: h@n@on @end|ng |rom dep@uw@edu (Bryan Hanson)
Date: Wed, 1 Apr 2020 18:10:02 -0400
Subject: [R-SIG-Mac] PCRE JIT compilation error
In-Reply-To: <AB359FD0-F6BD-45BF-AB25-DAE6AC30157D@R-project.org>
References: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
 <AB359FD0-F6BD-45BF-AB25-DAE6AC30157D@R-project.org>
Message-ID: <A66AB574-CF4F-49E9-875B-23EB173340CC@depauw.edu>

Confirmed (r78130).  Thank you as always Simon.  Bryan

> On Apr 1, 2020, at 4:46 PM, Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> Bryan,
> 
> thanks! There seems to be an issue with PCRE2 JIT on Mojave. I have now disabled JIT in PCRE2 which seems to be the recommended fix 
> 
> I have built the latest version of R 4.0.0 alpha - it is now available from
> 
> http://mac.r-project.org/high-sierra/R-4.0-branch/R-4.0-branch.pkg
> 
> as usual.
> 
> Thanks,
> Simon
> 
> 
>> On 2/04/2020, at 12:30 AM, Bryan Hanson <hanson at depauw.edu> wrote:
>> 
>> On a fresh install of the binary from mac.r-project.org, if I simply do:
>> 
>> library()
>> 
>> I see:
>> 
>> R > library()
>> There were 30 warnings (use warnings() to see them)
>> R > warnings()
>> Warning messages:
>> 1: In strsplit(x, "\n[ \t\n]*\n", perl = TRUE) : PCRE JIT compilation error
>> 	'no more memory'
>> 2: In FUN(X[[i]], ...) : PCRE JIT compilation error
>> 	'no more memory'
>> 
>> etc.  The usual window with installed packages does open.
>> 
>> Starting the conversation here on the Mac list, though it may be a bigger problem.
>> 
>> Thanks, Bryan
>> ****************
>> Prof. Bryan Hanson (emeritus)
>> Dept of Chemistry & Biochemistry
>> DePauw University
>> Greencastle IN 46135 USA
>> Web: academic.depauw.edu/~hanson/index.html
>> Repo: github.com/bryanhanson
>> Nerdy Blog: ChemoSpec.org
>> The Twit: @ProfBryanHanson
>> I?m usually @ -4 GMT/UTC
>> 
>> R > sessionInfo()
>> R version 4.0.0 alpha (2020-03-29 r78109)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Mojave 10.14.6
>> 
>> Matrix products: default
>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>> 
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods  
>> [7] base     
>> 
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 


From gor@n@bro@trom @end|ng |rom umu@@e  Thu Apr  2 00:23:37 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Thu, 2 Apr 2020 00:23:37 +0200
Subject: [R-SIG-Mac] PCRE JIT compilation error
In-Reply-To: <8FF70D61-A143-45A6-BEA6-ED00FCA993FD@depauw.edu>
References: <CECB04EE-E928-40EF-BE7C-1CC39C6D9502@depauw.edu>
 <001701d60822$370ae720$a520b560$@uni-potsdam.de>
 <8FF70D61-A143-45A6-BEA6-ED00FCA993FD@depauw.edu>
Message-ID: <45ed5f2c-ed15-0b9a-076c-ae807001f4d5@umu.se>

No problem at all with 10.13.6.

G,

Den 2020-04-01 kl. 15:20, skrev Bryan Hanson:
> Having played with things a bit more, this message appears all over the place as people are beginning to report.
> 
> Another simple way to trigger it is to do:
> 
> ?dist
> 
> Bryan
> 
>> On Apr 1, 2020, at 8:36 AM, Matthias Krawutschke <krawutschke at uni-potsdam.de> wrote:
>>
>> Hello together,
>> i?ve got this message too, but my systems show me first the list of all installed libraries on my MAC.
>>
>> Best regards and take care?.
>>
>>
>>
>> Matthias Krawutschke, Dipl. Inf.
>>
>> Universit?t Potsdam
>> ZIM - Zentrum f?r Informationstechnologie und Medienmanagement
>> Team Infrastruktur Server und Storage
>> Spezialized: High-Performance-Computing and Kubernetes
>>
>>
>> Campus Am Neuen Palais: Am Neuen Palais 10 | 14469 Potsdam
>> Tel: +49 331 977-153065, Fax: +49 331 977-1750
>>
>> Internet: https://www.uni-potsdam.de/de/zim/angebote-loesungen/hpc.html
>>
>>
>> -----Urspr?ngliche Nachricht-----
>> Von: R-SIG-Mac <r-sig-mac-bounces at r-project.org> Im Auftrag von Bryan Hanson
>> Gesendet: Mittwoch, 1. April 2020 13:30
>> An: r-sig-mac R <r-sig-mac at r-project.org>
>> Betreff: [R-SIG-Mac] PCRE JIT compilation error
>>
>> On a fresh install of the binary from mac.r-project.org, if I simply do:
>>
>> library()
>>
>> I see:
>>
>> R > library()
>> There were 30 warnings (use warnings() to see them) R > warnings() Warning messages:
>> 1: In strsplit(x, "\n[ \t\n]*\n", perl = TRUE) : PCRE JIT compilation error
>> 	'no more memory'
>> 2: In FUN(X[[i]], ...) : PCRE JIT compilation error
>> 	'no more memory'
>>
>> etc.  The usual window with installed packages does open.
>>
>> Starting the conversation here on the Mac list, though it may be a bigger problem.
>>
>> Thanks, Bryan
>> ****************
>> Prof. Bryan Hanson (emeritus)
>> Dept of Chemistry & Biochemistry
>> DePauw University
>> Greencastle IN 46135 USA
>> Web: academic.depauw.edu/~hanson/index.html
>> Repo: github.com/bryanhanson
>> Nerdy Blog: ChemoSpec.org
>> The Twit: @ProfBryanHanson
>> I?m usually @ -4 GMT/UTC
>>
>> R > sessionInfo()
>> R version 4.0.0 alpha (2020-03-29 r78109)
>> Platform: x86_64-apple-darwin17.0 (64-bit) Running under: macOS Mojave 10.14.6
>>
>> Matrix products: default
>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods
>> [7] base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>> 	[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From e| @end|ng |rom ||@@e@n@  Thu Apr  2 00:39:47 2020
From: e| @end|ng |rom ||@@e@n@ (Eberhard W Lisse)
Date: Thu, 2 Apr 2020 00:39:47 +0200
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
In-Reply-To: <42CAC511-E296-49E8-A235-E0AEDA74971B@R-project.org>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <42CAC511-E296-49E8-A235-E0AEDA74971B@R-project.org>
Message-ID: <435213da-66da-420e-80a4-750a49a18248@Spark>

Actually, you can easily run Linux in Virtual Box.

But I agree, with Homebrew there is tons of unix tools available from the command line, and then some.

el

?
Sent from Dr Lisse?s iPad Mini 5
On 1 Apr 2020, 23:42 +0200, Simon Urbanek <simon.urbanek at R-project.org>, wrote:
> Carl,
>
> I would argue that you won't really gain anything - if you use R the Linux-way (build R from sources), it would be the same on macOS and Linux - and some people do that. So for R I don't think there is a difference. I'm using Linux for everything other than my desktop/laptop and the main reason I'm sticking with macOS at the edge is the availability of software for dealing with the rest of the world (MS Office, Adobe, Apple Mail etc.). If you don't need any of it, then you may be happy with Linux. The biggest issue there tends to be setting up your machine as the hardware support is far less streamlined than on macOS. Some of my friends are running Linux on Mac hardware - but you need the be real expert for that.
>
> Cheers,
> Simon
>
>
> > On 2/04/2020, at 7:48 AM, Carl Witthoft <carl at witthoft.com> wrote:
> >
> >
> > If I should ask over at r-sig-debian instead of here, please tell me. I don't wish to clog r-sig-mac with off-topic stuff.
> >
> >
> > I've been watching the massive headaches people are dealing with trying to keep R fully compatible with each MacOS X upgrade, I'm wondering whether replacing my iMac (2009) with a new Mac really makes sense from an R - user point of view, as opposed to getting some inexpensive desktop and installing Linux. I know I can run R and RStudio under Linux, for example, but don't know what limitations, if any there are when it comes to building packages from source, getting compatible compilers, and so on.
> >
> > What have some of you 'power R users' discovered when/if you tried to build , or incorporate Bioconductor or other repository's packages under Linux?
> >
> >
> > --
> > Carl Witthoft
> > carl at witthoft.com
> > resume: https://app.box.com/file/498153801347
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Apr  2 02:37:23 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 1 Apr 2020 20:37:23 -0400
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
In-Reply-To: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
Message-ID: <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>

On 01/04/2020 2:48 p.m., Carl Witthoft wrote:
> 
>    If I should ask over at r-sig-debian instead of here, please tell me.
> I don't wish to clog r-sig-mac with off-topic stuff.
> 
> 
> I've been watching the massive headaches people are dealing with trying
> to keep R fully compatible with each MacOS X upgrade,  I'm wondering
> whether replacing my iMac (2009) with a new Mac really makes sense from
> an R - user point of view, as opposed to getting some inexpensive
> desktop and installing Linux.  I know I can run R and RStudio under
> Linux, for example,  but don't know what limitations, if any there are
> when it comes to building packages from source, getting compatible
> compilers,  and so on.
> 
> What have some of you 'power R users' discovered when/if you tried to
> build , or incorporate Bioconductor or other repository's packages under
> Linux?
> 
> 

If your iMac is still working, try installing Ubuntu or some other Linux 
on it.  I think at that age Apple is no longer providing upgrades, but I 
just put Ubuntu on a 2008 iMac, and it works well.  (I needed to upgrade 
the memory, but that just cost $40 for 4 GB.)

So I got a $40 desktop, with a nice screen.

Duncan Murdoch


From b@|@mut2 @end|ng |rom ||||no|@@edu  Thu Apr  2 05:21:00 2020
From: b@|@mut2 @end|ng |rom ||||no|@@edu (Balamuta, James Joseph)
Date: Thu, 2 Apr 2020 03:21:00 +0000
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <B713592F-3B80-4E19-BCE1-7C1DBE9D9324@illinois.edu>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>
 <B713592F-3B80-4E19-BCE1-7C1DBE9D9324@illinois.edu>
Message-ID: <6D71C16A-A152-4935-BABB-1B9930277E6F@illinois.edu>

Simon,

I sent a PR that updates the Travis CI to use the R 4.0.0 branch as R-devel and new gfortran binaries.

https://github.com/travis-ci/travis-build/pull/1885

I'm waiting to hear back from the community maintainers if they are interested in pulling in binaries from 

http://mac.r-project.org/libs-4/

Best,

JJB

?On 4/1/20, 5:01 PM, "R-SIG-Mac on behalf of Balamuta, James Joseph" <r-sig-mac-bounces at r-project.org on behalf of balamut2 at illinois.edu> wrote:

    Simon,
    
    Thank you for the quick response! 
    
    >  1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
    
    Best news leading into R 4.0.0.
    
    > 2.  we're talking about the oldest system that our binaries will run on, so 10.13 is actually very aggressive.
    
    Okay.  
    
    > There is still a very significant portion of users that have older versions of macOS and cannot upgrade. Apple is interested in selling new products, we are interested in supporting people that need a statistical software regardless of their income.
    
    Agreed. When I asked this question, I was worried about the backwards compatibility issues arising from the new security model enacted on 10.14/10.15 that caused installer signing problems in R 3.6.3.
    
    >    3. not at all. As I said, 10.13 is already way too high, in fact we picked it precisely so we don't need to change it for several years.
    
    Great to hear 10.13 will be the default for several years to come! As an added benefit, it is the last version with support for NVIDIA eGPUs.
    
    Regarding Travis, I'll update the build script here with the new changes.
    
    https://github.com/travis-ci/travis-build/blob/ab196aed5b227288a2f4dcb5c7822868b430b110/lib/travis/build/script/r.rb 
    
    Best,
    
    JJB
    
    On 4/1/20, 4:03 PM, "Simon Urbanek" <simon.urbanek at R-project.org> wrote:
    
        JJB,
        
        1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
        
        2. we're talking about the oldest system that our binaries will run on, so 10.13 is actually very aggressive. There is still a very significant portion of users that have older versions of macOS and cannot upgrade. Apple is interested in selling new products, we are interested in supporting people that need a statistical software regardless of their income.
        
        3. not at all. As I said, 10.13 is already way too high, in fact we picked it precisely so we don't need to change it for several years.
        
        Just to make sure we're clear - it's ok to use Catalina to build binaries for let's say macOS 10.11, so it's not about what system you use to build. It is about who is able to use the resulting software. The current R builds are actually running on Catalina.
        
        Thanks for your offer, it would be very helpful. Travis would be a good start - it needs command line tools, GNU fortran from
        https://github.com/fxcoudert/gfortran-for-macOS/releases/download/8.2/gfortran-8.2-Mojave.dmg
        the binaries from
        http://mac.r-project.org/libs-4/
        and there is actually a machine-readable list in
        http://mac.r-project.org/libs-4/INDEX
        and R from
        http://mac.r-project.org/high-sierra/R-4.0-branch/R-4.0-branch.pkg
        
        Thanks,
        Simon
        
        
        > On 2/04/2020, at 2:30 AM, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
        > 
        > Simon,
        > 
        > Thanks for the overview! A few quick questions:
        > 
        > 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again? 
        > 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
        > 3. How likely is the oldest system requirement to be bumped in a patch release? 
        > 
        > Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help! 
        > 
        > Best,
        > 
        > JJB
        > 
        > On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
        > 
        >    Dear Mac users,
        > 
        >    R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
        > 
        >    https://mac.R-project.org
        > 
        >    before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
        > 
        >    The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
        > 
        >    For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
        > 
        >    The new R build system is in
        >    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
        >    Packages build system has not changed and is in
        >    https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
        > 
        >    We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
        > 
        >    Please test R pre-releases and provide feedback!
        > 
        >    Thanks,
        >    Simon
        > 
        >    _______________________________________________
        >    R-SIG-Mac mailing list
        >    R-SIG-Mac at r-project.org
        >    https://stat.ethz.ch/mailman/listinfo/r-sig-mac
        > 
        > 
        > _______________________________________________
        > R-SIG-Mac mailing list
        > R-SIG-Mac at r-project.org
        > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
        
        
    
    _______________________________________________
    R-SIG-Mac mailing list
    R-SIG-Mac at r-project.org
    https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Thu Apr  2 06:18:46 2020
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Thu, 2 Apr 2020 05:18:46 +0100
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>
Message-ID: <b9601798-698e-8180-0c93-fb5dd85212ee@stats.ox.ac.uk>

On 01/04/2020 22:02, Simon Urbanek wrote:
> JJB,
> 
> 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.

Also note that it is possible (and not hard) to install packages from 
source with an OpenMP-supporting compiler, and how to do so is in the 
R-admin manual.  The problems come in distributing them.

The benefits of OpenMP are often overestimated, especially on 
desktop/laptop level hardware.  But it is available for the small 
(tiny?) proportion of users who need it.

> 2. we're talking about the oldest system that our binaries will run on, so 10.13 is actually very aggressive. There is still a very significant portion of users that have older versions of macOS and cannot upgrade. Apple is interested in selling new products, we are interested in supporting people that need a statistical software regardless of their income.

And 3.6.x running on >= 10.11 will be (we intend) supported with binary 
packages for another year.

> 3. not at all. As I said, 10.13 is already way too high, in fact we picked it precisely so we don't need to change it for several years.
> 
> Just to make sure we're clear - it's ok to use Catalina to build binaries for let's say macOS 10.11, so it's not about what system you use to build. It is about who is able to use the resulting software. The current R builds are actually running on Catalina.
> 
> Thanks for your offer, it would be very helpful. Travis would be a good start - it needs command line tools, GNU fortran from
> https://github.com/fxcoudert/gfortran-for-macOS/releases/download/8.2/gfortran-8.2-Mojave.dmg
> the binaries from
> http://mac.r-project.org/libs-4/
> and there is actually a machine-readable list in
> http://mac.r-project.org/libs-4/INDEX
> and R from
> http://mac.r-project.org/high-sierra/R-4.0-branch/R-4.0-branch.pkg
> 
> Thanks,
> Simon
> 
> 
>> On 2/04/2020, at 2:30 AM, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
>>
>> Simon,
>>
>> Thanks for the overview! A few quick questions:
>>
>> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again?
>> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
>> 3. How likely is the oldest system requirement to be bumped in a patch release?
>>
>> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help!
>>
>> Best,
>>
>> JJB
>>
>> ?On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
>>
>>     Dear Mac users,
>>
>>     R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>>
>>     https://mac.R-project.org
>>
>>     before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>>
>>     The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>>
>>     For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
>>
>>     The new R build system is in
>>     https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>>     Packages build system has not changed and is in
>>     https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
>>
>>     We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>>
>>     Please test R pre-releases and provide feedback!
>>
>>     Thanks,
>>     Simon
>>
>>     _______________________________________________
>>     R-SIG-Mac mailing list
>>     R-SIG-Mac at r-project.org
>>     https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From hp@ge@ @end|ng |rom |redhutch@org  Thu Apr  2 08:47:36 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 1 Apr 2020 23:47:36 -0700
Subject: [R-SIG-Mac] Installing CRAN binary packages with R 4.0 installed
 from source crashes R
Message-ID: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>

Hi Simon,

After installing R 4.0 alpha from source on a macOS Mojave system, R 
won't let me use type="both" to install CRAN packages. I get:

   Error in install.packages("rJava", type = "both", repos = 
"https://cran.r-project.org") :
     type == "both" can only be used on Windows or a CRAN build for macOS

OK so this suggests that the CRAN binary packages for R 4.0 are not 
compatible with my R. Surprisingly though using type="mac.binary" 
doesn't complain and lets me install these binaries. But then trying to 
load them causes segfaults. I've tried this with rJava, Rcpp, ggplot2, 
and doing library() on any of them crashes my session. Note that 
installing all these packages from source works without any problem.

So my questions are: is it the case that CRAN binary packages are not 
meant to be used with an R 4.0 installed from source? If yes then why 
isn't type="mac.binary" blocking this like type="both" does?

Thanks,
H.

 > sessionInfo()
R version 4.0.0 alpha (2020-04-01 r78132)
Platform: x86_64-apple-darwin18.7.0 (64-bit)
Running under: macOS Mojave 10.14.6

Matrix products: default
BLAS:   /Users/biocbuild/bbs-3.11-bioc/R/lib/libRblas.dylib
LAPACK: /Users/biocbuild/bbs-3.11-bioc/R/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_4.0.0


-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Thu Apr  2 09:34:14 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Thu, 2 Apr 2020 09:34:14 +0200
Subject: [R-SIG-Mac] R 4.0 toolchain
In-Reply-To: <c1d517e9-4dff-493e-9072-9139f457350b@Spark>
References: <c1d517e9-4dff-493e-9072-9139f457350b@Spark>
Message-ID: <8ab7658b-67de-4fd5-8e91-d5b2126a970d@Spark>

Thanks Simon.
Branching off here to discuss the toolchain in general.
I see the danger posting not 100% correct scripts and in blog posts in general because they might get outdated and not always reflect the official documentation.
On the other side: What is the middle way? Arguably installing a robust toolchain (on Catalina especially but for macOS in general) is not just done with the installation of the signed package.
Most normal users are not aware about all the little specialties on macOS (missing openMP enabled compiler, SDK issues) and why adjustments might be needed.

Even though the idea is to require as less manual configuration as possible, this is not always practical in the end (unless all maintainers agree on configuring their package without the need of an openMP enabled C compiler for example).
And I also think that ?installing from source? is not a dev-only thing.

1. By using the Apple internal clang as the default, will maintainers be indirectly forced to remove the dependency on an openMP enabled compiler with respect to getting source installations on macOS working?
2. Can there be an official section easily accessible for users which recommends which compiler to use (and how to set the Makevars) if users really need/want to do so?
    a. Regarding openMP enabled compilers: llvm is probably the one with the least differences to Apples clang. It can be installed via brew (brew install llvm) and then linked in Makevars. Would that be an alternative?
3. SDK: I did not wanted to induce that setting the SDK vars is needed for the CRAN build chain (maybe we got each other wrong here). However, as of now, there are real issues with SDK 10.15 that result in errors that are really hard to track down or even fall under the radar when testing (if someone does not run Catalina). Therefore I am linking locally against SDK 10.13 since some days and that resolved many issues (see again the Rcpp issue and the igraph issue). Since Catalina is the latest release and many people run it there should be test/instructions somewhere on mac.rproject that deal with this/suggest not to use SDK 10.15 for R IMO. Maybe this issue deserves a special thread.


Cheers, Patrick

On 1. Apr 2020, 22:29 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> Patrick,
>
> firstly, please don't post such things - they are often wrong (as are parts of what you included it this e-mail) and it's impossible for us to track all blogs that have incorrect advice. Unfortunately, a lot of the issues we see out there are due to people finding bad advice and using it. Ideally, it should be sufficient to point to the official R documentation since that is the canonical source. If you post a blog, it should point to the official documentation. If that documentation is missing or not covering a need, please post here so we can fix it. It is more important that the official source is complete and much better for the community than to have random tidbits that may or may not be correct floating around.
>
> As for the script, please do not use R tar balls - first, you're picking the wrong one (there is no R-devel for el-capitan. R 4.0.0 pre-releases are in R-4-0-branch and they are built for high sierra). Second, the tar ball doesn't have the entitlements enabled so it doesn't match the release. Please use the signed R package. This may change, but with the complications of the Apple notarization process that's what it is today.
>
> Then there is the question of the SDK. What are you trying to setup here? What you posted here has nothing to do with the CRAN setup. You don't need 10.13 SDK to compile igraph, it compiles just fine using stock command line tools on High Sierra which is what we use on CRAN. You can, of course, pick any SDK you like, but please don't tell people that's what they should do. One of the most annoying issues is that people are recommending messing with Makevars which is incredibly fragile and will cause things to break left and right with any update. It's ok to do that for a very special purpose, but no regular user should have Makevars in their home.
>
> So if you really want to serve the community, please suggest improvements to the official documentation and post them here. If you have special needs, ask about them here.
>
> Thanks,
> Simon
>
>
>
> > On 1/04/2020, at 9:47 PM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> >
> > Thanks Simon,
> >
> > This simplifies things a lot and clears up the process. While the instructions on https://mac.r-project.org/ are more clear now I think there is still simplification needed for the install process and custom modifications that are needed.
> > This not only applies to the dev page but finally also to production end users if the SDK 10.15 issues (see below) persists.
> >
> > I?ve scripted all installation steps (R-devel, gfortran, SDK 10.13) and will probably write a blog post about it to make the R community more aware about it. Let me know if anything is wrong about it - otherwise I?ll use the code below in the blog post.
> >
> > # install R-devel
> > wget https://mac.r-project.org/el-capitan/R-devel/R-devel-el-capitan-sa-x86_64.tar.gz
> > sudo tar fvxz R*.tar.gz -C /
> > rm R-devel-el-capitan-sa-x86_64.tar.gz
> >
> > # install gfortran
> > wget https://github.com/fxcoudert/gfortran-for-macOS/releases/download/8.2/gfortran-8.2-Mojave.dmg
> > sudo hdiutil attach gfortran*.dmg
> > sudo installer -package /Volumes/gfortran*/gfortran*/gfortran*.pkg -target /
> > sudo hdiutil detach /Volumes/gfortran-8.2-Mojave
> >
> > # install SDK10.13
> > wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.13.sdk.tar.xz
> > tar fvxz MacOSX10.13.sdk.tar.xz
> > sudo mv MacOSX10.13.sdk /Library/Developer/CommandLineTools/SDKs/
> > rm -rf MacOSX10.13*
> >
> > In addition people need to set custom CFLAGS in ~/.R/Makevars to actually use it:
> >
> > CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> > CCFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> > CXXFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> > CPPFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> >
> > In addition there really seem to be major problems regarding the 10.15 SDK. For example, {igraph} which is a package on which lots of other packages depend, cannot be installed from source with SDK 10.15 but works with SDK 10.13.
> >
> > Patrick
> > On 1. Apr 2020, 09:38 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> > > Herv?,
> > >
> > >
> > > > On 1/04/2020, at 6:19 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
> > > >
> > > > Thanks Simon. A couple of days ago we've started to use the R 4.0.0 alpha build from https://mac.r-project.org/ for the Bioconductor build system. Bioconductor packages depend on thousands of CRAN packages and one thing that makes it hard for us and for our users to build/check Bioconductor packages at the moment is the absence of Mac binary packages for R 4.0.0 on CRAN. Do you have an estimate of when they will become available?
> > > >
> > >
> > > Both the packages and R are now available. I always recommend using the Mac-master https://mac.R-project.org as "mirror" since that one is most up-to-date.
> > >
> > >
> > > > Another question is where they are going to be hosted on CRAN. We need to follow CRAN's layout for Bioconductor package repositories.
> > > >
> > >
> > >
> > > We have removed the extra layer, the package type is back to "mac.binary", so bin/macosx/contrib is the location.
> > >
> > > Cheers,
> > > Simon
> > >
> > >
> > >
> > > > Thanks!
> > > > H.
> > > >
> > > >
> > > > On 3/31/20 21:27, Simon Urbanek wrote:
> > > > > Dear Mac users,
> > > > > R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
> > > > > https://urldefense.proofpoint.com/v2/url?u=https-3A__mac.R-2Dproject.org&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=FJYxweW9WiMXbNMPpMM0bHXy020Gx9P-dHMrWmt7YzE&e=
> > > > > before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
> > > > > The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
> > > > > For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in https://urldefense.proofpoint.com/v2/url?u=http-3A__mac.r-2Dproject.org_libs-2D4_&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=3ZbcXBticg_8MfXltGKdQ9SFNqqeLqqwK_pUhEet7QY&e=
> > > > > The new R build system is in
> > > > > https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_R4&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=Mmt7_pVM5aUDR3hz93-e-PtadG7wSYpaZe8Ayi5Pv4I&e=
> > > > > Packages build system has not changed and is in
> > > > > https://urldefense.proofpoint.com/v2/url?u=https-3A__svn.r-2Dproject.org_R-2Ddev-2Dweb_trunk_QA_Simon_packages&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=eId6n08LVeIAMhMXe3jvLFKn9QGi4_by8owFreDDc84&e=
> > > > > We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
> > > > > Please test R pre-releases and provide feedback!
> > > > > Thanks,
> > > > > Simon
> > > > > _______________________________________________
> > > > > R-SIG-Mac mailing list
> > > > > R-SIG-Mac at r-project.org
> > > > > https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=-PNBcsZhHb1MLy6fZakmLP6WDLMwL-VigJVzeFtPxOI&s=ubqivtpb1OZ2I0MEbVvGlGDK-tfti3DPtIv4LQ-Ks6A&e=
> > > >
> > > > --
> > > > Herv? Pag?s
> > > >
> > > > Program in Computational Biology
> > > > Division of Public Health Sciences
> > > > Fred Hutchinson Cancer Research Center
> > > > 1100 Fairview Ave. N, M1-B514
> > > > P.O. Box 19024
> > > > Seattle, WA 98109-1024
> > > >
> > > > E-mail: hpages at fredhutch.org
> > > > Phone: (206) 667-5791
> > > > Fax: (206) 667-1319
> > > >
> > > > _______________________________________________
> > > > R-SIG-Mac mailing list
> > > > R-SIG-Mac at r-project.org
> > > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > >
> > > _______________________________________________
> > > R-SIG-Mac mailing list
> > > R-SIG-Mac at r-project.org
> > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
> > [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>

	[[alternative HTML version deleted]]


From R@|ner @end|ng |rom krug@@de  Thu Apr  2 09:50:50 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Thu, 2 Apr 2020 09:50:50 +0200
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <2350cf0f-3efa-46d1-94f3-0f4dcfbd289b@Spark>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <B364FBC3-6797-4573-AA4F-198F84B6A3BA@rud.is>
 <2350cf0f-3efa-46d1-94f3-0f4dcfbd289b@Spark>
Message-ID: <5947CAEC-99F3-4B7F-A25F-7B91DE03B3B4@krugs.de>



> On 1 Apr 2020, at 16:07, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> 
> The same goes here regarding support.
> 
> I am (co-)maintaining a package on ropensci focusing on provider-agnostic CI approaches for R (tic) and have quite some experience with all the little culprits there.
> 
> Since you mentioned Travis: Be aware that the R community is (slowly but actively) moving away from Travis for a few reasons.
> Also on GitHub Actions you can only build on 10.15 (Catalina) right now.

So where is the R community moving too?

Rainer

> 
> Best, Patrick
> On 1. Apr 2020, 15:41 +0200, Bob Rudis <bob at rud.is>, wrote:
>> I shall pile on with an additional offer of assistance, Simon and a huge #ty for this and all the work you do.
>> 
>>> On Apr 1, 2020, at 09:30, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
>>> 
>>> Simon,
>>> 
>>> Thanks for the overview! A few quick questions:
>>> 
>>> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again?
>>> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
>>> 3. How likely is the oldest system requirement to be bumped in a patch release?
>>> 
>>> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help!
>>> 
>>> Best,
>>> 
>>> JJB
>>> 
>>> On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
>>> 
>>> Dear Mac users,
>>> 
>>> R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>>> 
>>> https://mac.R-project.org
>>> 
>>> before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>>> 
>>> The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>>> 
>>> For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
>>> 
>>> The new R build system is in
>>> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>>> Packages build system has not changed and is in
>>> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
>>> 
>>> We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>>> 
>>> Please test R pre-releases and provide feedback!
>>> 
>>> Thanks,
>>> Simon
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From R@|ner @end|ng |rom krug@@de  Thu Apr  2 10:03:27 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Thu, 2 Apr 2020 10:03:27 +0200
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
In-Reply-To: <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
Message-ID: <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>

I am using Homebrew on a Mac (two Macs - one at home, one at work) instead of the official R package, and I did not have any problems after upgrades - maybe I am lucky, maybe not as picky in defining ?problem?, but my suggestion would be to try R from homebrew to install R. 

OK - no support from here - I know.

And homebrew has also binary versions. What is missing, is a hombrew R package repository. Maybe an idea to create one?


Cheers,

Rainer


> On 2 Apr 2020, at 02:37, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 01/04/2020 2:48 p.m., Carl Witthoft wrote:
>>   If I should ask over at r-sig-debian instead of here, please tell me.
>> I don't wish to clog r-sig-mac with off-topic stuff.
>> I've been watching the massive headaches people are dealing with trying
>> to keep R fully compatible with each MacOS X upgrade,  I'm wondering
>> whether replacing my iMac (2009) with a new Mac really makes sense from
>> an R - user point of view, as opposed to getting some inexpensive
>> desktop and installing Linux.  I know I can run R and RStudio under
>> Linux, for example,  but don't know what limitations, if any there are
>> when it comes to building packages from source, getting compatible
>> compilers,  and so on.
>> What have some of you 'power R users' discovered when/if you tried to
>> build , or incorporate Bioconductor or other repository's packages under
>> Linux?
> 
> If your iMac is still working, try installing Ubuntu or some other Linux on it.  I think at that age Apple is no longer providing upgrades, but I just put Ubuntu on a 2008 iMac, and it works well.  (I needed to upgrade the memory, but that just cost $40 for 4 GB.)
> 
> So I got a $40 desktop, with a nice screen.
> 
> Duncan Murdoch
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Thu Apr  2 10:15:06 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Thu, 2 Apr 2020 10:15:06 +0200
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
In-Reply-To: <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
Message-ID: <c87227e3-4799-4ed3-813c-131175d42cfa@Spark>

AFAIK most people on that list would vote hard against installing R via homebrew for several reasons - maybe there should be a section about this on the R dev / CRAN page to address this topic, @Simon? Otherwise this will come up again and again.

Anyhow, this is also not relating to the initial topic of that thread and should probably discussed separately.
On 2. Apr 2020, 10:04 +0200, Rainer M Krug <Rainer at krugs.de>, wrote:
> I am using Homebrew on a Mac (two Macs - one at home, one at work) instead of the official R package, and I did not have any problems after upgrades - maybe I am lucky, maybe not as picky in defining ?problem?, but my suggestion would be to try R from homebrew to install R.
>
> OK - no support from here - I know.
>
> And homebrew has also binary versions. What is missing, is a hombrew R package repository. Maybe an idea to create one?
>
>
> Cheers,
>
> Rainer
>
>
> > On 2 Apr 2020, at 02:37, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >
> > On 01/04/2020 2:48 p.m., Carl Witthoft wrote:
> > > If I should ask over at r-sig-debian instead of here, please tell me.
> > > I don't wish to clog r-sig-mac with off-topic stuff.
> > > I've been watching the massive headaches people are dealing with trying
> > > to keep R fully compatible with each MacOS X upgrade, I'm wondering
> > > whether replacing my iMac (2009) with a new Mac really makes sense from
> > > an R - user point of view, as opposed to getting some inexpensive
> > > desktop and installing Linux. I know I can run R and RStudio under
> > > Linux, for example, but don't know what limitations, if any there are
> > > when it comes to building packages from source, getting compatible
> > > compilers, and so on.
> > > What have some of you 'power R users' discovered when/if you tried to
> > > build , or incorporate Bioconductor or other repository's packages under
> > > Linux?
> >
> > If your iMac is still working, try installing Ubuntu or some other Linux on it. I think at that age Apple is no longer providing upgrades, but I just put Ubuntu on a 2008 iMac, and it works well. (I needed to upgrade the memory, but that just cost $40 for 4 GB.)
> >
> > So I got a $40 desktop, with a nice screen.
> >
> > Duncan Murdoch
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>
> Orcid ID: 0000-0002-7490-0066
>
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
>
> Office: +41 (0)44 635 47 64
> Cell: +41 (0)78 630 66 57
> email: Rainer.Krug at uzh.ch
> Rainer at krugs.de
> Skype: RMkrug
>
> PGP: 0x0F52F982
>
>
>
>
> [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

	[[alternative HTML version deleted]]


From e| @end|ng |rom ||@@e@NA  Thu Apr  2 10:17:45 2020
From: e| @end|ng |rom ||@@e@NA (Dr Eberhard W Lisse)
Date: Thu, 2 Apr 2020 10:17:45 +0200
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
In-Reply-To: <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
Message-ID: <5c34b0b9-a034-e9a2-ea33-f29e7dd481cb@lisse.NA>


I do same, including Rstudio (Cask).

Once in a while after major updates I need to reinstall all my extra
packages, so I have written me a little script along the lines of

	#!/usr/local/bin/Rscript
	local({
		r <- getOption("repos")
		r["CRAN"] <- "https://cloud.r-project.org/"
		options(repos = r)
	})
	install.packages(c(
		"RMariaDB", "rstudioapi"
	))

made it 0755 and can run it from the command line. Put it in my
handbook so I don't forget and never looked back.


greetings, el

On 02/04/2020 10:03 am, Rainer M Krug wrote:
> I am using Homebrew on a Mac (two Macs - one at home, one at work)
> instead of the official R package, and I did not have any problems
> after upgrades - maybe I am lucky, maybe not as picky in defining
> ?problem?, but my suggestion would be to try R from homebrew to
> install R.
>
> OK - no support from here - I know.
>
> And homebrew has also binary versions.  What is missing, is a hombrew
> R package repository.  Maybe an idea to create one?
>
>
> Cheers,
>
> Rainer
>


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr  2 10:34:53 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 2 Apr 2020 21:34:53 +1300
Subject: [R-SIG-Mac] 
 Installing CRAN binary packages with R 4.0 installed
 from source crashes R
In-Reply-To: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>
References: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>
Message-ID: <8C55AA8A-53BE-4171-B20D-075F231016A8@R-project.org>

Herv?,

"both" is a fairly recent addition and my guess would be that it has been guarded specifically since it is the default and installing binaries only works for the CRAN version. I didn't look at the new "both" code to see how it knows that it's the CRAN version - there is really no special "CRAN" flag. At some point we were guarding binary installs in general by checking the OS and R, but it was fragile - you could be building using the same system as we do and yet use a different compiler, so I think it's in general impossible unless we introduce some extra identification of the binaries. So, yes, if you compile R from sources yourself it is not guaranteed to be compatible with CRAN package binaries. Those are only built and tested with the CRAN R binary.

Cheers,
Simon


> On 2/04/2020, at 7:47 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
> 
> Hi Simon,
> 
> After installing R 4.0 alpha from source on a macOS Mojave system, R won't let me use type="both" to install CRAN packages. I get:
> 
>  Error in install.packages("rJava", type = "both", repos = "https://cran.r-project.org") :
>    type == "both" can only be used on Windows or a CRAN build for macOS
> 
> OK so this suggests that the CRAN binary packages for R 4.0 are not compatible with my R. Surprisingly though using type="mac.binary" doesn't complain and lets me install these binaries. But then trying to load them causes segfaults. I've tried this with rJava, Rcpp, ggplot2, and doing library() on any of them crashes my session. Note that installing all these packages from source works without any problem.
> 
> So my questions are: is it the case that CRAN binary packages are not meant to be used with an R 4.0 installed from source? If yes then why isn't type="mac.binary" blocking this like type="both" does?
> 
> Thanks,
> H.
> 
> > sessionInfo()
> R version 4.0.0 alpha (2020-04-01 r78132)
> Platform: x86_64-apple-darwin18.7.0 (64-bit)
> Running under: macOS Mojave 10.14.6
> 
> Matrix products: default
> BLAS:   /Users/biocbuild/bbs-3.11-bioc/R/lib/libRblas.dylib
> LAPACK: /Users/biocbuild/bbs-3.11-bioc/R/lib/libRlapack.dylib
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.0.0
> 
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From hp@ge@ @end|ng |rom |redhutch@org  Thu Apr  2 10:38:14 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Thu, 2 Apr 2020 01:38:14 -0700
Subject: [R-SIG-Mac] 
 Installing CRAN binary packages with R 4.0 installed
 from source crashes R
In-Reply-To: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>
References: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>
Message-ID: <55214f05-fe0f-01d5-226e-d29a53b7c1ec@fredhutch.org>

FWIW I also get the same thing (i.e. R crashes on loading CRAN binary 
packages) if I configure R 4.0 alpha like here 
https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4/conf.high-sierra-x86_64, 
that is, if all the compilers use -mmacosx-version-min=10.13 and I set 
--build=x86_64-apple-darwin17.0

In that case I end up with the following sessionInfo():

   > sessionInfo()
   R version 4.0.0 alpha (2020-04-01 r78132)
   Platform: x86_64-apple-darwin17.0 (64-bit)
   Running under: macOS Mojave 10.14.6

   Matrix products: default
   BLAS:   /Users/biocbuild/bbs-3.11-bioc/R/lib/libRblas.dylib
   LAPACK: /Users/biocbuild/bbs-3.11-bioc/R/lib/libRlapack.dylib

   locale:
   [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

   attached base packages:
   [1] stats     graphics  grDevices utils     datasets  methods   base

   loaded via a namespace (and not attached):
   [1] compiler_4.0.0

H.


On 4/1/20 23:47, Herv? Pag?s wrote:
> Hi Simon,
> 
> After installing R 4.0 alpha from source on a macOS Mojave system, R 
> won't let me use type="both" to install CRAN packages. I get:
> 
>  ? Error in install.packages("rJava", type = "both", repos = 
> "https://urldefense.proofpoint.com/v2/url?u=https-3A__cran.r-2Dproject.org&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=H0XG-BbaqC0wtDJVNafEVTuhS6RZzzjXrTCwAq3rYGg&s=iXhmlQ7VZsVt9PcHpO66FPP66TY_GHko8gQqVv_CCNw&e= 
> ") :
>  ??? type == "both" can only be used on Windows or a CRAN build for macOS
> 
> OK so this suggests that the CRAN binary packages for R 4.0 are not 
> compatible with my R. Surprisingly though using type="mac.binary" 
> doesn't complain and lets me install these binaries. But then trying to 
> load them causes segfaults. I've tried this with rJava, Rcpp, ggplot2, 
> and doing library() on any of them crashes my session. Note that 
> installing all these packages from source works without any problem.
> 
> So my questions are: is it the case that CRAN binary packages are not 
> meant to be used with an R 4.0 installed from source? If yes then why 
> isn't type="mac.binary" blocking this like type="both" does?
> 
> Thanks,
> H.
> 
>  > sessionInfo()
> R version 4.0.0 alpha (2020-04-01 r78132)
> Platform: x86_64-apple-darwin18.7.0 (64-bit)
> Running under: macOS Mojave 10.14.6
> 
> Matrix products: default
> BLAS:?? /Users/biocbuild/bbs-3.11-bioc/R/lib/libRblas.dylib
> LAPACK: /Users/biocbuild/bbs-3.11-bioc/R/lib/libRlapack.dylib
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets? methods?? base
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.0.0
> 
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From hp@ge@ @end|ng |rom |redhutch@org  Thu Apr  2 10:46:18 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Thu, 2 Apr 2020 01:46:18 -0700
Subject: [R-SIG-Mac] 
 Installing CRAN binary packages with R 4.0 installed
 from source crashes R
In-Reply-To: <8C55AA8A-53BE-4171-B20D-075F231016A8@R-project.org>
References: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>
 <8C55AA8A-53BE-4171-B20D-075F231016A8@R-project.org>
Message-ID: <be80d104-07f5-c0ee-a9b4-ee7f7cb6ee0e@fredhutch.org>

Thanks. Only seeing this after I sent my other email about also getting 
crashes when I use your conf.high-sierra-x86_64 settings. But of course 
I'm not on Catalina so my setting is not exactly the same as yours. 
Therefore I should conclude that the CRAN binaries are not meant for me.

H.

On 4/2/20 01:34, Simon Urbanek wrote:
> Herv?,
> 
> "both" is a fairly recent addition and my guess would be that it has been guarded specifically since it is the default and installing binaries only works for the CRAN version. I didn't look at the new "both" code to see how it knows that it's the CRAN version - there is really no special "CRAN" flag. At some point we were guarding binary installs in general by checking the OS and R, but it was fragile - you could be building using the same system as we do and yet use a different compiler, so I think it's in general impossible unless we introduce some extra identification of the binaries. So, yes, if you compile R from sources yourself it is not guaranteed to be compatible with CRAN package binaries. Those are only built and tested with the CRAN R binary.
> 
> Cheers,
> Simon
> 
> 
>> On 2/04/2020, at 7:47 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>>
>> Hi Simon,
>>
>> After installing R 4.0 alpha from source on a macOS Mojave system, R won't let me use type="both" to install CRAN packages. I get:
>>
>>   Error in install.packages("rJava", type = "both", repos = "https://urldefense.proofpoint.com/v2/url?u=https-3A__cran.r-2Dproject.org&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=1-DiLdDSQroIloL3L_LKjjvH_qEO6FioafafYgQlOec&s=7DtbiQ_hSodOXZfS86zwIWgG79R3q9TbA6wYXp9_Dps&e= ") :
>>     type == "both" can only be used on Windows or a CRAN build for macOS
>>
>> OK so this suggests that the CRAN binary packages for R 4.0 are not compatible with my R. Surprisingly though using type="mac.binary" doesn't complain and lets me install these binaries. But then trying to load them causes segfaults. I've tried this with rJava, Rcpp, ggplot2, and doing library() on any of them crashes my session. Note that installing all these packages from source works without any problem.
>>
>> So my questions are: is it the case that CRAN binary packages are not meant to be used with an R 4.0 installed from source? If yes then why isn't type="mac.binary" blocking this like type="both" does?
>>
>> Thanks,
>> H.
>>
>>> sessionInfo()
>> R version 4.0.0 alpha (2020-04-01 r78132)
>> Platform: x86_64-apple-darwin18.7.0 (64-bit)
>> Running under: macOS Mojave 10.14.6
>>
>> Matrix products: default
>> BLAS:   /Users/biocbuild/bbs-3.11-bioc/R/lib/libRblas.dylib
>> LAPACK: /Users/biocbuild/bbs-3.11-bioc/R/lib/libRlapack.dylib
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>>
>>
>> -- 
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fredhutch.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=1-DiLdDSQroIloL3L_LKjjvH_qEO6FioafafYgQlOec&s=_OV3TWFsNFtJKjT7wgVfzpmhuXC8hjOLzEo7WdhdRjo&e=
>>
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Thu Apr  2 11:05:39 2020
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Thu, 2 Apr 2020 10:05:39 +0100
Subject: [R-SIG-Mac] 
 Installing CRAN binary packages with R 4.0 installed
 from source crashes R
In-Reply-To: <8C55AA8A-53BE-4171-B20D-075F231016A8@R-project.org>
References: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>
 <8C55AA8A-53BE-4171-B20D-075F231016A8@R-project.org>
Message-ID: <facc80b4-8cf7-7d4c-06e9-ba46d2c443a9@stats.ox.ac.uk>

On 02/04/2020 09:34, Simon Urbanek wrote:
> Herv?,
> 
> "both" is a fairly recent addition and my guess would be that it has been guarded specifically since it is the default and installing binaries only works for the CRAN version. I didn't look at the new "both" code to see how it knows that it's the CRAN version - there is really no special "CRAN" flag. At some point we were guarding binary installs in general by checking the OS and R, but it was fragile - you could be building using the same system as we do and yet use a different compiler, so I think it's in general impossible unless we introduce some extra identification of the binaries. So, yes, if you compile R from sources yourself it is not guaranteed to be compatible with CRAN package binaries. Those are only built and tested with the CRAN R binary.

It is simple: type = 'both' has to know what the two types are.  Only 
the CRAN binaries have the default type set to "mac.binary": building 
from the sources gives you a default type of "source".  See ?.Platform.

> 
> Cheers,
> Simon
> 
> 
>> On 2/04/2020, at 7:47 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>>
>> Hi Simon,
>>
>> After installing R 4.0 alpha from source on a macOS Mojave system, R won't let me use type="both" to install CRAN packages. I get:
>>
>>   Error in install.packages("rJava", type = "both", repos = "https://cran.r-project.org") :
>>     type == "both" can only be used on Windows or a CRAN build for macOS
>>
>> OK so this suggests that the CRAN binary packages for R 4.0 are not compatible with my R. Surprisingly though using type="mac.binary" doesn't complain and lets me install these binaries. But then trying to load them causes segfaults. I've tried this with rJava, Rcpp, ggplot2, and doing library() on any of them crashes my session. Note that installing all these packages from source works without any problem.
>>
>> So my questions are: is it the case that CRAN binary packages are not meant to be used with an R 4.0 installed from source? If yes then why isn't type="mac.binary" blocking this like type="both" does?
>>
>> Thanks,
>> H.
>>
>>> sessionInfo()
>> R version 4.0.0 alpha (2020-04-01 r78132)
>> Platform: x86_64-apple-darwin18.7.0 (64-bit)
>> Running under: macOS Mojave 10.14.6
>>
>> Matrix products: default
>> BLAS:   /Users/biocbuild/bbs-3.11-bioc/R/lib/libRblas.dylib
>> LAPACK: /Users/biocbuild/bbs-3.11-bioc/R/lib/libRlapack.dylib
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>>
>>
>> -- 
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fredhutch.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From R@|ner @end|ng |rom krug@@de  Thu Apr  2 11:11:20 2020
From: R@|ner @end|ng |rom krug@@de (Rainer Krug)
Date: Thu, 2 Apr 2020 11:11:20 +0200
Subject: [R-SIG-Mac] Transitioning from Mac to LInux?
In-Reply-To: <c87227e3-4799-4ed3-813c-131175d42cfa@Spark>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <c87227e3-4799-4ed3-813c-131175d42cfa@Spark>
Message-ID: <3A18FE7B-DA7F-43EC-B01E-885452C6701B@krugs.de>



> On 2 Apr 2020, at 10:15, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> 
> AFAIK most people on that list would vote hard against installing R via homebrew for several reasons - maybe there should be a section about this on the R dev / CRAN page to address this topic, @Simon? Otherwise this will come up again and again.

I think there is - at least it is clear to me (that is why I said ?no support from here?). Although I do not see the problem why, which is a different topic altogether.

I was fully aware of the opposition to my way of using R (homebrew), but I decided to post it anyway, as I think it is a valid and useful approach (different discussion!).


> 
> Anyhow, this is also not relating to the initial topic of that thread and should probably discussed separately.

The OP states:

 I'm wondering whether replacing my iMac (2009) with a new Mac really makes sense from an R - user point of view

Which I think is addressed in my post.

Cheers,

Rainer



> On 2. Apr 2020, 10:04 +0200, Rainer M Krug <Rainer at krugs.de>, wrote:
>> I am using Homebrew on a Mac (two Macs - one at home, one at work) instead of the official R package, and I did not have any problems after upgrades - maybe I am lucky, maybe not as picky in defining ?problem?, but my suggestion would be to try R from homebrew to install R.
>> 
>> OK - no support from here - I know.
>> 
>> And homebrew has also binary versions. What is missing, is a hombrew R package repository. Maybe an idea to create one?
>> 
>> 
>> Cheers,
>> 
>> Rainer
>> 
>> 
>>> On 2 Apr 2020, at 02:37, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>> 
>>> On 01/04/2020 2:48 p.m., Carl Witthoft wrote:
>>>> If I should ask over at r-sig-debian instead of here, please tell me.
>>>> I don't wish to clog r-sig-mac with off-topic stuff.
>>>> I've been watching the massive headaches people are dealing with trying
>>>> to keep R fully compatible with each MacOS X upgrade, I'm wondering
>>>> whether replacing my iMac (2009) with a new Mac really makes sense from
>>>> an R - user point of view, as opposed to getting some inexpensive
>>>> desktop and installing Linux. I know I can run R and RStudio under
>>>> Linux, for example, but don't know what limitations, if any there are
>>>> when it comes to building packages from source, getting compatible
>>>> compilers, and so on.
>>>> What have some of you 'power R users' discovered when/if you tried to
>>>> build , or incorporate Bioconductor or other repository's packages under
>>>> Linux?
>>> 
>>> If your iMac is still working, try installing Ubuntu or some other Linux on it. I think at that age Apple is no longer providing upgrades, but I just put Ubuntu on a 2008 iMac, and it works well. (I needed to upgrade the memory, but that just cost $40 for 4 GB.)
>>> 
>>> So I got a $40 desktop, with a nice screen.
>>> 
>>> Duncan Murdoch
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> 
>> Orcid ID: 0000-0002-7490-0066
>> 
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> 
>> Office: +41 (0)44 635 47 64
>> Cell: +41 (0)78 630 66 57
>> email: Rainer.Krug at uzh.ch
>> Rainer at krugs.de
>> Skype: RMkrug
>> 
>> PGP: 0x0F52F982
>> 
>> 
>> 
>> 
>> [[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac



	[[alternative HTML version deleted]]


From hp@ge@ @end|ng |rom |redhutch@org  Thu Apr  2 11:20:27 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Thu, 2 Apr 2020 02:20:27 -0700
Subject: [R-SIG-Mac] 
 Installing CRAN binary packages with R 4.0 installed
 from source crashes R
In-Reply-To: <facc80b4-8cf7-7d4c-06e9-ba46d2c443a9@stats.ox.ac.uk>
References: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>
 <8C55AA8A-53BE-4171-B20D-075F231016A8@R-project.org>
 <facc80b4-8cf7-7d4c-06e9-ba46d2c443a9@stats.ox.ac.uk>
Message-ID: <b220170d-c45e-1f00-1707-09de54eacdd5@fredhutch.org>



On 4/2/20 02:05, Prof Brian Ripley wrote:
> On 02/04/2020 09:34, Simon Urbanek wrote:
>> Herv?,
>>
>> "both" is a fairly recent addition and my guess would be that it has 
>> been guarded specifically since it is the default and installing 
>> binaries only works for the CRAN version. I didn't look at the new 
>> "both" code to see how it knows that it's the CRAN version - there is 
>> really no special "CRAN" flag. At some point we were guarding binary 
>> installs in general by checking the OS and R, but it was fragile - you 
>> could be building using the same system as we do and yet use a 
>> different compiler, so I think it's in general impossible unless we 
>> introduce some extra identification of the binaries. So, yes, if you 
>> compile R from sources yourself it is not guaranteed to be compatible 
>> with CRAN package binaries. Those are only built and tested with the 
>> CRAN R binary.
> 
> It is simple: type = 'both' has to know what the two types are.? Only 
> the CRAN binaries have the default type set to "mac.binary": building 
> from the sources gives you a default type of "source".? See ?.Platform.

AFAIK the CRAN binary has the default type set to "both".

Anyway knowing the defaults is interesting but only orthogonal to the 
discussion.

H.

> 
>>
>> Cheers,
>> Simon
>>
>>
>>> On 2/04/2020, at 7:47 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>>>
>>> Hi Simon,
>>>
>>> After installing R 4.0 alpha from source on a macOS Mojave system, R 
>>> won't let me use type="both" to install CRAN packages. I get:
>>>
>>> ? Error in install.packages("rJava", type = "both", repos = 
>>> "https://urldefense.proofpoint.com/v2/url?u=https-3A__cran.r-2Dproject.org&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MSzgfKtoxGL_KkQlwrc2_nVNhirnKTu8bSZjbK7pWfo&s=dwNIQLeXMIf8EpV1P4Y7_Dy14ehDLhEXXodGF8S4pu8&e= 
>>> ") :
>>> ??? type == "both" can only be used on Windows or a CRAN build for macOS
>>>
>>> OK so this suggests that the CRAN binary packages for R 4.0 are not 
>>> compatible with my R. Surprisingly though using type="mac.binary" 
>>> doesn't complain and lets me install these binaries. But then trying 
>>> to load them causes segfaults. I've tried this with rJava, Rcpp, 
>>> ggplot2, and doing library() on any of them crashes my session. Note 
>>> that installing all these packages from source works without any 
>>> problem.
>>>
>>> So my questions are: is it the case that CRAN binary packages are not 
>>> meant to be used with an R 4.0 installed from source? If yes then why 
>>> isn't type="mac.binary" blocking this like type="both" does?
>>>
>>> Thanks,
>>> H.
>>>
>>>> sessionInfo()
>>> R version 4.0.0 alpha (2020-04-01 r78132)
>>> Platform: x86_64-apple-darwin18.7.0 (64-bit)
>>> Running under: macOS Mojave 10.14.6
>>>
>>> Matrix products: default
>>> BLAS:?? /Users/biocbuild/bbs-3.11-bioc/R/lib/libRblas.dylib
>>> LAPACK: /Users/biocbuild/bbs-3.11-bioc/R/lib/libRlapack.dylib
>>>
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>
>>> attached base packages:
>>> [1] stats???? graphics? grDevices utils???? datasets? methods?? base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.0.0
>>>
>>>
>>> -- 
>>> Herv? Pag?s
>>>
>>> Program in Computational Biology
>>> Division of Public Health Sciences
>>> Fred Hutchinson Cancer Research Center
>>> 1100 Fairview Ave. N, M1-B514
>>> P.O. Box 19024
>>> Seattle, WA 98109-1024
>>>
>>> E-mail: hpages at fredhutch.org
>>> Phone:? (206) 667-5791
>>> Fax:??? (206) 667-1319
>>>
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MSzgfKtoxGL_KkQlwrc2_nVNhirnKTu8bSZjbK7pWfo&s=y45lZ-rli7qQ2JViPRCfXMg9UUKbXNAZ8S5y5Kn3IAU&e= 
>>>
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MSzgfKtoxGL_KkQlwrc2_nVNhirnKTu8bSZjbK7pWfo&s=y45lZ-rli7qQ2JViPRCfXMg9UUKbXNAZ8S5y5Kn3IAU&e= 
>>
> 
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From e| @end|ng |rom ||@@e@NA  Thu Apr  2 11:58:11 2020
From: e| @end|ng |rom ||@@e@NA (Dr Eberhard W Lisse)
Date: Thu, 2 Apr 2020 11:58:11 +0200
Subject: [R-SIG-Mac] Homebrew
In-Reply-To: <5c34b0b9-a034-e9a2-ea33-f29e7dd481cb@lisse.NA>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <5c34b0b9-a034-e9a2-ea33-f29e7dd481cb@lisse.NA>
Message-ID: <7087fea4-144e-99f7-240c-922d55f0ed65@lisse.NA>

New thread :-)-O

I am wondering if I should not try to figure out how automate this.

Is there a way of (only) listing all user installed (additional) 
packages, ie not the ones that come with R?

I could then construct the below file automagically, and if I was 
really bothered and bored find out how to make Homebrew pre/post 
install scripts to automate this :-)-O

And, for the record, other than that, I can only recall one serious 
issue, when the openblas library got lost recently which was however 
fixed quite quickly. 


greetings, el

On 02/04/2020 10:17, Dr Eberhard W Lisse wrote:
> 
> I do same, including Rstudio (Cask).
> 
> Once in a while after major updates I need to reinstall all my extra
> packages, so I have written me a little script along the lines of
> 
> 	#!/usr/local/bin/Rscript
> 	local({
> 		r <- getOption("repos")
> 		r["CRAN"] <- "https://cloud.r-project.org/"
> 		options(repos = r)
> 	})
> 	install.packages(c(
> 		"RMariaDB", "rstudioapi"
> 	))
> 
> made it 0755 and can run it from the command line. Put it in my
> handbook so I don't forget and never looked back.
> 
> 
> greetings, el
> 
> On 02/04/2020 10:03 am, Rainer M Krug wrote:
>> I am using Homebrew on a Mac (two Macs - one at home, one at work)
>> instead of the official R package, and I did not have any problems
>> after upgrades - maybe I am lucky, maybe not as picky in defining
>> ?problem?, but my suggestion would be to try R from homebrew to
>> install R.
>>
>> OK - no support from here - I know.
>>
>> And homebrew has also binary versions.  What is missing, is a hombrew
>> R package repository.  Maybe an idea to create one?
>>
>>
>> Cheers,
>>
>> Rainer

-- 
Dr. Eberhard W. Lisse   \         /           Obstetrician & Gynaecologist 
el at lisse.NA             / *      |      Telephone: +264 81 124 6733 (cell)
PO Box 8421              \      /     If this email is signed with GPG/PGP
Bachbrecht 10007, Namibia ;____/ Section 20 of Act No. 4 of 2019 may apply


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Apr  2 12:17:11 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Apr 2020 06:17:11 -0400
Subject: [R-SIG-Mac] Homebrew
In-Reply-To: <7087fea4-144e-99f7-240c-922d55f0ed65@lisse.NA>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <5c34b0b9-a034-e9a2-ea33-f29e7dd481cb@lisse.NA>
 <7087fea4-144e-99f7-240c-922d55f0ed65@lisse.NA>
Message-ID: <3d77f15d-43dd-2f98-8869-e383354f87f2@gmail.com>

On 02/04/2020 5:58 a.m., Dr Eberhard W Lisse wrote:
> New thread :-)-O
> 
> I am wondering if I should not try to figure out how automate this.
> 
> Is there a way of (only) listing all user installed (additional)
> packages, ie not the ones that come with R?

Look at the "Priority" column in installed.packages().  "base" is part 
of R, "recommended" is normally distributed with R. "recommended" 
packages can be updated after R is installed, "base" packages can't.

If you just copy all the packages to the new library that aren't already 
there, and run update.packages(checkBuilt = TRUE) R will re-install 
everything that was originally installed under an earlier version.

Duncan Murdoch
> 
> I could then construct the below file automagically, and if I was
> really bothered and bored find out how to make Homebrew pre/post
> install scripts to automate this :-)-O
> 
> And, for the record, other than that, I can only recall one serious
> issue, when the openblas library got lost recently which was however
> fixed quite quickly.
> 
> 
> greetings, el
> 
> On 02/04/2020 10:17, Dr Eberhard W Lisse wrote:
>>
>> I do same, including Rstudio (Cask).
>>
>> Once in a while after major updates I need to reinstall all my extra
>> packages, so I have written me a little script along the lines of
>>
>> 	#!/usr/local/bin/Rscript
>> 	local({
>> 		r <- getOption("repos")
>> 		r["CRAN"] <- "https://cloud.r-project.org/"
>> 		options(repos = r)
>> 	})
>> 	install.packages(c(
>> 		"RMariaDB", "rstudioapi"
>> 	))
>>
>> made it 0755 and can run it from the command line. Put it in my
>> handbook so I don't forget and never looked back.
>>
>>
>> greetings, el
>>
>> On 02/04/2020 10:03 am, Rainer M Krug wrote:
>>> I am using Homebrew on a Mac (two Macs - one at home, one at work)
>>> instead of the official R package, and I did not have any problems
>>> after upgrades - maybe I am lucky, maybe not as picky in defining
>>> ?problem?, but my suggestion would be to try R from homebrew to
>>> install R.
>>>
>>> OK - no support from here - I know.
>>>
>>> And homebrew has also binary versions.  What is missing, is a hombrew
>>> R package repository.  Maybe an idea to create one?
>>>
>>>
>>> Cheers,
>>>
>>> Rainer
>


From R@|ner @end|ng |rom krug@@de  Thu Apr  2 12:43:31 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Thu, 2 Apr 2020 12:43:31 +0200
Subject: [R-SIG-Mac] Homebrew
In-Reply-To: <3d77f15d-43dd-2f98-8869-e383354f87f2@gmail.com>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <5c34b0b9-a034-e9a2-ea33-f29e7dd481cb@lisse.NA>
 <7087fea4-144e-99f7-240c-922d55f0ed65@lisse.NA>
 <3d77f15d-43dd-2f98-8869-e383354f87f2@gmail.com>
Message-ID: <DFED73F2-17FA-43E5-A0C1-91345A04B27A@krugs.de>



> On 2 Apr 2020, at 12:17, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 02/04/2020 5:58 a.m., Dr Eberhard W Lisse wrote:
>> New thread :-)-O
>> I am wondering if I should not try to figure out how automate this.
>> Is there a way of (only) listing all user installed (additional)
>> packages, ie not the ones that come with R?

I had something similar in mind - here is my repo which collects ides (no code yet) https://github.com/rkrug/install

If you are interested, we could get this going.

If I understand correctly, this would be very useful in many cases.

> 
> Look at the "Priority" column in installed.packages().  "base" is part of R, "recommended" is normally distributed with R. "recommended" packages can be updated after R is installed, "base" packages can't.

That is a good idea. We should take this forward.

> 
> If you just copy all the packages to the new library that aren't already there, and run update.packages(checkBuilt = TRUE) R will re-install everything that was originally installed under an earlier version.


Cheers,

Rainer


> 
> Duncan Murdoch
>> I could then construct the below file automagically, and if I was
>> really bothered and bored find out how to make Homebrew pre/post
>> install scripts to automate this :-)-O
>> And, for the record, other than that, I can only recall one serious
>> issue, when the openblas library got lost recently which was however
>> fixed quite quickly.
>> greetings, el
>> On 02/04/2020 10:17, Dr Eberhard W Lisse wrote:
>>> 
>>> I do same, including Rstudio (Cask).
>>> 
>>> Once in a while after major updates I need to reinstall all my extra
>>> packages, so I have written me a little script along the lines of
>>> 
>>> 	#!/usr/local/bin/Rscript
>>> 	local({
>>> 		r <- getOption("repos")
>>> 		r["CRAN"] <- "https://cloud.r-project.org/"
>>> 		options(repos = r)
>>> 	})
>>> 	install.packages(c(
>>> 		"RMariaDB", "rstudioapi"
>>> 	))
>>> 
>>> made it 0755 and can run it from the command line. Put it in my
>>> handbook so I don't forget and never looked back.
>>> 
>>> 
>>> greetings, el
>>> 
>>> On 02/04/2020 10:03 am, Rainer M Krug wrote:
>>>> I am using Homebrew on a Mac (two Macs - one at home, one at work)
>>>> instead of the official R package, and I did not have any problems
>>>> after upgrades - maybe I am lucky, maybe not as picky in defining
>>>> ?problem?, but my suggestion would be to try R from homebrew to
>>>> install R.
>>>> 
>>>> OK - no support from here - I know.
>>>> 
>>>> And homebrew has also binary versions.  What is missing, is a hombrew
>>>> R package repository.  Maybe an idea to create one?
>>>> 
>>>> 
>>>> Cheers,
>>>> 
>>>> Rainer
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From hp@ge@ @end|ng |rom |redhutch@org  Thu Apr  2 12:56:41 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Thu, 2 Apr 2020 03:56:41 -0700
Subject: [R-SIG-Mac] Homebrew
In-Reply-To: <DFED73F2-17FA-43E5-A0C1-91345A04B27A@krugs.de>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <5c34b0b9-a034-e9a2-ea33-f29e7dd481cb@lisse.NA>
 <7087fea4-144e-99f7-240c-922d55f0ed65@lisse.NA>
 <3d77f15d-43dd-2f98-8869-e383354f87f2@gmail.com>
 <DFED73F2-17FA-43E5-A0C1-91345A04B27A@krugs.de>
Message-ID: <923076a3-b6f7-5a65-d4e0-f18399624a4e@fredhutch.org>

Just for a minute let's ignore the fact that installing R via Homebrew 
is not considered a good option by the competent authorities (which 
sounds like a good enough reason to stay away from it). I'm still 
wondering: what's the benefit vs installing the official CRAN binary? 
Just curious.

Thanks,
H.

On 4/2/20 03:43, Rainer M Krug wrote:
> 
> 
>> On 2 Apr 2020, at 12:17, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 02/04/2020 5:58 a.m., Dr Eberhard W Lisse wrote:
>>> New thread :-)-O
>>> I am wondering if I should not try to figure out how automate this.
>>> Is there a way of (only) listing all user installed (additional)
>>> packages, ie not the ones that come with R?
> 
> I had something similar in mind - here is my repo which collects ides (no code yet) https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_rkrug_install&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=uDuycJflTWje5wqLzrbP7zBZojiWq6DmyxGuwakypr0&s=ZUWEqptXXn0kw7PX-ToEnYb7DtfXGUcOn5PzyQVfVG8&e=
> 
> If you are interested, we could get this going.
> 
> If I understand correctly, this would be very useful in many cases.
> 
>>
>> Look at the "Priority" column in installed.packages().  "base" is part of R, "recommended" is normally distributed with R. "recommended" packages can be updated after R is installed, "base" packages can't.
> 
> That is a good idea. We should take this forward.
> 
>>
>> If you just copy all the packages to the new library that aren't already there, and run update.packages(checkBuilt = TRUE) R will re-install everything that was originally installed under an earlier version.
> 
> 
> Cheers,
> 
> Rainer
> 
> 
>>
>> Duncan Murdoch
>>> I could then construct the below file automagically, and if I was
>>> really bothered and bored find out how to make Homebrew pre/post
>>> install scripts to automate this :-)-O
>>> And, for the record, other than that, I can only recall one serious
>>> issue, when the openblas library got lost recently which was however
>>> fixed quite quickly.
>>> greetings, el
>>> On 02/04/2020 10:17, Dr Eberhard W Lisse wrote:
>>>>
>>>> I do same, including Rstudio (Cask).
>>>>
>>>> Once in a while after major updates I need to reinstall all my extra
>>>> packages, so I have written me a little script along the lines of
>>>>
>>>> 	#!/usr/local/bin/Rscript
>>>> 	local({
>>>> 		r <- getOption("repos")
>>>> 		r["CRAN"] <- "https://urldefense.proofpoint.com/v2/url?u=https-3A__cloud.r-2Dproject.org_&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=uDuycJflTWje5wqLzrbP7zBZojiWq6DmyxGuwakypr0&s=rnzs7MN3dX-WT08dEbSoFz0AVBgX-xNNlW9keQhr0jg&e= "
>>>> 		options(repos = r)
>>>> 	})
>>>> 	install.packages(c(
>>>> 		"RMariaDB", "rstudioapi"
>>>> 	))
>>>>
>>>> made it 0755 and can run it from the command line. Put it in my
>>>> handbook so I don't forget and never looked back.
>>>>
>>>>
>>>> greetings, el
>>>>
>>>> On 02/04/2020 10:03 am, Rainer M Krug wrote:
>>>>> I am using Homebrew on a Mac (two Macs - one at home, one at work)
>>>>> instead of the official R package, and I did not have any problems
>>>>> after upgrades - maybe I am lucky, maybe not as picky in defining
>>>>> ?problem?, but my suggestion would be to try R from homebrew to
>>>>> install R.
>>>>>
>>>>> OK - no support from here - I know.
>>>>>
>>>>> And homebrew has also binary versions.  What is missing, is a hombrew
>>>>> R package repository.  Maybe an idea to create one?
>>>>>
>>>>>
>>>>> Cheers,
>>>>>
>>>>> Rainer
>>>
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=uDuycJflTWje5wqLzrbP7zBZojiWq6DmyxGuwakypr0&s=-Kazp7RDPhXbnKvMu3vyOfRSE7ZQBHDCH9Vy6MeGssA&e=
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:	+41 (0)44 635 47 64
> Cell:       	+41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
> 		Rainer at krugs.de
> Skype:     RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=uDuycJflTWje5wqLzrbP7zBZojiWq6DmyxGuwakypr0&s=-Kazp7RDPhXbnKvMu3vyOfRSE7ZQBHDCH9Vy6MeGssA&e=
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From R@|ner @end|ng |rom krug@@de  Thu Apr  2 13:09:18 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Thu, 2 Apr 2020 13:09:18 +0200
Subject: [R-SIG-Mac] Homebrew
In-Reply-To: <923076a3-b6f7-5a65-d4e0-f18399624a4e@fredhutch.org>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <5c34b0b9-a034-e9a2-ea33-f29e7dd481cb@lisse.NA>
 <7087fea4-144e-99f7-240c-922d55f0ed65@lisse.NA>
 <3d77f15d-43dd-2f98-8869-e383354f87f2@gmail.com>
 <DFED73F2-17FA-43E5-A0C1-91345A04B27A@krugs.de>
 <923076a3-b6f7-5a65-d4e0-f18399624a4e@fredhutch.org>
Message-ID: <EE2DD9B8-12E4-4A25-89AE-C342DEEC9428@krugs.de>



> On 2 Apr 2020, at 12:56, Herv? Pag?s <hpages at fredhutch.org> wrote:
> 
> Just for a minute let's ignore the fact that installing R via Homebrew is not considered a good option by the competent authorities (which sounds like a good enough reason to stay away from it). I'm still wondering: what's the benefit vs installing the official CRAN binary? Just curious.

Arguments against homebrew:

Not an official response, but in the past, homebrew was compiling everything on the local machine. This is not the case anymore, and the default installation in homebrew, installs a binary. 

All packages need to be installed from source. This takes time, but I had no problems with any of the packages I use.

Just some tidbits from previous discussions.

But I would like to also hear the official reason (no resources would be a good enough justification as well).

Arguments for homebrew: 

it is more Linux like, in the way that you have more control over the tools used. e.g. when still using the official R installation, I regularly used different versions of GDAL in R, GRASS, ?, which can cause inconsistencies.

The installation is done without requiring root privileges, which is a big advantage (as I see it).



Cheers,

Rainer


> 
> Thanks,
> H.
> 
> On 4/2/20 03:43, Rainer M Krug wrote:
>>> On 2 Apr 2020, at 12:17, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>> 
>>> On 02/04/2020 5:58 a.m., Dr Eberhard W Lisse wrote:
>>>> New thread :-)-O
>>>> I am wondering if I should not try to figure out how automate this.
>>>> Is there a way of (only) listing all user installed (additional)
>>>> packages, ie not the ones that come with R?
>> I had something similar in mind - here is my repo which collects ides (no code yet) https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_rkrug_install&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=uDuycJflTWje5wqLzrbP7zBZojiWq6DmyxGuwakypr0&s=ZUWEqptXXn0kw7PX-ToEnYb7DtfXGUcOn5PzyQVfVG8&e=
>> If you are interested, we could get this going.
>> If I understand correctly, this would be very useful in many cases.
>>> 
>>> Look at the "Priority" column in installed.packages().  "base" is part of R, "recommended" is normally distributed with R. "recommended" packages can be updated after R is installed, "base" packages can't.
>> That is a good idea. We should take this forward.
>>> 
>>> If you just copy all the packages to the new library that aren't already there, and run update.packages(checkBuilt = TRUE) R will re-install everything that was originally installed under an earlier version.
>> Cheers,
>> Rainer
>>> 
>>> Duncan Murdoch
>>>> I could then construct the below file automagically, and if I was
>>>> really bothered and bored find out how to make Homebrew pre/post
>>>> install scripts to automate this :-)-O
>>>> And, for the record, other than that, I can only recall one serious
>>>> issue, when the openblas library got lost recently which was however
>>>> fixed quite quickly.
>>>> greetings, el
>>>> On 02/04/2020 10:17, Dr Eberhard W Lisse wrote:
>>>>> 
>>>>> I do same, including Rstudio (Cask).
>>>>> 
>>>>> Once in a while after major updates I need to reinstall all my extra
>>>>> packages, so I have written me a little script along the lines of
>>>>> 
>>>>> 	#!/usr/local/bin/Rscript
>>>>> 	local({
>>>>> 		r <- getOption("repos")
>>>>> 		r["CRAN"] <- "https://urldefense.proofpoint.com/v2/url?u=https-3A__cloud.r-2Dproject.org_&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=uDuycJflTWje5wqLzrbP7zBZojiWq6DmyxGuwakypr0&s=rnzs7MN3dX-WT08dEbSoFz0AVBgX-xNNlW9keQhr0jg&e= "
>>>>> 		options(repos = r)
>>>>> 	})
>>>>> 	install.packages(c(
>>>>> 		"RMariaDB", "rstudioapi"
>>>>> 	))
>>>>> 
>>>>> made it 0755 and can run it from the command line. Put it in my
>>>>> handbook so I don't forget and never looked back.
>>>>> 
>>>>> 
>>>>> greetings, el
>>>>> 
>>>>> On 02/04/2020 10:03 am, Rainer M Krug wrote:
>>>>>> I am using Homebrew on a Mac (two Macs - one at home, one at work)
>>>>>> instead of the official R package, and I did not have any problems
>>>>>> after upgrades - maybe I am lucky, maybe not as picky in defining
>>>>>> ?problem?, but my suggestion would be to try R from homebrew to
>>>>>> install R.
>>>>>> 
>>>>>> OK - no support from here - I know.
>>>>>> 
>>>>>> And homebrew has also binary versions.  What is missing, is a hombrew
>>>>>> R package repository.  Maybe an idea to create one?
>>>>>> 
>>>>>> 
>>>>>> Cheers,
>>>>>> 
>>>>>> Rainer
>>>> 
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=uDuycJflTWje5wqLzrbP7zBZojiWq6DmyxGuwakypr0&s=-Kazp7RDPhXbnKvMu3vyOfRSE7ZQBHDCH9Vy6MeGssA&e=
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> Orcid ID: 0000-0002-7490-0066
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> Office:	+41 (0)44 635 47 64
>> Cell:       	+41 (0)78 630 66 57
>> email:      Rainer.Krug at uzh.ch
>> 		Rainer at krugs.de
>> Skype:     RMkrug
>> PGP: 0x0F52F982
>> 	[[alternative HTML version deleted]]
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=uDuycJflTWje5wqLzrbP7zBZojiWq6DmyxGuwakypr0&s=-Kazp7RDPhXbnKvMu3vyOfRSE7ZQBHDCH9Vy6MeGssA&e=
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From e| @end|ng |rom ||@@e@NA  Thu Apr  2 14:27:58 2020
From: e| @end|ng |rom ||@@e@NA (Dr Eberhard W Lisse)
Date: Thu, 2 Apr 2020 14:27:58 +0200
Subject: [R-SIG-Mac] Homebrew
In-Reply-To: <EE2DD9B8-12E4-4A25-89AE-C342DEEC9428@krugs.de>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <5c34b0b9-a034-e9a2-ea33-f29e7dd481cb@lisse.NA>
 <7087fea4-144e-99f7-240c-922d55f0ed65@lisse.NA>
 <3d77f15d-43dd-2f98-8869-e383354f87f2@gmail.com>
 <DFED73F2-17FA-43E5-A0C1-91345A04B27A@krugs.de>
 <923076a3-b6f7-5a65-d4e0-f18399624a4e@fredhutch.org>
 <EE2DD9B8-12E4-4A25-89AE-C342DEEC9428@krugs.de>
Message-ID: <dbdbd661-7a6d-1363-3aec-4c58d0469067@lisse.NA>

Argument for homebrew:

	brew upgrade

which will figure out what needs to be upgraded so I don't have 
manually keep track of it.


BTW, it usually pulls the binary, and these have worked without any 
issues for many years, the last time something went wrong on the 
Download and it pulled the source. I don't care either way.

Packages must be installed from source, but not as source. R will look 
for the package on CRAN like any other and usually takes the binary, 
sometimes asking whether it should take a (newer) source )of the 
package)

The first run of (re-)installing additional packages does indeed take 
some time, but it doesn't happen often.

The point is that there is a channel for issues with homebrew packages 
but few people (especially when desperate) will take the time :-)-O

greetings, el

 02/04/2020 13:09, Rainer M Krug wrote:
> 
> 
>> On 2 Apr 2020, at 12:56, Herv? Pag?s <hpages at fredhutch.org> wrote:
>>
>> Just for a minute let's ignore the fact that installing R via
>> Homebrew is not considered a good option by the competent authorities
>> (which sounds like a good enough reason to stay away from it).  I'm
>> still wondering: what's the benefit vs installing the official CRAN
>> binary?  Just curious.
> 
> Arguments against homebrew:
> 
> Not an official response, but in the past, homebrew was compiling
> everything on the local machine.  This is not the case anymore, and
> the default installation in homebrew, installs a binary.
> 
> All packages need to be installed from source.  This takes time, but I
> had no problems with any of the packages I use.
> 
> Just some tidbits from previous discussions.
> 
> But I would like to also hear the official reason (no resources would
> be a good enough justification as well).
> 
> Arguments for homebrew:
> 
> it is more Linux like, in the way that you have more control over the
> tools used.  e.g. when still using the official R installation, I
> regularly used different versions of GDAL in R, GRASS, ?, which can
> cause inconsistencies.
> 
> The installation is done without requiring root privileges, which is a
> big advantage (as I see it).
> 
> 
> 
> Cheers,
> 
> Rainer
[...]

-- 
Dr. Eberhard W. Lisse   \         /           Obstetrician & Gynaecologist 
el at lisse.NA             / *      |      Telephone: +264 81 124 6733 (cell)
PO Box 8421              \      /     If this email is signed with GPG/PGP
Bachbrecht 10007, Namibia ;____/ Section 20 of Act No. 4 of 2019 may apply


From t|m@b@te@ @end|ng |rom ed@@c@uk  Thu Apr  2 15:01:18 2020
From: t|m@b@te@ @end|ng |rom ed@@c@uk (BATES Timothy)
Date: Thu, 2 Apr 2020 13:01:18 +0000
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <b9601798-698e-8180-0c93-fb5dd85212ee@stats.ox.ac.uk>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>
 <b9601798-698e-8180-0c93-fb5dd85212ee@stats.ox.ac.uk>
Message-ID: <8C649F71-1D79-4EA4-8FC9-CFD45CBB0300@ed.ac.uk>

Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).

Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP

Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.

Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.

I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.

Best, t


> On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>
> On 01/04/2020 22:02, Simon Urbanek wrote:
>> JJB,
>> 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
>
> Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual.  The problems come in distributing them.
>
> The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware.  But it is available for the small (tiny?) proportion of users who need it.
The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.

From e| @end|ng |rom ||@@e@NA  Thu Apr  2 15:16:06 2020
From: e| @end|ng |rom ||@@e@NA (Dr Eberhard W Lisse)
Date: Thu, 2 Apr 2020 15:16:06 +0200
Subject: [R-SIG-Mac] Homebrew
In-Reply-To: <DFED73F2-17FA-43E5-A0C1-91345A04B27A@krugs.de>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <5c34b0b9-a034-e9a2-ea33-f29e7dd481cb@lisse.NA>
 <7087fea4-144e-99f7-240c-922d55f0ed65@lisse.NA>
 <3d77f15d-43dd-2f98-8869-e383354f87f2@gmail.com>
 <DFED73F2-17FA-43E5-A0C1-91345A04B27A@krugs.de>
Message-ID: <4520ea97-119c-32d7-f676-816f58deda68@lisse.NA>

Rainer,

I am definitively interested.

But, as a disclaimer, I am an elderly Gynecologist only dabbling in R
and a little in Perl :-)-O. 

el

On 02/04/2020 12:43, Rainer M Krug wrote:
> 
> 
>> On 2 Apr 2020, at 12:17, Duncan Murdoch <murdoch.duncan at gmail.com>
>> wrote:
>>
>> On 02/04/2020 5:58 a.m., Dr Eberhard W Lisse wrote:
>>> New thread :-)-O
>>> I am wondering if I should not try to figure out how automate this.
>>> Is there a way of (only) listing all user installed (additional)
>>> packages, ie not the ones that come with R?
> 
> I had something similar in mind - here is my repo which collects ides
> (no code yet) https://github.com/rkrug/install
> 
> If you are interested, we could get this going.
> 
> If I understand correctly, this would be very useful in many cases.
> 
>>
>> Look at the "Priority" column in installed.packages().  "base" is
>> part of R, "recommended" is normally distributed with R.
>> "recommended" packages can be updated after R is installed, "base"
>> packages can't.
> 
> That is a good idea.  We should take this forward.
> 
>>
>> If you just copy all the packages to the new library that aren't
>> already there, and run update.packages(checkBuilt = TRUE) R will
>> re-install everything that was originally installed under an earlier
>> version.
> 
> 
> Cheers,
> 
> Rainer
[...]

-- 
Dr. Eberhard W. Lisse   \         /           Obstetrician & Gynaecologist 
el at lisse.NA             / *      |      Telephone: +264 81 124 6733 (cell)
PO Box 8421              \      /     If this email is signed with GPG/PGP
Bachbrecht 10007, Namibia ;____/ Section 20 of Act No. 4 of 2019 may apply


From m|k3h@|| @end|ng |rom gm@||@com  Thu Apr  2 16:36:53 2020
From: m|k3h@|| @end|ng |rom gm@||@com (Michael Hall)
Date: Thu, 2 Apr 2020 09:36:53 -0500
Subject: [R-SIG-Mac] R-SIG-Mac Digest, Vol 205, Issue 13
In-Reply-To: <mailman.13548.1590.1585825815.2266.r-sig-mac@r-project.org>
References: <mailman.13548.1590.1585825815.2266.r-sig-mac@r-project.org>
Message-ID: <791F6F32-54C2-4A90-9795-31F4FE56889B@gmail.com>



> On Apr 2, 2020, at 6:10 AM, r-sig-mac-request at r-project.org wrote:
> 
>> Is there a way of (only) listing all user installed (additional)
>> packages, ie not the ones that come with R?

https://www.r-bloggers.com/list-of-user-installed-r-packages-and-their-versions/ <https://www.r-bloggers.com/list-of-user-installed-r-packages-and-their-versions/>

Sys.getenv()
?
R_LIBS_USER             ~/Library/R/3.6/library
?

list.files('~/Library/R/3.6/library')
 [1] "alphavantager" "BBmisc"        "brew"          "C50"          
 [5] "checkmate"     "clisymbols"    "coda"          "commonmark?   
...
	[[alternative HTML version deleted]]


From co||n @end|ng |rom co||n@m|th@org  Thu Apr  2 16:47:30 2020
From: co||n @end|ng |rom co||n@m|th@org (Colin A. Smith)
Date: Thu, 2 Apr 2020 10:47:30 -0400
Subject: [R-SIG-Mac] R-SIG-Mac Digest, Vol 205, Issue 13
In-Reply-To: <791F6F32-54C2-4A90-9795-31F4FE56889B@gmail.com>
References: <mailman.13548.1590.1585825815.2266.r-sig-mac@r-project.org>
 <791F6F32-54C2-4A90-9795-31F4FE56889B@gmail.com>
Message-ID: <53268035-29E6-4492-BDE0-F0D0D8F0CE2D@colinsmith.org>

This will do it as well:

package_list <- tapply(rownames(installed.packages()), installed.packages()[,"LibPath"], c)

Bonus to find out which library directories are writable by the user:

file.access(names(package_list), mode=2) == 0

Cheers,

Colin

> On Apr 2, 2020, at 10:36, Michael Hall <mik3hall at gmail.com> wrote:
> 
>> On Apr 2, 2020, at 6:10 AM, r-sig-mac-request at r-project.org wrote:
>> 
>>> Is there a way of (only) listing all user installed (additional)
>>> packages, ie not the ones that come with R?
> 
> https://www.r-bloggers.com/list-of-user-installed-r-packages-and-their-versions/ <https://www.r-bloggers.com/list-of-user-installed-r-packages-and-their-versions/>
> 
> Sys.getenv()
> ?
> R_LIBS_USER             ~/Library/R/3.6/library
> ?
> 
> list.files('~/Library/R/3.6/library')
> [1] "alphavantager" "BBmisc"        "brew"          "C50"          
> [5] "checkmate"     "clisymbols"    "coda"          "commonmark?   
> ...


From pd@|gd @end|ng |rom gm@||@com  Thu Apr  2 18:44:13 2020
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Thu, 2 Apr 2020 18:44:13 +0200
Subject: [R-SIG-Mac] R-SIG-Mac Digest, Vol 205, Issue 13
In-Reply-To: <53268035-29E6-4492-BDE0-F0D0D8F0CE2D@colinsmith.org>
References: <mailman.13548.1590.1585825815.2266.r-sig-mac@r-project.org>
 <791F6F32-54C2-4A90-9795-31F4FE56889B@gmail.com>
 <53268035-29E6-4492-BDE0-F0D0D8F0CE2D@colinsmith.org>
Message-ID: <923F2D64-23FC-42F9-B717-BFEE5A35EF43@gmail.com>

> On 2 Apr 2020, at 16:47 , Colin A. Smith <colin at colinsmith.org> wrote:
> 
> tapply(rownames(installed.packages()), installed.packages()[,"LibPath"], c)

or

X <- installed.packages()
split(rownames(X), X[,"LibPath"])


-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From kev|nu@hey @end|ng |rom gm@||@com  Thu Apr  2 19:04:47 2020
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Thu, 2 Apr 2020 10:04:47 -0700
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <8C649F71-1D79-4EA4-8FC9-CFD45CBB0300@ed.ac.uk>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>
 <b9601798-698e-8180-0c93-fb5dd85212ee@stats.ox.ac.uk>
 <8C649F71-1D79-4EA4-8FC9-CFD45CBB0300@ed.ac.uk>
Message-ID: <CAJXgQP3jKuMcJ95JyGykAKHvSnps+E3bw2b8AbPv0QUhMZafig@mail.gmail.com>

Hi,

For what it's worth, it looks like it is still possible to use OpenMP
on macOS with the system toolchain. Using the example file here:

https://computing.llnl.gov/tutorials/openMP/samples/C/omp_hello.c

I can compile + link + run this on macOS 10.15.4 and with:

$ /usr/bin/clang -Xpreprocessor -fopenmp
-I/usr/local/opt/libomp/include -L/usr/local/opt/libomp/lib -lomp
omp_hello.c

As for whether this is 'safe', or whether R could conceivably bundle
and use its own copy of libomp is a separate question I cannot answer.
But at least this is a mechanism for enterprising users to enable
OpenMP in packages built from source if they so desire.

Best,
Kevin

On Thu, Apr 2, 2020 at 6:01 AM BATES Timothy <tim.bates at ed.ac.uk> wrote:
>
> Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
>
> Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
>
> Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
>
> Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
>
> I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
>
> Best, t
>
>
> > On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> >
> > On 01/04/2020 22:02, Simon Urbanek wrote:
> >> JJB,
> >> 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
> >
> > Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual.  The problems come in distributing them.
> >
> > The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware.  But it is available for the small (tiny?) proportion of users who need it.
> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From b@|@mut2 @end|ng |rom ||||no|@@edu  Thu Apr  2 19:31:31 2020
From: b@|@mut2 @end|ng |rom ||||no|@@edu (Balamuta, James Joseph)
Date: Thu, 2 Apr 2020 17:31:31 +0000
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <CAJXgQP3jKuMcJ95JyGykAKHvSnps+E3bw2b8AbPv0QUhMZafig@mail.gmail.com>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>
 <b9601798-698e-8180-0c93-fb5dd85212ee@stats.ox.ac.uk>
 <8C649F71-1D79-4EA4-8FC9-CFD45CBB0300@ed.ac.uk>
 <CAJXgQP3jKuMcJ95JyGykAKHvSnps+E3bw2b8AbPv0QUhMZafig@mail.gmail.com>
Message-ID: <3A44048D-ECF7-4D46-95CE-B95ECA584816@illinois.edu>

Kevin,

Simon discussed why they opted to avoid this back in June '19 when Jon Clayden brought up a similar success.

https://stat.ethz.ch/pipermail/r-sig-mac/2019-June/012998.html

The sentiment was using the system compiler is in manner is unsupported and works only on some systems. I'm not sure with the OS bump whether there still is disparity across 10.13/14/15.

That said, I do agree with Tim that it would be nice to have OpenMP enabled-by default. But, I'm also equally okay with it being disabled to simplify workflow and encourage more parallelization through snow/future as getting into parallelized compiled code with R has far more dragons afoot.

Best,

JJB

?On 4/2/20, 12:05 PM, "R-SIG-Mac on behalf of Kevin Ushey" <r-sig-mac-bounces at r-project.org on behalf of kevinushey at gmail.com> wrote:

    Hi,
    
    For what it's worth, it looks like it is still possible to use OpenMP
    on macOS with the system toolchain. Using the example file here:
    
    https://computing.llnl.gov/tutorials/openMP/samples/C/omp_hello.c
    
    I can compile + link + run this on macOS 10.15.4 and with:
    
    $ /usr/bin/clang -Xpreprocessor -fopenmp
    -I/usr/local/opt/libomp/include -L/usr/local/opt/libomp/lib -lomp
    omp_hello.c
    
    As for whether this is 'safe', or whether R could conceivably bundle
    and use its own copy of libomp is a separate question I cannot answer.
    But at least this is a mechanism for enterprising users to enable
    OpenMP in packages built from source if they so desire.
    
    Best,
    Kevin
    
    On Thu, Apr 2, 2020 at 6:01 AM BATES Timothy <tim.bates at ed.ac.uk> wrote:
    >
    > Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
    >
    > Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
    >
    > Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
    >
    > Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
    >
    > I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
    >
    > Best, t
    >
    >
    > > On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
    > >
    > > On 01/04/2020 22:02, Simon Urbanek wrote:
    > >> JJB,
    > >> 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
    > >
    > > Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual.  The problems come in distributing them.
    > >
    > > The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware.  But it is available for the small (tiny?) proportion of users who need it.
    > The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
    > _______________________________________________
    > R-SIG-Mac mailing list
    > R-SIG-Mac at r-project.org
    > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    
    _______________________________________________
    R-SIG-Mac mailing list
    R-SIG-Mac at r-project.org
    https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Apr  2 22:20:46 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Apr 2020 16:20:46 -0400
Subject: [R-SIG-Mac] R-SIG-Mac Digest, Vol 205, Issue 13
In-Reply-To: <53268035-29E6-4492-BDE0-F0D0D8F0CE2D@colinsmith.org>
References: <mailman.13548.1590.1585825815.2266.r-sig-mac@r-project.org>
 <791F6F32-54C2-4A90-9795-31F4FE56889B@gmail.com>
 <53268035-29E6-4492-BDE0-F0D0D8F0CE2D@colinsmith.org>
Message-ID: <a25ab7a9-d539-0698-3e8a-12a424229e1d@gmail.com>

That lists "base" as a package, as well as the other base and 
recommended packages.  That's not what Dr. Lisse was looking for:  he 
wanted "all user installed (additional) packages, ie not the ones that 
come with R?".

Duncan Murdoch

On 02/04/2020 10:47 a.m., Colin A. Smith wrote:
> This will do it as well:
> 
> package_list <- tapply(rownames(installed.packages()), installed.packages()[,"LibPath"], c)
> 
> Bonus to find out which library directories are writable by the user:
> 
> file.access(names(package_list), mode=2) == 0
> 
> Cheers,
> 
> Colin
> 
>> On Apr 2, 2020, at 10:36, Michael Hall <mik3hall at gmail.com> wrote:
>>
>>> On Apr 2, 2020, at 6:10 AM, r-sig-mac-request at r-project.org wrote:
>>>
>>>> Is there a way of (only) listing all user installed (additional)
>>>> packages, ie not the ones that come with R?
>>
>> https://www.r-bloggers.com/list-of-user-installed-r-packages-and-their-versions/ <https://www.r-bloggers.com/list-of-user-installed-r-packages-and-their-versions/>
>>
>> Sys.getenv()
>> ?
>> R_LIBS_USER             ~/Library/R/3.6/library
>> ?
>>
>> list.files('~/Library/R/3.6/library')
>> [1] "alphavantager" "BBmisc"        "brew"          "C50"
>> [5] "checkmate"     "clisymbols"    "coda"          "commonmark?
>> ...
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From e| @end|ng |rom ||@@e@n@  Thu Apr  2 22:28:58 2020
From: e| @end|ng |rom ||@@e@n@ (Eberhard W Lisse)
Date: Thu, 2 Apr 2020 22:28:58 +0200
Subject: [R-SIG-Mac] R-SIG-Mac Digest, Vol 205, Issue 13
In-Reply-To: <a25ab7a9-d539-0698-3e8a-12a424229e1d@gmail.com>
References: <mailman.13548.1590.1585825815.2266.r-sig-mac@r-project.org>
 <791F6F32-54C2-4A90-9795-31F4FE56889B@gmail.com>
 <53268035-29E6-4492-BDE0-F0D0D8F0CE2D@colinsmith.org>
 <a25ab7a9-d539-0698-3e8a-12a424229e1d@gmail.com>
Message-ID: <bc2433fd-cdf8-4396-bf52-f2a91c3420ba@Spark>

I think I will play with this over the weekend, especially if the calm before the storm prevails.

el

?
Sent from Dr Lisse?s iPad Mini 5
On 2 Apr 2020, 22:21 +0200, Duncan Murdoch <murdoch.duncan at gmail.com>, wrote:
> That lists "base" as a package, as well as the other base and
> recommended packages. That's not what Dr. Lisse was looking for: he
> wanted "all user installed (additional) packages, ie not the ones that
> come with R?".
>
> Duncan Murdoch
>
> On 02/04/2020 10:47 a.m., Colin A. Smith wrote:
> > This will do it as well:
> >
> > package_list <- tapply(rownames(installed.packages()), installed.packages()[,"LibPath"], c)
> >
> > Bonus to find out which library directories are writable by the user:
> >
> > file.access(names(package_list), mode=2) == 0
> >
> > Cheers,
> >
> > Colin
> >
> > > On Apr 2, 2020, at 10:36, Michael Hall <mik3hall at gmail.com> wrote:
> > >
> > > > On Apr 2, 2020, at 6:10 AM, r-sig-mac-request at r-project.org wrote:
> > > >
> > > > > Is there a way of (only) listing all user installed (additional)
> > > > > packages, ie not the ones that come with R?
> > >
> > > https://www.r-bloggers.com/list-of-user-installed-r-packages-and-their-versions/ <https://www.r-bloggers.com/list-of-user-installed-r-packages-and-their-versions/>
> > >
> > > Sys.getenv()
> > > ?
> > > R_LIBS_USER ~/Library/R/3.6/library
> > > ?
> > >
> > > list.files('~/Library/R/3.6/library')
> > > [1] "alphavantager" "BBmisc" "brew" "C50"
> > > [5] "checkmate" "clisymbols" "coda" "commonmark?
> > > ...
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr  2 22:30:45 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 3 Apr 2020 09:30:45 +1300
Subject: [R-SIG-Mac] Homebrew [was: from Mac to LInux?]
In-Reply-To: <c87227e3-4799-4ed3-813c-131175d42cfa@Spark>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <c87227e3-4799-4ed3-813c-131175d42cfa@Spark>
Message-ID: <8230648E-EF57-4C8D-9AAB-95DF78D6EDD6@R-project.org>



> On 2/04/2020, at 9:15 PM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> 
> AFAIK most people on that list would vote hard against installing R via homebrew for several reasons - maybe there should be a section about this on the R dev / CRAN page to address this topic, @Simon? Otherwise this will come up again and again.
> 

That main objection is that people are mixing Homebrew with CRAN and vice-versa which leads to many problems. You cannot use packages from CRAN when using Homebrew, period, and you have to be really careful if you want to mix Homebrew libraries (not anything R-related) with CRAN (it is doable if you know what you're doing).

The fundamental issue is that package managers like Homebrew replace system libraries with their own (for new features/updates that the system libraries don't provide) which break anything that relies on the system library. Out of all the package managers Homebrew the only one that is trying to address the issue by trying to separate them, but even that has been diverging over time.

The second issue is that they are increasingly replacing toolchains (compilers) with their own builds, which makes everything incompatible in explosive ways (things just segfault). Making sure that a compiler toolchain is stable is actually non-trivial and many packager manager authors/maintainers have little experience with this. That used the be the primary reason to avoid them, because it was just normal that the released binaries were miscompiled and things would break all the time. Fortunately, I think that has gotten better over time.

If you stick only with Homebrew, then you're likely ok, but you're on your own and have to compile all packages form sources. Majority of our time as CRAN maintainers for the binary releases is about providing dependent libraries for packages and making sure things "just work". It is doable, just a lot of work, so by using Homebrew every user has to spend that time.

(FWIW I use Hombrew myself for tools, but not in /usr/local (I'm using /opt/brew) and I only put it on the PATH for the tools that I need, never to compile anything "native" against it.)

Cheers,
Simon



> Anyhow, this is also not relating to the initial topic of that thread and should probably discussed separately.
> On 2. Apr 2020, 10:04 +0200, Rainer M Krug <Rainer at krugs.de>, wrote:
>> I am using Homebrew on a Mac (two Macs - one at home, one at work) instead of the official R package, and I did not have any problems after upgrades - maybe I am lucky, maybe not as picky in defining ?problem?, but my suggestion would be to try R from homebrew to install R.
>> 
>> OK - no support from here - I know.
>> 
>> And homebrew has also binary versions. What is missing, is a hombrew R package repository. Maybe an idea to create one?
>> 
>> 
>> Cheers,
>> 
>> Rainer
>> 
>> 
>>> On 2 Apr 2020, at 02:37, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>> 
>>> On 01/04/2020 2:48 p.m., Carl Witthoft wrote:
>>>> If I should ask over at r-sig-debian instead of here, please tell me.
>>>> I don't wish to clog r-sig-mac with off-topic stuff.
>>>> I've been watching the massive headaches people are dealing with trying
>>>> to keep R fully compatible with each MacOS X upgrade, I'm wondering
>>>> whether replacing my iMac (2009) with a new Mac really makes sense from
>>>> an R - user point of view, as opposed to getting some inexpensive
>>>> desktop and installing Linux. I know I can run R and RStudio under
>>>> Linux, for example, but don't know what limitations, if any there are
>>>> when it comes to building packages from source, getting compatible
>>>> compilers, and so on.
>>>> What have some of you 'power R users' discovered when/if you tried to
>>>> build , or incorporate Bioconductor or other repository's packages under
>>>> Linux?
>>> 
>>> If your iMac is still working, try installing Ubuntu or some other Linux on it. I think at that age Apple is no longer providing upgrades, but I just put Ubuntu on a 2008 iMac, and it works well. (I needed to upgrade the memory, but that just cost $40 for 4 GB.)
>>> 
>>> So I got a $40 desktop, with a nice screen.
>>> 
>>> Duncan Murdoch
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> 
>> Orcid ID: 0000-0002-7490-0066
>> 
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> 
>> Office: +41 (0)44 635 47 64
>> Cell: +41 (0)78 630 66 57
>> email: Rainer.Krug at uzh.ch
>> Rainer at krugs.de
>> Skype: RMkrug
>> 
>> PGP: 0x0F52F982
>> 
>> 
>> 
>> 
>> [[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr  2 22:34:21 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 3 Apr 2020 09:34:21 +1300
Subject: [R-SIG-Mac] 
 Installing CRAN binary packages with R 4.0 installed
 from source crashes R
In-Reply-To: <b220170d-c45e-1f00-1707-09de54eacdd5@fredhutch.org>
References: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>
 <8C55AA8A-53BE-4171-B20D-075F231016A8@R-project.org>
 <facc80b4-8cf7-7d4c-06e9-ba46d2c443a9@stats.ox.ac.uk>
 <b220170d-c45e-1f00-1707-09de54eacdd5@fredhutch.org>
Message-ID: <358250DE-10E8-4250-AB04-9C7E6CDCB3AC@R-project.org>

Herv?,

what Brian was referring to was

> .Platform$pkgType
[1] "mac.binary"

Cheers,
Simon


> On 2/04/2020, at 10:20 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
> 
> 
> 
> On 4/2/20 02:05, Prof Brian Ripley wrote:
>> On 02/04/2020 09:34, Simon Urbanek wrote:
>>> Herv?,
>>> 
>>> "both" is a fairly recent addition and my guess would be that it has been guarded specifically since it is the default and installing binaries only works for the CRAN version. I didn't look at the new "both" code to see how it knows that it's the CRAN version - there is really no special "CRAN" flag. At some point we were guarding binary installs in general by checking the OS and R, but it was fragile - you could be building using the same system as we do and yet use a different compiler, so I think it's in general impossible unless we introduce some extra identification of the binaries. So, yes, if you compile R from sources yourself it is not guaranteed to be compatible with CRAN package binaries. Those are only built and tested with the CRAN R binary.
>> It is simple: type = 'both' has to know what the two types are.  Only the CRAN binaries have the default type set to "mac.binary": building from the sources gives you a default type of "source".  See ?.Platform.
> 
> AFAIK the CRAN binary has the default type set to "both".
> 
> Anyway knowing the defaults is interesting but only orthogonal to the discussion.
> 
> H.
> 
>>> 
>>> Cheers,
>>> Simon
>>> 
>>> 
>>>> On 2/04/2020, at 7:47 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>>>> 
>>>> Hi Simon,
>>>> 
>>>> After installing R 4.0 alpha from source on a macOS Mojave system, R won't let me use type="both" to install CRAN packages. I get:
>>>> 
>>>>   Error in install.packages("rJava", type = "both", repos = "https://urldefense.proofpoint.com/v2/url?u=https-3A__cran.r-2Dproject.org&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MSzgfKtoxGL_KkQlwrc2_nVNhirnKTu8bSZjbK7pWfo&s=dwNIQLeXMIf8EpV1P4Y7_Dy14ehDLhEXXodGF8S4pu8&e= ") :
>>>>     type == "both" can only be used on Windows or a CRAN build for macOS
>>>> 
>>>> OK so this suggests that the CRAN binary packages for R 4.0 are not compatible with my R. Surprisingly though using type="mac.binary" doesn't complain and lets me install these binaries. But then trying to load them causes segfaults. I've tried this with rJava, Rcpp, ggplot2, and doing library() on any of them crashes my session. Note that installing all these packages from source works without any problem.
>>>> 
>>>> So my questions are: is it the case that CRAN binary packages are not meant to be used with an R 4.0 installed from source? If yes then why isn't type="mac.binary" blocking this like type="both" does?
>>>> 
>>>> Thanks,
>>>> H.
>>>> 
>>>>> sessionInfo()
>>>> R version 4.0.0 alpha (2020-04-01 r78132)
>>>> Platform: x86_64-apple-darwin18.7.0 (64-bit)
>>>> Running under: macOS Mojave 10.14.6
>>>> 
>>>> Matrix products: default
>>>> BLAS:   /Users/biocbuild/bbs-3.11-bioc/R/lib/libRblas.dylib
>>>> LAPACK: /Users/biocbuild/bbs-3.11-bioc/R/lib/libRlapack.dylib
>>>> 
>>>> locale:
>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>> 
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>> 
>>>> loaded via a namespace (and not attached):
>>>> [1] compiler_4.0.0
>>>> 
>>>> 
>>>> -- 
>>>> Herv? Pag?s
>>>> 
>>>> Program in Computational Biology
>>>> Division of Public Health Sciences
>>>> Fred Hutchinson Cancer Research Center
>>>> 1100 Fairview Ave. N, M1-B514
>>>> P.O. Box 19024
>>>> Seattle, WA 98109-1024
>>>> 
>>>> E-mail: hpages at fredhutch.org
>>>> Phone:  (206) 667-5791
>>>> Fax:    (206) 667-1319
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MSzgfKtoxGL_KkQlwrc2_nVNhirnKTu8bSZjbK7pWfo&s=y45lZ-rli7qQ2JViPRCfXMg9UUKbXNAZ8S5y5Kn3IAU&e= 
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MSzgfKtoxGL_KkQlwrc2_nVNhirnKTu8bSZjbK7pWfo&s=y45lZ-rli7qQ2JViPRCfXMg9UUKbXNAZ8S5y5Kn3IAU&e= 
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr  2 22:48:46 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 3 Apr 2020 09:48:46 +1300
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <8C649F71-1D79-4EA4-8FC9-CFD45CBB0300@ed.ac.uk>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <F5214803-66A7-4EAA-B477-82CE83BF3067@R-project.org>
 <b9601798-698e-8180-0c93-fb5dd85212ee@stats.ox.ac.uk>
 <8C649F71-1D79-4EA4-8FC9-CFD45CBB0300@ed.ac.uk>
Message-ID: <6147A91B-0564-4C01-AD01-6C459DE5D8F9@R-project.org>

Tim,


> On 3/04/2020, at 2:01 AM, BATES Timothy <tim.bates at ed.ac.uk> wrote:
> 
> Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
> 

It has caused a lot of issues, it trips people on a daily basis which is just not worth it. Also with Apple's increasingly strict rules about what can be distributed we don't want to be in the business in maintaining a separate toolchain. There have been numerous issues with C++ exceptions so the fall out was much bigger than originally expected and it would only get worse.


> Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
> 
> Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
> 

The idea is that if a package deems this critical, it can enable this for the users. As it is now, packages can still supply iomp and use it.

That said, I would open for discussion the ability to distribute iomp with the R binary, but it would not be supported by R directly, i.e., it would be on the package author to make sure that the way the package operates is compatible with that binary. Let me know what you think.


> Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
> 

Yes, but OpenMP is rarely used for those tasks. In R OpenMP can be only used for very small subset of such tasks - which is why alternative approaches are much more common.

Cheers,
Simon


> I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
> 
> Best, t
> 
> 
>> On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>> 
>> On 01/04/2020 22:02, Simon Urbanek wrote:
>>> JJB,
>>> 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
>> 
>> Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual.  The problems come in distributing them.
>> 
>> The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware.  But it is available for the small (tiny?) proportion of users who need it.
> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Thu Apr  2 23:12:39 2020
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Thu, 2 Apr 2020 16:12:39 -0500
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <5947CAEC-99F3-4B7F-A25F-7B91DE03B3B4@krugs.de>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <B364FBC3-6797-4573-AA4F-198F84B6A3BA@rud.is>
 <2350cf0f-3efa-46d1-94f3-0f4dcfbd289b@Spark>
 <5947CAEC-99F3-4B7F-A25F-7B91DE03B3B4@krugs.de>
Message-ID: <4681072c-3a9b-f881-7c15-8839b5c94817@prodsyse.com>

 ????? Is there a procedure for dual install, e.g., so I could run "R4 
CMD check", etc.?


 ????? Please excuse if this has already been answered.


 ????? Thanks,
 ????? Spencer Graves


On 2020-04-02 02:50, Rainer M Krug wrote:
>
>> On 1 Apr 2020, at 16:07, Patrick Schratz <patrick.schratz at gmail.com> wrote:
>>
>> The same goes here regarding support.
>>
>> I am (co-)maintaining a package on ropensci focusing on provider-agnostic CI approaches for R (tic) and have quite some experience with all the little culprits there.
>>
>> Since you mentioned Travis: Be aware that the R community is (slowly but actively) moving away from Travis for a few reasons.
>> Also on GitHub Actions you can only build on 10.15 (Catalina) right now.
> So where is the R community moving too?
>
> Rainer
>
>> Best, Patrick
>> On 1. Apr 2020, 15:41 +0200, Bob Rudis <bob at rud.is>, wrote:
>>> I shall pile on with an additional offer of assistance, Simon and a huge #ty for this and all the work you do.
>>>
>>>> On Apr 1, 2020, at 09:30, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
>>>>
>>>> Simon,
>>>>
>>>> Thanks for the overview! A few quick questions:
>>>>
>>>> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again?
>>>> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
>>>> 3. How likely is the oldest system requirement to be bumped in a patch release?
>>>>
>>>> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help!
>>>>
>>>> Best,
>>>>
>>>> JJB
>>>>
>>>> On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
>>>>
>>>> Dear Mac users,
>>>>
>>>> R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>>>>
>>>> https://mac.R-project.org
>>>>
>>>> before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>>>>
>>>> The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>>>>
>>>> For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
>>>>
>>>> The new R build system is in
>>>> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>>>> Packages build system has not changed and is in
>>>> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
>>>>
>>>> We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>>>>
>>>> Please test R pre-releases and provide feedback!
>>>>
>>>> Thanks,
>>>> Simon
>>>>
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>
>>>>
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 	[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>
> Orcid ID: 0000-0002-7490-0066
>
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
>
> Office:	+41 (0)44 635 47 64
> Cell:       	+41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
> 		Rainer at krugs.de
> Skype:     RMkrug
>
> PGP: 0x0F52F982
>
>
>
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Thu Apr  2 23:20:43 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Thu, 2 Apr 2020 23:20:43 +0200
Subject: [R-SIG-Mac] OpenMP on CRAN
Message-ID: <5e949cc0-3640-4df9-8357-d68cb1a8374d@Spark>

Thanks Kevin, interesting approach.

However, when testing it against a few packages I get symbol pointer issues (e.g. for data.table and xgboost).
Using llvm everything works.
Could llvm be the best middle way? Easy installation via brew and still clang compliant.

Currently my Makevars look as follows

CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
[?]

CC = ccache /usr/local/opt/llvm/bin/clang
[?]

Where llvm was installed via `brew install llvm`.
SDK 10.13 because of {igraph} and {Rcpp} issues with SDK 10.14 and SDK 10.15
On 2. Apr 2020, 23:01 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> Tim,
>
>
> > On 3/04/2020, at 2:01 AM, BATES Timothy <tim.bates at ed.ac.uk> wrote:
> >
> > Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
> >
>
> It has caused a lot of issues, it trips people on a daily basis which is just not worth it. Also with Apple's increasingly strict rules about what can be distributed we don't want to be in the business in maintaining a separate toolchain. There have been numerous issues with C++ exceptions so the fall out was much bigger than originally expected and it would only get worse.
>
>
> > Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
> >
> > Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
> >
>
> The idea is that if a package deems this critical, it can enable this for the users. As it is now, packages can still supply iomp and use it.
>
> That said, I would open for discussion the ability to distribute iomp with the R binary, but it would not be supported by R directly, i.e., it would be on the package author to make sure that the way the package operates is compatible with that binary. Let me know what you think.
>
>
> > Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
> >
>
> Yes, but OpenMP is rarely used for those tasks. In R OpenMP can be only used for very small subset of such tasks - which is why alternative approaches are much more common.
>
> Cheers,
> Simon
>
>
> > I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
> >
> > Best, t
> >
> >
> > > On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> > >
> > > On 01/04/2020 22:02, Simon Urbanek wrote:
> > > > JJB,
> > > > 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
> > >
> > > Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual. The problems come in distributing them.
> > >
> > > The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware. But it is available for the small (tiny?) proportion of users who need it.
> > The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

	[[alternative HTML version deleted]]


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Thu Apr  2 23:23:29 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Thu, 2 Apr 2020 23:23:29 +0200
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
Message-ID: <89b9e285-c77c-4acd-9b59-702590f90724@Spark>

R versions on macOS are installed next to each other - you just need to ?switch? between them during initialization.
In the end R CMD * will use the R interpreter that is first in your $PATH.

https://rud.is/rswitch/?helps - but you can also do so without by writing custom CLI wrappers.
On 2. Apr 2020, 23:13 +0200, Spencer Graves <spencer.graves at prodsyse.com>, wrote:
> ????? Is there a procedure for dual install, e.g., so I could run "R4
> CMD check", etc.?
>
>
> ????? Please excuse if this has already been answered.
>
>
> ????? Thanks,
> ????? Spencer Graves
>
>
> On 2020-04-02 02:50, Rainer M Krug wrote:
> >
> > > On 1 Apr 2020, at 16:07, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> > >
> > > The same goes here regarding support.
> > >
> > > I am (co-)maintaining a package on ropensci focusing on provider-agnostic CI approaches for R (tic) and have quite some experience with all the little culprits there.
> > >
> > > Since you mentioned Travis: Be aware that the R community is (slowly but actively) moving away from Travis for a few reasons.
> > > Also on GitHub Actions you can only build on 10.15 (Catalina) right now.
> > So where is the R community moving too?
> >
> > Rainer
> >
> > > Best, Patrick
> > > On 1. Apr 2020, 15:41 +0200, Bob Rudis <bob at rud.is>, wrote:
> > > > I shall pile on with an additional offer of assistance, Simon and a huge #ty for this and all the work you do.
> > > >
> > > > > On Apr 1, 2020, at 09:30, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
> > > > >
> > > > > Simon,
> > > > >
> > > > > Thanks for the overview! A few quick questions:
> > > > >
> > > > > 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again?
> > > > > 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
> > > > > 3. How likely is the oldest system requirement to be bumped in a patch release?
> > > > >
> > > > > Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help!
> > > > >
> > > > > Best,
> > > > >
> > > > > JJB
> > > > >
> > > > > On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
> > > > >
> > > > > Dear Mac users,
> > > > >
> > > > > R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
> > > > >
> > > > > https://mac.R-project.org
> > > > >
> > > > > before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
> > > > >
> > > > > The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
> > > > >
> > > > > For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
> > > > >
> > > > > The new R build system is in
> > > > > https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
> > > > > Packages build system has not changed and is in
> > > > > https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
> > > > >
> > > > > We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
> > > > >
> > > > > Please test R pre-releases and provide feedback!
> > > > >
> > > > > Thanks,
> > > > > Simon
> > > > >
> > > > > _______________________________________________
> > > > > R-SIG-Mac mailing list
> > > > > R-SIG-Mac at r-project.org
> > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > > > >
> > > > >
> > > > > _______________________________________________
> > > > > R-SIG-Mac mailing list
> > > > > R-SIG-Mac at r-project.org
> > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > > > _______________________________________________
> > > > R-SIG-Mac mailing list
> > > > R-SIG-Mac at r-project.org
> > > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > > [[alternative HTML version deleted]]
> > >
> > > _______________________________________________
> > > R-SIG-Mac mailing list
> > > R-SIG-Mac at r-project.org
> > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > --
> > Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> >
> > Orcid ID: 0000-0002-7490-0066
> >
> > Department of Evolutionary Biology and Environmental Studies
> > University of Z?rich
> > Office Y34-J-74
> > Winterthurerstrasse 190
> > 8075 Z?rich
> > Switzerland
> >
> > Office: +41 (0)44 635 47 64
> > Cell: +41 (0)78 630 66 57
> > email: Rainer.Krug at uzh.ch
> > Rainer at krugs.de
> > Skype: RMkrug
> >
> > PGP: 0x0F52F982
> >
> >
> >
> >
> > [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr  2 23:33:40 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 3 Apr 2020 10:33:40 +1300
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <4681072c-3a9b-f881-7c15-8839b5c94817@prodsyse.com>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
 <35C5E893-C24A-46DE-872E-C24CB0325E14@illinois.edu>
 <B364FBC3-6797-4573-AA4F-198F84B6A3BA@rud.is>
 <2350cf0f-3efa-46d1-94f3-0f4dcfbd289b@Spark>
 <5947CAEC-99F3-4B7F-A25F-7B91DE03B3B4@krugs.de>
 <4681072c-3a9b-f881-7c15-8839b5c94817@prodsyse.com>
Message-ID: <9B92B739-9344-4841-9F37-3E2E858E01DB@R-project.org>

Yes, to a degree - but is'a bit counter-intuitive. Unfortunately, the 4.0 installer won't keep 3.6 (not sure why, need to investigate), but vice-versa. So you have to install 4.0.0 alpha and then 3.6.3. Alternatively, you can move /Library/Frameworks/R.framework aside and then install 4.0.0 alpha.

Once you have both versions, you can just change the Current symlink from one to the other - see R for Mac FAQ 10.10:
https://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html#Why-is-R_002ehome_0028_0029-not-versioned_003f 

Cheers,
Simon



> On 3/04/2020, at 10:12 AM, Spencer Graves <spencer.graves at prodsyse.com> wrote:
> 
>       Is there a procedure for dual install, e.g., so I could run "R4 CMD check", etc.?
> 
> 
>       Please excuse if this has already been answered.
> 
> 
>       Thanks,
>       Spencer Graves
> 
> 
> On 2020-04-02 02:50, Rainer M Krug wrote:
>> 
>>> On 1 Apr 2020, at 16:07, Patrick Schratz <patrick.schratz at gmail.com> wrote:
>>> 
>>> The same goes here regarding support.
>>> 
>>> I am (co-)maintaining a package on ropensci focusing on provider-agnostic CI approaches for R (tic) and have quite some experience with all the little culprits there.
>>> 
>>> Since you mentioned Travis: Be aware that the R community is (slowly but actively) moving away from Travis for a few reasons.
>>> Also on GitHub Actions you can only build on 10.15 (Catalina) right now.
>> So where is the R community moving too?
>> 
>> Rainer
>> 
>>> Best, Patrick
>>> On 1. Apr 2020, 15:41 +0200, Bob Rudis <bob at rud.is>, wrote:
>>>> I shall pile on with an additional offer of assistance, Simon and a huge #ty for this and all the work you do.
>>>> 
>>>>> On Apr 1, 2020, at 09:30, Balamuta, James Joseph <balamut2 at illinois.edu> wrote:
>>>>> 
>>>>> Simon,
>>>>> 
>>>>> Thanks for the overview! A few quick questions:
>>>>> 
>>>>> 1. Compiler-wise, the external clang compiler requirement was removed and, so, there is no guarantee of OpenMP on macOS again?
>>>>> 2. Why was 10.13 chosen as the oldest system instead of 10.14 given the new push for increased security by Apple?
>>>>> 3. How likely is the oldest system requirement to be bumped in a patch release?
>>>>> 
>>>>> Also, if you need help with mac-builder, Travis, or GitHub Actions, I'm more than happy to help!
>>>>> 
>>>>> Best,
>>>>> 
>>>>> JJB
>>>>> 
>>>>> On 3/31/20, 11:59 PM, "R-SIG-Mac on behalf of Simon Urbanek" <r-sig-mac-bounces at r-project.org on behalf of simon.urbanek at R-project.org> wrote:
>>>>> 
>>>>> Dear Mac users,
>>>>> 
>>>>> R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
>>>>> 
>>>>> https://mac.R-project.org
>>>>> 
>>>>> before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
>>>>> 
>>>>> The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
>>>>> 
>>>>> For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
>>>>> 
>>>>> The new R build system is in
>>>>> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
>>>>> Packages build system has not changed and is in
>>>>> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
>>>>> 
>>>>> We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
>>>>> 
>>>>> Please test R pre-releases and provide feedback!
>>>>> 
>>>>> Thanks,
>>>>> Simon
>>>>> 
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>> 
>>>>> 
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 	[[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> 
>> Orcid ID: 0000-0002-7490-0066
>> 
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> 
>> Office:	+41 (0)44 635 47 64
>> Cell:       	+41 (0)78 630 66 57
>> email:      Rainer.Krug at uzh.ch
>> 		Rainer at krugs.de
>> Skype:     RMkrug
>> 
>> PGP: 0x0F52F982
>> 
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr  2 23:38:43 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 3 Apr 2020 10:38:43 +1300
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <5e949cc0-3640-4df9-8357-d68cb1a8374d@Spark>
References: <5e949cc0-3640-4df9-8357-d68cb1a8374d@Spark>
Message-ID: <7D4D4E26-DB09-4CA0-8E52-BE0BF3AEB8D5@R-project.org>

Patrick,

you can't mix compilers - it really matters which iomp your'e using. llvm has its own modified version which may not be the same as the official Intel release. From your tests it looks like you're using the llvm one which will likely work only with that compiler. Since Apple doesn't have official omp support it's hard to say which versions work and which don't.


> On 3/04/2020, at 10:20 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> 
> Thanks Kevin, interesting approach.
> 
> However, when testing it against a few packages I get symbol pointer issues (e.g. for data.table and xgboost). 
> Using llvm everything works. 
> Could llvm be the best middle way? Easy installation via brew and still clang compliant.
> 
> Currently my Makevars look as follows
> 
> CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> [?]
> 
> CC = ccache /usr/local/opt/llvm/bin/clang
> [?]
> 
> Where llvm was installed via `brew install llvm`.
> SDK 10.13 because of {igraph} and {Rcpp} issues with SDK 10.14 and SDK 10.15


I mentioned that before, but I do not see issues with 10.14 SDK.

Cheers,
Simon


> On 2. Apr 2020, 23:01 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
>> Tim,
>> 
>> 
>>> On 3/04/2020, at 2:01 AM, BATES Timothy <tim.bates at ed.ac.uk> wrote:
>>> 
>>> Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
>>> 
>> 
>> It has caused a lot of issues, it trips people on a daily basis which is just not worth it. Also with Apple's increasingly strict rules about what can be distributed we don't want to be in the business in maintaining a separate toolchain. There have been numerous issues with C++ exceptions so the fall out was much bigger than originally expected and it would only get worse.
>> 
>> 
>>> Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
>>> 
>>> Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
>>> 
>> 
>> The idea is that if a package deems this critical, it can enable this for the users. As it is now, packages can still supply iomp and use it.
>> 
>> That said, I would open for discussion the ability to distribute iomp with the R binary, but it would not be supported by R directly, i.e., it would be on the package author to make sure that the way the package operates is compatible with that binary. Let me know what you think.
>> 
>> 
>>> Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
>>> 
>> 
>> Yes, but OpenMP is rarely used for those tasks. In R OpenMP can be only used for very small subset of such tasks - which is why alternative approaches are much more common.
>> 
>> Cheers,
>> Simon
>> 
>> 
>>> I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
>>> 
>>> Best, t
>>> 
>>> 
>>>> On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>>>> 
>>>> On 01/04/2020 22:02, Simon Urbanek wrote:
>>>>> JJB,
>>>>> 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
>>>> 
>>>> Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual. The problems come in distributing them.
>>>> 
>>>> The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware. But it is available for the small (tiny?) proportion of users who need it.
>>> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Apr  3 03:03:31 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 3 Apr 2020 14:03:31 +1300
Subject: [R-SIG-Mac] GTK+ support (or rather lack thereof)
Message-ID: <8C2D00AB-E602-4ECC-97E3-752C3D00427B@R-project.org>

We have a fairly complete coverage of packages for R 4.0.0, but one exception is GTK+ (and thus RGtk2 and its dependencies). It seems that GTK+ has been abandoned several years ago, the documented macOS build doesn't work and there are no released binaries. To make things worse, Gnome has been switching from autoconf to custom build systems that are also broken (quite amazing - the build fails with an error in the build system's headers including Python headers...), so the path of building our own release from scratch is also not realistic anymore (we used to build GTK+ for X11 when it was still possible).

Hence this is a call to the R community to see if anyone actually cares. And if so, if there is any known source or path to macOS binaries (script to build it is fine, too). Unlike regular rules, we would allow dynamic linking as we have granted that exception to GTK+ before, but it has to be compatible with the native system. As a last resort, we could also re-use out GTK+ 2.24.17 binaries from Snow Leopard, but those are considerably old, so I'd prefer not to do that. Comments are welcome.

Thanks,
Simon


From hp@ge@ @end|ng |rom |redhutch@org  Fri Apr  3 03:37:43 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Thu, 2 Apr 2020 18:37:43 -0700
Subject: [R-SIG-Mac] 
 Installing CRAN binary packages with R 4.0 installed
 from source crashes R
In-Reply-To: <358250DE-10E8-4250-AB04-9C7E6CDCB3AC@R-project.org>
References: <790e6fb1-45a0-f93e-14d5-ad0c1581b0d2@fredhutch.org>
 <8C55AA8A-53BE-4171-B20D-075F231016A8@R-project.org>
 <facc80b4-8cf7-7d4c-06e9-ba46d2c443a9@stats.ox.ac.uk>
 <b220170d-c45e-1f00-1707-09de54eacdd5@fredhutch.org>
 <358250DE-10E8-4250-AB04-9C7E6CDCB3AC@R-project.org>
Message-ID: <afe5ccdb-9fe2-e489-a0e2-34010426508e@fredhutch.org>

Yeah I **guess** so. Even though a close look at ?.Platform doesn't 
particularly help clarify the somewhat fuzzy concept of "default type" 
or "preferred setting for options('pkgType')":

    pkgType: character string, the preferred setting for
             ?options("pkgType")?.  Values ?"source"?,
             ?"mac.binary.el-capitan"? and ?"win.binary"? are
             currently in use.

   > options("pkgType")
   $pkgType
   [1] "both"

Cheers,
H.


On 4/2/20 13:34, Simon Urbanek wrote:
> Herv?,
> 
> what Brian was referring to was
> 
>> .Platform$pkgType
> [1] "mac.binary"
> 
> Cheers,
> Simon
> 
> 
>> On 2/04/2020, at 10:20 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>>
>>
>>
>> On 4/2/20 02:05, Prof Brian Ripley wrote:
>>> On 02/04/2020 09:34, Simon Urbanek wrote:
>>>> Herv?,
>>>>
>>>> "both" is a fairly recent addition and my guess would be that it has been guarded specifically since it is the default and installing binaries only works for the CRAN version. I didn't look at the new "both" code to see how it knows that it's the CRAN version - there is really no special "CRAN" flag. At some point we were guarding binary installs in general by checking the OS and R, but it was fragile - you could be building using the same system as we do and yet use a different compiler, so I think it's in general impossible unless we introduce some extra identification of the binaries. So, yes, if you compile R from sources yourself it is not guaranteed to be compatible with CRAN package binaries. Those are only built and tested with the CRAN R binary.
>>> It is simple: type = 'both' has to know what the two types are.  Only the CRAN binaries have the default type set to "mac.binary": building from the sources gives you a default type of "source".  See ?.Platform.
>>
>> AFAIK the CRAN binary has the default type set to "both".
>>
>> Anyway knowing the defaults is interesting but only orthogonal to the discussion.
>>
>> H.
>>
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>>
>>>>> On 2/04/2020, at 7:47 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>>>>>
>>>>> Hi Simon,
>>>>>
>>>>> After installing R 4.0 alpha from source on a macOS Mojave system, R won't let me use type="both" to install CRAN packages. I get:
>>>>>
>>>>>    Error in install.packages("rJava", type = "both", repos = "https://urldefense.proofpoint.com/v2/url?u=https-3A__cran.r-2Dproject.org&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MSzgfKtoxGL_KkQlwrc2_nVNhirnKTu8bSZjbK7pWfo&s=dwNIQLeXMIf8EpV1P4Y7_Dy14ehDLhEXXodGF8S4pu8&e= ") :
>>>>>      type == "both" can only be used on Windows or a CRAN build for macOS
>>>>>
>>>>> OK so this suggests that the CRAN binary packages for R 4.0 are not compatible with my R. Surprisingly though using type="mac.binary" doesn't complain and lets me install these binaries. But then trying to load them causes segfaults. I've tried this with rJava, Rcpp, ggplot2, and doing library() on any of them crashes my session. Note that installing all these packages from source works without any problem.
>>>>>
>>>>> So my questions are: is it the case that CRAN binary packages are not meant to be used with an R 4.0 installed from source? If yes then why isn't type="mac.binary" blocking this like type="both" does?
>>>>>
>>>>> Thanks,
>>>>> H.
>>>>>
>>>>>> sessionInfo()
>>>>> R version 4.0.0 alpha (2020-04-01 r78132)
>>>>> Platform: x86_64-apple-darwin18.7.0 (64-bit)
>>>>> Running under: macOS Mojave 10.14.6
>>>>>
>>>>> Matrix products: default
>>>>> BLAS:   /Users/biocbuild/bbs-3.11-bioc/R/lib/libRblas.dylib
>>>>> LAPACK: /Users/biocbuild/bbs-3.11-bioc/R/lib/libRlapack.dylib
>>>>>
>>>>> locale:
>>>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>>>
>>>>> attached base packages:
>>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>>
>>>>> loaded via a namespace (and not attached):
>>>>> [1] compiler_4.0.0
>>>>>
>>>>>
>>>>> -- 
>>>>> Herv? Pag?s
>>>>>
>>>>> Program in Computational Biology
>>>>> Division of Public Health Sciences
>>>>> Fred Hutchinson Cancer Research Center
>>>>> 1100 Fairview Ave. N, M1-B514
>>>>> P.O. Box 19024
>>>>> Seattle, WA 98109-1024
>>>>>
>>>>> E-mail: hpages at fredhutch.org
>>>>> Phone:  (206) 667-5791
>>>>> Fax:    (206) 667-1319
>>>>>
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MSzgfKtoxGL_KkQlwrc2_nVNhirnKTu8bSZjbK7pWfo&s=y45lZ-rli7qQ2JViPRCfXMg9UUKbXNAZ8S5y5Kn3IAU&e=
>>>>
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIDaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MSzgfKtoxGL_KkQlwrc2_nVNhirnKTu8bSZjbK7pWfo&s=y45lZ-rli7qQ2JViPRCfXMg9UUKbXNAZ8S5y5Kn3IAU&e=
>>
>> -- 
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fredhutch.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=mS2VaDhRE920UQhIPqkpg1axr9MiA-QUvAqJO_KA9Yg&s=4Zvrf8eq5Xdjb1h3bimvVbxionS4zE6k11U0wmNBjdE&e=
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From R@|ner @end|ng |rom krug@@de  Fri Apr  3 11:01:10 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Fri, 3 Apr 2020 11:01:10 +0200
Subject: [R-SIG-Mac] Homebrew [was: from Mac to LInux?]
In-Reply-To: <8230648E-EF57-4C8D-9AAB-95DF78D6EDD6@R-project.org>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <c87227e3-4799-4ed3-813c-131175d42cfa@Spark>
 <8230648E-EF57-4C8D-9AAB-95DF78D6EDD6@R-project.org>
Message-ID: <5E7B257B-FC20-42DF-8356-88A04672552F@krugs.de>

Thanks a lot for your detailed response - it is very much appreciated.

> On 2 Apr 2020, at 22:30, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> 
> 
>> On 2/04/2020, at 9:15 PM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
>> 
>> AFAIK most people on that list would vote hard against installing R via homebrew for several reasons - maybe there should be a section about this on the R dev / CRAN page to address this topic, @Simon? Otherwise this will come up again and again.
>> 
> 


> That main objection is that people are mixing Homebrew with CRAN and vice-versa which leads to many problems. You cannot use packages from CRAN when using Homebrew, period, and you have to be really careful if you want to mix Homebrew libraries (not anything R-related) with CRAN (it is doable if you know what you're doing).


This is definitely true (and I assume, you are referring to CRAN binary packages).

But I am wondering: I am always installing from the normal CRAN mirrors, and my R installation (homebrew) always installs from source. I never use `type = ?source?`in the installation for packages. 

My question: when would I install incompatible packages (I assume, you mean binary packages for Mac) from CRAN?


> 
> The fundamental issue is that package managers like Homebrew replace system libraries with their own (for new features/updates that the system libraries don't provide) which break anything that relies on the system library. Out of all the package managers Homebrew the only one that is trying to address the issue by trying to separate them, but even that has been diverging over time.
> 
> The second issue is that they are increasingly replacing toolchains (compilers) with their own builds, which makes everything incompatible in explosive ways (things just segfault). Making sure that a compiler toolchain is stable is actually non-trivial and many packager manager authors/maintainers have little experience with this. That used the be the primary reason to avoid them, because it was just normal that the released binaries were miscompiled and things would break all the time. Fortunately, I think that has gotten better over time.
> 
> If you stick only with Homebrew, then you're likely ok, but you're on your own and have to compile all packages form sources.

This is true, but I did not encounter big problems. And this is, why I thought loud in suggesting to setup a (non official!) homebrew tap to install the packages, similar to how it is in linux (Debian).

> Majority of our time as CRAN maintainers for the binary releases is about providing dependent libraries for packages and making sure things "just work?.

And I think everybody really appreciates this and is VErY happy about it. This is essential work!

> It is doable, just a lot of work, so by using Homebrew every user has to spend that time.

Doable: definitely. lot of work: in my experience not that much more.

Overall, I definitely agree, that the official distribution should stay the proper apple way. But there are circumstances, where these are delayed, or problems occur after macOS upgrades, which will delay the compilation of new ones (GRASS did not have Mac binaries for a long time due to this problem). 

So an alternative way of installing, community supported but approved, would be preferable. The r formula for homebrew has been installed in the last year more that 112.000 times (https://formulae.brew.sh/formula/r) so I think there is likely a rather large user base of R from homebrew. 

A first step in this direction, would be to either include homebrew in this list, or create a new R-sig-hoebrew list, which could become the home of these discussions.


> 
> (FWIW I use Hombrew myself for tools, but not in /usr/local (I'm using /opt/brew) and I only put it on the PATH for the tools that I need, never to compile anything "native" against it.)

Than you are completely in the cold and without support from homebrew? As far as I heard, in this case, everything is locally compiled and not using the binaries - correct?

Cheers, and thanks again for your very useful clarifications,

Rainer

> 
> Cheers,
> Simon
> 
> 
> 
>> Anyhow, this is also not relating to the initial topic of that thread and should probably discussed separately.
>> On 2. Apr 2020, 10:04 +0200, Rainer M Krug <Rainer at krugs.de>, wrote:
>>> I am using Homebrew on a Mac (two Macs - one at home, one at work) instead of the official R package, and I did not have any problems after upgrades - maybe I am lucky, maybe not as picky in defining ?problem?, but my suggestion would be to try R from homebrew to install R.
>>> 
>>> OK - no support from here - I know.
>>> 
>>> And homebrew has also binary versions. What is missing, is a hombrew R package repository. Maybe an idea to create one?
>>> 
>>> 
>>> Cheers,
>>> 
>>> Rainer
>>> 
>>> 
>>>> On 2 Apr 2020, at 02:37, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>> 
>>>> On 01/04/2020 2:48 p.m., Carl Witthoft wrote:
>>>>> If I should ask over at r-sig-debian instead of here, please tell me.
>>>>> I don't wish to clog r-sig-mac with off-topic stuff.
>>>>> I've been watching the massive headaches people are dealing with trying
>>>>> to keep R fully compatible with each MacOS X upgrade, I'm wondering
>>>>> whether replacing my iMac (2009) with a new Mac really makes sense from
>>>>> an R - user point of view, as opposed to getting some inexpensive
>>>>> desktop and installing Linux. I know I can run R and RStudio under
>>>>> Linux, for example, but don't know what limitations, if any there are
>>>>> when it comes to building packages from source, getting compatible
>>>>> compilers, and so on.
>>>>> What have some of you 'power R users' discovered when/if you tried to
>>>>> build , or incorporate Bioconductor or other repository's packages under
>>>>> Linux?
>>>> 
>>>> If your iMac is still working, try installing Ubuntu or some other Linux on it. I think at that age Apple is no longer providing upgrades, but I just put Ubuntu on a 2008 iMac, and it works well. (I needed to upgrade the memory, but that just cost $40 for 4 GB.)
>>>> 
>>>> So I got a $40 desktop, with a nice screen.
>>>> 
>>>> Duncan Murdoch
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> 
>>> Orcid ID: 0000-0002-7490-0066
>>> 
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> 
>>> Office: +41 (0)44 635 47 64
>>> Cell: +41 (0)78 630 66 57
>>> email: Rainer.Krug at uzh.ch
>>> Rainer at krugs.de
>>> Skype: RMkrug
>>> 
>>> PGP: 0x0F52F982
>>> 
>>> 
>>> 
>>> 
>>> [[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Apr  3 13:25:12 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sat, 4 Apr 2020 00:25:12 +1300
Subject: [R-SIG-Mac] Homebrew [was: from Mac to LInux?]
In-Reply-To: <5E7B257B-FC20-42DF-8356-88A04672552F@krugs.de>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <c87227e3-4799-4ed3-813c-131175d42cfa@Spark>
 <8230648E-EF57-4C8D-9AAB-95DF78D6EDD6@R-project.org>
 <5E7B257B-FC20-42DF-8356-88A04672552F@krugs.de>
Message-ID: <5D829B68-8198-4CF8-B854-F71C5182FF97@R-project.org>

Rainer,


> On 3/04/2020, at 10:01 PM, Rainer M Krug <Rainer at krugs.de> wrote:
> 
> Thanks a lot for your detailed response - it is very much appreciated.
> 
>> On 2 Apr 2020, at 22:30, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> 
>> 
>> 
>>> On 2/04/2020, at 9:15 PM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
>>> 
>>> AFAIK most people on that list would vote hard against installing R via homebrew for several reasons - maybe there should be a section about this on the R dev / CRAN page to address this topic, @Simon? Otherwise this will come up again and again.
>>> 
>> 
> 
> 
>> That main objection is that people are mixing Homebrew with CRAN and vice-versa which leads to many problems. You cannot use packages from CRAN when using Homebrew, period, and you have to be really careful if you want to mix Homebrew libraries (not anything R-related) with CRAN (it is doable if you know what you're doing).
> 
> 
> This is definitely true (and I assume, you are referring to CRAN binary packages).
> 
> But I am wondering: I am always installing from the normal CRAN mirrors, and my R installation (homebrew) always installs from source. I never use `type = ?source?`in the installation for packages. 
> 
> My question: when would I install incompatible packages (I assume, you mean binary packages for Mac) from CRAN?
> 

Maybe you wouldn't but I have seen people do it.


> 
>> 
>> The fundamental issue is that package managers like Homebrew replace system libraries with their own (for new features/updates that the system libraries don't provide) which break anything that relies on the system library. Out of all the package managers Homebrew the only one that is trying to address the issue by trying to separate them, but even that has been diverging over time.
>> 
>> The second issue is that they are increasingly replacing toolchains (compilers) with their own builds, which makes everything incompatible in explosive ways (things just segfault). Making sure that a compiler toolchain is stable is actually non-trivial and many packager manager authors/maintainers have little experience with this. That used the be the primary reason to avoid them, because it was just normal that the released binaries were miscompiled and things would break all the time. Fortunately, I think that has gotten better over time.
>> 
>> If you stick only with Homebrew, then you're likely ok, but you're on your own and have to compile all packages form sources.
> 
> This is true, but I did not encounter big problems. And this is, why I thought loud in suggesting to setup a (non official!) homebrew tap to install the packages, similar to how it is in linux (Debian).
> 
>> Majority of our time as CRAN maintainers for the binary releases is about providing dependent libraries for packages and making sure things "just work?.
> 
> And I think everybody really appreciates this and is VErY happy about it. This is essential work!
> 
>> It is doable, just a lot of work, so by using Homebrew every user has to spend that time.
> 
> Doable: definitely. lot of work: in my experience not that much more.
> 
> Overall, I definitely agree, that the official distribution should stay the proper apple way. But there are circumstances, where these are delayed, or problems occur after macOS upgrades, which will delay the compilation of new ones (GRASS did not have Mac binaries for a long time due to this problem). 
> 

I'm not sure what you refer to, but if there are issues, please let me know. If you don't report issues, they won't get fixed.


> So an alternative way of installing, community supported but approved, would be preferable. The r formula for homebrew has been installed in the last year more that 112.000 times (https://formulae.brew.sh/formula/r) so I think there is likely a rather large user base of R from homebrew. 
> 
> A first step in this direction, would be to either include homebrew in this list, or create a new R-sig-hoebrew list, which could become the home of these discussions.
> 

I'm not sure I'd like to go there. I would direct that to Homebrew as we have nothing to do with the formulae used there. However, that's not really my call.

Today another reason came up why I have an issue with Homebrew: people install compilers and similar tools and then use them instead of Xcode for everything outside of Homebrew. That is absolutely unsupported, because they have different runtime environments, so things break. Sometimes in subtle ways and things segfault at random points. The thing is, if people knew what they were doing, and Homebrew was only used by developers, it would be all fine - they'd know not to mix and match run-times. But most user don't.


> 
>> 
>> (FWIW I use Hombrew myself for tools, but not in /usr/local (I'm using /opt/brew) and I only put it on the PATH for the tools that I need, never to compile anything "native" against it.)
> 
> Than you are completely in the cold and without support from homebrew? As far as I heard, in this case, everything is locally compiled and not using the binaries - correct?
> 

No, binaries are used where it is safe. There may be a few bottles that don't like to be installed in a custom location. I have not seen issues with it. To be honest I think putting homebrew in /usr/local was a bad mistake as that causes a lot of problems since all 3rd party software installs there, so you get very quickly to completely broken state. As with all those things, it's predicated on full control so if you don't use anything but Homebrew ever it's ok. But pretty much all native open source packages/installers install into /usr/local so the moment you use one thing in addition to Homebrew things start breaking.

Cheers,
Simon


> Cheers, and thanks again for your very useful clarifications,
> 
> Rainer
> 
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>> Anyhow, this is also not relating to the initial topic of that thread and should probably discussed separately.
>>> On 2. Apr 2020, 10:04 +0200, Rainer M Krug <Rainer at krugs.de>, wrote:
>>>> I am using Homebrew on a Mac (two Macs - one at home, one at work) instead of the official R package, and I did not have any problems after upgrades - maybe I am lucky, maybe not as picky in defining ?problem?, but my suggestion would be to try R from homebrew to install R.
>>>> 
>>>> OK - no support from here - I know.
>>>> 
>>>> And homebrew has also binary versions. What is missing, is a hombrew R package repository. Maybe an idea to create one?
>>>> 
>>>> 
>>>> Cheers,
>>>> 
>>>> Rainer
>>>> 
>>>> 
>>>>> On 2 Apr 2020, at 02:37, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>> 
>>>>> On 01/04/2020 2:48 p.m., Carl Witthoft wrote:
>>>>>> If I should ask over at r-sig-debian instead of here, please tell me.
>>>>>> I don't wish to clog r-sig-mac with off-topic stuff.
>>>>>> I've been watching the massive headaches people are dealing with trying
>>>>>> to keep R fully compatible with each MacOS X upgrade, I'm wondering
>>>>>> whether replacing my iMac (2009) with a new Mac really makes sense from
>>>>>> an R - user point of view, as opposed to getting some inexpensive
>>>>>> desktop and installing Linux. I know I can run R and RStudio under
>>>>>> Linux, for example, but don't know what limitations, if any there are
>>>>>> when it comes to building packages from source, getting compatible
>>>>>> compilers, and so on.
>>>>>> What have some of you 'power R users' discovered when/if you tried to
>>>>>> build , or incorporate Bioconductor or other repository's packages under
>>>>>> Linux?
>>>>> 
>>>>> If your iMac is still working, try installing Ubuntu or some other Linux on it. I think at that age Apple is no longer providing upgrades, but I just put Ubuntu on a 2008 iMac, and it works well. (I needed to upgrade the memory, but that just cost $40 for 4 GB.)
>>>>> 
>>>>> So I got a $40 desktop, with a nice screen.
>>>>> 
>>>>> Duncan Murdoch
>>>>> 
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>>> --
>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>>> 
>>>> Orcid ID: 0000-0002-7490-0066
>>>> 
>>>> Department of Evolutionary Biology and Environmental Studies
>>>> University of Z?rich
>>>> Office Y34-J-74
>>>> Winterthurerstrasse 190
>>>> 8075 Z?rich
>>>> Switzerland
>>>> 
>>>> Office: +41 (0)44 635 47 64
>>>> Cell: +41 (0)78 630 66 57
>>>> email: Rainer.Krug at uzh.ch
>>>> Rainer at krugs.de
>>>> Skype: RMkrug
>>>> 
>>>> PGP: 0x0F52F982
>>>> 
>>>> 
>>>> 
>>>> 
>>>> [[alternative HTML version deleted]]
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> 	[[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:	+41 (0)44 635 47 64
> Cell:       	+41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
> 		Rainer at krugs.de
> Skype:     RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Fri Apr  3 14:00:49 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Fri, 3 Apr 2020 14:00:49 +0200
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <ee326746-04c3-4b86-a11b-9cc7b32ad7e5@Spark>
References: <ee326746-04c3-4b86-a11b-9cc7b32ad7e5@Spark>
Message-ID: <167bbd74-5810-45db-ad94-f28e4974e237@Spark>

Simon,

I don?t understand fully. I am using llvm for all C variants (just now shown) in combination with the 10.13 SDK.
So far this combination works flawlessly for all ?problematic? packages like data.table, igraph or Rcpp.

I don?t have deeper knowledge about the ?iomp? setup but as of right now I don?t know what I am mixing up here. Can you shine more light on this?
If it is about llvm in general: data.table recommends to use llvm openly in their wiki due to the lack of openMP for the standard clang.
And while this could be handled as ?any other package? in R, we all know that it has quite some impact and probably devs who know what they do in terms of C configs.

Regarding the SDK issue: Both Rcpp v1.0.4 and igraph 1.2.5 can?t be installed from source with SDK 10.15 and standard apple clang (or any C compiler). Switching to SDK 10.13 solves the issue. You were even commenting on the Rcpp issue.
Since SDK 10.15 is the current release and many users have no choice on which OS version they are (for different reasons), this issue should imo be inspected in more detail. What do you think?

Best, Patrick
On 2. Apr 2020, 23:38 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> Patrick,
>
> you can't mix compilers - it really matters which iomp your'e using. llvm has its own modified version which may not be the same as the official Intel release. From your tests it looks like you're using the llvm one which will likely work only with that compiler. Since Apple doesn't have official omp support it's hard to say which versions work and which don't.
>
>
> > On 3/04/2020, at 10:20 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> >
> > Thanks Kevin, interesting approach.
> >
> > However, when testing it against a few packages I get symbol pointer issues (e.g. for data.table and xgboost).
> > Using llvm everything works.
> > Could llvm be the best middle way? Easy installation via brew and still clang compliant.
> >
> > Currently my Makevars look as follows
> >
> > CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> > [?]
> >
> > CC = ccache /usr/local/opt/llvm/bin/clang
> > [?]
> >
> > Where llvm was installed via `brew install llvm`.
> > SDK 10.13 because of {igraph} and {Rcpp} issues with SDK 10.14 and SDK 10.15
>
>
> I mentioned that before, but I do not see issues with 10.14 SDK.
>
> Cheers,
> Simon
>
>
> > On 2. Apr 2020, 23:01 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> > > Tim,
> > >
> > >
> > > > On 3/04/2020, at 2:01 AM, BATES Timothy <tim.bates at ed.ac.uk> wrote:
> > > >
> > > > Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
> > > >
> > >
> > > It has caused a lot of issues, it trips people on a daily basis which is just not worth it. Also with Apple's increasingly strict rules about what can be distributed we don't want to be in the business in maintaining a separate toolchain. There have been numerous issues with C++ exceptions so the fall out was much bigger than originally expected and it would only get worse.
> > >
> > >
> > > > Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
> > > >
> > > > Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
> > > >
> > >
> > > The idea is that if a package deems this critical, it can enable this for the users. As it is now, packages can still supply iomp and use it.
> > >
> > > That said, I would open for discussion the ability to distribute iomp with the R binary, but it would not be supported by R directly, i.e., it would be on the package author to make sure that the way the package operates is compatible with that binary. Let me know what you think.
> > >
> > >
> > > > Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
> > > >
> > >
> > > Yes, but OpenMP is rarely used for those tasks. In R OpenMP can be only used for very small subset of such tasks - which is why alternative approaches are much more common.
> > >
> > > Cheers,
> > > Simon
> > >
> > >
> > > > I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
> > > >
> > > > Best, t
> > > >
> > > >
> > > > > On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> > > > >
> > > > > On 01/04/2020 22:02, Simon Urbanek wrote:
> > > > > > JJB,
> > > > > > 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
> > > > >
> > > > > Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual. The problems come in distributing them.
> > > > >
> > > > > The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware. But it is available for the small (tiny?) proportion of users who need it.
> > > > The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
> > > > _______________________________________________
> > > > R-SIG-Mac mailing list
> > > > R-SIG-Mac at r-project.org
> > > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > >
> > > _______________________________________________
> > > R-SIG-Mac mailing list
> > > R-SIG-Mac at r-project.org
> > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Apr  3 14:13:19 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sat, 4 Apr 2020 01:13:19 +1300
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <167bbd74-5810-45db-ad94-f28e4974e237@Spark>
References: <ee326746-04c3-4b86-a11b-9cc7b32ad7e5@Spark>
 <167bbd74-5810-45db-ad94-f28e4974e237@Spark>
Message-ID: <D65A73AF-B2E2-4529-9A55-38BA9A79BA3C@R-project.org>

Patrick,

you were commenting on the thread where we talked about CRAN R - that one is now compiled using Apple clang. You were talking about using clang from Homebrew - those are incompatible as they use different run-time. Unfortunately, the Intel OpenMP run-time varies by clang compiler version and is known to fail when used with the wrong compiler. Analogously, mixing gomp (from gcc) and iomp is problematic (and GNU Fortran uses gomp). As discussed in the Homebrew thread, if you are compiling everything via Homebrew including R then it's all good, you just can't mix Apple tools and Homebrew in general.

Also at the bottom I was only talking about 10.14 SDK - that's what we use on CRAN and I have not seen any issues with it - you were claiming that it doesn't work with Rcpp and igraph.

Cheers,
Simon



> On 4/04/2020, at 1:00 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> 
> Simon,
> 
> I don?t understand fully. I am using llvm for all C variants (just now shown) in combination with the 10.13 SDK.
> So far this combination works flawlessly for all ?problematic? packages like data.table, igraph or Rcpp.
> 
> I don?t have deeper knowledge about the ?iomp? setup but as of right now I don?t know what I am mixing up here. Can you shine more light on this?
> If it is about llvm in general: data.table recommends to use llvm openly in their wiki due to the lack of openMP for the standard clang.
> And while this could be handled as ?any other package? in R, we all know that it has quite some impact and probably devs who know what they do in terms of C configs.
> 
> Regarding the SDK issue: Both Rcpp v1.0.4 and igraph 1.2.5 can?t be installed from source with SDK 10.15 and standard apple clang (or any C compiler). Switching to SDK 10.13 solves the issue. You were even commenting on the Rcpp issue.
> Since SDK 10.15 is the current release and many users have no choice on which OS version they are (for different reasons), this issue should imo be inspected in more detail. What do you think?
> 
> Best, Patrick
> On 2. Apr 2020, 23:38 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
>> Patrick,
>> 
>> you can't mix compilers - it really matters which iomp your'e using. llvm has its own modified version which may not be the same as the official Intel release. From your tests it looks like you're using the llvm one which will likely work only with that compiler. Since Apple doesn't have official omp support it's hard to say which versions work and which don't.
>> 
>> 
>>> On 3/04/2020, at 10:20 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
>>> 
>>> Thanks Kevin, interesting approach.
>>> 
>>> However, when testing it against a few packages I get symbol pointer issues (e.g. for data.table and xgboost).
>>> Using llvm everything works.
>>> Could llvm be the best middle way? Easy installation via brew and still clang compliant.
>>> 
>>> Currently my Makevars look as follows
>>> 
>>> CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
>>> [?]
>>> 
>>> CC = ccache /usr/local/opt/llvm/bin/clang
>>> [?]
>>> 
>>> Where llvm was installed via `brew install llvm`.
>>> SDK 10.13 because of {igraph} and {Rcpp} issues with SDK 10.14 and SDK 10.15
>> 
>> 
>> I mentioned that before, but I do not see issues with 10.14 SDK.
>> 
>> Cheers,
>> Simon
>> 
>> 
>>> On 2. Apr 2020, 23:01 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
>>>> Tim,
>>>> 
>>>> 
>>>>> On 3/04/2020, at 2:01 AM, BATES Timothy <tim.bates at ed.ac.uk> wrote:
>>>>> 
>>>>> Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
>>>>> 
>>>> 
>>>> It has caused a lot of issues, it trips people on a daily basis which is just not worth it. Also with Apple's increasingly strict rules about what can be distributed we don't want to be in the business in maintaining a separate toolchain. There have been numerous issues with C++ exceptions so the fall out was much bigger than originally expected and it would only get worse.
>>>> 
>>>> 
>>>>> Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
>>>>> 
>>>>> Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
>>>>> 
>>>> 
>>>> The idea is that if a package deems this critical, it can enable this for the users. As it is now, packages can still supply iomp and use it.
>>>> 
>>>> That said, I would open for discussion the ability to distribute iomp with the R binary, but it would not be supported by R directly, i.e., it would be on the package author to make sure that the way the package operates is compatible with that binary. Let me know what you think.
>>>> 
>>>> 
>>>>> Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
>>>>> 
>>>> 
>>>> Yes, but OpenMP is rarely used for those tasks. In R OpenMP can be only used for very small subset of such tasks - which is why alternative approaches are much more common.
>>>> 
>>>> Cheers,
>>>> Simon
>>>> 
>>>> 
>>>>> I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
>>>>> 
>>>>> Best, t
>>>>> 
>>>>> 
>>>>>> On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>>>>>> 
>>>>>> On 01/04/2020 22:02, Simon Urbanek wrote:
>>>>>>> JJB,
>>>>>>> 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
>>>>>> 
>>>>>> Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual. The problems come in distributing them.
>>>>>> 
>>>>>> The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware. But it is available for the small (tiny?) proportion of users who need it.
>>>>> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Fri Apr  3 14:33:38 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Fri, 3 Apr 2020 14:33:38 +0200
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <40bf0043-5ec1-451e-82a2-5141657f712b@Spark>
References: <40bf0043-5ec1-451e-82a2-5141657f712b@Spark>
Message-ID: <ccba4602-ef0e-414b-a8c7-390af9975e2c@Spark>

Simon,

thanks. I assume that you mean ?clang from homebrew? = llvm (from homebrew)?
Indeed I am currently trying that out and it looks really robust for source installations (more than the systems clang (+ eventual openMP flags like suggested by Kevin) and other variants (gcc from homebrew or openMP enabled clang7 or 8).

Note that I do not use R via homebrew.

However, all in all I am essentially mixing the custom llvm from homebrew with the official R installer and the old 10.13 SDK.
It looks quite complex and I?d wish everything would be easier. However, in the end I just want to have a stable ?install from source? environment that works for all packages out there (I do not use the binaries).

All in all I am a bit confused now about all the mixing and options available. Let?s see what the foreseeable future brings and where things are going.

Regarding the SDK issue: I think most users just use the binaries on macOS (across all OS versions) and rarely face such issues. And there are presumably not many people out there that do actual R-devel testing on Catalina (?), otherwise I?d expect way more people to jump into the discussion. However, I am not alone with these issues as you can see in the Rcpp issue we were talking about.
Maybe you can even reproduce the issues by linking a custom install of the 10.15 SDK on a non-Catalina machine? I don?t know how much trouble that would bring up when trying to jump into the future - but this ist just an idea :)

Thanks for your work!
On 3. Apr 2020, 14:13 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> Patrick,
>
> you were commenting on the thread where we talked about CRAN R - that one is now compiled using Apple clang. You were talking about using clang from Homebrew - those are incompatible as they use different run-time. Unfortunately, the Intel OpenMP run-time varies by clang compiler version and is known to fail when used with the wrong compiler. Analogously, mixing gomp (from gcc) and iomp is problematic (and GNU Fortran uses gomp). As discussed in the Homebrew thread, if you are compiling everything via Homebrew including R then it's all good, you just can't mix Apple tools and Homebrew in general.
>
> Also at the bottom I was only talking about 10.14 SDK - that's what we use on CRAN and I have not seen any issues with it - you were claiming that it doesn't work with Rcpp and igraph.
>
> Cheers,
> Simon
>
>
>
> > On 4/04/2020, at 1:00 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> >
> > Simon,
> >
> > I don?t understand fully. I am using llvm for all C variants (just now shown) in combination with the 10.13 SDK.
> > So far this combination works flawlessly for all ?problematic? packages like data.table, igraph or Rcpp.
> >
> > I don?t have deeper knowledge about the ?iomp? setup but as of right now I don?t know what I am mixing up here. Can you shine more light on this?
> > If it is about llvm in general: data.table recommends to use llvm openly in their wiki due to the lack of openMP for the standard clang.
> > And while this could be handled as ?any other package? in R, we all know that it has quite some impact and probably devs who know what they do in terms of C configs.
> >
> > Regarding the SDK issue: Both Rcpp v1.0.4 and igraph 1.2.5 can?t be installed from source with SDK 10.15 and standard apple clang (or any C compiler). Switching to SDK 10.13 solves the issue. You were even commenting on the Rcpp issue.
> > Since SDK 10.15 is the current release and many users have no choice on which OS version they are (for different reasons), this issue should imo be inspected in more detail. What do you think?
> >
> > Best, Patrick
> > On 2. Apr 2020, 23:38 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> > > Patrick,
> > >
> > > you can't mix compilers - it really matters which iomp your'e using. llvm has its own modified version which may not be the same as the official Intel release. From your tests it looks like you're using the llvm one which will likely work only with that compiler. Since Apple doesn't have official omp support it's hard to say which versions work and which don't.
> > >
> > >
> > > > On 3/04/2020, at 10:20 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> > > >
> > > > Thanks Kevin, interesting approach.
> > > >
> > > > However, when testing it against a few packages I get symbol pointer issues (e.g. for data.table and xgboost).
> > > > Using llvm everything works.
> > > > Could llvm be the best middle way? Easy installation via brew and still clang compliant.
> > > >
> > > > Currently my Makevars look as follows
> > > >
> > > > CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> > > > [?]
> > > >
> > > > CC = ccache /usr/local/opt/llvm/bin/clang
> > > > [?]
> > > >
> > > > Where llvm was installed via `brew install llvm`.
> > > > SDK 10.13 because of {igraph} and {Rcpp} issues with SDK 10.14 and SDK 10.15
> > >
> > >
> > > I mentioned that before, but I do not see issues with 10.14 SDK.
> > >
> > > Cheers,
> > > Simon
> > >
> > >
> > > > On 2. Apr 2020, 23:01 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> > > > > Tim,
> > > > >
> > > > >
> > > > > > On 3/04/2020, at 2:01 AM, BATES Timothy <tim.bates at ed.ac.uk> wrote:
> > > > > >
> > > > > > Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
> > > > > >
> > > > >
> > > > > It has caused a lot of issues, it trips people on a daily basis which is just not worth it. Also with Apple's increasingly strict rules about what can be distributed we don't want to be in the business in maintaining a separate toolchain. There have been numerous issues with C++ exceptions so the fall out was much bigger than originally expected and it would only get worse.
> > > > >
> > > > >
> > > > > > Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
> > > > > >
> > > > > > Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
> > > > > >
> > > > >
> > > > > The idea is that if a package deems this critical, it can enable this for the users. As it is now, packages can still supply iomp and use it.
> > > > >
> > > > > That said, I would open for discussion the ability to distribute iomp with the R binary, but it would not be supported by R directly, i.e., it would be on the package author to make sure that the way the package operates is compatible with that binary. Let me know what you think.
> > > > >
> > > > >
> > > > > > Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
> > > > > >
> > > > >
> > > > > Yes, but OpenMP is rarely used for those tasks. In R OpenMP can be only used for very small subset of such tasks - which is why alternative approaches are much more common.
> > > > >
> > > > > Cheers,
> > > > > Simon
> > > > >
> > > > >
> > > > > > I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
> > > > > >
> > > > > > Best, t
> > > > > >
> > > > > >
> > > > > > > On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> > > > > > >
> > > > > > > On 01/04/2020 22:02, Simon Urbanek wrote:
> > > > > > > > JJB,
> > > > > > > > 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
> > > > > > >
> > > > > > > Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual. The problems come in distributing them.
> > > > > > >
> > > > > > > The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware. But it is available for the small (tiny?) proportion of users who need it.
> > > > > > The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
> > > > > > _______________________________________________
> > > > > > R-SIG-Mac mailing list
> > > > > > R-SIG-Mac at r-project.org
> > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > > > >
> > > > > _______________________________________________
> > > > > R-SIG-Mac mailing list
> > > > > R-SIG-Mac at r-project.org
> > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > >
>

	[[alternative HTML version deleted]]


From R@|ner @end|ng |rom krug@@de  Fri Apr  3 14:57:42 2020
From: R@|ner @end|ng |rom krug@@de (Rainer Krug)
Date: Fri, 3 Apr 2020 14:57:42 +0200
Subject: [R-SIG-Mac] Homebrew [was: from Mac to LInux?]
In-Reply-To: <5D829B68-8198-4CF8-B854-F71C5182FF97@R-project.org>
References: <9641fc57-6d74-e3f9-b4da-10125f0af2fd@witthoft.com>
 <d466dea5-1e72-ab5c-8633-866d0d62b777@gmail.com>
 <E65A1F82-7E81-4DBD-A8EC-25448E19DAAE@krugs.de>
 <c87227e3-4799-4ed3-813c-131175d42cfa@Spark>
 <8230648E-EF57-4C8D-9AAB-95DF78D6EDD6@R-project.org>
 <5E7B257B-FC20-42DF-8356-88A04672552F@krugs.de>
 <5D829B68-8198-4CF8-B854-F71C5182FF97@R-project.org>
Message-ID: <411A6DA7-0A70-4E83-B5F2-1F3CDBBB450F@krugs.de>



> On 3 Apr 2020, at 13:25, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Rainer,
> 
> 
>> On 3/04/2020, at 10:01 PM, Rainer M Krug <Rainer at krugs.de> wrote:
>> 
>> Thanks a lot for your detailed response - it is very much appreciated.
>> 
>>> On 2 Apr 2020, at 22:30, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>>> 
>>> 
>>> 
>>>> On 2/04/2020, at 9:15 PM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
>>>> 
>>>> AFAIK most people on that list would vote hard against installing R via homebrew for several reasons - maybe there should be a section about this on the R dev / CRAN page to address this topic, @Simon? Otherwise this will come up again and again.
>>>> 
>>> 
>> 
>> 
>>> That main objection is that people are mixing Homebrew with CRAN and vice-versa which leads to many problems. You cannot use packages from CRAN when using Homebrew, period, and you have to be really careful if you want to mix Homebrew libraries (not anything R-related) with CRAN (it is doable if you know what you're doing).
>> 
>> 
>> This is definitely true (and I assume, you are referring to CRAN binary packages).
>> 
>> But I am wondering: I am always installing from the normal CRAN mirrors, and my R installation (homebrew) always installs from source. I never use `type = ?source?`in the installation for packages. 
>> 
>> My question: when would I install incompatible packages (I assume, you mean binary packages for Mac) from CRAN?
>> 
> 
> Maybe you wouldn't but I have seen people do it.

My question would be: how? Is the installation from binary forced when installing with that option?

> 
> 
>> 
>>> 
>>> The fundamental issue is that package managers like Homebrew replace system libraries with their own (for new features/updates that the system libraries don't provide) which break anything that relies on the system library. Out of all the package managers Homebrew the only one that is trying to address the issue by trying to separate them, but even that has been diverging over time.
>>> 
>>> The second issue is that they are increasingly replacing toolchains (compilers) with their own builds, which makes everything incompatible in explosive ways (things just segfault). Making sure that a compiler toolchain is stable is actually non-trivial and many packager manager authors/maintainers have little experience with this. That used the be the primary reason to avoid them, because it was just normal that the released binaries were miscompiled and things would break all the time. Fortunately, I think that has gotten better over time.
>>> 
>>> If you stick only with Homebrew, then you're likely ok, but you're on your own and have to compile all packages form sources.
>> 
>> This is true, but I did not encounter big problems. And this is, why I thought loud in suggesting to setup a (non official!) homebrew tap to install the packages, similar to how it is in linux (Debian).
>> 
>>> Majority of our time as CRAN maintainers for the binary releases is about providing dependent libraries for packages and making sure things "just work?.
>> 
>> And I think everybody really appreciates this and is VErY happy about it. This is essential work!
>> 
>>> It is doable, just a lot of work, so by using Homebrew every user has to spend that time.
>> 
>> Doable: definitely. lot of work: in my experience not that much more.
>> 
>> Overall, I definitely agree, that the official distribution should stay the proper apple way. But there are circumstances, where these are delayed, or problems occur after macOS upgrades, which will delay the compilation of new ones (GRASS did not have Mac binaries for a long time due to this problem). 
>> 
> 
> I'm not sure what you refer to, but if there are issues, please let me know. If you don't report issues, they won't get fixed.


No problems here - this was just an example, where a second "approved? (whatever that means) installation approach would be useful.


> 
> 
>> So an alternative way of installing, community supported but approved, would be preferable. The r formula for homebrew has been installed in the last year more that 112.000 times (https://formulae.brew.sh/formula/r <https://formulae.brew.sh/formula/r>) so I think there is likely a rather large user base of R from homebrew. 
>> 
>> A first step in this direction, would be to either include homebrew in this list, or create a new R-sig-hoebrew list, which could become the home of these discussions.
>> 
> 
> I'm not sure I'd like to go there. I would direct that to Homebrew as we have nothing to do with the formulae used there. However, that's not really my call.


At homebrew, you have to get hold of the maintainer of that formula - which is often not that easy. Power user problems of a software can only be solved by a power user of that software - and writing a formula for homebrew, only requires a basic understanding of the program one is installing. So the questions would not only cover the ?how do I install R? type, but also related to packages in the follow up, which is definitely not homebrew-list material.


> 
> Today another reason came up why I have an issue with Homebrew: people install compilers and similar tools and then use them instead of Xcode for everything outside of Homebrew. That is absolutely unsupported, because they have different runtime environments, so things break. Sometimes in subtle ways and things segfault at random points. The thing is, if people knew what they were doing, and Homebrew was only used by developers, it would be all fine - they'd know not to mix and match run-times. But most user don't.

I definitely think there would be a possibility of adding a r-devel installation to homebrew for R, which would make it easier for developers to install R-devel. 

> 
> 
>> 
>>> 
>>> (FWIW I use Hombrew myself for tools, but not in /usr/local (I'm using /opt/brew) and I only put it on the PATH for the tools that I need, never to compile anything "native" against it.)
>> 
>> Than you are completely in the cold and without support from homebrew? As far as I heard, in this case, everything is locally compiled and not using the binaries - correct?
>> 
> 
> No, binaries are used where it is safe. There may be a few bottles that don't like to be installed in a custom location. I have not seen issues with it.

That is good to know - maybe I?ll try it out sometime, as I would prefer homebrew in /opt/brew.

> To be honest I think putting homebrew in /usr/local was a bad mistake as that causes a lot of problems since all 3rd party software installs there, so you get very quickly to completely broken state. As with all those things, it's predicated on full control so if you don't use anything but Homebrew ever it's ok. But pretty much all native open source packages/installers install into /usr/local so the moment you use one thing in addition to Homebrew things start breaking.


I absolutely agree. This created such a mess, as even homebrew casks sometimes install in /usr/local.

Cheers,

Rainer

> 
> Cheers,
> Simon
> 
> 
>> Cheers, and thanks again for your very useful clarifications,
>> 
>> Rainer
>> 
>>> 
>>> Cheers,
>>> Simon
>>> 
>>> 
>>> 
>>>> Anyhow, this is also not relating to the initial topic of that thread and should probably discussed separately.
>>>> On 2. Apr 2020, 10:04 +0200, Rainer M Krug <Rainer at krugs.de>, wrote:
>>>>> I am using Homebrew on a Mac (two Macs - one at home, one at work) instead of the official R package, and I did not have any problems after upgrades - maybe I am lucky, maybe not as picky in defining ?problem?, but my suggestion would be to try R from homebrew to install R.
>>>>> 
>>>>> OK - no support from here - I know.
>>>>> 
>>>>> And homebrew has also binary versions. What is missing, is a hombrew R package repository. Maybe an idea to create one?
>>>>> 
>>>>> 
>>>>> Cheers,
>>>>> 
>>>>> Rainer
>>>>> 
>>>>> 
>>>>>> On 2 Apr 2020, at 02:37, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>>> 
>>>>>> On 01/04/2020 2:48 p.m., Carl Witthoft wrote:
>>>>>>> If I should ask over at r-sig-debian instead of here, please tell me.
>>>>>>> I don't wish to clog r-sig-mac with off-topic stuff.
>>>>>>> I've been watching the massive headaches people are dealing with trying
>>>>>>> to keep R fully compatible with each MacOS X upgrade, I'm wondering
>>>>>>> whether replacing my iMac (2009) with a new Mac really makes sense from
>>>>>>> an R - user point of view, as opposed to getting some inexpensive
>>>>>>> desktop and installing Linux. I know I can run R and RStudio under
>>>>>>> Linux, for example, but don't know what limitations, if any there are
>>>>>>> when it comes to building packages from source, getting compatible
>>>>>>> compilers, and so on.
>>>>>>> What have some of you 'power R users' discovered when/if you tried to
>>>>>>> build , or incorporate Bioconductor or other repository's packages under
>>>>>>> Linux?
>>>>>> 
>>>>>> If your iMac is still working, try installing Ubuntu or some other Linux on it. I think at that age Apple is no longer providing upgrades, but I just put Ubuntu on a 2008 iMac, and it works well. (I needed to upgrade the memory, but that just cost $40 for 4 GB.)
>>>>>> 
>>>>>> So I got a $40 desktop, with a nice screen.
>>>>>> 
>>>>>> Duncan Murdoch
>>>>>> 
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>> 
>>>>> --
>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>>>> 
>>>>> Orcid ID: 0000-0002-7490-0066
>>>>> 
>>>>> Department of Evolutionary Biology and Environmental Studies
>>>>> University of Z?rich
>>>>> Office Y34-J-74
>>>>> Winterthurerstrasse 190
>>>>> 8075 Z?rich
>>>>> Switzerland
>>>>> 
>>>>> Office: +41 (0)44 635 47 64
>>>>> Cell: +41 (0)78 630 66 57
>>>>> email: Rainer.Krug at uzh.ch
>>>>> Rainer at krugs.de
>>>>> Skype: RMkrug
>>>>> 
>>>>> PGP: 0x0F52F982
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> [[alternative HTML version deleted]]
>>>>> 
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>>> 	[[alternative HTML version deleted]]
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> 
>> Orcid ID: 0000-0002-7490-0066
>> 
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> 
>> Office:	+41 (0)44 635 47 64
>> Cell:       	+41 (0)78 630 66 57
>> email:      Rainer.Krug at uzh.ch
>> 		Rainer at krugs.de
>> Skype:     RMkrug
>> 
>> PGP: 0x0F52F982
>> 
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org <mailto:R-SIG-Mac at r-project.org>
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac <https://stat.ethz.ch/mailman/listinfo/r-sig-mac>
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org <mailto:R-SIG-Mac at r-project.org>
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac <https://stat.ethz.ch/mailman/listinfo/r-sig-mac>
--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From kev|nu@hey @end|ng |rom gm@||@com  Fri Apr  3 18:42:59 2020
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Fri, 3 Apr 2020 09:42:59 -0700
Subject: [R-SIG-Mac] GTK+ support (or rather lack thereof)
In-Reply-To: <8C2D00AB-E602-4ECC-97E3-752C3D00427B@R-project.org>
References: <8C2D00AB-E602-4ECC-97E3-752C3D00427B@R-project.org>
Message-ID: <CAJXgQP0gPjH+n8eA4V7+=+uRjiFaAhmvu+-V_W=TACJ+gGZPug@mail.gmail.com>

For what it's worth, Homebrew and macports both have scripts for
installing GTK+ from sources, so presumedly those could be cribbed
into a standalone shell script for a build if desired:

https://github.com/Homebrew/homebrew-core/blob/master/Formula/gtk+.rb
https://github.com/macports/macports-ports/blob/master/gnome/gtk2/Portfile

Would that be worth exploring? I'd be willing to try and put something
together if so.

Also -- is the intention to stick with the latest patch release of the
GTK+ 2.x series, or try to upgrade to GTK+ 3.x? (I suspect that
GTK+-using packages would likely need to adapt to changes in GTK+ 3.x)

Kevin

On Thu, Apr 2, 2020 at 6:03 PM Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> We have a fairly complete coverage of packages for R 4.0.0, but one exception is GTK+ (and thus RGtk2 and its dependencies). It seems that GTK+ has been abandoned several years ago, the documented macOS build doesn't work and there are no released binaries. To make things worse, Gnome has been switching from autoconf to custom build systems that are also broken (quite amazing - the build fails with an error in the build system's headers including Python headers...), so the path of building our own release from scratch is also not realistic anymore (we used to build GTK+ for X11 when it was still possible).
>
> Hence this is a call to the R community to see if anyone actually cares. And if so, if there is any known source or path to macOS binaries (script to build it is fine, too). Unlike regular rules, we would allow dynamic linking as we have granted that exception to GTK+ before, but it has to be compatible with the native system. As a last resort, we could also re-use out GTK+ 2.24.17 binaries from Snow Leopard, but those are considerably old, so I'd prefer not to do that. Comments are welcome.
>
> Thanks,
> Simon
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From bhh @end|ng |rom x@4@||@n|  Fri Apr  3 21:15:15 2020
From: bhh @end|ng |rom x@4@||@n| (Berend Hasselman)
Date: Fri, 3 Apr 2020 21:15:15 +0200
Subject: [R-SIG-Mac] Please test R 4.0.0 pre-releases!
In-Reply-To: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
References: <9ACED4CD-AE5A-49A4-A6E7-6D217E4F7619@R-project.org>
Message-ID: <BBED0BC8-D23B-4BC1-B6EB-C81BA1255E8B@xs4all.nl>

Simon,

I have tested an R-4.0.0 (i.e. R version 4.0.0 alpha (2020-04-01 r78130)
with my two packages (nleqslv and geigen) and all my private tests.
I have not found any problems with checking and testing these packages.
(I used Apple clang and Coudert's gfortran 8.2)

The only issue I have encountered is:

The R GUI hangs when I click "What's New In This Version" in the Help menu item.

Berend

> sessionInfo()
R version 4.0.0 alpha (2020-04-01 r78130)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Catalina 10.15.4

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] compiler_4.0.0


> On 1 Apr 2020, at 06:27, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Dear Mac users,
> 
> R 4.0.0 will be using an entirely new toolchain, entirely new build system on entirely new macOS version and hardware. Therefore I would like to ask you kindly to test the binaries from
> 
> https://mac.R-project.org
> 
> before the release as much as you can. Raising any issues after the release is too late! So please, please, test the pre-releases. Report any issues either directly to me or this mailing list.
> 
> The nightly builds are signed, but not necessarily notarized. However, the build fulfils Apple's conditions and is known to pass notarization (in fact the the package available for download today is actually notarized) so it should be a good test for the release which will be notarized and should work on Catalina.
> 
> For those that want to replicate our setup - technical details: we are now building with macOS 10.13 (High Sierra) as target (i.e. the oldest supported system), regular Apple Xcode/command line tools and GNU Fortran 8.2. R builds are running on macOS 10.15 (Catalina) with Xcode 11.4 using macOS 10.13 target. Packages are built on macOS 10.13 VMs with just Apple command line tools (this should make it easy to replicate the setup using Travis, for example). All 3rd party libraries that CRAN uses are available in http://mac.r-project.org/libs-4/
> 
> The new R build system is in
> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/R4
> Packages build system has not changed and is in
> https://svn.r-project.org/R-dev-web/trunk/QA/Simon/packages
> 
> We also plan to have a mac-builder available with similar function as the win-builder where pre-submission tests can be performed and potentially a Travis template.
> 
> Please test R pre-releases and provide feedback!
> 
> Thanks,
> Simon
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Apr  3 21:54:49 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sat, 4 Apr 2020 08:54:49 +1300
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <ccba4602-ef0e-414b-a8c7-390af9975e2c@Spark>
References: <40bf0043-5ec1-451e-82a2-5141657f712b@Spark>
 <ccba4602-ef0e-414b-a8c7-390af9975e2c@Spark>
Message-ID: <C2352EB8-146E-4D9E-BB5B-A966CC6C9018@R-project.org>

Patrick,


> On 4/04/2020, at 1:33 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> 
> Simon,
> 
> thanks. I assume that you mean ?clang from homebrew? = llvm (from homebrew)?

LLVM is the compiler infrastructure project, clang is the C/C++ compiler from that project. We don't use any of the other compilers form LLVM.


> Indeed I am currently trying that out and it looks really robust for source installations (more than the systems clang (+ eventual openMP flags like suggested by Kevin) and other variants (gcc from homebrew or openMP enabled clang7 or 8).
> 
> Note that I do not use R via homebrew.
> 
> However, all in all I am essentially mixing the custom llvm from homebrew with the official R installer and the old 10.13 SDK.
> It looks quite complex and I?d wish everything would be easier. However, in the end I just want to have a stable ?install from source? environment that works for all packages out there (I do not use the binaries).
> 

Why don't use use Homebrew? That's exactly what Homebrew provides - its own ecosystem, everything form source (with cached binaries if you want them).


> All in all I am a bit confused now about all the mixing and options available. Let?s see what the foreseeable future brings and where things are going.
> 

Mixing is not available. You pick one system and go with it, but can't mix between them, because of the different run-time libraries.


> Regarding the SDK issue: I think most users just use the binaries on macOS (across all OS versions) and rarely face such issues. And there are presumably not many people out there that do actual R-devel testing on Catalina (?), otherwise I?d expect way more people to jump into the discussion. However, I am not alone with these issues as you can see in the Rcpp issue we were talking about. 
> Maybe you can even reproduce the issues by linking a custom install of the 10.15 SDK on a non-Catalina machine? I don?t know how much trouble that would bring up when trying to jump into the future - but this ist just an idea :)
> 

That's an entirely different, unrelated topic. Testing cutting edge (or even pre-release) systems makes sense, but that's not our current worry (there was a separate thread about CI).

Cheers,
Simon


> Thanks for your work!
> On 3. Apr 2020, 14:13 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
>> Patrick,
>> 
>> you were commenting on the thread where we talked about CRAN R - that one is now compiled using Apple clang. You were talking about using clang from Homebrew - those are incompatible as they use different run-time. Unfortunately, the Intel OpenMP run-time varies by clang compiler version and is known to fail when used with the wrong compiler. Analogously, mixing gomp (from gcc) and iomp is problematic (and GNU Fortran uses gomp). As discussed in the Homebrew thread, if you are compiling everything via Homebrew including R then it's all good, you just can't mix Apple tools and Homebrew in general.
>> 
>> Also at the bottom I was only talking about 10.14 SDK - that's what we use on CRAN and I have not seen any issues with it - you were claiming that it doesn't work with Rcpp and igraph.
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>> On 4/04/2020, at 1:00 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
>>> 
>>> Simon,
>>> 
>>> I don?t understand fully. I am using llvm for all C variants (just now shown) in combination with the 10.13 SDK.
>>> So far this combination works flawlessly for all ?problematic? packages like data.table, igraph or Rcpp.
>>> 
>>> I don?t have deeper knowledge about the ?iomp? setup but as of right now I don?t know what I am mixing up here. Can you shine more light on this?
>>> If it is about llvm in general: data.table recommends to use llvm openly in their wiki due to the lack of openMP for the standard clang.
>>> And while this could be handled as ?any other package? in R, we all know that it has quite some impact and probably devs who know what they do in terms of C configs.
>>> 
>>> Regarding the SDK issue: Both Rcpp v1.0.4 and igraph 1.2.5 can?t be installed from source with SDK 10.15 and standard apple clang (or any C compiler). Switching to SDK 10.13 solves the issue. You were even commenting on the Rcpp issue.
>>> Since SDK 10.15 is the current release and many users have no choice on which OS version they are (for different reasons), this issue should imo be inspected in more detail. What do you think?
>>> 
>>> Best, Patrick
>>> On 2. Apr 2020, 23:38 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
>>>> Patrick,
>>>> 
>>>> you can't mix compilers - it really matters which iomp your'e using. llvm has its own modified version which may not be the same as the official Intel release. From your tests it looks like you're using the llvm one which will likely work only with that compiler. Since Apple doesn't have official omp support it's hard to say which versions work and which don't.
>>>> 
>>>> 
>>>>> On 3/04/2020, at 10:20 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
>>>>> 
>>>>> Thanks Kevin, interesting approach.
>>>>> 
>>>>> However, when testing it against a few packages I get symbol pointer issues (e.g. for data.table and xgboost).
>>>>> Using llvm everything works.
>>>>> Could llvm be the best middle way? Easy installation via brew and still clang compliant.
>>>>> 
>>>>> Currently my Makevars look as follows
>>>>> 
>>>>> CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
>>>>> [?]
>>>>> 
>>>>> CC = ccache /usr/local/opt/llvm/bin/clang
>>>>> [?]
>>>>> 
>>>>> Where llvm was installed via `brew install llvm`.
>>>>> SDK 10.13 because of {igraph} and {Rcpp} issues with SDK 10.14 and SDK 10.15
>>>> 
>>>> 
>>>> I mentioned that before, but I do not see issues with 10.14 SDK.
>>>> 
>>>> Cheers,
>>>> Simon
>>>> 
>>>> 
>>>>> On 2. Apr 2020, 23:01 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
>>>>>> Tim,
>>>>>> 
>>>>>> 
>>>>>>> On 3/04/2020, at 2:01 AM, BATES Timothy <tim.bates at ed.ac.uk> wrote:
>>>>>>> 
>>>>>>> Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
>>>>>>> 
>>>>>> 
>>>>>> It has caused a lot of issues, it trips people on a daily basis which is just not worth it. Also with Apple's increasingly strict rules about what can be distributed we don't want to be in the business in maintaining a separate toolchain. There have been numerous issues with C++ exceptions so the fall out was much bigger than originally expected and it would only get worse.
>>>>>> 
>>>>>> 
>>>>>>> Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
>>>>>>> 
>>>>>>> Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
>>>>>>> 
>>>>>> 
>>>>>> The idea is that if a package deems this critical, it can enable this for the users. As it is now, packages can still supply iomp and use it.
>>>>>> 
>>>>>> That said, I would open for discussion the ability to distribute iomp with the R binary, but it would not be supported by R directly, i.e., it would be on the package author to make sure that the way the package operates is compatible with that binary. Let me know what you think.
>>>>>> 
>>>>>> 
>>>>>>> Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
>>>>>>> 
>>>>>> 
>>>>>> Yes, but OpenMP is rarely used for those tasks. In R OpenMP can be only used for very small subset of such tasks - which is why alternative approaches are much more common.
>>>>>> 
>>>>>> Cheers,
>>>>>> Simon
>>>>>> 
>>>>>> 
>>>>>>> I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
>>>>>>> 
>>>>>>> Best, t
>>>>>>> 
>>>>>>> 
>>>>>>>> On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>>>>>>>> 
>>>>>>>> On 01/04/2020 22:02, Simon Urbanek wrote:
>>>>>>>>> JJB,
>>>>>>>>> 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
>>>>>>>> 
>>>>>>>> Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual. The problems come in distributing them.
>>>>>>>> 
>>>>>>>> The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware. But it is available for the small (tiny?) proportion of users who need it.
>>>>>>> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
>>>>>>> _______________________________________________
>>>>>>> R-SIG-Mac mailing list
>>>>>>> R-SIG-Mac at r-project.org
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>> 
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>> 


From tom@e|||ott @end|ng |rom @uck|@nd@@c@nz  Sat Apr  4 06:15:41 2020
From: tom@e|||ott @end|ng |rom @uck|@nd@@c@nz (Tom Elliott)
Date: Sat, 4 Apr 2020 04:15:41 +0000
Subject: [R-SIG-Mac] GTK+ support (or rather lack thereof)
In-Reply-To: <8C2D00AB-E602-4ECC-97E3-752C3D00427B@R-project.org>
References: <8C2D00AB-E602-4ECC-97E3-752C3D00427B@R-project.org>
Message-ID: <1585973741623.73564@auckland.ac.nz>

Simon,

> Hence this is a call to the R community to see if anyone actually cares.
I (and Chris Wild and quite a few of our mac users) care and would greatly appreciate working GTK+ CRAN packages! 

I don't have any knowledge re source etc, but just to remind you that the current RGtk2 package on CRAN for 3.3 doesn't work (or at least wasn't when I last tried): 

library(RGtk2)
gtkHScaleNewWithRange(0, 5, 1)  # segfault


Cheers,

- Tom

From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Sat Apr  4 09:34:29 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Sat, 4 Apr 2020 09:34:29 +0200
Subject: [R-SIG-Mac] OpenMP on CRAN
In-Reply-To: <C2352EB8-146E-4D9E-BB5B-A966CC6C9018@R-project.org>
References: <40bf0043-5ec1-451e-82a2-5141657f712b@Spark>
 <ccba4602-ef0e-414b-a8c7-390af9975e2c@Spark>
 <C2352EB8-146E-4D9E-BB5B-A966CC6C9018@R-project.org>
Message-ID: <0e768dce-923c-49a0-a608-1e7225dc4784@Spark>

Simon,

thanks. While this feels like a somewhat 1/1 discussion now, I also think that others might profit from it.

1. I am aware that LLVM is a wrapper bundling more than just the compiler and that it comes with its own copy of clang
2. I don?t use homebrew because it does not easily allow multiple R installations next to each other. This is possible via the official installers. Combining this with RSwitch from Bob I can switch between R interpreters with a keystroke. I am using homebrew for everything else and even contribute to some formulas from time to time.
3. In the end everyone if responsible for their own setup and deviating from standards make its more complicated to get help (if at all). However, I am still considering blogging about my setup in the future once I have found a robust one that worked for some time across all instances I faced issues with in the past (focusing on source installs). And don?t worry, I will make sure to point out that this is custom, what the CRAN setup is and the differences between homebrew and the CRAN thing. There are quite some myths floating around that this should be clarified in more depth on a static page (maybe even from you as the expert? ;) )

Regarding CI and testing SDK 10.15: A pointer to this discussion where the toolchain for GitHub Actions is discussed. I?ll move my thoughts about this to a new thread.
On 3. Apr 2020, 22:11 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> Patrick,
>
>
> > On 4/04/2020, at 1:33 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> >
> > Simon,
> >
> > thanks. I assume that you mean ?clang from homebrew? = llvm (from homebrew)?
>
> LLVM is the compiler infrastructure project, clang is the C/C++ compiler from that project. We don't use any of the other compilers form LLVM.
>
>
> > Indeed I am currently trying that out and it looks really robust for source installations (more than the systems clang (+ eventual openMP flags like suggested by Kevin) and other variants (gcc from homebrew or openMP enabled clang7 or 8).
> >
> > Note that I do not use R via homebrew.
> >
> > However, all in all I am essentially mixing the custom llvm from homebrew with the official R installer and the old 10.13 SDK.
> > It looks quite complex and I?d wish everything would be easier. However, in the end I just want to have a stable ?install from source? environment that works for all packages out there (I do not use the binaries).
> >
>
> Why don't use use Homebrew? That's exactly what Homebrew provides - its own ecosystem, everything form source (with cached binaries if you want them).
>
>
> > All in all I am a bit confused now about all the mixing and options available. Let?s see what the foreseeable future brings and where things are going.
> >
>
> Mixing is not available. You pick one system and go with it, but can't mix between them, because of the different run-time libraries.
>
>
> > Regarding the SDK issue: I think most users just use the binaries on macOS (across all OS versions) and rarely face such issues. And there are presumably not many people out there that do actual R-devel testing on Catalina (?), otherwise I?d expect way more people to jump into the discussion. However, I am not alone with these issues as you can see in the Rcpp issue we were talking about.
> > Maybe you can even reproduce the issues by linking a custom install of the 10.15 SDK on a non-Catalina machine? I don?t know how much trouble that would bring up when trying to jump into the future - but this ist just an idea :)
> >
>
> That's an entirely different, unrelated topic. Testing cutting edge (or even pre-release) systems makes sense, but that's not our current worry (there was a separate thread about CI).
>
> Cheers,
> Simon
>
>
> > Thanks for your work!
> > On 3. Apr 2020, 14:13 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> > > Patrick,
> > >
> > > you were commenting on the thread where we talked about CRAN R - that one is now compiled using Apple clang. You were talking about using clang from Homebrew - those are incompatible as they use different run-time. Unfortunately, the Intel OpenMP run-time varies by clang compiler version and is known to fail when used with the wrong compiler. Analogously, mixing gomp (from gcc) and iomp is problematic (and GNU Fortran uses gomp). As discussed in the Homebrew thread, if you are compiling everything via Homebrew including R then it's all good, you just can't mix Apple tools and Homebrew in general.
> > >
> > > Also at the bottom I was only talking about 10.14 SDK - that's what we use on CRAN and I have not seen any issues with it - you were claiming that it doesn't work with Rcpp and igraph.
> > >
> > > Cheers,
> > > Simon
> > >
> > >
> > >
> > > > On 4/04/2020, at 1:00 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> > > >
> > > > Simon,
> > > >
> > > > I don?t understand fully. I am using llvm for all C variants (just now shown) in combination with the 10.13 SDK.
> > > > So far this combination works flawlessly for all ?problematic? packages like data.table, igraph or Rcpp.
> > > >
> > > > I don?t have deeper knowledge about the ?iomp? setup but as of right now I don?t know what I am mixing up here. Can you shine more light on this?
> > > > If it is about llvm in general: data.table recommends to use llvm openly in their wiki due to the lack of openMP for the standard clang.
> > > > And while this could be handled as ?any other package? in R, we all know that it has quite some impact and probably devs who know what they do in terms of C configs.
> > > >
> > > > Regarding the SDK issue: Both Rcpp v1.0.4 and igraph 1.2.5 can?t be installed from source with SDK 10.15 and standard apple clang (or any C compiler). Switching to SDK 10.13 solves the issue. You were even commenting on the Rcpp issue.
> > > > Since SDK 10.15 is the current release and many users have no choice on which OS version they are (for different reasons), this issue should imo be inspected in more detail. What do you think?
> > > >
> > > > Best, Patrick
> > > > On 2. Apr 2020, 23:38 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> > > > > Patrick,
> > > > >
> > > > > you can't mix compilers - it really matters which iomp your'e using. llvm has its own modified version which may not be the same as the official Intel release. From your tests it looks like you're using the llvm one which will likely work only with that compiler. Since Apple doesn't have official omp support it's hard to say which versions work and which don't.
> > > > >
> > > > >
> > > > > > On 3/04/2020, at 10:20 AM, Patrick Schratz <patrick.schratz at gmail.com> wrote:
> > > > > >
> > > > > > Thanks Kevin, interesting approach.
> > > > > >
> > > > > > However, when testing it against a few packages I get symbol pointer issues (e.g. for data.table and xgboost).
> > > > > > Using llvm everything works.
> > > > > > Could llvm be the best middle way? Easy installation via brew and still clang compliant.
> > > > > >
> > > > > > Currently my Makevars look as follows
> > > > > >
> > > > > > CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk
> > > > > > [?]
> > > > > >
> > > > > > CC = ccache /usr/local/opt/llvm/bin/clang
> > > > > > [?]
> > > > > >
> > > > > > Where llvm was installed via `brew install llvm`.
> > > > > > SDK 10.13 because of {igraph} and {Rcpp} issues with SDK 10.14 and SDK 10.15
> > > > >
> > > > >
> > > > > I mentioned that before, but I do not see issues with 10.14 SDK.
> > > > >
> > > > > Cheers,
> > > > > Simon
> > > > >
> > > > >
> > > > > > On 2. Apr 2020, 23:01 +0200, Simon Urbanek <simon.urbanek at r-project.org>, wrote:
> > > > > > > Tim,
> > > > > > >
> > > > > > >
> > > > > > > > On 3/04/2020, at 2:01 AM, BATES Timothy <tim.bates at ed.ac.uk> wrote:
> > > > > > > >
> > > > > > > > Moving to a compiler that drops support for OpenMP seems a sad choice, especially now we?ve all climbed the learning curve of the non-Apple compiler (the real barrier was lack of a pkg installer and that?s done now).
> > > > > > > >
> > > > > > >
> > > > > > > It has caused a lot of issues, it trips people on a daily basis which is just not worth it. Also with Apple's increasingly strict rules about what can be distributed we don't want to be in the business in maintaining a separate toolchain. There have been numerous issues with C++ exceptions so the fall out was much bigger than originally expected and it would only get worse.
> > > > > > >
> > > > > > >
> > > > > > > > Losing OpenMP for the CRAN version of OpenMx/umx (our SEM packages) would be a big loss for users (for whom the CRAN version now supports OpenMP giving them a 2-12x speed up). In general, R on Mac is made more viable by having OpenMP
> > > > > > > >
> > > > > > > > Re Brian?s points, I?d say that the distribution problem is crucial: Packages not on CRAN have dramatically diminished accessibility/useage.
> > > > > > > >
> > > > > > >
> > > > > > > The idea is that if a package deems this critical, it can enable this for the users. As it is now, packages can still supply iomp and use it.
> > > > > > >
> > > > > > > That said, I would open for discussion the ability to distribute iomp with the R binary, but it would not be supported by R directly, i.e., it would be on the package author to make sure that the way the package operates is compatible with that binary. Let me know what you think.
> > > > > > >
> > > > > > >
> > > > > > > > Second, a great range of compute-intensive problems are amenable to division amongst cores, including nearly all models that take more than a nominal amount of time to run: So simulations, CIs, bootstrapping, nearly everything in genetics all speeds up.
> > > > > > > >
> > > > > > >
> > > > > > > Yes, but OpenMP is rarely used for those tasks. In R OpenMP can be only used for very small subset of such tasks - which is why alternative approaches are much more common.
> > > > > > >
> > > > > > > Cheers,
> > > > > > > Simon
> > > > > > >
> > > > > > >
> > > > > > > > I?d say especially on desktop/laptop. The big advantage of multi blade systems requires snowfall-type solutions, but desktops profit automatically from their multi-core structure and don;?t have multiple processors (except graphics, which no-one seems to be exploiting on CRAN-style R), so OpenMP is their one trick. I?d hope not to lose it.
> > > > > > > >
> > > > > > > > Best, t
> > > > > > > >
> > > > > > > >
> > > > > > > > > On 2 Apr 2020, at 05:18, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> > > > > > > > >
> > > > > > > > > On 01/04/2020 22:02, Simon Urbanek wrote:
> > > > > > > > > > JJB,
> > > > > > > > > > 1. correct, there was too much trouble in this. But please feel free to start a new thread about this here if you have strong opinions.
> > > > > > > > >
> > > > > > > > > Also note that it is possible (and not hard) to install packages from source with an OpenMP-supporting compiler, and how to do so is in the R-admin manual. The problems come in distributing them.
> > > > > > > > >
> > > > > > > > > The benefits of OpenMP are often overestimated, especially on desktop/laptop level hardware. But it is available for the small (tiny?) proportion of users who need it.
> > > > > > > > The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.
> > > > > > > > _______________________________________________
> > > > > > > > R-SIG-Mac mailing list
> > > > > > > > R-SIG-Mac at r-project.org
> > > > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > > > > > >
> > > > > > > _______________________________________________
> > > > > > > R-SIG-Mac mailing list
> > > > > > > R-SIG-Mac at r-project.org
> > > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > > > >
> > >
>

	[[alternative HTML version deleted]]


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Sat Apr  4 09:59:18 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Sat, 4 Apr 2020 09:59:18 +0200
Subject: [R-SIG-Mac] R4.0 toolchain for GitHub Actions
References: <66ec20df-d7c2-4569-ab60-8985d6fc5034@Spark>
Message-ID: <8adf5e56-57cd-418c-8a3e-1e6240d30156@Spark>

Hi,

Porting this discussion about the future R 4.0 toolchain on GitHub Actions (GHA) to the mailing list.
GHA will be the new standard regarding CI for the R community in the foreseeable future since the tidyverse is moving there with full power and the community usually follows.

Even leaving the tidyverse out, Jim (in cc since I don?t know if he is in the list) maintains the installers for R which will be used by everyone, even if one deviates from the general tidyverse templates (like {tic} does).

The discussion is about whether these installers try to mimic the CRAN toolchain (system clang and SDK 10.13 (?)) or go a different way.
There are many options as we have seen in prior discussions about the compilers on this mailing list. However, most are restricted by the fact that there is only Catalina (10.15) available as the base system for the runners. While the tidyverse wants to use binaries mainly, the toolchain installed should also be able to have a robust source installation behavior: One might want to test on R-devel for which there are no binaries - or test in general if source installations works.

Now if the GHA toolchain deviates from CRAN one might get different results when testing on GHA and when uploading to CRAN. This might cause confusion.
Installing custom compilers and linking such in .R/Makevars is tedious to set up and requires download time and bandwidth for each run.
So we should think in detail about how to proceed here and also how to communicate the setup to the users.
Users do not browse the source code by default and check with compilers are used, which CFLAGS are set and so on. They just ?hope? that they can trust the setup and that things ?will just work?, on the CI and on CRAN then.
For whatever will be decided in the end: I wish that the reasons for the final setup are communicated top-level.

Let?s discuss this here as a community: Simon as the one responsible for the CRAN toolchain and Jim who implements the R installer for GHA. It would be great if we could find a consensus for R 4.0 that everyone agrees on rather than being sad afterwards that no-one can do anything about how things are (and how others have chosen their toolchain).
The possibility for change is there now due to the major version bump and we should take advantage of it.

Best, Patrick

	[[alternative HTML version deleted]]


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Sat Apr  4 10:11:09 2020
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Sat, 4 Apr 2020 09:11:09 +0100
Subject: [R-SIG-Mac] GTK+ support (or rather lack thereof)
In-Reply-To: <1585973741623.73564@auckland.ac.nz>
References: <8C2D00AB-E602-4ECC-97E3-752C3D00427B@R-project.org>
 <1585973741623.73564@auckland.ac.nz>
Message-ID: <4eecb3ce-604d-4ef9-550e-024207382eff@stats.ox.ac.uk>

On 04/04/2020 05:15, Tom Elliott wrote:
> Simon,
> 
>> Hence this is a call to the R community to see if anyone actually cares.
> I (and Chris Wild and quite a few of our mac users) care and would greatly appreciate working GTK+ CRAN packages!
> 
> I don't have any knowledge re source etc, but just to remind you that the current RGtk2 package on CRAN for 3.3 doesn't work (or at least wasn't when I last tried):
> 
> library(RGtk2)
> gtkHScaleNewWithRange(0, 5, 1)  # segfault

Did you really mean '3.3'?  If so, R versions that old are long unsupported.

FWIW, your example worked for me with 4.0.0 alpha and RGtk2 built from 
source against Simon's (old) build of GTK+ 2.24.17.  Have you tried 
that?   RGtk2 and some of the packages using it pass their checks but 
some (e.g. gWidgets2RGtk2 and a few of those using it including MixSIAR, 
Ricetl, fit4NM, plfMA) segfault.  And this has been the case for several 
years.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From |@wrence@m|ch@e| @end|ng |rom gene@com  Fri Apr  3 18:57:23 2020
From: |@wrence@m|ch@e| @end|ng |rom gene@com (Michael Lawrence)
Date: Fri, 3 Apr 2020 09:57:23 -0700
Subject: [R-SIG-Mac] GTK+ support (or rather lack thereof)
In-Reply-To: <CAJXgQP0gPjH+n8eA4V7+=+uRjiFaAhmvu+-V_W=TACJ+gGZPug@mail.gmail.com>
References: <8C2D00AB-E602-4ECC-97E3-752C3D00427B@R-project.org>
 <CAJXgQP0gPjH+n8eA4V7+=+uRjiFaAhmvu+-V_W=TACJ+gGZPug@mail.gmail.com>
Message-ID: <CAOQ5Nyf_K=ee4YRUAA1RRY-pO-3Edd_e4VtV7SdOMioVbnUT5A@mail.gmail.com>

If we have working 2.24.17 binaries, let's just use them. GTK+ was already
super mature by that point; it's unlikely that many improvements/fixes were
made. I'll start looking into RGtk3. Actually, I started that like 8 years
ago.

Michael

On Fri, Apr 3, 2020 at 9:43 AM Kevin Ushey <kevinushey at gmail.com> wrote:

> For what it's worth, Homebrew and macports both have scripts for
> installing GTK+ from sources, so presumedly those could be cribbed
> into a standalone shell script for a build if desired:
>
> https://github.com/Homebrew/homebrew-core/blob/master/Formula/gtk+.rb
> https://github.com/macports/macports-ports/blob/master/gnome/gtk2/Portfile
>
> Would that be worth exploring? I'd be willing to try and put something
> together if so.
>
> Also -- is the intention to stick with the latest patch release of the
> GTK+ 2.x series, or try to upgrade to GTK+ 3.x? (I suspect that
> GTK+-using packages would likely need to adapt to changes in GTK+ 3.x)
>
> Kevin
>
> On Thu, Apr 2, 2020 at 6:03 PM Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
> >
> > We have a fairly complete coverage of packages for R 4.0.0, but one
> exception is GTK+ (and thus RGtk2 and its dependencies). It seems that GTK+
> has been abandoned several years ago, the documented macOS build doesn't
> work and there are no released binaries. To make things worse, Gnome has
> been switching from autoconf to custom build systems that are also broken
> (quite amazing - the build fails with an error in the build system's
> headers including Python headers...), so the path of building our own
> release from scratch is also not realistic anymore (we used to build GTK+
> for X11 when it was still possible).
> >
> > Hence this is a call to the R community to see if anyone actually cares.
> And if so, if there is any known source or path to macOS binaries (script
> to build it is fine, too). Unlike regular rules, we would allow dynamic
> linking as we have granted that exception to GTK+ before, but it has to be
> compatible with the native system. As a last resort, we could also re-use
> out GTK+ 2.24.17 binaries from Snow Leopard, but those are considerably
> old, so I'd prefer not to do that. Comments are welcome.
> >
> > Thanks,
> > Simon
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


-- 
Michael Lawrence
Senior Scientist, Bioinformatics and Computational Biology
Genentech, A Member of the Roche Group
Office +1 (650) 225-7760
michafla at gene.com

Join Genentech on LinkedIn | Twitter | Facebook | Instagram | YouTube

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Sat Apr  4 22:38:55 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 5 Apr 2020 08:38:55 +1200
Subject: [R-SIG-Mac] GTK+ support (or rather lack thereof)
In-Reply-To: <4eecb3ce-604d-4ef9-550e-024207382eff@stats.ox.ac.uk>
References: <8C2D00AB-E602-4ECC-97E3-752C3D00427B@R-project.org>
 <1585973741623.73564@auckland.ac.nz>
 <4eecb3ce-604d-4ef9-550e-024207382eff@stats.ox.ac.uk>
Message-ID: <F1063BEB-364F-46E8-B603-280D0672F7D4@R-project.org>

Thanks for the confirmation, Brian. I wasn't aware that Gtk+2 was abandoned for so long - then our 2.24.17 binaries are in fact quite reasonable and I'll go with that.
Thanks,
Simon



> On 4/04/2020, at 9:11 PM, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> 
> On 04/04/2020 05:15, Tom Elliott wrote:
>> Simon,
>>> Hence this is a call to the R community to see if anyone actually cares.
>> I (and Chris Wild and quite a few of our mac users) care and would greatly appreciate working GTK+ CRAN packages!
>> I don't have any knowledge re source etc, but just to remind you that the current RGtk2 package on CRAN for 3.3 doesn't work (or at least wasn't when I last tried):
>> library(RGtk2)
>> gtkHScaleNewWithRange(0, 5, 1)  # segfault
> 
> Did you really mean '3.3'?  If so, R versions that old are long unsupported.
> 
> FWIW, your example worked for me with 4.0.0 alpha and RGtk2 built from source against Simon's (old) build of GTK+ 2.24.17.  Have you tried that?   RGtk2 and some of the packages using it pass their checks but some (e.g. gWidgets2RGtk2 and a few of those using it including MixSIAR, Ricetl, fit4NM, plfMA) segfault.  And this has been the case for several years.
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From j@me@@|@he@ter @end|ng |rom gm@||@com  Fri Apr 10 19:52:18 2020
From: j@me@@|@he@ter @end|ng |rom gm@||@com (Jim Hester)
Date: Fri, 10 Apr 2020 13:52:18 -0400
Subject: [R-SIG-Mac] Using lldb with R 3.6.3 and the current R-devel causes
 an error exit from the process
Message-ID: <CAD6tx97DSVZxVaq9MnUdHNFft46kVfg5HQNpCb+CYTTreaoEOg@mail.gmail.com>

See below, lldb works with prior versions of R without a problem. Perhaps
the new hardened runtime is the issue. The behavior seems similar to that
discussed in this thread (https://forums.developer.apple.com/thread/119059).

It would be pretty detrimental not to be able to debug R with lldb, so
hopefully we can find a way to make this work again.

> R --version
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

> R -d lldb
(lldb) target create "/Library/Frameworks/R.framework/Resources/bin/exec/R"
Current executable set to
'/Library/Frameworks/R.framework/Resources/bin/exec/R' (x86_64).
(lldb) r
error: process exited with status -1 (Error 1)
(lldb)

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Apr 10 22:27:37 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sat, 11 Apr 2020 08:27:37 +1200
Subject: [R-SIG-Mac] 
 Using lldb with R 3.6.3 and the current R-devel causes
 an error exit from the process
In-Reply-To: <CAD6tx97DSVZxVaq9MnUdHNFft46kVfg5HQNpCb+CYTTreaoEOg@mail.gmail.com>
References: <CAD6tx97DSVZxVaq9MnUdHNFft46kVfg5HQNpCb+CYTTreaoEOg@mail.gmail.com>
Message-ID: <FB2410B2-0F48-4E9D-A2A6-64FAB68449E7@R-project.org>

Jim,

yes, this is something that was bound to come sooner or later. All the changes Apple is doing are security constraints, so there is by definition no way around it. It could be possible that in theory with disabled SIP you could do something, but I didn't test if that's possible and not a wise idea for users anyway.

However, code-signing and enabling hardened runtime in the new R4 build system happens at the packaging step, so the binary tar ball
http://mac.r-project.org/high-sierra/R-4.0-branch/x86_64/R-4.0-branch.tar.gz
and
http://mac.r-project.org/high-sierra/R-devel/x86_64/R-4.0-branch.tar.gz
don't use hardened runtime. You could try and see if those work, apart from signing (and thus entitlements enforcement like hardened runtime) they are identical to the packages. If it does solve the problem we could publish the tar balls of released versions on CRAN (you can always get the nightlies from the mac site).

Cheers,
Simon


> On 11/04/2020, at 5:52 AM, Jim Hester <james.f.hester at gmail.com> wrote:
> 
> See below, lldb works with prior versions of R without a problem. Perhaps
> the new hardened runtime is the issue. The behavior seems similar to that
> discussed in this thread (https://forums.developer.apple.com/thread/119059).
> 
> It would be pretty detrimental not to be able to debug R with lldb, so
> hopefully we can find a way to make this work again.
> 
>> R --version
> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-apple-darwin15.6.0 (64-bit)
> 
>> R -d lldb
> (lldb) target create "/Library/Frameworks/R.framework/Resources/bin/exec/R"
> Current executable set to
> '/Library/Frameworks/R.framework/Resources/bin/exec/R' (x86_64).
> (lldb) r
> error: process exited with status -1 (Error 1)
> (lldb)
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From bhh @end|ng |rom x@4@||@n|  Thu Apr 16 08:56:31 2020
From: bhh @end|ng |rom x@4@||@n| (Berend Hasselman)
Date: Thu, 16 Apr 2020 08:56:31 +0200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
Message-ID: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>


If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.

<sessionInfo>

R version 4.0.0 beta (2020-04-14 r78227)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Catalina 10.15.4

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] compiler_4.0.0

</sessionInfo>

A simple example session is

<(in+output)>

> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")

Attaching package: 'gmp'

The following objects are masked from 'package:base':

    %*%, apply, crossprod, matrix, tcrossprod

C code of R package 'Rmpfr': GMP using 64 bits per limb


Attaching package: 'Rmpfr'

The following object is masked from 'package:gmp':

    outer

The following objects are masked from 'package:stats':

    dbinom, dgamma, dnorm, dpois, pnorm

The following objects are masked from 'package:base':

    cbind, pmax, pmin, rbind

> x <- 1400+ 0:10
> print(dpois(x, 1000), digits =18) ## standard R's double precision
 [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
 [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
 [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
[10] 6.87515812046484244e-35 4.87599866699657026e-35
> dpois(mpfr(x, 120), 1000)## more accuracy for the same

 *** caught illegal operation ***
address 0x10a6e1c42, cause 'illegal opcode'

Traceback:
 1: .class1(object)
 2: as(value, dataClass)
 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
 4: exp(-lambda)
 5: exp(-lambda)
 6: dpois(mpfr(x, 120), 1000)

Possible actions:
1: abort (with core dump, if enabled)
2: normal R exit
3: exit R without saving workspace
4: exit R saving workspace

</(in+output)

Other trials seem to experience similar issues.


regards

Berend


From p@tr|ck@@chr@tz @end|ng |rom gm@||@com  Thu Apr 16 09:11:43 2020
From: p@tr|ck@@chr@tz @end|ng |rom gm@||@com (Patrick Schratz)
Date: Thu, 16 Apr 2020 09:11:43 +0200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
Message-ID: <1d33b213-2c91-412d-a69f-82f8c4eb677c@Spark>

Works just fine for me on 10.15.4 and r78227. You might want to check your compiler setup against the recommended toolchain and reinstall all packages for R 4.0.

``` r
library(gmp)
#>
#> Attaching package: 'gmp'
#> The following objects are masked from 'package:base':
#>
#> %*%, apply, crossprod, matrix, tcrossprod
library(Rmpfr)
#> C code of R package 'Rmpfr': GMP using 64 bits per limb
#>
#> Attaching package: 'Rmpfr'
#> The following object is masked from 'package:gmp':
#>
#> outer
#> The following objects are masked from 'package:stats':
#>
#> dbinom, dgamma, dnorm, dpois, pnorm
#> The following objects are masked from 'package:base':
#>
#> cbind, pmax, pmin, rbind

x <- 1400+ 0:10
print(dpois(x, 1000), digits =18)
#> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
#> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
#> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
#> [10] 6.87515812046484244e-35 4.87599866699657026e-35
dpois(mpfr(x, 120), 1000)##
#> 11 'mpfr' numbers of precision 120 bits
#> [1] 1.4667733441965683030895281895730571526e-33
#> [2] 1.0469474262645027145535533116153155973e-33
#> [3] 7.4675280047396769939625771156584564775e-34
#> [4] 5.3225431252599265815841604530708884358e-34
#> [5] 3.7909851319515146592479775306772709641e-34
#> [6] 2.698210058328480184518133473791651932e-34
#> [7] 1.9190683202905264470256994834933513035e-34
#> [8] 1.3639433690764224925555788795261914005e-34
#> [9] 9.6870977917359552028095090875439730376e-35
#> [10] 6.8751581204655466308087360450986323895e-35
#> [11] 4.8759986669968415821338553511337818329e-35
```

<sup>Created on 2020-04-16 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
On 16. Apr 2020, 08:56 +0200, Berend Hasselman <bhh at xs4all.nl>, wrote:
>
> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
>
> <sessionInfo>
>
> R version 4.0.0 beta (2020-04-14 r78227)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Catalina 10.15.4
>
> Matrix products: default
> BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>
> locale:
> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>
> attached base packages:
> [1] stats graphics grDevices utils datasets methods base
>
> loaded via a namespace (and not attached):
> [1] compiler_4.0.0
>
> </sessionInfo>
>
> A simple example session is
>
> <(in+output)>
>
> > library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
>
> Attaching package: 'gmp'
>
> The following objects are masked from 'package:base':
>
> %*%, apply, crossprod, matrix, tcrossprod
>
> C code of R package 'Rmpfr': GMP using 64 bits per limb
>
>
> Attaching package: 'Rmpfr'
>
> The following object is masked from 'package:gmp':
>
> outer
>
> The following objects are masked from 'package:stats':
>
> dbinom, dgamma, dnorm, dpois, pnorm
>
> The following objects are masked from 'package:base':
>
> cbind, pmax, pmin, rbind
>
> > x <- 1400+ 0:10
> > print(dpois(x, 1000), digits =18) ## standard R's double precision
> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
> [10] 6.87515812046484244e-35 4.87599866699657026e-35
> > dpois(mpfr(x, 120), 1000)## more accuracy for the same
>
> *** caught illegal operation ***
> address 0x10a6e1c42, cause 'illegal opcode'
>
> Traceback:
> 1: .class1(object)
> 2: as(value, dataClass)
> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
> 4: exp(-lambda)
> 5: exp(-lambda)
> 6: dpois(mpfr(x, 120), 1000)
>
> Possible actions:
> 1: abort (with core dump, if enabled)
> 2: normal R exit
> 3: exit R without saving workspace
> 4: exit R saving workspace
>
> </(in+output)
>
> Other trials seem to experience similar issues.
>
>
> regards
>
> Berend
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

	[[alternative HTML version deleted]]


From c@rste@@dorm@@@ m@iii@g oii biom@u@i-ireiburg@de  Thu Apr 16 09:21:02 2020
From: c@rste@@dorm@@@ m@iii@g oii biom@u@i-ireiburg@de (c@rste@@dorm@@@ m@iii@g oii biom@u@i-ireiburg@de)
Date: Thu, 16 Apr 2020 09:21:02 +0200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
Message-ID: <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>

Can confirm problem:

> dpois(mpfr(x, 120), 1000)

 *** caught illegal operation ***
address 0x1116f7c42, cause 'illegal opcode'

Traceback:
 1: .class1(object)
 2: as(value, dataClass)
 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
 4: exp(-lambda)
 5: exp(-lambda)
 6: dpois(mpfr(x, 120), 1000)

Possible actions:
1: abort (with core dump, if enabled)
2: normal R exit
3: exit R without saving workspace
4: exit R saving workspace
Selection: 


> sessionInfo() # after restart
R version 4.0.0 alpha (2020-04-01 r78130)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Mojave 10.14.6

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] compiler_4.0.0


Carsten


> On 16. Apr 2020, at 08:56, Berend Hasselman <bhh at xs4all.nl> wrote:
> 
> 
> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
> 
> <sessionInfo>
> 
> R version 4.0.0 beta (2020-04-14 r78227)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Catalina 10.15.4
> 
> Matrix products: default
> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
> 
> locale:
> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base     
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.0.0
> 
> </sessionInfo>
> 
> A simple example session is
> 
> <(in+output)>
> 
>> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
> 
> Attaching package: 'gmp'
> 
> The following objects are masked from 'package:base':
> 
>    %*%, apply, crossprod, matrix, tcrossprod
> 
> C code of R package 'Rmpfr': GMP using 64 bits per limb
> 
> 
> Attaching package: 'Rmpfr'
> 
> The following object is masked from 'package:gmp':
> 
>    outer
> 
> The following objects are masked from 'package:stats':
> 
>    dbinom, dgamma, dnorm, dpois, pnorm
> 
> The following objects are masked from 'package:base':
> 
>    cbind, pmax, pmin, rbind
> 
>> x <- 1400+ 0:10
>> print(dpois(x, 1000), digits =18) ## standard R's double precision
> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
> [10] 6.87515812046484244e-35 4.87599866699657026e-35
>> dpois(mpfr(x, 120), 1000)## more accuracy for the same
> 
> *** caught illegal operation ***
> address 0x10a6e1c42, cause 'illegal opcode'
> 
> Traceback:
> 1: .class1(object)
> 2: as(value, dataClass)
> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
> 4: exp(-lambda)
> 5: exp(-lambda)
> 6: dpois(mpfr(x, 120), 1000)
> 
> Possible actions:
> 1: abort (with core dump, if enabled)
> 2: normal R exit
> 3: exit R without saving workspace
> 4: exit R saving workspace
> 
> </(in+output)
> 
> Other trials seem to experience similar issues.
> 
> 
> regards
> 
> Berend
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac



	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr 16 10:38:49 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 16 Apr 2020 20:38:49 +1200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
 <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
Message-ID: <67DC06B7-F4C4-43AE-B415-25559014F1A7@R-project.org>

Carsten and Berend,

It means your CPU doesn't support the instructions used, so your Mac is likely older. Can you, please, post the output of

system_profiler SPHardwareDataType

Thanks,
Simon


> On 16/04/2020, at 7:21 PM, carsten.dormann at biom.uni-freiburg.de wrote:
> 
> Can confirm problem:
> 
>> dpois(mpfr(x, 120), 1000)
> 
> *** caught illegal operation ***
> address 0x1116f7c42, cause 'illegal opcode'
> 
> Traceback:
> 1: .class1(object)
> 2: as(value, dataClass)
> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
> 4: exp(-lambda)
> 5: exp(-lambda)
> 6: dpois(mpfr(x, 120), 1000)
> 
> Possible actions:
> 1: abort (with core dump, if enabled)
> 2: normal R exit
> 3: exit R without saving workspace
> 4: exit R saving workspace
> Selection: 
> 
> 
>> sessionInfo() # after restart
> R version 4.0.0 alpha (2020-04-01 r78130)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Mojave 10.14.6
> 
> Matrix products: default
> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
> 
> locale:
> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base     
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.0.0
> 
> 
> Carsten
> 
> 
>> On 16. Apr 2020, at 08:56, Berend Hasselman <bhh at xs4all.nl> wrote:
>> 
>> 
>> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
>> 
>> <sessionInfo>
>> 
>> R version 4.0.0 beta (2020-04-14 r78227)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Catalina 10.15.4
>> 
>> Matrix products: default
>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>> 
>> locale:
>> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>> 
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>> 
>> </sessionInfo>
>> 
>> A simple example session is
>> 
>> <(in+output)>
>> 
>>> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
>> 
>> Attaching package: 'gmp'
>> 
>> The following objects are masked from 'package:base':
>> 
>>   %*%, apply, crossprod, matrix, tcrossprod
>> 
>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>> 
>> 
>> Attaching package: 'Rmpfr'
>> 
>> The following object is masked from 'package:gmp':
>> 
>>   outer
>> 
>> The following objects are masked from 'package:stats':
>> 
>>   dbinom, dgamma, dnorm, dpois, pnorm
>> 
>> The following objects are masked from 'package:base':
>> 
>>   cbind, pmax, pmin, rbind
>> 
>>> x <- 1400+ 0:10
>>> print(dpois(x, 1000), digits =18) ## standard R's double precision
>> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
>> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
>> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
>> [10] 6.87515812046484244e-35 4.87599866699657026e-35
>>> dpois(mpfr(x, 120), 1000)## more accuracy for the same
>> 
>> *** caught illegal operation ***
>> address 0x10a6e1c42, cause 'illegal opcode'
>> 
>> Traceback:
>> 1: .class1(object)
>> 2: as(value, dataClass)
>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>> 4: exp(-lambda)
>> 5: exp(-lambda)
>> 6: dpois(mpfr(x, 120), 1000)
>> 
>> Possible actions:
>> 1: abort (with core dump, if enabled)
>> 2: normal R exit
>> 3: exit R without saving workspace
>> 4: exit R saving workspace
>> 
>> </(in+output)
>> 
>> Other trials seem to experience similar issues.
>> 
>> 
>> regards
>> 
>> Berend
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr 16 10:43:21 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 16 Apr 2020 20:43:21 +1200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <67DC06B7-F4C4-43AE-B415-25559014F1A7@R-project.org>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
 <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
 <67DC06B7-F4C4-43AE-B415-25559014F1A7@R-project.org>
Message-ID: <FA51A2F5-8A0B-4081-8BBF-052A3E77E98B@R-project.org>

... I should add you can remove the serial number from the output, I need mainly the Processor and Model lines so something like:

      Model Name: Mac mini
      Model Identifier: Macmini8,1
      Processor Name: 6-Core Intel Core i5
      Processor Speed: 3 GHz
      Number of Processors: 1
      Total Number of Cores: 6
      L2 Cache (per Core): 256 KB
      L3 Cache: 9 MB
      Memory: 16 GB


Thanks,
Simon


> On 16/04/2020, at 8:38 PM, Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> Carsten and Berend,
> 
> It means your CPU doesn't support the instructions used, so your Mac is likely older. Can you, please, post the output of
> 
> system_profiler SPHardwareDataType
> 
> Thanks,
> Simon
> 
> 
>> On 16/04/2020, at 7:21 PM, carsten.dormann at biom.uni-freiburg.de wrote:
>> 
>> Can confirm problem:
>> 
>>> dpois(mpfr(x, 120), 1000)
>> 
>> *** caught illegal operation ***
>> address 0x1116f7c42, cause 'illegal opcode'
>> 
>> Traceback:
>> 1: .class1(object)
>> 2: as(value, dataClass)
>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>> 4: exp(-lambda)
>> 5: exp(-lambda)
>> 6: dpois(mpfr(x, 120), 1000)
>> 
>> Possible actions:
>> 1: abort (with core dump, if enabled)
>> 2: normal R exit
>> 3: exit R without saving workspace
>> 4: exit R saving workspace
>> Selection: 
>> 
>> 
>>> sessionInfo() # after restart
>> R version 4.0.0 alpha (2020-04-01 r78130)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Mojave 10.14.6
>> 
>> Matrix products: default
>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>> 
>> locale:
>> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>> 
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>> 
>> 
>> Carsten
>> 
>> 
>>> On 16. Apr 2020, at 08:56, Berend Hasselman <bhh at xs4all.nl> wrote:
>>> 
>>> 
>>> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
>>> 
>>> <sessionInfo>
>>> 
>>> R version 4.0.0 beta (2020-04-14 r78227)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Catalina 10.15.4
>>> 
>>> Matrix products: default
>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>> 
>>> locale:
>>> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.0.0
>>> 
>>> </sessionInfo>
>>> 
>>> A simple example session is
>>> 
>>> <(in+output)>
>>> 
>>>> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
>>> 
>>> Attaching package: 'gmp'
>>> 
>>> The following objects are masked from 'package:base':
>>> 
>>>  %*%, apply, crossprod, matrix, tcrossprod
>>> 
>>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>>> 
>>> 
>>> Attaching package: 'Rmpfr'
>>> 
>>> The following object is masked from 'package:gmp':
>>> 
>>>  outer
>>> 
>>> The following objects are masked from 'package:stats':
>>> 
>>>  dbinom, dgamma, dnorm, dpois, pnorm
>>> 
>>> The following objects are masked from 'package:base':
>>> 
>>>  cbind, pmax, pmin, rbind
>>> 
>>>> x <- 1400+ 0:10
>>>> print(dpois(x, 1000), digits =18) ## standard R's double precision
>>> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
>>> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
>>> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
>>> [10] 6.87515812046484244e-35 4.87599866699657026e-35
>>>> dpois(mpfr(x, 120), 1000)## more accuracy for the same
>>> 
>>> *** caught illegal operation ***
>>> address 0x10a6e1c42, cause 'illegal opcode'
>>> 
>>> Traceback:
>>> 1: .class1(object)
>>> 2: as(value, dataClass)
>>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>>> 4: exp(-lambda)
>>> 5: exp(-lambda)
>>> 6: dpois(mpfr(x, 120), 1000)
>>> 
>>> Possible actions:
>>> 1: abort (with core dump, if enabled)
>>> 2: normal R exit
>>> 3: exit R without saving workspace
>>> 4: exit R saving workspace
>>> 
>>> </(in+output)
>>> 
>>> Other trials seem to experience similar issues.
>>> 
>>> 
>>> regards
>>> 
>>> Berend
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From pd@|gd @end|ng |rom gm@||@com  Thu Apr 16 11:01:47 2020
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Thu, 16 Apr 2020 11:01:47 +0200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <FA51A2F5-8A0B-4081-8BBF-052A3E77E98B@R-project.org>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
 <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
 <67DC06B7-F4C4-43AE-B415-25559014F1A7@R-project.org>
 <FA51A2F5-8A0B-4081-8BBF-052A3E77E98B@R-project.org>
Message-ID: <4A008BF7-9A73-48D7-A4AE-23D6E94D5B9D@gmail.com>

This one seems happy (not too surprising, I guess)

    Hardware Overview:

      Model Name: MacBook Air
      Model Identifier: MacBookAir8,2
      Processor Name: Intel Core i5
      Processor Speed: 1,6 GHz
      Number of Processors: 1
      Total Number of Cores: 2
      L2 Cache (per Core): 256 KB
      L3 Cache: 4 MB
      Hyper-Threading Technology: Enabled
      Memory: 16 GB
      Boot ROM Version: 1037.100.359.0.0 (iBridge: 17.16.14263.0.0,0)

-pd

> On 16 Apr 2020, at 10:43 , Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> ... I should add you can remove the serial number from the output, I need mainly the Processor and Model lines so something like:
> 
>      Model Name: Mac mini
>      Model Identifier: Macmini8,1
>      Processor Name: 6-Core Intel Core i5
>      Processor Speed: 3 GHz
>      Number of Processors: 1
>      Total Number of Cores: 6
>      L2 Cache (per Core): 256 KB
>      L3 Cache: 9 MB
>      Memory: 16 GB
> 
> 
> Thanks,
> Simon
> 
> 
>> On 16/04/2020, at 8:38 PM, Simon Urbanek <simon.urbanek at R-project.org> wrote:
>> 
>> Carsten and Berend,
>> 
>> It means your CPU doesn't support the instructions used, so your Mac is likely older. Can you, please, post the output of
>> 
>> system_profiler SPHardwareDataType
>> 
>> Thanks,
>> Simon
>> 
>> 
>>> On 16/04/2020, at 7:21 PM, carsten.dormann at biom.uni-freiburg.de wrote:
>>> 
>>> Can confirm problem:
>>> 
>>>> dpois(mpfr(x, 120), 1000)
>>> 
>>> *** caught illegal operation ***
>>> address 0x1116f7c42, cause 'illegal opcode'
>>> 
>>> Traceback:
>>> 1: .class1(object)
>>> 2: as(value, dataClass)
>>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>>> 4: exp(-lambda)
>>> 5: exp(-lambda)
>>> 6: dpois(mpfr(x, 120), 1000)
>>> 
>>> Possible actions:
>>> 1: abort (with core dump, if enabled)
>>> 2: normal R exit
>>> 3: exit R without saving workspace
>>> 4: exit R saving workspace
>>> Selection: 
>>> 
>>> 
>>>> sessionInfo() # after restart
>>> R version 4.0.0 alpha (2020-04-01 r78130)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Mojave 10.14.6
>>> 
>>> Matrix products: default
>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>> 
>>> locale:
>>> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.0.0
>>> 
>>> 
>>> Carsten
>>> 
>>> 
>>>> On 16. Apr 2020, at 08:56, Berend Hasselman <bhh at xs4all.nl> wrote:
>>>> 
>>>> 
>>>> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
>>>> 
>>>> <sessionInfo>
>>>> 
>>>> R version 4.0.0 beta (2020-04-14 r78227)
>>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>>> Running under: macOS Catalina 10.15.4
>>>> 
>>>> Matrix products: default
>>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>>> 
>>>> locale:
>>>> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>>>> 
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>>>> 
>>>> loaded via a namespace (and not attached):
>>>> [1] compiler_4.0.0
>>>> 
>>>> </sessionInfo>
>>>> 
>>>> A simple example session is
>>>> 
>>>> <(in+output)>
>>>> 
>>>>> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
>>>> 
>>>> Attaching package: 'gmp'
>>>> 
>>>> The following objects are masked from 'package:base':
>>>> 
>>>> %*%, apply, crossprod, matrix, tcrossprod
>>>> 
>>>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>>>> 
>>>> 
>>>> Attaching package: 'Rmpfr'
>>>> 
>>>> The following object is masked from 'package:gmp':
>>>> 
>>>> outer
>>>> 
>>>> The following objects are masked from 'package:stats':
>>>> 
>>>> dbinom, dgamma, dnorm, dpois, pnorm
>>>> 
>>>> The following objects are masked from 'package:base':
>>>> 
>>>> cbind, pmax, pmin, rbind
>>>> 
>>>>> x <- 1400+ 0:10
>>>>> print(dpois(x, 1000), digits =18) ## standard R's double precision
>>>> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
>>>> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
>>>> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
>>>> [10] 6.87515812046484244e-35 4.87599866699657026e-35
>>>>> dpois(mpfr(x, 120), 1000)## more accuracy for the same
>>>> 
>>>> *** caught illegal operation ***
>>>> address 0x10a6e1c42, cause 'illegal opcode'
>>>> 
>>>> Traceback:
>>>> 1: .class1(object)
>>>> 2: as(value, dataClass)
>>>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>>>> 4: exp(-lambda)
>>>> 5: exp(-lambda)
>>>> 6: dpois(mpfr(x, 120), 1000)
>>>> 
>>>> Possible actions:
>>>> 1: abort (with core dump, if enabled)
>>>> 2: normal R exit
>>>> 3: exit R without saving workspace
>>>> 4: exit R saving workspace
>>>> 
>>>> </(in+output)
>>>> 
>>>> Other trials seem to experience similar issues.
>>>> 
>>>> 
>>>> regards
>>>> 
>>>> Berend
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> 
>>> 
>>> 	[[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From bhh @end|ng |rom x@4@||@n|  Thu Apr 16 11:49:34 2020
From: bhh @end|ng |rom x@4@||@n| (Berend Hasselman)
Date: Thu, 16 Apr 2020 11:49:34 +0200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <67DC06B7-F4C4-43AE-B415-25559014F1A7@R-project.org>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
 <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
 <67DC06B7-F4C4-43AE-B415-25559014F1A7@R-project.org>
Message-ID: <3F987648-6CB5-443A-B474-30A2BA3F9B4E@xs4all.nl>



> On 16 Apr 2020, at 10:38, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Carsten and Berend,
> 
> It means your CPU doesn't support the instructions used, so your Mac is likely older. Can you, please, post the output of
> 
> system_profiler SPHardwareDataType
> 

Here is the output

      Model Name: Mac mini
      Model Identifier: Macmini7,1
      Processor Name: Dual-Core Intel Core i5
      Processor Speed: 2.8 GHz
      Number of Processors: 1
      Total Number of Cores: 2
      L2 Cache (per Core): 256 KB
      L3 Cache: 3 MB
      Hyper-Threading Technology: Enabled
      Memory: 16 GB
      Boot ROM Version: 247.0.0.0.0
      SMC Version (system): 2.24f32


I am running macOS 10.15.4.
BTW. I also have the Command_Line_Tools_for_Xcode_11.4 installed.


regards,

Berend

> Thanks,
> Simon
> 
> 
>> On 16/04/2020, at 7:21 PM, carsten.dormann at biom.uni-freiburg.de wrote:
>> 
>> Can confirm problem:
>> 
>>> dpois(mpfr(x, 120), 1000)
>> 
>> *** caught illegal operation ***
>> address 0x1116f7c42, cause 'illegal opcode'
>> 
>> Traceback:
>> 1: .class1(object)
>> 2: as(value, dataClass)
>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>> 4: exp(-lambda)
>> 5: exp(-lambda)
>> 6: dpois(mpfr(x, 120), 1000)
>> 
>> Possible actions:
>> 1: abort (with core dump, if enabled)
>> 2: normal R exit
>> 3: exit R without saving workspace
>> 4: exit R saving workspace
>> Selection: 
>> 
>> 
>>> sessionInfo() # after restart
>> R version 4.0.0 alpha (2020-04-01 r78130)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Mojave 10.14.6
>> 
>> Matrix products: default
>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>> 
>> locale:
>> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>> 
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>> 
>> 
>> Carsten
>> 
>> 
>>> On 16. Apr 2020, at 08:56, Berend Hasselman <bhh at xs4all.nl> wrote:
>>> 
>>> 
>>> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
>>> 
>>> <sessionInfo>
>>> 
>>> R version 4.0.0 beta (2020-04-14 r78227)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Catalina 10.15.4
>>> 
>>> Matrix products: default
>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>> 
>>> locale:
>>> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.0.0
>>> 
>>> </sessionInfo>
>>> 
>>> A simple example session is
>>> 
>>> <(in+output)>
>>> 
>>>> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
>>> 
>>> Attaching package: 'gmp'
>>> 
>>> The following objects are masked from 'package:base':
>>> 
>>>  %*%, apply, crossprod, matrix, tcrossprod
>>> 
>>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>>> 
>>> 
>>> Attaching package: 'Rmpfr'
>>> 
>>> The following object is masked from 'package:gmp':
>>> 
>>>  outer
>>> 
>>> The following objects are masked from 'package:stats':
>>> 
>>>  dbinom, dgamma, dnorm, dpois, pnorm
>>> 
>>> The following objects are masked from 'package:base':
>>> 
>>>  cbind, pmax, pmin, rbind
>>> 
>>>> x <- 1400+ 0:10
>>>> print(dpois(x, 1000), digits =18) ## standard R's double precision
>>> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
>>> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
>>> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
>>> [10] 6.87515812046484244e-35 4.87599866699657026e-35
>>>> dpois(mpfr(x, 120), 1000)## more accuracy for the same
>>> 
>>> *** caught illegal operation ***
>>> address 0x10a6e1c42, cause 'illegal opcode'
>>> 
>>> Traceback:
>>> 1: .class1(object)
>>> 2: as(value, dataClass)
>>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>>> 4: exp(-lambda)
>>> 5: exp(-lambda)
>>> 6: dpois(mpfr(x, 120), 1000)
>>> 
>>> Possible actions:
>>> 1: abort (with core dump, if enabled)
>>> 2: normal R exit
>>> 3: exit R without saving workspace
>>> 4: exit R saving workspace
>>> 
>>> </(in+output)
>>> 
>>> Other trials seem to experience similar issues.
>>> 
>>> 
>>> regards
>>> 
>>> Berend
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From c@rste@@dorm@@@ m@iii@g oii biom@u@i-ireiburg@de  Thu Apr 16 12:28:03 2020
From: c@rste@@dorm@@@ m@iii@g oii biom@u@i-ireiburg@de (c@rste@@dorm@@@ m@iii@g oii biom@u@i-ireiburg@de)
Date: Thu, 16 Apr 2020 12:28:03 +0200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <3F987648-6CB5-443A-B474-30A2BA3F9B4E@xs4all.nl>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
 <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
 <67DC06B7-F4C4-43AE-B415-25559014F1A7@R-project.org>
 <3F987648-6CB5-443A-B474-30A2BA3F9B4E@xs4all.nl>
Message-ID: <40B62136-6526-4976-94D6-BE4FA0F419F3@biom.uni-freiburg.de>

Here is mine:


    Hardware Overview:

      Model Name: MacBook Pro
      Model Identifier: MacBookPro11,1
      Processor Name: Intel Core i7
      Processor Speed: 2,8 GHz
      Number of Processors: 1
      Total Number of Cores: 2
      L2 Cache (per Core): 256 KB
      L3 Cache: 4 MB
      Hyper-Threading Technology: Enabled
      Memory: 16 GB
      Boot ROM Version: 156.0.0.0.0
      SMC Version (system): 2.16f68


(What do you mean, "older": I got it in 2013, seems like yesterday.)
Carsten


> On 16. Apr 2020, at 11:49, Berend Hasselman <bhh at xs4all.nl> wrote:
> 
> 
> 
>> On 16 Apr 2020, at 10:38, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> 
>> Carsten and Berend,
>> 
>> It means your CPU doesn't support the instructions used, so your Mac is likely older. Can you, please, post the output of
>> 
>> system_profiler SPHardwareDataType
>> 
> 
> Here is the output
> 
>      Model Name: Mac mini
>      Model Identifier: Macmini7,1
>      Processor Name: Dual-Core Intel Core i5
>      Processor Speed: 2.8 GHz
>      Number of Processors: 1
>      Total Number of Cores: 2
>      L2 Cache (per Core): 256 KB
>      L3 Cache: 3 MB
>      Hyper-Threading Technology: Enabled
>      Memory: 16 GB
>      Boot ROM Version: 247.0.0.0.0
>      SMC Version (system): 2.24f32
> 
> 
> I am running macOS 10.15.4.
> BTW. I also have the Command_Line_Tools_for_Xcode_11.4 installed.
> 
> 
> regards,
> 
> Berend
> 
>> Thanks,
>> Simon
>> 
>> 
>>> On 16/04/2020, at 7:21 PM, carsten.dormann at biom.uni-freiburg.de wrote:
>>> 
>>> Can confirm problem:
>>> 
>>>> dpois(mpfr(x, 120), 1000)
>>> 
>>> *** caught illegal operation ***
>>> address 0x1116f7c42, cause 'illegal opcode'
>>> 
>>> Traceback:
>>> 1: .class1(object)
>>> 2: as(value, dataClass)
>>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>>> 4: exp(-lambda)
>>> 5: exp(-lambda)
>>> 6: dpois(mpfr(x, 120), 1000)
>>> 
>>> Possible actions:
>>> 1: abort (with core dump, if enabled)
>>> 2: normal R exit
>>> 3: exit R without saving workspace
>>> 4: exit R saving workspace
>>> Selection: 
>>> 
>>> 
>>>> sessionInfo() # after restart
>>> R version 4.0.0 alpha (2020-04-01 r78130)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Mojave 10.14.6
>>> 
>>> Matrix products: default
>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>> 
>>> locale:
>>> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.0.0
>>> 
>>> 
>>> Carsten
>>> 
>>> 
>>>> On 16. Apr 2020, at 08:56, Berend Hasselman <bhh at xs4all.nl> wrote:
>>>> 
>>>> 
>>>> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
>>>> 
>>>> <sessionInfo>
>>>> 
>>>> R version 4.0.0 beta (2020-04-14 r78227)
>>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>>> Running under: macOS Catalina 10.15.4
>>>> 
>>>> Matrix products: default
>>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>>> 
>>>> locale:
>>>> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>>>> 
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>>>> 
>>>> loaded via a namespace (and not attached):
>>>> [1] compiler_4.0.0
>>>> 
>>>> </sessionInfo>
>>>> 
>>>> A simple example session is
>>>> 
>>>> <(in+output)>
>>>> 
>>>>> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
>>>> 
>>>> Attaching package: 'gmp'
>>>> 
>>>> The following objects are masked from 'package:base':
>>>> 
>>>> %*%, apply, crossprod, matrix, tcrossprod
>>>> 
>>>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>>>> 
>>>> 
>>>> Attaching package: 'Rmpfr'
>>>> 
>>>> The following object is masked from 'package:gmp':
>>>> 
>>>> outer
>>>> 
>>>> The following objects are masked from 'package:stats':
>>>> 
>>>> dbinom, dgamma, dnorm, dpois, pnorm
>>>> 
>>>> The following objects are masked from 'package:base':
>>>> 
>>>> cbind, pmax, pmin, rbind
>>>> 
>>>>> x <- 1400+ 0:10
>>>>> print(dpois(x, 1000), digits =18) ## standard R's double precision
>>>> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
>>>> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
>>>> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
>>>> [10] 6.87515812046484244e-35 4.87599866699657026e-35
>>>>> dpois(mpfr(x, 120), 1000)## more accuracy for the same
>>>> 
>>>> *** caught illegal operation ***
>>>> address 0x10a6e1c42, cause 'illegal opcode'
>>>> 
>>>> Traceback:
>>>> 1: .class1(object)
>>>> 2: as(value, dataClass)
>>>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>>>> 4: exp(-lambda)
>>>> 5: exp(-lambda)
>>>> 6: dpois(mpfr(x, 120), 1000)
>>>> 
>>>> Possible actions:
>>>> 1: abort (with core dump, if enabled)
>>>> 2: normal R exit
>>>> 3: exit R without saving workspace
>>>> 4: exit R saving workspace
>>>> 
>>>> </(in+output)
>>>> 
>>>> Other trials seem to experience similar issues.
>>>> 
>>>> 
>>>> regards
>>>> 
>>>> Berend
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> 
>>> 
>>> 	[[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac



	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr 16 15:26:05 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 17 Apr 2020 01:26:05 +1200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
 <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
Message-ID: <FB966524-F50C-4839-B2A4-EE22EEA182FB@R-project.org>

Thanks, please re-install Rmpfr and gmp from the Mac master mirror:

install.packages(c("gmp","Rmpfr"),repos="https://mac.R-project.org")

and let me know if the issue goes away.

Thanks,
Simon




> On 16/04/2020, at 7:21 PM, carsten.dormann at biom.uni-freiburg.de wrote:
> 
> Can confirm problem:
> 
>> dpois(mpfr(x, 120), 1000)
> 
> *** caught illegal operation ***
> address 0x1116f7c42, cause 'illegal opcode'
> 
> Traceback:
> 1: .class1(object)
> 2: as(value, dataClass)
> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
> 4: exp(-lambda)
> 5: exp(-lambda)
> 6: dpois(mpfr(x, 120), 1000)
> 
> Possible actions:
> 1: abort (with core dump, if enabled)
> 2: normal R exit
> 3: exit R without saving workspace
> 4: exit R saving workspace
> Selection: 
> 
> 
>> sessionInfo() # after restart
> R version 4.0.0 alpha (2020-04-01 r78130)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Mojave 10.14.6
> 
> Matrix products: default
> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
> 
> locale:
> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base     
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.0.0
> 
> 
> Carsten
> 
> 
>> On 16. Apr 2020, at 08:56, Berend Hasselman <bhh at xs4all.nl> wrote:
>> 
>> 
>> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
>> 
>> <sessionInfo>
>> 
>> R version 4.0.0 beta (2020-04-14 r78227)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Catalina 10.15.4
>> 
>> Matrix products: default
>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>> 
>> locale:
>> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>> 
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>> 
>> </sessionInfo>
>> 
>> A simple example session is
>> 
>> <(in+output)>
>> 
>>> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
>> 
>> Attaching package: 'gmp'
>> 
>> The following objects are masked from 'package:base':
>> 
>>   %*%, apply, crossprod, matrix, tcrossprod
>> 
>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>> 
>> 
>> Attaching package: 'Rmpfr'
>> 
>> The following object is masked from 'package:gmp':
>> 
>>   outer
>> 
>> The following objects are masked from 'package:stats':
>> 
>>   dbinom, dgamma, dnorm, dpois, pnorm
>> 
>> The following objects are masked from 'package:base':
>> 
>>   cbind, pmax, pmin, rbind
>> 
>>> x <- 1400+ 0:10
>>> print(dpois(x, 1000), digits =18) ## standard R's double precision
>> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
>> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
>> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
>> [10] 6.87515812046484244e-35 4.87599866699657026e-35
>>> dpois(mpfr(x, 120), 1000)## more accuracy for the same
>> 
>> *** caught illegal operation ***
>> address 0x10a6e1c42, cause 'illegal opcode'
>> 
>> Traceback:
>> 1: .class1(object)
>> 2: as(value, dataClass)
>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>> 4: exp(-lambda)
>> 5: exp(-lambda)
>> 6: dpois(mpfr(x, 120), 1000)
>> 
>> Possible actions:
>> 1: abort (with core dump, if enabled)
>> 2: normal R exit
>> 3: exit R without saving workspace
>> 4: exit R saving workspace
>> 
>> </(in+output)
>> 
>> Other trials seem to experience similar issues.
>> 
>> 
>> regards
>> 
>> Berend
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From bhh @end|ng |rom x@4@||@n|  Thu Apr 16 15:38:31 2020
From: bhh @end|ng |rom x@4@||@n| (Berend Hasselman)
Date: Thu, 16 Apr 2020 15:38:31 +0200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <FB966524-F50C-4839-B2A4-EE22EEA182FB@R-project.org>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
 <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
 <FB966524-F50C-4839-B2A4-EE22EEA182FB@R-project.org>
Message-ID: <EBF0EC22-EFC4-4022-9474-FA32C182926B@xs4all.nl>

Simon,

The issue has gone away. Hurrah!

But what actually was the problem and how did you solve it?

regards and many thanks,

Berend


> On 16 Apr 2020, at 15:26, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Thanks, please re-install Rmpfr and gmp from the Mac master mirror:
> 
> install.packages(c("gmp","Rmpfr"),repos="https://mac.R-project.org")
> 
> and let me know if the issue goes away.
> 
> Thanks,
> Simon
> 
> 
> 
> 
>> On 16/04/2020, at 7:21 PM, carsten.dormann at biom.uni-freiburg.de wrote:
>> 
>> Can confirm problem:
>> 
>>> dpois(mpfr(x, 120), 1000)
>> 
>> *** caught illegal operation ***
>> address 0x1116f7c42, cause 'illegal opcode'
>> 
>> Traceback:
>> 1: .class1(object)
>> 2: as(value, dataClass)
>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>> 4: exp(-lambda)
>> 5: exp(-lambda)
>> 6: dpois(mpfr(x, 120), 1000)
>> 
>> Possible actions:
>> 1: abort (with core dump, if enabled)
>> 2: normal R exit
>> 3: exit R without saving workspace
>> 4: exit R saving workspace
>> Selection: 
>> 
>> 
>>> sessionInfo() # after restart
>> R version 4.0.0 alpha (2020-04-01 r78130)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Mojave 10.14.6
>> 
>> Matrix products: default
>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>> 
>> locale:
>> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>> 
>> loaded via a namespace (and not attached):
>> [1] compiler_4.0.0
>> 
>> 
>> Carsten
>> 
>> 
>>> On 16. Apr 2020, at 08:56, Berend Hasselman <bhh at xs4all.nl> wrote:
>>> 
>>> 
>>> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
>>> 
>>> <sessionInfo>
>>> 
>>> R version 4.0.0 beta (2020-04-14 r78227)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Catalina 10.15.4
>>> 
>>> Matrix products: default
>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>> 
>>> locale:
>>> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.0.0
>>> 
>>> </sessionInfo>
>>> 
>>> A simple example session is
>>> 
>>> <(in+output)>
>>> 
>>>> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
>>> 
>>> Attaching package: 'gmp'
>>> 
>>> The following objects are masked from 'package:base':
>>> 
>>>  %*%, apply, crossprod, matrix, tcrossprod
>>> 
>>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>>> 
>>> 
>>> Attaching package: 'Rmpfr'
>>> 
>>> The following object is masked from 'package:gmp':
>>> 
>>>  outer
>>> 
>>> The following objects are masked from 'package:stats':
>>> 
>>>  dbinom, dgamma, dnorm, dpois, pnorm
>>> 
>>> The following objects are masked from 'package:base':
>>> 
>>>  cbind, pmax, pmin, rbind
>>> 
>>>> x <- 1400+ 0:10
>>>> print(dpois(x, 1000), digits =18) ## standard R's double precision
>>> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
>>> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
>>> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
>>> [10] 6.87515812046484244e-35 4.87599866699657026e-35
>>>> dpois(mpfr(x, 120), 1000)## more accuracy for the same
>>> 
>>> *** caught illegal operation ***
>>> address 0x10a6e1c42, cause 'illegal opcode'
>>> 
>>> Traceback:
>>> 1: .class1(object)
>>> 2: as(value, dataClass)
>>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>>> 4: exp(-lambda)
>>> 5: exp(-lambda)
>>> 6: dpois(mpfr(x, 120), 1000)
>>> 
>>> Possible actions:
>>> 1: abort (with core dump, if enabled)
>>> 2: normal R exit
>>> 3: exit R without saving workspace
>>> 4: exit R saving workspace
>>> 
>>> </(in+output)
>>> 
>>> Other trials seem to experience similar issues.
>>> 
>>> 
>>> regards
>>> 
>>> Berend
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Apr 16 15:47:09 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 17 Apr 2020 01:47:09 +1200
Subject: [R-SIG-Mac] Problem R-4.0 beta and Rmpfr (pre-release)
In-Reply-To: <EBF0EC22-EFC4-4022-9474-FA32C182926B@xs4all.nl>
References: <CEEC0FDD-6BF7-4766-9477-0A9EE325FCD0@xs4all.nl>
 <DF393099-2979-44CB-9F75-47FECB31E6B0@biom.uni-freiburg.de>
 <FB966524-F50C-4839-B2A4-EE22EEA182FB@R-project.org>
 <EBF0EC22-EFC4-4022-9474-FA32C182926B@xs4all.nl>
Message-ID: <A1763B45-7FF1-45B4-B4C4-A14E252385DA@R-project.org>

Berend,

I have compiled gmp on an older machine (2008 MacPro) - in fact the same that we used until 4.0.0. Apparently there are some new instruction on more recent CPUs that gmp leverages if it finds them. Oddly, I could not find any good info on this so it's hard to pin-point the difference or exact CPUs that cause this. Using the old one should make it fairly safe.

Cheers,
Simon


> On 17/04/2020, at 1:38 AM, Berend Hasselman <bhh at xs4all.nl> wrote:
> 
> Simon,
> 
> The issue has gone away. Hurrah!
> 
> But what actually was the problem and how did you solve it?
> 
> regards and many thanks,
> 
> Berend
> 
> 
>> On 16 Apr 2020, at 15:26, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> 
>> Thanks, please re-install Rmpfr and gmp from the Mac master mirror:
>> 
>> install.packages(c("gmp","Rmpfr"),repos="https://mac.R-project.org")
>> 
>> and let me know if the issue goes away.
>> 
>> Thanks,
>> Simon
>> 
>> 
>> 
>> 
>>> On 16/04/2020, at 7:21 PM, carsten.dormann at biom.uni-freiburg.de wrote:
>>> 
>>> Can confirm problem:
>>> 
>>>> dpois(mpfr(x, 120), 1000)
>>> 
>>> *** caught illegal operation ***
>>> address 0x1116f7c42, cause 'illegal opcode'
>>> 
>>> Traceback:
>>> 1: .class1(object)
>>> 2: as(value, dataClass)
>>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>>> 4: exp(-lambda)
>>> 5: exp(-lambda)
>>> 6: dpois(mpfr(x, 120), 1000)
>>> 
>>> Possible actions:
>>> 1: abort (with core dump, if enabled)
>>> 2: normal R exit
>>> 3: exit R without saving workspace
>>> 4: exit R saving workspace
>>> Selection: 
>>> 
>>> 
>>>> sessionInfo() # after restart
>>> R version 4.0.0 alpha (2020-04-01 r78130)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Mojave 10.14.6
>>> 
>>> Matrix products: default
>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>> 
>>> locale:
>>> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.0.0
>>> 
>>> 
>>> Carsten
>>> 
>>> 
>>>> On 16. Apr 2020, at 08:56, Berend Hasselman <bhh at xs4all.nl> wrote:
>>>> 
>>>> 
>>>> If the pre-release binary of Rmpfr is intended for the R-4.0 beta then I am experiencing "illegal operations" with "illegal opcode" errors.
>>>> 
>>>> <sessionInfo>
>>>> 
>>>> R version 4.0.0 beta (2020-04-14 r78227)
>>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>>> Running under: macOS Catalina 10.15.4
>>>> 
>>>> Matrix products: default
>>>> BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
>>>> LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
>>>> 
>>>> locale:
>>>> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>>>> 
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base     
>>>> 
>>>> loaded via a namespace (and not attached):
>>>> [1] compiler_4.0.0
>>>> 
>>>> </sessionInfo>
>>>> 
>>>> A simple example session is
>>>> 
>>>> <(in+output)>
>>>> 
>>>>> library(gmp,lib.loc=".");library(Rmpfr,lib.loc=".")
>>>> 
>>>> Attaching package: 'gmp'
>>>> 
>>>> The following objects are masked from 'package:base':
>>>> 
>>>> %*%, apply, crossprod, matrix, tcrossprod
>>>> 
>>>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>>>> 
>>>> 
>>>> Attaching package: 'Rmpfr'
>>>> 
>>>> The following object is masked from 'package:gmp':
>>>> 
>>>> outer
>>>> 
>>>> The following objects are masked from 'package:stats':
>>>> 
>>>> dbinom, dgamma, dnorm, dpois, pnorm
>>>> 
>>>> The following objects are masked from 'package:base':
>>>> 
>>>> cbind, pmax, pmin, rbind
>>>> 
>>>>> x <- 1400+ 0:10
>>>>> print(dpois(x, 1000), digits =18) ## standard R's double precision
>>>> [1] 1.46677334419659338e-33 1.04694742626454156e-33 7.46752800474106016e-34
>>>> [4] 5.32254312525935864e-34 3.79098513195210765e-34 2.69821005832831136e-34
>>>> [7] 1.91906832029070091e-34 1.36394336907638670e-34 9.68709779173582432e-35
>>>> [10] 6.87515812046484244e-35 4.87599866699657026e-35
>>>>> dpois(mpfr(x, 120), 1000)## more accuracy for the same
>>>> 
>>>> *** caught illegal operation ***
>>>> address 0x10a6e1c42, cause 'illegal opcode'
>>>> 
>>>> Traceback:
>>>> 1: .class1(object)
>>>> 2: as(value, dataClass)
>>>> 3: setDataPart(x, .Call(Math_mpfr, x, .Math.codes[[.Generic]]))
>>>> 4: exp(-lambda)
>>>> 5: exp(-lambda)
>>>> 6: dpois(mpfr(x, 120), 1000)
>>>> 
>>>> Possible actions:
>>>> 1: abort (with core dump, if enabled)
>>>> 2: normal R exit
>>>> 3: exit R without saving workspace
>>>> 4: exit R saving workspace
>>>> 
>>>> </(in+output)
>>>> 
>>>> Other trials seem to experience similar issues.
>>>> 
>>>> 
>>>> regards
>>>> 
>>>> Berend
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> 
>>> 
>>> 	[[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Apr 20 17:51:59 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 20 Apr 2020 11:51:59 -0400
Subject: [R-SIG-Mac] R CMD check warning in 4.0.0 RC
Message-ID: <63a32acb-07f3-af5d-0464-93e42f68d8e3@gmail.com>

I've just installed R version 4.0.0 RC (2020-04-18 r78249) and am 
checking a package on MacOS High Sierra (10.13.6).  I can't install the 
recommended version of Xcode on this MacOS version.  I'm currently using 
Xcode 9.2.  (I think Xcode 10.x is supposed to work on High Sierra, but 
it isn't obvious how to update.)

My package has a small amount of C code, and R CMD check is clean, but R 
CMD check --as-cran gives this NOTE:

* checking compilation flags used ... NOTE
Compilation used the following non-portable flag(s):
   ?-mmacosx-version-min=10.13?

I didn't supply that, it's the default, so probably this note should not 
appear (even though the message is true).

Duncan Murdoch


From N|@||@Ander@on @end|ng |rom ed@@c@uk  Mon Apr 20 21:42:08 2020
From: N|@||@Ander@on @end|ng |rom ed@@c@uk (ANDERSON Niall)
Date: Mon, 20 Apr 2020 19:42:08 +0000
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
Message-ID: <EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>

Dear all,

I?m relatively new to MacOS and have only recently started trying to use XQuartz to enable me to run Rcmdr. Are there any common issues/ tips for getting good performance out of it (or should it usually run well with default settings)?

On first installation, I found there was a very long lag in menus being populated (i.e. the menu shape was generated, but no usable options were added), to the extent that Rcmdr was then effectively useless (not Rcmdr?s fault, I don?t think). One of my students suggested reducing Output Colors option from the default ?Millions? setting. That seems to deal with the problem, thankfully.

Is that typical of XQuartz, and is there anything else I should be doing to get the best performance from it?

Thanks,

Niall Anderson


________________________________

Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
Room G113B, Doorway 1
Usher Institute, University of Edinburgh
Old Medical School, Teviot Place, Edinburgh, EH8 9AG

Niall.Anderson at ed.ac.uk<mailto:Niall.Anderson at ed.ac.uk>  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson

Responses to emails are only expected during your working hours
[cid:image002.png at 01D5485E.9BAEAF60]
www.ed.ac.uk/usher<http://www.ed.ac.uk/usher> | @EdinUniUsher<https://twitter.com/edinuniusher>

[/Users/pcattana/Library/Containers/com.microsoft.Outlook/Data/Library/Caches/Signatures/signature_921417845]


The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200420/d7d040a7/attachment-0001.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 28618 bytes
Desc: image001.png
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200420/d7d040a7/attachment-0002.png>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 9089 bytes
Desc: image002.png
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200420/d7d040a7/attachment-0003.png>

From @|mon@urb@nek @end|ng |rom R-project@org  Mon Apr 20 21:42:34 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 21 Apr 2020 07:42:34 +1200
Subject: [R-SIG-Mac] R CMD check warning in 4.0.0 RC
In-Reply-To: <63a32acb-07f3-af5d-0464-93e42f68d8e3@gmail.com>
References: <63a32acb-07f3-af5d-0464-93e42f68d8e3@gmail.com>
Message-ID: <D207FE48-AD56-4638-B446-D7FAFCEDCD26@R-project.org>

Duncan,
that is not your fault, this flag is used by the release and hence should not be flagged by the check system. Thanks for reporting, I'll look into it.
Thanks,
Simon




> On 21/04/2020, at 3:51 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> I've just installed R version 4.0.0 RC (2020-04-18 r78249) and am checking a package on MacOS High Sierra (10.13.6).  I can't install the recommended version of Xcode on this MacOS version.  I'm currently using Xcode 9.2.  (I think Xcode 10.x is supposed to work on High Sierra, but it isn't obvious how to update.)
> 
> My package has a small amount of C code, and R CMD check is clean, but R CMD check --as-cran gives this NOTE:
> 
> * checking compilation flags used ... NOTE
> Compilation used the following non-portable flag(s):
>  ?-mmacosx-version-min=10.13?
> 
> I didn't supply that, it's the default, so probably this note should not appear (even though the message is true).
> 
> Duncan Murdoch
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From e| @end|ng |rom ||@@e@n@  Mon Apr 20 23:13:17 2020
From: e| @end|ng |rom ||@@e@n@ (Eberhard W Lisse)
Date: Mon, 20 Apr 2020 23:13:17 +0200
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
In-Reply-To: <EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>
References: <EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>
Message-ID: <42f04c9a-23ba-4b17-a33e-e4be10581034@Spark>

Take Rstudio.

el

?
Sent from Dr Lisse?s iPad Mini 5
On 20 Apr 2020, 21:42 +0200, ANDERSON Niall <Niall.Anderson at ed.ac.uk>, wrote:
> Dear all,
>
> I?m relatively new to MacOS and have only recently started trying to use XQuartz to enable me to run Rcmdr. Are there any common issues/ tips for getting good performance out of it (or should it usually run well with default settings)?
>
> On first installation, I found there was a very long lag in menus being populated (i.e. the menu shape was generated, but no usable options were added), to the extent that Rcmdr was then effectively useless (not Rcmdr?s fault, I don?t think). One of my students suggested reducing Output Colors option from the default ?Millions? setting. That seems to deal with the problem, thankfully.
>
> Is that typical of XQuartz, and is there anything else I should be doing to get the best performance from it?
>
> Thanks,
>
> Niall Anderson
>
>
> ________________________________
>
> Dr Niall H. Anderson?|?Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
> Room G113B, Doorway 1
> Usher Institute, University of Edinburgh
> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
>
> Niall.Anderson at ed.ac.uk??|?+44 (0)131 650 3212?|?Skype = live:niall.h.anderson
>
> Responses to emails are only expected during your working hours
> <image001.png>
> www.ed.ac.uk/usher?|?@EdinUniUsher
>
>
>
> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336._______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200420/c3bde5fa/attachment.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 9089 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200420/c3bde5fa/attachment.png>

From j|ox @end|ng |rom mcm@@ter@c@  Tue Apr 21 05:55:21 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (Fox, John)
Date: Tue, 21 Apr 2020 03:55:21 +0000
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
In-Reply-To: <30601_1587411746_03KJgI7o015695_EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>
References: <30601_1587411746_03KJgI7o015695_EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>
Message-ID: <6882EDCD-9380-4F84-A450-B18D7707F145@mcmaster.ca>

Dear Niall,

> On Apr 20, 2020, at 3:42 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
> 
> Dear all,
>  
> I?m relatively new to MacOS and have only recently started trying to use XQuartz to enable me to run Rcmdr. Are there any common issues/ tips for getting good performance out of it (or should it usually run well with default settings)?
>  
> On first installation, I found there was a very long lag in menus being populated (i.e. the menu shape was generated, but no usable options were added), to the extent that Rcmdr was then effectively useless (not Rcmdr?s fault, I don?t think). One of my students suggested reducing Output Colors option from the default ?Millions? setting. That seems to deal with the problem, thankfully.
>  
> Is that typical of XQuartz, and is there anything else I should be doing to get the best performance from it?

I haven't observed the problem you describe on my Mac, which is a three- or four-year-old MacBook Pro (that is, the Rcmdr dialogs display reasonably crisply for me), and I haven't done anything special to configure XQuartz. Here are the specs for my Mac:

 Model Name:	MacBook Pro
  Model Identifier:	MacBookPro13,2
  Processor Name:	Dual-Core Intel Core i7
  Processor Speed:	3.3 GHz
  Number of Processors:	1
  Total Number of Cores:	2
  L2 Cache (per Core):	256 KB
  L3 Cache:	4 MB
  Hyper-Threading Technology:	Enabled
  Memory:	8 GB
 
It might help to have some more information. I assume that you're using the most recent versions of R, the Rcmdr package, and other packages, and a recent version of macOS. What Mac do you have, and did you reboot it after installing XQuartz? If you updated R, did you reinstall XQuartz?

Best,
 John

  -----------------------------
  John Fox, Professor Emeritus
  McMaster University
  Hamilton, Ontario, Canada
  Web: http::/socserv.mcmaster.ca/jfox

>  
> Thanks,
>  
> Niall Anderson
>  
>  
> ________________________________
>  
> Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
> 
> Room G113B, Doorway 1
> Usher Institute, University of Edinburgh
> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
>  
> Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
>  
> Responses to emails are only expected during your working hours
> <image001.png>
> www.ed.ac.uk/usher | @EdinUniUsher
>  
> <image002.png>
>  
>  
> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac





From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Tue Apr 21 06:45:51 2020
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Tue, 21 Apr 2020 05:45:51 +0100
Subject: [R-SIG-Mac] R CMD check warning in 4.0.0 RC
In-Reply-To: <63a32acb-07f3-af5d-0464-93e42f68d8e3@gmail.com>
References: <63a32acb-07f3-af5d-0464-93e42f68d8e3@gmail.com>
Message-ID: <d3a1a163-8f0c-a597-f017-f0d8668d5521@stats.ox.ac.uk>

On 20/04/2020 16:51, Duncan Murdoch wrote:
> I've just installed R version 4.0.0 RC (2020-04-18 r78249) and am 
> checking a package on MacOS High Sierra (10.13.6).? I can't install the 
> recommended version of Xcode on this MacOS version.? I'm currently using 
> Xcode 9.2.? (I think Xcode 10.x is supposed to work on High Sierra, but 
> it isn't obvious how to update.)
> 
> My package has a small amount of C code, and R CMD check is clean, but R 
> CMD check --as-cran gives this NOTE:
> 
> * checking compilation flags used ... NOTE
> Compilation used the following non-portable flag(s):
>  ? ?-mmacosx-version-min=10.13?
> 
> I didn't supply that, it's the default, so probably this note should not 
> appear (even though the message is true).

The customizations for R CMD check are in the 'R Internals' manual. 
That would have shown that you needed

setenv _R_CHECK_COMPILATION_FLAGS_KNOWN_ "-mmacosx-version-min=10.13"

It is too late for 4.0.0 but in any case I would be reluctant to include 
that in the 'known good' flags.  What is not at all clear is which 
compilers support it (even on macOS) -- it seems to be in the LLVM 
version of clang but undocumented (like so many clang flags).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From N|@||@Ander@on @end|ng |rom ed@@c@uk  Tue Apr 21 10:41:13 2020
From: N|@||@Ander@on @end|ng |rom ed@@c@uk (ANDERSON Niall)
Date: Tue, 21 Apr 2020 08:41:13 +0000
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
In-Reply-To: <6882EDCD-9380-4F84-A450-B18D7707F145@mcmaster.ca>
References: <30601_1587411746_03KJgI7o015695_EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>
 <6882EDCD-9380-4F84-A450-B18D7707F145@mcmaster.ca>
Message-ID: <324A4A54-8317-41F7-8992-24FBCC8B2684@ed.ac.uk>

Eberhard, Thanks - I'm also  an RStudio user, but am trying to use Rcmdr as a gentle introduction to R for a course (building up to RStudio use later).

John, thanks also for responding (not at all an Rcmdr issue, I think - that's just what happened to show the problem). Tech details:

MacBook Pro 15 (bought 2019)
Catalina 10.15.4
2.6 GHz 6-core Intel Core i7
16 GB 2400 MHz DDR4 memory
Radeon Pro 555X 4GB & Intel UHD Graphics 360 1536MB graphics.

R 3.6.3, new download of Rcmdr etc (reinstalled everything from scratch before realising X11 was the reason Rcmdr wasn't working and downloading XQuartz). I'm almost certain I would have rebooted before trying to run this - I saw that warning somewhere (CRAN FAQ maybe?). I certainly have since, but perhaps that's why it is now appearing to function correctly? I should say that 2-3 students have reported the same problem over the last 3-4 days, so it isn't just me.

Thanks again for input. Best wishes to all on the list.

Niall

________________________________
 
Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
Room G113B, Doorway 1
Usher Institute, University of Edinburgh
Old Medical School, Teviot Place, Edinburgh, EH8 9AG
 
Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
 
Responses to emails are only expected during your working hours

www.ed.ac.uk/usher <http://www.ed.ac.uk/usher> | @EdinUniUsher <https://twitter.com/edinuniusher>
 

 
 

?On 21/04/2020, 04:55, "Fox, John" <jfox at mcmaster.ca> wrote:

    Dear Niall,
    
    > On Apr 20, 2020, at 3:42 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
    > 
    > Dear all,
    >  
    > I?m relatively new to MacOS and have only recently started trying to use XQuartz to enable me to run Rcmdr. Are there any common issues/ tips for getting good performance out of it (or should it usually run well with default settings)?
    >  
    > On first installation, I found there was a very long lag in menus being populated (i.e. the menu shape was generated, but no usable options were added), to the extent that Rcmdr was then effectively useless (not Rcmdr?s fault, I don?t think). One of my students suggested reducing Output Colors option from the default ?Millions? setting. That seems to deal with the problem, thankfully.
    >  
    > Is that typical of XQuartz, and is there anything else I should be doing to get the best performance from it?
    
    I haven't observed the problem you describe on my Mac, which is a three- or four-year-old MacBook Pro (that is, the Rcmdr dialogs display reasonably crisply for me), and I haven't done anything special to configure XQuartz. Here are the specs for my Mac:
    
     Model Name:	MacBook Pro
      Model Identifier:	MacBookPro13,2
      Processor Name:	Dual-Core Intel Core i7
      Processor Speed:	3.3 GHz
      Number of Processors:	1
      Total Number of Cores:	2
      L2 Cache (per Core):	256 KB
      L3 Cache:	4 MB
      Hyper-Threading Technology:	Enabled
      Memory:	8 GB
     
    It might help to have some more information. I assume that you're using the most recent versions of R, the Rcmdr package, and other packages, and a recent version of macOS. What Mac do you have, and did you reboot it after installing XQuartz? If you updated R, did you reinstall XQuartz?
    
    Best,
     John
    
      -----------------------------
      John Fox, Professor Emeritus
      McMaster University
      Hamilton, Ontario, Canada
      Web: http::/socserv.mcmaster.ca/jfox
    
    >  
    > Thanks,
    >  
    > Niall Anderson
    >  
    >  
    > ________________________________
    >  
    > Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
    > 
    > Room G113B, Doorway 1
    > Usher Institute, University of Edinburgh
    > Old Medical School, Teviot Place, Edinburgh, EH8 9AG
    >  
    > Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
    >  
    > Responses to emails are only expected during your working hours
    > <image001.png>
    > www.ed.ac.uk/usher | @EdinUniUsher
    >  
    > <image002.png>
    >  
    >  
    > The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. _______________________________________________
    > R-SIG-Mac mailing list
    > R-SIG-Mac at r-project.org
    > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    
    
    
    
    


From j|ox @end|ng |rom mcm@@ter@c@  Tue Apr 21 18:09:31 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (Fox, John)
Date: Tue, 21 Apr 2020 16:09:31 +0000
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
References: <487DB79A-FD06-4FE5-867D-707698FC706F@mcmaster.ca>
Message-ID: <CA528D13-4B4B-4D8B-B5C0-4E472B2C0085@mcmaster.ca>

An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200421/2e16386c/attachment.html>

From @dw@po@t @end|ng |rom w@eber@@de  Tue Apr 21 23:29:18 2020
From: @dw@po@t @end|ng |rom w@eber@@de (Sebastian Weber)
Date: Tue, 21 Apr 2020 23:29:18 +0200
Subject: [R-SIG-Mac] R 4.0.0 RC and macOS Catalina with Stan
References: <4699CF4E-A6BB-461C-819B-7A8D89985A0C@waebers.de>
Message-ID: <022185DD-2E74-4D5F-952C-1E23DDAD8448@waebers.de>

Fyi (I used a not registered me before, sorry)

> 
> ?Hi there!
> 
> I just wanted to drop a quick note that things look very promising on macOS Catalina with the new toolchain when using Stan based R packages. The current toolchain prevents that on macOS Catalina users can download pre-build packages from CRAN servers and use these. Instead users are forced to compile from source R packages which are based on rstan at the moment (with a special setup of the toolchain).
> 
> Here are the details:
> 
> https://discourse.mc-stan.org/t/r-4-0-0-and-cran-macos-binaries/13989/2?u=wds15
> 
> So this looks like a real improvement to me. Kudos!
> 
> Best,
> Sebastian
> 
> Von meinem iPad gesendet

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr 22 01:24:30 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 22 Apr 2020 11:24:30 +1200
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
In-Reply-To: <324A4A54-8317-41F7-8992-24FBCC8B2684@ed.ac.uk>
References: <30601_1587411746_03KJgI7o015695_EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>
 <6882EDCD-9380-4F84-A450-B18D7707F145@mcmaster.ca>
 <324A4A54-8317-41F7-8992-24FBCC8B2684@ed.ac.uk>
Message-ID: <EBFE4BA9-8CBF-4669-A83B-49DAED5AD289@R-project.org>

Just a quick note in the hopes that is may be helpful: X11 (fontconfig, really) creates a font cache the first time is it started which can take substantial time depending on hardware (HDD vs SSD...) during which XQuartz doesn't respond. So I wouldn't be surprised if that was actually happening, unrelated to any setttings. If you start XQuartz later after the cache has been built, it will work fine immediately. So if that is what it was, the issue should not re-occur if you were patient enough the first time.

Cheers,
Simon



> On 21/04/2020, at 8:41 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
> 
> Eberhard, Thanks - I'm also  an RStudio user, but am trying to use Rcmdr as a gentle introduction to R for a course (building up to RStudio use later).
> 
> John, thanks also for responding (not at all an Rcmdr issue, I think - that's just what happened to show the problem). Tech details:
> 
> MacBook Pro 15 (bought 2019)
> Catalina 10.15.4
> 2.6 GHz 6-core Intel Core i7
> 16 GB 2400 MHz DDR4 memory
> Radeon Pro 555X 4GB & Intel UHD Graphics 360 1536MB graphics.
> 
> R 3.6.3, new download of Rcmdr etc (reinstalled everything from scratch before realising X11 was the reason Rcmdr wasn't working and downloading XQuartz). I'm almost certain I would have rebooted before trying to run this - I saw that warning somewhere (CRAN FAQ maybe?). I certainly have since, but perhaps that's why it is now appearing to function correctly? I should say that 2-3 students have reported the same problem over the last 3-4 days, so it isn't just me.
> 
> Thanks again for input. Best wishes to all on the list.
> 
> Niall
> 
> ________________________________
> 
> Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
> Room G113B, Doorway 1
> Usher Institute, University of Edinburgh
> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
> 
> Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
> 
> Responses to emails are only expected during your working hours
> 
> www.ed.ac.uk/usher <http://www.ed.ac.uk/usher> | @EdinUniUsher <https://twitter.com/edinuniusher>
> 
> 
> 
> 
> 
> ?On 21/04/2020, 04:55, "Fox, John" <jfox at mcmaster.ca> wrote:
> 
>    Dear Niall,
> 
>> On Apr 20, 2020, at 3:42 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
>> 
>> Dear all,
>> 
>> I?m relatively new to MacOS and have only recently started trying to use XQuartz to enable me to run Rcmdr. Are there any common issues/ tips for getting good performance out of it (or should it usually run well with default settings)?
>> 
>> On first installation, I found there was a very long lag in menus being populated (i.e. the menu shape was generated, but no usable options were added), to the extent that Rcmdr was then effectively useless (not Rcmdr?s fault, I don?t think). One of my students suggested reducing Output Colors option from the default ?Millions? setting. That seems to deal with the problem, thankfully.
>> 
>> Is that typical of XQuartz, and is there anything else I should be doing to get the best performance from it?
> 
>    I haven't observed the problem you describe on my Mac, which is a three- or four-year-old MacBook Pro (that is, the Rcmdr dialogs display reasonably crisply for me), and I haven't done anything special to configure XQuartz. Here are the specs for my Mac:
> 
>     Model Name:	MacBook Pro
>      Model Identifier:	MacBookPro13,2
>      Processor Name:	Dual-Core Intel Core i7
>      Processor Speed:	3.3 GHz
>      Number of Processors:	1
>      Total Number of Cores:	2
>      L2 Cache (per Core):	256 KB
>      L3 Cache:	4 MB
>      Hyper-Threading Technology:	Enabled
>      Memory:	8 GB
> 
>    It might help to have some more information. I assume that you're using the most recent versions of R, the Rcmdr package, and other packages, and a recent version of macOS. What Mac do you have, and did you reboot it after installing XQuartz? If you updated R, did you reinstall XQuartz?
> 
>    Best,
>     John
> 
>      -----------------------------
>      John Fox, Professor Emeritus
>      McMaster University
>      Hamilton, Ontario, Canada
>      Web: http::/socserv.mcmaster.ca/jfox
> 
>> 
>> Thanks,
>> 
>> Niall Anderson
>> 
>> 
>> ________________________________
>> 
>> Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
>> 
>> Room G113B, Doorway 1
>> Usher Institute, University of Edinburgh
>> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
>> 
>> Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
>> 
>> Responses to emails are only expected during your working hours
>> <image001.png>
>> www.ed.ac.uk/usher | @EdinUniUsher
>> 
>> <image002.png>
>> 
>> 
>> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> 
> 
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr 22 01:51:44 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 22 Apr 2020 11:51:44 +1200
Subject: [R-SIG-Mac] [Rd] R not running under lldb? (osx)
In-Reply-To: <CANnL8go3sZ522HABcqkBDLpRaWBQqL5CDx-x=kEynAPYj-Baow@mail.gmail.com>
References: <CANnL8go3sZ522HABcqkBDLpRaWBQqL5CDx-x=kEynAPYj-Baow@mail.gmail.com>
Message-ID: <C54DFDF5-D650-4348-84AC-52BD24DCBB14@R-project.org>

Tim,

as a security precaution Apple has disabled the ability to debug notarized applications*. It means any software distributed on macOS Catalina (and they may have retro-actively enabled it for recent updates of Mojave) cannot be run in a debugger.

If you want to debug R, you have to use non-release binaries that are not notarized and install them by hand, e.g.:

curl -L http://mac.r-project.org/high-sierra/R-4.0-branch/x86_64/R-4.0-branch.tar.gz | tar fxz - -C /

Of course, this disables the Apple protections and thus is not recommended for casual users. 

Cheers,
Simon

* - more technical details: Apple requires notarization of any application that will be distributed via an Apple installer. Apple no longer allows installation of macOS applications that are not notarized. In order to obtain notarization, the application has to be fully signed, has to use hardened run-time and may not enable debugging entitlements. One part of the hardened run-time is that no debugger is allowed to attach to the application.


> On 22/04/2020, at 8:59 AM, Tim Keitt <tkeitt at gmail.com> wrote:
> 
> I see:
> 
> Tims-Air:~ tkeitt$ R --version
> 
> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> 
> Copyright (C) 2020 The R Foundation for Statistical Computing
> 
> Platform: x86_64-apple-darwin15.6.0 (64-bit)
> 
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> 
> You are welcome to redistribute it under the terms of the
> 
> GNU General Public License versions 2 or 3.
> 
> For more information about these matters see
> 
> https://www.gnu.org/licenses/.
> 
> 
> Tims-Air:~ tkeitt$ R -d lldb
> 
> (lldb) target create "/Library/Frameworks/R.framework/Resources/bin/exec/R"
> 
> Current executable set to
> '/Library/Frameworks/R.framework/Resources/bin/exec/R' (x86_64).
> 
> (lldb) run --vanilla
> 
> error: process exited with status -1 (Error 1)
> 
> Never happened before. Is this a known issue?
> 
> Thanks.
> 
> THK
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr 22 06:24:09 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 22 Apr 2020 16:24:09 +1200
Subject: [R-SIG-Mac] [Rd] R not running under lldb? (osx)
In-Reply-To: <CANnL8gos5QA+Wt=1YRZTLiag+jt-+8yyEaZdvpBUn72-DYcjCw@mail.gmail.com>
References: <CANnL8go3sZ522HABcqkBDLpRaWBQqL5CDx-x=kEynAPYj-Baow@mail.gmail.com>
 <C54DFDF5-D650-4348-84AC-52BD24DCBB14@R-project.org>
 <CANnL8gos5QA+Wt=1YRZTLiag+jt-+8yyEaZdvpBUn72-DYcjCw@mail.gmail.com>
Message-ID: <C06C8B37-77DA-44C0-A0A6-094DB9C69710@R-project.org>

Tim,

sure, make sense (it's also easier to use ASAN and friends that way). The only issue is that it won't work for mcOS-specific bugs.

Cheers,
Simon



> On 22/04/2020, at 3:55 PM, Tim Keitt <tkeitt at gmail.com> wrote:
> 
> Thanks Simon. I'll probably just switch to rocker when needing to debug in that case.
> 
> THK
> 
> On Tue, Apr 21, 2020 at 6:51 PM Simon Urbanek <simon.urbanek at r-project.org> wrote:
> Tim,
> 
> as a security precaution Apple has disabled the ability to debug notarized applications*. It means any software distributed on macOS Catalina (and they may have retro-actively enabled it for recent updates of Mojave) cannot be run in a debugger.
> 
> If you want to debug R, you have to use non-release binaries that are not notarized and install them by hand, e.g.:
> 
> curl -L http://mac.r-project.org/high-sierra/R-4.0-branch/x86_64/R-4.0-branch.tar.gz | tar fxz - -C /
> 
> Of course, this disables the Apple protections and thus is not recommended for casual users. 
> 
> Cheers,
> Simon
> 
> * - more technical details: Apple requires notarization of any application that will be distributed via an Apple installer. Apple no longer allows installation of macOS applications that are not notarized. In order to obtain notarization, the application has to be fully signed, has to use hardened run-time and may not enable debugging entitlements. One part of the hardened run-time is that no debugger is allowed to attach to the application.
> 
> 
> > On 22/04/2020, at 8:59 AM, Tim Keitt <tkeitt at gmail.com> wrote:
> > 
> > I see:
> > 
> > Tims-Air:~ tkeitt$ R --version
> > 
> > R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> > 
> > Copyright (C) 2020 The R Foundation for Statistical Computing
> > 
> > Platform: x86_64-apple-darwin15.6.0 (64-bit)
> > 
> > 
> > R is free software and comes with ABSOLUTELY NO WARRANTY.
> > 
> > You are welcome to redistribute it under the terms of the
> > 
> > GNU General Public License versions 2 or 3.
> > 
> > For more information about these matters see
> > 
> > https://www.gnu.org/licenses/.
> > 
> > 
> > Tims-Air:~ tkeitt$ R -d lldb
> > 
> > (lldb) target create "/Library/Frameworks/R.framework/Resources/bin/exec/R"
> > 
> > Current executable set to
> > '/Library/Frameworks/R.framework/Resources/bin/exec/R' (x86_64).
> > 
> > (lldb) run --vanilla
> > 
> > error: process exited with status -1 (Error 1)
> > 
> > Never happened before. Is this a known issue?
> > 
> > Thanks.
> > 
> > THK
> > 
> >       [[alternative HTML version deleted]]
> > 
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> > 
> 


From wjm1 @end|ng |rom c@@@co|umb|@@edu  Wed Apr 22 06:37:44 2020
From: wjm1 @end|ng |rom c@@@co|umb|@@edu (William Michels)
Date: Tue, 21 Apr 2020 21:37:44 -0700
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
In-Reply-To: <mailman.13607.2769.1587511488.2266.r-sig-mac@r-project.org>
References: <mailman.13607.2769.1587511488.2266.r-sig-mac@r-project.org>
Message-ID: <CAA99HCwrR-TU80r+dRzBuuvYBMqEuB6ExM68ewoDH9YQFsu8dA@mail.gmail.com>

Hello,

Regarding R with XQuartz on Mac--I found one reference claiming that
after upgrading to MacOS 10.15 Catalina, users may be required to
re-install XQuartz. The MacOS Catalina installer moves/quarantines
prior XQuartz installations to a folder called "Relocated Items",
which may disrupt programs linking to XQuartz and expecting to find it
in the old location:

"Installing or Reinstalling XQuartz if Upgrade to macOS 10.15 Catalina
Causes Issues"
https://www.harrisgeospatial.com/Support/Self-Help-Tools/Help-Articles/Help-Articles-Detail/ArtMID/10220/ArticleID/23855/default

HTH, Bill.

W. Michels, Ph.D.



On Tue, Apr 21, 2020 at 4:25 PM <r-sig-mac-request at r-project.org> wrote:
>
> Send R-SIG-Mac mailing list submissions to
>         r-sig-mac at r-project.org


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Apr 22 07:13:51 2020
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 22 Apr 2020 17:13:51 +1200
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
In-Reply-To: <CAA99HCwrR-TU80r+dRzBuuvYBMqEuB6ExM68ewoDH9YQFsu8dA@mail.gmail.com>
References: <mailman.13607.2769.1587511488.2266.r-sig-mac@r-project.org>
 <CAA99HCwrR-TU80r+dRzBuuvYBMqEuB6ExM68ewoDH9YQFsu8dA@mail.gmail.com>
Message-ID: <6AA3AB95-D2CE-4975-9B69-1806054B0AF9@R-project.org>

Bill,

that has been always the case. You have to re-install XQuartz with every macOS upgrade. There are many issues with Catalina, but at least this one is not new ;).

Cheers,
Simon


> On 22/04/2020, at 4:37 PM, William Michels via R-SIG-Mac <r-sig-mac at r-project.org> wrote:
> 
> Hello,
> 
> Regarding R with XQuartz on Mac--I found one reference claiming that
> after upgrading to MacOS 10.15 Catalina, users may be required to
> re-install XQuartz. The MacOS Catalina installer moves/quarantines
> prior XQuartz installations to a folder called "Relocated Items",
> which may disrupt programs linking to XQuartz and expecting to find it
> in the old location:
> 
> "Installing or Reinstalling XQuartz if Upgrade to macOS 10.15 Catalina
> Causes Issues"
> https://www.harrisgeospatial.com/Support/Self-Help-Tools/Help-Articles/Help-Articles-Detail/ArtMID/10220/ArticleID/23855/default
> 
> HTH, Bill.
> 
> W. Michels, Ph.D.
> 
> 
> 
> On Tue, Apr 21, 2020 at 4:25 PM <r-sig-mac-request at r-project.org> wrote:
>> 
>> Send R-SIG-Mac mailing list submissions to
>>        r-sig-mac at r-project.org
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From N|@||@Ander@on @end|ng |rom ed@@c@uk  Wed Apr 22 11:06:36 2020
From: N|@||@Ander@on @end|ng |rom ed@@c@uk (ANDERSON Niall)
Date: Wed, 22 Apr 2020 09:06:36 +0000
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
In-Reply-To: <EBFE4BA9-8CBF-4669-A83B-49DAED5AD289@R-project.org>
References: <30601_1587411746_03KJgI7o015695_EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>
 <6882EDCD-9380-4F84-A450-B18D7707F145@mcmaster.ca>
 <324A4A54-8317-41F7-8992-24FBCC8B2684@ed.ac.uk>
 <EBFE4BA9-8CBF-4669-A83B-49DAED5AD289@R-project.org>
Message-ID: <FC7E7EB9-AB3F-4289-ACAC-FCE45D683697@ed.ac.uk>

Thanks to everyone who has responded.

The consensus view seems to be that the reboot after initial installation is vital and I/ we probably missed that! Also that very first use may involve more system preparation to generate the font cache, so it may run more slowly until that is complete. I'm inclined to think one or both of these explanations underlay the issues and that we can mark this as User Error, but Resolved!

Best wishes to all.

Niall


________________________________
 
Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
Room G113B, Doorway 1
Usher Institute, University of Edinburgh
Old Medical School, Teviot Place, Edinburgh, EH8 9AG
 
Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
 
Responses to emails are only expected during your working hours

www.ed.ac.uk/usher <http://www.ed.ac.uk/usher> | @EdinUniUsher <https://twitter.com/edinuniusher>
 

 
 

?On 22/04/2020, 00:24, "Simon Urbanek" <simon.urbanek at R-project.org> wrote:

    Just a quick note in the hopes that is may be helpful: X11 (fontconfig, really) creates a font cache the first time is it started which can take substantial time depending on hardware (HDD vs SSD...) during which XQuartz doesn't respond. So I wouldn't be surprised if that was actually happening, unrelated to any setttings. If you start XQuartz later after the cache has been built, it will work fine immediately. So if that is what it was, the issue should not re-occur if you were patient enough the first time.
    
    Cheers,
    Simon
    
    
    
    > On 21/04/2020, at 8:41 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
    > 
    > Eberhard, Thanks - I'm also  an RStudio user, but am trying to use Rcmdr as a gentle introduction to R for a course (building up to RStudio use later).
    > 
    > John, thanks also for responding (not at all an Rcmdr issue, I think - that's just what happened to show the problem). Tech details:
    > 
    > MacBook Pro 15 (bought 2019)
    > Catalina 10.15.4
    > 2.6 GHz 6-core Intel Core i7
    > 16 GB 2400 MHz DDR4 memory
    > Radeon Pro 555X 4GB & Intel UHD Graphics 360 1536MB graphics.
    > 
    > R 3.6.3, new download of Rcmdr etc (reinstalled everything from scratch before realising X11 was the reason Rcmdr wasn't working and downloading XQuartz). I'm almost certain I would have rebooted before trying to run this - I saw that warning somewhere (CRAN FAQ maybe?). I certainly have since, but perhaps that's why it is now appearing to function correctly? I should say that 2-3 students have reported the same problem over the last 3-4 days, so it isn't just me.
    > 
    > Thanks again for input. Best wishes to all on the list.
    > 
    > Niall
    > 
    > ________________________________
    > 
    > Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
    > Room G113B, Doorway 1
    > Usher Institute, University of Edinburgh
    > Old Medical School, Teviot Place, Edinburgh, EH8 9AG
    > 
    > Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
    > 
    > Responses to emails are only expected during your working hours
    > 
    > www.ed.ac.uk/usher <http://www.ed.ac.uk/usher> | @EdinUniUsher <https://twitter.com/edinuniusher>
    > 
    > 
    > 
    > 
    > 
    > On 21/04/2020, 04:55, "Fox, John" <jfox at mcmaster.ca> wrote:
    > 
    >    Dear Niall,
    > 
    >> On Apr 20, 2020, at 3:42 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
    >> 
    >> Dear all,
    >> 
    >> I?m relatively new to MacOS and have only recently started trying to use XQuartz to enable me to run Rcmdr. Are there any common issues/ tips for getting good performance out of it (or should it usually run well with default settings)?
    >> 
    >> On first installation, I found there was a very long lag in menus being populated (i.e. the menu shape was generated, but no usable options were added), to the extent that Rcmdr was then effectively useless (not Rcmdr?s fault, I don?t think). One of my students suggested reducing Output Colors option from the default ?Millions? setting. That seems to deal with the problem, thankfully.
    >> 
    >> Is that typical of XQuartz, and is there anything else I should be doing to get the best performance from it?
    > 
    >    I haven't observed the problem you describe on my Mac, which is a three- or four-year-old MacBook Pro (that is, the Rcmdr dialogs display reasonably crisply for me), and I haven't done anything special to configure XQuartz. Here are the specs for my Mac:
    > 
    >     Model Name:	MacBook Pro
    >      Model Identifier:	MacBookPro13,2
    >      Processor Name:	Dual-Core Intel Core i7
    >      Processor Speed:	3.3 GHz
    >      Number of Processors:	1
    >      Total Number of Cores:	2
    >      L2 Cache (per Core):	256 KB
    >      L3 Cache:	4 MB
    >      Hyper-Threading Technology:	Enabled
    >      Memory:	8 GB
    > 
    >    It might help to have some more information. I assume that you're using the most recent versions of R, the Rcmdr package, and other packages, and a recent version of macOS. What Mac do you have, and did you reboot it after installing XQuartz? If you updated R, did you reinstall XQuartz?
    > 
    >    Best,
    >     John
    > 
    >      -----------------------------
    >      John Fox, Professor Emeritus
    >      McMaster University
    >      Hamilton, Ontario, Canada
    >      Web: http::/socserv.mcmaster.ca/jfox
    > 
    >> 
    >> Thanks,
    >> 
    >> Niall Anderson
    >> 
    >> 
    >> ________________________________
    >> 
    >> Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
    >> 
    >> Room G113B, Doorway 1
    >> Usher Institute, University of Edinburgh
    >> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
    >> 
    >> Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
    >> 
    >> Responses to emails are only expected during your working hours
    >> <image001.png>
    >> www.ed.ac.uk/usher | @EdinUniUsher
    >> 
    >> <image002.png>
    >> 
    >> 
    >> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. _______________________________________________
    >> R-SIG-Mac mailing list
    >> R-SIG-Mac at r-project.org
    >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    > 
    > 
    > 
    > 
    > 
    > 
    > _______________________________________________
    > R-SIG-Mac mailing list
    > R-SIG-Mac at r-project.org
    > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
    
    


From j|ox @end|ng |rom mcm@@ter@c@  Wed Apr 22 15:34:19 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (Fox, John)
Date: Wed, 22 Apr 2020 13:34:19 +0000
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
In-Reply-To: <1863_1587511498_03LNOvQs001387_EBFE4BA9-8CBF-4669-A83B-49DAED5AD289@R-project.org>
References: <30601_1587411746_03KJgI7o015695_EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>
 <6882EDCD-9380-4F84-A450-B18D7707F145@mcmaster.ca>
 <324A4A54-8317-41F7-8992-24FBCC8B2684@ed.ac.uk>
 <1863_1587511498_03LNOvQs001387_EBFE4BA9-8CBF-4669-A83B-49DAED5AD289@R-project.org>
Message-ID: <B9B7397B-AF92-4D55-A10F-D60C18F16853@mcmaster.ca>

Dear Simon,

Thanks for the explanation -- it makes sense of what Niall and some of his students observed and why I haven't seen this problem, because XQuartz was first installed on my Mac years ago.

Best,
 John

> On Apr 21, 2020, at 7:24 PM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> Just a quick note in the hopes that is may be helpful: X11 (fontconfig, really) creates a font cache the first time is it started which can take substantial time depending on hardware (HDD vs SSD...) during which XQuartz doesn't respond. So I wouldn't be surprised if that was actually happening, unrelated to any setttings. If you start XQuartz later after the cache has been built, it will work fine immediately. So if that is what it was, the issue should not re-occur if you were patient enough the first time.
> 
> Cheers,
> Simon
> 
> 
> 
>> On 21/04/2020, at 8:41 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
>> 
>> Eberhard, Thanks - I'm also  an RStudio user, but am trying to use Rcmdr as a gentle introduction to R for a course (building up to RStudio use later).
>> 
>> John, thanks also for responding (not at all an Rcmdr issue, I think - that's just what happened to show the problem). Tech details:
>> 
>> MacBook Pro 15 (bought 2019)
>> Catalina 10.15.4
>> 2.6 GHz 6-core Intel Core i7
>> 16 GB 2400 MHz DDR4 memory
>> Radeon Pro 555X 4GB & Intel UHD Graphics 360 1536MB graphics.
>> 
>> R 3.6.3, new download of Rcmdr etc (reinstalled everything from scratch before realising X11 was the reason Rcmdr wasn't working and downloading XQuartz). I'm almost certain I would have rebooted before trying to run this - I saw that warning somewhere (CRAN FAQ maybe?). I certainly have since, but perhaps that's why it is now appearing to function correctly? I should say that 2-3 students have reported the same problem over the last 3-4 days, so it isn't just me.
>> 
>> Thanks again for input. Best wishes to all on the list.
>> 
>> Niall
>> 
>> ________________________________
>> 
>> Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
>> Room G113B, Doorway 1
>> Usher Institute, University of Edinburgh
>> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
>> 
>> Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
>> 
>> Responses to emails are only expected during your working hours
>> 
>> www.ed.ac.uk/usher <http://www.ed.ac.uk/usher> | @EdinUniUsher <https://twitter.com/edinuniusher>
>> 
>> 
>> 
>> 
>> 
>> ?On 21/04/2020, 04:55, "Fox, John" <jfox at mcmaster.ca> wrote:
>> 
>>   Dear Niall,
>> 
>>> On Apr 20, 2020, at 3:42 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
>>> 
>>> Dear all,
>>> 
>>> I?m relatively new to MacOS and have only recently started trying to use XQuartz to enable me to run Rcmdr. Are there any common issues/ tips for getting good performance out of it (or should it usually run well with default settings)?
>>> 
>>> On first installation, I found there was a very long lag in menus being populated (i.e. the menu shape was generated, but no usable options were added), to the extent that Rcmdr was then effectively useless (not Rcmdr?s fault, I don?t think). One of my students suggested reducing Output Colors option from the default ?Millions? setting. That seems to deal with the problem, thankfully.
>>> 
>>> Is that typical of XQuartz, and is there anything else I should be doing to get the best performance from it?
>> 
>>   I haven't observed the problem you describe on my Mac, which is a three- or four-year-old MacBook Pro (that is, the Rcmdr dialogs display reasonably crisply for me), and I haven't done anything special to configure XQuartz. Here are the specs for my Mac:
>> 
>>    Model Name:	MacBook Pro
>>     Model Identifier:	MacBookPro13,2
>>     Processor Name:	Dual-Core Intel Core i7
>>     Processor Speed:	3.3 GHz
>>     Number of Processors:	1
>>     Total Number of Cores:	2
>>     L2 Cache (per Core):	256 KB
>>     L3 Cache:	4 MB
>>     Hyper-Threading Technology:	Enabled
>>     Memory:	8 GB
>> 
>>   It might help to have some more information. I assume that you're using the most recent versions of R, the Rcmdr package, and other packages, and a recent version of macOS. What Mac do you have, and did you reboot it after installing XQuartz? If you updated R, did you reinstall XQuartz?
>> 
>>   Best,
>>    John
>> 
>>     -----------------------------
>>     John Fox, Professor Emeritus
>>     McMaster University
>>     Hamilton, Ontario, Canada
>>     Web: http::/socserv.mcmaster.ca/jfox
>> 
>>> 
>>> Thanks,
>>> 
>>> Niall Anderson
>>> 
>>> 
>>> ________________________________
>>> 
>>> Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
>>> 
>>> Room G113B, Doorway 1
>>> Usher Institute, University of Edinburgh
>>> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
>>> 
>>> Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
>>> 
>>> Responses to emails are only expected during your working hours
>>> <image001.png>
>>> www.ed.ac.uk/usher | @EdinUniUsher
>>> 
>>> <image002.png>
>>> 
>>> 
>>> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
>> 
>> 
>> 
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From j|ox @end|ng |rom mcm@@ter@c@  Wed Apr 22 15:40:14 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (Fox, John)
Date: Wed, 22 Apr 2020 13:40:14 +0000
Subject: [R-SIG-Mac] Using XQuartz - any known issues?
In-Reply-To: <4580_1587546438_03M97HmQ001001_FC7E7EB9-AB3F-4289-ACAC-FCE45D683697@ed.ac.uk>
References: <30601_1587411746_03KJgI7o015695_EC214952-8F58-440A-BA2F-F6A747234D26@contoso.com>
 <6882EDCD-9380-4F84-A450-B18D7707F145@mcmaster.ca>
 <324A4A54-8317-41F7-8992-24FBCC8B2684@ed.ac.uk>
 <EBFE4BA9-8CBF-4669-A83B-49DAED5AD289@R-project.org>
 <4580_1587546438_03M97HmQ001001_FC7E7EB9-AB3F-4289-ACAC-FCE45D683697@ed.ac.uk>
Message-ID: <7C4A1DEA-66C5-4A55-A498-122AA10EEAD2@mcmaster.ca>

Dear Niall,

I'll update the Rcmdr macOS installation notes to reflect Simon's information about XQuartz causing a font cache to be built on first installation.

I'm glad that the Rcmdr is now working normally for you and your students. I wouldn't code this as "user error," but as a previously unnoticed (by me) consequence of installing XQuartz for the first time.

Best,
 John

> On Apr 22, 2020, at 5:06 AM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
> 
> Thanks to everyone who has responded.
> 
> The consensus view seems to be that the reboot after initial installation is vital and I/ we probably missed that! Also that very first use may involve more system preparation to generate the font cache, so it may run more slowly until that is complete. I'm inclined to think one or both of these explanations underlay the issues and that we can mark this as User Error, but Resolved!
> 
> Best wishes to all.
> 
> Niall
> 
> 
> ________________________________
> 
> Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
> Room G113B, Doorway 1
> Usher Institute, University of Edinburgh
> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
> 
> Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
> 
> Responses to emails are only expected during your working hours
> 
> www.ed.ac.uk/usher <http://www.ed.ac.uk/usher> | @EdinUniUsher <https://twitter.com/edinuniusher>
> 
> 
> 
> 
> 
> ?On 22/04/2020, 00:24, "Simon Urbanek" <simon.urbanek at R-project.org> wrote:
> 
>    Just a quick note in the hopes that is may be helpful: X11 (fontconfig, really) creates a font cache the first time is it started which can take substantial time depending on hardware (HDD vs SSD...) during which XQuartz doesn't respond. So I wouldn't be surprised if that was actually happening, unrelated to any setttings. If you start XQuartz later after the cache has been built, it will work fine immediately. So if that is what it was, the issue should not re-occur if you were patient enough the first time.
> 
>    Cheers,
>    Simon
> 
> 
> 
>> On 21/04/2020, at 8:41 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
>> 
>> Eberhard, Thanks - I'm also  an RStudio user, but am trying to use Rcmdr as a gentle introduction to R for a course (building up to RStudio use later).
>> 
>> John, thanks also for responding (not at all an Rcmdr issue, I think - that's just what happened to show the problem). Tech details:
>> 
>> MacBook Pro 15 (bought 2019)
>> Catalina 10.15.4
>> 2.6 GHz 6-core Intel Core i7
>> 16 GB 2400 MHz DDR4 memory
>> Radeon Pro 555X 4GB & Intel UHD Graphics 360 1536MB graphics.
>> 
>> R 3.6.3, new download of Rcmdr etc (reinstalled everything from scratch before realising X11 was the reason Rcmdr wasn't working and downloading XQuartz). I'm almost certain I would have rebooted before trying to run this - I saw that warning somewhere (CRAN FAQ maybe?). I certainly have since, but perhaps that's why it is now appearing to function correctly? I should say that 2-3 students have reported the same problem over the last 3-4 days, so it isn't just me.
>> 
>> Thanks again for input. Best wishes to all on the list.
>> 
>> Niall
>> 
>> ________________________________
>> 
>> Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
>> Room G113B, Doorway 1
>> Usher Institute, University of Edinburgh
>> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
>> 
>> Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
>> 
>> Responses to emails are only expected during your working hours
>> 
>> www.ed.ac.uk/usher <http://www.ed.ac.uk/usher> | @EdinUniUsher <https://twitter.com/edinuniusher>
>> 
>> 
>> 
>> 
>> 
>> On 21/04/2020, 04:55, "Fox, John" <jfox at mcmaster.ca> wrote:
>> 
>>   Dear Niall,
>> 
>>> On Apr 20, 2020, at 3:42 PM, ANDERSON Niall <Niall.Anderson at ed.ac.uk> wrote:
>>> 
>>> Dear all,
>>> 
>>> I?m relatively new to MacOS and have only recently started trying to use XQuartz to enable me to run Rcmdr. Are there any common issues/ tips for getting good performance out of it (or should it usually run well with default settings)?
>>> 
>>> On first installation, I found there was a very long lag in menus being populated (i.e. the menu shape was generated, but no usable options were added), to the extent that Rcmdr was then effectively useless (not Rcmdr?s fault, I don?t think). One of my students suggested reducing Output Colors option from the default ?Millions? setting. That seems to deal with the problem, thankfully.
>>> 
>>> Is that typical of XQuartz, and is there anything else I should be doing to get the best performance from it?
>> 
>>   I haven't observed the problem you describe on my Mac, which is a three- or four-year-old MacBook Pro (that is, the Rcmdr dialogs display reasonably crisply for me), and I haven't done anything special to configure XQuartz. Here are the specs for my Mac:
>> 
>>    Model Name:	MacBook Pro
>>     Model Identifier:	MacBookPro13,2
>>     Processor Name:	Dual-Core Intel Core i7
>>     Processor Speed:	3.3 GHz
>>     Number of Processors:	1
>>     Total Number of Cores:	2
>>     L2 Cache (per Core):	256 KB
>>     L3 Cache:	4 MB
>>     Hyper-Threading Technology:	Enabled
>>     Memory:	8 GB
>> 
>>   It might help to have some more information. I assume that you're using the most recent versions of R, the Rcmdr package, and other packages, and a recent version of macOS. What Mac do you have, and did you reboot it after installing XQuartz? If you updated R, did you reinstall XQuartz?
>> 
>>   Best,
>>    John
>> 
>>     -----------------------------
>>     John Fox, Professor Emeritus
>>     McMaster University
>>     Hamilton, Ontario, Canada
>>     Web: http::/socserv.mcmaster.ca/jfox
>> 
>>> 
>>> Thanks,
>>> 
>>> Niall Anderson
>>> 
>>> 
>>> ________________________________
>>> 
>>> Dr Niall H. Anderson | Senior Lecturer in Medical Statistics/ Programme Co-director, MPH (on campus)
>>> 
>>> Room G113B, Doorway 1
>>> Usher Institute, University of Edinburgh
>>> Old Medical School, Teviot Place, Edinburgh, EH8 9AG
>>> 
>>> Niall.Anderson at ed.ac.uk  | +44 (0)131 650 3212 | Skype = live:niall.h.anderson
>>> 
>>> Responses to emails are only expected during your working hours
>>> <image001.png>
>>> www.ed.ac.uk/usher | @EdinUniUsher
>>> 
>>> <image002.png>
>>> 
>>> 
>>> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
>> 
>> 
>> 
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From @eb@@t|@n @end|ng |rom w@eber@@de  Tue Apr 21 09:51:15 2020
From: @eb@@t|@n @end|ng |rom w@eber@@de (Sebastian Weber)
Date: Tue, 21 Apr 2020 09:51:15 +0200
Subject: [R-SIG-Mac] R 4.0.0 RC an macOS Catalina with Stan
Message-ID: <4699CF4E-A6BB-461C-819B-7A8D89985A0C@waebers.de>

Hi there!

I just wanted to drop a quick note that things look very promising on macOS Catalina with the new toolchain when using Stan based R packages. The current toolchain prevents that on macOS Catalina users can download pre-build packages from CRAN servers and use these. Instead users are forced to compile from source R packages which are based on rstan at the moment (with a special setup of the toolchain).

Here are the details:

https://discourse.mc-stan.org/t/r-4-0-0-and-cran-macos-binaries/13989/2?u=wds15

So this looks like a real improvement to me. Kudos!

Best,
Sebastian

Von meinem iPad gesendet
	[[alternative HTML version deleted]]


From tke|tt @end|ng |rom gm@||@com  Wed Apr 22 05:55:40 2020
From: tke|tt @end|ng |rom gm@||@com (Tim Keitt)
Date: Tue, 21 Apr 2020 22:55:40 -0500
Subject: [R-SIG-Mac] [Rd] R not running under lldb? (osx)
In-Reply-To: <C54DFDF5-D650-4348-84AC-52BD24DCBB14@R-project.org>
References: <CANnL8go3sZ522HABcqkBDLpRaWBQqL5CDx-x=kEynAPYj-Baow@mail.gmail.com>
 <C54DFDF5-D650-4348-84AC-52BD24DCBB14@R-project.org>
Message-ID: <CANnL8gos5QA+Wt=1YRZTLiag+jt-+8yyEaZdvpBUn72-DYcjCw@mail.gmail.com>

Thanks Simon. I'll probably just switch to rocker when needing to debug in
that case.

THK

On Tue, Apr 21, 2020 at 6:51 PM Simon Urbanek <simon.urbanek at r-project.org>
wrote:

> Tim,
>
> as a security precaution Apple has disabled the ability to debug notarized
> applications*. It means any software distributed on macOS Catalina (and
> they may have retro-actively enabled it for recent updates of Mojave)
> cannot be run in a debugger.
>
> If you want to debug R, you have to use non-release binaries that are not
> notarized and install them by hand, e.g.:
>
> curl -L
> http://mac.r-project.org/high-sierra/R-4.0-branch/x86_64/R-4.0-branch.tar.gz
> | tar fxz - -C /
>
> Of course, this disables the Apple protections and thus is not recommended
> for casual users.
>
> Cheers,
> Simon
>
> * - more technical details: Apple requires notarization of any application
> that will be distributed via an Apple installer. Apple no longer allows
> installation of macOS applications that are not notarized. In order to
> obtain notarization, the application has to be fully signed, has to use
> hardened run-time and may not enable debugging entitlements. One part of
> the hardened run-time is that no debugger is allowed to attach to the
> application.
>
>
> > On 22/04/2020, at 8:59 AM, Tim Keitt <tkeitt at gmail.com> wrote:
> >
> > I see:
> >
> > Tims-Air:~ tkeitt$ R --version
> >
> > R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> >
> > Copyright (C) 2020 The R Foundation for Statistical Computing
> >
> > Platform: x86_64-apple-darwin15.6.0 (64-bit)
> >
> >
> > R is free software and comes with ABSOLUTELY NO WARRANTY.
> >
> > You are welcome to redistribute it under the terms of the
> >
> > GNU General Public License versions 2 or 3.
> >
> > For more information about these matters see
> >
> > https://www.gnu.org/licenses/.
> >
> >
> > Tims-Air:~ tkeitt$ R -d lldb
> >
> > (lldb) target create
> "/Library/Frameworks/R.framework/Resources/bin/exec/R"
> >
> > Current executable set to
> > '/Library/Frameworks/R.framework/Resources/bin/exec/R' (x86_64).
> >
> > (lldb) run --vanilla
> >
> > error: process exited with status -1 (Error 1)
> >
> > Never happened before. Is this a known issue?
> >
> > Thanks.
> >
> > THK
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>

	[[alternative HTML version deleted]]


From @e||v@nov@dm|tr|y @end|ng |rom gm@||@com  Thu Apr 23 13:08:18 2020
From: @e||v@nov@dm|tr|y @end|ng |rom gm@||@com (Dmitriy Selivanov)
Date: Thu, 23 Apr 2020 15:08:18 +0400
Subject: [R-SIG-Mac] OpenMP on CRAN (Simon Urbanek)
Message-ID: <CAJdZCv0SSeUzKqC_KBmC5RjTWKpb5w_25-QFfzo1FBQhZqeUdQ@mail.gmail.com>

Hi Simon,

Just wanted follow up on this topic.

It would be very helpful if you can provide some guide on
https://mac.R-project.org <https://mac.r-project.org/> for those users
(advanced?) and developers who wants to be able to use OpenMP on mac. From
what I've understood from this mail thread the easiest way is to install R
from homebrew as it is built with non-standard Apple toolchain.
Apart from that you've mentioned you may consider to bundle binary  iomp
with R installation, but "it would be on the package author to make sure
that the way the package operates is compatible with that binary". Could
you please elaborate on that?

I believe I'm not alone who would like to be able to use OpenMP on mac and
"official" guidance would be very helpful.

-- 
Regards
Dmitriy Selivanov

	[[alternative HTML version deleted]]


From er|ch@@ub@ @end|ng |rom neuw|rth@pr|v@@t  Sat Apr 25 11:47:02 2020
From: er|ch@@ub@ @end|ng |rom neuw|rth@pr|v@@t (Erich Subscriptions)
Date: Sat, 25 Apr 2020 11:47:02 +0200
Subject: [R-SIG-Mac] Strange library problem with 4.0
Message-ID: <CBB7F211-8B33-4319-8398-3006CBEB5183@neuwirth.priv.at>

I installed R 4.0 on 2 machines, an iMac and a Macbook Pro.
Before that, I installed RSwitch and did what the site tells to do:
sudo pkgutil --forget org.r-project.R.el-capitan.fw.pkg \
             --forget org.r-project.x86_64.tcltk.x11 \
             --forget org.r-project.x86_64.texinfo \
             --forget org.r-project.R.el-capitan.GUI.pkg
so that the 3.6 and 4.0 can coexist.

I always keep the additionally installed packages in
~/Library/R

After installing R 4.0 I therefore have
~/Library/R/3.6/library and ~/Library/R/4.0/library

On the iMac, I can switch between the two versions and R will put the appropriate folder 
in .libPaths()

On the Macbook, however, when I run R 4.0
both these folders are in .libPaths().
This does not happen when I run R 3.6.

How can this problem be solved?

Erich


From bob @end|ng |rom rud@|@  Sat Apr 25 13:58:48 2020
From: bob @end|ng |rom rud@|@ (Bob Rudis)
Date: Sat, 25 Apr 2020 07:58:48 -0400
Subject: [R-SIG-Mac] Strange library problem with 4.0
In-Reply-To: <CBB7F211-8B33-4319-8398-3006CBEB5183@neuwirth.priv.at>
References: <CBB7F211-8B33-4319-8398-3006CBEB5183@neuwirth.priv.at>
Message-ID: <CAA-FpKU7BMxG-=_3zOQy2cMH1+6M_Mvbe6SELCUyMN9o1u_zgQ@mail.gmail.com>

Can you try it with the "tar" method and see if it has the same behavior?

I use the gzip'd tar files and have multiple versions running on
multiple Macs and .libPaths() is not exhibiting that behavior.

On Sat, Apr 25, 2020 at 5:47 AM Erich Subscriptions
<erich.subs at neuwirth.priv.at> wrote:
>
> I installed R 4.0 on 2 machines, an iMac and a Macbook Pro.
> Before that, I installed RSwitch and did what the site tells to do:
> sudo pkgutil --forget org.r-project.R.el-capitan.fw.pkg \
>              --forget org.r-project.x86_64.tcltk.x11 \
>              --forget org.r-project.x86_64.texinfo \
>              --forget org.r-project.R.el-capitan.GUI.pkg
> so that the 3.6 and 4.0 can coexist.
>
> I always keep the additionally installed packages in
> ~/Library/R
>
> After installing R 4.0 I therefore have
> ~/Library/R/3.6/library and ~/Library/R/4.0/library
>
> On the iMac, I can switch between the two versions and R will put the appropriate folder
> in .libPaths()
>
> On the Macbook, however, when I run R 4.0
> both these folders are in .libPaths().
> This does not happen when I run R 3.6.
>
> How can this problem be solved?
>
> Erich
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From ESWRIGHT @end|ng |rom p|tt@edu  Sat Apr 25 17:29:14 2020
From: ESWRIGHT @end|ng |rom p|tt@edu (Wright, Erik Scott)
Date: Sat, 25 Apr 2020 15:29:14 +0000
Subject: [R-SIG-Mac] OpenMP on CRAN (Simon Urbanek)
In-Reply-To: <CAJdZCv0SSeUzKqC_KBmC5RjTWKpb5w_25-QFfzo1FBQhZqeUdQ@mail.gmail.com>
References: <CAJdZCv0SSeUzKqC_KBmC5RjTWKpb5w_25-QFfzo1FBQhZqeUdQ@mail.gmail.com>
Message-ID: <28AC4935-D222-4A6E-967F-66AC06CD1E04@pitt.edu>

I second this request.  Dropping OpenMP support in R v4.0 on Mac is unfortunate.  My R package is highly parallelized via OpenMP, and many of my end-users take advantage of the excellent speedups.  It would be much appreciated if user-level instructions could be provided for how to enable OpenMP support on the Mac.

Thanks,
Erik


> On Apr 23, 2020, at 7:08 AM, Dmitriy Selivanov <selivanov.dmitriy at gmail.com> wrote:
> 
> Hi Simon,
> 
> Just wanted follow up on this topic.
> 
> It would be very helpful if you can provide some guide on
> https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415901734&amp;sdata=qlhXuEubgD6PNmkbD%2BWQy5OI9X%2BGjxSYHMNjA%2BQHZzI%3D&amp;reserved=0 <https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415911728&amp;sdata=5XR5LJuAKu4%2B3%2FUHsWVPMlyXTLY87P6OF%2FP%2FTZt1W8Y%3D&amp;reserved=0> for those users
> (advanced?) and developers who wants to be able to use OpenMP on mac. From
> what I've understood from this mail thread the easiest way is to install R
> from homebrew as it is built with non-standard Apple toolchain.
> Apart from that you've mentioned you may consider to bundle binary  iomp
> with R installation, but "it would be on the package author to make sure
> that the way the package operates is compatible with that binary". Could
> you please elaborate on that?
> 
> I believe I'm not alone who would like to be able to use OpenMP on mac and
> "official" guidance would be very helpful.
> 
> -- 
> Regards
> Dmitriy Selivanov
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415911728&amp;sdata=yAu4MKX2Ka5yEaoq51byWJSkbL%2FpO1HvtUsI%2BQXmtJQ%3D&amp;reserved=0


From kev|nu@hey @end|ng |rom gm@||@com  Sat Apr 25 17:40:56 2020
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Sat, 25 Apr 2020 08:40:56 -0700
Subject: [R-SIG-Mac] Strange library problem with 4.0
In-Reply-To: <CAA-FpKU7BMxG-=_3zOQy2cMH1+6M_Mvbe6SELCUyMN9o1u_zgQ@mail.gmail.com>
References: <CBB7F211-8B33-4319-8398-3006CBEB5183@neuwirth.priv.at>
 <CAA-FpKU7BMxG-=_3zOQy2cMH1+6M_Mvbe6SELCUyMN9o1u_zgQ@mail.gmail.com>
Message-ID: <CAJXgQP3Z1Gbu9KYgWM+rar9sDT4xBN70sto8iosWDLv+EaCtEA@mail.gmail.com>

Can you confirm that you see this even with:

    R --vanilla -s -e "writeLines(.libPaths())"

If you don't see the issue there, the most likely culprit is something
in a .Rprofile that's causing the old library path to be used.

Kevin

On Sat, Apr 25, 2020 at 4:59 AM Bob Rudis <bob at rud.is> wrote:
>
> Can you try it with the "tar" method and see if it has the same behavior?
>
> I use the gzip'd tar files and have multiple versions running on
> multiple Macs and .libPaths() is not exhibiting that behavior.
>
> On Sat, Apr 25, 2020 at 5:47 AM Erich Subscriptions
> <erich.subs at neuwirth.priv.at> wrote:
> >
> > I installed R 4.0 on 2 machines, an iMac and a Macbook Pro.
> > Before that, I installed RSwitch and did what the site tells to do:
> > sudo pkgutil --forget org.r-project.R.el-capitan.fw.pkg \
> >              --forget org.r-project.x86_64.tcltk.x11 \
> >              --forget org.r-project.x86_64.texinfo \
> >              --forget org.r-project.R.el-capitan.GUI.pkg
> > so that the 3.6 and 4.0 can coexist.
> >
> > I always keep the additionally installed packages in
> > ~/Library/R
> >
> > After installing R 4.0 I therefore have
> > ~/Library/R/3.6/library and ~/Library/R/4.0/library
> >
> > On the iMac, I can switch between the two versions and R will put the appropriate folder
> > in .libPaths()
> >
> > On the Macbook, however, when I run R 4.0
> > both these folders are in .libPaths().
> > This does not happen when I run R 3.6.
> >
> > How can this problem be solved?
> >
> > Erich
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From kev|nu@hey @end|ng |rom gm@||@com  Sat Apr 25 18:08:26 2020
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Sat, 25 Apr 2020 09:08:26 -0700
Subject: [R-SIG-Mac] OpenMP on CRAN (Simon Urbanek)
In-Reply-To: <28AC4935-D222-4A6E-967F-66AC06CD1E04@pitt.edu>
References: <CAJdZCv0SSeUzKqC_KBmC5RjTWKpb5w_25-QFfzo1FBQhZqeUdQ@mail.gmail.com>
 <28AC4935-D222-4A6E-967F-66AC06CD1E04@pitt.edu>
Message-ID: <CAJXgQP3tbo89E7jaF-DTyfLsd56a58Hx6eQr9AJCPjfzTgrW3A@mail.gmail.com>

The following works for me on macOS 10.15.4 using Apple Clang + libomp
from LLVM 10 (via Homebrew).

Install libomp from Homebrew with:

    brew install libomp

Then, put the following in ~/.R/Makevars

    CPPFLAGS += -I/usr/local/opt/libomp/include -Xclang -fopenmp
    LDFLAGS += -L/usr/local/opt/libomp/lib -lomp

Then R will automatically enable + use OpenMP as appropriate when
installing packages from sources.

The main danger of this approach, as I understand it, is that there's
no guarantee that this will work properly (or continue to work
properly) as the Apple toolchain continues to be updated -- e.g. a new
version of macOS / Xcode could install a version of Apple Clang that
is then incompatible with the version of libomp currently in use. In
such a case, I suspect one would need to find and reinstall libomp.

In theory, this could be alleviated by ensuring all users download and
use the same version of Xcode as is being used by the macOS build
machine (Xcode 10.1), but in practice users will likely just be using
the "default" set of command line tools that comes with their version
of macOS.

Cunningham's law will hopefully ensure someone else will chime in if
I've got something wrong :-)

Best,
Kevin

On Sat, Apr 25, 2020 at 8:29 AM Wright, Erik Scott <ESWRIGHT at pitt.edu> wrote:
>
> I second this request.  Dropping OpenMP support in R v4.0 on Mac is unfortunate.  My R package is highly parallelized via OpenMP, and many of my end-users take advantage of the excellent speedups.  It would be much appreciated if user-level instructions could be provided for how to enable OpenMP support on the Mac.
>
> Thanks,
> Erik
>
>
> > On Apr 23, 2020, at 7:08 AM, Dmitriy Selivanov <selivanov.dmitriy at gmail.com> wrote:
> >
> > Hi Simon,
> >
> > Just wanted follow up on this topic.
> >
> > It would be very helpful if you can provide some guide on
> > https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415901734&amp;sdata=qlhXuEubgD6PNmkbD%2BWQy5OI9X%2BGjxSYHMNjA%2BQHZzI%3D&amp;reserved=0 <https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415911728&amp;sdata=5XR5LJuAKu4%2B3%2FUHsWVPMlyXTLY87P6OF%2FP%2FTZt1W8Y%3D&amp;reserved=0> for those users
> > (advanced?) and developers who wants to be able to use OpenMP on mac. From
> > what I've understood from this mail thread the easiest way is to install R
> > from homebrew as it is built with non-standard Apple toolchain.
> > Apart from that you've mentioned you may consider to bundle binary  iomp
> > with R installation, but "it would be on the package author to make sure
> > that the way the package operates is compatible with that binary". Could
> > you please elaborate on that?
> >
> > I believe I'm not alone who would like to be able to use OpenMP on mac and
> > "official" guidance would be very helpful.
> >
> > --
> > Regards
> > Dmitriy Selivanov
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415911728&amp;sdata=yAu4MKX2Ka5yEaoq51byWJSkbL%2FpO1HvtUsI%2BQXmtJQ%3D&amp;reserved=0
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From er|ch@@ub@ @end|ng |rom neuw|rth@pr|v@@t  Sat Apr 25 20:11:16 2020
From: er|ch@@ub@ @end|ng |rom neuw|rth@pr|v@@t (Erich Subscriptions)
Date: Sat, 25 Apr 2020 20:11:16 +0200
Subject: [R-SIG-Mac] Strange library problem with 4.0
In-Reply-To: <CAJXgQP3Z1Gbu9KYgWM+rar9sDT4xBN70sto8iosWDLv+EaCtEA@mail.gmail.com>
References: <CBB7F211-8B33-4319-8398-3006CBEB5183@neuwirth.priv.at>
 <CAA-FpKU7BMxG-=_3zOQy2cMH1+6M_Mvbe6SELCUyMN9o1u_zgQ@mail.gmail.com>
 <CAJXgQP3Z1Gbu9KYgWM+rar9sDT4xBN70sto8iosWDLv+EaCtEA@mail.gmail.com>
Message-ID: <B9519A93-2ED9-44C2-A74F-3530E8719BC5@neuwirth.priv.at>

Ahhhh

I had a .Renviron file which was the culprit.


> On 25.04.2020, at 17:40, Kevin Ushey <kevinushey at gmail.com> wrote:
> 
> R --vanilla -s -e "writeLines(.libPaths())"


	[[alternative HTML version deleted]]


From m@rc_@chw@rtz @end|ng |rom me@com  Mon Apr 27 16:07:10 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Mon, 27 Apr 2020 10:07:10 -0400
Subject: [R-SIG-Mac] MacTeX 2020 and TeX Live Utility (No Longer Included)
Message-ID: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>

Hi All,

Relevant for TeX users on macOS, as happens around this time of the year, MacTeX has been updated to use TeX Live 2020:

  http://www.tug.org/mactex/

One major change this year, as a result of Apple's requirement to now use app notarization on Catalina, is that the TeX Live Utility (TLU), as a GUI interface for updating the TeX distribution contents, is no longer included in the MacTeX distribution.

If you install MacTeX 2020, you will find a file called "MISSING APPS.pdf" in the Applications/TeX folder, that describes this, and which also affects BibDesk and cocoAspell, albeit, I have not searched for info on the latter two apps.

Based upon some searching for TLU info, I found the following issue on Github:

  https://github.com/amaxwell/tlutility/issues/85

which makes it clear that the TLU author has no confirmed plans to update the app to support notarization. This is apparently due to his essentially no longer using TeX himself, he is still running High Sierra (10.13), the cost of becoming an Apple developer in order to notarize the app and related philosophical considerations.

The TLU is otherwise available for manual download as a DMG file here:

  http://amaxwell.github.io/tlutility/

however, the DMG has not been updated since January 24, with some pending, unreleased updates, as of this writing.

It is not clear if the TLU author may, at some point, be convinced to take the steps to notarize the app, perhaps with financial support from some party (e.g. TUG), or may just orphan the app, where somebody else may move it forward or perhaps develop something entirely new to replace it.

That all being said, there are CLI commands that can be used to maintain/update the TeX distribution. These are described here:

  http://www.tug.org/texlive/pkginstall.html

and where there are essentially two commands to use:

  tlmgr update --list

which will list the pending updates, and:

  tlmgr update --all

which will install the pending updates. You will likely need to run these as an Admin (e.g. using sudo).

Since the TLU supported scheduled update checks, you could feasibly run the CLI commands in a cron job, but would otherwise need to remember to run these periodically, if you wish.

Regards,

Marc Schwartz


From e| @end|ng |rom ||@@e@NA  Mon Apr 27 16:27:08 2020
From: e| @end|ng |rom ||@@e@NA (Dr Eberhard W Lisse)
Date: Mon, 27 Apr 2020 16:27:08 +0200
Subject: [R-SIG-Mac] 
 MacTeX 2020 and TeX Live Utility (No Longer Included)
In-Reply-To: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>
References: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>
Message-ID: <a5c466fa-1b3f-2927-f339-3680c761167c@lisse.NA>

There is also the tlcockpit Java app on CTAN.

el

On 27/04/2020 16:07, Marc Schwartz via R-SIG-Mac wrote:
[...]
> One major change this year, as a result of Apple's requirement to now
> use app notarization on Catalina, is that the TeX Live Utility (TLU),
> as a GUI interface for updating the TeX distribution contents, is no
> longer included in the MacTeX distribution.
[...]


-- 
Dr. Eberhard W. Lisse   \         /       Obstetrician & Gynaecologist 
el at lisse.NA             / *      |  Telephone: +264 81 124 6733 (cell)
PO Box 8421 Bachbrecht  \      /  If this email is signed with GPG/PGP
10007, Namibia           ;____/ Sect 20 of Act No. 4 of 2019 may apply


From m@rc_@chw@rtz @end|ng |rom me@com  Mon Apr 27 17:44:34 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Mon, 27 Apr 2020 11:44:34 -0400
Subject: [R-SIG-Mac] 
 MacTeX 2020 and TeX Live Utility (No Longer Included)
In-Reply-To: <a5c466fa-1b3f-2927-f339-3680c761167c@lisse.NA>
References: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>
 <a5c466fa-1b3f-2927-f339-3680c761167c@lisse.NA>
Message-ID: <BA6FC6E6-50DF-46C7-AE72-EF7299993313@me.com>

Thanks for the heads up on that. 

I confirmed that tlcockpit is included in the MacTeX 2020 distribution in /Library/TeX/texbin, as a symlink to the target shell script, and it is actively maintained.

Surprising that the missing apps PDF file did not mention that as an alternative GUI based manager that is immediately useable. 

Regards,

Marc


> On Apr 27, 2020, at 10:27 AM, Dr Eberhard W Lisse <el at lisse.NA> wrote:
> 
> There is also the tlcockpit Java app on CTAN.
> 
> el
> 
> On 27/04/2020 16:07, Marc Schwartz via R-SIG-Mac wrote:
> [...]
>> One major change this year, as a result of Apple's requirement to now
>> use app notarization on Catalina, is that the TeX Live Utility (TLU),
>> as a GUI interface for updating the TeX distribution contents, is no
>> longer included in the MacTeX distribution.
> [...]
> 
> 
> -- 
> Dr. Eberhard W. Lisse   \         /       Obstetrician & Gynaecologist 
> el at lisse.NA             / *      |  Telephone: +264 81 124 6733 (cell)
> PO Box 8421 Bachbrecht  \      /  If this email is signed with GPG/PGP
> 10007, Namibia           ;____/ Sect 20 of Act No. 4 of 2019 may apply


From R@|ner @end|ng |rom krug@@de  Tue Apr 28 10:43:37 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Tue, 28 Apr 2020 10:43:37 +0200
Subject: [R-SIG-Mac] 
 MacTeX 2020 and TeX Live Utility (No Longer Included)
In-Reply-To: <BA6FC6E6-50DF-46C7-AE72-EF7299993313@me.com>
References: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>
 <a5c466fa-1b3f-2927-f339-3680c761167c@lisse.NA>
 <BA6FC6E6-50DF-46C7-AE72-EF7299993313@me.com>
Message-ID: <82554E68-5238-4ADE-B7DB-0686A1E13A3C@krugs.de>

I just checked - I still have them. I updated (using hombrew cask) to the new version of MacTeX, ant all programs are still there. And TLU still works.

Rainer


> On 27 Apr 2020, at 17:44, Marc Schwartz via R-SIG-Mac <r-sig-mac at r-project.org> wrote:
> 
> Thanks for the heads up on that. 
> 
> I confirmed that tlcockpit is included in the MacTeX 2020 distribution in /Library/TeX/texbin, as a symlink to the target shell script, and it is actively maintained.
> 
> Surprising that the missing apps PDF file did not mention that as an alternative GUI based manager that is immediately useable. 
> 
> Regards,
> 
> Marc
> 
> 
>> On Apr 27, 2020, at 10:27 AM, Dr Eberhard W Lisse <el at lisse.NA> wrote:
>> 
>> There is also the tlcockpit Java app on CTAN.
>> 
>> el
>> 
>> On 27/04/2020 16:07, Marc Schwartz via R-SIG-Mac wrote:
>> [...]
>>> One major change this year, as a result of Apple's requirement to now
>>> use app notarization on Catalina, is that the TeX Live Utility (TLU),
>>> as a GUI interface for updating the TeX distribution contents, is no
>>> longer included in the MacTeX distribution.
>> [...]
>> 
>> 
>> -- 
>> Dr. Eberhard W. Lisse   \         /       Obstetrician & Gynaecologist 
>> el at lisse.NA             / *      |  Telephone: +264 81 124 6733 (cell)
>> PO Box 8421 Bachbrecht  \      /  If this email is signed with GPG/PGP
>> 10007, Namibia           ;____/ Sect 20 of Act No. 4 of 2019 may apply
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From R@|ner @end|ng |rom krug@@de  Tue Apr 28 10:52:56 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Tue, 28 Apr 2020 10:52:56 +0200
Subject: [R-SIG-Mac] 
 MacTeX 2020 and TeX Live Utility (No Longer Included)
In-Reply-To: <82554E68-5238-4ADE-B7DB-0686A1E13A3C@krugs.de>
References: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>
 <a5c466fa-1b3f-2927-f339-3680c761167c@lisse.NA>
 <BA6FC6E6-50DF-46C7-AE72-EF7299993313@me.com>
 <82554E68-5238-4ADE-B7DB-0686A1E13A3C@krugs.de>
Message-ID: <F980A23B-BB32-467E-BEB1-B931A0550CC5@krugs.de>

You know why I hate java? Here it comes:


```
rof-Dumbledore:tlcockpit rainerkrug$ tlcockpit
Graphics Device initialization failed for :  es2, sw
Error initializing QuantumRenderer: no suitable pipeline found
java.lang.RuntimeException: java.lang.RuntimeException: Error initializing QuantumRenderer: no suitable pipeline found
	at com.sun.javafx.tk.quantum.QuantumRenderer.getInstance(QuantumRenderer.java:280)
	at com.sun.javafx.tk.quantum.QuantumToolkit.init(QuantumToolkit.java:244)
	at com.sun.javafx.tk.Toolkit.getToolkit(Toolkit.java:260)
	at com.sun.javafx.application.PlatformImpl.startup(PlatformImpl.java:267)
	at com.sun.javafx.application.PlatformImpl.startup(PlatformImpl.java:158)
	at com.sun.javafx.application.LauncherImpl.startToolkit(LauncherImpl.java:658)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:678)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:195)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.RuntimeException: Error initializing QuantumRenderer: no suitable pipeline found
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:94)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	... 1 more
Exception in thread "main" java.lang.RuntimeException: No toolkit found
	at com.sun.javafx.tk.Toolkit.getToolkit(Toolkit.java:272)
	at com.sun.javafx.application.PlatformImpl.startup(PlatformImpl.java:267)
	at com.sun.javafx.application.PlatformImpl.startup(PlatformImpl.java:158)
	at com.sun.javafx.application.LauncherImpl.startToolkit(LauncherImpl.java:658)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:678)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:195)
	at java.base/java.lang.Thread.run(Thread.java:832)
Prof-Dumbledore:tlcockpit rainerkrug$
```

Cheers,

Rainer


> On 28 Apr 2020, at 10:43, Rainer M Krug <Rainer at krugs.de> wrote:
> 
> I just checked - I still have them. I updated (using hombrew cask) to the new version of MacTeX, ant all programs are still there. And TLU still works.
> 
> Rainer
> 
> 
>> On 27 Apr 2020, at 17:44, Marc Schwartz via R-SIG-Mac <r-sig-mac at r-project.org <mailto:r-sig-mac at r-project.org>> wrote:
>> 
>> Thanks for the heads up on that. 
>> 
>> I confirmed that tlcockpit is included in the MacTeX 2020 distribution in /Library/TeX/texbin, as a symlink to the target shell script, and it is actively maintained.
>> 
>> Surprising that the missing apps PDF file did not mention that as an alternative GUI based manager that is immediately useable. 
>> 
>> Regards,
>> 
>> Marc
>> 
>> 
>>> On Apr 27, 2020, at 10:27 AM, Dr Eberhard W Lisse <el at lisse.NA <mailto:el at lisse.NA>> wrote:
>>> 
>>> There is also the tlcockpit Java app on CTAN.
>>> 
>>> el
>>> 
>>> On 27/04/2020 16:07, Marc Schwartz via R-SIG-Mac wrote:
>>> [...]
>>>> One major change this year, as a result of Apple's requirement to now
>>>> use app notarization on Catalina, is that the TeX Live Utility (TLU),
>>>> as a GUI interface for updating the TeX distribution contents, is no
>>>> longer included in the MacTeX distribution.
>>> [...]
>>> 
>>> 
>>> -- 
>>> Dr. Eberhard W. Lisse   \         /       Obstetrician & Gynaecologist 
>>> el at lisse.NA <mailto:el at lisse.NA>             / *      |  Telephone: +264 81 124 6733 (cell)
>>> PO Box 8421 Bachbrecht  \      /  If this email is signed with GPG/PGP
>>> 10007, Namibia           ;____/ Sect 20 of Act No. 4 of 2019 may apply
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org <mailto:R-SIG-Mac at r-project.org>
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:	+41 (0)44 635 47 64
> Cell:       	+41 (0)78 630 66 57
> email: ? ? ?Rainer.Krug at uzh.ch <mailto:Rainer.Krug at uzh.ch>
> 		Rainer at krugs.de <mailto:Rainer at krugs.de>
> Skype:     RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From e| @end|ng |rom ||@@e@NA  Tue Apr 28 13:47:34 2020
From: e| @end|ng |rom ||@@e@NA (Dr Eberhard W Lisse)
Date: Tue, 28 Apr 2020 13:47:34 +0200
Subject: [R-SIG-Mac] 
 MacTeX 2020 and TeX Live Utility (No Longer Included)
In-Reply-To: <F980A23B-BB32-467E-BEB1-B931A0550CC5@krugs.de>
References: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>
 <a5c466fa-1b3f-2927-f339-3680c761167c@lisse.NA>
 <BA6FC6E6-50DF-46C7-AE72-EF7299993313@me.com>
 <82554E68-5238-4ADE-B7DB-0686A1E13A3C@krugs.de>
 <F980A23B-BB32-467E-BEB1-B931A0550CC5@krugs.de>
Message-ID: <d70e7dc5-a954-e66f-6d25-771b792d1fbf@lisse.NA>

Rainer

Put

function tlcockpit
{
   case "$(java -version 2>&1 | head -1)" in
	 *"1.8"*) jar="tlcockpit-jdk8.jar" ;;
	 *) jar="tlcockpit.jar" ;;
   esac
   exec java -jar $(kpsewhich --progname="tlcockpit" --format=texmfscripts "$jar") 2>&1 >/dev/null &
}


into ~/.aliases or whatever is sourced on login :-)-O. 

You can also use something like Platypus to make a clickable App out of
the shell script which resides in

	realpath $(which tlcockpit)

and even use TeX Live Utility's icns file :-)-O

el

On 28/04/2020 10:52, Rainer M Krug wrote:
> You know why I hate java? Here it comes:
> 
> 
[...]
> java.lang.RuntimeException: java.lang.RuntimeException: Error
> 		initializing QuantumRenderer: no suitable pipeline found
[...]
> 
> Cheers,
> 
> Rainer


From m@rc_@chw@rtz @end|ng |rom me@com  Tue Apr 28 14:06:33 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Tue, 28 Apr 2020 08:06:33 -0400
Subject: [R-SIG-Mac] 
 MacTeX 2020 and TeX Live Utility (No Longer Included)
In-Reply-To: <82554E68-5238-4ADE-B7DB-0686A1E13A3C@krugs.de>
References: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>
 <a5c466fa-1b3f-2927-f339-3680c761167c@lisse.NA>
 <BA6FC6E6-50DF-46C7-AE72-EF7299993313@me.com>
 <82554E68-5238-4ADE-B7DB-0686A1E13A3C@krugs.de>
Message-ID: <7797FD71-E659-4715-A1F5-C79A0189769D@me.com>

Rainer,

Are you running on Catalina?

I am not using homebrew, but if you are running on Catalina, then the homebrew folks would have had to address the notarization issue in their packaging independently.

Regards,

Marc


> On Apr 28, 2020, at 4:43 AM, Rainer M Krug <Rainer at krugs.de> wrote:
> 
> I just checked - I still have them. I updated (using hombrew cask) to the new version of MacTeX, ant all programs are still there. And TLU still works.
> 
> Rainer
> 
> 
>> On 27 Apr 2020, at 17:44, Marc Schwartz via R-SIG-Mac <r-sig-mac at r-project.org <mailto:r-sig-mac at r-project.org>> wrote:
>> 
>> Thanks for the heads up on that. 
>> 
>> I confirmed that tlcockpit is included in the MacTeX 2020 distribution in /Library/TeX/texbin, as a symlink to the target shell script, and it is actively maintained.
>> 
>> Surprising that the missing apps PDF file did not mention that as an alternative GUI based manager that is immediately useable. 
>> 
>> Regards,
>> 
>> Marc
>> 
>> 
>>> On Apr 27, 2020, at 10:27 AM, Dr Eberhard W Lisse <el at lisse.NA <mailto:el at lisse.NA>> wrote:
>>> 
>>> There is also the tlcockpit Java app on CTAN.
>>> 
>>> el
>>> 
>>> On 27/04/2020 16:07, Marc Schwartz via R-SIG-Mac wrote:
>>> [...]
>>>> One major change this year, as a result of Apple's requirement to now
>>>> use app notarization on Catalina, is that the TeX Live Utility (TLU),
>>>> as a GUI interface for updating the TeX distribution contents, is no
>>>> longer included in the MacTeX distribution.
>>> [...]
>>> 
>>> 
>>> -- 
>>> Dr. Eberhard W. Lisse   \         /       Obstetrician & Gynaecologist 
>>> el at lisse.NA <mailto:el at lisse.NA>             / *      |  Telephone: +264 81 124 6733 (cell)
>>> PO Box 8421 Bachbrecht  \      /  If this email is signed with GPG/PGP
>>> 10007, Namibia           ;____/ Sect 20 of Act No. 4 of 2019 may apply
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org <mailto:R-SIG-Mac at r-project.org>
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:	+41 (0)44 635 47 64
> Cell:       	+41 (0)78 630 66 57
> email: ? ? ?Rainer.Krug at uzh.ch <mailto:Rainer.Krug at uzh.ch>
> 		Rainer at krugs.de <mailto:Rainer at krugs.de>
> Skype:     RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 


	[[alternative HTML version deleted]]


From R@|ner @end|ng |rom krug@@de  Tue Apr 28 14:45:50 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Tue, 28 Apr 2020 14:45:50 +0200
Subject: [R-SIG-Mac] 
 MacTeX 2020 and TeX Live Utility (No Longer Included)
In-Reply-To: <7797FD71-E659-4715-A1F5-C79A0189769D@me.com>
References: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>
 <a5c466fa-1b3f-2927-f339-3680c761167c@lisse.NA>
 <BA6FC6E6-50DF-46C7-AE72-EF7299993313@me.com>
 <82554E68-5238-4ADE-B7DB-0686A1E13A3C@krugs.de>
 <7797FD71-E659-4715-A1F5-C79A0189769D@me.com>
Message-ID: <48346D33-C7C6-418C-A46B-184395FF4F20@krugs.de>

Yes, I am using Catalena.

This is going way put of R territory?

But if an app is not notarised, it will prmp[t you if you want to run it. If you say yes, it will never ask you again.

Just to be clear - homebrew (in this case cask) is just installing the official mactex binary. The other programs are likely left overs from the older versions of mactex. But it is still working.

Rainer




Cheers,

Rainer

> On 28 Apr 2020, at 14:06, Marc Schwartz <marc_schwartz at me.com> wrote:
> 
> Rainer,
> 
> Are you running on Catalina?
> 
> I am not using homebrew, but if you are running on Catalina, then the homebrew folks would have had to address the notarization issue in their packaging independently.
> 
> Regards,
> 
> Marc
> 
> 
>> On Apr 28, 2020, at 4:43 AM, Rainer M Krug <Rainer at krugs.de <mailto:Rainer at krugs.de>> wrote:
>> 
>> I just checked - I still have them. I updated (using hombrew cask) to the new version of MacTeX, ant all programs are still there. And TLU still works.
>> 
>> Rainer
>> 
>> 
>>> On 27 Apr 2020, at 17:44, Marc Schwartz via R-SIG-Mac <r-sig-mac at r-project.org <mailto:r-sig-mac at r-project.org>> wrote:
>>> 
>>> Thanks for the heads up on that. 
>>> 
>>> I confirmed that tlcockpit is included in the MacTeX 2020 distribution in /Library/TeX/texbin, as a symlink to the target shell script, and it is actively maintained.
>>> 
>>> Surprising that the missing apps PDF file did not mention that as an alternative GUI based manager that is immediately useable. 
>>> 
>>> Regards,
>>> 
>>> Marc
>>> 
>>> 
>>>> On Apr 27, 2020, at 10:27 AM, Dr Eberhard W Lisse <el at lisse.NA <mailto:el at lisse.NA>> wrote:
>>>> 
>>>> There is also the tlcockpit Java app on CTAN.
>>>> 
>>>> el
>>>> 
>>>> On 27/04/2020 16:07, Marc Schwartz via R-SIG-Mac wrote:
>>>> [...]
>>>>> One major change this year, as a result of Apple's requirement to now
>>>>> use app notarization on Catalina, is that the TeX Live Utility (TLU),
>>>>> as a GUI interface for updating the TeX distribution contents, is no
>>>>> longer included in the MacTeX distribution.
>>>> [...]
>>>> 
>>>> 
>>>> -- 
>>>> Dr. Eberhard W. Lisse   \         /       Obstetrician & Gynaecologist 
>>>> el at lisse.NA <mailto:el at lisse.NA>             / *      |  Telephone: +264 81 124 6733 (cell)
>>>> PO Box 8421 Bachbrecht  \      /  If this email is signed with GPG/PGP
>>>> 10007, Namibia           ;____/ Sect 20 of Act No. 4 of 2019 may apply
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org <mailto:R-SIG-Mac at r-project.org>
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac <https://stat.ethz.ch/mailman/listinfo/r-sig-mac>
>> 
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> 
>> Orcid ID: 0000-0002-7490-0066
>> 
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> 
>> Office:	+41 (0)44 635 47 64
>> Cell:       	+41 (0)78 630 66 57
>> email: ? ? ?Rainer.Krug at uzh.ch <mailto:Rainer.Krug at uzh.ch>
>> 		Rainer at krugs.de <mailto:Rainer at krugs.de>
>> Skype:     RMkrug
>> 
>> PGP: 0x0F52F982
>> 
>> 
>> 
> 

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From @te|@nML @end|ng |rom co||oc@t|on@@de  Tue Apr 28 15:16:00 2020
From: @te|@nML @end|ng |rom co||oc@t|on@@de (Stefan Evert)
Date: Tue, 28 Apr 2020 15:16:00 +0200
Subject: [R-SIG-Mac] 
 MacTeX 2020 and TeX Live Utility (No Longer Included)
In-Reply-To: <7797FD71-E659-4715-A1F5-C79A0189769D@me.com>
References: <D09D7C24-EACD-4DBD-9A2E-7125EA7663C9@me.com>
 <a5c466fa-1b3f-2927-f339-3680c761167c@lisse.NA>
 <BA6FC6E6-50DF-46C7-AE72-EF7299993313@me.com>
 <82554E68-5238-4ADE-B7DB-0686A1E13A3C@krugs.de>
 <7797FD71-E659-4715-A1F5-C79A0189769D@me.com>
Message-ID: <C499E59D-C175-4E3B-AFA5-26380334F341@collocations.de>



> On 28 Apr 2020, at 14:06, Marc Schwartz via R-SIG-Mac <r-sig-mac at r-project.org> wrote:
> 
> I am not using homebrew, but if you are running on Catalina, then the homebrew folks would have had to address the notarization issue in their packaging independently.

TLU and the other programs are still there from the previous version of MacTeX ? they aren't deleted by installing the new distribution and will continue to work.  So the instructions for missing apps only apply to a fresh install of MacTeX 2020.

Of course, after upgrading to Catalina, I had to tell the system once to run these programs even though they're not notarized.

Best,
Stefan

From b|e@ht @end|ng |rom gm@||@com  Tue Apr 28 17:16:15 2020
From: b|e@ht @end|ng |rom gm@||@com (Barry M. Lesht)
Date: Tue, 28 Apr 2020 10:16:15 -0500
Subject: [R-SIG-Mac] R hanging when attempting copy/paste
Message-ID: <CACgVrFdK8Nuv6MvQKJY_867JcuGivXf_+Pt8akKi9AV1yyjdiQ@mail.gmail.com>

Often, but not always, I find that R hangs when I try to copy/paste from
one edit window to another.  I have to "Force Quit" and relaunch R twice
(the second time after doing a 'normal' close after the first relauch)
before I can continue working.  I'm running R3.6.3 on a McBookPro under OS
10.14.6 (Mojave).  I'm wondering if this is a known problem and, if so,
what the fix might be.

	[[alternative HTML version deleted]]


From @e||v@nov@dm|tr|y @end|ng |rom gm@||@com  Wed Apr 29 07:51:26 2020
From: @e||v@nov@dm|tr|y @end|ng |rom gm@||@com (Dmitriy Selivanov)
Date: Wed, 29 Apr 2020 09:51:26 +0400
Subject: [R-SIG-Mac] OpenMP on CRAN (Simon Urbanek)
In-Reply-To: <CAJXgQP3tbo89E7jaF-DTyfLsd56a58Hx6eQr9AJCPjfzTgrW3A@mail.gmail.com>
References: <CAJdZCv0SSeUzKqC_KBmC5RjTWKpb5w_25-QFfzo1FBQhZqeUdQ@mail.gmail.com>
 <28AC4935-D222-4A6E-967F-66AC06CD1E04@pitt.edu>
 <CAJXgQP3tbo89E7jaF-DTyfLsd56a58Hx6eQr9AJCPjfzTgrW3A@mail.gmail.com>
Message-ID: <CAJdZCv2R9iz7fpHiRD1j=tPF61m+tP=Ju-pf2rCdUs7bqBafQw@mail.gmail.com>

Thanks, Kevin, I can confirm suggested setup works fine so far. Thank you!

I understand it, is that there's
> no guarantee that this will work properly (or continue to work
> properly) as the Apple toolchain continues to be updated -- e.g. a new
> version of macOS / Xcode could install a version of Apple Clang that
> is then incompatible with the version of libomp currently in use. In
> such a case, I suspect one would need to find and reinstall libomp.


Thats understandable.

On Sat, Apr 25, 2020 at 8:09 PM Kevin Ushey <kevinushey at gmail.com> wrote:

> The following works for me on macOS 10.15.4 using Apple Clang + libomp
> from LLVM 10 (via Homebrew).
>
> Install libomp from Homebrew with:
>
>     brew install libomp
>
> Then, put the following in ~/.R/Makevars
>
>     CPPFLAGS += -I/usr/local/opt/libomp/include -Xclang -fopenmp
>     LDFLAGS += -L/usr/local/opt/libomp/lib -lomp
>
> Then R will automatically enable + use OpenMP as appropriate when
> installing packages from sources.
>
> The main danger of this approach, as I understand it, is that there's
> no guarantee that this will work properly (or continue to work
> properly) as the Apple toolchain continues to be updated -- e.g. a new
> version of macOS / Xcode could install a version of Apple Clang that
> is then incompatible with the version of libomp currently in use. In
> such a case, I suspect one would need to find and reinstall libomp.
>
> In theory, this could be alleviated by ensuring all users download and
> use the same version of Xcode as is being used by the macOS build
> machine (Xcode 10.1), but in practice users will likely just be using
> the "default" set of command line tools that comes with their version
> of macOS.
>
> Cunningham's law will hopefully ensure someone else will chime in if
> I've got something wrong :-)
>
> Best,
> Kevin
>
> On Sat, Apr 25, 2020 at 8:29 AM Wright, Erik Scott <ESWRIGHT at pitt.edu>
> wrote:
> >
> > I second this request.  Dropping OpenMP support in R v4.0 on Mac is
> unfortunate.  My R package is highly parallelized via OpenMP, and many of
> my end-users take advantage of the excellent speedups.  It would be much
> appreciated if user-level instructions could be provided for how to enable
> OpenMP support on the Mac.
> >
> > Thanks,
> > Erik
> >
> >
> > > On Apr 23, 2020, at 7:08 AM, Dmitriy Selivanov <
> selivanov.dmitriy at gmail.com> wrote:
> > >
> > > Hi Simon,
> > >
> > > Just wanted follow up on this topic.
> > >
> > > It would be very helpful if you can provide some guide on
> > >
> https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415901734&amp;sdata=qlhXuEubgD6PNmkbD%2BWQy5OI9X%2BGjxSYHMNjA%2BQHZzI%3D&amp;reserved=0
> <
> https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415911728&amp;sdata=5XR5LJuAKu4%2B3%2FUHsWVPMlyXTLY87P6OF%2FP%2FTZt1W8Y%3D&amp;reserved=0>
> for those users
> > > (advanced?) and developers who wants to be able to use OpenMP on mac.
> From
> > > what I've understood from this mail thread the easiest way is to
> install R
> > > from homebrew as it is built with non-standard Apple toolchain.
> > > Apart from that you've mentioned you may consider to bundle binary
> iomp
> > > with R installation, but "it would be on the package author to make
> sure
> > > that the way the package operates is compatible with that binary".
> Could
> > > you please elaborate on that?
> > >
> > > I believe I'm not alone who would like to be able to use OpenMP on mac
> and
> > > "official" guidance would be very helpful.
> > >
> > > --
> > > Regards
> > > Dmitriy Selivanov
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > _______________________________________________
> > > R-SIG-Mac mailing list
> > > R-SIG-Mac at r-project.org
> > >
> https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415911728&amp;sdata=yAu4MKX2Ka5yEaoq51byWJSkbL%2FpO1HvtUsI%2BQXmtJQ%3D&amp;reserved=0
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


-- 
Regards
Dmitriy Selivanov

	[[alternative HTML version deleted]]


From er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t  Sun Apr 26 16:08:41 2020
From: er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t (Erich Neuwirth)
Date: Sun, 26 Apr 2020 16:08:41 +0200
Subject: [R-SIG-Mac] openmp
Message-ID: <3688CC71-BCF5-4267-9FFD-788DD391D55B@univie.ac.at>

Since we do not have openmp support in R 4.0
is there (or can I easily produce)
a list of packages which either
depend on openmp or
make use of openmp to improve performance?

Erich


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 699 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200426/1932a670/attachment-0001.sig>

From jb@t@n|@ @end|ng |rom gm@||@com  Wed Apr 29 08:18:40 2020
From: jb@t@n|@ @end|ng |rom gm@||@com (jean benoit TANIS)
Date: Wed, 29 Apr 2020 07:18:40 +0100
Subject: [R-SIG-Mac] Graphic problem Rcmdr
Message-ID: <FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>

Hi,

I recently downloaded 4.0.0 and the Rcmdr package with dependencies (I used to work on R2.6 on Windows). 

When I load the Rcmdr package, this is what I obtain - see picture (the drop down menu does not display). 

I manage to have access to the drop-down menu only once despite 20 or so attempts of closing and reopening R. 

I have tried to:
- turn-off nap-app => same issue 
- uninstall R and rebook and start again => same issue 
- uninstall XQuartz and reboot and start again => same issue 

For more information about my system, please find the pictures below 




Did you encounter this problem before ? Is there any way you could help me solving it ? 


Thank you very much for your help,

Best wishes,


JB 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200429/da424c3f/attachment-0001.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Snip20200428_1.png
Type: image/png
Size: 629275 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200429/da424c3f/attachment-0001.png>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 7D8214F7-97BD-45F0-A21F-9A5333AF2C94.tiff
Type: image/tiff
Size: 100668 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200429/da424c3f/attachment-0002.tiff>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 28E41AFC-0091-4F73-8A48-D9B8D33D341D.tiff
Type: image/tiff
Size: 137178 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20200429/da424c3f/attachment-0003.tiff>

From e| @end|ng |rom ||@@e@NA  Wed Apr 29 14:54:00 2020
From: e| @end|ng |rom ||@@e@NA (Dr Eberhard W Lisse)
Date: Wed, 29 Apr 2020 14:54:00 +0200
Subject: [R-SIG-Mac] Graphic problem Rcmdr
In-Reply-To: <FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
References: <FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
Message-ID: <852965c9-f775-14ac-a812-890e9059f935@lisse.NA>

Use Rstudio.

el

On 29/04/2020 08:18, jean benoit TANIS wrote:
> Hi,
> 
> I recently downloaded 4.0.0 and the Rcmdr package with dependencies (I
> used to work on R2.6 on Windows).
> 
> When I load the Rcmdr package, this is what I obtain - see picture
> (the drop down menu does not display).
> 
> I manage to have access to the drop-down menu only once despite 20 or
> so attempts of closing and reopening R.
> 
> I have tried to:
> - turn-off nap-app => same issue 
> - uninstall R and rebook and start again => same issue 
> - uninstall XQuartz and reboot and start again => same issue 
> 
> For more information about my system, please find the pictures below 
> 
> PastedGraphic-1.tiff
> PastedGraphic-2.tiff
> 
> Did you encounter this problem before ?  Is there any way you could
> help me solving it ?
> 
> 
> Thank you very much for your help,
> 
> Best wishes,
> 
> 
> JB 
> 
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 

-- 
Dr. Eberhard W. Lisse   \         /       Obstetrician & Gynaecologist 
el at lisse.NA             / *      |  Telephone: +264 81 124 6733 (cell)
PO Box 8421 Bachbrecht  \      /  If this email is signed with GPG/PGP
10007, Namibia           ;____/ Sect 20 of Act No. 4 of 2019 may apply


From j|ox @end|ng |rom mcm@@ter@c@  Wed Apr 29 15:07:11 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (Fox, John)
Date: Wed, 29 Apr 2020 13:07:11 +0000
Subject: [R-SIG-Mac] Graphic problem Rcmdr
In-Reply-To: <28390_1588151379_03T99YvZ025704_FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
References: <28390_1588151379_03T99YvZ025704_FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
Message-ID: <D054A608-A1E1-431C-95B8-7DD0D3AC9B43@mcmaster.ca>

Dear JB,

We corresponded privately about this problem, and I suggested that you post a message to the R-SIG-Mac list when I was unable to help you solve it. I don't experience the problem on a Mac similar to yours, but running macOS Catalina, and no one else to my knowledge has reported a similar problem (with blank menus).

I do have one additional suggestion: I assume that you're running the Rcmdr under the standard R.app GUI. Try running R in a Terminal session. That is open the Mac Terminal, type R  at the % command prompt and then library(Rcmdr) at the R > prompt.

Perhaps others will think of additional suggestions.

Best,
 John

> On Apr 29, 2020, at 2:18 AM, jean benoit TANIS <jb.tanis at gmail.com> wrote:
> 
> Hi,
> 
> I recently downloaded 4.0.0 and the Rcmdr package with dependencies (I used to work on R2.6 on Windows). 
> 
> When I load the Rcmdr package, this is what I obtain - see picture (the drop down menu does not display). <Snip20200428_1.png>
> 
> I manage to have access to the drop-down menu only once despite 20 or so attempts of closing and reopening R. 
> 
> I have tried to:
> - turn-off nap-app => same issue 
> - uninstall R and rebook and start again => same issue 
> - uninstall XQuartz and reboot and start again => same issue 
> 
> For more information about my system, please find the pictures below 
> 
> <7D8214F7-97BD-45F0-A21F-9A5333AF2C94.tiff>
> <28E41AFC-0091-4F73-8A48-D9B8D33D341D.tiff>
> 
> Did you encounter this problem before ? Is there any way you could help me solving it ? 
> 
> 
> Thank you very much for your help,
> 
> Best wishes,
> 
> 
> JB 
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From er|cjkort @end|ng |rom gm@||@com  Wed Apr 29 16:05:13 2020
From: er|cjkort @end|ng |rom gm@||@com (Eric K)
Date: Wed, 29 Apr 2020 10:05:13 -0400
Subject: [R-SIG-Mac] fatal error: 'stdio.h' file not found
Message-ID: <CAC+MLCopLKLafrV+dpJP4dmj7S7LasVN3h8stM1NJTSAwVW38w@mail.gmail.com>

Running R 3.6 has been working fine. I just upgraded to R 4.0 and I cannot
build packages from source. I have tried the following:

1. Installed R 4.0 binary on my mac (macOS 10.14.6). Installation went
fine, but when I try to build packages from source I get errors like this:

* installing *source* package ?MASS? ...
** package ?MASS? successfully unpacked and MD5 sums checked
** using staged installation
** libs
clang -mmacosx-version-min=10.13
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
-I/usr/local/include   -fPIC  -Wall -g -O2  -c MASS.c -o MASS.o
MASS.c:18:10: fatal error: 'stdlib.h' file not found
#include <stdlib.h>

Indeed, stdlib.h is not in /usr/local/include.

2. So I installed Command_Line_Tools_for_Xcode_11.3.1.dmg, but that did not
fix the problem

3. So I installed Xcode 11.3.1 itself. That did not fix the problem.

4. For good measure, I re-ran xcode-select --install

5. Googling suggested installing /Library/Developer/CommandLineTools/
Packages/macOS_SDK_headers_for_macOS_10.14.pkg, but that package is not on
my computer.

6. I tried building R 4.0 from source with this config.site:

CC=clang
OBJC=$CC
FC=/usr/local/gfortran/bin/gfortran
CXX=clang++

configure went ok, but then the build failed with:

trying to compile and link a JNI program
detected JNI cpp flags    : -I$(JAVA_HOME)/include
-I$(JAVA_HOME)/include/darwin
detected JNI linker flags : -L$(JAVA_HOME)/lib/server -ljvm
clang -I"/Users/Eric.Kort/build/R-4.0.0/include" -DNDEBUG
-I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include
-I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/darwin
 -I/usr/local/include   -fPIC  -g -O2  -c conftest.c -o conftest.o
In file included from conftest.c:1:
/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/jni.h:39:10:
fatal error: 'stdio.h' file not found
#include <stdio.h>

Can anyone spot what I am doing wrong? Thank you!

-Eric

	[[alternative HTML version deleted]]


From e| @end|ng |rom ||@@e@NA  Wed Apr 29 16:11:58 2020
From: e| @end|ng |rom ||@@e@NA (Dr Eberhard W Lisse)
Date: Wed, 29 Apr 2020 16:11:58 +0200
Subject: [R-SIG-Mac] 4.0.0
In-Reply-To: <CAC+MLCopLKLafrV+dpJP4dmj7S7LasVN3h8stM1NJTSAwVW38w@mail.gmail.com>
References: <CAC+MLCopLKLafrV+dpJP4dmj7S7LasVN3h8stM1NJTSAwVW38w@mail.gmail.com>
Message-ID: <20a08e84-05fb-fa6e-0020-65dadb486d06@lisse.NA>

For all it is worth,

homebrew upgraded R to 4.0.0 on Catalina and I did notice that homebrew
asked for an XCode Command Line Tools upgrade

I then sourced as usual my package.R which installs the ones I use, and
it did install a number of packages from source (which I assusme is
becasue they haven't yet loaded as binary packages).

No drama whatsoever. In particular a complicated :yX report with knitR 
produces the expected result :-)-O

el

On 29/04/2020 16:05, Eric K wrote:
> Running R 3.6 has been working fine. I just upgraded to R 4.0 and I cannot
> build packages from source. I have tried the following:
> 
> 1. Installed R 4.0 binary on my mac (macOS 10.14.6). Installation went
> fine, but when I try to build packages from source I get errors like this:
[...]


From pd@|gd @end|ng |rom gm@||@com  Wed Apr 29 17:14:26 2020
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Wed, 29 Apr 2020 17:14:26 +0200
Subject: [R-SIG-Mac] Graphic problem Rcmdr
In-Reply-To: <D054A608-A1E1-431C-95B8-7DD0D3AC9B43@mcmaster.ca>
References: <28390_1588151379_03T99YvZ025704_FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
 <D054A608-A1E1-431C-95B8-7DD0D3AC9B43@mcmaster.ca>
Message-ID: <07F8712E-4BD6-4DA9-9D61-32E29DCEF91B@gmail.com>

Also not seen by me on Mojave (admittedly 4.0.0 beta, which I can't be bothered to upgrade at this point). Works both from R.app and Terminal, and even from RStudio.

One thought is a missing font, but same font is used elsewhere is it not?

You could try playing with generic Tcl/Tk via the tcltk package and see if you can reproduce the problem in a simpler setting (perhaps try the package demos?)

-pd

> On 29 Apr 2020, at 15:07 , Fox, John <jfox at mcmaster.ca> wrote:
> 
> Dear JB,
> 
> We corresponded privately about this problem, and I suggested that you post a message to the R-SIG-Mac list when I was unable to help you solve it. I don't experience the problem on a Mac similar to yours, but running macOS Catalina, and no one else to my knowledge has reported a similar problem (with blank menus).
> 
> I do have one additional suggestion: I assume that you're running the Rcmdr under the standard R.app GUI. Try running R in a Terminal session. That is open the Mac Terminal, type R  at the % command prompt and then library(Rcmdr) at the R > prompt.
> 
> Perhaps others will think of additional suggestions.
> 
> Best,
> John
> 
>> On Apr 29, 2020, at 2:18 AM, jean benoit TANIS <jb.tanis at gmail.com> wrote:
>> 
>> Hi,
>> 
>> I recently downloaded 4.0.0 and the Rcmdr package with dependencies (I used to work on R2.6 on Windows). 
>> 
>> When I load the Rcmdr package, this is what I obtain - see picture (the drop down menu does not display). <Snip20200428_1.png>
>> 
>> I manage to have access to the drop-down menu only once despite 20 or so attempts of closing and reopening R. 
>> 
>> I have tried to:
>> - turn-off nap-app => same issue 
>> - uninstall R and rebook and start again => same issue 
>> - uninstall XQuartz and reboot and start again => same issue 
>> 
>> For more information about my system, please find the pictures below 
>> 
>> <7D8214F7-97BD-45F0-A21F-9A5333AF2C94.tiff>
>> <28E41AFC-0091-4F73-8A48-D9B8D33D341D.tiff>
>> 
>> Did you encounter this problem before ? Is there any way you could help me solving it ? 
>> 
>> 
>> Thank you very much for your help,
>> 
>> Best wishes,
>> 
>> 
>> JB 
>> 
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From hp@ge@ @end|ng |rom |redhutch@org  Wed Apr 29 18:42:06 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Wed, 29 Apr 2020 09:42:06 -0700
Subject: [R-SIG-Mac] fatal error: 'stdio.h' file not found
In-Reply-To: <CAC+MLCopLKLafrV+dpJP4dmj7S7LasVN3h8stM1NJTSAwVW38w@mail.gmail.com>
References: <CAC+MLCopLKLafrV+dpJP4dmj7S7LasVN3h8stM1NJTSAwVW38w@mail.gmail.com>
Message-ID: <54808150-e08c-ebe0-cbd4-15e1043514e5@fredhutch.org>

Hi Eric,

FWIW, here is what I see on my system (Mojave):

   machv2:~ biocbuild$ which clang
   /usr/bin/clang

   machv2:~ biocbuild$ clang -v
   Apple LLVM version 10.0.1 (clang-1001.0.46.4)
   Target: x86_64-apple-darwin18.7.0
   Thread model: posix
   InstalledDir: /Library/Developer/CommandLineTools/usr/bin

   machv2:~ biocbuild$ ls -l 
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h
   -r--r--r--  1 root  wheel  16319 Feb 22  2019 
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h

I'm not a Mac expert but I believe these locations for Apple clang and 
associated standard C header files have not changed for years.

Hope this helps,
H.


On 4/29/20 07:05, Eric K wrote:
> Running R 3.6 has been working fine. I just upgraded to R 4.0 and I cannot
> build packages from source. I have tried the following:
> 
> 1. Installed R 4.0 binary on my mac (macOS 10.14.6). Installation went
> fine, but when I try to build packages from source I get errors like this:
> 
> * installing *source* package ?MASS? ...
> ** package ?MASS? successfully unpacked and MD5 sums checked
> ** using staged installation
> ** libs
> clang -mmacosx-version-min=10.13
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I/usr/local/include   -fPIC  -Wall -g -O2  -c MASS.c -o MASS.o
> MASS.c:18:10: fatal error: 'stdlib.h' file not found
> #include <stdlib.h>
> 
> Indeed, stdlib.h is not in /usr/local/include.
> 
> 2. So I installed Command_Line_Tools_for_Xcode_11.3.1.dmg, but that did not
> fix the problem
> 
> 3. So I installed Xcode 11.3.1 itself. That did not fix the problem.
> 
> 4. For good measure, I re-ran xcode-select --install
> 
> 5. Googling suggested installing /Library/Developer/CommandLineTools/
> Packages/macOS_SDK_headers_for_macOS_10.14.pkg, but that package is not on
> my computer.
> 
> 6. I tried building R 4.0 from source with this config.site:
> 
> CC=clang
> OBJC=$CC
> FC=/usr/local/gfortran/bin/gfortran
> CXX=clang++
> 
> configure went ok, but then the build failed with:
> 
> trying to compile and link a JNI program
> detected JNI cpp flags    : -I$(JAVA_HOME)/include
> -I$(JAVA_HOME)/include/darwin
> detected JNI linker flags : -L$(JAVA_HOME)/lib/server -ljvm
> clang -I"/Users/Eric.Kort/build/R-4.0.0/include" -DNDEBUG
> -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include
> -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/darwin
>   -I/usr/local/include   -fPIC  -g -O2  -c conftest.c -o conftest.o
> In file included from conftest.c:1:
> /Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/jni.h:39:10:
> fatal error: 'stdio.h' file not found
> #include <stdio.h>
> 
> Can anyone spot what I am doing wrong? Thank you!
> 
> -Eric
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MF1GsseSwZpmjo7qspeJtAlyY9nDQ_XZnJGweoVjCfE&s=oFtPJDZ3gSkizBSLFUqqZ2SGa402cZZHDFxpHmk5rNM&e=
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From er|cjkort @end|ng |rom gm@||@com  Wed Apr 29 19:01:46 2020
From: er|cjkort @end|ng |rom gm@||@com (Eric K)
Date: Wed, 29 Apr 2020 13:01:46 -0400
Subject: [R-SIG-Mac] fatal error: 'stdio.h' file not found
In-Reply-To: <54808150-e08c-ebe0-cbd4-15e1043514e5@fredhutch.org>
References: <CAC+MLCopLKLafrV+dpJP4dmj7S7LasVN3h8stM1NJTSAwVW38w@mail.gmail.com>
 <54808150-e08c-ebe0-cbd4-15e1043514e5@fredhutch.org>
Message-ID: <CAC+MLCrh0YSon3XajySV7fJ=vADyTvt=4bY8gamxide3mndjGA@mail.gmail.com>

Thank you Herv?.

So yes, with this ~/.R/Makevars everything works fine again (with a couple
extra flags to keep things quiet):

CFLAGS = -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
-Wno-nullability-completeness -Wno-expansion-to-defined
CXXFLAGS =
-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
-Wno-nullability-completeness -Wno-expansion-to-defined
CPPFLAGS =
-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
-Wno-nullability-completeness -Wno-expansion-to-defined

I am curious why I need this Makevars with what I believe to be a vanilla
MacOS / XCode / R installation? But since things are working, my
curiosity will not keep me up at night.

Thanks again for pointing me in the right direction.

-Eric


On Wed, Apr 29, 2020 at 12:42 PM Herv? Pag?s <hpages at fredhutch.org> wrote:

> Hi Eric,
>
> FWIW, here is what I see on my system (Mojave):
>
>    machv2:~ biocbuild$ which clang
>    /usr/bin/clang
>
>    machv2:~ biocbuild$ clang -v
>    Apple LLVM version 10.0.1 (clang-1001.0.46.4)
>    Target: x86_64-apple-darwin18.7.0
>    Thread model: posix
>    InstalledDir: /Library/Developer/CommandLineTools/usr/bin
>
>    machv2:~ biocbuild$ ls -l
> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h
>    -r--r--r--  1 root  wheel  16319 Feb 22  2019
> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h
>
> I'm not a Mac expert but I believe these locations for Apple clang and
> associated standard C header files have not changed for years.
>
> Hope this helps,
> H.
>
>
> On 4/29/20 07:05, Eric K wrote:
> > Running R 3.6 has been working fine. I just upgraded to R 4.0 and I
> cannot
> > build packages from source. I have tried the following:
> >
> > 1. Installed R 4.0 binary on my mac (macOS 10.14.6). Installation went
> > fine, but when I try to build packages from source I get errors like
> this:
> >
> > * installing *source* package ?MASS? ...
> > ** package ?MASS? successfully unpacked and MD5 sums checked
> > ** using staged installation
> > ** libs
> > clang -mmacosx-version-min=10.13
> > -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> > -I/usr/local/include   -fPIC  -Wall -g -O2  -c MASS.c -o MASS.o
> > MASS.c:18:10: fatal error: 'stdlib.h' file not found
> > #include <stdlib.h>
> >
> > Indeed, stdlib.h is not in /usr/local/include.
> >
> > 2. So I installed Command_Line_Tools_for_Xcode_11.3.1.dmg, but that did
> not
> > fix the problem
> >
> > 3. So I installed Xcode 11.3.1 itself. That did not fix the problem.
> >
> > 4. For good measure, I re-ran xcode-select --install
> >
> > 5. Googling suggested installing /Library/Developer/CommandLineTools/
> > Packages/macOS_SDK_headers_for_macOS_10.14.pkg, but that package is not
> on
> > my computer.
> >
> > 6. I tried building R 4.0 from source with this config.site:
> >
> > CC=clang
> > OBJC=$CC
> > FC=/usr/local/gfortran/bin/gfortran
> > CXX=clang++
> >
> > configure went ok, but then the build failed with:
> >
> > trying to compile and link a JNI program
> > detected JNI cpp flags    : -I$(JAVA_HOME)/include
> > -I$(JAVA_HOME)/include/darwin
> > detected JNI linker flags : -L$(JAVA_HOME)/lib/server -ljvm
> > clang -I"/Users/Eric.Kort/build/R-4.0.0/include" -DNDEBUG
> > -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include
> >
> -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/darwin
> >   -I/usr/local/include   -fPIC  -g -O2  -c conftest.c -o conftest.o
> > In file included from conftest.c:1:
> >
> /Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/jni.h:39:10:
> > fatal error: 'stdio.h' file not found
> > #include <stdio.h>
> >
> > Can anyone spot what I am doing wrong? Thank you!
> >
> > -Eric
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> >
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MF1GsseSwZpmjo7qspeJtAlyY9nDQ_XZnJGweoVjCfE&s=oFtPJDZ3gSkizBSLFUqqZ2SGa402cZZHDFxpHmk5rNM&e=
> >
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
>

	[[alternative HTML version deleted]]


From jb@t@n|@ @end|ng |rom gm@||@com  Wed Apr 29 19:03:39 2020
From: jb@t@n|@ @end|ng |rom gm@||@com (jean benoit TANIS)
Date: Wed, 29 Apr 2020 18:03:39 +0100
Subject: [R-SIG-Mac] Graphic problem Rcmdr
In-Reply-To: <07F8712E-4BD6-4DA9-9D61-32E29DCEF91B@gmail.com>
References: <28390_1588151379_03T99YvZ025704_FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
 <D054A608-A1E1-431C-95B8-7DD0D3AC9B43@mcmaster.ca>
 <07F8712E-4BD6-4DA9-9D61-32E29DCEF91B@gmail.com>
Message-ID: <F6FDFD5F-9A38-415B-8674-225594D5DFC3@gmail.com>

I have just tried with R studio and it works ? I do not know why it does not work with Rapp but at least I can use it now. 

Thank you very much for your precious help !! 

JB 

> On 29 Apr 2020, at 16:14, peter dalgaard <pdalgd at gmail.com> wrote:
> 
> Also not seen by me on Mojave (admittedly 4.0.0 beta, which I can't be bothered to upgrade at this point). Works both from R.app and Terminal, and even from RStudio.
> 
> One thought is a missing font, but same font is used elsewhere is it not?
> 
> You could try playing with generic Tcl/Tk via the tcltk package and see if you can reproduce the problem in a simpler setting (perhaps try the package demos?)
> 
> -pd
> 
>> On 29 Apr 2020, at 15:07 , Fox, John <jfox at mcmaster.ca> wrote:
>> 
>> Dear JB,
>> 
>> We corresponded privately about this problem, and I suggested that you post a message to the R-SIG-Mac list when I was unable to help you solve it. I don't experience the problem on a Mac similar to yours, but running macOS Catalina, and no one else to my knowledge has reported a similar problem (with blank menus).
>> 
>> I do have one additional suggestion: I assume that you're running the Rcmdr under the standard R.app GUI. Try running R in a Terminal session. That is open the Mac Terminal, type R  at the % command prompt and then library(Rcmdr) at the R > prompt.
>> 
>> Perhaps others will think of additional suggestions.
>> 
>> Best,
>> John
>> 
>>> On Apr 29, 2020, at 2:18 AM, jean benoit TANIS <jb.tanis at gmail.com> wrote:
>>> 
>>> Hi,
>>> 
>>> I recently downloaded 4.0.0 and the Rcmdr package with dependencies (I used to work on R2.6 on Windows). 
>>> 
>>> When I load the Rcmdr package, this is what I obtain - see picture (the drop down menu does not display). <Snip20200428_1.png>
>>> 
>>> I manage to have access to the drop-down menu only once despite 20 or so attempts of closing and reopening R. 
>>> 
>>> I have tried to:
>>> - turn-off nap-app => same issue 
>>> - uninstall R and rebook and start again => same issue 
>>> - uninstall XQuartz and reboot and start again => same issue 
>>> 
>>> For more information about my system, please find the pictures below 
>>> 
>>> <7D8214F7-97BD-45F0-A21F-9A5333AF2C94.tiff>
>>> <28E41AFC-0091-4F73-8A48-D9B8D33D341D.tiff>
>>> 
>>> Did you encounter this problem before ? Is there any way you could help me solving it ? 
>>> 
>>> 
>>> Thank you very much for your help,
>>> 
>>> Best wishes,
>>> 
>>> 
>>> JB 
>>> 
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 
> 


From br@unm @end|ng |rom m@||@@mu@edu  Wed Apr 29 19:11:44 2020
From: br@unm @end|ng |rom m@||@@mu@edu (Braun, Michael)
Date: Wed, 29 Apr 2020 17:11:44 +0000
Subject: [R-SIG-Mac] Linking R 4.0 to an alternative BLAS
Message-ID: <0DA7A4C9-DE81-4D9A-B631-4F9C2C0DB3BC@mail.smu.edu>

Under R 3.6.3 and earlier, I would link R to an alternative BLAS. Following R for Mac FAQ, Sec. 10.5, I would redirect the symbolic link $R_HOME/lib/libRblas.dylib to point to whichever BLAS  I wanted to use, (either vecLib or Intel MKL) instead of the reference BLAS at libRblas.0.dylib.

With the R 4.0.0 precompiled binaries from CRAN, under $R_HOME/lib,  libRblas.dylib is the reference BLAS itself, and there is no libRblas.0.dylib file.  Is this by design?  Is there an officially recommended alternative?

Thanks,

MB

--------------------------
Michael Braun
Associate Professor of Marketing, and
  Corrigan Research Professor
Cox School of Business
Southern Methodist University
Dallas, TX 75275
braunm _at_ smu.edu<http://smu.edu>








	[[alternative HTML version deleted]]


From j|ox @end|ng |rom mcm@@ter@c@  Wed Apr 29 19:18:24 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (Fox, John)
Date: Wed, 29 Apr 2020 17:18:24 +0000
Subject: [R-SIG-Mac] Graphic problem Rcmdr
In-Reply-To: <F6FDFD5F-9A38-415B-8674-225594D5DFC3@gmail.com>
References: <28390_1588151379_03T99YvZ025704_FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
 <D054A608-A1E1-431C-95B8-7DD0D3AC9B43@mcmaster.ca>
 <07F8712E-4BD6-4DA9-9D61-32E29DCEF91B@gmail.com>
 <F6FDFD5F-9A38-415B-8674-225594D5DFC3@gmail.com>
Message-ID: <ACD1644AA6C67E4FBD0C350625508EC88CE6874D@FHSDB2D11-2.csu.mcmaster.ca>

Dear JB,

If you use the Rcmdr with RStudio, by default it will direct output to the RStudio console. You can change that, if you wish -- look at the Rcmdr options in ?Commander.

Also, have you tried running R and the Rcmdr in a Terminal window, as I suggested? If the problem is with R.app, then that might work too.

Peter: Thanks for chiming in.

Best,
 John

> -----Original Message-----
> From: jean benoit TANIS <jb.tanis at gmail.com>
> Sent: Wednesday, April 29, 2020 1:04 PM
> To: peter dalgaard <pdalgd at gmail.com>
> Cc: Fox, John <jfox at mcmaster.ca>; R-Sig-Mac <r-sig-mac at r-project.org>
> Subject: Re: [R-SIG-Mac] Graphic problem Rcmdr
> 
> I have just tried with R studio and it works ? I do not know why it does
> not work with Rapp but at least I can use it now.
> 
> Thank you very much for your precious help !!
> 
> JB
> 
> > On 29 Apr 2020, at 16:14, peter dalgaard <pdalgd at gmail.com> wrote:
> >
> > Also not seen by me on Mojave (admittedly 4.0.0 beta, which I can't be
> bothered to upgrade at this point). Works both from R.app and Terminal,
> and even from RStudio.
> >
> > One thought is a missing font, but same font is used elsewhere is it
> not?
> >
> > You could try playing with generic Tcl/Tk via the tcltk package and
> > see if you can reproduce the problem in a simpler setting (perhaps try
> > the package demos?)
> >
> > -pd
> >
> >> On 29 Apr 2020, at 15:07 , Fox, John <jfox at mcmaster.ca> wrote:
> >>
> >> Dear JB,
> >>
> >> We corresponded privately about this problem, and I suggested that you
> post a message to the R-SIG-Mac list when I was unable to help you solve
> it. I don't experience the problem on a Mac similar to yours, but running
> macOS Catalina, and no one else to my knowledge has reported a similar
> problem (with blank menus).
> >>
> >> I do have one additional suggestion: I assume that you're running the
> Rcmdr under the standard R.app GUI. Try running R in a Terminal session.
> That is open the Mac Terminal, type R  at the % command prompt and then
> library(Rcmdr) at the R > prompt.
> >>
> >> Perhaps others will think of additional suggestions.
> >>
> >> Best,
> >> John
> >>
> >>> On Apr 29, 2020, at 2:18 AM, jean benoit TANIS <jb.tanis at gmail.com>
> wrote:
> >>>
> >>> Hi,
> >>>
> >>> I recently downloaded 4.0.0 and the Rcmdr package with dependencies (I
> used to work on R2.6 on Windows).
> >>>
> >>> When I load the Rcmdr package, this is what I obtain - see picture
> >>> (the drop down menu does not display). <Snip20200428_1.png>
> >>>
> >>> I manage to have access to the drop-down menu only once despite 20 or
> so attempts of closing and reopening R.
> >>>
> >>> I have tried to:
> >>> - turn-off nap-app => same issue
> >>> - uninstall R and rebook and start again => same issue
> >>> - uninstall XQuartz and reboot and start again => same issue
> >>>
> >>> For more information about my system, please find the pictures below
> >>>
> >>> <7D8214F7-97BD-45F0-A21F-9A5333AF2C94.tiff>
> >>> <28E41AFC-0091-4F73-8A48-D9B8D33D341D.tiff>
> >>>
> >>> Did you encounter this problem before ? Is there any way you could
> help me solving it ?
> >>>
> >>>
> >>> Thank you very much for your help,
> >>>
> >>> Best wishes,
> >>>
> >>>
> >>> JB
> >>>
> >>>
> >>> _______________________________________________
> >>> R-SIG-Mac mailing list
> >>> R-SIG-Mac at r-project.org
> >>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>
> >> _______________________________________________
> >> R-SIG-Mac mailing list
> >> R-SIG-Mac at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
> > --
> > Peter Dalgaard, Professor,
> > Center for Statistics, Copenhagen Business School Solbjerg Plads 3,
> > 2000 Frederiksberg, Denmark
> > Phone: (+45)38153501
> > Office: A 4.23
> > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >
> >
> >
> >
> >
> >
> >
> >
> >


From er|cjkort @end|ng |rom gm@||@com  Wed Apr 29 19:23:59 2020
From: er|cjkort @end|ng |rom gm@||@com (Eric K)
Date: Wed, 29 Apr 2020 13:23:59 -0400
Subject: [R-SIG-Mac] fatal error: 'stdio.h' file not found
In-Reply-To: <CAC+MLCrh0YSon3XajySV7fJ=vADyTvt=4bY8gamxide3mndjGA@mail.gmail.com>
References: <CAC+MLCopLKLafrV+dpJP4dmj7S7LasVN3h8stM1NJTSAwVW38w@mail.gmail.com>
 <54808150-e08c-ebe0-cbd4-15e1043514e5@fredhutch.org>
 <CAC+MLCrh0YSon3XajySV7fJ=vADyTvt=4bY8gamxide3mndjGA@mail.gmail.com>
Message-ID: <CAC+MLCoyEk-owUDrnxGCafkpLPf0aPqJ0658gkq-qw0hFLZVpw@mail.gmail.com>

One more update. I had to add the -isysroot flag to avoid collisions
between incompatible headers when building some packages. Thinking about it
more I remembered that I have also used Homebrew in the past for some
installations of unrelated software (so my installation is not as "Vanilla"
as I previously asserted). I wonder then if the source of my woes here is
collisions between homebrew and Xcode? Regardless, this ~/.R/Makevars is
working for me to allow building source packages with the official R 4.0
binary on macOs 10.14.6 with XCode 11.3.1 :

CFLAGS = -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
-Wno-nullability-completeness -Wno-expansion-to-defined -isysroot
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
CXXFLAGS =
-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
-Wno-nullability-completeness -Wno-expansion-to-defined -isysroot
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
CPPFLAGS =
-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
-Wno-nullability-completeness -Wno-expansion-to-defined -isysroot
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk

Thanks again!
-Eric


On Wed, Apr 29, 2020 at 1:01 PM Eric K <ericjkort at gmail.com> wrote:

> Thank you Herv?.
>
> So yes, with this ~/.R/Makevars everything works fine again (with a couple
> extra flags to keep things quiet):
>
> CFLAGS = -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> -Wno-nullability-completeness -Wno-expansion-to-defined
> CXXFLAGS =
> -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> -Wno-nullability-completeness -Wno-expansion-to-defined
> CPPFLAGS =
> -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> -Wno-nullability-completeness -Wno-expansion-to-defined
>
> I am curious why I need this Makevars with what I believe to be a vanilla
> MacOS / XCode / R installation? But since things are working, my
> curiosity will not keep me up at night.
>
> Thanks again for pointing me in the right direction.
>
> -Eric
>
>
> On Wed, Apr 29, 2020 at 12:42 PM Herv? Pag?s <hpages at fredhutch.org> wrote:
>
>> Hi Eric,
>>
>> FWIW, here is what I see on my system (Mojave):
>>
>>    machv2:~ biocbuild$ which clang
>>    /usr/bin/clang
>>
>>    machv2:~ biocbuild$ clang -v
>>    Apple LLVM version 10.0.1 (clang-1001.0.46.4)
>>    Target: x86_64-apple-darwin18.7.0
>>    Thread model: posix
>>    InstalledDir: /Library/Developer/CommandLineTools/usr/bin
>>
>>    machv2:~ biocbuild$ ls -l
>> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h
>>    -r--r--r--  1 root  wheel  16319 Feb 22  2019
>> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h
>>
>> I'm not a Mac expert but I believe these locations for Apple clang and
>> associated standard C header files have not changed for years.
>>
>> Hope this helps,
>> H.
>>
>>
>> On 4/29/20 07:05, Eric K wrote:
>> > Running R 3.6 has been working fine. I just upgraded to R 4.0 and I
>> cannot
>> > build packages from source. I have tried the following:
>> >
>> > 1. Installed R 4.0 binary on my mac (macOS 10.14.6). Installation went
>> > fine, but when I try to build packages from source I get errors like
>> this:
>> >
>> > * installing *source* package ?MASS? ...
>> > ** package ?MASS? successfully unpacked and MD5 sums checked
>> > ** using staged installation
>> > ** libs
>> > clang -mmacosx-version-min=10.13
>> > -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
>> > -I/usr/local/include   -fPIC  -Wall -g -O2  -c MASS.c -o MASS.o
>> > MASS.c:18:10: fatal error: 'stdlib.h' file not found
>> > #include <stdlib.h>
>> >
>> > Indeed, stdlib.h is not in /usr/local/include.
>> >
>> > 2. So I installed Command_Line_Tools_for_Xcode_11.3.1.dmg, but that did
>> not
>> > fix the problem
>> >
>> > 3. So I installed Xcode 11.3.1 itself. That did not fix the problem.
>> >
>> > 4. For good measure, I re-ran xcode-select --install
>> >
>> > 5. Googling suggested installing /Library/Developer/CommandLineTools/
>> > Packages/macOS_SDK_headers_for_macOS_10.14.pkg, but that package is not
>> on
>> > my computer.
>> >
>> > 6. I tried building R 4.0 from source with this config.site:
>> >
>> > CC=clang
>> > OBJC=$CC
>> > FC=/usr/local/gfortran/bin/gfortran
>> > CXX=clang++
>> >
>> > configure went ok, but then the build failed with:
>> >
>> > trying to compile and link a JNI program
>> > detected JNI cpp flags    : -I$(JAVA_HOME)/include
>> > -I$(JAVA_HOME)/include/darwin
>> > detected JNI linker flags : -L$(JAVA_HOME)/lib/server -ljvm
>> > clang -I"/Users/Eric.Kort/build/R-4.0.0/include" -DNDEBUG
>> > -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include
>> >
>> -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/darwin
>> >   -I/usr/local/include   -fPIC  -g -O2  -c conftest.c -o conftest.o
>> > In file included from conftest.c:1:
>> >
>> /Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/jni.h:39:10:
>> > fatal error: 'stdio.h' file not found
>> > #include <stdio.h>
>> >
>> > Can anyone spot what I am doing wrong? Thank you!
>> >
>> > -Eric
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > _______________________________________________
>> > R-SIG-Mac mailing list
>> > R-SIG-Mac at r-project.org
>> >
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MF1GsseSwZpmjo7qspeJtAlyY9nDQ_XZnJGweoVjCfE&s=oFtPJDZ3gSkizBSLFUqqZ2SGa402cZZHDFxpHmk5rNM&e=
>> >
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fredhutch.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>

	[[alternative HTML version deleted]]


From kev|nu@hey @end|ng |rom gm@||@com  Wed Apr 29 19:31:05 2020
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Wed, 29 Apr 2020 10:31:05 -0700
Subject: [R-SIG-Mac] fatal error: 'stdio.h' file not found
In-Reply-To: <CAC+MLCoyEk-owUDrnxGCafkpLPf0aPqJ0658gkq-qw0hFLZVpw@mail.gmail.com>
References: <CAC+MLCopLKLafrV+dpJP4dmj7S7LasVN3h8stM1NJTSAwVW38w@mail.gmail.com>
 <54808150-e08c-ebe0-cbd4-15e1043514e5@fredhutch.org>
 <CAC+MLCrh0YSon3XajySV7fJ=vADyTvt=4bY8gamxide3mndjGA@mail.gmail.com>
 <CAC+MLCoyEk-owUDrnxGCafkpLPf0aPqJ0658gkq-qw0hFLZVpw@mail.gmail.com>
Message-ID: <CAJXgQP3TJRC14VzvaHeKqC0UaTHBgA-zDD-5Lurh3MhdD9bGJw@mail.gmail.com>

Normally, you shouldn't need to set -isysroot or SDKROOT when using
Apple Clang -- it will automatically find and use system headers for
you.

Per Herv?'s original point, I wonder if you have a different compiler
on the PATH? What is the output of:

    which clang

My suspicion is that you might have an alternate compiler on the PATH
that is being used instead of the default Apple Clang.

You might also check e.g.

    xcode-select -p
    xcrun --show-sdk-path

just to make sure those are pointing in the right place -- e.g. I have:

    kevinushey at Kevins-MBP:~
    $ xcode-select -p
    /Library/Developer/CommandLineTools
    kevinushey at Kevins-MBP:~
    $ xcrun --show-sdk-path
    /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk

You could also set CC=/usr/bin/clang just to force the use of the
system compiler (and avoid looking up whatever is first on the PATH).

Best,
Kevin

On Wed, Apr 29, 2020 at 10:24 AM Eric K <ericjkort at gmail.com> wrote:
>
> One more update. I had to add the -isysroot flag to avoid collisions
> between incompatible headers when building some packages. Thinking about it
> more I remembered that I have also used Homebrew in the past for some
> installations of unrelated software (so my installation is not as "Vanilla"
> as I previously asserted). I wonder then if the source of my woes here is
> collisions between homebrew and Xcode? Regardless, this ~/.R/Makevars is
> working for me to allow building source packages with the official R 4.0
> binary on macOs 10.14.6 with XCode 11.3.1 :
>
> CFLAGS = -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> -Wno-nullability-completeness -Wno-expansion-to-defined -isysroot
> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
> CXXFLAGS =
> -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> -Wno-nullability-completeness -Wno-expansion-to-defined -isysroot
> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
> CPPFLAGS =
> -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> -Wno-nullability-completeness -Wno-expansion-to-defined -isysroot
> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
>
> Thanks again!
> -Eric
>
>
> On Wed, Apr 29, 2020 at 1:01 PM Eric K <ericjkort at gmail.com> wrote:
>
> > Thank you Herv?.
> >
> > So yes, with this ~/.R/Makevars everything works fine again (with a couple
> > extra flags to keep things quiet):
> >
> > CFLAGS = -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> > -Wno-nullability-completeness -Wno-expansion-to-defined
> > CXXFLAGS =
> > -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> > -Wno-nullability-completeness -Wno-expansion-to-defined
> > CPPFLAGS =
> > -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> > -Wno-nullability-completeness -Wno-expansion-to-defined
> >
> > I am curious why I need this Makevars with what I believe to be a vanilla
> > MacOS / XCode / R installation? But since things are working, my
> > curiosity will not keep me up at night.
> >
> > Thanks again for pointing me in the right direction.
> >
> > -Eric
> >
> >
> > On Wed, Apr 29, 2020 at 12:42 PM Herv? Pag?s <hpages at fredhutch.org> wrote:
> >
> >> Hi Eric,
> >>
> >> FWIW, here is what I see on my system (Mojave):
> >>
> >>    machv2:~ biocbuild$ which clang
> >>    /usr/bin/clang
> >>
> >>    machv2:~ biocbuild$ clang -v
> >>    Apple LLVM version 10.0.1 (clang-1001.0.46.4)
> >>    Target: x86_64-apple-darwin18.7.0
> >>    Thread model: posix
> >>    InstalledDir: /Library/Developer/CommandLineTools/usr/bin
> >>
> >>    machv2:~ biocbuild$ ls -l
> >> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h
> >>    -r--r--r--  1 root  wheel  16319 Feb 22  2019
> >> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h
> >>
> >> I'm not a Mac expert but I believe these locations for Apple clang and
> >> associated standard C header files have not changed for years.
> >>
> >> Hope this helps,
> >> H.
> >>
> >>
> >> On 4/29/20 07:05, Eric K wrote:
> >> > Running R 3.6 has been working fine. I just upgraded to R 4.0 and I
> >> cannot
> >> > build packages from source. I have tried the following:
> >> >
> >> > 1. Installed R 4.0 binary on my mac (macOS 10.14.6). Installation went
> >> > fine, but when I try to build packages from source I get errors like
> >> this:
> >> >
> >> > * installing *source* package ?MASS? ...
> >> > ** package ?MASS? successfully unpacked and MD5 sums checked
> >> > ** using staged installation
> >> > ** libs
> >> > clang -mmacosx-version-min=10.13
> >> > -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> >> > -I/usr/local/include   -fPIC  -Wall -g -O2  -c MASS.c -o MASS.o
> >> > MASS.c:18:10: fatal error: 'stdlib.h' file not found
> >> > #include <stdlib.h>
> >> >
> >> > Indeed, stdlib.h is not in /usr/local/include.
> >> >
> >> > 2. So I installed Command_Line_Tools_for_Xcode_11.3.1.dmg, but that did
> >> not
> >> > fix the problem
> >> >
> >> > 3. So I installed Xcode 11.3.1 itself. That did not fix the problem.
> >> >
> >> > 4. For good measure, I re-ran xcode-select --install
> >> >
> >> > 5. Googling suggested installing /Library/Developer/CommandLineTools/
> >> > Packages/macOS_SDK_headers_for_macOS_10.14.pkg, but that package is not
> >> on
> >> > my computer.
> >> >
> >> > 6. I tried building R 4.0 from source with this config.site:
> >> >
> >> > CC=clang
> >> > OBJC=$CC
> >> > FC=/usr/local/gfortran/bin/gfortran
> >> > CXX=clang++
> >> >
> >> > configure went ok, but then the build failed with:
> >> >
> >> > trying to compile and link a JNI program
> >> > detected JNI cpp flags    : -I$(JAVA_HOME)/include
> >> > -I$(JAVA_HOME)/include/darwin
> >> > detected JNI linker flags : -L$(JAVA_HOME)/lib/server -ljvm
> >> > clang -I"/Users/Eric.Kort/build/R-4.0.0/include" -DNDEBUG
> >> > -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include
> >> >
> >> -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/darwin
> >> >   -I/usr/local/include   -fPIC  -g -O2  -c conftest.c -o conftest.o
> >> > In file included from conftest.c:1:
> >> >
> >> /Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/jni.h:39:10:
> >> > fatal error: 'stdio.h' file not found
> >> > #include <stdio.h>
> >> >
> >> > Can anyone spot what I am doing wrong? Thank you!
> >> >
> >> > -Eric
> >> >
> >> >       [[alternative HTML version deleted]]
> >> >
> >> > _______________________________________________
> >> > R-SIG-Mac mailing list
> >> > R-SIG-Mac at r-project.org
> >> >
> >> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MF1GsseSwZpmjo7qspeJtAlyY9nDQ_XZnJGweoVjCfE&s=oFtPJDZ3gSkizBSLFUqqZ2SGa402cZZHDFxpHmk5rNM&e=
> >> >
> >>
> >> --
> >> Herv? Pag?s
> >>
> >> Program in Computational Biology
> >> Division of Public Health Sciences
> >> Fred Hutchinson Cancer Research Center
> >> 1100 Fairview Ave. N, M1-B514
> >> P.O. Box 19024
> >> Seattle, WA 98109-1024
> >>
> >> E-mail: hpages at fredhutch.org
> >> Phone:  (206) 667-5791
> >> Fax:    (206) 667-1319
> >>
> >
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From jb@t@n|@ @end|ng |rom gm@||@com  Wed Apr 29 19:44:47 2020
From: jb@t@n|@ @end|ng |rom gm@||@com (jean benoit TANIS)
Date: Wed, 29 Apr 2020 18:44:47 +0100
Subject: [R-SIG-Mac] Graphic problem Rcmdr
In-Reply-To: <ACD1644AA6C67E4FBD0C350625508EC88CE6874D@FHSDB2D11-2.csu.mcmaster.ca>
References: <28390_1588151379_03T99YvZ025704_FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
 <D054A608-A1E1-431C-95B8-7DD0D3AC9B43@mcmaster.ca>
 <07F8712E-4BD6-4DA9-9D61-32E29DCEF91B@gmail.com>
 <F6FDFD5F-9A38-415B-8674-225594D5DFC3@gmail.com>
 <ACD1644AA6C67E4FBD0C350625508EC88CE6874D@FHSDB2D11-2.csu.mcmaster.ca>
Message-ID: <BA39DF35-209D-4F7F-805C-3E3DFDC5CB19@gmail.com>

This actually works well on the terminal session !! Very strange that the App GUI does not work well. I do not know if it is a general Mac problem or due to my computer settings?. 

JB

> On 29 Apr 2020, at 18:18, Fox, John <jfox at mcmaster.ca> wrote:
> 
> Dear JB,
> 
> If you use the Rcmdr with RStudio, by default it will direct output to the RStudio console. You can change that, if you wish -- look at the Rcmdr options in ?Commander.
> 
> Also, have you tried running R and the Rcmdr in a Terminal window, as I suggested? If the problem is with R.app, then that might work too.
> 
> Peter: Thanks for chiming in.
> 
> Best,
> John
> 
>> -----Original Message-----
>> From: jean benoit TANIS <jb.tanis at gmail.com>
>> Sent: Wednesday, April 29, 2020 1:04 PM
>> To: peter dalgaard <pdalgd at gmail.com>
>> Cc: Fox, John <jfox at mcmaster.ca>; R-Sig-Mac <r-sig-mac at r-project.org>
>> Subject: Re: [R-SIG-Mac] Graphic problem Rcmdr
>> 
>> I have just tried with R studio and it works ? I do not know why it does
>> not work with Rapp but at least I can use it now.
>> 
>> Thank you very much for your precious help !!
>> 
>> JB
>> 
>>> On 29 Apr 2020, at 16:14, peter dalgaard <pdalgd at gmail.com> wrote:
>>> 
>>> Also not seen by me on Mojave (admittedly 4.0.0 beta, which I can't be
>> bothered to upgrade at this point). Works both from R.app and Terminal,
>> and even from RStudio.
>>> 
>>> One thought is a missing font, but same font is used elsewhere is it
>> not?
>>> 
>>> You could try playing with generic Tcl/Tk via the tcltk package and
>>> see if you can reproduce the problem in a simpler setting (perhaps try
>>> the package demos?)
>>> 
>>> -pd
>>> 
>>>> On 29 Apr 2020, at 15:07 , Fox, John <jfox at mcmaster.ca> wrote:
>>>> 
>>>> Dear JB,
>>>> 
>>>> We corresponded privately about this problem, and I suggested that you
>> post a message to the R-SIG-Mac list when I was unable to help you solve
>> it. I don't experience the problem on a Mac similar to yours, but running
>> macOS Catalina, and no one else to my knowledge has reported a similar
>> problem (with blank menus).
>>>> 
>>>> I do have one additional suggestion: I assume that you're running the
>> Rcmdr under the standard R.app GUI. Try running R in a Terminal session.
>> That is open the Mac Terminal, type R  at the % command prompt and then
>> library(Rcmdr) at the R > prompt.
>>>> 
>>>> Perhaps others will think of additional suggestions.
>>>> 
>>>> Best,
>>>> John
>>>> 
>>>>> On Apr 29, 2020, at 2:18 AM, jean benoit TANIS <jb.tanis at gmail.com>
>> wrote:
>>>>> 
>>>>> Hi,
>>>>> 
>>>>> I recently downloaded 4.0.0 and the Rcmdr package with dependencies (I
>> used to work on R2.6 on Windows).
>>>>> 
>>>>> When I load the Rcmdr package, this is what I obtain - see picture
>>>>> (the drop down menu does not display). <Snip20200428_1.png>
>>>>> 
>>>>> I manage to have access to the drop-down menu only once despite 20 or
>> so attempts of closing and reopening R.
>>>>> 
>>>>> I have tried to:
>>>>> - turn-off nap-app => same issue
>>>>> - uninstall R and rebook and start again => same issue
>>>>> - uninstall XQuartz and reboot and start again => same issue
>>>>> 
>>>>> For more information about my system, please find the pictures below
>>>>> 
>>>>> <7D8214F7-97BD-45F0-A21F-9A5333AF2C94.tiff>
>>>>> <28E41AFC-0091-4F73-8A48-D9B8D33D341D.tiff>
>>>>> 
>>>>> Did you encounter this problem before ? Is there any way you could
>> help me solving it ?
>>>>> 
>>>>> 
>>>>> Thank you very much for your help,
>>>>> 
>>>>> Best wishes,
>>>>> 
>>>>> 
>>>>> JB
>>>>> 
>>>>> 
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> --
>>> Peter Dalgaard, Professor,
>>> Center for Statistics, Copenhagen Business School Solbjerg Plads 3,
>>> 2000 Frederiksberg, Denmark
>>> Phone: (+45)38153501
>>> Office: A 4.23
>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
> 


From j|ox @end|ng |rom mcm@@ter@c@  Thu Apr 30 02:02:48 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (Fox, John)
Date: Thu, 30 Apr 2020 00:02:48 +0000
Subject: [R-SIG-Mac] Graphic problem Rcmdr
In-Reply-To: <BA39DF35-209D-4F7F-805C-3E3DFDC5CB19@gmail.com>
References: <28390_1588151379_03T99YvZ025704_FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
 <D054A608-A1E1-431C-95B8-7DD0D3AC9B43@mcmaster.ca>
 <07F8712E-4BD6-4DA9-9D61-32E29DCEF91B@gmail.com>
 <F6FDFD5F-9A38-415B-8674-225594D5DFC3@gmail.com>
 <ACD1644AA6C67E4FBD0C350625508EC88CE6874D@FHSDB2D11-2.csu.mcmaster.ca>
 <BA39DF35-209D-4F7F-805C-3E3DFDC5CB19@gmail.com>
Message-ID: <2B0AD7AE-D6BE-45EF-B8E2-E4CD1DFB7E14@mcmaster.ca>

Dear JB,

> On Apr 29, 2020, at 1:44 PM, jean benoit TANIS <jb.tanis at gmail.com> wrote:
> 
> This actually works well on the terminal session !! Very strange that the App GUI does not work well. I do not know if it is a general Mac problem or due to my computer settings?. 

I don't think that it could be a general Mac problem, because R.app works with the Rcmdr for me and others. At least you now have a couple of solutions.

Best,
 John

> 
> JB
> 
>> On 29 Apr 2020, at 18:18, Fox, John <jfox at mcmaster.ca> wrote:
>> 
>> Dear JB,
>> 
>> If you use the Rcmdr with RStudio, by default it will direct output to the RStudio console. You can change that, if you wish -- look at the Rcmdr options in ?Commander.
>> 
>> Also, have you tried running R and the Rcmdr in a Terminal window, as I suggested? If the problem is with R.app, then that might work too.
>> 
>> Peter: Thanks for chiming in.
>> 
>> Best,
>> John
>> 
>>> -----Original Message-----
>>> From: jean benoit TANIS <jb.tanis at gmail.com>
>>> Sent: Wednesday, April 29, 2020 1:04 PM
>>> To: peter dalgaard <pdalgd at gmail.com>
>>> Cc: Fox, John <jfox at mcmaster.ca>; R-Sig-Mac <r-sig-mac at r-project.org>
>>> Subject: Re: [R-SIG-Mac] Graphic problem Rcmdr
>>> 
>>> I have just tried with R studio and it works ? I do not know why it does
>>> not work with Rapp but at least I can use it now.
>>> 
>>> Thank you very much for your precious help !!
>>> 
>>> JB
>>> 
>>>> On 29 Apr 2020, at 16:14, peter dalgaard <pdalgd at gmail.com> wrote:
>>>> 
>>>> Also not seen by me on Mojave (admittedly 4.0.0 beta, which I can't be
>>> bothered to upgrade at this point). Works both from R.app and Terminal,
>>> and even from RStudio.
>>>> 
>>>> One thought is a missing font, but same font is used elsewhere is it
>>> not?
>>>> 
>>>> You could try playing with generic Tcl/Tk via the tcltk package and
>>>> see if you can reproduce the problem in a simpler setting (perhaps try
>>>> the package demos?)
>>>> 
>>>> -pd
>>>> 
>>>>> On 29 Apr 2020, at 15:07 , Fox, John <jfox at mcmaster.ca> wrote:
>>>>> 
>>>>> Dear JB,
>>>>> 
>>>>> We corresponded privately about this problem, and I suggested that you
>>> post a message to the R-SIG-Mac list when I was unable to help you solve
>>> it. I don't experience the problem on a Mac similar to yours, but running
>>> macOS Catalina, and no one else to my knowledge has reported a similar
>>> problem (with blank menus).
>>>>> 
>>>>> I do have one additional suggestion: I assume that you're running the
>>> Rcmdr under the standard R.app GUI. Try running R in a Terminal session.
>>> That is open the Mac Terminal, type R  at the % command prompt and then
>>> library(Rcmdr) at the R > prompt.
>>>>> 
>>>>> Perhaps others will think of additional suggestions.
>>>>> 
>>>>> Best,
>>>>> John
>>>>> 
>>>>>> On Apr 29, 2020, at 2:18 AM, jean benoit TANIS <jb.tanis at gmail.com>
>>> wrote:
>>>>>> 
>>>>>> Hi,
>>>>>> 
>>>>>> I recently downloaded 4.0.0 and the Rcmdr package with dependencies (I
>>> used to work on R2.6 on Windows).
>>>>>> 
>>>>>> When I load the Rcmdr package, this is what I obtain - see picture
>>>>>> (the drop down menu does not display). <Snip20200428_1.png>
>>>>>> 
>>>>>> I manage to have access to the drop-down menu only once despite 20 or
>>> so attempts of closing and reopening R.
>>>>>> 
>>>>>> I have tried to:
>>>>>> - turn-off nap-app => same issue
>>>>>> - uninstall R and rebook and start again => same issue
>>>>>> - uninstall XQuartz and reboot and start again => same issue
>>>>>> 
>>>>>> For more information about my system, please find the pictures below
>>>>>> 
>>>>>> <7D8214F7-97BD-45F0-A21F-9A5333AF2C94.tiff>
>>>>>> <28E41AFC-0091-4F73-8A48-D9B8D33D341D.tiff>
>>>>>> 
>>>>>> Did you encounter this problem before ? Is there any way you could
>>> help me solving it ?
>>>>>> 
>>>>>> 
>>>>>> Thank you very much for your help,
>>>>>> 
>>>>>> Best wishes,
>>>>>> 
>>>>>> 
>>>>>> JB
>>>>>> 
>>>>>> 
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>> 
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>>> --
>>>> Peter Dalgaard, Professor,
>>>> Center for Statistics, Copenhagen Business School Solbjerg Plads 3,
>>>> 2000 Frederiksberg, Denmark
>>>> Phone: (+45)38153501
>>>> Office: A 4.23
>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>> 
> 


From er|cjkort @end|ng |rom gm@||@com  Thu Apr 30 03:32:24 2020
From: er|cjkort @end|ng |rom gm@||@com (Eric K)
Date: Wed, 29 Apr 2020 21:32:24 -0400
Subject: [R-SIG-Mac] fatal error: 'stdio.h' file not found
In-Reply-To: <CAJXgQP3TJRC14VzvaHeKqC0UaTHBgA-zDD-5Lurh3MhdD9bGJw@mail.gmail.com>
References: <CAC+MLCopLKLafrV+dpJP4dmj7S7LasVN3h8stM1NJTSAwVW38w@mail.gmail.com>
 <54808150-e08c-ebe0-cbd4-15e1043514e5@fredhutch.org>
 <CAC+MLCrh0YSon3XajySV7fJ=vADyTvt=4bY8gamxide3mndjGA@mail.gmail.com>
 <CAC+MLCoyEk-owUDrnxGCafkpLPf0aPqJ0658gkq-qw0hFLZVpw@mail.gmail.com>
 <CAJXgQP3TJRC14VzvaHeKqC0UaTHBgA-zDD-5Lurh3MhdD9bGJw@mail.gmail.com>
Message-ID: <CAC+MLCr1mnh8PN-LtxknAtsjLT-zXBneULVg0E48HPavKPT+cA@mail.gmail.com>

Kevin,

which clang gives /usr/bin/clang, and xcode-select -p and xcrun
--show-sdk-path give same output as yours.

I am sure it is something I messed up along the way, and/or is related to
having homebrew also installed.

Someday soon I will upgrade to Catalina and see if that resolves the issue
(or makes it worse).

Best regards,
Eric


On Wed, Apr 29, 2020 at 1:31 PM Kevin Ushey <kevinushey at gmail.com> wrote:

> Normally, you shouldn't need to set -isysroot or SDKROOT when using
> Apple Clang -- it will automatically find and use system headers for
> you.
>
> Per Herv?'s original point, I wonder if you have a different compiler
> on the PATH? What is the output of:
>
>     which clang
>
> My suspicion is that you might have an alternate compiler on the PATH
> that is being used instead of the default Apple Clang.
>
> You might also check e.g.
>
>     xcode-select -p
>     xcrun --show-sdk-path
>
> just to make sure those are pointing in the right place -- e.g. I have:
>
>     kevinushey at Kevins-MBP:~
>     $ xcode-select -p
>     /Library/Developer/CommandLineTools
>     kevinushey at Kevins-MBP:~
>     $ xcrun --show-sdk-path
>     /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
>
> You could also set CC=/usr/bin/clang just to force the use of the
> system compiler (and avoid looking up whatever is first on the PATH).
>
> Best,
> Kevin
>
> On Wed, Apr 29, 2020 at 10:24 AM Eric K <ericjkort at gmail.com> wrote:
> >
> > One more update. I had to add the -isysroot flag to avoid collisions
> > between incompatible headers when building some packages. Thinking about
> it
> > more I remembered that I have also used Homebrew in the past for some
> > installations of unrelated software (so my installation is not as
> "Vanilla"
> > as I previously asserted). I wonder then if the source of my woes here is
> > collisions between homebrew and Xcode? Regardless, this ~/.R/Makevars is
> > working for me to allow building source packages with the official R 4.0
> > binary on macOs 10.14.6 with XCode 11.3.1 :
> >
> > CFLAGS =
> -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> > -Wno-nullability-completeness -Wno-expansion-to-defined -isysroot
> > /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
> > CXXFLAGS =
> > -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> > -Wno-nullability-completeness -Wno-expansion-to-defined -isysroot
> > /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
> > CPPFLAGS =
> > -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> > -Wno-nullability-completeness -Wno-expansion-to-defined -isysroot
> > /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
> >
> > Thanks again!
> > -Eric
> >
> >
> > On Wed, Apr 29, 2020 at 1:01 PM Eric K <ericjkort at gmail.com> wrote:
> >
> > > Thank you Herv?.
> > >
> > > So yes, with this ~/.R/Makevars everything works fine again (with a
> couple
> > > extra flags to keep things quiet):
> > >
> > > CFLAGS =
> -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> > > -Wno-nullability-completeness -Wno-expansion-to-defined
> > > CXXFLAGS =
> > > -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> > > -Wno-nullability-completeness -Wno-expansion-to-defined
> > > CPPFLAGS =
> > > -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
> > > -Wno-nullability-completeness -Wno-expansion-to-defined
> > >
> > > I am curious why I need this Makevars with what I believe to be a
> vanilla
> > > MacOS / XCode / R installation? But since things are working, my
> > > curiosity will not keep me up at night.
> > >
> > > Thanks again for pointing me in the right direction.
> > >
> > > -Eric
> > >
> > >
> > > On Wed, Apr 29, 2020 at 12:42 PM Herv? Pag?s <hpages at fredhutch.org>
> wrote:
> > >
> > >> Hi Eric,
> > >>
> > >> FWIW, here is what I see on my system (Mojave):
> > >>
> > >>    machv2:~ biocbuild$ which clang
> > >>    /usr/bin/clang
> > >>
> > >>    machv2:~ biocbuild$ clang -v
> > >>    Apple LLVM version 10.0.1 (clang-1001.0.46.4)
> > >>    Target: x86_64-apple-darwin18.7.0
> > >>    Thread model: posix
> > >>    InstalledDir: /Library/Developer/CommandLineTools/usr/bin
> > >>
> > >>    machv2:~ biocbuild$ ls -l
> > >>
> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h
> > >>    -r--r--r--  1 root  wheel  16319 Feb 22  2019
> > >>
> /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h
> > >>
> > >> I'm not a Mac expert but I believe these locations for Apple clang and
> > >> associated standard C header files have not changed for years.
> > >>
> > >> Hope this helps,
> > >> H.
> > >>
> > >>
> > >> On 4/29/20 07:05, Eric K wrote:
> > >> > Running R 3.6 has been working fine. I just upgraded to R 4.0 and I
> > >> cannot
> > >> > build packages from source. I have tried the following:
> > >> >
> > >> > 1. Installed R 4.0 binary on my mac (macOS 10.14.6). Installation
> went
> > >> > fine, but when I try to build packages from source I get errors like
> > >> this:
> > >> >
> > >> > * installing *source* package ?MASS? ...
> > >> > ** package ?MASS? successfully unpacked and MD5 sums checked
> > >> > ** using staged installation
> > >> > ** libs
> > >> > clang -mmacosx-version-min=10.13
> > >> > -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> > >> > -I/usr/local/include   -fPIC  -Wall -g -O2  -c MASS.c -o MASS.o
> > >> > MASS.c:18:10: fatal error: 'stdlib.h' file not found
> > >> > #include <stdlib.h>
> > >> >
> > >> > Indeed, stdlib.h is not in /usr/local/include.
> > >> >
> > >> > 2. So I installed Command_Line_Tools_for_Xcode_11.3.1.dmg, but that
> did
> > >> not
> > >> > fix the problem
> > >> >
> > >> > 3. So I installed Xcode 11.3.1 itself. That did not fix the problem.
> > >> >
> > >> > 4. For good measure, I re-ran xcode-select --install
> > >> >
> > >> > 5. Googling suggested installing
> /Library/Developer/CommandLineTools/
> > >> > Packages/macOS_SDK_headers_for_macOS_10.14.pkg, but that package is
> not
> > >> on
> > >> > my computer.
> > >> >
> > >> > 6. I tried building R 4.0 from source with this config.site:
> > >> >
> > >> > CC=clang
> > >> > OBJC=$CC
> > >> > FC=/usr/local/gfortran/bin/gfortran
> > >> > CXX=clang++
> > >> >
> > >> > configure went ok, but then the build failed with:
> > >> >
> > >> > trying to compile and link a JNI program
> > >> > detected JNI cpp flags    : -I$(JAVA_HOME)/include
> > >> > -I$(JAVA_HOME)/include/darwin
> > >> > detected JNI linker flags : -L$(JAVA_HOME)/lib/server -ljvm
> > >> > clang -I"/Users/Eric.Kort/build/R-4.0.0/include" -DNDEBUG
> > >> >
> -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include
> > >> >
> > >>
> -I/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/darwin
> > >> >   -I/usr/local/include   -fPIC  -g -O2  -c conftest.c -o conftest.o
> > >> > In file included from conftest.c:1:
> > >> >
> > >>
> /Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/include/jni.h:39:10:
> > >> > fatal error: 'stdio.h' file not found
> > >> > #include <stdio.h>
> > >> >
> > >> > Can anyone spot what I am doing wrong? Thank you!
> > >> >
> > >> > -Eric
> > >> >
> > >> >       [[alternative HTML version deleted]]
> > >> >
> > >> > _______________________________________________
> > >> > R-SIG-Mac mailing list
> > >> > R-SIG-Mac at r-project.org
> > >> >
> > >>
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dmac&d=DwIFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=MF1GsseSwZpmjo7qspeJtAlyY9nDQ_XZnJGweoVjCfE&s=oFtPJDZ3gSkizBSLFUqqZ2SGa402cZZHDFxpHmk5rNM&e=
> > >> >
> > >>
> > >> --
> > >> Herv? Pag?s
> > >>
> > >> Program in Computational Biology
> > >> Division of Public Health Sciences
> > >> Fred Hutchinson Cancer Research Center
> > >> 1100 Fairview Ave. N, M1-B514
> > >> P.O. Box 19024
> > >> Seattle, WA 98109-1024
> > >>
> > >> E-mail: hpages at fredhutch.org
> > >> Phone:  (206) 667-5791
> > >> Fax:    (206) 667-1319
> > >>
> > >
> >
> >         [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>

	[[alternative HTML version deleted]]


From h|ro@h|-h@koy@m@ @end|ng |rom n@g@no@@c@jp  Thu Apr 30 15:06:46 2020
From: h|ro@h|-h@koy@m@ @end|ng |rom n@g@no@@c@jp (Hiroshi Hakoyama)
Date: Thu, 30 Apr 2020 22:06:46 +0900
Subject: [R-SIG-Mac] R.app GUI 1.71 (7827) crashes on Catalina
Message-ID: <ADBBAF01-B30F-480C-8CB6-3BD4E0C44C18@nagano.ac.jp>

Dear All,

Environment:
R version 4.0.0 (2020-04-24) -- "Arbor Day"
[R.app GUI 1.71 (7827) x86_64-apple-darwin17.0]
macOS: Mojave and Catalina
Removed file for the test: .Rapp.history

Description:
R.app crashes when a large file (e.g., test.R) is double-clicked on Mojave and Catalina. The crash does not occur on High Sierra. Small source files (e.g., test2.R) do not cause the crash on Mojave and Catalina.

How-To-Repeat:
Double-click test.R (or open test.R using R.app) on Catalina or Mojave.

Fix:
unknown

Crash Report is too large to paste to the email.


Best regards,

Hiroshi Hakoyama
Nagano University

test.R
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
x <- rnorm(100000)
y <- rnorm(100000)
hist(x)
hist(y)

test2.R
x <- rnorm(100000)
y <- rnorm(100000)
hist(x)
hist(y)

system.log
Apr 30 20:54:40 ec7 R[1147]: assertion failed: 19E287: libxpc.dylib + 92807 [32B0E31E-9DA3-328B-A962-BC9591B93537]: 0x89

From ESWRIGHT @end|ng |rom p|tt@edu  Thu Apr 30 16:23:23 2020
From: ESWRIGHT @end|ng |rom p|tt@edu (Wright, Erik Scott)
Date: Thu, 30 Apr 2020 14:23:23 +0000
Subject: [R-SIG-Mac] OpenMP on CRAN (Simon Urbanek)
In-Reply-To: <CAJdZCv2R9iz7fpHiRD1j=tPF61m+tP=Ju-pf2rCdUs7bqBafQw@mail.gmail.com>
References: <CAJdZCv0SSeUzKqC_KBmC5RjTWKpb5w_25-QFfzo1FBQhZqeUdQ@mail.gmail.com>
 <28AC4935-D222-4A6E-967F-66AC06CD1E04@pitt.edu>
 <CAJXgQP3tbo89E7jaF-DTyfLsd56a58Hx6eQr9AJCPjfzTgrW3A@mail.gmail.com>
 <CAJdZCv2R9iz7fpHiRD1j=tPF61m+tP=Ju-pf2rCdUs7bqBafQw@mail.gmail.com>
Message-ID: <7ACC027E-8374-4B50-8EDA-7C07657DB280@pitt.edu>

Hi Kevin et al.,

The setup you suggested did not work for me, but I was able to get OpenMP to work on Mac (10.13) with R v4.0 packages.  Here's what I did:

(1) After installing Homebrew, ran
brew install libomp
# Note it is also possible to install from OpenMP Source code: https://releases.llvm.org/download.html#10.0.0
(2) Determined the install path with
brew --prefix libomp
# In my case /usr/local/opt/libomp
(3) Added lines to ~/.R/Makevars
CC=/usr/local/clang4/bin/clang -fopenmp -I/usr/local/opt/libomp/include
LDFLAGS=-L/usr/local/opt/libomp/lib

I imagine the process is similar for C++ code by setting CXX.  Now parallelization for C code with OpenMP is working again on Mac.

As always, I am thankful to the R community for helping problem solve.

I wish more direction along these lines could be added to mac.r-project.org<http://mac.r-project.org>

Erik


On Apr 29, 2020, at 1:51 AM, Dmitriy Selivanov <selivanov.dmitriy at gmail.com<mailto:selivanov.dmitriy at gmail.com>> wrote:

Thanks, Kevin, I can confirm suggested setup works fine so far. Thank you!

I understand it, is that there's
no guarantee that this will work properly (or continue to work
properly) as the Apple toolchain continues to be updated -- e.g. a new
version of macOS / Xcode could install a version of Apple Clang that
is then incompatible with the version of libomp currently in use. In
such a case, I suspect one would need to find and reinstall libomp.

Thats understandable.

On Sat, Apr 25, 2020 at 8:09 PM Kevin Ushey <kevinushey at gmail.com<mailto:kevinushey at gmail.com>> wrote:
The following works for me on macOS 10.15.4 using Apple Clang + libomp
from LLVM 10 (via Homebrew).

Install libomp from Homebrew with:

    brew install libomp

Then, put the following in ~/.R/Makevars

    CPPFLAGS += -I/usr/local/opt/libomp/include -Xclang -fopenmp
    LDFLAGS += -L/usr/local/opt/libomp/lib -lomp

Then R will automatically enable + use OpenMP as appropriate when
installing packages from sources.

The main danger of this approach, as I understand it, is that there's
no guarantee that this will work properly (or continue to work
properly) as the Apple toolchain continues to be updated -- e.g. a new
version of macOS / Xcode could install a version of Apple Clang that
is then incompatible with the version of libomp currently in use. In
such a case, I suspect one would need to find and reinstall libomp.

In theory, this could be alleviated by ensuring all users download and
use the same version of Xcode as is being used by the macOS build
machine (Xcode 10.1), but in practice users will likely just be using
the "default" set of command line tools that comes with their version
of macOS.

Cunningham's law will hopefully ensure someone else will chime in if
I've got something wrong :-)

Best,
Kevin

On Sat, Apr 25, 2020 at 8:29 AM Wright, Erik Scott <ESWRIGHT at pitt.edu<mailto:ESWRIGHT at pitt.edu>> wrote:
>
> I second this request.  Dropping OpenMP support in R v4.0 on Mac is unfortunate.  My R package is highly parallelized via OpenMP, and many of my end-users take advantage of the excellent speedups.  It would be much appreciated if user-level instructions could be provided for how to enable OpenMP support on the Mac.
>
> Thanks,
> Erik
>
>
> > On Apr 23, 2020, at 7:08 AM, Dmitriy Selivanov <selivanov.dmitriy at gmail.com<mailto:selivanov.dmitriy at gmail.com>> wrote:
> >
> > Hi Simon,
> >
> > Just wanted follow up on this topic.
> >
> > It would be very helpful if you can provide some guide on
> > https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415901734&amp;sdata=qlhXuEubgD6PNmkbD%2BWQy5OI9X%2BGjxSYHMNjA%2BQHZzI%3D&amp;reserved=0<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&data=02%7C01%7CESWRIGHT%40pitt.edu%7C97942eff1d0444324e2008d7ec016278%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637237363009843423&sdata=mFd6228vyjEBn7K5yVMwxyHVZePFOQWXMuSh0nqmXbE%3D&reserved=0><https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415911728&amp;sdata=5XR5LJuAKu4%2B3%2FUHsWVPMlyXTLY87P6OF%2FP%2FTZt1W8Y%3D&amp;reserved=0<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fmac.r-project.org%2F&data=02%7C01%7CESWRIGHT%40pitt.edu%7C97942eff1d0444324e2008d7ec016278%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637237363009843423&sdata=mFd6228vyjEBn7K5yVMwxyHVZePFOQWXMuSh0nqmXbE%3D&reserved=0>> for those users
> > (advanced?) and developers who wants to be able to use OpenMP on mac. From
> > what I've understood from this mail thread the easiest way is to install R
> > from homebrew as it is built with non-standard Apple toolchain.
> > Apart from that you've mentioned you may consider to bundle binary  iomp
> > with R installation, but "it would be on the package author to make sure
> > that the way the package operates is compatible with that binary". Could
> > you please elaborate on that?
> >
> > I believe I'm not alone who would like to be able to use OpenMP on mac and
> > "official" guidance would be very helpful.
> >
> > --
> > Regards
> > Dmitriy Selivanov
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org<mailto:R-SIG-Mac at r-project.org>
> > https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=02%7C01%7Ceswright%40pitt.edu%7C65097590dea4453ab8cf08d7e776b868%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637232369415911728&amp;sdata=yAu4MKX2Ka5yEaoq51byWJSkbL%2FpO1HvtUsI%2BQXmtJQ%3D&amp;reserved=0<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&data=02%7C01%7CESWRIGHT%40pitt.edu%7C97942eff1d0444324e2008d7ec016278%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637237363009853380&sdata=VHp2u3MPUcoi5R4m%2FCg0oQwu5awui5IEEs8QnaIimmM%3D&reserved=0>
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org<mailto:R-SIG-Mac at r-project.org>
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&data=02%7C01%7CESWRIGHT%40pitt.edu%7C97942eff1d0444324e2008d7ec016278%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637237363009853380&sdata=VHp2u3MPUcoi5R4m%2FCg0oQwu5awui5IEEs8QnaIimmM%3D&reserved=0>


--
Regards
Dmitriy Selivanov


	[[alternative HTML version deleted]]


From pd@|gd @end|ng |rom gm@||@com  Thu Apr 30 16:35:49 2020
From: pd@|gd @end|ng |rom gm@||@com (Peter Dalgaard)
Date: Thu, 30 Apr 2020 16:35:49 +0200
Subject: [R-SIG-Mac] Graphic problem Rcmdr
In-Reply-To: <2B0AD7AE-D6BE-45EF-B8E2-E4CD1DFB7E14@mcmaster.ca>
References: <28390_1588151379_03T99YvZ025704_FDB44B8F-E108-44AB-B208-C9F93CD29BFF@gmail.com>
 <D054A608-A1E1-431C-95B8-7DD0D3AC9B43@mcmaster.ca>
 <07F8712E-4BD6-4DA9-9D61-32E29DCEF91B@gmail.com>
 <F6FDFD5F-9A38-415B-8674-225594D5DFC3@gmail.com>
 <ACD1644AA6C67E4FBD0C350625508EC88CE6874D@FHSDB2D11-2.csu.mcmaster.ca>
 <BA39DF35-209D-4F7F-805C-3E3DFDC5CB19@gmail.com>
 <2B0AD7AE-D6BE-45EF-B8E2-E4CD1DFB7E14@mcmaster.ca>
Message-ID: <9C1C393B-789D-4E97-BFAD-50F69E9DB6EC@gmail.com>

There is a generic problem with Tcl/Tk combined with other GUIs, though. Essentially, you need to multiplex two event loops, and there is some risk of race conditions. Whether such bugs actually bite can vary between platforms.

-pd

> On 30 Apr 2020, at 02:02 , Fox, John <jfox at mcmaster.ca> wrote:
> 
> Dear JB,
> 
>> On Apr 29, 2020, at 1:44 PM, jean benoit TANIS <jb.tanis at gmail.com> wrote:
>> 
>> This actually works well on the terminal session !! Very strange that the App GUI does not work well. I do not know if it is a general Mac problem or due to my computer settings?. 
> 
> I don't think that it could be a general Mac problem, because R.app works with the Rcmdr for me and others. At least you now have a couple of solutions.
> 
> Best,
> John
> 
>> 
>> JB
>> 
>>> On 29 Apr 2020, at 18:18, Fox, John <jfox at mcmaster.ca> wrote:
>>> 
>>> Dear JB,
>>> 
>>> If you use the Rcmdr with RStudio, by default it will direct output to the RStudio console. You can change that, if you wish -- look at the Rcmdr options in ?Commander.
>>> 
>>> Also, have you tried running R and the Rcmdr in a Terminal window, as I suggested? If the problem is with R.app, then that might work too.
>>> 
>>> Peter: Thanks for chiming in.
>>> 
>>> Best,
>>> John
>>> 
>>>> -----Original Message-----
>>>> From: jean benoit TANIS <jb.tanis at gmail.com>
>>>> Sent: Wednesday, April 29, 2020 1:04 PM
>>>> To: peter dalgaard <pdalgd at gmail.com>
>>>> Cc: Fox, John <jfox at mcmaster.ca>; R-Sig-Mac <r-sig-mac at r-project.org>
>>>> Subject: Re: [R-SIG-Mac] Graphic problem Rcmdr
>>>> 
>>>> I have just tried with R studio and it works ? I do not know why it does
>>>> not work with Rapp but at least I can use it now.
>>>> 
>>>> Thank you very much for your precious help !!
>>>> 
>>>> JB
>>>> 
>>>>> On 29 Apr 2020, at 16:14, peter dalgaard <pdalgd at gmail.com> wrote:
>>>>> 
>>>>> Also not seen by me on Mojave (admittedly 4.0.0 beta, which I can't be
>>>> bothered to upgrade at this point). Works both from R.app and Terminal,
>>>> and even from RStudio.
>>>>> 
>>>>> One thought is a missing font, but same font is used elsewhere is it
>>>> not?
>>>>> 
>>>>> You could try playing with generic Tcl/Tk via the tcltk package and
>>>>> see if you can reproduce the problem in a simpler setting (perhaps try
>>>>> the package demos?)
>>>>> 
>>>>> -pd
>>>>> 
>>>>>> On 29 Apr 2020, at 15:07 , Fox, John <jfox at mcmaster.ca> wrote:
>>>>>> 
>>>>>> Dear JB,
>>>>>> 
>>>>>> We corresponded privately about this problem, and I suggested that you
>>>> post a message to the R-SIG-Mac list when I was unable to help you solve
>>>> it. I don't experience the problem on a Mac similar to yours, but running
>>>> macOS Catalina, and no one else to my knowledge has reported a similar
>>>> problem (with blank menus).
>>>>>> 
>>>>>> I do have one additional suggestion: I assume that you're running the
>>>> Rcmdr under the standard R.app GUI. Try running R in a Terminal session.
>>>> That is open the Mac Terminal, type R  at the % command prompt and then
>>>> library(Rcmdr) at the R > prompt.
>>>>>> 
>>>>>> Perhaps others will think of additional suggestions.
>>>>>> 
>>>>>> Best,
>>>>>> John
>>>>>> 
>>>>>>> On Apr 29, 2020, at 2:18 AM, jean benoit TANIS <jb.tanis at gmail.com>
>>>> wrote:
>>>>>>> 
>>>>>>> Hi,
>>>>>>> 
>>>>>>> I recently downloaded 4.0.0 and the Rcmdr package with dependencies (I
>>>> used to work on R2.6 on Windows).
>>>>>>> 
>>>>>>> When I load the Rcmdr package, this is what I obtain - see picture
>>>>>>> (the drop down menu does not display). <Snip20200428_1.png>
>>>>>>> 
>>>>>>> I manage to have access to the drop-down menu only once despite 20 or
>>>> so attempts of closing and reopening R.
>>>>>>> 
>>>>>>> I have tried to:
>>>>>>> - turn-off nap-app => same issue
>>>>>>> - uninstall R and rebook and start again => same issue
>>>>>>> - uninstall XQuartz and reboot and start again => same issue
>>>>>>> 
>>>>>>> For more information about my system, please find the pictures below
>>>>>>> 
>>>>>>> <7D8214F7-97BD-45F0-A21F-9A5333AF2C94.tiff>
>>>>>>> <28E41AFC-0091-4F73-8A48-D9B8D33D341D.tiff>
>>>>>>> 
>>>>>>> Did you encounter this problem before ? Is there any way you could
>>>> help me solving it ?
>>>>>>> 
>>>>>>> 
>>>>>>> Thank you very much for your help,
>>>>>>> 
>>>>>>> Best wishes,
>>>>>>> 
>>>>>>> 
>>>>>>> JB
>>>>>>> 
>>>>>>> 
>>>>>>> _______________________________________________
>>>>>>> R-SIG-Mac mailing list
>>>>>>> R-SIG-Mac at r-project.org
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>> 
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>> 
>>>>> --
>>>>> Peter Dalgaard, Professor,
>>>>> Center for Statistics, Copenhagen Business School Solbjerg Plads 3,
>>>>> 2000 Frederiksberg, Denmark
>>>>> Phone: (+45)38153501
>>>>> Office: A 4.23
>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>> 
>> 
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From br@unm @end|ng |rom m@||@@mu@edu  Thu Apr 30 16:42:53 2020
From: br@unm @end|ng |rom m@||@@mu@edu (Braun, Michael)
Date: Thu, 30 Apr 2020 14:42:53 +0000
Subject: [R-SIG-Mac] Linking R 4.0 to an alternative BLAS
In-Reply-To: <CF541AF0-BE96-45D5-88E0-A6910952EB2F@mac.com>
References: <0DA7A4C9-DE81-4D9A-B631-4F9C2C0DB3BC@mail.smu.edu>
 <CF541AF0-BE96-45D5-88E0-A6910952EB2F@mac.com>
Message-ID: <13F3ED3F-168C-42E1-92A8-84372FD45530@mail.smu.edu>

Douglas:

Thank you for your response.  I apologize for not being more clear in my post.  I know how to link *to* a BLAS, just as you described.  The problem is that under R 4.0.0, it is not clear what to link *from*.

This is my $R_HOME/lib directory for R-4 (removing dSYM directories for space)

~ $ ls -l $R_HOME/lib
total 19120
-rwxrwxr-x@ 1 root  admin  4070896 Apr 24 05:23 libR.dylib
-rwxrwxr-x  1 root  admin   201472 Apr 24 05:23 libRblas.dylib
-rwxrwxr-x  1 root  admin  2181472 Apr 24 05:23 libRlapack.dylib
-rw-rw-r--  1 root  admin   160624 Apr 24 05:23 libgcc_s.1.dylib
-rwxrwxr-x  1 root  admin  2851008 Apr 24 05:23 libgfortran.5.dylib
-rwxrwxr-x  1 root  admin   309648 Apr 24 05:23 libquadmath.0.dylib

You will see that libRblas.dylib is an actual library for the default R BLAS, not a symlink.  So if I were to do as you suggest, I would overwrite the default reference BLAS with the symlink.  I would not be able to go back to the default BLAS if I ever needed to.

Under R-3.6.3 and earlier, $R_HOME/lib looks like this (after linking to the Intel BLAS, and again edited for space)

~ $ ls -l /Library/Frameworks/R.framework/Versions/3.6/Resources/lib
total 22168
-rwxrwxr-x  1 root  admin  3720000 Mar  5 20:06 libR.dylib
-rwxrwxr-x  1 root  admin   210512 Mar  5 20:06 libRblas.0.dylib
lrwxr-xr-x  1 root  admin       73 Mar 10 13:05 libRblas.dylib -> $MKLROOT/lib/libmkl_rt.dylib
-rwxrwxr-x  1 root  admin  2225088 Mar  5 20:06 libRlapack.dylib
-rwxrwxr-x  1 root  admin   874416 Mar  5 20:06 libc++.1.dylib
-rwxrwxr-x  1 root  admin   237904 Mar  5 20:06 libc++abi.1.dylib
-rwxrwxr-x  1 root  admin   317696 Mar  5 20:06 libgcc_s.1.dylib
-rwxrwxr-x  1 root  admin  1648416 Mar  5 20:06 libgfortran.3.dylib
-rwxrwxr-x  1 root  admin   610928 Mar  5 20:06 libomp.dylib
-rwxrwxr-x  1 root  admin   304848 Mar  5 20:06 libquadmath.0.dylib
-rwxrwxr-x  1 root  admin  1084288 Mar  5 20:06 libreadline.5.2.dylib
lrwxr-xr-x  1 root  admin       21 Mar 10 13:02 libreadline.dylib -> libreadline.5.2.dylib
-rwxrwxr-x  1 root  admin    86320 Mar  5 20:06 libunwind.1.dylib

Note that the reference BLAS file was libRblas.0.dylib, not libRblas.dylib.  By default,  libRblas.dylib was a link to libRblas.0.dylib, but I changed that link to the BLAS I want (here I use Intel because it works with parallel R code,  but I can do the same kind of thing with vecLib). This is the *expected* behavior, and is consistent with the R for Mac FAQ.

Now, it is correct that the FAQ is not up-to-date anyway, since  libRblas.vecLib.dylib is not included  (and I do not think it has been for a while).  Your workaround is exactly what I did under R-3, but does not seem to be possible in R-4 without some manual renaming.  Before I do that renaming (and possibly break something), I?d like some confirmation that this is an oversight, and not by design.

Thanks,

Michael


On Apr 30, 2020, at 4:22 AM, Douglas Yu <dougwyu at mac.com<mailto:dougwyu at mac.com>> wrote:

libBLAS.dylib is indeed the one to link

i did the following on macOS 10.14.6:


# R default BLAS test

d <- 5e3
system.time({ x <- matrix(rnorm(d^2),d,d); tcrossprod(x) })
#    user  system elapsed
# 186.718   1.483 189.839

system.time({ x <- matrix(rnorm(d^2),d,d); solve(x) })
#    user  system elapsed
# 273.504   1.909 277.557



# to use vecLib
cd /Library/Frameworks/R.framework/Resources/lib
ln -sf /System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Versions/Current/libBLAS.dylib libRblas.dylib

# Restart R



# vecLib test

d <- 5e3
system.time({ x <- matrix(rnorm(d^2),d,d); tcrossprod(x) })
 #   user  system elapsed
 # 11.030   0.266   3.876

system.time({ x <- matrix(rnorm(d^2),d,d); solve(x) })
 #   user  system elapsed
 # 23.432   0.621   6.830
--
Prof. Douglas W. Yu
School of Biological Sciences, University of East Anglia, Norwich, Norfolk  NR4 7TJ  UK,  mob +44-7510-308-272
Kunming Institute of Zoology, 21 Qingsong Lu, Kunming, Yunnan 650201 China ???????????????21?, ofc +86-871-519 9178, mob +86 183 138 29970
people.uea.ac.uk/en/persons/douglas-yu<https://people.uea.ac.uk/en/persons/douglas-yu>, eastanglia.academia.edu/DouglasYu/Papers<http://eastanglia.academia.edu/DouglasYu/Papers> for pdfs

On 29 Apr 2020, at 18:11, Braun, Michael <braunm at mail.smu.edu<mailto:braunm at mail.smu.edu>> wrote:

Under R 3.6.3 and earlier, I would link R to an alternative BLAS. Following R for Mac FAQ, Sec. 10.5, I would redirect the symbolic link $R_HOME/lib/libRblas.dylib to point to whichever BLAS  I wanted to use, (either vecLib or Intel MKL) instead of the reference BLAS at libRblas.0.dylib.

With the R 4.0.0 precompiled binaries from CRAN, under $R_HOME/lib,  libRblas.dylib is the reference BLAS itself, and there is no libRblas.0.dylib file.  Is this by design?  Is there an officially recommended alternative?

Thanks,

MB

--------------------------
Michael Braun
Associate Professor of Marketing, and
 Corrigan Research Professor
Cox School of Business
Southern Methodist University
Dallas, TX 75275
braunm _at_ smu.edu<http://smu.edu/><http://smu.edu<http://smu.edu/>>








[[alternative HTML version deleted]]

_______________________________________________
R-SIG-Mac mailing list
R-SIG-Mac at r-project.org<mailto:R-SIG-Mac at r-project.org>
https://stat.ethz.ch/mailman/listinfo/r-sig-mac


	[[alternative HTML version deleted]]


From m@p|no|@10 @end|ng |rom gm@||@com  Thu Apr 30 17:13:56 2020
From: m@p|no|@10 @end|ng |rom gm@||@com (=?UTF-8?Q?Manuel_Sp=C3=ADnola?=)
Date: Thu, 30 Apr 2020 09:13:56 -0600
Subject: [R-SIG-Mac] Warning messages: 1: In readChar(file, size,
 TRUE) : truncating string with embedded nuls
Message-ID: <CABkCotSbTKUgJDQGmvpLNkNRPBcBk6C9GddKyL6OVF6eVL213g@mail.gmail.com>

Dear list members,

I updated to R 4.0 and my MacOS is Catalina 10.15.4.

When using several functions I receive this warning message

It could be loading a library, reading a file, or other tasks.

> library(tidyverse)
Warning messages:
1: In readChar(file, size, TRUE) : truncating string with embedded nuls
2: In readChar(file, size, TRUE) : truncating string with embedded nuls

Any idea why is the warning message?

Manuel


-- 
*Manuel Sp?nola, Ph.D.*
Instituto Internacional en Conservaci?n y Manejo de Vida Silvestre
Universidad Nacional
Apartado 1350-3000
Heredia
COSTA RICA
mspinola at una.cr <mspinola at una.ac.cr>
mspinola10 at gmail.com
Tel?fono: (506) 8706 - 4662
Personal website: Lobito de r?o <https://sites.google.com/site/lobitoderio/>
Institutional website: ICOMVIS <http://www.icomvis.una.ac.cr/>

	[[alternative HTML version deleted]]


From |@t@z@hn @end|ng |rom gm@||@com  Thu Apr 30 17:24:27 2020
From: |@t@z@hn @end|ng |rom gm@||@com (Ista Zahn)
Date: Thu, 30 Apr 2020 11:24:27 -0400
Subject: [R-SIG-Mac] Warning messages: 1: In readChar(file, size,
 TRUE) : truncating string with embedded nuls
In-Reply-To: <CABkCotSbTKUgJDQGmvpLNkNRPBcBk6C9GddKyL6OVF6eVL213g@mail.gmail.com>
References: <CABkCotSbTKUgJDQGmvpLNkNRPBcBk6C9GddKyL6OVF6eVL213g@mail.gmail.com>
Message-ID: <CA+vqiLGwJrmFPEnS2pFO80GUoTaeG3pGHG1fAhqkmodqMkrnZQ@mail.gmail.com>

You could try starting a new session and running

options(warn = 2)
library(tidyverse)
traceback()

to see more specifically where the problem is.

Best,
Ista

On Thu, Apr 30, 2020 at 11:17 AM Manuel Sp?nola <mspinola10 at gmail.com> wrote:
>
> Dear list members,
>
> I updated to R 4.0 and my MacOS is Catalina 10.15.4.
>
> When using several functions I receive this warning message
>
> It could be loading a library, reading a file, or other tasks.
>
> > library(tidyverse)
> Warning messages:
> 1: In readChar(file, size, TRUE) : truncating string with embedded nuls
> 2: In readChar(file, size, TRUE) : truncating string with embedded nuls
>
> Any idea why is the warning message?
>
> Manuel
>
>
> --
> *Manuel Sp?nola, Ph.D.*
> Instituto Internacional en Conservaci?n y Manejo de Vida Silvestre
> Universidad Nacional
> Apartado 1350-3000
> Heredia
> COSTA RICA
> mspinola at una.cr <mspinola at una.ac.cr>
> mspinola10 at gmail.com
> Tel?fono: (506) 8706 - 4662
> Personal website: Lobito de r?o <https://sites.google.com/site/lobitoderio/>
> Institutional website: ICOMVIS <http://www.icomvis.una.ac.cr/>
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From m@p|no|@10 @end|ng |rom gm@||@com  Thu Apr 30 17:34:56 2020
From: m@p|no|@10 @end|ng |rom gm@||@com (=?UTF-8?Q?Manuel_Sp=C3=ADnola?=)
Date: Thu, 30 Apr 2020 09:34:56 -0600
Subject: [R-SIG-Mac] Warning messages: 1: In readChar(file, size,
 TRUE) : truncating string with embedded nuls
In-Reply-To: <CA+vqiLGwJrmFPEnS2pFO80GUoTaeG3pGHG1fAhqkmodqMkrnZQ@mail.gmail.com>
References: <CABkCotSbTKUgJDQGmvpLNkNRPBcBk6C9GddKyL6OVF6eVL213g@mail.gmail.com>
 <CA+vqiLGwJrmFPEnS2pFO80GUoTaeG3pGHG1fAhqkmodqMkrnZQ@mail.gmail.com>
Message-ID: <CABkCotS6dJaxaa2s9h_Yg9_E8hLNq=wBTmQPY=6w=uJ+P8xOOg@mail.gmail.com>

Thank you very much Ista.

Manuel

El jue., 30 abr. 2020 a las 9:24, Ista Zahn (<istazahn at gmail.com>) escribi?:

> You could try starting a new session and running
>
> options(warn = 2)
> library(tidyverse)
> traceback()
>
> to see more specifically where the problem is.
>
> Best,
> Ista
>
> On Thu, Apr 30, 2020 at 11:17 AM Manuel Sp?nola <mspinola10 at gmail.com>
> wrote:
> >
> > Dear list members,
> >
> > I updated to R 4.0 and my MacOS is Catalina 10.15.4.
> >
> > When using several functions I receive this warning message
> >
> > It could be loading a library, reading a file, or other tasks.
> >
> > > library(tidyverse)
> > Warning messages:
> > 1: In readChar(file, size, TRUE) : truncating string with embedded nuls
> > 2: In readChar(file, size, TRUE) : truncating string with embedded nuls
> >
> > Any idea why is the warning message?
> >
> > Manuel
> >
> >
> > --
> > *Manuel Sp?nola, Ph.D.*
> > Instituto Internacional en Conservaci?n y Manejo de Vida Silvestre
> > Universidad Nacional
> > Apartado 1350-3000
> > Heredia
> > COSTA RICA
> > mspinola at una.cr <mspinola at una.ac.cr>
> > mspinola10 at gmail.com
> > Tel?fono: (506) 8706 - 4662
> > Personal website: Lobito de r?o <
> https://sites.google.com/site/lobitoderio/>
> > Institutional website: ICOMVIS <http://www.icomvis.una.ac.cr/>
> >
> >         [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


-- 
*Manuel Sp?nola, Ph.D.*
Instituto Internacional en Conservaci?n y Manejo de Vida Silvestre
Universidad Nacional
Apartado 1350-3000
Heredia
COSTA RICA
mspinola at una.cr <mspinola at una.ac.cr>
mspinola10 at gmail.com
Tel?fono: (506) 8706 - 4662
Personal website: Lobito de r?o <https://sites.google.com/site/lobitoderio/>
Institutional website: ICOMVIS <http://www.icomvis.una.ac.cr/>

	[[alternative HTML version deleted]]


