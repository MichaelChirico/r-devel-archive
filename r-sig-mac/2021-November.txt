From @|mon@urb@nek @end|ng |rom R-project@org  Mon Nov  1 02:03:43 2021
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 1 Nov 2021 14:03:43 +1300
Subject: [R-SIG-Mac] https://mac.r-project.org/benchmarks/
In-Reply-To: <9C722E0A-DF3F-45AF-9DA2-A8D152B3AF02@gmail.com>
References: <F311C911-F19E-4CC4-B177-34EFBFC32CC9@gmail.com>
 <8D07527C-3EF3-4815-8B1E-E8ED939611AF@R-project.org>
 <9C722E0A-DF3F-45AF-9DA2-A8D152B3AF02@gmail.com>
Message-ID: <6C4FABC7-3654-470A-B68F-3050782D3A5A@R-project.org>


Kieran,

the reference benchmarks have been calibrated against vecLib/Accelerate BLAS. If you use reference BLAS it can be a lot slower. You can switch between reference BLAS and vecLib in R CRAN releases simply by switching the libRblas.dylib symlink (in $R_HOME/lib), e.g.:

ls -l /Library/Frameworks/R.framework/Resources/lib/libRblas*dylib
-rwxrwxr-x  1 root     admin  226288 Oct 31 14:41 /Library/Frameworks/R.framework/Resources/lib/libRblas.0.dylib
lrwxr-xr-x  1 root.    admin      21 Nov  1 09:56 /Library/Frameworks/R.framework/Resources/lib/libRblas.dylib -> libRblas.vecLib.dylib
-rwxrwxr-x  1 root     admin  154368 Oct 31 14:41 /Library/Frameworks/R.framework/Resources/lib/libRblas.vecLib.dylib

(For recent R you'll need R 4.1.1 or higher)

Cheers,
Simon

PS: reminder to everyone, please test R 4.1.2 RC - now are the last few hours to report anything!



> On Nov 1, 2021, at 11:31 AM, Kieran Healy <kjhealy at gmail.com> wrote:
> 
> Hello, 
> 
> Just out of interest, I ran benchmark-25.R from Simon?s repo, as I have access to an M1 Max. Are the *very* long times on cross-product, linear regression, and Matrix functions a consequence of the BLAS version?
> 
> Kieran
> 
>> sessionInfo()
> R version 4.1.1 (2021-08-10)
> Platform: aarch64-apple-darwin20 (64-bit)
> Running under: macOS Monterey 12.0.1
> 
> Matrix products: default
> BLAS:   /Library/Frameworks/R.framework/Versions/4.1-arm64/Resources/lib/libRblas.0.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/4.1-arm64/Resources/lib/libRlapack.dylib
> 
> 
>> source("R-benchmark-25.R")
> Loading required package: SuppDists
> 
> 
>   R Benchmark 2.5
>   ===============
> Number of times each test is run__________________________:  3
> 
>   I. Matrix calculation
>   ---------------------
> Creation, transp., deformation of a 2500x2500 matrix (sec):  0.249666666666656
> 2400x2400 normal distributed random matrix ^1000____ (sec):  0.105000000000009
> Sorting of 7,000,000 random values__________________ (sec):  0.594666666666673
> 2800x2800 cross-product matrix (b = a' * a)_________ (sec):  13.3016666666667
> Linear regr. over a 3000x3000 matrix (c = a \ b')___ (sec):  6.27033333333334
>                      --------------------------------------------
>                 Trimmed geom. mean (2 extremes eliminated):  0.976431082297569
> 
>   II. Matrix functions
>   --------------------
> FFT over 2,400,000 random values____________________ (sec):  0.0726666666666631
> Eigenvalues of a 640x640 random matrix______________ (sec):  0.425666666666672
> Determinant of a 2500x2500 random matrix____________ (sec):  1.73833333333333
> Cholesky decomposition of a 3000x3000 matrix________ (sec):  5.17333333333333
> Inverse of a 1600x1600 random matrix________________ (sec):  1.43099999999996
>                      --------------------------------------------
>                Trimmed geom. mean (2 extremes eliminated):  1.01925013610031
> 
>   III. Programmation
>   ------------------
> 3,500,000 Fibonacci numbers calculation (vector calc)(sec):  0.0950000000000273
> Creation of a 3000x3000 Hilbert matrix (matrix calc) (sec):  0.115333333333335
> Grand common divisors of 400,000 pairs (recursion)__ (sec):  0.0799999999999841
> Creation of a 500x500 Toeplitz matrix (loops)_______ (sec):  0.0173333333333593
> Escoufier's method on a 45x45 matrix (mixed)________ (sec):  0.152999999999963
>                      --------------------------------------------
>                Trimmed geom. mean (2 extremes eliminated):  0.0957023962714685
> 
> 
> Total time for all 15 tests_________________________ (sec):  29.823
> Overall mean (sum of I, II and III trimmed means/3)_ (sec):  0.45668322781674
>                      --- End of test ---
> 
> Warning messages:
> 1: In remove("a", "b") : object 'a' not found
> 2: In remove("a", "b") : object 'b' not found
> 
>> On Oct 31, 2021, at 5:11 PM, Simon Urbanek <simon.urbanek at R-project.org> wrote:
>> 
>> 
>> Tim,
>> 
>> that is a great idea, those test are really old. Just for the fun of it I have run the tests on my old iMac, but with R 4.1.2 and they still work.
>> It's nice to see the huge speed improvements in loops and similar (see below - recall the original tests were scaled to be around 1).
>> 
>> I have added the page to the repo
>> https://github.com/R-macos/R-mac-dev
>> so I'd be happy to review PRs, but I'll probably want to re-do it first so it is better organized for comparisons as we have to also accommodate M1 etc.
>> 
>> Cheers,
>> Simon
>> 
>> ---
>> iMac14,2 3.2Ghz i5, macOS 10.4.6, R 4.1.2 vecib/Accelerate BLAS
>> 
>> 
>>  R Benchmark 2.5
>>  ===============
>> Number of times each test is run__________________________:  3
>> 
>>  I. Matrix calculation
>>  ---------------------
>> Creation, transp., deformation of a 2500x2500 matrix (sec):  0.829666666666667 
>> 2400x2400 normal distributed random matrix ^1000____ (sec):  0.155333333333334 
>> Sorting of 7,000,000 random values__________________ (sec):  0.638333333333334 
>> 2800x2800 cross-product matrix (b = a' * a)_________ (sec):  0.242000000000001 
>> Linear regr. over a 3000x3000 matrix (c = a \ b')___ (sec):  0.170999999999999 
>>                     --------------------------------------------
>>                Trimmed geom. mean (2 extremes eliminated):  0.29781941072597 
>> 
>>  II. Matrix functions
>>  --------------------
>> FFT over 2,400,000 random values____________________ (sec):  0.331333333333333 
>> Eigenvalues of a 640x640 random matrix______________ (sec):  0.347000000000001 
>> Determinant of a 2500x2500 random matrix____________ (sec):  0.207000000000001 
>> Cholesky decomposition of a 3000x3000 matrix________ (sec):  0.254333333333334 
>> Inverse of a 1600x1600 random matrix________________ (sec):  0.345666666666663 
>>                     --------------------------------------------
>>               Trimmed geom. mean (2 extremes eliminated):  0.307686639256803 
>> 
>>  III. Programmation
>>  ------------------
>> 3,500,000 Fibonacci numbers calculation (vector calc)(sec):  0.245 
>> Creation of a 3000x3000 Hilbert matrix (matrix calc) (sec):  0.289666666666669 
>> Grand common divisors of 400,000 pairs (recursion)__ (sec):  0.259333333333331 
>> Creation of a 500x500 Toeplitz matrix (loops)_______ (sec):  0.0400000000000015 
>> Escoufier's method on a 45x45 matrix (mixed)________ (sec):  0.263000000000005 
>>                     --------------------------------------------
>>               Trimmed geom. mean (2 extremes eliminated):  0.255658395143118 
>> 
>> 
>> Total time for all 15 tests_________________________ (sec):  4.61866666666667 
>> Overall mean (sum of I, II and III trimmed means/3)_ (sec):  0.286136920519432 
>>                     --- End of test ---
>> 
>> 
>> 
>>> On Nov 1, 2021, at 2:48 AM, Tim Bates <timothy.c.bates at gmail.com> wrote:
>>> 
>>> I wonder if this (2008/R 2.7) page could be updated with some current benchmark runs?
>>> 
>>> Especially current Intel server chips, i9, and M1/+ 
>>> 
>>> I'm guessing if Simon could help upload the resulting updated page, people here could contribute bench mark runs on different hardware.
>>> 
>>> 
>>> Also be interesting to see different blas results.
>>> 
>>> I wonder if either intel or arm chip "neural" cores (dot product engines?) or multi-core and GPU are being used in current R builds?
>>> 
>>> tim
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From kjhe@|y @end|ng |rom gm@||@com  Mon Nov  1 03:00:31 2021
From: kjhe@|y @end|ng |rom gm@||@com (Kieran Healy)
Date: Sun, 31 Oct 2021 22:00:31 -0400
Subject: [R-SIG-Mac] https://mac.r-project.org/benchmarks/
In-Reply-To: <6C4FABC7-3654-470A-B68F-3050782D3A5A@R-project.org>
References: <F311C911-F19E-4CC4-B177-34EFBFC32CC9@gmail.com>
 <8D07527C-3EF3-4815-8B1E-E8ED939611AF@R-project.org>
 <9C722E0A-DF3F-45AF-9DA2-A8D152B3AF02@gmail.com>
 <6C4FABC7-3654-470A-B68F-3050782D3A5A@R-project.org>
Message-ID: <EB4445AE-1F58-4376-8323-DB58AB356177@gmail.com>

Thanks, Simon. 

With the vecLib/Accelerate BLAS, the results are indeed rather faster :)

Kieran


14? MacBook Pro / M1 Max

   R Benchmark 2.5
   ===============
Number of times each test is run__________________________:  3

   I. Matrix calculation
   ---------------------
Creation, transp., deformation of a 2500x2500 matrix (sec):  0.260999999999999
2400x2400 normal distributed random matrix ^1000____ (sec):  0.105
Sorting of 7,000,000 random values__________________ (sec):  0.595
2800x2800 cross-product matrix (b = a' * a)_________ (sec):  0.056666666666666
Linear regr. over a 3000x3000 matrix (c = a \ b')___ (sec):  0.0446666666666668
                      --------------------------------------------
                 Trimmed geom. mean (2 extremes eliminated):  0.115802825957684

   II. Matrix functions
   --------------------
FFT over 2,400,000 random values____________________ (sec):  0.0723333333333329
Eigenvalues of a 640x640 random matrix______________ (sec):  0.156666666666667
Determinant of a 2500x2500 random matrix____________ (sec):  0.098999999999999
Cholesky decomposition of a 3000x3000 matrix________ (sec):  0.0716666666666654
Inverse of a 1600x1600 random matrix________________ (sec):  0.082666666666667
                      --------------------------------------------
                Trimmed geom. mean (2 extremes eliminated):  0.0839655943753058

   III. Programmation
   ------------------
3,500,000 Fibonacci numbers calculation (vector calc)(sec):  0.0933333333333337
Creation of a 3000x3000 Hilbert matrix (matrix calc) (sec):  0.112333333333332
Grand common divisors of 400,000 pairs (recursion)__ (sec):  0.0776666666666657
Creation of a 500x500 Toeplitz matrix (loops)_______ (sec):  0.0173333333333332
Escoufier's method on a 45x45 matrix (mixed)________ (sec):  0.111999999999998
                      --------------------------------------------
                Trimmed geom. mean (2 extremes eliminated):  0.0932888677080541


Total time for all 15 tests_________________________ (sec):  1.95733333333333
Overall mean (sum of I, II and III trimmed means/3)_ (sec):  0.0968018035139188
                      --- End of test ---

> On Oct 31, 2021, at 9:03 PM, Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> Kieran,
> 
> the reference benchmarks have been calibrated against vecLib/Accelerate BLAS. If you use reference BLAS it can be a lot slower. You can switch between reference BLAS and vecLib in R CRAN releases simply by switching the libRblas.dylib symlink (in $R_HOME/lib), e.g.:
> 
> ls -l /Library/Frameworks/R.framework/Resources/lib/libRblas*dylib
> -rwxrwxr-x  1 root     admin  226288 Oct 31 14:41 /Library/Frameworks/R.framework/Resources/lib/libRblas.0.dylib
> lrwxr-xr-x  1 root.    admin      21 Nov  1 09:56 /Library/Frameworks/R.framework/Resources/lib/libRblas.dylib -> libRblas.vecLib.dylib
> -rwxrwxr-x  1 root     admin  154368 Oct 31 14:41 /Library/Frameworks/R.framework/Resources/lib/libRblas.vecLib.dylib
> 
> (For recent R you'll need R 4.1.1 or higher)
> 
> Cheers,
> Simon
> 
> PS: reminder to everyone, please test R 4.1.2 RC - now are the last few hours to report anything!
> 
> 


From k@@perd@n|e|h@n@en @end|ng |rom gm@||@com  Tue Nov  2 01:41:45 2021
From: k@@perd@n|e|h@n@en @end|ng |rom gm@||@com (Kasper Daniel Hansen)
Date: Mon, 1 Nov 2021 20:41:45 -0400
Subject: [R-SIG-Mac] https://mac.r-project.org/benchmarks/
In-Reply-To: <EB4445AE-1F58-4376-8323-DB58AB356177@gmail.com>
References: <F311C911-F19E-4CC4-B177-34EFBFC32CC9@gmail.com>
 <8D07527C-3EF3-4815-8B1E-E8ED939611AF@R-project.org>
 <9C722E0A-DF3F-45AF-9DA2-A8D152B3AF02@gmail.com>
 <6C4FABC7-3654-470A-B68F-3050782D3A5A@R-project.org>
 <EB4445AE-1F58-4376-8323-DB58AB356177@gmail.com>
Message-ID: <CAC2h7uuxM5WiTROzazVcVzJun_JtC4xYvrwm2u2sgR+eN9JMfA@mail.gmail.com>

Out of curiosity, do we know if vecLib/Accelerate has been optimized for
M1?

On Sun, Oct 31, 2021 at 10:00 PM Kieran Healy <kjhealy at gmail.com> wrote:

> Thanks, Simon.
>
> With the vecLib/Accelerate BLAS, the results are indeed rather faster :)
>
> Kieran
>
>
> 14? MacBook Pro / M1 Max
>
>    R Benchmark 2.5
>    ===============
> Number of times each test is run__________________________:  3
>
>    I. Matrix calculation
>    ---------------------
> Creation, transp., deformation of a 2500x2500 matrix (sec):
> 0.260999999999999
> 2400x2400 normal distributed random matrix ^1000____ (sec):  0.105
> Sorting of 7,000,000 random values__________________ (sec):  0.595
> 2800x2800 cross-product matrix (b = a' * a)_________ (sec):
> 0.056666666666666
> Linear regr. over a 3000x3000 matrix (c = a \ b')___ (sec):
> 0.0446666666666668
>                       --------------------------------------------
>                  Trimmed geom. mean (2 extremes eliminated):
> 0.115802825957684
>
>    II. Matrix functions
>    --------------------
> FFT over 2,400,000 random values____________________ (sec):
> 0.0723333333333329
> Eigenvalues of a 640x640 random matrix______________ (sec):
> 0.156666666666667
> Determinant of a 2500x2500 random matrix____________ (sec):
> 0.098999999999999
> Cholesky decomposition of a 3000x3000 matrix________ (sec):
> 0.0716666666666654
> Inverse of a 1600x1600 random matrix________________ (sec):
> 0.082666666666667
>                       --------------------------------------------
>                 Trimmed geom. mean (2 extremes eliminated):
> 0.0839655943753058
>
>    III. Programmation
>    ------------------
> 3,500,000 Fibonacci numbers calculation (vector calc)(sec):
> 0.0933333333333337
> Creation of a 3000x3000 Hilbert matrix (matrix calc) (sec):
> 0.112333333333332
> Grand common divisors of 400,000 pairs (recursion)__ (sec):
> 0.0776666666666657
> Creation of a 500x500 Toeplitz matrix (loops)_______ (sec):
> 0.0173333333333332
> Escoufier's method on a 45x45 matrix (mixed)________ (sec):
> 0.111999999999998
>                       --------------------------------------------
>                 Trimmed geom. mean (2 extremes eliminated):
> 0.0932888677080541
>
>
> Total time for all 15 tests_________________________ (sec):
> 1.95733333333333
> Overall mean (sum of I, II and III trimmed means/3)_ (sec):
> 0.0968018035139188
>                       --- End of test ---
>
> > On Oct 31, 2021, at 9:03 PM, Simon Urbanek <simon.urbanek at R-project.org>
> wrote:
> >
> > Kieran,
> >
> > the reference benchmarks have been calibrated against vecLib/Accelerate
> BLAS. If you use reference BLAS it can be a lot slower. You can switch
> between reference BLAS and vecLib in R CRAN releases simply by switching
> the libRblas.dylib symlink (in $R_HOME/lib), e.g.:
> >
> > ls -l /Library/Frameworks/R.framework/Resources/lib/libRblas*dylib
> > -rwxrwxr-x  1 root     admin  226288 Oct 31 14:41
> /Library/Frameworks/R.framework/Resources/lib/libRblas.0.dylib
> > lrwxr-xr-x  1 root.    admin      21 Nov  1 09:56
> /Library/Frameworks/R.framework/Resources/lib/libRblas.dylib ->
> libRblas.vecLib.dylib
> > -rwxrwxr-x  1 root     admin  154368 Oct 31 14:41
> /Library/Frameworks/R.framework/Resources/lib/libRblas.vecLib.dylib
> >
> > (For recent R you'll need R 4.1.1 or higher)
> >
> > Cheers,
> > Simon
> >
> > PS: reminder to everyone, please test R 4.1.2 RC - now are the last few
> hours to report anything!
> >
> >
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


-- 
Best,
Kasper

	[[alternative HTML version deleted]]


From t|m@b@te@ @end|ng |rom ed@@c@uk  Tue Nov  2 12:51:55 2021
From: t|m@b@te@ @end|ng |rom ed@@c@uk (BATES Timothy)
Date: Tue, 2 Nov 2021 11:51:55 +0000
Subject: [R-SIG-Mac] https://mac.r-project.org/benchmarks/
In-Reply-To: <6C4FABC7-3654-470A-B68F-3050782D3A5A@R-project.org>
References: <F311C911-F19E-4CC4-B177-34EFBFC32CC9@gmail.com>
 <8D07527C-3EF3-4815-8B1E-E8ED939611AF@R-project.org>
 <9C722E0A-DF3F-45AF-9DA2-A8D152B3AF02@gmail.com>
 <6C4FABC7-3654-470A-B68F-3050782D3A5A@R-project.org>
Message-ID: <C523A409-C396-4CCB-B33A-CEA14EFD51A4@ed.ac.uk>

Just for normies like me who don?t know what Simon meant :-)

1. Open terminal.app and cd to where the relevant files are to keep commands manageable in length

cd /Library/Frameworks/R.framework/Resources/lib/

2. Find the paths to different versions of veclib by  ls?ing the directory they should live in:

ls -l libRblas*dylib

The existing symbolic link will look like this

lrwxr-xr-x  1 root  admin      16 24 Sep 12:10 libRblas.dylib -> libRblas.0.dylib


Which means calls to ?libRblas.dylib? will resolve to "libRblas.0.dylib"

3. Overwrite this link with a new one from Apple's veclib (libRblas.vecLib.dylib ) to libRblas.dylib

ln -s -i -v libRblas.vecLib.dylib libRblas.dylib


When you restart R, it should now call libRblas.vecLib.dylib for math

To switch back

cd /Library/Frameworks/R.framework/Resources/lib/
ln -s -i -v libRblas.0.dylib libRblas.dylib

t

PS: The performance boost is staggering!!

   I. Matrix calculation        Apple Blas (Sec)        Default Blas (Sec)      gain (loss)
Creation, transp., deformation of a 2500x2500 matrix    0.546   0.672   123%
2400x2400 normal distributed random matrix ^1000        0.139   0.139   100%
Sorting of 7,000,000 random values      0.600   0.605   101%
2800x2800 cross-product matrix (b = a' * a)     0.210   9.061   4315%   !!
Linear regr. over a 3000x3000 matrix (c = a \ b')       0.134   4.379   3276%
                 Trimmed geom. mean (2 extremes eliminated)     0.252   1.212   482%
   II. Matrix functions
FFT over 2,400,000 random values        0.198   0.183   92%
Eigenvalues of a 640x640 random matrix  0.295   0.625   212%
Determinant of a 2500x2500 random matrix        0.146   2.891   1980%   !!
Cholesky decomposition of a 3000x3000 matrix    0.222   3.772   1696%   !!
Inverse of a 1600x1600 random matrix    0.284   2.417   852%
                Trimmed geom. mean (2 extremes eliminated)      0.232   1.634   704%
   III. Programmation
3,500,000 Fibonacci numbers calculation (vector calc)   0.204   0.204   100%
Creation of a 3000x3000 Hilbert matrix (matrix calc)    0.232   0.211   91%
Grand common divisors of 400,000 pairs (recursion)      0.274   0.243   89%
Creation of a 500x500 Toeplitz matrix (loops)   0.038   0.041   106%
Escoufier's method on a 45x45 matrix (mixed)    0.260   0.307   118%
                Trimmed geom. mean (2 extremes eliminated)      0.231   0.219   95%
Total time for all 15 tests     3.782   25.749  681%
Overall mean (sum of I, II and III trimmed means/3)     0.238   0.757   318%
The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. Is e buidheann carthannais a th? ann an Oilthigh Dh?n ?ideann, cl?raichte an Alba, ?ireamh cl?raidh SC005336.

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Nov  3 13:21:14 2021
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 3 Nov 2021 13:21:14 +0100
Subject: [R-SIG-Mac] ANSI escape weirdness on M1 (libedit issue?)
Message-ID: <CABtg=K=C7sbtr-b8+DuACeFoGe6X=OeCRUss0Z2TOLu6+9NZXw@mail.gmail.com>

Anyone else noticed some weirdness with the arm build when the prompt
has ANSI escape codes?

E.g. in a terminal run this
options(prompt = "\033[1m> \033[0m")

and then at the new prompt type in some longer word and press CTRL+A.
The cursor does not go back to the beginning of the line, probably
because the width of the prompt is not calculated correctly by the
underlying system library.

readline is not listed at https://mac.r-project.org/libs-arm64/ while
it is listed among the intel libs. Does that mean that R uses libedit
on arm64? Is this an issue with libedit?

Thanks,
Gabor


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Wed Nov  3 19:00:29 2021
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Wed, 3 Nov 2021 18:00:29 +0000
Subject: [R-SIG-Mac] ANSI escape weirdness on M1 (libedit issue?)
In-Reply-To: <CABtg=K=C7sbtr-b8+DuACeFoGe6X=OeCRUss0Z2TOLu6+9NZXw@mail.gmail.com>
References: <CABtg=K=C7sbtr-b8+DuACeFoGe6X=OeCRUss0Z2TOLu6+9NZXw@mail.gmail.com>
Message-ID: <36f893c4-e203-86d1-b4eb-e7208d3d2e00@stats.ox.ac.uk>

On 03/11/2021 12:21, G?bor Cs?rdi wrote:
> Anyone else noticed some weirdness with the arm build when the prompt
> has ANSI escape codes?
> 
> E.g. in a terminal run this
> options(prompt = "\033[1m> \033[0m")
> 
> and then at the new prompt type in some longer word and press CTRL+A.

Longer than what?

> The cursor does not go back to the beginning of the line, probably
> because the width of the prompt is not calculated correctly by the
> underlying system library.
> 
> readline is not listed at https://mac.r-project.org/libs-arm64/ while
> it is listed among the intel libs. Does that mean that R uses libedit
> on arm64? Is this an issue with libedit?

This is why we added extSoftversion(): please use it.

For my personal build of R-patched (which uses readline 8.1) this works 
as I expected.  With the CRAN build of 4.1.2 I do see some weirdness, e.g.

 > options(prompt = "\033[1mR> \033[0m")
R> abcdef

where after the Ctrl-A the cursor moves forwards a couple of characters. 
  (That 'R>' is bold will not show up in an email.

All on Monterey 12.0.1.

AFAIK the reason for not distributing readline with binary distributions 
of R is perceived licence restrictions.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Nov  3 19:12:06 2021
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 3 Nov 2021 19:12:06 +0100
Subject: [R-SIG-Mac] ANSI escape weirdness on M1 (libedit issue?)
In-Reply-To: <36f893c4-e203-86d1-b4eb-e7208d3d2e00@stats.ox.ac.uk>
References: <CABtg=K=C7sbtr-b8+DuACeFoGe6X=OeCRUss0Z2TOLu6+9NZXw@mail.gmail.com>
 <36f893c4-e203-86d1-b4eb-e7208d3d2e00@stats.ox.ac.uk>
Message-ID: <CABtg=KmPK_fT5DoZ9-TjLeS3LDpQQXwKywZtVyU3cB6nAUs8eA@mail.gmail.com>

On Wed, Nov 3, 2021 at 7:00 PM Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
[...]
> AFAIK the reason for not distributing readline with binary distributions
> of R is perceived licence restrictions.

So is the license different for x86_64? Because those builds come with readline:
? R-4.1 -q -e 'extSoftVersion()[["readline"]]'
> extSoftVersion()[["readline"]]
[1] "5.2"

Whereas the arm64 build has:
? R-4.1-arm64 -q -e 'extSoftVersion()[["readline"]]'
> extSoftVersion()[["readline"]]
[1] "4.2 (EditLine wrapper)"

Gabor


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Nov  3 22:55:05 2021
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 4 Nov 2021 10:55:05 +1300
Subject: [R-SIG-Mac] ANSI escape weirdness on M1 (libedit issue?)
In-Reply-To: <CABtg=KmPK_fT5DoZ9-TjLeS3LDpQQXwKywZtVyU3cB6nAUs8eA@mail.gmail.com>
References: <CABtg=K=C7sbtr-b8+DuACeFoGe6X=OeCRUss0Z2TOLu6+9NZXw@mail.gmail.com>
 <36f893c4-e203-86d1-b4eb-e7208d3d2e00@stats.ox.ac.uk>
 <CABtg=KmPK_fT5DoZ9-TjLeS3LDpQQXwKywZtVyU3cB6nAUs8eA@mail.gmail.com>
Message-ID: <96F39B02-CABA-4D69-BA25-D76462FBC975@R-project.org>


Gabor,

as you can see the x86_64 readline is a very old build 5.2-14 - it is the last version released under GPL-2. Later versions are to my best knowledge license-incompatible since they are released under GPL-3 only and thus do not allow the use in GPL-2 software. The arm64 version currently relies on the system library which is libedit. If it is of interest I can check if readline 5.2 can be built for arm64, but it predates the architecture by quite a few years ;).

Cheers,
Simon


> On Nov 4, 2021, at 7:12 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> 
> On Wed, Nov 3, 2021 at 7:00 PM Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> [...]
>> AFAIK the reason for not distributing readline with binary distributions
>> of R is perceived licence restrictions.
> 
> So is the license different for x86_64? Because those builds come with readline:
> ? R-4.1 -q -e 'extSoftVersion()[["readline"]]'
>> extSoftVersion()[["readline"]]
> [1] "5.2"
> 
> Whereas the arm64 build has:
> ? R-4.1-arm64 -q -e 'extSoftVersion()[["readline"]]'
>> extSoftVersion()[["readline"]]
> [1] "4.2 (EditLine wrapper)"
> 
> Gabor
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From @@ch@ndh|@| @end|ng |rom bt|nternet@com  Mon Nov  8 11:39:33 2021
From: @@ch@ndh|@| @end|ng |rom bt|nternet@com (Amarjit Chandhial)
Date: Mon, 8 Nov 2021 10:39:33 +0000 (GMT)
Subject: [R-SIG-Mac] Uninstall R for clean install of R on a Mac
Message-ID: <3708b908.394ae.17cff21bd7a.Webtop.105@btinternet.com>


Hi


This is probably an email for Simon Urbanek.

I have been an R user on Windows for many years, however switched to 
using R on my MacBook Pro 2012 running MacOS Mojave 10.14.6.

Please can you provide instructions on how to properly and completely 
uninstall R (I am currently using R 4.1.1), so I may make a clean 
install of R 4.1.2.


thanks,
Amarjit


	[[alternative HTML version deleted]]


From er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t  Mon Nov  8 11:43:42 2021
From: er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t (Erich Neuwirth)
Date: Mon, 8 Nov 2021 11:43:42 +0100
Subject: [R-SIG-Mac] Uninstall R for clean install of R on a Mac
In-Reply-To: <3708b908.394ae.17cff21bd7a.Webtop.105@btinternet.com>
References: <3708b908.394ae.17cff21bd7a.Webtop.105@btinternet.com>
Message-ID: <8F399A66-01D1-444A-9A52-31DBD4B5FA22@univie.ac.at>

Reading the documentation might help.
From the

R for macOS FAQ

1.3 How can R for macOS be obtained and installed?

R is available on CRAN in the form of an Installer package containing the R framework and the R.APP GUI. The package is usually named R.pkg with an optional version number.

The installation is done by double-clicking on the Installer package. The Installer will guide you through the necessary steps. Note that it will require password or login of an account with administrator privileges. The installation can be customized, but the default is suitable for most users.

Snapshots of the R-patched and R-devel flavours are available at http://mac.R-project.org/, packaged in the same way.

Further details, including uninstallation and building R from the sources, are in the ?R Installation and Administration Manual?.




> On 08.11.2021, at 11:39, Amarjit Chandhial via R-SIG-Mac <r-sig-mac at r-project.org> wrote:
> 
> 
> Hi
> 
> 
> This is probably an email for Simon Urbanek.
> 
> I have been an R user on Windows for many years, however switched to
> using R on my MacBook Pro 2012 running MacOS Mojave 10.14.6.
> 
> Please can you provide instructions on how to properly and completely
> uninstall R (I am currently using R 4.1.1), so I may make a clean
> install of R 4.1.2.
> 
> 
> thanks,
> Amarjit
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 699 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20211108/4fd01e48/attachment.sig>

From @@ch@ndh|@| @end|ng |rom bt|nternet@com  Mon Nov  8 11:51:12 2021
From: @@ch@ndh|@| @end|ng |rom bt|nternet@com (Amarjit Chandhial)
Date: Mon, 8 Nov 2021 10:51:12 +0000 (GMT)
Subject: [R-SIG-Mac] Uninstall R for clean install of R on a Mac
In-Reply-To: <8F399A66-01D1-444A-9A52-31DBD4B5FA22@univie.ac.at>
References: <3708b908.394ae.17cff21bd7a.Webtop.105@btinternet.com>
 <8F399A66-01D1-444A-9A52-31DBD4B5FA22@univie.ac.at>
Message-ID: <5316acfc.39589.17cff2c6689.Webtop.105@btinternet.com>




Hi Eric,


Thanks for the reply,

I know how to install R. My question was for exact instructions on how 
to properly and completely uninstall R on a Mac.


thanks,
Amarjit



------ Original Message ------
From: "Erich Neuwirth" <erich.neuwirth at univie.ac.at>
To: a.chandhial at btinternet.com
Cc: "R-SIG-MAC" <r-sig-mac at r-project.org>
Sent: Monday, 8 Nov, 2021 At 10:43
Subject: Re: [R-SIG-Mac] Uninstall R for clean install of R on a Mac
Reading the documentation might help.
 From the
R for macOS FAQ
1.3 How can R for macOS be obtained and installed?
R is available on CRAN in the form of an Installer package containing 
the R framework and the R.APP GUI. The package is usually named R.pkg 
with an optional version number.
The installation is done by double-clicking on the Installer package. 
The Installer will guide you through the necessary steps. Note that it 
will require password or login of an account with administrator 
privileges. The installation can be customized, but the default is 
suitable for most users.
Snapshots of the R-patched and R-devel flavours are available at 
http://mac.R-project.org/, <http://mac.R-project.org/,>  packaged in the 
same way.
Further details, including uninstallation and building R from the 
sources, are in the ?R Installation and Administration Manual?.


On 08.11.2021, at 11:39, Amarjit Chandhial via R-SIG-Mac 
<r-sig-mac at r-project.org> wrote:

Hi

This is probably an email for Simon Urbanek.
I have been an R user on Windows for many years, however switched to
using R on my MacBook Pro 2012 running MacOS Mojave 10.14.6.
Please can you provide instructions on how to properly and completely
uninstall R (I am currently using R 4.1.1), so I may make a clean
install of R 4.1.2.

thanks,
Amarjit

	[[alternative HTML version deleted]]
_______________________________________________
R-SIG-Mac mailing list
R-SIG-Mac at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-mac 
<https://stat.ethz.ch/mailman/listinfo/r-sig-mac>


	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Nov  8 11:52:43 2021
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 8 Nov 2021 23:52:43 +1300
Subject: [R-SIG-Mac] Uninstall R for clean install of R on a Mac
In-Reply-To: <3708b908.394ae.17cff21bd7a.Webtop.105@btinternet.com>
References: <3708b908.394ae.17cff21bd7a.Webtop.105@btinternet.com>
Message-ID: <DF888F31-FDEB-4F5B-B763-A62546D0C7DD@R-project.org>


Drag the R framework and R application to trash. They are under /Applications and /Library/Frameworks.

If you are more comfortable with the command line, using Terminal you can use

rm -rf /Library/Frameworks/R.framework
rm -rf /Applications/R.app

If you get any permission issues, prepend sudo before the command.

Cheers,
Simon



> On Nov 8, 2021, at 11:39 PM, Amarjit Chandhial via R-SIG-Mac <r-sig-mac at r-project.org> wrote:
> 
> 
> Hi
> 
> 
> This is probably an email for Simon Urbanek.
> 
> I have been an R user on Windows for many years, however switched to 
> using R on my MacBook Pro 2012 running MacOS Mojave 10.14.6.
> 
> Please can you provide instructions on how to properly and completely 
> uninstall R (I am currently using R 4.1.1), so I may make a clean 
> install of R 4.1.2.
> 
> 
> thanks,
> Amarjit
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From @@ch@ndh|@| @end|ng |rom bt|nternet@com  Mon Nov  8 12:02:28 2021
From: @@ch@ndh|@| @end|ng |rom bt|nternet@com (Amarjit Chandhial)
Date: Mon, 8 Nov 2021 11:02:28 +0000 (GMT)
Subject: [R-SIG-Mac] Uninstall R for clean install of R on a Mac
In-Reply-To: <DF888F31-FDEB-4F5B-B763-A62546D0C7DD@R-project.org>
References: <3708b908.394ae.17cff21bd7a.Webtop.105@btinternet.com>
 <DF888F31-FDEB-4F5B-B763-A62546D0C7DD@R-project.org>
Message-ID: <1fcbb7ea.39656.17cff36b721.Webtop.105@btinternet.com>





Many Thanks.


Amarjit



------ Original Message ------
From: "Simon Urbanek" <simon.urbanek at R-project.org>
To: a.chandhial at btinternet.com
Cc: r-sig-mac at r-project.org
Sent: Monday, 8 Nov, 2021 At 10:52
Subject: Re: [R-SIG-Mac] Uninstall R for clean install of R on a Mac
Drag the R framework and R application to trash. They are under 
/Applications and /Library/Frameworks.
If you are more comfortable with the command line, using Terminal you 
can use
rm -rf /Library/Frameworks/R.framework
rm -rf /Applications/R.app
If you get any permission issues, prepend sudo before the command.
Cheers,
Simon

On Nov 8, 2021, at 11:39 PM, Amarjit Chandhial via R-SIG-Mac 
<r-sig-mac at r-project.org> wrote:

Hi

This is probably an email for Simon Urbanek.
I have been an R user on Windows for many years, however switched to
using R on my MacBook Pro 2012 running MacOS Mojave 10.14.6.
Please can you provide instructions on how to properly and completely
uninstall R (I am currently using R 4.1.1), so I may make a clean
install of R 4.1.2.

thanks,
Amarjit

	[[alternative HTML version deleted]]
_______________________________________________
R-SIG-Mac mailing list
R-SIG-Mac at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-mac 
<https://stat.ethz.ch/mailman/listinfo/r-sig-mac>


	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Nov 12 23:11:56 2021
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 12 Nov 2021 23:11:56 +0100
Subject: [R-SIG-Mac] ANSI escape weirdness on M1 (libedit issue?)
In-Reply-To: <96F39B02-CABA-4D69-BA25-D76462FBC975@R-project.org>
References: <CABtg=K=C7sbtr-b8+DuACeFoGe6X=OeCRUss0Z2TOLu6+9NZXw@mail.gmail.com>
 <36f893c4-e203-86d1-b4eb-e7208d3d2e00@stats.ox.ac.uk>
 <CABtg=KmPK_fT5DoZ9-TjLeS3LDpQQXwKywZtVyU3cB6nAUs8eA@mail.gmail.com>
 <96F39B02-CABA-4D69-BA25-D76462FBC975@R-project.org>
Message-ID: <CABtg=KkEyVjdwcciWyqC7q_Shs4PUuqKZFQGKj+4FpRfvKNXNg@mail.gmail.com>

Thanks for the answer, I actually just saw this today, it went into my
spam folder for some reason.

Anyway, I tried to build readline 5.2 and it wasn't that bad. I got
the source for the libreadline-gplv2-dev Debian package
(https://packages.debian.org/stretch/libreadline-gplv2-dev). This is
readline 5.2 plus some readline patches and some more Debian patches.
It is easiest to do this in Debian, where `apt-get source` applies the
patches automatically. I used Debian Buster. After that I only had to
add two

#include <sys/ioctl.h>

lines to terminal.c and rltty.c.

I put the patched tarball here if you don't want to patch it yourself:
https://files.r-hub.io/readline/ I did build R-devel against it, and
it seems to work great.

In summary, this should do it:

curl -O https://files.r-hub.io/readline/readline5-5.2+dfsg-1.tar.gz
tar xzf readline5-5.2+dfsg-1.tar.gz
cd readline5-5.2+dfsg
./configure --prefix=/opt/R/arm64 --enable-static --enable-shared=NO
make
sudo make install

(Some info doc is missing for me, but that does not seem important.)

I am hopeful that this will work out.

Best,
Gabor

On Wed, Nov 3, 2021 at 11:00 PM Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> Gabor,
>
> as you can see the x86_64 readline is a very old build 5.2-14 - it is the last version released under GPL-2. Later versions are to my best knowledge license-incompatible since they are released under GPL-3 only and thus do not allow the use in GPL-2 software. The arm64 version currently relies on the system library which is libedit. If it is of interest I can check if readline 5.2 can be built for arm64, but it predates the architecture by quite a few years ;).
>
> Cheers,
> Simon
>
>
> > On Nov 4, 2021, at 7:12 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> >
> > On Wed, Nov 3, 2021 at 7:00 PM Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> > [...]
> >> AFAIK the reason for not distributing readline with binary distributions
> >> of R is perceived licence restrictions.
> >
> > So is the license different for x86_64? Because those builds come with readline:
> > ? R-4.1 -q -e 'extSoftVersion()[["readline"]]'
> >> extSoftVersion()[["readline"]]
> > [1] "5.2"
> >
> > Whereas the arm64 build has:
> > ? R-4.1-arm64 -q -e 'extSoftVersion()[["readline"]]'
> >> extSoftVersion()[["readline"]]
> > [1] "4.2 (EditLine wrapper)"
> >
> > Gabor
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
>


From kjsch@udt m@iii@g oii sch@udt@us  Sat Nov 13 17:33:36 2021
From: kjsch@udt m@iii@g oii sch@udt@us (kjsch@udt m@iii@g oii sch@udt@us)
Date: Sat, 13 Nov 2021 16:33:36 +0000
Subject: [R-SIG-Mac] R / Rstudio and curl on Mac Mojave
Message-ID: <20211113163336.Horde.b-T0dDWxPacwrJFaisk6FQk@webmail.schaudt.us>


Lets Encrypt and curl under Mojave on a Mac:

How does one work around the expiration of the Lets Encrypt  
certificates when running on Mojave?

Under R control, I download a list of stations, select the proper ones  
and download.

station_link = "https://ntl.gcoos.org/station_table.txt"
HtmlLink <- paste(station_link)
dest = paste("data/station_list.txt")
curl_download(url =HtmlLink ,destfile=dest,quiet=FALSE, mode="wb")

This fails due to the certificate issues.

Similarly, system("curl https://ntl.gcoos.org/station_table.txt  
-output table.txt") fails.

However, curl https://ntl.gcoos.org/station_table.txt -output  
table.txt works from the terminal!

Checking versions, I find that the terminal is using curl 7.8.    
system("curl -V") returns curl 7.54.

 From the terminal "which curl" points to curl 7.8 installed by mac ports.

from R, system("which curl") points to curl 7.54 which was installed  
during Mojave installation.

Apparently, "R"  ignores the $PATH statement and looks for the binary  
in /usr/bin/, neither curl from Brew, Macports or Anaconda helped.

Curl makes use of cacert.pem which isn't accepted by the Keychain.

Wiping a disk and building a fresh install did not help.

Updating to Catalina upgraded curl to version 7.80 which fixed the  
problem but killed my 32-bit applications.

Does anyone know a way to force R to follow the $PATH specification?


From c@@rd|@g@bor @end|ng |rom gm@||@com  Sat Nov 13 18:00:37 2021
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sat, 13 Nov 2021 18:00:37 +0100
Subject: [R-SIG-Mac] R / Rstudio and curl on Mac Mojave
In-Reply-To: <20211113163336.Horde.b-T0dDWxPacwrJFaisk6FQk@webmail.schaudt.us>
References: <20211113163336.Horde.b-T0dDWxPacwrJFaisk6FQk@webmail.schaudt.us>
Message-ID: <CABtg=KknfnjiXow7_C9gKfixGUN0MOxAQsdwkfbfi5RgoYsQAQ@mail.gmail.com>

The curl package does not use the command line curl program, it uses
libcurl, the library. You can use curl::curl_version() to see the
libcurl version that the curl package is using.

But in any case, this is not a curl or libcurl bug, but a
libressl/Mojave bug that Apple didn't fix, and probably won't fix
because Mojave is not supported any more.

You can fix it manually. You need to edit the /etc/ssl/cert.pem (make
a backup copy first), and remove the cert that expired on Sep 30
14:01:15 2021 GMT. Its entry starts with ## Digital Signature Trust
Co., until the end of the cert, the first -----END CERTIFICATE-----
line. You probably need sudo or the root user to edit it.

After you removed it, you can test it with something like

curl -v https://builder.r-hub.io >/dev/null

from a shell. This should fail before, and not fail after your edit.

Depending on which browser you use, you might need to update that as
well, at least I had to update chrome back then, on my Mojave machine.

Gabor

On Sat, Nov 13, 2021 at 5:34 PM <kjschaudt at schaudt.us> wrote:
>
>
> Lets Encrypt and curl under Mojave on a Mac:
>
> How does one work around the expiration of the Lets Encrypt
> certificates when running on Mojave?
>
> Under R control, I download a list of stations, select the proper ones
> and download.
>
> station_link = "https://ntl.gcoos.org/station_table.txt"
> HtmlLink <- paste(station_link)
> dest = paste("data/station_list.txt")
> curl_download(url =HtmlLink ,destfile=dest,quiet=FALSE, mode="wb")
>
> This fails due to the certificate issues.
>
> Similarly, system("curl https://ntl.gcoos.org/station_table.txt
> -output table.txt") fails.
>
> However, curl https://ntl.gcoos.org/station_table.txt -output
> table.txt works from the terminal!
>
> Checking versions, I find that the terminal is using curl 7.8.
> system("curl -V") returns curl 7.54.
>
>  From the terminal "which curl" points to curl 7.8 installed by mac ports.
>
> from R, system("which curl") points to curl 7.54 which was installed
> during Mojave installation.
>
> Apparently, "R"  ignores the $PATH statement and looks for the binary
> in /usr/bin/, neither curl from Brew, Macports or Anaconda helped.
>
> Curl makes use of cacert.pem which isn't accepted by the Keychain.
>
> Wiping a disk and building a fresh install did not help.
>
> Updating to Catalina upgraded curl to version 7.80 which fixed the
> problem but killed my 32-bit applications.
>
> Does anyone know a way to force R to follow the $PATH specification?
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From jeroenoom@ @end|ng |rom gm@||@com  Sat Nov 13 18:11:31 2021
From: jeroenoom@ @end|ng |rom gm@||@com (Jeroen Ooms)
Date: Sat, 13 Nov 2021 18:11:31 +0100
Subject: [R-SIG-Mac] R / Rstudio and curl on Mac Mojave
In-Reply-To: <CABtg=KknfnjiXow7_C9gKfixGUN0MOxAQsdwkfbfi5RgoYsQAQ@mail.gmail.com>
References: <20211113163336.Horde.b-T0dDWxPacwrJFaisk6FQk@webmail.schaudt.us>
 <CABtg=KknfnjiXow7_C9gKfixGUN0MOxAQsdwkfbfi5RgoYsQAQ@mail.gmail.com>
Message-ID: <CABFfbXv7GjUFoLqQ3jpcdHTZfggHRxN__tLbNQ7Oh9g6yZWrLA@mail.gmail.com>

On Sat, Nov 13, 2021 at 6:01 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>
> The curl package does not use the command line curl program, it uses
> libcurl, the library. You can use curl::curl_version() to see the
> libcurl version that the curl package is using.
>
> But in any case, this is not a curl or libcurl bug, but a
> libressl/Mojave bug that Apple didn't fix, and probably won't fix
> because Mojave is not supported any more.
>
> You can fix it manually. You need to edit the /etc/ssl/cert.pem (make
> a backup copy first), and remove the cert that expired on Sep 30
> 14:01:15 2021 GMT. Its entry starts with ## Digital Signature Trust
> Co., until the end of the cert, the first -----END CERTIFICATE-----
> line. You probably need sudo or the root user to edit it.

What Gabor says works; an alternative solution is just to update the
entire CA bundle. I use the following script on old macs:

    sudo cp /etc/ssl/cert.pem /etc/ssl/cert.bak
    sudo curl -k https://curl.se/ca/cacert.pem -o /etc/ssl/cert.pem

This will update the CA bundle to the current one from Mozilla, for
details see: https://curl.se/docs/caextract.html


From kj@ch@udt @end|ng |rom @ch@udt@u@  Sat Nov 13 21:23:35 2021
From: kj@ch@udt @end|ng |rom @ch@udt@u@ (K. J. Schaudt)
Date: Sat, 13 Nov 2021 14:23:35 -0600
Subject: [R-SIG-Mac] R / Rstudio and curl on Mac Mojave
In-Reply-To: <CABFfbXv7GjUFoLqQ3jpcdHTZfggHRxN__tLbNQ7Oh9g6yZWrLA@mail.gmail.com>
References: <20211113163336.Horde.b-T0dDWxPacwrJFaisk6FQk@webmail.schaudt.us>
 <CABtg=KknfnjiXow7_C9gKfixGUN0MOxAQsdwkfbfi5RgoYsQAQ@mail.gmail.com>
 <CABFfbXv7GjUFoLqQ3jpcdHTZfggHRxN__tLbNQ7Oh9g6yZWrLA@mail.gmail.com>
Message-ID: <569dd32e-2cf4-452f-b685-a297cb5b65da@schaudt.us>

Just want to thank Jeroen and Gabor for the help.?? With their aid, my 
cMPs are back up and running!

On Sat, Nov 13, 2021 at 6:01 PM G?bor Cs?rdi <csardi.gabor at gmail.com> 
wrote:
> The curl package does not use the command line curl program, it uses
> libcurl, the library. You can use curl::curl_version() to see the
> libcurl version that the curl package is using.
>
> But in any case, this is not a curl or libcurl bug, but a
> libressl/Mojave bug that Apple didn't fix, and probably won't fix
> because Mojave is not supported any more.
>
> You can fix it manually. You need to edit the /etc/ssl/cert.pem (make
> a backup copy first), and remove the cert that expired on Sep 30
> 14:01:15 2021 GMT. Its entry starts with ## Digital Signature Trust
> Co., until the end of the cert, the first -----END CERTIFICATE-----
> line. You probably need sudo or the root user to edit it.

What Gabor says works; an alternative solution is just to update the
entire CA bundle. I use the following script on old macs:

     sudo cp /etc/ssl/cert.pem /etc/ssl/cert.bak
     sudo curl -khttps://curl.se/ca/cacert.pem  -o /etc/ssl/cert.pem

This will update the CA bundle to the current one from Mozilla, for
details see:https://curl.se/docs/caextract.html

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Tue Nov 16 23:28:35 2021
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 16 Nov 2021 23:28:35 +0100
Subject: [R-SIG-Mac] Nightly build segfaults
Message-ID: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>

This is Monterey:
? uname -a
Darwin Gabors-MacBook-Pro-3.local 21.1.0 Darwin Kernel Version 21.1.0:
Wed Oct 13 17:33:01 PDT 2021; root:xnu-8019.41.5~1/RELEASE_ARM64_T6000
arm64

The R-devel build segfaults:

? curl -O https://mac.r-project.org/monterey/R-devel/arm64/R-devel.tar.gz
? sudo tar xzf R-devel.tar.gz -C /
? R -q --vanilla
zsh: killed     R -q --vanilla

So does the R-4.1 build:

? curl -O https://mac.r-project.org/monterey/R-4.1-branch/arm64/R-4.1-branch.tar.gz
? sudo tar xzf R-4.1-branch.tar.gz -C /
? R -q --vanilla
zsh: killed     R -q --vanilla

The big-sur arm64 builds at
https://mac.r-project.org/big-sur/R-devel/arm64/R-devel.tar.gz
and https://mac.r-project.org/big-sur/R-4.1-branch/arm64/R-4.1-branch.tar.gz
also do the same.

I know that another user has seen this as well, so chances are that it
is not some issue on my machine. Can anyone reproduce this?

Gabor


From |om@nm51994 @end|ng |rom gm@||@com  Wed Nov 17 01:11:45 2021
From: |om@nm51994 @end|ng |rom gm@||@com (Matt)
Date: Tue, 16 Nov 2021 19:11:45 -0500
Subject: [R-SIG-Mac] Error message folding/unfolding code in R GUI
Message-ID: <CAHnxy_1tAjXVjw_6Roj_guh3QyAp9z=95p5R9Yt=imcOjjrPKw@mail.gmail.com>

Hi, I occasionally get the following error message when folding/unfolding
code in the R GUI (not RStudio) for Mac. I haven't been able to narrow down
how to get it to happen consistently, but I see it a lot when
folding/unfolding functions I have placed consecutively at the beginning of
my script. The huge index number listed is the same every time.
Also, I'm not sure if this is related, but whenever I fold up a section of
code, it'll "eat" the first non-whitespace character *after* the last
bracket. It doesn't affect the code at all, but the character gets folded
up with the rest.

2021-11-16 18:55:30.849 R[25042:5539797] *** RController: caught ObjC
> exception while processing system events. Update to the latest GUI version
> and consider reporting this properly (see FAQ) if it persists and is not
> known.
> *** reason: *** -[__NSArrayM objectAtIndex:]: index 18446744073709551615
> beyond bounds [0 .. 555]
> *** name: NSRangeException, info: (null)
> *** Version: R 4.1.2 (81115) R.app R 4.1.2 GUI 1.77 High Sierra build
> Consider saving your work soon in case this develops into a problem.
>

-- Matt Loman

	[[alternative HTML version deleted]]


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Wed Nov 17 08:17:06 2021
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Wed, 17 Nov 2021 07:17:06 +0000
Subject: [R-SIG-Mac] Nightly build segfaults
In-Reply-To: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>
References: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>
Message-ID: <2b402ca6-8374-132d-1570-514b02c2f3d0@stats.ox.ac.uk>

On 16/11/2021 22:28, G?bor Cs?rdi wrote:
> This is Monterey:
> ? uname -a
> Darwin Gabors-MacBook-Pro-3.local 21.1.0 Darwin Kernel Version 21.1.0:
> Wed Oct 13 17:33:01 PDT 2021; root:xnu-8019.41.5~1/RELEASE_ARM64_T6000
> arm64
> 
> The R-devel build segfaults:
> 
> ? curl -O https://mac.r-project.org/monterey/R-devel/arm64/R-devel.tar.gz
> ? sudo tar xzf R-devel.tar.gz -C /
> ? R -q --vanilla
> zsh: killed     R -q --vanilla

That is not a segfault, although they have been seen to cause this 
behaviour.  It more often indicates a security issue: arm64 macOS is 
prone to doing so with incremental rebuilds of R that it thinks have 
been tampered with.

Try installing the .pkg.  (Downloading from mac.r-project.org is far too 
slow at the moment for me to do so, but I recall past troubles with the 
tarballs not seen with Installer packages.)

> 
> So does the R-4.1 build:
> 
> ? curl -O https://mac.r-project.org/monterey/R-4.1-branch/arm64/R-4.1-branch.tar.gz
> ? sudo tar xzf R-4.1-branch.tar.gz -C /
> ? R -q --vanilla
> zsh: killed     R -q --vanilla
> 
> The big-sur arm64 builds at
> https://mac.r-project.org/big-sur/R-devel/arm64/R-devel.tar.gz
> and https://mac.r-project.org/big-sur/R-4.1-branch/arm64/R-4.1-branch.tar.gz
> also do the same.
> 
> I know that another user has seen this as well, so chances are that it
> is not some issue on my machine. Can anyone reproduce this?
> 
> Gabor



-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Wed Nov 17 20:14:12 2021
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Wed, 17 Nov 2021 19:14:12 +0000
Subject: [R-SIG-Mac] Nightly build segfaults
In-Reply-To: <2b402ca6-8374-132d-1570-514b02c2f3d0@stats.ox.ac.uk>
References: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>
 <2b402ca6-8374-132d-1570-514b02c2f3d0@stats.ox.ac.uk>
Message-ID: <83eeac26-8473-20ae-6cab-3431d6aad9d3@stats.ox.ac.uk>

On 17/11/2021 07:17, Prof Brian Ripley wrote:
> On 16/11/2021 22:28, G?bor Cs?rdi wrote:
>> This is Monterey:
>> ? uname -a
>> Darwin Gabors-MacBook-Pro-3.local 21.1.0 Darwin Kernel Version 21.1.0:
>> Wed Oct 13 17:33:01 PDT 2021; root:xnu-8019.41.5~1/RELEASE_ARM64_T6000
>> arm64
>>
>> The R-devel build segfaults:
>>
>> ? curl -O https://mac.r-project.org/monterey/R-devel/arm64/R-devel.tar.gz
>> ? sudo tar xzf R-devel.tar.gz -C /
>> ? R -q --vanilla
>> zsh: killed???? R -q --vanilla
> 
> That is not a segfault, although they have been seen to cause this 
> behaviour.? It more often indicates a security issue: arm64 macOS is 
> prone to doing so with incremental rebuilds of R that it thinks have 
> been tampered with.

With the tarball I get a popup telling me

?R.framework? cannot be opened because the developer cannot be verified.

> Try installing the .pkg.? (Downloading from mac.r-project.org is far too 
> slow at the moment for me to do so, but I recall past troubles with the 
> tarballs not seen with Installer packages.)

And this evening downloads took a few seconds rather then the 2h 
predicted when I wrote that.

The .pkg I tried is unsigned/not notarized so cannot be installed, not 
even with 'Open With'.  But packages are at least sometimes signed.

> 
>>
>> So does the R-4.1 build:
>>
>> ? curl -O 
>> https://mac.r-project.org/monterey/R-4.1-branch/arm64/R-4.1-branch.tar.gz
>> ? sudo tar xzf R-4.1-branch.tar.gz -C /
>> ? R -q --vanilla
>> zsh: killed???? R -q --vanilla
>>
>> The big-sur arm64 builds at
>> https://mac.r-project.org/big-sur/R-devel/arm64/R-devel.tar.gz
>> and 
>> https://mac.r-project.org/big-sur/R-4.1-branch/arm64/R-4.1-branch.tar.gz
>> also do the same.
>>
>> I know that another user has seen this as well, so chances are that it
>> is not some issue on my machine. Can anyone reproduce this?
>>
>> Gabor
> 
> 
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Nov 17 20:32:50 2021
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 17 Nov 2021 20:32:50 +0100
Subject: [R-SIG-Mac] Nightly build segfaults
In-Reply-To: <83eeac26-8473-20ae-6cab-3431d6aad9d3@stats.ox.ac.uk>
References: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>
 <2b402ca6-8374-132d-1570-514b02c2f3d0@stats.ox.ac.uk>
 <83eeac26-8473-20ae-6cab-3431d6aad9d3@stats.ox.ac.uk>
Message-ID: <CABtg=Kmt5Gd0OmWUCUz4iv-QMuTJh9+cKn6HKr12tJPZ_Hh7HA@mail.gmail.com>

On Wed, Nov 17, 2021 at 8:14 PM Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
[...]
> With the tarball I get a popup telling me
>
> ?R.framework? cannot be opened because the developer cannot be verified.

Interesting. I am on 12.0.1 and there is no popup, but there is a
crash report with

Exception Type:        EXC_BAD_ACCESS (SIGKILL (Code Signature Invalid))

Possibly the popup was added in 12.1 beta.

[...]
> The .pkg I tried is unsigned/not notarized so cannot be installed, not
> even with 'Open With'.  But packages are at least sometimes signed.

FWIW I did some local builds on a Big Sur machine with Xcode 12.x with
the same settings as the CRAN builds (for readline support primarily),
and those (https://files.r-hub.io/macos/readline/) work fine on
Monterey as well.

Gabor

[...]


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Wed Nov 17 20:45:09 2021
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Wed, 17 Nov 2021 19:45:09 +0000
Subject: [R-SIG-Mac] Nightly build segfaults
In-Reply-To: <CABtg=Kmt5Gd0OmWUCUz4iv-QMuTJh9+cKn6HKr12tJPZ_Hh7HA@mail.gmail.com>
References: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>
 <2b402ca6-8374-132d-1570-514b02c2f3d0@stats.ox.ac.uk>
 <83eeac26-8473-20ae-6cab-3431d6aad9d3@stats.ox.ac.uk>
 <CABtg=Kmt5Gd0OmWUCUz4iv-QMuTJh9+cKn6HKr12tJPZ_Hh7HA@mail.gmail.com>
Message-ID: <bc212cb5-e0c8-638b-c142-d53ac6bb0683@stats.ox.ac.uk>

On 17/11/2021 19:32, G?bor Cs?rdi wrote:
> On Wed, Nov 17, 2021 at 8:14 PM Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> [...]
>> With the tarball I get a popup telling me
>>
>> ?R.framework? cannot be opened because the developer cannot be verified.
> 
> Interesting. I am on 12.0.1 and there is no popup, but there is a
> crash report with
> 
> Exception Type:        EXC_BAD_ACCESS (SIGKILL (Code Signature Invalid))
> 
> Possibly the popup was added in 12.1 beta.

I am running 12.0.1.
> 
> [...]
>> The .pkg I tried is unsigned/not notarized so cannot be installed, not
>> even with 'Open With'.  But packages are at least sometimes signed.
> 
> FWIW I did some local builds on a Big Sur machine with Xcode 12.x with
> the same settings as the CRAN builds (for readline support primarily),
> and those (https://files.r-hub.io/macos/readline/) work fine on
> Monterey as well.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Nov 17 20:52:42 2021
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 17 Nov 2021 20:52:42 +0100
Subject: [R-SIG-Mac] Nightly build segfaults
In-Reply-To: <bc212cb5-e0c8-638b-c142-d53ac6bb0683@stats.ox.ac.uk>
References: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>
 <2b402ca6-8374-132d-1570-514b02c2f3d0@stats.ox.ac.uk>
 <83eeac26-8473-20ae-6cab-3431d6aad9d3@stats.ox.ac.uk>
 <CABtg=Kmt5Gd0OmWUCUz4iv-QMuTJh9+cKn6HKr12tJPZ_Hh7HA@mail.gmail.com>
 <bc212cb5-e0c8-638b-c142-d53ac6bb0683@stats.ox.ac.uk>
Message-ID: <CABtg=Km3St762wduG=TZZp3pNBcjGgaZ4Kus=g3uFUKLX3Tc4w@mail.gmail.com>

On Wed, Nov 17, 2021 at 8:45 PM Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>
> On 17/11/2021 19:32, G?bor Cs?rdi wrote:
> > On Wed, Nov 17, 2021 at 8:14 PM Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> > [...]
> >> With the tarball I get a popup telling me
> >>
> >> ?R.framework? cannot be opened because the developer cannot be verified.
> >
> > Interesting. I am on 12.0.1 and there is no popup, but there is a
> > crash report with
> >
> > Exception Type:        EXC_BAD_ACCESS (SIGKILL (Code Signature Invalid))
> >
> > Possibly the popup was added in 12.1 beta.
>
> I am running 12.0.1.

Interesting. FWIW I tried to start it from an iTerm2 terminal, and
there was no popup, just the "Killed" message and the crash report.

Nevertheless the .tar.gz builds not working is an inconvenience,
because it seems that the only way to run lldb now is to turn off the
SIP.

AFAICT homebrew signs its arm64 binaries now, but they are not
notarized, and they seem to work fine. AFAICT they don't use the
hardened runtime, so they are not notarized and I can run lldb on
them.

Gabor


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Nov 18 03:58:40 2021
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 18 Nov 2021 15:58:40 +1300
Subject: [R-SIG-Mac] Nightly build segfaults
In-Reply-To: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>
References: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>
Message-ID: <131DC5F8-8C22-4AD5-90DC-89A2BBBA0245@R-project.org>


G?bor,

sorry for the late reply. The issue is that arm64 binaries get signed no matter what (requirement by the kernel), but our post-install process changes the path entries (moving dependent libraries to $R_HOME/lib etc.) which invalidates the (anonymous) signatures. For released pkg that's no problem, because the packaging process re-signs everything with proper developer account signature so it works, but the tar balls were packed up "raw" without signing. I have now added an extra step where the whole framework is re-signed before taring-up - but to address your concern it's just signed, no entitlements are added.

Some additional background - there are following layers:

1) unsigned
2) signed anonymously
3) signed with identity
4) hardened run-time / entitlements
5) notarization

On Intel 1) is all you need to run. On arm64 2) is required else you get the Trap: 9 error. 

Entitlements are additional key/values attached to a binary at signing which are used by the OS to determine what the binary is allowed to do. They essentially declare what security the user can expect. Technically, they are voluntary, i.e. a binary without entitlements is essentially free to do anything (almost, some some system services are only available to processes which have entitlements so it does cut both ways).

Finally, notarization is a process by which Apple scans software for malicious code and other things they may not like. If a software passes their checks it is "notarized" which is essentially a stamp from Apple that is it ok. The way it works is that you send the full package (pkg) to Apple, they inspect it and record its hash in their database as "passed". Anyone can then check that package with Apple to see that it's ok. As a convenience they also provide a "stamp" that you can then attach to the package so it doesn't need online service to check with Apple - it's essentially an additional signature from Apple you tack on.

Anyway, for us most relevant is that Apple requires notarization in order to be able to install package using Apple Installer (.pkg) without any warnings. Notarization in turn requires hardened run-time - Apple simply won't notarize anything that is not using hardened run-time. So that's why we use hardened run-time + notarization for releases, but that puts restrictions on what we're allowed to do.

Homebrew is just wild-west - they are random binaries downloaded from the internet so they don't come with any guarantees whatsoever. They now must sign on arm64 simply because the kernel requires it, but ther eis no meaning to that.

I hope it helps - please let me know if today's binaries work. I still have some permission issues with R.app, but the framework should be ok.

Cheers,
Simon

PS: I am playing with the macOS virtualization https://github.com/s-u/macosvm and it seems to work perfectly - I was able to check the new build tar ball on a clean VM in less than a minute ;).



> On Nov 17, 2021, at 11:28 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> 
> This is Monterey:
> ? uname -a
> Darwin Gabors-MacBook-Pro-3.local 21.1.0 Darwin Kernel Version 21.1.0:
> Wed Oct 13 17:33:01 PDT 2021; root:xnu-8019.41.5~1/RELEASE_ARM64_T6000
> arm64
> 
> The R-devel build segfaults:
> 
> ? curl -O https://mac.r-project.org/monterey/R-devel/arm64/R-devel.tar.gz
> ? sudo tar xzf R-devel.tar.gz -C /
> ? R -q --vanilla
> zsh: killed     R -q --vanilla
> 
> So does the R-4.1 build:
> 
> ? curl -O https://mac.r-project.org/monterey/R-4.1-branch/arm64/R-4.1-branch.tar.gz
> ? sudo tar xzf R-4.1-branch.tar.gz -C /
> ? R -q --vanilla
> zsh: killed     R -q --vanilla
> 
> The big-sur arm64 builds at
> https://mac.r-project.org/big-sur/R-devel/arm64/R-devel.tar.gz
> and https://mac.r-project.org/big-sur/R-4.1-branch/arm64/R-4.1-branch.tar.gz
> also do the same.
> 
> I know that another user has seen this as well, so chances are that it
> is not some issue on my machine. Can anyone reproduce this?
> 
> Gabor
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From rkoenker @end|ng |rom ||||no|@@edu  Thu Nov 18 09:52:03 2021
From: rkoenker @end|ng |rom ||||no|@@edu (Koenker, Roger W)
Date: Thu, 18 Nov 2021 08:52:03 +0000
Subject: [R-SIG-Mac] Nightly build segfaults
In-Reply-To: <131DC5F8-8C22-4AD5-90DC-89A2BBBA0245@R-project.org>
References: <CABtg=KmBd3378=nKHq0iufiZ8D7tr_jdeBcwTqPW05_76cObdg@mail.gmail.com>
 <131DC5F8-8C22-4AD5-90DC-89A2BBBA0245@R-project.org>
Message-ID: <4A47891F-AB7F-4F76-9729-DE247F334095@illinois.edu>

To paraphrase Bob Dylan, I would just like to reiterate:  Without R-core, we?d all be in the swamp!

> On Nov 18, 2021, at 2:58 AM, Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> 
> G?bor,
> 
> sorry for the late reply. The issue is that arm64 binaries get signed no matter what (requirement by the kernel), but our post-install process changes the path entries (moving dependent libraries to $R_HOME/lib etc.) which invalidates the (anonymous) signatures. For released pkg that's no problem, because the packaging process re-signs everything with proper developer account signature so it works, but the tar balls were packed up "raw" without signing. I have now added an extra step where the whole framework is re-signed before taring-up - but to address your concern it's just signed, no entitlements are added.
> 
> Some additional background - there are following layers:
> 
> 1) unsigned
> 2) signed anonymously
> 3) signed with identity
> 4) hardened run-time / entitlements
> 5) notarization
> 
> On Intel 1) is all you need to run. On arm64 2) is required else you get the Trap: 9 error. 
> 
> Entitlements are additional key/values attached to a binary at signing which are used by the OS to determine what the binary is allowed to do. They essentially declare what security the user can expect. Technically, they are voluntary, i.e. a binary without entitlements is essentially free to do anything (almost, some some system services are only available to processes which have entitlements so it does cut both ways).
> 
> Finally, notarization is a process by which Apple scans software for malicious code and other things they may not like. If a software passes their checks it is "notarized" which is essentially a stamp from Apple that is it ok. The way it works is that you send the full package (pkg) to Apple, they inspect it and record its hash in their database as "passed". Anyone can then check that package with Apple to see that it's ok. As a convenience they also provide a "stamp" that you can then attach to the package so it doesn't need online service to check with Apple - it's essentially an additional signature from Apple you tack on.
> 
> Anyway, for us most relevant is that Apple requires notarization in order to be able to install package using Apple Installer (.pkg) without any warnings. Notarization in turn requires hardened run-time - Apple simply won't notarize anything that is not using hardened run-time. So that's why we use hardened run-time + notarization for releases, but that puts restrictions on what we're allowed to do.
> 
> Homebrew is just wild-west - they are random binaries downloaded from the internet so they don't come with any guarantees whatsoever. They now must sign on arm64 simply because the kernel requires it, but ther eis no meaning to that.
> 
> I hope it helps - please let me know if today's binaries work. I still have some permission issues with R.app, but the framework should be ok.
> 
> Cheers,
> Simon
> 
> PS: I am playing with the macOS virtualization https://urldefense.com/v3/__https://github.com/s-u/macosvm__;!!DZ3fjg!uKiUxJCX1SOhxn6XRbdVDGVpehTyT6pel_n4rvGaIez1HZpjzm-WXhftdqU_KeTkefc$  and it seems to work perfectly - I was able to check the new build tar ball on a clean VM in less than a minute ;).
> 
> 
> 
>> On Nov 17, 2021, at 11:28 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>> 
>> This is Monterey:
>> ? uname -a
>> Darwin Gabors-MacBook-Pro-3.local 21.1.0 Darwin Kernel Version 21.1.0:
>> Wed Oct 13 17:33:01 PDT 2021; root:xnu-8019.41.5~1/RELEASE_ARM64_T6000
>> arm64
>> 
>> The R-devel build segfaults:
>> 
>> ? curl -O https://urldefense.com/v3/__https://mac.r-project.org/monterey/R-devel/arm64/R-devel.tar.gz__;!!DZ3fjg!uKiUxJCX1SOhxn6XRbdVDGVpehTyT6pel_n4rvGaIez1HZpjzm-WXhftdqU_xOZkD2o$ 
>> ? sudo tar xzf R-devel.tar.gz -C /
>> ? R -q --vanilla
>> zsh: killed     R -q --vanilla
>> 
>> So does the R-4.1 build:
>> 
>> ? curl -O https://urldefense.com/v3/__https://mac.r-project.org/monterey/R-4.1-branch/arm64/R-4.1-branch.tar.gz__;!!DZ3fjg!uKiUxJCX1SOhxn6XRbdVDGVpehTyT6pel_n4rvGaIez1HZpjzm-WXhftdqU_cx-HCp4$ 
>> ? sudo tar xzf R-4.1-branch.tar.gz -C /
>> ? R -q --vanilla
>> zsh: killed     R -q --vanilla
>> 
>> The big-sur arm64 builds at
>> https://urldefense.com/v3/__https://mac.r-project.org/big-sur/R-devel/arm64/R-devel.tar.gz__;!!DZ3fjg!uKiUxJCX1SOhxn6XRbdVDGVpehTyT6pel_n4rvGaIez1HZpjzm-WXhftdqU_2VUrzbE$ 
>> and https://urldefense.com/v3/__https://mac.r-project.org/big-sur/R-4.1-branch/arm64/R-4.1-branch.tar.gz__;!!DZ3fjg!uKiUxJCX1SOhxn6XRbdVDGVpehTyT6pel_n4rvGaIez1HZpjzm-WXhftdqU_X3MZvq8$ 
>> also do the same.
>> 
>> I know that another user has seen this as well, so chances are that it
>> is not some issue on my machine. Can anyone reproduce this?
>> 
>> Gabor
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-sig-mac__;!!DZ3fjg!uKiUxJCX1SOhxn6XRbdVDGVpehTyT6pel_n4rvGaIez1HZpjzm-WXhftdqU_h40elX4$ 
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-sig-mac__;!!DZ3fjg!uKiUxJCX1SOhxn6XRbdVDGVpehTyT6pel_n4rvGaIez1HZpjzm-WXhftdqU_h40elX4$ 


From Au@t|n@Hur@t @end|ng |rom D@|@C@  Sat Nov 20 22:24:10 2021
From: Au@t|n@Hur@t @end|ng |rom D@|@C@ (Austin Hurst)
Date: Sat, 20 Nov 2021 21:24:10 +0000
Subject: [R-SIG-Mac] SHA checksum mismatch for arm64 gfortran?
Message-ID: <9205152B-CFBC-4239-AB1C-9600B0020BEB@dal.ca>

Hi all,

Today I started trying to update the R macOS Tools installer (https://github.com/rmacoslib/r-macos-rtools) to support Big Sur, Monterey, and Apple Silicon. In the process, I was double-checking the SHA256 hashes of the gfortran downloads on the R Mac Tools page (https://mac.r-project.org/tools/) and noticed that the hash for the ARM64 download listed on the website (86d169f9d62b2b2ddbf5fde55935fbb96729da5c47d7bf09240228cd23b664e5) doesn?t match with the hash of the downloaded file (e7a5272fcbe002e9e22effc18bba01c352ca95f63dc3264865d9f8020ac55821).

I checked the hash of the Intel installer and that matches fine so I?m pretty sure I?m checking the hash right, and I double-checked that I was checking the untouched .tar.gz and not the decompressed .tar. Is the hash on the website mistaken, or is something else going on? Either way, I figured I should let someone know.

Cheers,

- Austin Hurst

From pd@|gd @end|ng |rom gm@||@com  Sun Nov 21 16:20:52 2021
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Sun, 21 Nov 2021 16:20:52 +0100
Subject: [R-SIG-Mac] SHA checksum mismatch for arm64 gfortran?
In-Reply-To: <9205152B-CFBC-4239-AB1C-9600B0020BEB@dal.ca>
References: <9205152B-CFBC-4239-AB1C-9600B0020BEB@dal.ca>
Message-ID: <4F3060F2-A35C-4129-A945-649EB8803D1A@gmail.com>

I see this too. There were some signing issues with the R downloads recently; perhaps it also affected this and the SHA sum wasn't updated. You probably want a more authoritative answer from Simon, though.

-pd

> On 20 Nov 2021, at 22:24 , Austin Hurst <Austin.Hurst at Dal.Ca> wrote:
> 
> Hi all,
> 
> Today I started trying to update the R macOS Tools installer (https://github.com/rmacoslib/r-macos-rtools) to support Big Sur, Monterey, and Apple Silicon. In the process, I was double-checking the SHA256 hashes of the gfortran downloads on the R Mac Tools page (https://mac.r-project.org/tools/) and noticed that the hash for the ARM64 download listed on the website (86d169f9d62b2b2ddbf5fde55935fbb96729da5c47d7bf09240228cd23b664e5) doesn?t match with the hash of the downloaded file (e7a5272fcbe002e9e22effc18bba01c352ca95f63dc3264865d9f8020ac55821).
> 
> I checked the hash of the Intel installer and that matches fine so I?m pretty sure I?m checking the hash right, and I double-checked that I was checking the untouched .tar.gz and not the decompressed .tar. Is the hash on the website mistaken, or is something else going on? Either way, I figured I should let someone know.
> 
> Cheers,
> 
> - Austin Hurst
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From n|ko|@@@ku@chn|g @end|ng |rom wu@@c@@t  Mon Nov 22 14:29:51 2021
From: n|ko|@@@ku@chn|g @end|ng |rom wu@@c@@t (Kuschnig, Nikolas)
Date: Mon, 22 Nov 2021 13:29:51 +0000
Subject: [R-SIG-Mac] NaN bug with arima() on Mac
Message-ID: <5b72bc1a6ba2758b1f09530b24c8425de82f107d.camel@wu.ac.at>

Dear all,

There seems to be a small bug with `arima()` on Mac. For some very specific data
I get the following warning:
	Warning message:
	In log(s2) : NaNs produced
This seems to stem from `.Call(C_ARIMA_Like, x, Z, 0L, FALSE)` in the `armafn()`
objective function. This warning does not occur on Linux or Windows systems or
when using the `arima0()` function.
Below is an example that I hope reproduces (please excuse the dependency, I only
encountered it with this data, partly due to my lack of a Mac). Note that the
warning in question occurs during estimation, printing always induces a warning.


# install.packages("BVAR")
library("BVAR")

x <- fred_qd[1:243,?
 c("GDPC1", "PCECC96", "GPDIC1", "HOANBS", "GDPCTPI", "FEDFUNDS")]
x <- fred_transform(x, codes = c(4, 4, 4, 4, 4, 1))
Y <- as.matrix(x)[6:nrow(x), ]

ar <- apply(Y, 2, arima, order = c(5, 0, 0)) # Warning only on Mac
ar0 <- apply(Y, 2, arima0, order = c(5, 0, 0)) # No warning


Does anyone have any more information on this? Thanks for the help!

Best,
-- 
Nikolas Kuschnig


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 695 bytes
Desc: This is a digitally signed message part
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20211122/96b76cb8/attachment.sig>

From @|mon@urb@nek @end|ng |rom R-project@org  Mon Nov 22 23:21:12 2021
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 23 Nov 2021 11:21:12 +1300
Subject: [R-SIG-Mac] NaN bug with arima() on Mac
In-Reply-To: <5b72bc1a6ba2758b1f09530b24c8425de82f107d.camel@wu.ac.at>
References: <5b72bc1a6ba2758b1f09530b24c8425de82f107d.camel@wu.ac.at>
Message-ID: <834FB7D1-A463-4E3D-B693-C7A7D941D014@R-project.org>


Nikolas,

what makes you think it is a bug? It is an optimization process, so the objective function is free to produce NaN for unsuitable parameters so it can steer the optimization away from such areas.

Cheers,
Simon


> On Nov 23, 2021, at 2:29 AM, Kuschnig, Nikolas <nikolas.kuschnig at wu.ac.at> wrote:
> 
> Dear all,
> 
> There seems to be a small bug with `arima()` on Mac. For some very specific data
> I get the following warning:
> 	Warning message:
> 	In log(s2) : NaNs produced
> This seems to stem from `.Call(C_ARIMA_Like, x, Z, 0L, FALSE)` in the `armafn()`
> objective function. This warning does not occur on Linux or Windows systems or
> when using the `arima0()` function.
> Below is an example that I hope reproduces (please excuse the dependency, I only
> encountered it with this data, partly due to my lack of a Mac). Note that the
> warning in question occurs during estimation, printing always induces a warning.
> 
> 
> # install.packages("BVAR")
> library("BVAR")
> 
> x <- fred_qd[1:243, 
> c("GDPC1", "PCECC96", "GPDIC1", "HOANBS", "GDPCTPI", "FEDFUNDS")]
> x <- fred_transform(x, codes = c(4, 4, 4, 4, 4, 1))
> Y <- as.matrix(x)[6:nrow(x), ]
> 
> ar <- apply(Y, 2, arima, order = c(5, 0, 0)) # Warning only on Mac
> ar0 <- apply(Y, 2, arima0, order = c(5, 0, 0)) # No warning
> 
> 
> Does anyone have any more information on this? Thanks for the help!
> 
> Best,
> -- 
> Nikolas Kuschnig
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From ken @end|ng |rom kjbe@th@com@@u  Tue Nov 23 00:19:23 2021
From: ken @end|ng |rom kjbe@th@com@@u (Ken Beath)
Date: Tue, 23 Nov 2021 10:19:23 +1100
Subject: [R-SIG-Mac] NaN bug with arima() on Mac
In-Reply-To: <834FB7D1-A463-4E3D-B693-C7A7D941D014@R-project.org>
References: <5b72bc1a6ba2758b1f09530b24c8425de82f107d.camel@wu.ac.at>
 <834FB7D1-A463-4E3D-B693-C7A7D941D014@R-project.org>
Message-ID: <7089FB6B-46BE-4148-801A-97C239238A2F@kjbeath.com.au>

Looking at the returned object there are problems with some of the standard errors which are NaN for both aima and arima0. This usually indicates that the Hessian doesn?t have the required form. This can be very dependent on the system. It also probably means that the model you are fitting is over parameterised.

Ken

> On 23 Nov 2021, at 9:21 am, Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> 
> Nikolas,
> 
> what makes you think it is a bug? It is an optimization process, so the objective function is free to produce NaN for unsuitable parameters so it can steer the optimization away from such areas.
> 
> Cheers,
> Simon
> 
> 
>> On Nov 23, 2021, at 2:29 AM, Kuschnig, Nikolas <nikolas.kuschnig at wu.ac.at> wrote:
>> 
>> Dear all,
>> 
>> There seems to be a small bug with `arima()` on Mac. For some very specific data
>> I get the following warning:
>> 	Warning message:
>> 	In log(s2) : NaNs produced
>> This seems to stem from `.Call(C_ARIMA_Like, x, Z, 0L, FALSE)` in the `armafn()`
>> objective function. This warning does not occur on Linux or Windows systems or
>> when using the `arima0()` function.
>> Below is an example that I hope reproduces (please excuse the dependency, I only
>> encountered it with this data, partly due to my lack of a Mac). Note that the
>> warning in question occurs during estimation, printing always induces a warning.
>> 
>> 
>> # install.packages("BVAR")
>> library("BVAR")
>> 
>> x <- fred_qd[1:243, 
>> c("GDPC1", "PCECC96", "GPDIC1", "HOANBS", "GDPCTPI", "FEDFUNDS")]
>> x <- fred_transform(x, codes = c(4, 4, 4, 4, 4, 1))
>> Y <- as.matrix(x)[6:nrow(x), ]
>> 
>> ar <- apply(Y, 2, arima, order = c(5, 0, 0)) # Warning only on Mac
>> ar0 <- apply(Y, 2, arima0, order = c(5, 0, 0)) # No warning
>> 
>> 
>> Does anyone have any more information on this? Thanks for the help!
>> 
>> Best,
>> -- 
>> Nikolas Kuschnig
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From tony@j@perry @end|ng |rom gm@||@com  Tue Nov 23 09:14:28 2021
From: tony@j@perry @end|ng |rom gm@||@com (Tony Perry)
Date: Tue, 23 Nov 2021 08:14:28 +0000
Subject: [R-SIG-Mac] R-SIG unsubscribe
Message-ID: <CAKYH9=FEHVVtmEkh=Qsbj=Zb+KJAyL5r9GLmhXG0s+oZVC4sQw@mail.gmail.com>

Dear R-Sig group,

I would like tor request to be removed from the R-SIG group.

Thank you!

Tony

	[[alternative HTML version deleted]]


From pd@|gd @end|ng |rom gm@||@com  Tue Nov 23 09:30:59 2021
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Tue, 23 Nov 2021 09:30:59 +0100
Subject: [R-SIG-Mac] R-SIG unsubscribe
In-Reply-To: <CAKYH9=FEHVVtmEkh=Qsbj=Zb+KJAyL5r9GLmhXG0s+oZVC4sQw@mail.gmail.com>
References: <CAKYH9=FEHVVtmEkh=Qsbj=Zb+KJAyL5r9GLmhXG0s+oZVC4sQw@mail.gmail.com>
Message-ID: <141B38DB-992B-407D-A339-26915866720F@gmail.com>

The efficient procedure is to follow the link at the bottom of every mail

https://stat.ethz.ch/mailman/listinfo/r-sig-mac

(Use the "Unsubscribe or edit options" button near the end of the page.)

-pd


> On 23 Nov 2021, at 09:14 , Tony Perry <tony.j.perry at gmail.com> wrote:
> 
> Dear R-Sig group,
> 
> I would like tor request to be removed from the R-SIG group.
> 
> Thank you!
> 
> Tony
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From tony@j@perry @end|ng |rom gm@||@com  Tue Nov 23 11:19:54 2021
From: tony@j@perry @end|ng |rom gm@||@com (Tony Perry)
Date: Tue, 23 Nov 2021 10:19:54 +0000
Subject: [R-SIG-Mac] R-SIG unsubscribe
In-Reply-To: <141B38DB-992B-407D-A339-26915866720F@gmail.com>
References: <CAKYH9=FEHVVtmEkh=Qsbj=Zb+KJAyL5r9GLmhXG0s+oZVC4sQw@mail.gmail.com>
 <141B38DB-992B-407D-A339-26915866720F@gmail.com>
Message-ID: <CAKYH9=GbZor343Mx-K6YuAHotTmQXnK6yYPrVvXRB0o9jG2oUw@mail.gmail.com>

It's not efficient if I need to enter in a password I can't remember and no
reminder email comes when this is clicked.  Most sites have a simple
unsubscribe button.



On Tue, 23 Nov 2021, 08:31 peter dalgaard, <pdalgd at gmail.com> wrote:

> The efficient procedure is to follow the link at the bottom of every mail
>
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> (Use the "Unsubscribe or edit options" button near the end of the page.)
>
> -pd
>
>
> > On 23 Nov 2021, at 09:14 , Tony Perry <tony.j.perry at gmail.com> wrote:
> >
> > Dear R-Sig group,
> >
> > I would like tor request to be removed from the R-SIG group.
> >
> > Thank you!
> >
> > Tony
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>

	[[alternative HTML version deleted]]


From ken @end|ng |rom kjbe@th@com@@u  Tue Nov 23 11:26:28 2021
From: ken @end|ng |rom kjbe@th@com@@u (Ken Beath)
Date: Tue, 23 Nov 2021 21:26:28 +1100
Subject: [R-SIG-Mac] R-SIG unsubscribe
In-Reply-To: <CAKYH9=GbZor343Mx-K6YuAHotTmQXnK6yYPrVvXRB0o9jG2oUw@mail.gmail.com>
References: <CAKYH9=FEHVVtmEkh=Qsbj=Zb+KJAyL5r9GLmhXG0s+oZVC4sQw@mail.gmail.com>
 <141B38DB-992B-407D-A339-26915866720F@gmail.com>
 <CAKYH9=GbZor343Mx-K6YuAHotTmQXnK6yYPrVvXRB0o9jG2oUw@mail.gmail.com>
Message-ID: <6FBB3485-927F-4228-A8A5-40DF08FB3BC2@kjbeath.com.au>

Apparently "Once a month, your password will be emailed to you as a reminder."

I receive mine on the 1st of each month from mailman-owner at r-project.org <mailto:mailman-owner at r-project.org>

Ken

> On 23 Nov 2021, at 9:19 pm, Tony Perry <tony.j.perry at gmail.com> wrote:
> 
> It's not efficient if I need to enter in a password I can't remember and no
> reminder email comes when this is clicked.  Most sites have a simple
> unsubscribe button.
> 
> 
> 
> On Tue, 23 Nov 2021, 08:31 peter dalgaard, <pdalgd at gmail.com <mailto:pdalgd at gmail.com>> wrote:
> 
>> The efficient procedure is to follow the link at the bottom of every mail
>> 
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> (Use the "Unsubscribe or edit options" button near the end of the page.)
>> 
>> -pd
>> 
>> 
>>> On 23 Nov 2021, at 09:14 , Tony Perry <tony.j.perry at gmail.com> wrote:
>>> 
>>> Dear R-Sig group,
>>> 
>>> I would like tor request to be removed from the R-SIG group.
>>> 
>>> Thank you!
>>> 
>>> Tony
>>> 
>>>      [[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> --
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>> 
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org <mailto:R-SIG-Mac at r-project.org>
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac <https://stat.ethz.ch/mailman/listinfo/r-sig-mac>

	[[alternative HTML version deleted]]


From tony@j@perry @end|ng |rom gm@||@com  Tue Nov 23 11:55:49 2021
From: tony@j@perry @end|ng |rom gm@||@com (Tony Perry)
Date: Tue, 23 Nov 2021 10:55:49 +0000
Subject: [R-SIG-Mac] R-SIG unsubscribe
In-Reply-To: <6FBB3485-927F-4228-A8A5-40DF08FB3BC2@kjbeath.com.au>
References: <CAKYH9=FEHVVtmEkh=Qsbj=Zb+KJAyL5r9GLmhXG0s+oZVC4sQw@mail.gmail.com>
 <141B38DB-992B-407D-A339-26915866720F@gmail.com>
 <CAKYH9=GbZor343Mx-K6YuAHotTmQXnK6yYPrVvXRB0o9jG2oUw@mail.gmail.com>
 <6FBB3485-927F-4228-A8A5-40DF08FB3BC2@kjbeath.com.au>
Message-ID: <CAKYH9=G8ktKFjUsf6zBAp2iGC7gYRaJuZBZNhALV9K4tLBPdtA@mail.gmail.com>

It would also help if the "Unsubscribe" button actually worked.  Again,
best practice is to simply have an unsubscribe button (w/o making people
scour inboxes for random passwords).

Kindly remove me from this list.

Thanks

On Tue, 23 Nov 2021, 10:28 Ken Beath, <ken at kjbeath.com.au> wrote:

> Apparently "Once a month, your password will be emailed to you as a
> reminder."
>
> I receive mine on the 1st of each month from mailman-owner at r-project.org
>
> Ken
>
> On 23 Nov 2021, at 9:19 pm, Tony Perry <tony.j.perry at gmail.com> wrote:
>
> It's not efficient if I need to enter in a password I can't remember and no
> reminder email comes when this is clicked.  Most sites have a simple
> unsubscribe button.
>
>
>
> On Tue, 23 Nov 2021, 08:31 peter dalgaard, <pdalgd at gmail.com> wrote:
>
> The efficient procedure is to follow the link at the bottom of every mail
>
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> (Use the "Unsubscribe or edit options" button near the end of the page.)
>
> -pd
>
>
> On 23 Nov 2021, at 09:14 , Tony Perry <tony.j.perry at gmail.com> wrote:
>
> Dear R-Sig group,
>
> I would like tor request to be removed from the R-SIG group.
>
> Thank you!
>
> Tony
>
>      [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
> [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>
>

	[[alternative HTML version deleted]]


From n|ko|@@@ku@chn|g @end|ng |rom wu@@c@@t  Tue Nov 23 13:12:01 2021
From: n|ko|@@@ku@chn|g @end|ng |rom wu@@c@@t (Kuschnig, Nikolas)
Date: Tue, 23 Nov 2021 12:12:01 +0000
Subject: [R-SIG-Mac] NaN bug with arima() on Mac
In-Reply-To: <7089FB6B-46BE-4148-801A-97C239238A2F@kjbeath.com.au>
References: <5b72bc1a6ba2758b1f09530b24c8425de82f107d.camel@wu.ac.at>
 <834FB7D1-A463-4E3D-B693-C7A7D941D014@R-project.org>
 <7089FB6B-46BE-4148-801A-97C239238A2F@kjbeath.com.au>
Message-ID: <1e3cdfeb3f9cc6424c12fa6c46c9756f92ebc0c7.camel@wu.ac.at>

Hey Ken and Simon,

Good point on the 'bug', I guess it's rather unexpected behaviour since it does
not occur on other systems. The Hessian issue causing system dependency makes a
lot of sense.?
In that case I guess the system differences can't feasibly be eliminated. Should
I document this system difference as a 'bug' or the like somewhere? In my case
I'm now just converting the warning to a message (just need sigma + users can
provide values instead).

Thanks for the help!
-- 
Nikolas


On Tue, 2021-11-23 at 10:19 +1100, Ken Beath wrote:
> Looking at the returned object there are problems with some of the standard
> errors which are NaN for both aima and arima0. This usually indicates that the
> Hessian doesn?t have the required form. This can be very dependent on the
> system. It also probably means that the model you are fitting is over
> parameterised.
> 
> Ken
> 
> > On 23 Nov 2021, at 9:21 am, Simon Urbanek <simon.urbanek at R-project.org>
> > wrote:
> > 
> > 
> > Nikolas,
> > 
> > what makes you think it is a bug? It is an optimization process, so the
> > objective function is free to produce NaN for unsuitable parameters so it
> > can steer the optimization away from such areas.
> > 
> > Cheers,
> > Simon
> > 
> > 
> > > On Nov 23, 2021, at 2:29 AM, Kuschnig, Nikolas <nikolas.kuschnig at wu.ac.at>
> > > wrote:
> > > 
> > > Dear all,
> > > 
> > > There seems to be a small bug with `arima()` on Mac. For some very
> > > specific data
> > > I get the following warning:
> > > ????????Warning message:
> > > ????????In log(s2) : NaNs produced
> > > This seems to stem from `.Call(C_ARIMA_Like, x, Z, 0L, FALSE)` in the
> > > `armafn()`
> > > objective function. This warning does not occur on Linux or Windows
> > > systems or
> > > when using the `arima0()` function.
> > > Below is an example that I hope reproduces (please excuse the dependency,
> > > I only
> > > encountered it with this data, partly due to my lack of a Mac). Note that
> > > the
> > > warning in question occurs during estimation, printing always induces a
> > > warning.
> > > 
> > > 
> > > # install.packages("BVAR")
> > > library("BVAR")
> > > 
> > > x <- fred_qd[1:243, 
> > > c("GDPC1", "PCECC96", "GPDIC1", "HOANBS", "GDPCTPI", "FEDFUNDS")]
> > > x <- fred_transform(x, codes = c(4, 4, 4, 4, 4, 1))
> > > Y <- as.matrix(x)[6:nrow(x), ]
> > > 
> > > ar <- apply(Y, 2, arima, order = c(5, 0, 0)) # Warning only on Mac
> > > ar0 <- apply(Y, 2, arima0, order = c(5, 0, 0)) # No warning
> > > 
> > > 
> > > Does anyone have any more information on this? Thanks for the help!
> > > 
> > > Best,
> > > -- 
> > > Nikolas Kuschnig
> > > 
> > > _______________________________________________
> > > R-SIG-Mac mailing list
> > > R-SIG-Mac at r-project.org
> > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > 
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 695 bytes
Desc: This is a digitally signed message part
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20211123/9549003c/attachment.sig>

From pd@|gd @end|ng |rom gm@||@com  Tue Nov 23 13:23:02 2021
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Tue, 23 Nov 2021 13:23:02 +0100
Subject: [R-SIG-Mac] R-SIG unsubscribe
In-Reply-To: <CAKYH9=G8ktKFjUsf6zBAp2iGC7gYRaJuZBZNhALV9K4tLBPdtA@mail.gmail.com>
References: <CAKYH9=FEHVVtmEkh=Qsbj=Zb+KJAyL5r9GLmhXG0s+oZVC4sQw@mail.gmail.com>
 <141B38DB-992B-407D-A339-26915866720F@gmail.com>
 <CAKYH9=GbZor343Mx-K6YuAHotTmQXnK6yYPrVvXRB0o9jG2oUw@mail.gmail.com>
 <6FBB3485-927F-4228-A8A5-40DF08FB3BC2@kjbeath.com.au>
 <CAKYH9=G8ktKFjUsf6zBAp2iGC7gYRaJuZBZNhALV9K4tLBPdtA@mail.gmail.com>
Message-ID: <7AF0F0E9-E2CC-41A7-9829-B4704A9F6B03@gmail.com>

The button works fine (I did test it before sending), but you do need to login, since nobody (except possibly the list administrator) should be able to unsubscribe other people. 

You can ask for a password reminder, so you can unsubscribe if you have access to the subscribed email address.   

-pd



> On 23 Nov 2021, at 11:55 , Tony Perry <tony.j.perry at gmail.com> wrote:
> 
> It would also help if the "Unsubscribe" button actually worked.  Again, best practice is to simply have an unsubscribe button (w/o making people scour inboxes for random passwords).
> 
> Kindly remove me from this list.
> 
> Thanks
> 
> On Tue, 23 Nov 2021, 10:28 Ken Beath, <ken at kjbeath.com.au> wrote:
> Apparently "Once a month, your password will be emailed to you as a reminder."
> 
> I receive mine on the 1st of each month from mailman-owner at r-project.org
> 
> Ken
> 
>> On 23 Nov 2021, at 9:19 pm, Tony Perry <tony.j.perry at gmail.com> wrote:
>> 
>> It's not efficient if I need to enter in a password I can't remember and no
>> reminder email comes when this is clicked.  Most sites have a simple
>> unsubscribe button.
>> 
>> 
>> 
>> On Tue, 23 Nov 2021, 08:31 peter dalgaard, <pdalgd at gmail.com> wrote:
>> 
>>> The efficient procedure is to follow the link at the bottom of every mail
>>> 
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> (Use the "Unsubscribe or edit options" button near the end of the page.)
>>> 
>>> -pd
>>> 
>>> 
>>>> On 23 Nov 2021, at 09:14 , Tony Perry <tony.j.perry at gmail.com> wrote:
>>>> 
>>>> Dear R-Sig group,
>>>> 
>>>> I would like tor request to be removed from the R-SIG group.
>>>> 
>>>> Thank you!
>>>> 
>>>> Tony
>>>> 
>>>>      [[alternative HTML version deleted]]
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> --
>>> Peter Dalgaard, Professor,
>>> Center for Statistics, Copenhagen Business School
>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>> Phone: (+45)38153501
>>> Office: A 4.23
>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>> 
>>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From c@@rd|@g@bor @end|ng |rom gm@||@com  Tue Nov 23 13:43:11 2021
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 23 Nov 2021 13:43:11 +0100
Subject: [R-SIG-Mac] R-SIG unsubscribe
In-Reply-To: <7AF0F0E9-E2CC-41A7-9829-B4704A9F6B03@gmail.com>
References: <CAKYH9=FEHVVtmEkh=Qsbj=Zb+KJAyL5r9GLmhXG0s+oZVC4sQw@mail.gmail.com>
 <141B38DB-992B-407D-A339-26915866720F@gmail.com>
 <CAKYH9=GbZor343Mx-K6YuAHotTmQXnK6yYPrVvXRB0o9jG2oUw@mail.gmail.com>
 <6FBB3485-927F-4228-A8A5-40DF08FB3BC2@kjbeath.com.au>
 <CAKYH9=G8ktKFjUsf6zBAp2iGC7gYRaJuZBZNhALV9K4tLBPdtA@mail.gmail.com>
 <7AF0F0E9-E2CC-41A7-9829-B4704A9F6B03@gmail.com>
Message-ID: <CABtg=KneZycWpnVRk5TVHvY2KWAkWYZTXXpEfHcEi5GL9=+LaA@mail.gmail.com>

On Tue, Nov 23, 2021 at 1:23 PM peter dalgaard <pdalgd at gmail.com> wrote:
>
> The button works fine (I did test it before sending), but you do need to login, since nobody (except possibly the list administrator) should be able to unsubscribe other people.

For the record, I don't think you need to log in. Just type in your
email address and press "Unsubscribe" and you'll get a confirmation
email.

Gabor

[...]


From kev|n@thorpe @end|ng |rom utoronto@c@  Thu Nov 25 14:33:57 2021
From: kev|n@thorpe @end|ng |rom utoronto@c@ (Kevin Thorpe)
Date: Thu, 25 Nov 2021 13:33:57 +0000
Subject: [R-SIG-Mac] R and RStudio on Monterey (Intel)
Message-ID: <6FCB26F2-A94F-4A4C-BFCC-D08856DA52ED@utoronto.ca>

Hello.

I realize that this may be slightly off-topic for this list but I hope you will forgive me for that.

I am currently running Big Sur on my Intel based MacBook Pro and am trying to decide when to upgrade to Monterey. I have not seen reports of issues with R on Monterey, so I assume it is working well there.

As for RStudio (yes, I know RStudio is not R) I have come across a couple reports of, let?s say weirdness, ranging from complete crashes to rendering problems. Has anyone on this list had any experience with RStudio in Monterey and encountered any issues?

Thanks for your time.

Kevin

-- 
Kevin E. Thorpe
Head of Biostatistics,  Applied Health Research Centre (AHRC)
Li Ka Shing Knowledge Institute of St. Michael?s Hospital
Assistant Professor, Dalla Lana School of Public Health
University of Toronto
email: kevin.thorpe at utoronto.ca  Tel: 416.864.5776  Fax: 416.864.3016


From du@@@@dr|@n @end|ng |rom un|buc@ro  Thu Nov 25 17:16:11 2021
From: du@@@@dr|@n @end|ng |rom un|buc@ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Thu, 25 Nov 2021 18:16:11 +0200
Subject: [R-SIG-Mac] R and RStudio on Monterey (Intel)
In-Reply-To: <6FCB26F2-A94F-4A4C-BFCC-D08856DA52ED@utoronto.ca>
References: <6FCB26F2-A94F-4A4C-BFCC-D08856DA52ED@utoronto.ca>
Message-ID: <CAJ=0CtDVePgxwR9-B3scwD93gRy74VdFaimG+mVp+MwkQiUgpg@mail.gmail.com>

I've upgraded to Monterey about a week ago, no problems at all.
Everything works fine, both in R and RStudio.

I hope this helps,
Adrian

On Thu, 25 Nov 2021 at 15:34, Kevin Thorpe <kevin.thorpe at utoronto.ca> wrote:

> Hello.
>
> I realize that this may be slightly off-topic for this list but I hope you
> will forgive me for that.
>
> I am currently running Big Sur on my Intel based MacBook Pro and am trying
> to decide when to upgrade to Monterey. I have not seen reports of issues
> with R on Monterey, so I assume it is working well there.
>
> As for RStudio (yes, I know RStudio is not R) I have come across a couple
> reports of, let?s say weirdness, ranging from complete crashes to rendering
> problems. Has anyone on this list had any experience with RStudio in
> Monterey and encountered any issues?
>
> Thanks for your time.
>
> Kevin
>
> --
> Kevin E. Thorpe
> Head of Biostatistics,  Applied Health Research Centre (AHRC)
> Li Ka Shing Knowledge Institute of St. Michael?s Hospital
> Assistant Professor, Dalla Lana School of Public Health
> University of Toronto
> email: kevin.thorpe at utoronto.ca  Tel: 416.864.5776  Fax: 416.864.3016
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


-- 
Adrian Dusa
University of Bucharest
Romanian Social Data Archive
Soseaua Panduri nr. 90-92
050663 Bucharest sector 5
Romania
https://adriandusa.eu

	[[alternative HTML version deleted]]


From m@p|no|@10 @end|ng |rom gm@||@com  Thu Nov 25 17:23:00 2021
From: m@p|no|@10 @end|ng |rom gm@||@com (=?UTF-8?Q?Manuel_Sp=C3=ADnola?=)
Date: Thu, 25 Nov 2021 10:23:00 -0600
Subject: [R-SIG-Mac] R and RStudio on Monterey (Intel)
In-Reply-To: <CAJ=0CtDVePgxwR9-B3scwD93gRy74VdFaimG+mVp+MwkQiUgpg@mail.gmail.com>
References: <6FCB26F2-A94F-4A4C-BFCC-D08856DA52ED@utoronto.ca>
 <CAJ=0CtDVePgxwR9-B3scwD93gRy74VdFaimG+mVp+MwkQiUgpg@mail.gmail.com>
Message-ID: <CABkCotTrsm_DXLM0OJv-EKeF8GrvZhqpAXtXhw0VzQBUhFEP6Q@mail.gmail.com>

Same here.  No problems at all.

Manuel

El jue, 25 nov 2021 a las 10:16, Adrian Du?a (<dusa.adrian at unibuc.ro>)
escribi?:

> I've upgraded to Monterey about a week ago, no problems at all.
> Everything works fine, both in R and RStudio.
>
> I hope this helps,
> Adrian
>
> On Thu, 25 Nov 2021 at 15:34, Kevin Thorpe <kevin.thorpe at utoronto.ca>
> wrote:
>
> > Hello.
> >
> > I realize that this may be slightly off-topic for this list but I hope
> you
> > will forgive me for that.
> >
> > I am currently running Big Sur on my Intel based MacBook Pro and am
> trying
> > to decide when to upgrade to Monterey. I have not seen reports of issues
> > with R on Monterey, so I assume it is working well there.
> >
> > As for RStudio (yes, I know RStudio is not R) I have come across a couple
> > reports of, let?s say weirdness, ranging from complete crashes to
> rendering
> > problems. Has anyone on this list had any experience with RStudio in
> > Monterey and encountered any issues?
> >
> > Thanks for your time.
> >
> > Kevin
> >
> > --
> > Kevin E. Thorpe
> > Head of Biostatistics,  Applied Health Research Centre (AHRC)
> > Li Ka Shing Knowledge Institute of St. Michael?s Hospital
> > Assistant Professor, Dalla Lana School of Public Health
> > University of Toronto
> > email: kevin.thorpe at utoronto.ca  Tel: 416.864.5776  Fax: 416.864.3016
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
>
>
> --
> Adrian Dusa
> University of Bucharest
> Romanian Social Data Archive
> Soseaua Panduri nr. 90-92
> 050663 Bucharest sector 5
> Romania
> https://adriandusa.eu
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


-- 
*Manuel Sp?nola, Ph.D.*
Instituto Internacional en Conservaci?n y Manejo de Vida Silvestre
Universidad Nacional
Apartado 1350-3000
Heredia
COSTA RICA
mspinola at una.cr <mspinola at una.ac.cr>
mspinola10 at gmail.com
Tel?fono: (506) 8706 - 4662
Personal website: Lobito de r?o <https://sites.google.com/site/lobitoderio/>
Institutional website: ICOMVIS <http://www.icomvis.una.ac.cr/>

	[[alternative HTML version deleted]]


From dpc10@ter @end|ng |rom gm@||@com  Sat Nov 27 21:46:59 2021
From: dpc10@ter @end|ng |rom gm@||@com (Dev Chakraborty)
Date: Sat, 27 Nov 2021 15:46:59 -0500
Subject: [R-SIG-Mac] Rmpfr crashes on Mac
Message-ID: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>

I used package Rmpfr ca. 2017 and it worked fine. The latest version
(0.8-7) causes R (running under RStudio) to crash. A simple example is:

library(Rmpfr)
x1 <- mpfr(-50, 200)
x2 <- mpfr(-50.1, 200)

Which gives the message:

R Session Aborted
R encountered a fatal error
The session was terminated
Start New Session

I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older iMac
running 10.15.7. The problem occurs with both machines.

When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the version
of the package around 2017, corresponding to the last time I used it) the
problem goes away.

	[[alternative HTML version deleted]]


From er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t  Sun Nov 28 13:05:51 2021
From: er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t (Erich Neuwirth)
Date: Sun, 28 Nov 2021 13:05:51 +0100
Subject: [R-SIG-Mac] Rmpfr crashes on Mac
In-Reply-To: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
Message-ID: <A80CDDCD-909B-460D-9278-F4A33878245D@univie.ac.at>

I checked, and I also get the crash in Rstudio.
In Rgui, it works.


> On 27.11.2021, at 21:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
> 
> I used package Rmpfr ca. 2017 and it worked fine. The latest version
> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
> 
> library(Rmpfr)
> x1 <- mpfr(-50, 200)
> x2 <- mpfr(-50.1, 200)
> 
> Which gives the message:
> 
> R Session Aborted
> R encountered a fatal error
> The session was terminated
> Start New Session
> 
> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older iMac
> running 10.15.7. The problem occurs with both machines.
> 
> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the version
> of the package around 2017, corresponding to the last time I used it) the
> problem goes away.
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 699 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20211128/9544af00/attachment.sig>

From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Nov 28 13:12:00 2021
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 28 Nov 2021 07:12:00 -0500
Subject: [R-SIG-Mac] Rmpfr crashes on Mac
In-Reply-To: <A80CDDCD-909B-460D-9278-F4A33878245D@univie.ac.at>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A80CDDCD-909B-460D-9278-F4A33878245D@univie.ac.at>
Message-ID: <c464b13d-2ba1-0feb-1974-18bf7a65b4cb@gmail.com>

On 28/11/2021 7:05 a.m., Erich Neuwirth wrote:
> I checked, and I also get the crash in Rstudio.
> In Rgui, it works.

I don't get the crash, using R 4.1.0 in MacOS 10.15.7, with the same 
Rmpfr version in RStudio or R.app.

Duncan Murdoch

> 
> 
>> On 27.11.2021, at 21:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
>>
>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
>>
>> library(Rmpfr)
>> x1 <- mpfr(-50, 200)
>> x2 <- mpfr(-50.1, 200)
>>
>> Which gives the message:
>>
>> R Session Aborted
>> R encountered a fatal error
>> The session was terminated
>> Start New Session
>>
>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older iMac
>> running 10.15.7. The problem occurs with both machines.
>>
>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the version
>> of the package around 2017, corresponding to the last time I used it) the
>> problem goes away.
>>
>> 	[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t  Sun Nov 28 13:21:22 2021
From: er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t (Erich Neuwirth)
Date: Sun, 28 Nov 2021 13:21:22 +0100
Subject: [R-SIG-Mac] Rmpfr crashes on Mac
In-Reply-To: <c464b13d-2ba1-0feb-1974-18bf7a65b4cb@gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A80CDDCD-909B-460D-9278-F4A33878245D@univie.ac.at>
 <c464b13d-2ba1-0feb-1974-18bf7a65b4cb@gmail.com>
Message-ID: <E869E272-DB75-4BC5-ABFE-5BA86E27BD5D@univie.ac.at>

I am using R 4.1.2
Rmpfr 0.8.7
MacOS 11.6.1
(x86 Machine)

> On 28.11.2021, at 13:12, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 28/11/2021 7:05 a.m., Erich Neuwirth wrote:
>> I checked, and I also get the crash in Rstudio.
>> In Rgui, it works.
> 
> I don't get the crash, using R 4.1.0 in MacOS 10.15.7, with the same Rmpfr version in RStudio or R.app.
> 
> Duncan Murdoch
> 
>>> On 27.11.2021, at 21:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
>>> 
>>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
>>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
>>> 
>>> library(Rmpfr)
>>> x1 <- mpfr(-50, 200)
>>> x2 <- mpfr(-50.1, 200)
>>> 
>>> Which gives the message:
>>> 
>>> R Session Aborted
>>> R encountered a fatal error
>>> The session was terminated
>>> Start New Session
>>> 
>>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older iMac
>>> running 10.15.7. The problem occurs with both machines.
>>> 
>>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the version
>>> of the package around 2017, corresponding to the last time I used it) the
>>> problem goes away.
>>> 
>>> 	[[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 699 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20211128/8e464765/attachment.sig>

From rmh @end|ng |rom temp|e@edu  Sun Nov 28 18:53:39 2021
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Sun, 28 Nov 2021 17:53:39 +0000
Subject: [R-SIG-Mac] [External]  Rmpfr crashes on Mac
In-Reply-To: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
Message-ID: <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>

Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh aarch64-apple-darwin20
I am running inside Emacs using ESS

> packageVersion("Rmpfr")
[1] ?0.8.7?
> library(Rmpfr)
Loading required package: gmp

Attaching package: ?gmp?

The following objects are masked from ?package:base?:

    %*%, apply, crossprod, matrix, tcrossprod

C code of R package 'Rmpfr': GMP using 64 bits per limb


Attaching package: ?Rmpfr?

The following object is masked from ?package:gmp?:

    outer

The following objects are masked from ?package:stats?:

    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm

The following objects are masked from ?package:base?:

    cbind, pmax, pmin, rbind

> x1 <- mpfr(-50, 200)
> x1
1 'mpfr' number of precision  200   bits 
[1] -50
> x2 <- mpfr(-50.1, 200)
> x2
1 'mpfr' number of precision  200   bits 
[1] -50.10000000000000142108547152020037174224853515625
> version
               _                           
platform       aarch64-apple-darwin20      
arch           aarch64                     
os             darwin20                    
system         aarch64, darwin20           
status                                     
major          4                           
minor          1.2                         
year           2021                        
month          11                          
day            01                          
svn rev        81115                       
language       R                           
version.string R version 4.1.2 (2021-11-01)
nickname       Bird Hippie                 
> 

> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
> 
> I used package Rmpfr ca. 2017 and it worked fine. The latest version
> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
> 
> library(Rmpfr)
> x1 <- mpfr(-50, 200)
> x2 <- mpfr(-50.1, 200)
> 
> Which gives the message:
> 
> R Session Aborted
> R encountered a fatal error
> The session was terminated
> Start New Session
> 
> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older iMac
> running 10.15.7. The problem occurs with both machines.
> 
> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the version
> of the package around 2017, corresponding to the last time I used it) the
> problem goes away.
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0


From dpc10@ter @end|ng |rom gm@||@com  Sun Nov 28 21:36:19 2021
From: dpc10@ter @end|ng |rom gm@||@com (Dev Chakraborty)
Date: Sun, 28 Nov 2021 15:36:19 -0500
Subject: [R-SIG-Mac] [External]  Rmpfr crashes on Mac
In-Reply-To: <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
Message-ID: <CADd2D4+MYFMeAAO05pBLnJiAtU_SE_Jww6i7O3Y1AUx8Q2YJVg@mail.gmail.com>

I still get the crash. I tried to recreate your commands on my machine
(macOS Monterey, Version 12.0.1). Here is a summary; further details are
below.

1. Installing from CRAN downloaded file Rmpfr_0.8-7.tar.gz failed, see
further details.
2. Therefore I had to instal the binary file from CRAN, see further details.
3. Loaded library(Rmpfr), see further details
4. Ran the two commands at the RStudio console:
x <- mpfr(-50, 2000)
y <- mpfr(-50.1, 2000)
This caused a crash.
5. Restarted my system and ran:

version
               _
platform       x86_64-apple-darwin17.0
arch           x86_64
os             darwin17.0
system         x86_64, darwin17.0
status
major          4
minor          1.1
year           2021
month          08
day            10
svn rev        80725
language       R
version.string R version 4.1.1 (2021-08-10)
nickname       Kick Things

6. Details of my machine (system report)
 Model Name: MacBook Pro
  Model Identifier: MacBookPro11,5
  Processor Name: Quad-Core Intel Core i7
  Processor Speed: 2.5 GHz
  Number of Processors: 1
  Total Number of Cores: 4
  L2 Cache (per Core): 256 KB
  L3 Cache: 6 MB
  Hyper-Threading Technology: Enabled
  Memory: 16 GB
  System Firmware Version: 428.40.10.0.0
  OS Loader Version: 540.40.4~45
  SMC Version (system): 2.30f2
  Serial Number (system): C02PTX43G8WP
  Hardware UUID: 85D23F6B-40E1-5D82-BF89-909EF7141116
  Provisioning UDID: 85D23F6B-40E1-5D82-BF89-909EF7141116


Other details
1.
install.packages("~/Downloads/Rmpfr_0.8-7.tar.gz", repos = NULL, type =
"source")
* installing *source* package ?Rmpfr? ...
** package ?Rmpfr? successfully unpacked and MD5 sums checked
** using staged installation
checking for gcc... clang -mmacosx-version-min=10.13
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables...
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether clang -mmacosx-version-min=10.13 accepts -g... yes
checking for clang -mmacosx-version-min=10.13 option to accept ISO C89...
none needed
checking how to run the C preprocessor... clang -mmacosx-version-min=10.13
-E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking mpfr.h usability... no
checking mpfr.h presence... no
checking for mpfr.h... no
configure: error: Header file mpfr.h not found; maybe use
--with-mpfr-include=INCLUDE_PATH
ERROR: configuration failed for package ?Rmpfr?
* removing
?/Library/Frameworks/R.framework/Versions/4.1/Resources/library/Rmpfr?
Warning in install.packages :
  installation of package ?/Users/Dev/Downloads/Rmpfr_0.8-7.tar.gz? had
non-zero exit status

2.
install.packages("Rmpfr")
trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.1/Rmpfr_0.8-7.tgz'
Content type 'application/x-gzip' length 1556368 bytes (1.5 MB)
==================================================
downloaded 1.5 MB


The downloaded binary packages are in
/var/folders/d1/mx6dcbzx3v39r260458z2b200000gn/T//Rtmpfbzg9i/downloaded_packages
>

3.
library(Rmpfr)
Loading required package: gmp

Attaching package: ?gmp?

The following objects are masked from ?package:base?:

    %*%, apply, crossprod, matrix, tcrossprod

C code of R package 'Rmpfr': GMP using 64 bits per limb


Attaching package: ?Rmpfr?

The following object is masked from ?package:gmp?:

    outer

The following objects are masked from ?package:stats?:

    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm

The following objects are masked from ?package:base?:

    cbind, pmax, pmin, rbind


On Sun, Nov 28, 2021 at 12:53 PM Richard M. Heiberger <rmh at temple.edu>
wrote:

> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
> aarch64-apple-darwin20
> I am running inside Emacs using ESS
>
> > packageVersion("Rmpfr")
> [1] ?0.8.7?
> > library(Rmpfr)
> Loading required package: gmp
>
> Attaching package: ?gmp?
>
> The following objects are masked from ?package:base?:
>
>     %*%, apply, crossprod, matrix, tcrossprod
>
> C code of R package 'Rmpfr': GMP using 64 bits per limb
>
>
> Attaching package: ?Rmpfr?
>
> The following object is masked from ?package:gmp?:
>
>     outer
>
> The following objects are masked from ?package:stats?:
>
>     dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
>
> The following objects are masked from ?package:base?:
>
>     cbind, pmax, pmin, rbind
>
> > x1 <- mpfr(-50, 200)
> > x1
> 1 'mpfr' number of precision  200   bits
> [1] -50
> > x2 <- mpfr(-50.1, 200)
> > x2
> 1 'mpfr' number of precision  200   bits
> [1] -50.10000000000000142108547152020037174224853515625
> > version
>                _
> platform       aarch64-apple-darwin20
> arch           aarch64
> os             darwin20
> system         aarch64, darwin20
> status
> major          4
> minor          1.2
> year           2021
> month          11
> day            01
> svn rev        81115
> language       R
> version.string R version 4.1.2 (2021-11-01)
> nickname       Bird Hippie
> >
>
> > On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
> >
> > I used package Rmpfr ca. 2017 and it worked fine. The latest version
> > (0.8-7) causes R (running under RStudio) to crash. A simple example is:
> >
> > library(Rmpfr)
> > x1 <- mpfr(-50, 200)
> > x2 <- mpfr(-50.1, 200)
> >
> > Which gives the message:
> >
> > R Session Aborted
> > R encountered a fatal error
> > The session was terminated
> > Start New Session
> >
> > I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
> iMac
> > running 10.15.7. The problem occurs with both machines.
> >
> > When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
> version
> > of the package around 2017, corresponding to the last time I used it) the
> > problem goes away.
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> >
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
>
>

	[[alternative HTML version deleted]]


From rmh @end|ng |rom temp|e@edu  Sun Nov 28 23:47:06 2021
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Sun, 28 Nov 2021 22:47:06 +0000
Subject: [R-SIG-Mac] [External]  Rmpfr crashes on Mac
In-Reply-To: <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
Message-ID: <BC47D307-F6C9-4A52-A66A-215E45E9DF3D@temple.edu>

I just downloaded 
RStudio
2021.09.1 Build 372
This is an Intel RStudio running on my Apple M1 chip.
The example works normally.

Do you have the most recent RStudio?
I tried on the earlier RStudio I downloaded in January, right after getting this M1 computer, and that version Rstudio wouldn't start.





> On Nov 28, 2021, at 12:53, Richard M. Heiberger <rmh at temple.edu> wrote:
> 
> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh aarch64-apple-darwin20
> I am running inside Emacs using ESS
> 
>> packageVersion("Rmpfr")
> [1] ?0.8.7?
>> library(Rmpfr)
> Loading required package: gmp
> 
> Attaching package: ?gmp?
> 
> The following objects are masked from ?package:base?:
> 
>    %*%, apply, crossprod, matrix, tcrossprod
> 
> C code of R package 'Rmpfr': GMP using 64 bits per limb
> 
> 
> Attaching package: ?Rmpfr?
> 
> The following object is masked from ?package:gmp?:
> 
>    outer
> 
> The following objects are masked from ?package:stats?:
> 
>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
> 
> The following objects are masked from ?package:base?:
> 
>    cbind, pmax, pmin, rbind
> 
>> x1 <- mpfr(-50, 200)
>> x1
> 1 'mpfr' number of precision  200   bits 
> [1] -50
>> x2 <- mpfr(-50.1, 200)
>> x2
> 1 'mpfr' number of precision  200   bits 
> [1] -50.10000000000000142108547152020037174224853515625
>> version
>               _                           
> platform       aarch64-apple-darwin20      
> arch           aarch64                     
> os             darwin20                    
> system         aarch64, darwin20           
> status                                     
> major          4                           
> minor          1.2                         
> year           2021                        
> month          11                          
> day            01                          
> svn rev        81115                       
> language       R                           
> version.string R version 4.1.2 (2021-11-01)
> nickname       Bird Hippie                 
>> 
> 
>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
>> 
>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
>> 
>> library(Rmpfr)
>> x1 <- mpfr(-50, 200)
>> x2 <- mpfr(-50.1, 200)
>> 
>> Which gives the message:
>> 
>> R Session Aborted
>> R encountered a fatal error
>> The session was terminated
>> Start New Session
>> 
>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older iMac
>> running 10.15.7. The problem occurs with both machines.
>> 
>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the version
>> of the package around 2017, corresponding to the last time I used it) the
>> problem goes away.
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C7e802ce732d54cb7609c08d9b29810bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637737188469988655%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=r7I1Q6d2VlXeVcG3cvEneRngAKuJTqJyNIjQ4xuuQpg%3D&amp;reserved=0
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C7e802ce732d54cb7609c08d9b29810bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637737188469988655%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=r7I1Q6d2VlXeVcG3cvEneRngAKuJTqJyNIjQ4xuuQpg%3D&amp;reserved=0


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Nov 28 23:53:00 2021
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 29 Nov 2021 11:53:00 +1300
Subject: [R-SIG-Mac] [External]  Rmpfr crashes on Mac
In-Reply-To: <CADd2D4+MYFMeAAO05pBLnJiAtU_SE_Jww6i7O3Y1AUx8Q2YJVg@mail.gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CADd2D4+MYFMeAAO05pBLnJiAtU_SE_Jww6i7O3Y1AUx8Q2YJVg@mail.gmail.com>
Message-ID: <00736843-54C0-4A8D-876C-51046F38267B@R-project.org>


Dev,

as a first step, please don't use RStudio - we have to establish if this is an R issue or not first (RStudio is not R). Second, if it still crashes, please provide
1) the crash report
2) the output od sesionInfo() in R and
3) the output of
system_profiler SPHardwareDataType SPSoftwareDataType
fron Terminal (or system("system_profiler SPHardwareDataType SPSoftwareDataType") in R).

Cheers,
Simon



> On Nov 29, 2021, at 9:36 AM, Dev Chakraborty <dpc10ster at gmail.com> wrote:
> 
> I still get the crash. I tried to recreate your commands on my machine
> (macOS Monterey, Version 12.0.1). Here is a summary; further details are
> below.
> 
> 1. Installing from CRAN downloaded file Rmpfr_0.8-7.tar.gz failed, see
> further details.
> 2. Therefore I had to instal the binary file from CRAN, see further details.
> 3. Loaded library(Rmpfr), see further details
> 4. Ran the two commands at the RStudio console:
> x <- mpfr(-50, 2000)
> y <- mpfr(-50.1, 2000)
> This caused a crash.
> 5. Restarted my system and ran:
> 
> version
>               _
> platform       x86_64-apple-darwin17.0
> arch           x86_64
> os             darwin17.0
> system         x86_64, darwin17.0
> status
> major          4
> minor          1.1
> year           2021
> month          08
> day            10
> svn rev        80725
> language       R
> version.string R version 4.1.1 (2021-08-10)
> nickname       Kick Things
> 
> 6. Details of my machine (system report)
> Model Name: MacBook Pro
>  Model Identifier: MacBookPro11,5
>  Processor Name: Quad-Core Intel Core i7
>  Processor Speed: 2.5 GHz
>  Number of Processors: 1
>  Total Number of Cores: 4
>  L2 Cache (per Core): 256 KB
>  L3 Cache: 6 MB
>  Hyper-Threading Technology: Enabled
>  Memory: 16 GB
>  System Firmware Version: 428.40.10.0.0
>  OS Loader Version: 540.40.4~45
>  SMC Version (system): 2.30f2
>  Serial Number (system): C02PTX43G8WP
>  Hardware UUID: 85D23F6B-40E1-5D82-BF89-909EF7141116
>  Provisioning UDID: 85D23F6B-40E1-5D82-BF89-909EF7141116
> 
> 
> Other details
> 1.
> install.packages("~/Downloads/Rmpfr_0.8-7.tar.gz", repos = NULL, type =
> "source")
> * installing *source* package ?Rmpfr? ...
> ** package ?Rmpfr? successfully unpacked and MD5 sums checked
> ** using staged installation
> checking for gcc... clang -mmacosx-version-min=10.13
> checking whether the C compiler works... yes
> checking for C compiler default output file name... a.out
> checking for suffix of executables...
> checking whether we are cross compiling... no
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether clang -mmacosx-version-min=10.13 accepts -g... yes
> checking for clang -mmacosx-version-min=10.13 option to accept ISO C89...
> none needed
> checking how to run the C preprocessor... clang -mmacosx-version-min=10.13
> -E
> checking for grep that handles long lines and -e... /usr/bin/grep
> checking for egrep... /usr/bin/grep -E
> checking for ANSI C header files... rm: conftest.dSYM: is a directory
> rm: conftest.dSYM: is a directory
> yes
> checking for sys/types.h... yes
> checking for sys/stat.h... yes
> checking for stdlib.h... yes
> checking for string.h... yes
> checking for memory.h... yes
> checking for strings.h... yes
> checking for inttypes.h... yes
> checking for stdint.h... yes
> checking for unistd.h... yes
> checking mpfr.h usability... no
> checking mpfr.h presence... no
> checking for mpfr.h... no
> configure: error: Header file mpfr.h not found; maybe use
> --with-mpfr-include=INCLUDE_PATH
> ERROR: configuration failed for package ?Rmpfr?
> * removing
> ?/Library/Frameworks/R.framework/Versions/4.1/Resources/library/Rmpfr?
> Warning in install.packages :
>  installation of package ?/Users/Dev/Downloads/Rmpfr_0.8-7.tar.gz? had
> non-zero exit status
> 
> 2.
> install.packages("Rmpfr")
> trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.1/Rmpfr_0.8-7.tgz'
> Content type 'application/x-gzip' length 1556368 bytes (1.5 MB)
> ==================================================
> downloaded 1.5 MB
> 
> 
> The downloaded binary packages are in
> /var/folders/d1/mx6dcbzx3v39r260458z2b200000gn/T//Rtmpfbzg9i/downloaded_packages
>> 
> 
> 3.
> library(Rmpfr)
> Loading required package: gmp
> 
> Attaching package: ?gmp?
> 
> The following objects are masked from ?package:base?:
> 
>    %*%, apply, crossprod, matrix, tcrossprod
> 
> C code of R package 'Rmpfr': GMP using 64 bits per limb
> 
> 
> Attaching package: ?Rmpfr?
> 
> The following object is masked from ?package:gmp?:
> 
>    outer
> 
> The following objects are masked from ?package:stats?:
> 
>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
> 
> The following objects are masked from ?package:base?:
> 
>    cbind, pmax, pmin, rbind
> 
> 
> On Sun, Nov 28, 2021 at 12:53 PM Richard M. Heiberger <rmh at temple.edu>
> wrote:
> 
>> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
>> aarch64-apple-darwin20
>> I am running inside Emacs using ESS
>> 
>>> packageVersion("Rmpfr")
>> [1] ?0.8.7?
>>> library(Rmpfr)
>> Loading required package: gmp
>> 
>> Attaching package: ?gmp?
>> 
>> The following objects are masked from ?package:base?:
>> 
>>    %*%, apply, crossprod, matrix, tcrossprod
>> 
>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>> 
>> 
>> Attaching package: ?Rmpfr?
>> 
>> The following object is masked from ?package:gmp?:
>> 
>>    outer
>> 
>> The following objects are masked from ?package:stats?:
>> 
>>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
>> 
>> The following objects are masked from ?package:base?:
>> 
>>    cbind, pmax, pmin, rbind
>> 
>>> x1 <- mpfr(-50, 200)
>>> x1
>> 1 'mpfr' number of precision  200   bits
>> [1] -50
>>> x2 <- mpfr(-50.1, 200)
>>> x2
>> 1 'mpfr' number of precision  200   bits
>> [1] -50.10000000000000142108547152020037174224853515625
>>> version
>>               _
>> platform       aarch64-apple-darwin20
>> arch           aarch64
>> os             darwin20
>> system         aarch64, darwin20
>> status
>> major          4
>> minor          1.2
>> year           2021
>> month          11
>> day            01
>> svn rev        81115
>> language       R
>> version.string R version 4.1.2 (2021-11-01)
>> nickname       Bird Hippie
>>> 
>> 
>>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
>>> 
>>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
>>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
>>> 
>>> library(Rmpfr)
>>> x1 <- mpfr(-50, 200)
>>> x2 <- mpfr(-50.1, 200)
>>> 
>>> Which gives the message:
>>> 
>>> R Session Aborted
>>> R encountered a fatal error
>>> The session was terminated
>>> Start New Session
>>> 
>>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
>> iMac
>>> running 10.15.7. The problem occurs with both machines.
>>> 
>>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
>> version
>>> of the package around 2017, corresponding to the last time I used it) the
>>> problem goes away.
>>> 
>>>      [[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> 
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
>> 
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From kev|nu@hey @end|ng |rom gm@||@com  Mon Nov 29 00:30:18 2021
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Sun, 28 Nov 2021 15:30:18 -0800
Subject: [R-SIG-Mac] [External] Rmpfr crashes on Mac
In-Reply-To: <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
Message-ID: <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>

I can reproduce something similar on my M1 macOS machine, when using the
x86_64 build of R. I see:

> x1 <- mpfr(-50, 200)
 *** caught illegal operation ***
address 0x10c5f623b, cause 'illegal opcode'

This is with the binary of Rmpfr 0.8-7 as from CRAN, with R 4.1.2. Here's
what LLDB says:

* thread #1, queue = 'com.apple.main-thread', stop reason =
EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
    frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
Rmpfr.so`mpfr_set_d:
->  0x10f69c23b <+43>: vucomisd %xmm0, %xmm0
    0x10f69c23f <+47>: jp     0x10f69c39a               ; <+394>
    0x10f69c245 <+53>: vpxor  %xmm1, %xmm1, %xmm1
    0x10f69c249 <+57>: vucomisd %xmm1, %xmm0

And the relevant part of the stack trace:

(lldb) bt
* thread #1, queue = 'com.apple.main-thread', stop reason =
EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
  * frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
    frame #1: 0x000000010f6809d3 Rmpfr.so`d2mpfr1_(x=-50,
i_prec=<unavailable>, rnd=MPFR_RNDN) at convert.c:129:5 [opt]
    frame #2: 0x000000010f680eb0 Rmpfr.so`d2mpfr1_list(x=<unavailable>,
prec=<unavailable>, rnd_mode=<unavailable>) at convert.c:186:29 [opt]

At least for my case, my guess is that the 'vucomisd' instruction isn't
available via Apple's Rosetta emulation. It's possible users with older
macOS machines not supporting AVX instructions could see this, as well?

Best,
Kevin

On Sun, Nov 28, 2021 at 9:54 AM Richard M. Heiberger <rmh at temple.edu> wrote:

> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
> aarch64-apple-darwin20
> I am running inside Emacs using ESS
>
> > packageVersion("Rmpfr")
> [1] ?0.8.7?
> > library(Rmpfr)
> Loading required package: gmp
>
> Attaching package: ?gmp?
>
> The following objects are masked from ?package:base?:
>
>     %*%, apply, crossprod, matrix, tcrossprod
>
> C code of R package 'Rmpfr': GMP using 64 bits per limb
>
>
> Attaching package: ?Rmpfr?
>
> The following object is masked from ?package:gmp?:
>
>     outer
>
> The following objects are masked from ?package:stats?:
>
>     dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
>
> The following objects are masked from ?package:base?:
>
>     cbind, pmax, pmin, rbind
>
> > x1 <- mpfr(-50, 200)
> > x1
> 1 'mpfr' number of precision  200   bits
> [1] -50
> > x2 <- mpfr(-50.1, 200)
> > x2
> 1 'mpfr' number of precision  200   bits
> [1] -50.10000000000000142108547152020037174224853515625
> > version
>                _
> platform       aarch64-apple-darwin20
> arch           aarch64
> os             darwin20
> system         aarch64, darwin20
> status
> major          4
> minor          1.2
> year           2021
> month          11
> day            01
> svn rev        81115
> language       R
> version.string R version 4.1.2 (2021-11-01)
> nickname       Bird Hippie
> >
>
> > On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
> >
> > I used package Rmpfr ca. 2017 and it worked fine. The latest version
> > (0.8-7) causes R (running under RStudio) to crash. A simple example is:
> >
> > library(Rmpfr)
> > x1 <- mpfr(-50, 200)
> > x2 <- mpfr(-50.1, 200)
> >
> > Which gives the message:
> >
> > R Session Aborted
> > R encountered a fatal error
> > The session was terminated
> > Start New Session
> >
> > I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
> iMac
> > running 10.15.7. The problem occurs with both machines.
> >
> > When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
> version
> > of the package around 2017, corresponding to the last time I used it) the
> > problem goes away.
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> >
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>

	[[alternative HTML version deleted]]


From er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t  Mon Nov 29 00:37:44 2021
From: er|ch@neuw|rth @end|ng |rom un|v|e@@c@@t (Erich Neuwirth)
Date: Mon, 29 Nov 2021 00:37:44 +0100
Subject: [R-SIG-Mac] [External] Rmpfr crashes on Mac
In-Reply-To: <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
Message-ID: <D5A3BC49-A79E-45DE-8673-4214478BB7B7@univie.ac.at>

My iMac ist Late 2014, so it is rather old (and x86 architecture)
As I already wrote, I am experiencing the crash also.


> On 29.11.2021, at 00:30, Kevin Ushey <kevinushey at gmail.com> wrote:
> 
> I can reproduce something similar on my M1 macOS machine, when using the
> x86_64 build of R. I see:
> 
>> x1 <- mpfr(-50, 200)
> *** caught illegal operation ***
> address 0x10c5f623b, cause 'illegal opcode'
> 
> This is with the binary of Rmpfr 0.8-7 as from CRAN, with R 4.1.2. Here's
> what LLDB says:
> 
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>    frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
> Rmpfr.so`mpfr_set_d:
> ->  0x10f69c23b <+43>: vucomisd %xmm0, %xmm0
>    0x10f69c23f <+47>: jp     0x10f69c39a               ; <+394>
>    0x10f69c245 <+53>: vpxor  %xmm1, %xmm1, %xmm1
>    0x10f69c249 <+57>: vucomisd %xmm1, %xmm0
> 
> And the relevant part of the stack trace:
> 
> (lldb) bt
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>  * frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
>    frame #1: 0x000000010f6809d3 Rmpfr.so`d2mpfr1_(x=-50,
> i_prec=<unavailable>, rnd=MPFR_RNDN) at convert.c:129:5 [opt]
>    frame #2: 0x000000010f680eb0 Rmpfr.so`d2mpfr1_list(x=<unavailable>,
> prec=<unavailable>, rnd_mode=<unavailable>) at convert.c:186:29 [opt]
> 
> At least for my case, my guess is that the 'vucomisd' instruction isn't
> available via Apple's Rosetta emulation. It's possible users with older
> macOS machines not supporting AVX instructions could see this, as well?
> 
> Best,
> Kevin
> 
> On Sun, Nov 28, 2021 at 9:54 AM Richard M. Heiberger <rmh at temple.edu> wrote:
> 
>> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
>> aarch64-apple-darwin20
>> I am running inside Emacs using ESS
>> 
>>> packageVersion("Rmpfr")
>> [1] ?0.8.7?
>>> library(Rmpfr)
>> Loading required package: gmp
>> 
>> Attaching package: ?gmp?
>> 
>> The following objects are masked from ?package:base?:
>> 
>>    %*%, apply, crossprod, matrix, tcrossprod
>> 
>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>> 
>> 
>> Attaching package: ?Rmpfr?
>> 
>> The following object is masked from ?package:gmp?:
>> 
>>    outer
>> 
>> The following objects are masked from ?package:stats?:
>> 
>>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
>> 
>> The following objects are masked from ?package:base?:
>> 
>>    cbind, pmax, pmin, rbind
>> 
>>> x1 <- mpfr(-50, 200)
>>> x1
>> 1 'mpfr' number of precision  200   bits
>> [1] -50
>>> x2 <- mpfr(-50.1, 200)
>>> x2
>> 1 'mpfr' number of precision  200   bits
>> [1] -50.10000000000000142108547152020037174224853515625
>>> version
>>               _
>> platform       aarch64-apple-darwin20
>> arch           aarch64
>> os             darwin20
>> system         aarch64, darwin20
>> status
>> major          4
>> minor          1.2
>> year           2021
>> month          11
>> day            01
>> svn rev        81115
>> language       R
>> version.string R version 4.1.2 (2021-11-01)
>> nickname       Bird Hippie
>>> 
>> 
>>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
>>> 
>>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
>>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
>>> 
>>> library(Rmpfr)
>>> x1 <- mpfr(-50, 200)
>>> x2 <- mpfr(-50.1, 200)
>>> 
>>> Which gives the message:
>>> 
>>> R Session Aborted
>>> R encountered a fatal error
>>> The session was terminated
>>> Start New Session
>>> 
>>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
>> iMac
>>> running 10.15.7. The problem occurs with both machines.
>>> 
>>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
>> version
>>> of the package around 2017, corresponding to the last time I used it) the
>>> problem goes away.
>>> 
>>>      [[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> 
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 699 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20211129/57b44c9e/attachment-0001.sig>

From er|ch@@ub@ @end|ng |rom neuw|rth@pr|v@@t  Mon Nov 29 00:39:32 2021
From: er|ch@@ub@ @end|ng |rom neuw|rth@pr|v@@t (Erich Subscriptions)
Date: Mon, 29 Nov 2021 00:39:32 +0100
Subject: [R-SIG-Mac] [External] Rmpfr crashes on Mac
In-Reply-To: <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
Message-ID: <19B46D69-B70F-49F0-BDA7-732878ECE03C@neuwirth.priv.at>

One more thing:
After compiling Rmpfr from source,
things worked.

> On 29.11.2021, at 00:30, Kevin Ushey <kevinushey at gmail.com> wrote:
> 
> I can reproduce something similar on my M1 macOS machine, when using the
> x86_64 build of R. I see:
> 
>> x1 <- mpfr(-50, 200)
> *** caught illegal operation ***
> address 0x10c5f623b, cause 'illegal opcode'
> 
> This is with the binary of Rmpfr 0.8-7 as from CRAN, with R 4.1.2. Here's
> what LLDB says:
> 
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>    frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
> Rmpfr.so`mpfr_set_d:
> ->  0x10f69c23b <+43>: vucomisd %xmm0, %xmm0
>    0x10f69c23f <+47>: jp     0x10f69c39a               ; <+394>
>    0x10f69c245 <+53>: vpxor  %xmm1, %xmm1, %xmm1
>    0x10f69c249 <+57>: vucomisd %xmm1, %xmm0
> 
> And the relevant part of the stack trace:
> 
> (lldb) bt
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>  * frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
>    frame #1: 0x000000010f6809d3 Rmpfr.so`d2mpfr1_(x=-50,
> i_prec=<unavailable>, rnd=MPFR_RNDN) at convert.c:129:5 [opt]
>    frame #2: 0x000000010f680eb0 Rmpfr.so`d2mpfr1_list(x=<unavailable>,
> prec=<unavailable>, rnd_mode=<unavailable>) at convert.c:186:29 [opt]
> 
> At least for my case, my guess is that the 'vucomisd' instruction isn't
> available via Apple's Rosetta emulation. It's possible users with older
> macOS machines not supporting AVX instructions could see this, as well?
> 
> Best,
> Kevin
> 
> On Sun, Nov 28, 2021 at 9:54 AM Richard M. Heiberger <rmh at temple.edu> wrote:
> 
>> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
>> aarch64-apple-darwin20
>> I am running inside Emacs using ESS
>> 
>>> packageVersion("Rmpfr")
>> [1] ?0.8.7?
>>> library(Rmpfr)
>> Loading required package: gmp
>> 
>> Attaching package: ?gmp?
>> 
>> The following objects are masked from ?package:base?:
>> 
>>    %*%, apply, crossprod, matrix, tcrossprod
>> 
>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>> 
>> 
>> Attaching package: ?Rmpfr?
>> 
>> The following object is masked from ?package:gmp?:
>> 
>>    outer
>> 
>> The following objects are masked from ?package:stats?:
>> 
>>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
>> 
>> The following objects are masked from ?package:base?:
>> 
>>    cbind, pmax, pmin, rbind
>> 
>>> x1 <- mpfr(-50, 200)
>>> x1
>> 1 'mpfr' number of precision  200   bits
>> [1] -50
>>> x2 <- mpfr(-50.1, 200)
>>> x2
>> 1 'mpfr' number of precision  200   bits
>> [1] -50.10000000000000142108547152020037174224853515625
>>> version
>>               _
>> platform       aarch64-apple-darwin20
>> arch           aarch64
>> os             darwin20
>> system         aarch64, darwin20
>> status
>> major          4
>> minor          1.2
>> year           2021
>> month          11
>> day            01
>> svn rev        81115
>> language       R
>> version.string R version 4.1.2 (2021-11-01)
>> nickname       Bird Hippie
>>> 
>> 
>>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
>>> 
>>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
>>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
>>> 
>>> library(Rmpfr)
>>> x1 <- mpfr(-50, 200)
>>> x2 <- mpfr(-50.1, 200)
>>> 
>>> Which gives the message:
>>> 
>>> R Session Aborted
>>> R encountered a fatal error
>>> The session was terminated
>>> Start New Session
>>> 
>>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
>> iMac
>>> running 10.15.7. The problem occurs with both machines.
>>> 
>>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
>> version
>>> of the package around 2017, corresponding to the last time I used it) the
>>> problem goes away.
>>> 
>>>      [[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> 
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From dpc10@ter @end|ng |rom gm@||@com  Mon Nov 29 00:56:13 2021
From: dpc10@ter @end|ng |rom gm@||@com (Dev Chakraborty)
Date: Sun, 28 Nov 2021 18:56:13 -0500
Subject: [R-SIG-Mac] [External] Rmpfr crashes on Mac
In-Reply-To: <19B46D69-B70F-49F0-BDA7-732878ECE03C@neuwirth.priv.at>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
 <19B46D69-B70F-49F0-BDA7-732878ECE03C@neuwirth.priv.at>
Message-ID: <CADd2D4Jdy-KrmwwiqOef2vo_Wbq2_UTsPSUNTsWvTvDVBqNDWw@mail.gmail.com>

I am using:

RStudio 2021.09.0+351 "Ghost Orchid" Release
(077589bcad3467ae79f318afe8641a1899a51606, 2021-09-20) for macOS
Mozilla/5.0 (Macintosh; Intel Mac OS X 12_0_1) AppleWebKit/537.36 (KHTML,
like Gecko) QtWebEngine/5.12.10 Chrome/69.0.3497.128 Safari/537.36

It is an RStudio issue; the problem does not occur when I run R from the
Console.

Thanks for the suggestion.

Dev

On Sun, Nov 28, 2021 at 6:39 PM Erich Subscriptions <
erich.subs at neuwirth.priv.at> wrote:

> One more thing:
> After compiling Rmpfr from source,
> things worked.
>
> > On 29.11.2021, at 00:30, Kevin Ushey <kevinushey at gmail.com> wrote:
> >
> > I can reproduce something similar on my M1 macOS machine, when using the
> > x86_64 build of R. I see:
> >
> >> x1 <- mpfr(-50, 200)
> > *** caught illegal operation ***
> > address 0x10c5f623b, cause 'illegal opcode'
> >
> > This is with the binary of Rmpfr 0.8-7 as from CRAN, with R 4.1.2. Here's
> > what LLDB says:
> >
> > * thread #1, queue = 'com.apple.main-thread', stop reason =
> > EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
> >    frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
> > Rmpfr.so`mpfr_set_d:
> > ->  0x10f69c23b <+43>: vucomisd %xmm0, %xmm0
> >    0x10f69c23f <+47>: jp     0x10f69c39a               ; <+394>
> >    0x10f69c245 <+53>: vpxor  %xmm1, %xmm1, %xmm1
> >    0x10f69c249 <+57>: vucomisd %xmm1, %xmm0
> >
> > And the relevant part of the stack trace:
> >
> > (lldb) bt
> > * thread #1, queue = 'com.apple.main-thread', stop reason =
> > EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
> >  * frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
> >    frame #1: 0x000000010f6809d3 Rmpfr.so`d2mpfr1_(x=-50,
> > i_prec=<unavailable>, rnd=MPFR_RNDN) at convert.c:129:5 [opt]
> >    frame #2: 0x000000010f680eb0 Rmpfr.so`d2mpfr1_list(x=<unavailable>,
> > prec=<unavailable>, rnd_mode=<unavailable>) at convert.c:186:29 [opt]
> >
> > At least for my case, my guess is that the 'vucomisd' instruction isn't
> > available via Apple's Rosetta emulation. It's possible users with older
> > macOS machines not supporting AVX instructions could see this, as well?
> >
> > Best,
> > Kevin
> >
> > On Sun, Nov 28, 2021 at 9:54 AM Richard M. Heiberger <rmh at temple.edu>
> wrote:
> >
> >> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
> >> aarch64-apple-darwin20
> >> I am running inside Emacs using ESS
> >>
> >>> packageVersion("Rmpfr")
> >> [1] ?0.8.7?
> >>> library(Rmpfr)
> >> Loading required package: gmp
> >>
> >> Attaching package: ?gmp?
> >>
> >> The following objects are masked from ?package:base?:
> >>
> >>    %*%, apply, crossprod, matrix, tcrossprod
> >>
> >> C code of R package 'Rmpfr': GMP using 64 bits per limb
> >>
> >>
> >> Attaching package: ?Rmpfr?
> >>
> >> The following object is masked from ?package:gmp?:
> >>
> >>    outer
> >>
> >> The following objects are masked from ?package:stats?:
> >>
> >>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
> >>
> >> The following objects are masked from ?package:base?:
> >>
> >>    cbind, pmax, pmin, rbind
> >>
> >>> x1 <- mpfr(-50, 200)
> >>> x1
> >> 1 'mpfr' number of precision  200   bits
> >> [1] -50
> >>> x2 <- mpfr(-50.1, 200)
> >>> x2
> >> 1 'mpfr' number of precision  200   bits
> >> [1] -50.10000000000000142108547152020037174224853515625
> >>> version
> >>               _
> >> platform       aarch64-apple-darwin20
> >> arch           aarch64
> >> os             darwin20
> >> system         aarch64, darwin20
> >> status
> >> major          4
> >> minor          1.2
> >> year           2021
> >> month          11
> >> day            01
> >> svn rev        81115
> >> language       R
> >> version.string R version 4.1.2 (2021-11-01)
> >> nickname       Bird Hippie
> >>>
> >>
> >>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com>
> wrote:
> >>>
> >>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
> >>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
> >>>
> >>> library(Rmpfr)
> >>> x1 <- mpfr(-50, 200)
> >>> x2 <- mpfr(-50.1, 200)
> >>>
> >>> Which gives the message:
> >>>
> >>> R Session Aborted
> >>> R encountered a fatal error
> >>> The session was terminated
> >>> Start New Session
> >>>
> >>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
> >> iMac
> >>> running 10.15.7. The problem occurs with both machines.
> >>>
> >>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
> >> version
> >>> of the package around 2017, corresponding to the last time I used it)
> the
> >>> problem goes away.
> >>>
> >>>      [[alternative HTML version deleted]]
> >>>
> >>> _______________________________________________
> >>> R-SIG-Mac mailing list
> >>> R-SIG-Mac at r-project.org
> >>>
> >>
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
> >>
> >> _______________________________________________
> >> R-SIG-Mac mailing list
> >> R-SIG-Mac at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Nov 29 03:22:53 2021
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 29 Nov 2021 15:22:53 +1300
Subject: [R-SIG-Mac] [External] Rmpfr crashes on Mac
In-Reply-To: <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
Message-ID: <E2A4F440-947C-40B8-9A8F-2A4D72B5E33E@R-project.org>


Kevin,

that is a different story, yes, Rosetta2 is incomplete - the advice on M1 is to use native R.

Cheers,
Simon


> On Nov 29, 2021, at 12:30 PM, Kevin Ushey <kevinushey at gmail.com> wrote:
> 
> I can reproduce something similar on my M1 macOS machine, when using the
> x86_64 build of R. I see:
> 
>> x1 <- mpfr(-50, 200)
> *** caught illegal operation ***
> address 0x10c5f623b, cause 'illegal opcode'
> 
> This is with the binary of Rmpfr 0.8-7 as from CRAN, with R 4.1.2. Here's
> what LLDB says:
> 
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>    frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
> Rmpfr.so`mpfr_set_d:
> ->  0x10f69c23b <+43>: vucomisd %xmm0, %xmm0
>    0x10f69c23f <+47>: jp     0x10f69c39a               ; <+394>
>    0x10f69c245 <+53>: vpxor  %xmm1, %xmm1, %xmm1
>    0x10f69c249 <+57>: vucomisd %xmm1, %xmm0
> 
> And the relevant part of the stack trace:
> 
> (lldb) bt
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>  * frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
>    frame #1: 0x000000010f6809d3 Rmpfr.so`d2mpfr1_(x=-50,
> i_prec=<unavailable>, rnd=MPFR_RNDN) at convert.c:129:5 [opt]
>    frame #2: 0x000000010f680eb0 Rmpfr.so`d2mpfr1_list(x=<unavailable>,
> prec=<unavailable>, rnd_mode=<unavailable>) at convert.c:186:29 [opt]
> 
> At least for my case, my guess is that the 'vucomisd' instruction isn't
> available via Apple's Rosetta emulation. It's possible users with older
> macOS machines not supporting AVX instructions could see this, as well?
> 
> Best,
> Kevin
> 
> On Sun, Nov 28, 2021 at 9:54 AM Richard M. Heiberger <rmh at temple.edu> wrote:
> 
>> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
>> aarch64-apple-darwin20
>> I am running inside Emacs using ESS
>> 
>>> packageVersion("Rmpfr")
>> [1] ?0.8.7?
>>> library(Rmpfr)
>> Loading required package: gmp
>> 
>> Attaching package: ?gmp?
>> 
>> The following objects are masked from ?package:base?:
>> 
>>    %*%, apply, crossprod, matrix, tcrossprod
>> 
>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>> 
>> 
>> Attaching package: ?Rmpfr?
>> 
>> The following object is masked from ?package:gmp?:
>> 
>>    outer
>> 
>> The following objects are masked from ?package:stats?:
>> 
>>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
>> 
>> The following objects are masked from ?package:base?:
>> 
>>    cbind, pmax, pmin, rbind
>> 
>>> x1 <- mpfr(-50, 200)
>>> x1
>> 1 'mpfr' number of precision  200   bits
>> [1] -50
>>> x2 <- mpfr(-50.1, 200)
>>> x2
>> 1 'mpfr' number of precision  200   bits
>> [1] -50.10000000000000142108547152020037174224853515625
>>> version
>>               _
>> platform       aarch64-apple-darwin20
>> arch           aarch64
>> os             darwin20
>> system         aarch64, darwin20
>> status
>> major          4
>> minor          1.2
>> year           2021
>> month          11
>> day            01
>> svn rev        81115
>> language       R
>> version.string R version 4.1.2 (2021-11-01)
>> nickname       Bird Hippie
>>> 
>> 
>>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com> wrote:
>>> 
>>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
>>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
>>> 
>>> library(Rmpfr)
>>> x1 <- mpfr(-50, 200)
>>> x2 <- mpfr(-50.1, 200)
>>> 
>>> Which gives the message:
>>> 
>>> R Session Aborted
>>> R encountered a fatal error
>>> The session was terminated
>>> Start New Session
>>> 
>>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
>> iMac
>>> running 10.15.7. The problem occurs with both machines.
>>> 
>>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
>> version
>>> of the package around 2017, corresponding to the last time I used it) the
>>> problem goes away.
>>> 
>>>      [[alternative HTML version deleted]]
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> 
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From kev|nu@hey @end|ng |rom gm@||@com  Mon Nov 29 06:43:04 2021
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Sun, 28 Nov 2021 21:43:04 -0800
Subject: [R-SIG-Mac] [External] Rmpfr crashes on Mac
In-Reply-To: <E2A4F440-947C-40B8-9A8F-2A4D72B5E33E@R-project.org>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
 <E2A4F440-947C-40B8-9A8F-2A4D72B5E33E@R-project.org>
Message-ID: <CAJXgQP2Qz18-5+ah9y1fhYt5uVU3gpnpBRLG1zhoi8NTvCtwoA@mail.gmail.com>

Okay, I've reproduced the crash on my 2013 Intel MacBook Pro. In this case,
the issue reproduces more readily because RStudio is calling str() behind
the scenes (which is the cause of the crash in this case). So, a plain R
reproducible example:

library(Rmpfr)
x <- mpfr(-50.1, 200)
str(x)

and I see:

> str(x)
Class 'mpfr' [package "Rmpfr"] of length 1 and precision 200

 *** caught illegal operation ***
address 0x112833ed5, cause 'illegal opcode'

Traceback:
 1: .mpfr2str(x, digits, maybe.full = maybe.full, base = base)
 2: formatMpfr(object, digits = digits.d, drop0trailing = drop0trailing,
  ...)
 3: str.mpfr(x)
 4: str(x)

From lldb:

* thread #1, queue = 'com.apple.main-thread', stop reason =
EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
    frame #0: 0x0000000107ec7ed5 Rmpfr.so`mpfr_get_str_aux + 165
Rmpfr.so`mpfr_get_str_aux:
->  0x107ec7ed5 <+165>: adcxq  %rsi, %rcx
    0x107ec7edb <+171>: movq   %r10, %rdi
    0x107ec7ede <+174>: movq   %r8, %rsi
    0x107ec7ee1 <+177>: movq   %r10, %rbx

and relevant part of the backtrace:

(lldb) bt
* thread #1, queue = 'com.apple.main-thread', stop reason =
EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
  * frame #0: 0x0000000107ec7ed5 Rmpfr.so`mpfr_get_str_aux + 165
    frame #1: 0x0000000107ec78da Rmpfr.so`mpfr_get_str + 2890
    frame #2: 0x0000000107eb9c9e Rmpfr.so`mpfr2str(x=0x00000001053ed768,
digits=<unavailable>, maybeFull=<unavailable>, base=<unavailable>) at
convert.c:608:2 [opt]
    < ... >

If I understand correctly, 'adcx' was introduced with Broadwell CPUs (so,
October 2014) and so that could explain why I'm seeing this crash. It'd be
helpful if others could try to verify with newer / older macOS machines,
though.

> sessionInfo()
R version 4.1.2 (2021-11-01)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Best,
Kevin

On Sun, Nov 28, 2021 at 6:22 PM Simon Urbanek <simon.urbanek at r-project.org>
wrote:

> Kevin,
>
> that is a different story, yes, Rosetta2 is incomplete - the advice on M1
> is to use native R.
>
> Cheers,
> Simon
>
>
> > On Nov 29, 2021, at 12:30 PM, Kevin Ushey <kevinushey at gmail.com> wrote:
> >
> > I can reproduce something similar on my M1 macOS machine, when using the
> > x86_64 build of R. I see:
> >
> >> x1 <- mpfr(-50, 200)
> > *** caught illegal operation ***
> > address 0x10c5f623b, cause 'illegal opcode'
> >
> > This is with the binary of Rmpfr 0.8-7 as from CRAN, with R 4.1.2. Here's
> > what LLDB says:
> >
> > * thread #1, queue = 'com.apple.main-thread', stop reason =
> > EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
> >    frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
> > Rmpfr.so`mpfr_set_d:
> > ->  0x10f69c23b <+43>: vucomisd %xmm0, %xmm0
> >    0x10f69c23f <+47>: jp     0x10f69c39a               ; <+394>
> >    0x10f69c245 <+53>: vpxor  %xmm1, %xmm1, %xmm1
> >    0x10f69c249 <+57>: vucomisd %xmm1, %xmm0
> >
> > And the relevant part of the stack trace:
> >
> > (lldb) bt
> > * thread #1, queue = 'com.apple.main-thread', stop reason =
> > EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
> >  * frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
> >    frame #1: 0x000000010f6809d3 Rmpfr.so`d2mpfr1_(x=-50,
> > i_prec=<unavailable>, rnd=MPFR_RNDN) at convert.c:129:5 [opt]
> >    frame #2: 0x000000010f680eb0 Rmpfr.so`d2mpfr1_list(x=<unavailable>,
> > prec=<unavailable>, rnd_mode=<unavailable>) at convert.c:186:29 [opt]
> >
> > At least for my case, my guess is that the 'vucomisd' instruction isn't
> > available via Apple's Rosetta emulation. It's possible users with older
> > macOS machines not supporting AVX instructions could see this, as well?
> >
> > Best,
> > Kevin
> >
> > On Sun, Nov 28, 2021 at 9:54 AM Richard M. Heiberger <rmh at temple.edu>
> wrote:
> >
> >> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
> >> aarch64-apple-darwin20
> >> I am running inside Emacs using ESS
> >>
> >>> packageVersion("Rmpfr")
> >> [1] ?0.8.7?
> >>> library(Rmpfr)
> >> Loading required package: gmp
> >>
> >> Attaching package: ?gmp?
> >>
> >> The following objects are masked from ?package:base?:
> >>
> >>    %*%, apply, crossprod, matrix, tcrossprod
> >>
> >> C code of R package 'Rmpfr': GMP using 64 bits per limb
> >>
> >>
> >> Attaching package: ?Rmpfr?
> >>
> >> The following object is masked from ?package:gmp?:
> >>
> >>    outer
> >>
> >> The following objects are masked from ?package:stats?:
> >>
> >>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
> >>
> >> The following objects are masked from ?package:base?:
> >>
> >>    cbind, pmax, pmin, rbind
> >>
> >>> x1 <- mpfr(-50, 200)
> >>> x1
> >> 1 'mpfr' number of precision  200   bits
> >> [1] -50
> >>> x2 <- mpfr(-50.1, 200)
> >>> x2
> >> 1 'mpfr' number of precision  200   bits
> >> [1] -50.10000000000000142108547152020037174224853515625
> >>> version
> >>               _
> >> platform       aarch64-apple-darwin20
> >> arch           aarch64
> >> os             darwin20
> >> system         aarch64, darwin20
> >> status
> >> major          4
> >> minor          1.2
> >> year           2021
> >> month          11
> >> day            01
> >> svn rev        81115
> >> language       R
> >> version.string R version 4.1.2 (2021-11-01)
> >> nickname       Bird Hippie
> >>>
> >>
> >>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com>
> wrote:
> >>>
> >>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
> >>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
> >>>
> >>> library(Rmpfr)
> >>> x1 <- mpfr(-50, 200)
> >>> x2 <- mpfr(-50.1, 200)
> >>>
> >>> Which gives the message:
> >>>
> >>> R Session Aborted
> >>> R encountered a fatal error
> >>> The session was terminated
> >>> Start New Session
> >>>
> >>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
> >> iMac
> >>> running 10.15.7. The problem occurs with both machines.
> >>>
> >>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
> >> version
> >>> of the package around 2017, corresponding to the last time I used it)
> the
> >>> problem goes away.
> >>>
> >>>      [[alternative HTML version deleted]]
> >>>
> >>> _______________________________________________
> >>> R-SIG-Mac mailing list
> >>> R-SIG-Mac at r-project.org
> >>>
> >>
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
> >>
> >> _______________________________________________
> >> R-SIG-Mac mailing list
> >> R-SIG-Mac at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
>
>

	[[alternative HTML version deleted]]


From rmh @end|ng |rom temp|e@edu  Mon Nov 29 07:58:59 2021
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Mon, 29 Nov 2021 06:58:59 +0000
Subject: [R-SIG-Mac] [External]  [External] Rmpfr crashes on Mac
In-Reply-To: <CAJXgQP2Qz18-5+ah9y1fhYt5uVU3gpnpBRLG1zhoi8NTvCtwoA@mail.gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
 <E2A4F440-947C-40B8-9A8F-2A4D72B5E33E@R-project.org>
 <CAJXgQP2Qz18-5+ah9y1fhYt5uVU3gpnpBRLG1zhoi8NTvCtwoA@mail.gmail.com>
Message-ID: <8787962C-303E-4463-9F00-2490F121D342@temple.edu>

works normally on Mac M1.

> On Nov 29, 2021, at 00:43, Kevin Ushey <kevinushey at gmail.com> wrote:
> 
> library(Rmpfr)
> x <- mpfr(-50.1, 200)
> str(x)
> 


From du@@@@dr|@n @end|ng |rom un|buc@ro  Mon Nov 29 09:38:45 2021
From: du@@@@dr|@n @end|ng |rom un|buc@ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Mon, 29 Nov 2021 10:38:45 +0200
Subject: [R-SIG-Mac] [External] Rmpfr crashes on Mac
In-Reply-To: <CAJXgQP2Qz18-5+ah9y1fhYt5uVU3gpnpBRLG1zhoi8NTvCtwoA@mail.gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
 <E2A4F440-947C-40B8-9A8F-2A4D72B5E33E@R-project.org>
 <CAJXgQP2Qz18-5+ah9y1fhYt5uVU3gpnpBRLG1zhoi8NTvCtwoA@mail.gmail.com>
Message-ID: <CAJ=0CtDGLgBo8vYV66hs=AoRfc3i0Dvn0K1fZGOhr4Uzx2yPpg@mail.gmail.com>

This works normally on my rather new-ish Mac (2020), Monterey 12.0.1, using:

> R.version
               _
platform       x86_64-apple-darwin17.0
arch           x86_64
os             darwin17.0
system         x86_64, darwin17.0
status
major          4
minor          1.1
year           2021
month          08
day            10
svn rev        80725
language       R
version.string R version 4.1.1 (2021-08-10)
nickname       Kick Things


> sessionInfo()
R version 4.1.1 (2021-08-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Monterey 12.0.1

Matrix products: default
BLAS:
/Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib
LAPACK:
/Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] Rmpfr_0.8-7 gmp_0.6-2.1 mylocal_1.0

loaded via a namespace (and not attached):
[1] compiler_4.1.1 tools_4.1.1    DBI_1.1.1      RMySQL_0.10.21 askpass_1.1


On Mon, 29 Nov 2021 at 07:43, Kevin Ushey <kevinushey at gmail.com> wrote:

> Okay, I've reproduced the crash on my 2013 Intel MacBook Pro. In this case,
> the issue reproduces more readily because RStudio is calling str() behind
> the scenes (which is the cause of the crash in this case). So, a plain R
> reproducible example:
>
> library(Rmpfr)
> x <- mpfr(-50.1, 200)
> str(x)
>
> and I see:
>
> > str(x)
> Class 'mpfr' [package "Rmpfr"] of length 1 and precision 200
>
>  *** caught illegal operation ***
> address 0x112833ed5, cause 'illegal opcode'
>
> Traceback:
>  1: .mpfr2str(x, digits, maybe.full = maybe.full, base = base)
>  2: formatMpfr(object, digits = digits.d, drop0trailing = drop0trailing,
>   ...)
>  3: str.mpfr(x)
>  4: str(x)
>
> From lldb:
>
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>     frame #0: 0x0000000107ec7ed5 Rmpfr.so`mpfr_get_str_aux + 165
> Rmpfr.so`mpfr_get_str_aux:
> ->  0x107ec7ed5 <+165>: adcxq  %rsi, %rcx
>     0x107ec7edb <+171>: movq   %r10, %rdi
>     0x107ec7ede <+174>: movq   %r8, %rsi
>     0x107ec7ee1 <+177>: movq   %r10, %rbx
>
> and relevant part of the backtrace:
>
> (lldb) bt
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>   * frame #0: 0x0000000107ec7ed5 Rmpfr.so`mpfr_get_str_aux + 165
>     frame #1: 0x0000000107ec78da Rmpfr.so`mpfr_get_str + 2890
>     frame #2: 0x0000000107eb9c9e Rmpfr.so`mpfr2str(x=0x00000001053ed768,
> digits=<unavailable>, maybeFull=<unavailable>, base=<unavailable>) at
> convert.c:608:2 [opt]
>     < ... >
>
> If I understand correctly, 'adcx' was introduced with Broadwell CPUs (so,
> October 2014) and so that could explain why I'm seeing this crash. It'd be
> helpful if others could try to verify with newer / older macOS machines,
> though.
>
> > sessionInfo()
> R version 4.1.2 (2021-11-01)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Big Sur 10.16
>
> Best,
> Kevin
>
> On Sun, Nov 28, 2021 at 6:22 PM Simon Urbanek <simon.urbanek at r-project.org
> >
> wrote:
>
> > Kevin,
> >
> > that is a different story, yes, Rosetta2 is incomplete - the advice on M1
> > is to use native R.
> >
> > Cheers,
> > Simon
> >
> >
> > > On Nov 29, 2021, at 12:30 PM, Kevin Ushey <kevinushey at gmail.com>
> wrote:
> > >
> > > I can reproduce something similar on my M1 macOS machine, when using
> the
> > > x86_64 build of R. I see:
> > >
> > >> x1 <- mpfr(-50, 200)
> > > *** caught illegal operation ***
> > > address 0x10c5f623b, cause 'illegal opcode'
> > >
> > > This is with the binary of Rmpfr 0.8-7 as from CRAN, with R 4.1.2.
> Here's
> > > what LLDB says:
> > >
> > > * thread #1, queue = 'com.apple.main-thread', stop reason =
> > > EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
> > >    frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
> > > Rmpfr.so`mpfr_set_d:
> > > ->  0x10f69c23b <+43>: vucomisd %xmm0, %xmm0
> > >    0x10f69c23f <+47>: jp     0x10f69c39a               ; <+394>
> > >    0x10f69c245 <+53>: vpxor  %xmm1, %xmm1, %xmm1
> > >    0x10f69c249 <+57>: vucomisd %xmm1, %xmm0
> > >
> > > And the relevant part of the stack trace:
> > >
> > > (lldb) bt
> > > * thread #1, queue = 'com.apple.main-thread', stop reason =
> > > EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
> > >  * frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
> > >    frame #1: 0x000000010f6809d3 Rmpfr.so`d2mpfr1_(x=-50,
> > > i_prec=<unavailable>, rnd=MPFR_RNDN) at convert.c:129:5 [opt]
> > >    frame #2: 0x000000010f680eb0 Rmpfr.so`d2mpfr1_list(x=<unavailable>,
> > > prec=<unavailable>, rnd_mode=<unavailable>) at convert.c:186:29 [opt]
> > >
> > > At least for my case, my guess is that the 'vucomisd' instruction isn't
> > > available via Apple's Rosetta emulation. It's possible users with older
> > > macOS machines not supporting AVX instructions could see this, as well?
> > >
> > > Best,
> > > Kevin
> > >
> > > On Sun, Nov 28, 2021 at 9:54 AM Richard M. Heiberger <rmh at temple.edu>
> > wrote:
> > >
> > >> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
> > >> aarch64-apple-darwin20
> > >> I am running inside Emacs using ESS
> > >>
> > >>> packageVersion("Rmpfr")
> > >> [1] ?0.8.7?
> > >>> library(Rmpfr)
> > >> Loading required package: gmp
> > >>
> > >> Attaching package: ?gmp?
> > >>
> > >> The following objects are masked from ?package:base?:
> > >>
> > >>    %*%, apply, crossprod, matrix, tcrossprod
> > >>
> > >> C code of R package 'Rmpfr': GMP using 64 bits per limb
> > >>
> > >>
> > >> Attaching package: ?Rmpfr?
> > >>
> > >> The following object is masked from ?package:gmp?:
> > >>
> > >>    outer
> > >>
> > >> The following objects are masked from ?package:stats?:
> > >>
> > >>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
> > >>
> > >> The following objects are masked from ?package:base?:
> > >>
> > >>    cbind, pmax, pmin, rbind
> > >>
> > >>> x1 <- mpfr(-50, 200)
> > >>> x1
> > >> 1 'mpfr' number of precision  200   bits
> > >> [1] -50
> > >>> x2 <- mpfr(-50.1, 200)
> > >>> x2
> > >> 1 'mpfr' number of precision  200   bits
> > >> [1] -50.10000000000000142108547152020037174224853515625
> > >>> version
> > >>               _
> > >> platform       aarch64-apple-darwin20
> > >> arch           aarch64
> > >> os             darwin20
> > >> system         aarch64, darwin20
> > >> status
> > >> major          4
> > >> minor          1.2
> > >> year           2021
> > >> month          11
> > >> day            01
> > >> svn rev        81115
> > >> language       R
> > >> version.string R version 4.1.2 (2021-11-01)
> > >> nickname       Bird Hippie
> > >>>
> > >>
> > >>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com>
> > wrote:
> > >>>
> > >>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
> > >>> (0.8-7) causes R (running under RStudio) to crash. A simple example
> is:
> > >>>
> > >>> library(Rmpfr)
> > >>> x1 <- mpfr(-50, 200)
> > >>> x2 <- mpfr(-50.1, 200)
> > >>>
> > >>> Which gives the message:
> > >>>
> > >>> R Session Aborted
> > >>> R encountered a fatal error
> > >>> The session was terminated
> > >>> Start New Session
> > >>>
> > >>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an
> older
> > >> iMac
> > >>> running 10.15.7. The problem occurs with both machines.
> > >>>
> > >>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
> > >> version
> > >>> of the package around 2017, corresponding to the last time I used it)
> > the
> > >>> problem goes away.
> > >>>
> > >>>      [[alternative HTML version deleted]]
> > >>>
> > >>> _______________________________________________
> > >>> R-SIG-Mac mailing list
> > >>> R-SIG-Mac at r-project.org
> > >>>
> > >>
> >
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
> > >>
> > >> _______________________________________________
> > >> R-SIG-Mac mailing list
> > >> R-SIG-Mac at r-project.org
> > >> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > >>
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > _______________________________________________
> > > R-SIG-Mac mailing list
> > > R-SIG-Mac at r-project.org
> > > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> > >
> >
> >
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


-- 
Adrian Dusa
University of Bucharest
Romanian Social Data Archive
Soseaua Panduri nr. 90-92
050663 Bucharest sector 5
Romania
https://adriandusa.eu

	[[alternative HTML version deleted]]


From gor@n@bro@trom @end|ng |rom umu@@e  Mon Nov 29 12:37:20 2021
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Mon, 29 Nov 2021 12:37:20 +0100
Subject: [R-SIG-Mac] [External] Rmpfr crashes on Mac
In-Reply-To: <CAJXgQP2Qz18-5+ah9y1fhYt5uVU3gpnpBRLG1zhoi8NTvCtwoA@mail.gmail.com>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
 <E2A4F440-947C-40B8-9A8F-2A4D72B5E33E@R-project.org>
 <CAJXgQP2Qz18-5+ah9y1fhYt5uVU3gpnpBRLG1zhoi8NTvCtwoA@mail.gmail.com>
Message-ID: <aab3ce2e-9f8b-f803-978f-f72891f3bd5a@umu.se>

I have the oldest MacBook Pro: mid 2010. Is it too early to upgrade to 
an M1Max one, for R purposes? Anyway, I get (this is R, but RStudio 
aborts too):

 > x1 <- mpfr(-50, 200)

  *** caught illegal operation ***
address 0x10fd8c23b, cause 'illegal opcode'

Traceback:
  1: mpfr.default(-50, 200)
  2: mpfr(-50, 200)

General info:


 > R.version
                _
platform       x86_64-apple-darwin17.0
arch           x86_64
os             darwin17.0
system         x86_64, darwin17.0
status
major          4
minor          1.2
year           2021
month          11
day            01
svn rev        81115
language       R
version.string R version 4.1.2 (2021-11-01)
nickname       Bird Hippie
 >

 > sessionInfo()
R version 4.1.2 (2021-11-01)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS High Sierra 10.13.6

Matrix products: default
BLAS: 
/Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib
LAPACK: 
/Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_4.1.2

 > system("system_profiler SPHardwareDataType SPSoftwareDataType")
Hardware:

     Hardware Overview:

       Model Name: MacBook Pro
       Model Identifier: MacBookPro6,2
       Processor Name: Intel Core i7
       Processor Speed: 2,66 GHz
       Number of Processors: 1
       Total Number of Cores: 2
       L2 Cache (per Core): 256 KB
       L3 Cache: 4 MB
       Memory: 8 GB
       Boot ROM Version: 99.0.0.0.0
       SMC Version (system): 1.58f17
       Serial Number (system): W8042281AGZ
       Hardware UUID: A1D55A7E-9CD1-59BD-AB78-E5B2518D4940
       Sudden Motion Sensor:
           State: Enabled

Software:

     System Software Overview:

       System Version: macOS 10.13.6 (17G14042)
       Kernel Version: Darwin 17.7.0
       Boot Volume: Samsung SSD
       Boot Mode: Normal
       Computer Name: MBP (2)
       User Name: G?ran Brostr?m (gobr0002)
       Secure Virtual Memory: Enabled
       System Integrity Protection: Enabled
       Time since boot: 25 minutes




Den 2021-11-29 kl. 06:43, skrev Kevin Ushey:
> Okay, I've reproduced the crash on my 2013 Intel MacBook Pro. In this case,
> the issue reproduces more readily because RStudio is calling str() behind
> the scenes (which is the cause of the crash in this case). So, a plain R
> reproducible example:
> 
> library(Rmpfr)
> x <- mpfr(-50.1, 200)
> str(x)
> 
> and I see:
> 
>> str(x)
> Class 'mpfr' [package "Rmpfr"] of length 1 and precision 200
> 
>   *** caught illegal operation ***
> address 0x112833ed5, cause 'illegal opcode'
> 
> Traceback:
>   1: .mpfr2str(x, digits, maybe.full = maybe.full, base = base)
>   2: formatMpfr(object, digits = digits.d, drop0trailing = drop0trailing,
>    ...)
>   3: str.mpfr(x)
>   4: str(x)
> 
>  From lldb:
> 
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>      frame #0: 0x0000000107ec7ed5 Rmpfr.so`mpfr_get_str_aux + 165
> Rmpfr.so`mpfr_get_str_aux:
> ->  0x107ec7ed5 <+165>: adcxq  %rsi, %rcx
>      0x107ec7edb <+171>: movq   %r10, %rdi
>      0x107ec7ede <+174>: movq   %r8, %rsi
>      0x107ec7ee1 <+177>: movq   %r10, %rbx
> 
> and relevant part of the backtrace:
> 
> (lldb) bt
> * thread #1, queue = 'com.apple.main-thread', stop reason =
> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>    * frame #0: 0x0000000107ec7ed5 Rmpfr.so`mpfr_get_str_aux + 165
>      frame #1: 0x0000000107ec78da Rmpfr.so`mpfr_get_str + 2890
>      frame #2: 0x0000000107eb9c9e Rmpfr.so`mpfr2str(x=0x00000001053ed768,
> digits=<unavailable>, maybeFull=<unavailable>, base=<unavailable>) at
> convert.c:608:2 [opt]
>      < ... >
> 
> If I understand correctly, 'adcx' was introduced with Broadwell CPUs (so,
> October 2014) and so that could explain why I'm seeing this crash. It'd be
> helpful if others could try to verify with newer / older macOS machines,
> though.
> 
>> sessionInfo()
> R version 4.1.2 (2021-11-01)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Big Sur 10.16
> 
> Best,
> Kevin
> 
> On Sun, Nov 28, 2021 at 6:22 PM Simon Urbanek <simon.urbanek at r-project.org>
> wrote:
> 
>> Kevin,
>>
>> that is a different story, yes, Rosetta2 is incomplete - the advice on M1
>> is to use native R.
>>
>> Cheers,
>> Simon
>>
>>
>>> On Nov 29, 2021, at 12:30 PM, Kevin Ushey <kevinushey at gmail.com> wrote:
>>>
>>> I can reproduce something similar on my M1 macOS machine, when using the
>>> x86_64 build of R. I see:
>>>
>>>> x1 <- mpfr(-50, 200)
>>> *** caught illegal operation ***
>>> address 0x10c5f623b, cause 'illegal opcode'
>>>
>>> This is with the binary of Rmpfr 0.8-7 as from CRAN, with R 4.1.2. Here's
>>> what LLDB says:
>>>
>>> * thread #1, queue = 'com.apple.main-thread', stop reason =
>>> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>>>     frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
>>> Rmpfr.so`mpfr_set_d:
>>> ->  0x10f69c23b <+43>: vucomisd %xmm0, %xmm0
>>>     0x10f69c23f <+47>: jp     0x10f69c39a               ; <+394>
>>>     0x10f69c245 <+53>: vpxor  %xmm1, %xmm1, %xmm1
>>>     0x10f69c249 <+57>: vucomisd %xmm1, %xmm0
>>>
>>> And the relevant part of the stack trace:
>>>
>>> (lldb) bt
>>> * thread #1, queue = 'com.apple.main-thread', stop reason =
>>> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>>>   * frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
>>>     frame #1: 0x000000010f6809d3 Rmpfr.so`d2mpfr1_(x=-50,
>>> i_prec=<unavailable>, rnd=MPFR_RNDN) at convert.c:129:5 [opt]
>>>     frame #2: 0x000000010f680eb0 Rmpfr.so`d2mpfr1_list(x=<unavailable>,
>>> prec=<unavailable>, rnd_mode=<unavailable>) at convert.c:186:29 [opt]
>>>
>>> At least for my case, my guess is that the 'vucomisd' instruction isn't
>>> available via Apple's Rosetta emulation. It's possible users with older
>>> macOS machines not supporting AVX instructions could see this, as well?
>>>
>>> Best,
>>> Kevin
>>>
>>> On Sun, Nov 28, 2021 at 9:54 AM Richard M. Heiberger <rmh at temple.edu>
>> wrote:
>>>
>>>> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
>>>> aarch64-apple-darwin20
>>>> I am running inside Emacs using ESS
>>>>
>>>>> packageVersion("Rmpfr")
>>>> [1] ?0.8.7?
>>>>> library(Rmpfr)
>>>> Loading required package: gmp
>>>>
>>>> Attaching package: ?gmp?
>>>>
>>>> The following objects are masked from ?package:base?:
>>>>
>>>>     %*%, apply, crossprod, matrix, tcrossprod
>>>>
>>>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>>>>
>>>>
>>>> Attaching package: ?Rmpfr?
>>>>
>>>> The following object is masked from ?package:gmp?:
>>>>
>>>>     outer
>>>>
>>>> The following objects are masked from ?package:stats?:
>>>>
>>>>     dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
>>>>
>>>> The following objects are masked from ?package:base?:
>>>>
>>>>     cbind, pmax, pmin, rbind
>>>>
>>>>> x1 <- mpfr(-50, 200)
>>>>> x1
>>>> 1 'mpfr' number of precision  200   bits
>>>> [1] -50
>>>>> x2 <- mpfr(-50.1, 200)
>>>>> x2
>>>> 1 'mpfr' number of precision  200   bits
>>>> [1] -50.10000000000000142108547152020037174224853515625
>>>>> version
>>>>                _
>>>> platform       aarch64-apple-darwin20
>>>> arch           aarch64
>>>> os             darwin20
>>>> system         aarch64, darwin20
>>>> status
>>>> major          4
>>>> minor          1.2
>>>> year           2021
>>>> month          11
>>>> day            01
>>>> svn rev        81115
>>>> language       R
>>>> version.string R version 4.1.2 (2021-11-01)
>>>> nickname       Bird Hippie
>>>>>
>>>>
>>>>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com>
>> wrote:
>>>>>
>>>>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
>>>>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
>>>>>
>>>>> library(Rmpfr)
>>>>> x1 <- mpfr(-50, 200)
>>>>> x2 <- mpfr(-50.1, 200)
>>>>>
>>>>> Which gives the message:
>>>>>
>>>>> R Session Aborted
>>>>> R encountered a fatal error
>>>>> The session was terminated
>>>>> Start New Session
>>>>>
>>>>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
>>>> iMac
>>>>> running 10.15.7. The problem occurs with both machines.
>>>>>
>>>>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
>>>> version
>>>>> of the package around 2017, corresponding to the last time I used it)
>> the
>>>>> problem goes away.
>>>>>
>>>>>       [[alternative HTML version deleted]]
>>>>>
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>>
>>>>
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
>>>>
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>
>>>
>>>        [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>
>>
>>
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Nov 29 22:02:52 2021
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 30 Nov 2021 10:02:52 +1300
Subject: [R-SIG-Mac] [External] Rmpfr crashes on Mac
In-Reply-To: <aab3ce2e-9f8b-f803-978f-f72891f3bd5a@umu.se>
References: <CADd2D4Jfx2pxOiJ+QPyoyMJk5G=QYOqmnzHw1mm_dm_jPS_4mw@mail.gmail.com>
 <A0B6B9D3-2189-4483-8032-13BB9298AE55@temple.edu>
 <CAJXgQP3ZEa6_KsEjbbov94ZzAb+NNx9nJp=xRBj9hYmsrZJLYQ@mail.gmail.com>
 <E2A4F440-947C-40B8-9A8F-2A4D72B5E33E@R-project.org>
 <CAJXgQP2Qz18-5+ah9y1fhYt5uVU3gpnpBRLG1zhoi8NTvCtwoA@mail.gmail.com>
 <aab3ce2e-9f8b-f803-978f-f72891f3bd5a@umu.se>
Message-ID: <52E1CA6D-7510-4AFF-8115-5DEF27A86FFB@R-project.org>


To sum up there are two issues one of which is intentional and the other one is not:

- gmp is using optimized instructions and we are currently targeting SandyBridge architecture as the oldest supported Mac. That works for Macs in about the last decade so seems like a reasonable compromise. It does not work on Rosetta2 so M1 uses should use native R instead.  This will fail on mpfr(-50, 200) alone (or any gmp call, really) if your Mac is so old that it doesn't even support the SB instruction set you will need to compile gmp from sources (see below).

- RStudio see seems to trigger another issues inside mpfr proper isolated by Kevin (thanks, Kevin!) to a call of str() on mpfr object (the original that started this thread). That one is not intentional as it seems to break even on older SB machines. I suspect it comes from mpfr itself as opposed to gmp which we know uses assembly optimizations. From what I can see mpfr re-uses gmp's detection of CPU targets so I have re-built mpfr to catch up with gmp so I would like to ask those that have seen this issue, i.e. where mpfr() call works but str() crashes to download the latest package binary for R 4.1.x and report if that fixed the issue. It should if my theory is correct, otherwise we need to dig deeper.

So for the latter to be specific run exactly:
install.packages("Rmpfr", repo="https://mac.R-project.org")
then re-start and test.

Now if you are on such an ancient Mac that even gmp doesn't work then you may have to recompile gmp and mpfr yourself. Obviously if you know what you are doing, you can fetch the sources, you have to build gmp first and then mpfr (you need both as mpfr relies on gmp and gmp defines the optimizations used). You can also try to use either Homebrew (brew install mpfr) or recipes (https://github.com/R-macos/recipes), but make sure you really re-compile and not use binaries/bottles.  Once you compile the libraries, re-install gmp and Rmpfr packages from sources (type='source' in install.packages).

Cheers,
Simon



> On Nov 30, 2021, at 12:37 AM, G?ran Brostr?m <goran.brostrom at umu.se> wrote:
> 
> I have the oldest MacBook Pro: mid 2010. Is it too early to upgrade to an M1Max one, for R purposes? Anyway, I get (this is R, but RStudio aborts too):
> 
> > x1 <- mpfr(-50, 200)
> 
> *** caught illegal operation ***
> address 0x10fd8c23b, cause 'illegal opcode'
> 
> Traceback:
> 1: mpfr.default(-50, 200)
> 2: mpfr(-50, 200)
> 
> General info:
> 
> 
> > R.version
>               _
> platform       x86_64-apple-darwin17.0
> arch           x86_64
> os             darwin17.0
> system         x86_64, darwin17.0
> status
> major          4
> minor          1.2
> year           2021
> month          11
> day            01
> svn rev        81115
> language       R
> version.string R version 4.1.2 (2021-11-01)
> nickname       Bird Hippie
> >
> 
> > sessionInfo()
> R version 4.1.2 (2021-11-01)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS High Sierra 10.13.6
> 
> Matrix products: default
> BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.1.2
> 
> > system("system_profiler SPHardwareDataType SPSoftwareDataType")
> Hardware:
> 
>    Hardware Overview:
> 
>      Model Name: MacBook Pro
>      Model Identifier: MacBookPro6,2
>      Processor Name: Intel Core i7
>      Processor Speed: 2,66 GHz
>      Number of Processors: 1
>      Total Number of Cores: 2
>      L2 Cache (per Core): 256 KB
>      L3 Cache: 4 MB
>      Memory: 8 GB
>      Boot ROM Version: 99.0.0.0.0
>      SMC Version (system): 1.58f17
>      Serial Number (system): W8042281AGZ
>      Hardware UUID: A1D55A7E-9CD1-59BD-AB78-E5B2518D4940
>      Sudden Motion Sensor:
>          State: Enabled
> 
> Software:
> 
>    System Software Overview:
> 
>      System Version: macOS 10.13.6 (17G14042)
>      Kernel Version: Darwin 17.7.0
>      Boot Volume: Samsung SSD
>      Boot Mode: Normal
>      Computer Name: MBP (2)
>      User Name: G?ran Brostr?m (gobr0002)
>      Secure Virtual Memory: Enabled
>      System Integrity Protection: Enabled
>      Time since boot: 25 minutes
> 
> 
> 
> 
> Den 2021-11-29 kl. 06:43, skrev Kevin Ushey:
>> Okay, I've reproduced the crash on my 2013 Intel MacBook Pro. In this case,
>> the issue reproduces more readily because RStudio is calling str() behind
>> the scenes (which is the cause of the crash in this case). So, a plain R
>> reproducible example:
>> library(Rmpfr)
>> x <- mpfr(-50.1, 200)
>> str(x)
>> and I see:
>>> str(x)
>> Class 'mpfr' [package "Rmpfr"] of length 1 and precision 200
>>  *** caught illegal operation ***
>> address 0x112833ed5, cause 'illegal opcode'
>> Traceback:
>>  1: .mpfr2str(x, digits, maybe.full = maybe.full, base = base)
>>  2: formatMpfr(object, digits = digits.d, drop0trailing = drop0trailing,
>>   ...)
>>  3: str.mpfr(x)
>>  4: str(x)
>> From lldb:
>> * thread #1, queue = 'com.apple.main-thread', stop reason =
>> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>>     frame #0: 0x0000000107ec7ed5 Rmpfr.so`mpfr_get_str_aux + 165
>> Rmpfr.so`mpfr_get_str_aux:
>> ->  0x107ec7ed5 <+165>: adcxq  %rsi, %rcx
>>     0x107ec7edb <+171>: movq   %r10, %rdi
>>     0x107ec7ede <+174>: movq   %r8, %rsi
>>     0x107ec7ee1 <+177>: movq   %r10, %rbx
>> and relevant part of the backtrace:
>> (lldb) bt
>> * thread #1, queue = 'com.apple.main-thread', stop reason =
>> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>>   * frame #0: 0x0000000107ec7ed5 Rmpfr.so`mpfr_get_str_aux + 165
>>     frame #1: 0x0000000107ec78da Rmpfr.so`mpfr_get_str + 2890
>>     frame #2: 0x0000000107eb9c9e Rmpfr.so`mpfr2str(x=0x00000001053ed768,
>> digits=<unavailable>, maybeFull=<unavailable>, base=<unavailable>) at
>> convert.c:608:2 [opt]
>>     < ... >
>> If I understand correctly, 'adcx' was introduced with Broadwell CPUs (so,
>> October 2014) and so that could explain why I'm seeing this crash. It'd be
>> helpful if others could try to verify with newer / older macOS machines,
>> though.
>>> sessionInfo()
>> R version 4.1.2 (2021-11-01)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Big Sur 10.16
>> Best,
>> Kevin
>> On Sun, Nov 28, 2021 at 6:22 PM Simon Urbanek <simon.urbanek at r-project.org>
>> wrote:
>>> Kevin,
>>> 
>>> that is a different story, yes, Rosetta2 is incomplete - the advice on M1
>>> is to use native R.
>>> 
>>> Cheers,
>>> Simon
>>> 
>>> 
>>>> On Nov 29, 2021, at 12:30 PM, Kevin Ushey <kevinushey at gmail.com> wrote:
>>>> 
>>>> I can reproduce something similar on my M1 macOS machine, when using the
>>>> x86_64 build of R. I see:
>>>> 
>>>>> x1 <- mpfr(-50, 200)
>>>> *** caught illegal operation ***
>>>> address 0x10c5f623b, cause 'illegal opcode'
>>>> 
>>>> This is with the binary of Rmpfr 0.8-7 as from CRAN, with R 4.1.2. Here's
>>>> what LLDB says:
>>>> 
>>>> * thread #1, queue = 'com.apple.main-thread', stop reason =
>>>> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>>>>    frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
>>>> Rmpfr.so`mpfr_set_d:
>>>> ->  0x10f69c23b <+43>: vucomisd %xmm0, %xmm0
>>>>    0x10f69c23f <+47>: jp     0x10f69c39a               ; <+394>
>>>>    0x10f69c245 <+53>: vpxor  %xmm1, %xmm1, %xmm1
>>>>    0x10f69c249 <+57>: vucomisd %xmm1, %xmm0
>>>> 
>>>> And the relevant part of the stack trace:
>>>> 
>>>> (lldb) bt
>>>> * thread #1, queue = 'com.apple.main-thread', stop reason =
>>>> EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
>>>>  * frame #0: 0x000000010f69c23b Rmpfr.so`mpfr_set_d + 43
>>>>    frame #1: 0x000000010f6809d3 Rmpfr.so`d2mpfr1_(x=-50,
>>>> i_prec=<unavailable>, rnd=MPFR_RNDN) at convert.c:129:5 [opt]
>>>>    frame #2: 0x000000010f680eb0 Rmpfr.so`d2mpfr1_list(x=<unavailable>,
>>>> prec=<unavailable>, rnd_mode=<unavailable>) at convert.c:186:29 [opt]
>>>> 
>>>> At least for my case, my guess is that the 'vucomisd' instruction isn't
>>>> available via Apple's Rosetta emulation. It's possible users with older
>>>> macOS machines not supporting AVX instructions could see this, as well?
>>>> 
>>>> Best,
>>>> Kevin
>>>> 
>>>> On Sun, Nov 28, 2021 at 9:54 AM Richard M. Heiberger <rmh at temple.edu>
>>> wrote:
>>>> 
>>>>> Works normally in R-4.1.2 with Rmpfr_0.8-7 on Macintosh
>>>>> aarch64-apple-darwin20
>>>>> I am running inside Emacs using ESS
>>>>> 
>>>>>> packageVersion("Rmpfr")
>>>>> [1] ?0.8.7?
>>>>>> library(Rmpfr)
>>>>> Loading required package: gmp
>>>>> 
>>>>> Attaching package: ?gmp?
>>>>> 
>>>>> The following objects are masked from ?package:base?:
>>>>> 
>>>>>    %*%, apply, crossprod, matrix, tcrossprod
>>>>> 
>>>>> C code of R package 'Rmpfr': GMP using 64 bits per limb
>>>>> 
>>>>> 
>>>>> Attaching package: ?Rmpfr?
>>>>> 
>>>>> The following object is masked from ?package:gmp?:
>>>>> 
>>>>>    outer
>>>>> 
>>>>> The following objects are masked from ?package:stats?:
>>>>> 
>>>>>    dbinom, dgamma, dnbinom, dnorm, dpois, dt, pnorm
>>>>> 
>>>>> The following objects are masked from ?package:base?:
>>>>> 
>>>>>    cbind, pmax, pmin, rbind
>>>>> 
>>>>>> x1 <- mpfr(-50, 200)
>>>>>> x1
>>>>> 1 'mpfr' number of precision  200   bits
>>>>> [1] -50
>>>>>> x2 <- mpfr(-50.1, 200)
>>>>>> x2
>>>>> 1 'mpfr' number of precision  200   bits
>>>>> [1] -50.10000000000000142108547152020037174224853515625
>>>>>> version
>>>>>               _
>>>>> platform       aarch64-apple-darwin20
>>>>> arch           aarch64
>>>>> os             darwin20
>>>>> system         aarch64, darwin20
>>>>> status
>>>>> major          4
>>>>> minor          1.2
>>>>> year           2021
>>>>> month          11
>>>>> day            01
>>>>> svn rev        81115
>>>>> language       R
>>>>> version.string R version 4.1.2 (2021-11-01)
>>>>> nickname       Bird Hippie
>>>>>> 
>>>>> 
>>>>>> On Nov 27, 2021, at 15:46, Dev Chakraborty <dpc10ster at gmail.com>
>>> wrote:
>>>>>> 
>>>>>> I used package Rmpfr ca. 2017 and it worked fine. The latest version
>>>>>> (0.8-7) causes R (running under RStudio) to crash. A simple example is:
>>>>>> 
>>>>>> library(Rmpfr)
>>>>>> x1 <- mpfr(-50, 200)
>>>>>> x2 <- mpfr(-50.1, 200)
>>>>>> 
>>>>>> Which gives the message:
>>>>>> 
>>>>>> R Session Aborted
>>>>>> R encountered a fatal error
>>>>>> The session was terminated
>>>>>> Start New Session
>>>>>> 
>>>>>> I am using R version 4.1.1 on a Mac running MacOS 12.0.1. and an older
>>>>> iMac
>>>>>> running 10.15.7. The problem occurs with both machines.
>>>>>> 
>>>>>> When I install from the CRAN archive file  Rmpfr_0.6-1.tar.gz (the
>>>>> version
>>>>>> of the package around 2017, corresponding to the last time I used it)
>>> the
>>>>>> problem goes away.
>>>>>> 
>>>>>>      [[alternative HTML version deleted]]
>>>>>> 
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at r-project.org
>>>>>> 
>>>>> 
>>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-mac&amp;data=04%7C01%7Crmh%40temple.edu%7C3aabc743f322409d6fa308d9b259a7bb%7C716e81efb52244738e3110bd02ccf6e5%7C0%7C0%7C637736920545174898%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=pNPM8x8q1%2BQxq4QevSbfjlcO44vDVEyUvsRlfDBfgBo%3D&amp;reserved=0
>>>>> 
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>> 
>>>> 
>>>>       [[alternative HTML version deleted]]
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>> 
>>> 
>> 	[[alternative HTML version deleted]]
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


