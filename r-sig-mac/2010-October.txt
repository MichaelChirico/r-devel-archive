From madzientist at gmail.com  Fri Oct  1 13:25:21 2010
From: madzientist at gmail.com (Suresh Krishna)
Date: Fri, 01 Oct 2010 12:25:21 +0100
Subject: [R-SIG-Mac] Compiling RMatlab on OS 10.6.4
In-Reply-To: <201010011222.28305.nsoranzo@tiscali.it>
References: <201010011222.28305.nsoranzo@tiscali.it>
Message-ID: <op.vjv90jh3hgmlxk@osiris.gwdg.de>


Hi Nicola,

Thank you very much, that seems extremely useful.

I solved my R-Matlab communication needs using Rserve from Rosuda and  
Simon Urbanek's generous help.

I know very little about compile and build processes, especially on  
Unix/OSX and so I cannot really volunteer to test your patch on Mac OS X  
for you. But if you can guide me through the process in detail, I am happy  
to work with you to get RMatlab working on the Mac, since I do have access  
to many Macs :)

Very best, Suresh


On Fri, 01 Oct 2010 11:22:27 +0100, Nicola Soranzo <nsoranzo at tiscali.it>  
wrote:

> Hi Suresh and all,
> during the last few years I have developed a big patch to make RMatlab  
> work on
> the latest R and MATLAB versions, and to update it to the current R  
> package
> standards:
>
> http://biowiki.crs4.it/biowiki/NicolaSoranzo#Patches_for_R_packages
>
> I don't have a Mac, but I think my patch may help you anyway. If you have
> problems/comments/suggestions, please CC me (I'm not subscribed to this  
> list).
>
> Kind regards,
> Nicola


From jefferis at gmail.com  Fri Oct  1 13:22:12 2010
From: jefferis at gmail.com (Gregory Jefferis)
Date: Fri, 01 Oct 2010 12:22:12 +0100
Subject: [R-SIG-Mac] [StatET-user] Trouble with Eclipse/StatEt plotting
	under OS X
In-Reply-To: <6EFF9DAE-D1D6-4F72-86D5-4D362B9141B8@me.com>
Message-ID: <C8CB82F4.3400B%jefferis@gmail.com>

Hello,

On 2010-10-01 12:05, "Felix Fernandez" <felix.fernandez at me.com> wrote:

> have installed StatET on several OS X machines and tested some parameters but
> no success so far:
> 
> 1. When plotting the (Quartz) plot window is greyed out and does not respond
> any more. Shutting down the Java environment closes this window but also the
> R-Console in Eclipse.

I can confirm the same behaviour for Quartz windows.  Perhaps someone on the
r-sig-mac list (CCed) might have some insight.

> 2. If I include the command "x11()", the plot windows behave correctly,
> however not very useful as no export of the plot is possible.

This works well for me.  One can still export using PDF(), png() etc
although this is not as convenient as copy paste from the Quartz window.

> 3. The same installation on XP runs flawless.
> 
> Current OS: Mac OSX 10.6.4

Best,

Greg.

MacOSX 10.5.8
Eclipse Helios SR1 20100917-0705
STAT-ET version 0.9.0.b201008271600sw

>sessionInfo()
R version 2.11.1 (2010-05-31)
i386-apple-darwin9.8.0

locale:
[1] C/C/en_GB/C/C/C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] rj_0.5.0-5

loaded via a namespace (and not attached):
[1] rJava_0.8-6  tools_2.11.1

Best,

Greg.
-- 
Gregory Jefferis, PhD
Division of Neurobiology
MRC Laboratory of Molecular Biology,
Hills Road,        
Cambridge, CB2 0QH, UK.

http://www2.mrc-lmb.cam.ac.uk/group-leaders/h-to-m/g-jefferis
http://www.neuroscience.cam.ac.uk/directory/profile.php?gsxej2
http://flybrain.stanford.edu


From nsoranzo at tiscali.it  Fri Oct  1 12:22:27 2010
From: nsoranzo at tiscali.it (Nicola Soranzo)
Date: Fri, 1 Oct 2010 12:22:27 +0200
Subject: [R-SIG-Mac] Compiling RMatlab on OS 10.6.4
In-Reply-To: <op.vge6bb0whgmlxk@osiris.gwdg.de>
Message-ID: <201010011222.28305.nsoranzo@tiscali.it>

Hi Suresh and all,
during the last few years I have developed a big patch to make RMatlab work on 
the latest R and MATLAB versions, and to update it to the current R package 
standards:

http://biowiki.crs4.it/biowiki/NicolaSoranzo#Patches_for_R_packages

I don't have a Mac, but I think my patch may help you anyway. If you have 
problems/comments/suggestions, please CC me (I'm not subscribed to this list).

Kind regards,
Nicola
-- 
Nicola Soranzo, Ph.D.

Personal: http://nsoranzo.altervista.org

My PGP key: http://nsoranzo.altervista.org/key.asc

> Hello,
> 
> I am trying to see if I can get RMatlab from Omegahat
> (http://www.omegahat.org/RMatlab/) working on OS 10.6.4 to be able to call
> R from Matlab.
> 
> I am following the instructions at:
> http://www.stanford.edu/~dgleich/notebook/2009/09/rmatlab_using_r_from_matl
> ab.html
> 
> I got to the point of running the ./configure script (see below) where the
> script complains that libR.so cannot be found. I searched my Mac for a
> libR.so file, but could not find it. I am using the latest OSX binary from
> CRAN, and I read in the R for Mac OS X FAQ that it is already compiled as
> a shared library.
> 
> If there are likely to be non-trivial changes involved in trying to
> compile it for OSX, then probably doing it by myself is beyond my current
> ability, as is also probably already obvious.
> 
> Seeking hints/guidance/advice...
> 
> Very best and many thanks, Suresh
> 
> 
> ---------------------------------------------------------------------------
> ------------------ Suresh-iMac:RMatlab suresh$ ./configure
> checking for mex... /Applications/MATLAB_R2007B/bin/mex
> checking for sed... /usr/bin/sed
> There is no R shared library (libR.so), so you cannot run R within Matlab.
> You will only be able to start Matlab from within R
> If this is not what you want, reinstall R from source with the
> configuration option
> 
>    ./configure --enable-R-shlib
>   
>   If you have already compiled R as a shared library but this script has
> 
> not been able
> 
>   to find it, set the environment variable R_SHARED_LIB_DIR to the name of
> 
> the directory
> 
>   in which it is located and re-install this package
> 
> Looking for mclmcr.h
> checking for gcc... gcc
> checking for C compiler default output... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc accepts -g... yes
> checking for gcc option to accept ANSI C... none needed
> configure: creating ./config.status
> config.status: creating inst/scripts/RMatlab.csh
> config.status: creating inst/scripts/RMatlab.sh
> config.status: creating src/Makefile
> Using the following settings
> 
>    Mex compiler:               /Applications/MATLAB_R2007B/bin/mex
>    Mex extension:              mexmaci
>    Mex linker flags:           -Wl,-flat_namespace -undefined suppress
> 
> -bundle
> 
>    R shared library directory:
> 
>    Installation directory:
> *********************************************************
> 
>    To set the environment variables to run R from within Matlab
>    or vice versa, source the relevant shell script into your shell
>    before running Matlab or R
>    
>    Bourne or Bash shell:
>       . /scripts/RMatlab.sh
>    
>    Csh or Tcsh shell:
>       source /scripts/RMatlab.csh
> 
> *********************************************************
> Suresh-iMac:RMatlab suresh$


From dwinsemius at comcast.net  Sun Oct  3 17:16:57 2010
From: dwinsemius at comcast.net (David Winsemius)
Date: Sun, 3 Oct 2010 11:16:57 -0400
Subject: [R-SIG-Mac] Undo Typing bug with match braces
In-Reply-To: <F5DE7FBC-A777-416B-B2ED-6C5036B0CA0F@utu.fi>
References: <F5DE7FBC-A777-416B-B2ED-6C5036B0CA0F@utu.fi>
Message-ID: <BD8B787A-E5BD-4D6B-9028-6490540DA959@comcast.net>


On Sep 22, 2010, at 2:57 AM, Claude Flener wrote:

>
> On a related note, it would be nice to have an option of temporarily  
> disabling the matching braces function (with a key combination  
> maybe), if one needs to type braces around some existing code for  
> instance. This is not part of the bug, but it would be a handy  
> feature.

I agree with a feature request for a keyboard cmd-key shortcut to turn  
off/on the auto-bracing/paren/curly-bracing behavior. At the moment I  
have one (less frequently used) computer in the default auto-bracing  
mode but have put my more frequently used machine in the Preference- 
deselected non-auto-completion mode. I would uniformly adopt the  
completion mode if there were a way to "keyboard()" it off/on.

I realize that  "real useRs" probably use some sort of editor with the  
capacity to spawn various mode()-ed windows, but I really appreciate  
effort that went into building the GUI, and have found that emacsen  
and Eclipse have too high a barrier to entry for my feeble brain.

>
> Kind regards,
> Claude

-- 
David Winsemius, MD
West Hartford, CT


From braunm at mit.edu  Sat Oct  9 23:56:44 2010
From: braunm at mit.edu (Michael Braun)
Date: Sat, 9 Oct 2010 17:56:44 -0400
Subject: [R-SIG-Mac] problem installing rjags package
Message-ID: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>

Hi!

I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R 2.11.1 (which I compiled myself so I could link to the Intel MKL blas, which I prefer to other options).   I was successfully able to install JAGS 2.1.0 through both the binary installer, and compiling from source (I get the same problem either way).

But I would like to use the rjags package. When I do 

install.packages("rjags")


I get the folliowing output:

* installing *source* package ?rjags? ...
checking for prefix by checking for jags... /usr/local/bin/jags
checking for g++... g++
checking for C++ compiler default output file name... a.out
checking whether the C++ compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking how to run the C++ preprocessor... g++ -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking Console.h usability... yes
checking Console.h presence... yes
checking for Console.h... yes
checking for gcc... gcc
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for jags_version in -ljags... yes
configure: creating ./config.status
config.status: creating src/Makevars
configure: creating ./config.status
config.status: creating src/Makevars
config.status: creating R/unix/zzz.R
** libs
*** arch - x86_64
g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include -I/Library/Frameworks/R.framework/Resources/include/x86_64 -I/usr/local/include/JAGS -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64 -msse4.2 -g -O2 -c jags.cc -o jags.o
g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
installing to /Users/braunm/.R/Library/rjags/libs/x86_64
** R
** data
** preparing package for lazy loading
** help
*** installing help indices
** building package indices ...
Error : .onLoad failed in loadNamespace() for 'rjags', details:
  call: dyn.load(file, DLLpath = DLLpath, ...)
  error: unable to load shared library '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
  dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol not found: _JAGS_NA
  Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
  Expected in: flat namespace
 in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
ERROR: installing package indices failed
* removing ?/Users/braunm/.R/Library/rjags?


However, when I go to look at the symbols in the jags library, I see

braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
0000000000098650 S _JAGS_NA
0000000000110338 S _JAGS_NAN
0000000000110348 S _JAGS_NEGINF
0000000000110340 S _JAGS_POSINF
000000000000133c t __GLOBAL__I_JAGS_NA

and when I try

braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
                 U _JAGS_NA
                 U _JAGS_NEGINF
                 U _JAGS_NA
                 U _JAGS_NA
0000000000000060 S _JAGS_NA
00000000000000b8 B _JAGS_NAN
00000000000000c8 B _JAGS_NEGINF
00000000000000c0 B _JAGS_POSINF
                 U _JAGS_NA
                 U _JAGS_NEGINF
                 U _JAGS_POSINF
                 U _JAGS_NEGINF
                 U _JAGS_POSINF
                 U _JAGS_NEGINF
                 U _JAGS_NA
                 U _JAGS_NEGINF
                 U _JAGS_NEGINF
                 U _JAGS_NA
                 U _JAGS_NEGINF
                 U _JAGS_POSINF


So the jags libraries (both static and dynamic) are in the standard place, and it looks like the symbols rjags.so needs are there as well.  So I'm not sure what the rjags installer is looking for.  Is there perhaps an environment variable that I am missing?

Here is my sessionInfo():

> sessionInfo()
R version 2.11.1 (2010-05-31) 
x86_64-apple-darwin10.4.2 

locale:
[1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     grDevices datasets  graphics  utils     methods   base     

other attached packages:
 [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0    codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1 lattice_0.18-8   reshape_0.8.3    plyr_1.2.1      
[12] mvtnorm_0.9-92  

loaded via a namespace (and not attached):
[1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1


Thanks in advance for your help.

Michael








-------------------------------------------
Michael Braun
Homer A. Burnell (1928) Career Development Professor, 
	and Assistant Professor of Management Science (Marketing Group)
MIT Sloan School of Management
100 Main St.., E62-535
Cambridge, MA 02139
braunm at mit.edu
617-253-3436


From ripley at stats.ox.ac.uk  Sun Oct 10 08:47:29 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sun, 10 Oct 2010 07:47:29 +0100 (BST)
Subject: [R-SIG-Mac] problem installing rjags package
In-Reply-To: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
References: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
Message-ID: <alpine.LFD.2.00.1010100737460.29851@gannet.stats.ox.ac.uk>

Note your link line has no reference to -ljags.  Mine is (for i386, 
x86_64 is later on in the output)

g++ -arch i386 -dynamiclib -Wl,-headerpad_max_install_names -undefined 
dynamic_lookup -single_module -multiply_defined suppress 
-L/usr/local/lib -o rjags.so jags.o -L/usr/local/lib -ljags 
-F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework 
-Wl,CoreFoundation

with no reference to -lgsl.  Also, have you perhaps excluded 
/usr/local/lib (the usual place to install JAGS) from the R library 
paths?

Have you contacted the maintainer?  Although not a Mac user he is very 
knowledgable, including about MKL.

On Sat, 9 Oct 2010, Michael Braun wrote:

> Hi!
>
> I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R 
> 2.11.1 (which I compiled myself so I could link to the Intel MKL 
> blas, which I prefer to other options).  I was successfully able to 
> install JAGS 2.1.0 through both the binary installer, and compiling 
> from source (I get the same problem either way).
>
> But I would like to use the rjags package. When I do
>
> install.packages("rjags")
>
>
> I get the folliowing output:
>
> * installing *source* package ?rjags? ...
> checking for prefix by checking for jags... /usr/local/bin/jags
> checking for g++... g++
> checking for C++ compiler default output file name... a.out
> checking whether the C++ compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C++ compiler... yes
> checking whether g++ accepts -g... yes
> checking how to run the C++ preprocessor... g++ -E
> checking for grep that handles long lines and -e... /usr/bin/grep
> checking for egrep... /usr/bin/grep -E
> checking for ANSI C header files... yes
> checking for sys/types.h... yes
> checking for sys/stat.h... yes
> checking for stdlib.h... yes
> checking for string.h... yes
> checking for memory.h... yes
> checking for strings.h... yes
> checking for inttypes.h... yes
> checking for stdint.h... yes
> checking for unistd.h... yes
> checking Console.h usability... yes
> checking Console.h presence... yes
> checking for Console.h... yes
> checking for gcc... gcc
> checking whether we are using the GNU C compiler... yes
> checking whether gcc accepts -g... yes
> checking for gcc option to accept ISO C89... none needed
> checking for jags_version in -ljags... yes
> configure: creating ./config.status
> config.status: creating src/Makevars
> configure: creating ./config.status
> config.status: creating src/Makevars
> config.status: creating R/unix/zzz.R
> ** libs
> *** arch - x86_64
> g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include -I/Library/Frameworks/R.framework/Resources/include/x86_64 -I/usr/local/include/JAGS -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64 -msse4.2 -g -O2 -c jags.cc -o jags.o
> g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
> installing to /Users/braunm/.R/Library/rjags/libs/x86_64
> ** R
> ** data
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices ...
> Error : .onLoad failed in loadNamespace() for 'rjags', details:
>  call: dyn.load(file, DLLpath = DLLpath, ...)
>  error: unable to load shared library '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
>  dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol not found: _JAGS_NA
>  Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>  Expected in: flat namespace
> in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
> ERROR: installing package indices failed
> * removing ?/Users/braunm/.R/Library/rjags?
>
>
> However, when I go to look at the symbols in the jags library, I see
>
> braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
> 0000000000098650 S _JAGS_NA
> 0000000000110338 S _JAGS_NAN
> 0000000000110348 S _JAGS_NEGINF
> 0000000000110340 S _JAGS_POSINF
> 000000000000133c t __GLOBAL__I_JAGS_NA
>
> and when I try
>
> braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
>                 U _JAGS_NA
>                 U _JAGS_NEGINF
>                 U _JAGS_NA
>                 U _JAGS_NA
> 0000000000000060 S _JAGS_NA
> 00000000000000b8 B _JAGS_NAN
> 00000000000000c8 B _JAGS_NEGINF
> 00000000000000c0 B _JAGS_POSINF
>                 U _JAGS_NA
>                 U _JAGS_NEGINF
>                 U _JAGS_POSINF
>                 U _JAGS_NEGINF
>                 U _JAGS_POSINF
>                 U _JAGS_NEGINF
>                 U _JAGS_NA
>                 U _JAGS_NEGINF
>                 U _JAGS_NEGINF
>                 U _JAGS_NA
>                 U _JAGS_NEGINF
>                 U _JAGS_POSINF
>
>
> So the jags libraries (both static and dynamic) are in the standard place, and it looks like the symbols rjags.so needs are there as well.  So I'm not sure what the rjags installer is looking for.  Is there perhaps an environment variable that I am missing?
>
> Here is my sessionInfo():
>
>> sessionInfo()
> R version 2.11.1 (2010-05-31)
> x86_64-apple-darwin10.4.2
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats     grDevices datasets  graphics  utils     methods   base
>
> other attached packages:
> [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0    codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1 lattice_0.18-8   reshape_0.8.3    plyr_1.2.1
> [12] mvtnorm_0.9-92
>
> loaded via a namespace (and not attached):
> [1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1
>
>
> Thanks in advance for your help.
>
> Michael
>
>
>
>
>
>
>
>
> -------------------------------------------
> Michael Braun
> Homer A. Burnell (1928) Career Development Professor,
> 	and Assistant Professor of Management Science (Marketing Group)
> MIT Sloan School of Management
> 100 Main St.., E62-535
> Cambridge, MA 02139
> braunm at mit.edu
> 617-253-3436
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

From braunm at mit.edu  Sun Oct 10 18:03:06 2010
From: braunm at mit.edu (Michael Braun)
Date: Sun, 10 Oct 2010 12:03:06 -0400
Subject: [R-SIG-Mac] problem installing rjags package
In-Reply-To: <1286712706.4cb1ad82b1fd3@webmail.iarc.fr>
References: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
	<alpine.LFD.2.00.1010100737460.29851@gannet.stats.ox.ac.uk>
	<1286712706.4cb1ad82b1fd3@webmail.iarc.fr>
Message-ID: <508CB569-5502-400D-9541-BEA072918390@mit.edu>

Thanks for the suggestions.  I did go through the JAGS installation manual slowly and carefully, but that doesn't mean I didn't miss something.

I may not have been clear about what I did.  The JAGS that is installed is the pre-compiled binary (I wanted to be sure that how I was compiling JAGS wasn't causing the problems).  The compilation flags below are generated by R (I used gcc to compile R,  and linked R to the MKL BLAS, and that seems to have worked well).  Perhaps I need to change my Makevars file for rjags?  Because (I think) R only (seems to) use the Makevars in my ~/.R folder, it's hard to keep track of what's linking to what across multiple projects (hence, why the -lgsl is in there). 

In any event, what did seem to work is when I ran R as root, and then installed rjags.  I can now load the library even when not running R as root.  So perhaps there was some kind of permissions problem that was keeping R from accessing the jags library (which is in /usr/local/lib).  Is there a particular R library path variable that I should be looking at?  I do have /usr/local/lib as part of R_DYLIB_LIBRARY_PATH, DYLD_LIBRARY_PATH, and LD_LIBRARY_PATH.





On Oct 10, 2010, at 8:11 AM, <plummer at iarc.fr> <plummer at iarc.fr> wrote:

> Michael,
> 
> I do have some experience of using MKL with JAGS and left quite
> detailed instructions, for Linux, in the installation manual (section 1.3.5).
> 
> In addition to the problems noted by Brian there seem to be anomalies
> with your MKL configuration:
> - You are compiling with GNU compilers but trying to use the Intel
>  64-bit interface layer. This will not work.
> - You are using the sequential MKL library but still linking to
>  libpthread, which is redundant.
> 
> As noted in the manual, on Linux I have been unable to link JAGS with
> the MKL using GNU compilers, except by building a static version, which
> is obviously not helpful if you want to interface to R.
> 
> To be honest, BLAS/LAPACK performance is not a bottleneck for JAGS unless
> perhaps, you have a very special problem.  All of this effort to link
> to MKL will probably not pay off and binary packages of both JAGS and rjags
> are available and which do actually work.
> 
> Martyn
> 
> Quoting Prof Brian Ripley <ripley at stats.ox.ac.uk>:
>> Note your link line has no reference to -ljags.  Mine is (for i386,
>> x86_64 is later on in the output)
>> 
>> g++ -arch i386 -dynamiclib -Wl,-headerpad_max_install_names -undefined
>> dynamic_lookup -single_module -multiply_defined suppress
>> -L/usr/local/lib -o rjags.so jags.o -L/usr/local/lib -ljags
>> -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
>> -Wl,CoreFoundation
>> 
>> with no reference to -lgsl.  Also, have you perhaps excluded
>> /usr/local/lib (the usual place to install JAGS) from the R library
>> paths?
>> 
>> Have you contacted the maintainer?  Although not a Mac user he is very
>> knowledgable, including about MKL.
>> 
>> On Sat, 9 Oct 2010, Michael Braun wrote:
>> 
>>> Hi!
>>> 
>>> I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R
>>> 2.11.1 (which I compiled myself so I could link to the Intel MKL
>>> blas, which I prefer to other options).  I was successfully able to
>>> install JAGS 2.1.0 through both the binary installer, and compiling
>>> from source (I get the same problem either way).
>>> 
>>> But I would like to use the rjags package. When I do
>>> 
>>> install.packages("rjags")
>>> 
>>> 
>>> I get the folliowing output:
>>> 
>>> * installing *source* package ?rjags? ...
>>> checking for prefix by checking for jags... /usr/local/bin/jags
>>> checking for g++... g++
>>> checking for C++ compiler default output file name... a.out
>>> checking whether the C++ compiler works... yes
>>> checking whether we are cross compiling... no
>>> checking for suffix of executables...
>>> checking for suffix of object files... o
>>> checking whether we are using the GNU C++ compiler... yes
>>> checking whether g++ accepts -g... yes
>>> checking how to run the C++ preprocessor... g++ -E
>>> checking for grep that handles long lines and -e... /usr/bin/grep
>>> checking for egrep... /usr/bin/grep -E
>>> checking for ANSI C header files... yes
>>> checking for sys/types.h... yes
>>> checking for sys/stat.h... yes
>>> checking for stdlib.h... yes
>>> checking for string.h... yes
>>> checking for memory.h... yes
>>> checking for strings.h... yes
>>> checking for inttypes.h... yes
>>> checking for stdint.h... yes
>>> checking for unistd.h... yes
>>> checking Console.h usability... yes
>>> checking Console.h presence... yes
>>> checking for Console.h... yes
>>> checking for gcc... gcc
>>> checking whether we are using the GNU C compiler... yes
>>> checking whether gcc accepts -g... yes
>>> checking for gcc option to accept ISO C89... none needed
>>> checking for jags_version in -ljags... yes
>>> configure: creating ./config.status
>>> config.status: creating src/Makevars
>>> configure: creating ./config.status
>>> config.status: creating src/Makevars
>>> config.status: creating R/unix/zzz.R
>>> ** libs
>>> *** arch - x86_64
>>> g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include
>> -I/Library/Frameworks/R.framework/Resources/include/x86_64
>> -I/usr/local/include/JAGS
>> -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers
>> -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64
>> -msse4.2 -g -O2 -c jags.cc -o jags.o
>>> g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined
>> dynamic_lookup -single_module -multiply_defined suppress
>> -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t
>> -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so
>> jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread
>> -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
>> -Wl,CoreFoundation
>>> installing to /Users/braunm/.R/Library/rjags/libs/x86_64
>>> ** R
>>> ** data
>>> ** preparing package for lazy loading
>>> ** help
>>> *** installing help indices
>>> ** building package indices ...
>>> Error : .onLoad failed in loadNamespace() for 'rjags', details:
>>> call: dyn.load(file, DLLpath = DLLpath, ...)
>>> error: unable to load shared library
>> '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
>>> dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol
>> not found: _JAGS_NA
>>> Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>> Expected in: flat namespace
>>> in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>> ERROR: installing package indices failed
>>> * removing ?/Users/braunm/.R/Library/rjags?
>>> 
>>> 
>>> However, when I go to look at the symbols in the jags library, I see
>>> 
>>> braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
>>> 0000000000098650 S _JAGS_NA
>>> 0000000000110338 S _JAGS_NAN
>>> 0000000000110348 S _JAGS_NEGINF
>>> 0000000000110340 S _JAGS_POSINF
>>> 000000000000133c t __GLOBAL__I_JAGS_NA
>>> 
>>> and when I try
>>> 
>>> braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
>>>                U _JAGS_NA
>>>                U _JAGS_NEGINF
>>>                U _JAGS_NA
>>>                U _JAGS_NA
>>> 0000000000000060 S _JAGS_NA
>>> 00000000000000b8 B _JAGS_NAN
>>> 00000000000000c8 B _JAGS_NEGINF
>>> 00000000000000c0 B _JAGS_POSINF
>>>                U _JAGS_NA
>>>                U _JAGS_NEGINF
>>>                U _JAGS_POSINF
>>>                U _JAGS_NEGINF
>>>                U _JAGS_POSINF
>>>                U _JAGS_NEGINF
>>>                U _JAGS_NA
>>>                U _JAGS_NEGINF
>>>                U _JAGS_NEGINF
>>>                U _JAGS_NA
>>>                U _JAGS_NEGINF
>>>                U _JAGS_POSINF
>>> 
>>> 
>>> So the jags libraries (both static and dynamic) are in the standard place,
>> and it looks like the symbols rjags.so needs are there as well.  So I'm not
>> sure what the rjags installer is looking for.  Is there perhaps an
>> environment variable that I am missing?
>>> 
>>> Here is my sessionInfo():
>>> 
>>>> sessionInfo()
>>> R version 2.11.1 (2010-05-31)
>>> x86_64-apple-darwin10.4.2
>>> 
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     grDevices datasets  graphics  utils     methods   base
>>> 
>>> other attached packages:
>>> [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0
>> codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1
>> lattice_0.18-8   reshape_0.8.3    plyr_1.2.1
>>> [12] mvtnorm_0.9-92
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1
>>> 
>>> 
>>> Thanks in advance for your help.
>>> 
>>> Michael
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> -------------------------------------------
>>> Michael Braun
>>> Homer A. Burnell (1928) Career Development Professor,
>>> 	and Assistant Professor of Management Science (Marketing Group)
>>> MIT Sloan School of Management
>>> 100 Main St.., E62-535
>>> Cambridge, MA 02139
>>> braunm at mit.edu
>>> 617-253-3436
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>> 
>> --
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>> University of Oxford,             Tel:  +44 1865 272861 (self)
>> 1 South Parks Road,                     +44 1865 272866 (PA)
>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
> 
> 
> 
> -----------------------------------------------------------------------
> This message and its attachments are strictly confidential. If you are
> not the intended recipient of this message, please immediately notify 
> the sender and delete it. Since its integrity cannot be guaranteed, 
> its content cannot involve the sender's responsibility. Any misuse, 
> any disclosure or publication of its content, either whole or partial, 
> is prohibited, exception made of formally approved use
> -----------------------------------------------------------------------

-------------------------------------------
Michael Braun
Homer A. Burnell (1928) Career Development Professor, 
	and Assistant Professor of Management Science (Marketing Group)
MIT Sloan School of Management
100 Main St.., E62-535
Cambridge, MA 02139
braunm at mit.edu
617-253-3436



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101010/8ef4adcf/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1844 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101010/8ef4adcf/attachment-0001.bin>

From braunm at mit.edu  Sun Oct 10 19:35:06 2010
From: braunm at mit.edu (Michael Braun)
Date: Sun, 10 Oct 2010 13:35:06 -0400
Subject: [R-SIG-Mac] problem installing rjags package
In-Reply-To: <1286712706.4cb1ad82b1fd3@webmail.iarc.fr>
References: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
	<alpine.LFD.2.00.1010100737460.29851@gannet.stats.ox.ac.uk>
	<1286712706.4cb1ad82b1fd3@webmail.iarc.fr>
Message-ID: <3EAF74AD-9105-4AFF-88B3-29E8D669B1CF@mit.edu>

Problem solved.  Just adding -ljags to my Makevars file did the trick.  Thanks.
On that note, is it possible to customize Makevars for different R libraries (e.g., one for compiling R, one for CRAN packages, one for each personal C module that I build for personal use, etc.).  The manual seems to suggest otherwise?



On Oct 10, 2010, at 8:11 AM, <plummer at iarc.fr> wrote:

> Michael,
> 
> I do have some experience of using MKL with JAGS and left quite
> detailed instructions, for Linux, in the installation manual (section 1.3.5).
> 
> In addition to the problems noted by Brian there seem to be anomalies
> with your MKL configuration:
> - You are compiling with GNU compilers but trying to use the Intel
>  64-bit interface layer. This will not work.
> - You are using the sequential MKL library but still linking to
>  libpthread, which is redundant.
> 
> As noted in the manual, on Linux I have been unable to link JAGS with
> the MKL using GNU compilers, except by building a static version, which
> is obviously not helpful if you want to interface to R.
> 
> To be honest, BLAS/LAPACK performance is not a bottleneck for JAGS unless
> perhaps, you have a very special problem.  All of this effort to link
> to MKL will probably not pay off and binary packages of both JAGS and rjags
> are available and which do actually work.
> 
> Martyn
> 
> Quoting Prof Brian Ripley <ripley at stats.ox.ac.uk>:
>> Note your link line has no reference to -ljags.  Mine is (for i386,
>> x86_64 is later on in the output)
>> 
>> g++ -arch i386 -dynamiclib -Wl,-headerpad_max_install_names -undefined
>> dynamic_lookup -single_module -multiply_defined suppress
>> -L/usr/local/lib -o rjags.so jags.o -L/usr/local/lib -ljags
>> -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
>> -Wl,CoreFoundation
>> 
>> with no reference to -lgsl.  Also, have you perhaps excluded
>> /usr/local/lib (the usual place to install JAGS) from the R library
>> paths?
>> 
>> Have you contacted the maintainer?  Although not a Mac user he is very
>> knowledgable, including about MKL.
>> 
>> On Sat, 9 Oct 2010, Michael Braun wrote:
>> 
>>> Hi!
>>> 
>>> I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R
>>> 2.11.1 (which I compiled myself so I could link to the Intel MKL
>>> blas, which I prefer to other options).  I was successfully able to
>>> install JAGS 2.1.0 through both the binary installer, and compiling
>>> from source (I get the same problem either way).
>>> 
>>> But I would like to use the rjags package. When I do
>>> 
>>> install.packages("rjags")
>>> 
>>> 
>>> I get the folliowing output:
>>> 
>>> * installing *source* package ?rjags? ...
>>> checking for prefix by checking for jags... /usr/local/bin/jags
>>> checking for g++... g++
>>> checking for C++ compiler default output file name... a.out
>>> checking whether the C++ compiler works... yes
>>> checking whether we are cross compiling... no
>>> checking for suffix of executables...
>>> checking for suffix of object files... o
>>> checking whether we are using the GNU C++ compiler... yes
>>> checking whether g++ accepts -g... yes
>>> checking how to run the C++ preprocessor... g++ -E
>>> checking for grep that handles long lines and -e... /usr/bin/grep
>>> checking for egrep... /usr/bin/grep -E
>>> checking for ANSI C header files... yes
>>> checking for sys/types.h... yes
>>> checking for sys/stat.h... yes
>>> checking for stdlib.h... yes
>>> checking for string.h... yes
>>> checking for memory.h... yes
>>> checking for strings.h... yes
>>> checking for inttypes.h... yes
>>> checking for stdint.h... yes
>>> checking for unistd.h... yes
>>> checking Console.h usability... yes
>>> checking Console.h presence... yes
>>> checking for Console.h... yes
>>> checking for gcc... gcc
>>> checking whether we are using the GNU C compiler... yes
>>> checking whether gcc accepts -g... yes
>>> checking for gcc option to accept ISO C89... none needed
>>> checking for jags_version in -ljags... yes
>>> configure: creating ./config.status
>>> config.status: creating src/Makevars
>>> configure: creating ./config.status
>>> config.status: creating src/Makevars
>>> config.status: creating R/unix/zzz.R
>>> ** libs
>>> *** arch - x86_64
>>> g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include
>> -I/Library/Frameworks/R.framework/Resources/include/x86_64
>> -I/usr/local/include/JAGS
>> -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers
>> -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64
>> -msse4.2 -g -O2 -c jags.cc -o jags.o
>>> g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined
>> dynamic_lookup -single_module -multiply_defined suppress
>> -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t
>> -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so
>> jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread
>> -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
>> -Wl,CoreFoundation
>>> installing to /Users/braunm/.R/Library/rjags/libs/x86_64
>>> ** R
>>> ** data
>>> ** preparing package for lazy loading
>>> ** help
>>> *** installing help indices
>>> ** building package indices ...
>>> Error : .onLoad failed in loadNamespace() for 'rjags', details:
>>> call: dyn.load(file, DLLpath = DLLpath, ...)
>>> error: unable to load shared library
>> '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
>>> dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol
>> not found: _JAGS_NA
>>> Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>> Expected in: flat namespace
>>> in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>> ERROR: installing package indices failed
>>> * removing ?/Users/braunm/.R/Library/rjags?
>>> 
>>> 
>>> However, when I go to look at the symbols in the jags library, I see
>>> 
>>> braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
>>> 0000000000098650 S _JAGS_NA
>>> 0000000000110338 S _JAGS_NAN
>>> 0000000000110348 S _JAGS_NEGINF
>>> 0000000000110340 S _JAGS_POSINF
>>> 000000000000133c t __GLOBAL__I_JAGS_NA
>>> 
>>> and when I try
>>> 
>>> braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
>>>                U _JAGS_NA
>>>                U _JAGS_NEGINF
>>>                U _JAGS_NA
>>>                U _JAGS_NA
>>> 0000000000000060 S _JAGS_NA
>>> 00000000000000b8 B _JAGS_NAN
>>> 00000000000000c8 B _JAGS_NEGINF
>>> 00000000000000c0 B _JAGS_POSINF
>>>                U _JAGS_NA
>>>                U _JAGS_NEGINF
>>>                U _JAGS_POSINF
>>>                U _JAGS_NEGINF
>>>                U _JAGS_POSINF
>>>                U _JAGS_NEGINF
>>>                U _JAGS_NA
>>>                U _JAGS_NEGINF
>>>                U _JAGS_NEGINF
>>>                U _JAGS_NA
>>>                U _JAGS_NEGINF
>>>                U _JAGS_POSINF
>>> 
>>> 
>>> So the jags libraries (both static and dynamic) are in the standard place,
>> and it looks like the symbols rjags.so needs are there as well.  So I'm not
>> sure what the rjags installer is looking for.  Is there perhaps an
>> environment variable that I am missing?
>>> 
>>> Here is my sessionInfo():
>>> 
>>>> sessionInfo()
>>> R version 2.11.1 (2010-05-31)
>>> x86_64-apple-darwin10.4.2
>>> 
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     grDevices datasets  graphics  utils     methods   base
>>> 
>>> other attached packages:
>>> [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0
>> codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1
>> lattice_0.18-8   reshape_0.8.3    plyr_1.2.1
>>> [12] mvtnorm_0.9-92
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1
>>> 
>>> 
>>> Thanks in advance for your help.
>>> 
>>> Michael
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> -------------------------------------------
>>> Michael Braun
>>> Homer A. Burnell (1928) Career Development Professor,
>>> 	and Assistant Professor of Management Science (Marketing Group)
>>> MIT Sloan School of Management
>>> 100 Main St.., E62-535
>>> Cambridge, MA 02139
>>> braunm at mit.edu
>>> 617-253-3436
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>> 
>> --
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>> University of Oxford,             Tel:  +44 1865 272861 (self)
>> 1 South Parks Road,                     +44 1865 272866 (PA)
>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
> 
> 
> 
> -----------------------------------------------------------------------
> This message and its attachments are strictly confiden...{{dropped:19}}


From w.northcott at unsw.edu.au  Mon Oct 11 02:44:57 2010
From: w.northcott at unsw.edu.au (William Northcott)
Date: Mon, 11 Oct 2010 11:44:57 +1100
Subject: [R-SIG-Mac] problem installing rjags package (Michael Braun)
In-Reply-To: <mailman.3753.1286726605.4267.r-sig-mac@stat.math.ethz.ch>
References: <mailman.3753.1286726605.4267.r-sig-mac@stat.math.ethz.ch>
Message-ID: <9285A39A-4F55-4CDD-8AA9-3D1474FD6046@unsw.edu.au>

On 11/10/2010, at 3:03 AM, Michael Braun <braunm at mit.edu> wrote:
> In any event, what did seem to work is when I ran R as root, and then installed rjags.  I can now load the library even when not running R as root.  So perhaps there was some kind of permissions problem that was keeping R from accessing the jags library (which is in /usr/local/lib).  Is there a particular R library path variable that I should be looking at?  I do have /usr/local/lib as part of R_DYLIB_LIBRARY_PATH, DYLD_LIBRARY_PATH, and LD_LIBRARY_PATH.
> 

I do the MacOS porting for JAGS, but I have not tried to reproduce your problem.

Just as an observation, it is generally a bad idea to muck about with DYLD_LIBRARY_PATH, or LD_LIBRARY_PATH on MacOS.  It is one of those places where MacOS differs from Linux.  Link time library paths should be in -L options of the link instruction.  Load time library paths are incorporated into the executables that link to dynamic libraries.

Those variables only need to be used when linking to dynamic libraries in a staging area rather than their proper installed location.   In this situation you need to set up a lot of other stuff as well.

Maybe the root user worked because it had a different environment which did not set those envars.

Cheers
Bill

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2007 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101011/7aed403a/attachment.bin>

From meng-sing.liou at nasa.gov  Sun Oct  3 06:50:51 2010
From: meng-sing.liou at nasa.gov (Liou, Meng-Sing (GRC-RT00))
Date: Sat, 2 Oct 2010 23:50:51 -0500
Subject: [R-SIG-Mac] Help on using gfortran on Mac OS 10.6
Message-ID: <C8CD83EB.58D8%meng-sing.liou@nasa.gov>

Hi,

I downloaded gfortran-42-5664.pkg from the http://r.research.att.com/tools,
hoping to use it on my MacBook Pro (OS 10.6) to compile a computer code, in
combination with gcc-4.2. However, I'm getting the following error messages,

i686-apple-darwin10-gfortran-4.2.1: precise: No such file or directory

i686-apple-darwin10-gfortran-4.2.1: language Host not recognized

Am I missing anything? Do I need to download gfortran 4.2.3 as well?

Thanks for your help.

Meng


From plummer at iarc.fr  Sun Oct 10 14:11:46 2010
From: plummer at iarc.fr (plummer at iarc.fr)
Date: Sun, 10 Oct 2010 14:11:46 +0200
Subject: [R-SIG-Mac] problem installing rjags package
In-Reply-To: <alpine.LFD.2.00.1010100737460.29851@gannet.stats.ox.ac.uk>
References: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
	<alpine.LFD.2.00.1010100737460.29851@gannet.stats.ox.ac.uk>
Message-ID: <1286712706.4cb1ad82b1fd3@webmail.iarc.fr>

Michael,

I do have some experience of using MKL with JAGS and left quite
detailed instructions, for Linux, in the installation manual (section 1.3.5).

In addition to the problems noted by Brian there seem to be anomalies
with your MKL configuration:
- You are compiling with GNU compilers but trying to use the Intel
  64-bit interface layer. This will not work.
- You are using the sequential MKL library but still linking to
  libpthread, which is redundant.

As noted in the manual, on Linux I have been unable to link JAGS with
the MKL using GNU compilers, except by building a static version, which
is obviously not helpful if you want to interface to R.

To be honest, BLAS/LAPACK performance is not a bottleneck for JAGS unless
perhaps, you have a very special problem.  All of this effort to link
to MKL will probably not pay off and binary packages of both JAGS and rjags
are available and which do actually work.

Martyn

Quoting Prof Brian Ripley <ripley at stats.ox.ac.uk>:
> Note your link line has no reference to -ljags.  Mine is (for i386,
> x86_64 is later on in the output)
>
> g++ -arch i386 -dynamiclib -Wl,-headerpad_max_install_names -undefined
> dynamic_lookup -single_module -multiply_defined suppress
> -L/usr/local/lib -o rjags.so jags.o -L/usr/local/lib -ljags
> -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
> -Wl,CoreFoundation
>
> with no reference to -lgsl.  Also, have you perhaps excluded
> /usr/local/lib (the usual place to install JAGS) from the R library
> paths?
>
> Have you contacted the maintainer?  Although not a Mac user he is very
> knowledgable, including about MKL.
>
> On Sat, 9 Oct 2010, Michael Braun wrote:
>
> > Hi!
> >
> > I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R
> > 2.11.1 (which I compiled myself so I could link to the Intel MKL
> > blas, which I prefer to other options).  I was successfully able to
> > install JAGS 2.1.0 through both the binary installer, and compiling
> > from source (I get the same problem either way).
> >
> > But I would like to use the rjags package. When I do
> >
> > install.packages("rjags")
> >
> >
> > I get the folliowing output:
> >
> > * installing *source* package ?rjags? ...
> > checking for prefix by checking for jags... /usr/local/bin/jags
> > checking for g++... g++
> > checking for C++ compiler default output file name... a.out
> > checking whether the C++ compiler works... yes
> > checking whether we are cross compiling... no
> > checking for suffix of executables...
> > checking for suffix of object files... o
> > checking whether we are using the GNU C++ compiler... yes
> > checking whether g++ accepts -g... yes
> > checking how to run the C++ preprocessor... g++ -E
> > checking for grep that handles long lines and -e... /usr/bin/grep
> > checking for egrep... /usr/bin/grep -E
> > checking for ANSI C header files... yes
> > checking for sys/types.h... yes
> > checking for sys/stat.h... yes
> > checking for stdlib.h... yes
> > checking for string.h... yes
> > checking for memory.h... yes
> > checking for strings.h... yes
> > checking for inttypes.h... yes
> > checking for stdint.h... yes
> > checking for unistd.h... yes
> > checking Console.h usability... yes
> > checking Console.h presence... yes
> > checking for Console.h... yes
> > checking for gcc... gcc
> > checking whether we are using the GNU C compiler... yes
> > checking whether gcc accepts -g... yes
> > checking for gcc option to accept ISO C89... none needed
> > checking for jags_version in -ljags... yes
> > configure: creating ./config.status
> > config.status: creating src/Makevars
> > configure: creating ./config.status
> > config.status: creating src/Makevars
> > config.status: creating R/unix/zzz.R
> > ** libs
> > *** arch - x86_64
> > g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include
> -I/Library/Frameworks/R.framework/Resources/include/x86_64
> -I/usr/local/include/JAGS
> -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers
> -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64
> -msse4.2 -g -O2 -c jags.cc -o jags.o
> > g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined
> dynamic_lookup -single_module -multiply_defined suppress
> -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t
> -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so
> jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread
> -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
> -Wl,CoreFoundation
> > installing to /Users/braunm/.R/Library/rjags/libs/x86_64
> > ** R
> > ** data
> > ** preparing package for lazy loading
> > ** help
> > *** installing help indices
> > ** building package indices ...
> > Error : .onLoad failed in loadNamespace() for 'rjags', details:
> >  call: dyn.load(file, DLLpath = DLLpath, ...)
> >  error: unable to load shared library
> '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
> >  dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol
> not found: _JAGS_NA
> >  Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
> >  Expected in: flat namespace
> > in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
> > ERROR: installing package indices failed
> > * removing ?/Users/braunm/.R/Library/rjags?
> >
> >
> > However, when I go to look at the symbols in the jags library, I see
> >
> > braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
> > 0000000000098650 S _JAGS_NA
> > 0000000000110338 S _JAGS_NAN
> > 0000000000110348 S _JAGS_NEGINF
> > 0000000000110340 S _JAGS_POSINF
> > 000000000000133c t __GLOBAL__I_JAGS_NA
> >
> > and when I try
> >
> > braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
> >                 U _JAGS_NA
> >                 U _JAGS_NEGINF
> >                 U _JAGS_NA
> >                 U _JAGS_NA
> > 0000000000000060 S _JAGS_NA
> > 00000000000000b8 B _JAGS_NAN
> > 00000000000000c8 B _JAGS_NEGINF
> > 00000000000000c0 B _JAGS_POSINF
> >                 U _JAGS_NA
> >                 U _JAGS_NEGINF
> >                 U _JAGS_POSINF
> >                 U _JAGS_NEGINF
> >                 U _JAGS_POSINF
> >                 U _JAGS_NEGINF
> >                 U _JAGS_NA
> >                 U _JAGS_NEGINF
> >                 U _JAGS_NEGINF
> >                 U _JAGS_NA
> >                 U _JAGS_NEGINF
> >                 U _JAGS_POSINF
> >
> >
> > So the jags libraries (both static and dynamic) are in the standard place,
> and it looks like the symbols rjags.so needs are there as well.  So I'm not
> sure what the rjags installer is looking for.  Is there perhaps an
> environment variable that I am missing?
> >
> > Here is my sessionInfo():
> >
> >> sessionInfo()
> > R version 2.11.1 (2010-05-31)
> > x86_64-apple-darwin10.4.2
> >
> > locale:
> > [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
> >
> > attached base packages:
> > [1] stats     grDevices datasets  graphics  utils     methods   base
> >
> > other attached packages:
> > [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0
> codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1
> lattice_0.18-8   reshape_0.8.3    plyr_1.2.1
> > [12] mvtnorm_0.9-92
> >
> > loaded via a namespace (and not attached):
> > [1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1
> >
> >
> > Thanks in advance for your help.
> >
> > Michael
> >
> >
> >
> >
> >
> >
> >
> >
> > -------------------------------------------
> > Michael Braun
> > Homer A. Burnell (1928) Career Development Professor,
> > 	and Assistant Professor of Management Science (Marketing Group)
> > MIT Sloan School of Management
> > 100 Main St.., E62-535
> > Cambridge, MA 02139
> > braunm at mit.edu
> > 617-253-3436
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at stat.math.ethz.ch
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595



-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From shady935 at yahoo.com  Tue Oct 12 05:33:05 2010
From: shady935 at yahoo.com (Chris Redfield)
Date: Mon, 11 Oct 2010 20:33:05 -0700 (PDT)
Subject: [R-SIG-Mac] 'Source File...' not going to working directory
Message-ID: <366299.83909.qm@web36204.mail.mud.yahoo.com>

I upgraded from Leopard to Snow Leopard and some behaviors in R changed.

After setting the working directory, R > Misc > Change Working Directory... > 
i.e. ~/Documents/project3/testing/hello
I would then do File > Source File... > and the browse function would go 
directly to ~/Documents/project3/testing/hello where my source is located
Now it only opens to ~/

Did something change in Snow Leopard or in R?

I've tested - Profile changing within the same Mac, also installed fresh 
versions of R on clean Snow Leopard builds with the same results

Thanks in advance.


From simon.urbanek at r-project.org  Tue Oct 12 15:10:46 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Oct 2010 09:10:46 -0400
Subject: [R-SIG-Mac] problem installing rjags package
In-Reply-To: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
References: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
Message-ID: <106B99F7-470A-4152-9FD7-78494DC30314@r-project.org>

Michael,

On Oct 9, 2010, at 5:56 PM, Michael Braun wrote:

> Hi!
> 
> I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R 2.11.1 (which I compiled myself so I could link to the Intel MKL blas, which I prefer to other options).  


Just FWIW: CRAN R comes with shared BLAS option enabled and allows easy plug-in of MKL BLAS without the need to re-compile (just use the libRblas.dylib symlink). Note that MKL BLAS is often slower than ATLAS so if your main goal is speed I suggest using ATLAS (or vecLib unless you have Nehalem-type Mac Pro) - it is also easier to handle (both from technical and licensing point of view).

Cheers,
Simon



>  I was successfully able to install JAGS 2.1.0 through both the binary installer, and compiling from source (I get the same problem either way).
> 
> But I would like to use the rjags package. When I do 
> 
> install.packages("rjags")
> 
> 
> I get the folliowing output:
> 
> * installing *source* package ?rjags? ...
> checking for prefix by checking for jags... /usr/local/bin/jags
> checking for g++... g++
> checking for C++ compiler default output file name... a.out
> checking whether the C++ compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables... 
> checking for suffix of object files... o
> checking whether we are using the GNU C++ compiler... yes
> checking whether g++ accepts -g... yes
> checking how to run the C++ preprocessor... g++ -E
> checking for grep that handles long lines and -e... /usr/bin/grep
> checking for egrep... /usr/bin/grep -E
> checking for ANSI C header files... yes
> checking for sys/types.h... yes
> checking for sys/stat.h... yes
> checking for stdlib.h... yes
> checking for string.h... yes
> checking for memory.h... yes
> checking for strings.h... yes
> checking for inttypes.h... yes
> checking for stdint.h... yes
> checking for unistd.h... yes
> checking Console.h usability... yes
> checking Console.h presence... yes
> checking for Console.h... yes
> checking for gcc... gcc
> checking whether we are using the GNU C compiler... yes
> checking whether gcc accepts -g... yes
> checking for gcc option to accept ISO C89... none needed
> checking for jags_version in -ljags... yes
> configure: creating ./config.status
> config.status: creating src/Makevars
> configure: creating ./config.status
> config.status: creating src/Makevars
> config.status: creating R/unix/zzz.R
> ** libs
> *** arch - x86_64
> g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include -I/Library/Frameworks/R.framework/Resources/include/x86_64 -I/usr/local/include/JAGS -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64 -msse4.2 -g -O2 -c jags.cc -o jags.o
> g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
> installing to /Users/braunm/.R/Library/rjags/libs/x86_64
> ** R
> ** data
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices ...
> Error : .onLoad failed in loadNamespace() for 'rjags', details:
>  call: dyn.load(file, DLLpath = DLLpath, ...)
>  error: unable to load shared library '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
>  dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol not found: _JAGS_NA
>  Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>  Expected in: flat namespace
> in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
> ERROR: installing package indices failed
> * removing ?/Users/braunm/.R/Library/rjags?
> 
> 
> However, when I go to look at the symbols in the jags library, I see
> 
> braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
> 0000000000098650 S _JAGS_NA
> 0000000000110338 S _JAGS_NAN
> 0000000000110348 S _JAGS_NEGINF
> 0000000000110340 S _JAGS_POSINF
> 000000000000133c t __GLOBAL__I_JAGS_NA
> 
> and when I try
> 
> braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
>                 U _JAGS_NA
>                 U _JAGS_NEGINF
>                 U _JAGS_NA
>                 U _JAGS_NA
> 0000000000000060 S _JAGS_NA
> 00000000000000b8 B _JAGS_NAN
> 00000000000000c8 B _JAGS_NEGINF
> 00000000000000c0 B _JAGS_POSINF
>                 U _JAGS_NA
>                 U _JAGS_NEGINF
>                 U _JAGS_POSINF
>                 U _JAGS_NEGINF
>                 U _JAGS_POSINF
>                 U _JAGS_NEGINF
>                 U _JAGS_NA
>                 U _JAGS_NEGINF
>                 U _JAGS_NEGINF
>                 U _JAGS_NA
>                 U _JAGS_NEGINF
>                 U _JAGS_POSINF
> 
> 
> So the jags libraries (both static and dynamic) are in the standard place, and it looks like the symbols rjags.so needs are there as well.  So I'm not sure what the rjags installer is looking for.  Is there perhaps an environment variable that I am missing?
> 
> Here is my sessionInfo():
> 
>> sessionInfo()
> R version 2.11.1 (2010-05-31) 
> x86_64-apple-darwin10.4.2 
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     grDevices datasets  graphics  utils     methods   base     
> 
> other attached packages:
> [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0    codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1 lattice_0.18-8   reshape_0.8.3    plyr_1.2.1      
> [12] mvtnorm_0.9-92  
> 
> loaded via a namespace (and not attached):
> [1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1
> 
> 
> Thanks in advance for your help.
> 
> Michael
> 
> 
> 
> 
> 
> 
> 
> 
> -------------------------------------------
> Michael Braun
> Homer A. Burnell (1928) Career Development Professor, 
> 	and Assistant Professor of Management Science (Marketing Group)
> MIT Sloan School of Management
> 100 Main St.., E62-535
> Cambridge, MA 02139
> braunm at mit.edu
> 617-253-3436
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From simon.urbanek at r-project.org  Tue Oct 12 15:13:15 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Oct 2010 09:13:15 -0400
Subject: [R-SIG-Mac] Help on using gfortran on Mac OS 10.6
In-Reply-To: <C8CD83EB.58D8%meng-sing.liou@nasa.gov>
References: <C8CD83EB.58D8%meng-sing.liou@nasa.gov>
Message-ID: <41CB5949-5DAF-40F3-BF78-4439846F7EC0@r-project.org>


On Oct 3, 2010, at 12:50 AM, Liou, Meng-Sing (GRC-RT00) wrote:

> Hi,
> 
> I downloaded gfortran-42-5664.pkg from the http://r.research.att.com/tools,
> hoping to use it on my MacBook Pro (OS 10.6) to compile a computer code, in
> combination with gcc-4.2. However, I'm getting the following error messages,
> 
> i686-apple-darwin10-gfortran-4.2.1: precise: No such file or directory
> 
> i686-apple-darwin10-gfortran-4.2.1: language Host not recognized
> 
> Am I missing anything? Do I need to download gfortran 4.2.3 as well?
> 

No, the problem is likely in the the way you try to invoke it. If you really want help, please provide *all* relevant details.

Cheers,
Simon


From simon.urbanek at r-project.org  Tue Oct 12 15:18:38 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Oct 2010 09:18:38 -0400
Subject: [R-SIG-Mac] 'Source File...' not going to working directory
In-Reply-To: <366299.83909.qm@web36204.mail.mud.yahoo.com>
References: <366299.83909.qm@web36204.mail.mud.yahoo.com>
Message-ID: <B456187F-A9BA-4470-B793-B12C441DB64A@r-project.org>


On Oct 11, 2010, at 11:33 PM, Chris Redfield wrote:

> I upgraded from Leopard to Snow Leopard and some behaviors in R changed.
> 
> After setting the working directory, R > Misc > Change Working Directory... > 
> i.e. ~/Documents/project3/testing/hello
> I would then do File > Source File... > and the browse function would go 
> directly to ~/Documents/project3/testing/hello where my source is located
> Now it only opens to ~/
> 

Not for me ... Can you supply the details?

Cheers,
Simon


> Did something change in Snow Leopard or in R?
> 



> I've tested - Profile changing within the same Mac, also installed fresh 
> versions of R on clean Snow Leopard builds with the same results
> 
> Thanks in advance.
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From braunm at mit.edu  Tue Oct 12 17:19:24 2010
From: braunm at mit.edu (Michael Braun)
Date: Tue, 12 Oct 2010 11:19:24 -0400
Subject: [R-SIG-Mac] problem installing rjags package
In-Reply-To: <106B99F7-470A-4152-9FD7-78494DC30314@r-project.org>
References: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
	<106B99F7-470A-4152-9FD7-78494DC30314@r-project.org>
Message-ID: <AADE68A5-2C79-4A05-897E-7719C63D00DB@mit.edu>

Thanks, Simon:

I do have a Nehalem Mac Pro, and I've found MKL to be much faster than vecLib.  I saw in one of the manuals that one could point R to another BLAS.  But I wasn't sure what to do with MKL because of their "layering" approach to linking.  So if I point libRblas to something else, how to I tell the link which of the multiple libraries I need?

And since we are now straying away from the original topic about JAGS, let me know if you prefer that I start another thread.  I do try to follow the posting guide as best I can.

Michael





On Oct 12, 2010, at 9:10 AM, Simon Urbanek wrote:

> Michael,
> 
> On Oct 9, 2010, at 5:56 PM, Michael Braun wrote:
> 
>> Hi!
>> 
>> I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R 2.11.1 (which I compiled myself so I could link to the Intel MKL blas, which I prefer to other options).  
> 
> 
> Just FWIW: CRAN R comes with shared BLAS option enabled and allows easy plug-in of MKL BLAS without the need to re-compile (just use the libRblas.dylib symlink). Note that MKL BLAS is often slower than ATLAS so if your main goal is speed I suggest using ATLAS (or vecLib unless you have Nehalem-type Mac Pro) - it is also easier to handle (both from technical and licensing point of view).
> 
> Cheers,
> Simon
> 
> 
> 
>> I was successfully able to install JAGS 2.1.0 through both the binary installer, and compiling from source (I get the same problem either way).
>> 
>> But I would like to use the rjags package. When I do 
>> 
>> install.packages("rjags")
>> 
>> 
>> I get the folliowing output:
>> 
>> * installing *source* package ?rjags? ...
>> checking for prefix by checking for jags... /usr/local/bin/jags
>> checking for g++... g++
>> checking for C++ compiler default output file name... a.out
>> checking whether the C++ compiler works... yes
>> checking whether we are cross compiling... no
>> checking for suffix of executables... 
>> checking for suffix of object files... o
>> checking whether we are using the GNU C++ compiler... yes
>> checking whether g++ accepts -g... yes
>> checking how to run the C++ preprocessor... g++ -E
>> checking for grep that handles long lines and -e... /usr/bin/grep
>> checking for egrep... /usr/bin/grep -E
>> checking for ANSI C header files... yes
>> checking for sys/types.h... yes
>> checking for sys/stat.h... yes
>> checking for stdlib.h... yes
>> checking for string.h... yes
>> checking for memory.h... yes
>> checking for strings.h... yes
>> checking for inttypes.h... yes
>> checking for stdint.h... yes
>> checking for unistd.h... yes
>> checking Console.h usability... yes
>> checking Console.h presence... yes
>> checking for Console.h... yes
>> checking for gcc... gcc
>> checking whether we are using the GNU C compiler... yes
>> checking whether gcc accepts -g... yes
>> checking for gcc option to accept ISO C89... none needed
>> checking for jags_version in -ljags... yes
>> configure: creating ./config.status
>> config.status: creating src/Makevars
>> configure: creating ./config.status
>> config.status: creating src/Makevars
>> config.status: creating R/unix/zzz.R
>> ** libs
>> *** arch - x86_64
>> g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include -I/Library/Frameworks/R.framework/Resources/include/x86_64 -I/usr/local/include/JAGS -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64 -msse4.2 -g -O2 -c jags.cc -o jags.o
>> g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
>> installing to /Users/braunm/.R/Library/rjags/libs/x86_64
>> ** R
>> ** data
>> ** preparing package for lazy loading
>> ** help
>> *** installing help indices
>> ** building package indices ...
>> Error : .onLoad failed in loadNamespace() for 'rjags', details:
>> call: dyn.load(file, DLLpath = DLLpath, ...)
>> error: unable to load shared library '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
>> dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol not found: _JAGS_NA
>> Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>> Expected in: flat namespace
>> in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>> ERROR: installing package indices failed
>> * removing ?/Users/braunm/.R/Library/rjags?
>> 
>> 
>> However, when I go to look at the symbols in the jags library, I see
>> 
>> braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
>> 0000000000098650 S _JAGS_NA
>> 0000000000110338 S _JAGS_NAN
>> 0000000000110348 S _JAGS_NEGINF
>> 0000000000110340 S _JAGS_POSINF
>> 000000000000133c t __GLOBAL__I_JAGS_NA
>> 
>> and when I try
>> 
>> braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
>>                U _JAGS_NA
>>                U _JAGS_NEGINF
>>                U _JAGS_NA
>>                U _JAGS_NA
>> 0000000000000060 S _JAGS_NA
>> 00000000000000b8 B _JAGS_NAN
>> 00000000000000c8 B _JAGS_NEGINF
>> 00000000000000c0 B _JAGS_POSINF
>>                U _JAGS_NA
>>                U _JAGS_NEGINF
>>                U _JAGS_POSINF
>>                U _JAGS_NEGINF
>>                U _JAGS_POSINF
>>                U _JAGS_NEGINF
>>                U _JAGS_NA
>>                U _JAGS_NEGINF
>>                U _JAGS_NEGINF
>>                U _JAGS_NA
>>                U _JAGS_NEGINF
>>                U _JAGS_POSINF
>> 
>> 
>> So the jags libraries (both static and dynamic) are in the standard place, and it looks like the symbols rjags.so needs are there as well.  So I'm not sure what the rjags installer is looking for.  Is there perhaps an environment variable that I am missing?
>> 
>> Here is my sessionInfo():
>> 
>>> sessionInfo()
>> R version 2.11.1 (2010-05-31) 
>> x86_64-apple-darwin10.4.2 
>> 
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>> 
>> attached base packages:
>> [1] stats     grDevices datasets  graphics  utils     methods   base     
>> 
>> other attached packages:
>> [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0    codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1 lattice_0.18-8   reshape_0.8.3    plyr_1.2.1      
>> [12] mvtnorm_0.9-92  
>> 
>> loaded via a namespace (and not attached):
>> [1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1
>> 
>> 
>> Thanks in advance for your help.
>> 
>> Michael
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> -------------------------------------------
>> Michael Braun
>> Homer A. Burnell (1928) Career Development Professor, 
>> 	and Assistant Professor of Management Science (Marketing Group)
>> MIT Sloan School of Management
>> 100 Main St.., E62-535
>> Cambridge, MA 02139
>> braunm at mit.edu
>> 617-253-3436
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
> 

-------------------------------------------
Michael Braun
Homer A. Burnell (1928) Career Development Professor, 
	and Assistant Professor of Management Science (Marketing Group)
MIT Sloan School of Management
100 Main St.., E62-535
Cambridge, MA 02139
braunm at mit.edu
617-253-3436


From simon.urbanek at r-project.org  Tue Oct 12 17:44:02 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Oct 2010 11:44:02 -0400
Subject: [R-SIG-Mac] using optimized BLAS [Was: problem installing rjags
	package]
In-Reply-To: <AADE68A5-2C79-4A05-897E-7719C63D00DB@mit.edu>
References: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
	<106B99F7-470A-4152-9FD7-78494DC30314@r-project.org>
	<AADE68A5-2C79-4A05-897E-7719C63D00DB@mit.edu>
Message-ID: <EA6E15C5-8E3A-4204-A32A-0A0C78CF927D@r-project.org>


On Oct 12, 2010, at 11:19 AM, Michael Braun wrote:

> Thanks, Simon:
> 
> I do have a Nehalem Mac Pro, and I've found MKL to be much faster than vecLib.

Yes, because vecLib has a serious bug and doesn't spawn threads on Nehalem, but ATLAS is faster than MKL on Nehalem Mac Pro  -- here are the tcrossprod timings (on 2.66GHz Mac Pro):

vecLib           6.43
ATLAS serial     4.80
MKL serial       4.30
MKL parallel     0.90
ATLAS parallel   0.71


>  I saw in one of the manuals that one could point R to another BLAS.  But I wasn't sure what to do with MKL because of their "layering" approach to linking.  So if I point libRblas to something else, how to I tell the link which of the multiple libraries I need?
> 

MKL is picking them at run time so you don't have to point it to the machine-specific libraries. You can simply create one library (ld -dylib) re-exporting exactly what you would have done when linking it in R (i.e. use -reexport-l instead of -l).

For ATLAS it's much easier since you can compile it statically with PIC and create one library -- e.g. see
http://r.research.att.com/libatlas-MacPro.dylib
(Note that one is 10.6 only but includes both 32-bit and 64-bit ATLAS 3.9.25)

Cheers,
Simon
	

> And since we are now straying away from the original topic about JAGS, let me know if you prefer that I start another thread.  I do try to follow the posting guide as best I can.
> 
> Michael
> 
> 
> 
> 
> 
> On Oct 12, 2010, at 9:10 AM, Simon Urbanek wrote:
> 
>> Michael,
>> 
>> On Oct 9, 2010, at 5:56 PM, Michael Braun wrote:
>> 
>>> Hi!
>>> 
>>> I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R 2.11.1 (which I compiled myself so I could link to the Intel MKL blas, which I prefer to other options).  
>> 
>> 
>> Just FWIW: CRAN R comes with shared BLAS option enabled and allows easy plug-in of MKL BLAS without the need to re-compile (just use the libRblas.dylib symlink). Note that MKL BLAS is often slower than ATLAS so if your main goal is speed I suggest using ATLAS (or vecLib unless you have Nehalem-type Mac Pro) - it is also easier to handle (both from technical and licensing point of view).
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>> I was successfully able to install JAGS 2.1.0 through both the binary installer, and compiling from source (I get the same problem either way).
>>> 
>>> But I would like to use the rjags package. When I do 
>>> 
>>> install.packages("rjags")
>>> 
>>> 
>>> I get the folliowing output:
>>> 
>>> * installing *source* package ?rjags? ...
>>> checking for prefix by checking for jags... /usr/local/bin/jags
>>> checking for g++... g++
>>> checking for C++ compiler default output file name... a.out
>>> checking whether the C++ compiler works... yes
>>> checking whether we are cross compiling... no
>>> checking for suffix of executables... 
>>> checking for suffix of object files... o
>>> checking whether we are using the GNU C++ compiler... yes
>>> checking whether g++ accepts -g... yes
>>> checking how to run the C++ preprocessor... g++ -E
>>> checking for grep that handles long lines and -e... /usr/bin/grep
>>> checking for egrep... /usr/bin/grep -E
>>> checking for ANSI C header files... yes
>>> checking for sys/types.h... yes
>>> checking for sys/stat.h... yes
>>> checking for stdlib.h... yes
>>> checking for string.h... yes
>>> checking for memory.h... yes
>>> checking for strings.h... yes
>>> checking for inttypes.h... yes
>>> checking for stdint.h... yes
>>> checking for unistd.h... yes
>>> checking Console.h usability... yes
>>> checking Console.h presence... yes
>>> checking for Console.h... yes
>>> checking for gcc... gcc
>>> checking whether we are using the GNU C compiler... yes
>>> checking whether gcc accepts -g... yes
>>> checking for gcc option to accept ISO C89... none needed
>>> checking for jags_version in -ljags... yes
>>> configure: creating ./config.status
>>> config.status: creating src/Makevars
>>> configure: creating ./config.status
>>> config.status: creating src/Makevars
>>> config.status: creating R/unix/zzz.R
>>> ** libs
>>> *** arch - x86_64
>>> g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include -I/Library/Frameworks/R.framework/Resources/include/x86_64 -I/usr/local/include/JAGS -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64 -msse4.2 -g -O2 -c jags.cc -o jags.o
>>> g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
>>> installing to /Users/braunm/.R/Library/rjags/libs/x86_64
>>> ** R
>>> ** data
>>> ** preparing package for lazy loading
>>> ** help
>>> *** installing help indices
>>> ** building package indices ...
>>> Error : .onLoad failed in loadNamespace() for 'rjags', details:
>>> call: dyn.load(file, DLLpath = DLLpath, ...)
>>> error: unable to load shared library '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
>>> dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol not found: _JAGS_NA
>>> Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>> Expected in: flat namespace
>>> in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>> ERROR: installing package indices failed
>>> * removing ?/Users/braunm/.R/Library/rjags?
>>> 
>>> 
>>> However, when I go to look at the symbols in the jags library, I see
>>> 
>>> braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
>>> 0000000000098650 S _JAGS_NA
>>> 0000000000110338 S _JAGS_NAN
>>> 0000000000110348 S _JAGS_NEGINF
>>> 0000000000110340 S _JAGS_POSINF
>>> 000000000000133c t __GLOBAL__I_JAGS_NA
>>> 
>>> and when I try
>>> 
>>> braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
>>>               U _JAGS_NA
>>>               U _JAGS_NEGINF
>>>               U _JAGS_NA
>>>               U _JAGS_NA
>>> 0000000000000060 S _JAGS_NA
>>> 00000000000000b8 B _JAGS_NAN
>>> 00000000000000c8 B _JAGS_NEGINF
>>> 00000000000000c0 B _JAGS_POSINF
>>>               U _JAGS_NA
>>>               U _JAGS_NEGINF
>>>               U _JAGS_POSINF
>>>               U _JAGS_NEGINF
>>>               U _JAGS_POSINF
>>>               U _JAGS_NEGINF
>>>               U _JAGS_NA
>>>               U _JAGS_NEGINF
>>>               U _JAGS_NEGINF
>>>               U _JAGS_NA
>>>               U _JAGS_NEGINF
>>>               U _JAGS_POSINF
>>> 
>>> 
>>> So the jags libraries (both static and dynamic) are in the standard place, and it looks like the symbols rjags.so needs are there as well.  So I'm not sure what the rjags installer is looking for.  Is there perhaps an environment variable that I am missing?
>>> 
>>> Here is my sessionInfo():
>>> 
>>>> sessionInfo()
>>> R version 2.11.1 (2010-05-31) 
>>> x86_64-apple-darwin10.4.2 
>>> 
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     grDevices datasets  graphics  utils     methods   base     
>>> 
>>> other attached packages:
>>> [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0    codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1 lattice_0.18-8   reshape_0.8.3    plyr_1.2.1      
>>> [12] mvtnorm_0.9-92  
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1
>>> 
>>> 
>>> Thanks in advance for your help.
>>> 
>>> Michael
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> -------------------------------------------
>>> Michael Braun
>>> Homer A. Burnell (1928) Career Development Professor, 
>>> 	and Assistant Professor of Management Science (Marketing Group)
>>> MIT Sloan School of Management
>>> 100 Main St.., E62-535
>>> Cambridge, MA 02139
>>> braunm at mit.edu
>>> 617-253-3436
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> 
>> 
> 
> -------------------------------------------
> Michael Braun
> Homer A. Burnell (1928) Career Development Professor, 
> 	and Assistant Professor of Management Science (Marketing Group)
> MIT Sloan School of Management
> 100 Main St.., E62-535
> Cambridge, MA 02139
> braunm at mit.edu
> 617-253-3436
> 
> 
> 


From quirogagonzalo at gmail.com  Tue Oct 12 23:10:16 2010
From: quirogagonzalo at gmail.com (Biol. Gonzalo Quiroga)
Date: Tue, 12 Oct 2010 18:10:16 -0300
Subject: [R-SIG-Mac] R GUI - Rcmdr Troubleshooting
Message-ID: <AANLkTikVR81PLiqwUmOgMemk55yLv0SFvr098GZednKv@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101012/486a73a4/attachment.pl>

From jfox at mcmaster.ca  Wed Oct 13 03:43:58 2010
From: jfox at mcmaster.ca (John Fox)
Date: Tue, 12 Oct 2010 21:43:58 -0400
Subject: [R-SIG-Mac] R GUI - Rcmdr Troubleshooting
In-Reply-To: <AANLkTikVR81PLiqwUmOgMemk55yLv0SFvr098GZednKv@mail.gmail.com>
References: <AANLkTikVR81PLiqwUmOgMemk55yLv0SFvr098GZednKv@mail.gmail.com>
Message-ID: <web-323174021@cgpsrv2.cis.mcmaster.ca>

Dear Biol. Gonzalo Quiroga,

Unfortunately, installing the Rcmdr on Mac OS X systems is a bit more complicated than on Windows and typical Linux systems. If you haven't already read the Mac OS X R Commander installation notes <http://socserv.socsci.mcmaster.ca/jfox/Misc/Rcmdr/installation-notes.html>, please do so now. I also have an alternative set of installation instructions at <http://socserv.socsci.mcmaster.ca/jfox/Courses/soc3h6/RInstallation.html>.

I hope this helps,
 John

On Tue, 12 Oct 2010 18:10:16 -0300
 "Biol. Gonzalo Quiroga" <quirogagonzalo at gmail.com> wrote:
> Hello, I'm having problems whan I try to use the Rcmdr library, it just wont
> work via R GUI and via Terminal it opens but I can't press any button
> anywere.
> 
> I really do'y know what to do to fix it.
> 
> I'm runing Mac OS 10.6.4
> 
> My regards
> 
> -- 
> Bi?l. Gonzalo Quiroga
> 
> 	[[alternative HTML version deleted]]
> 

------------------------------------------------
John Fox
Sen. William McMaster Prof. of Social Statistics
Department of Sociology
McMaster University
Hamilton, Ontario, Canada
http://socserv.mcmaster.ca/jfox/


From braunm at mit.edu  Wed Oct 13 16:25:49 2010
From: braunm at mit.edu (Michael Braun)
Date: Wed, 13 Oct 2010 10:25:49 -0400
Subject: [R-SIG-Mac] using optimized BLAS [Was: problem installing rjags
	package]
In-Reply-To: <EA6E15C5-8E3A-4204-A32A-0A0C78CF927D@r-project.org>
References: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
	<106B99F7-470A-4152-9FD7-78494DC30314@r-project.org>
	<AADE68A5-2C79-4A05-897E-7719C63D00DB@mit.edu>
	<EA6E15C5-8E3A-4204-A32A-0A0C78CF927D@r-project.org>
Message-ID: <DFF36798-751A-4C4F-B072-5486CB565B3D@mit.edu>

Simon:

Thanks for sending this over.   I'd much rather stick with the CRAN binary if I can, but exploiting the capabilities of my machine as much as possible is important to me.  There are 3 reasons I'm not using the precompiled Mac binary:

1.  Linking to MKL Blas
2.  Wanted to have a version of R where the linker lets me profile my precompiled code (you and I corresponded in a thread about this last year).
3. Compiling R for the newest Nehalem, and the vectorizing operations, using the -msse4.2 flag.

I've still never been able to get #2 to work, and it's really not a huge priority at the moment.   #3 would be nice if it does let R milk all the power out of the new processor (I've never done a speed test on it).  But if I understand correctly, would I now be able to use the CRAN R binary and still choose my own BLAS?  Whether I choose MKL or ATLAS, I'm sorry that I don't really understand what you are talking about when you say :

"MKL is picking them at run time so you don't have to point it to the machine-specific libraries. You can simply create one library (ld -dylib) re-exporting exactly what you would have done when linking it in R (i.e. use -reexport-l instead of -l)." 

I didn't mean pointing to the machine-specific libraries.  In the MKL Users Manual (July 2010 version, Chapter 5), there are different options depending on if you want to link static or dynamic, sequential or threaded, ILP or LP, FORTRAN interface or not, etc.  That;s why my Makevars file looks like:  BLAS_LIBS=-lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread  (and incidentally, adding -lpthread is mentioned in the Intel manual, even for the sequential version.)

Since I'm learning this all as I go, could you possibly provide a cookbook recipe of exactly what I would need to do.  I'm just not sure what I should be re-exporting.  Is this a new script file?  Or something I need to compile?

Another issue I've considered when choosing the MKL BLAS:  sometimes I'm calling BLAS routines from sequential code, in which case the threaded BLAS makes sense.  But sometimes I call from threaded code, either using the plyr, doMC, foreach, and /or multicore R packages, or using OpenMP.  In those cases, I've been setting MKL_NUM_THREADS (separately from OMP_NUM_THREADS) as needed.  I have not found a comparable way to do this in the ATLAS manual.

Thanks,

Michael




On Oct 12, 2010, at 11:44 AM, Simon Urbanek wrote:

> 
> On Oct 12, 2010, at 11:19 AM, Michael Braun wrote:
> 
>> Thanks, Simon:
>> 
>> I do have a Nehalem Mac Pro, and I've found MKL to be much faster than vecLib.
> 
> Yes, because vecLib has a serious bug and doesn't spawn threads on Nehalem, but ATLAS is faster than MKL on Nehalem Mac Pro  -- here are the tcrossprod timings (on 2.66GHz Mac Pro):
> 
> vecLib           6.43
> ATLAS serial     4.80
> MKL serial       4.30
> MKL parallel     0.90
> ATLAS parallel   0.71
> 
> 
>> I saw in one of the manuals that one could point R to another BLAS.  But I wasn't sure what to do with MKL because of their "layering" approach to linking.  So if I point libRblas to something else, how to I tell the link which of the multiple libraries I need?
>> 
> 
> MKL is picking them at run time so you don't have to point it to the machine-specific libraries. You can simply create one library (ld -dylib) re-exporting exactly what you would have done when linking it in R (i.e. use -reexport-l instead of -l).
> 
> For ATLAS it's much easier since you can compile it statically with PIC and create one library -- e.g. see
> http://r.research.att.com/libatlas-MacPro.dylib
> (Note that one is 10.6 only but includes both 32-bit and 64-bit ATLAS 3.9.25)
> 
> Cheers,
> Simon
> 	
> 
>> And since we are now straying away from the original topic about JAGS, let me know if you prefer that I start another thread.  I do try to follow the posting guide as best I can.
>> 
>> Michael
>> 
>> 
>> 
>> 
>> 
>> On Oct 12, 2010, at 9:10 AM, Simon Urbanek wrote:
>> 
>>> Michael,
>>> 
>>> On Oct 9, 2010, at 5:56 PM, Michael Braun wrote:
>>> 
>>>> Hi!
>>>> 
>>>> I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R 2.11.1 (which I compiled myself so I could link to the Intel MKL blas, which I prefer to other options).  
>>> 
>>> 
>>> Just FWIW: CRAN R comes with shared BLAS option enabled and allows easy plug-in of MKL BLAS without the need to re-compile (just use the libRblas.dylib symlink). Note that MKL BLAS is often slower than ATLAS so if your main goal is speed I suggest using ATLAS (or vecLib unless you have Nehalem-type Mac Pro) - it is also easier to handle (both from technical and licensing point of view).
>>> 
>>> Cheers,
>>> Simon
>>> 
>>> 
>>> 
>>>> I was successfully able to install JAGS 2.1.0 through both the binary installer, and compiling from source (I get the same problem either way).
>>>> 
>>>> But I would like to use the rjags package. When I do 
>>>> 
>>>> install.packages("rjags")
>>>> 
>>>> 
>>>> I get the folliowing output:
>>>> 
>>>> * installing *source* package ?rjags? ...
>>>> checking for prefix by checking for jags... /usr/local/bin/jags
>>>> checking for g++... g++
>>>> checking for C++ compiler default output file name... a.out
>>>> checking whether the C++ compiler works... yes
>>>> checking whether we are cross compiling... no
>>>> checking for suffix of executables... 
>>>> checking for suffix of object files... o
>>>> checking whether we are using the GNU C++ compiler... yes
>>>> checking whether g++ accepts -g... yes
>>>> checking how to run the C++ preprocessor... g++ -E
>>>> checking for grep that handles long lines and -e... /usr/bin/grep
>>>> checking for egrep... /usr/bin/grep -E
>>>> checking for ANSI C header files... yes
>>>> checking for sys/types.h... yes
>>>> checking for sys/stat.h... yes
>>>> checking for stdlib.h... yes
>>>> checking for string.h... yes
>>>> checking for memory.h... yes
>>>> checking for strings.h... yes
>>>> checking for inttypes.h... yes
>>>> checking for stdint.h... yes
>>>> checking for unistd.h... yes
>>>> checking Console.h usability... yes
>>>> checking Console.h presence... yes
>>>> checking for Console.h... yes
>>>> checking for gcc... gcc
>>>> checking whether we are using the GNU C compiler... yes
>>>> checking whether gcc accepts -g... yes
>>>> checking for gcc option to accept ISO C89... none needed
>>>> checking for jags_version in -ljags... yes
>>>> configure: creating ./config.status
>>>> config.status: creating src/Makevars
>>>> configure: creating ./config.status
>>>> config.status: creating src/Makevars
>>>> config.status: creating R/unix/zzz.R
>>>> ** libs
>>>> *** arch - x86_64
>>>> g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include -I/Library/Frameworks/R.framework/Resources/include/x86_64 -I/usr/local/include/JAGS -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64 -msse4.2 -g -O2 -c jags.cc -o jags.o
>>>> g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
>>>> installing to /Users/braunm/.R/Library/rjags/libs/x86_64
>>>> ** R
>>>> ** data
>>>> ** preparing package for lazy loading
>>>> ** help
>>>> *** installing help indices
>>>> ** building package indices ...
>>>> Error : .onLoad failed in loadNamespace() for 'rjags', details:
>>>> call: dyn.load(file, DLLpath = DLLpath, ...)
>>>> error: unable to load shared library '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
>>>> dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol not found: _JAGS_NA
>>>> Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>>> Expected in: flat namespace
>>>> in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>>> ERROR: installing package indices failed
>>>> * removing ?/Users/braunm/.R/Library/rjags?
>>>> 
>>>> 
>>>> However, when I go to look at the symbols in the jags library, I see
>>>> 
>>>> braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
>>>> 0000000000098650 S _JAGS_NA
>>>> 0000000000110338 S _JAGS_NAN
>>>> 0000000000110348 S _JAGS_NEGINF
>>>> 0000000000110340 S _JAGS_POSINF
>>>> 000000000000133c t __GLOBAL__I_JAGS_NA
>>>> 
>>>> and when I try
>>>> 
>>>> braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
>>>>              U _JAGS_NA
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_NA
>>>>              U _JAGS_NA
>>>> 0000000000000060 S _JAGS_NA
>>>> 00000000000000b8 B _JAGS_NAN
>>>> 00000000000000c8 B _JAGS_NEGINF
>>>> 00000000000000c0 B _JAGS_POSINF
>>>>              U _JAGS_NA
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_POSINF
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_POSINF
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_NA
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_NA
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_POSINF
>>>> 
>>>> 
>>>> So the jags libraries (both static and dynamic) are in the standard place, and it looks like the symbols rjags.so needs are there as well.  So I'm not sure what the rjags installer is looking for.  Is there perhaps an environment variable that I am missing?
>>>> 
>>>> Here is my sessionInfo():
>>>> 
>>>>> sessionInfo()
>>>> R version 2.11.1 (2010-05-31) 
>>>> x86_64-apple-darwin10.4.2 
>>>> 
>>>> locale:
>>>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>>>> 
>>>> attached base packages:
>>>> [1] stats     grDevices datasets  graphics  utils     methods   base     
>>>> 
>>>> other attached packages:
>>>> [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0    codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1 lattice_0.18-8   reshape_0.8.3    plyr_1.2.1      
>>>> [12] mvtnorm_0.9-92  
>>>> 
>>>> loaded via a namespace (and not attached):
>>>> [1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1
>>>> 
>>>> 
>>>> Thanks in advance for your help.
>>>> 
>>>> Michael
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> -------------------------------------------
>>>> Michael Braun
>>>> Homer A. Burnell (1928) Career Development Professor, 
>>>> 	and Assistant Professor of Management Science (Marketing Group)
>>>> MIT Sloan School of Management
>>>> 100 Main St.., E62-535
>>>> Cambridge, MA 02139
>>>> braunm at mit.edu
>>>> 617-253-3436
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at stat.math.ethz.ch
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>>> 
>>> 
>> 
>> -------------------------------------------
>> Michael Braun
>> Homer A. Burnell (1928) Career Development Professor, 
>> 	and Assistant Professor of Management Science (Marketing Group)
>> MIT Sloan School of Management
>> 100 Main St.., E62-535
>> Cambridge, MA 02139
>> braunm at mit.edu
>> 617-253-3436
>> 
>> 
>> 
> 

-------------------------------------------
Michael Braun
Homer A. Burnell (1928) Career Development Professor, 
	and Assistant Professor of Management Science (Marketing Group)
MIT Sloan School of Management
100 Main St.., E62-535
Cambridge, MA 02139
braunm at mit.edu
617-253-3436


From limwenpin at gmail.com  Thu Oct 14 10:06:26 2010
From: limwenpin at gmail.com (Desmond Lim)
Date: Thu, 14 Oct 2010 16:06:26 +0800
Subject: [R-SIG-Mac] Sorting each column of a matrix independently
Message-ID: <AANLkTinLMqvRciienZExcOq9XtfuTdATLivZqbWtGz_7@mail.gmail.com>

Hi,

I have this matrix

unsorted$A with 5 columns (all numeric).

Currently I'm sorting the columns like this:

sorted$A[,1] <- sort(unsorted$A[,1])
sorted$A[,2] <- sort(unsorted$A[,2]) ...

I have tried doing

sorted$A <- unsorted$A[do.call(order, data.frame(unsorted$A)),] but it
sorts the first column then the 2nd column which it ties to the 1st
column, then the 3rd which is tied to the 2nd, etc. I need all the
columns to be independently sorted.

Any help is appreciated.

Desmond


From ken at kjbeath.com.au  Thu Oct 14 10:26:55 2010
From: ken at kjbeath.com.au (Ken Beath)
Date: Thu, 14 Oct 2010 19:26:55 +1100
Subject: [R-SIG-Mac] Sorting each column of a matrix independently
In-Reply-To: <AANLkTinLMqvRciienZExcOq9XtfuTdATLivZqbWtGz_7@mail.gmail.com>
References: <AANLkTinLMqvRciienZExcOq9XtfuTdATLivZqbWtGz_7@mail.gmail.com>
Message-ID: <61CA2A99-9952-4A85-9F52-70A5EBED2E6F@kjbeath.com.au>

This question should be directed to R-Help

Anyway, sorted <- apply(unsorted,2,sort) should do it.

Ken

On 14/10/2010, at 7:06 PM, Desmond Lim wrote:

> Hi,
> 
> I have this matrix
> 
> unsorted$A with 5 columns (all numeric).
> 
> Currently I'm sorting the columns like this:
> 
> sorted$A[,1] <- sort(unsorted$A[,1])
> sorted$A[,2] <- sort(unsorted$A[,2]) ...
> 
> I have tried doing
> 
> sorted$A <- unsorted$A[do.call(order, data.frame(unsorted$A)),] but it
> sorts the first column then the 2nd column which it ties to the 1st
> column, then the 3rd which is tied to the 2nd, etc. I need all the
> columns to be independently sorted.
> 
> Any help is appreciated.
> 
> Desmond
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From tjohnson at src.riken.jp  Thu Oct 14 10:51:43 2010
From: tjohnson at src.riken.jp (Todd A. Johnson)
Date: Thu, 14 Oct 2010 17:51:43 +0900
Subject: [R-SIG-Mac] Sorting each column of a matrix independently
In-Reply-To: <AANLkTinLMqvRciienZExcOq9XtfuTdATLivZqbWtGz_7@mail.gmail.com>
Message-ID: <C8DCF3AF.429FE%tjohnson@src.riken.jp>

Hi Desmond,

Perhaps I'm not understanding something, but using sort on separate columns
looks too complicated to me...

According to help(sort), sort is for a vector or factor, and order is for
sorting dataframes (or matrices).

So, you should be able to do:

sorted <- unsorted[order(unsorted[,1], unsorted[,2]),]

Stick a minus sign in front of columns if you want decreasing order:

sorted <- unsorted[order(unsorted[,1], -unsorted[,2]),]

Would sort by the first column in increasing order and the second column by
descreasing order.

Change the order of the columns within the order() statement depending on
which columns have preference during the ordering.

Best wishes,

Todd 


On 10/14/10 5:06 PM, "Desmond Lim" <limwenpin at gmail.com> wrote:

> Hi,
> 
> I have this matrix
> 
> unsorted$A with 5 columns (all numeric).
> 
> Currently I'm sorting the columns like this:
> 
> sorted$A[,1] <- sort(unsorted$A[,1])
> sorted$A[,2] <- sort(unsorted$A[,2]) ...
> 
> I have tried doing
> 
> sorted$A <- unsorted$A[do.call(order, data.frame(unsorted$A)),] but it
> sorts the first column then the 2nd column which it ties to the 1st
> column, then the 3rd which is tied to the 2nd, etc. I need all the
> columns to be independently sorted.
> 
> Any help is appreciated.
> 
> Desmond
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From braunm at mit.edu  Thu Oct 14 23:03:55 2010
From: braunm at mit.edu (Michael Braun)
Date: Thu, 14 Oct 2010 17:03:55 -0400
Subject: [R-SIG-Mac] using optimized BLAS [Was: problem installing rjags
	package]
In-Reply-To: <EA6E15C5-8E3A-4204-A32A-0A0C78CF927D@r-project.org>
References: <2C6AD26E-AFC3-41FB-AF4A-56765A79C9CA@mit.edu>
	<106B99F7-470A-4152-9FD7-78494DC30314@r-project.org>
	<AADE68A5-2C79-4A05-897E-7719C63D00DB@mit.edu>
	<EA6E15C5-8E3A-4204-A32A-0A0C78CF927D@r-project.org>
Message-ID: <D6CD0F1C-A52E-48E6-B891-C9C07A790BDB@mit.edu>

OK, here's what I did, and it seems to work:

1.  I started with a clean R installation, using only the CRAN binary.

2.  I ran the following script:

#!/bin/bash

export BL=/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t
export GF=~/Install_Files/MKL_gfortran_interface/lib/em64t
export IOMP=/opt/intel/Compiler/11.1/089/lib

ld -dylib -arch x86_64 -L$BL -L$GF -reexport-lmkl_intel_lp64 -reexport-lmkl_sequential -reexport-lmkl_core -reexport-lpthread -o libmklblas_seq.dylib
ld -dylib -arch x86_64 -L$BL -L$GF -L$IOMP  -reexport-lmkl_intel_lp64 -reexport-lmkl_intel_thread  -reexport-lmkl_core -reexport-liomp5 -reexport-lpthread -o libmklblas_par.dylib

This gave me two Intel MKL libraries.  I then pointed the libRblas.dylib symbolic link to one or the other, depending on if I want a sequential or threaded.
The performance of the threaded MKL is comparable to ATLAS (sometimes better, sometimes worse), but is much, much better than vecLib.  

So this gives me the BLAS I want, and keeps my life very simple by letting me use the CRAN binary.

But as researchers, we know that every answer spawns new questions.

1.  Can I do something similar with LAPACK (say, if I want a threaded Cholesky decomposition or solving a system of equations)?

2.  Although it is true that one can adjust the number of threads that the MKL BLAS uses by setting the MKL_NUM_THREADS environment variable, it appears that this variable must be set before the BLAS is loaded.  Since BLAS is loaded at the same time as R, it would appear that this kind of adaptation "on the fly" is not possible.  Is there a way to "reset" the BLAS at a suitable point in an R script, so I could unload BLAS, change the variable, and then reload it? 

The *specific* case I'm talking about is what would happen if I were to call multithreaded BLAS from a function that is running via multicore, foreach and/or plyr?  I'm thinking I want threading turned on when I'm not in a foreach loop, but off when I am.

3.  Do I have to worry about the MKL Fortran interfaces to BLAS or LAPACK at all?  (I'm talking about the libmkl_blas95_lp64.a and libmkl_lapack95_lp64.a libraries).  I needed to link to them to compile R from source, but if I omit them from today's new creation, will that mess me up down the road?

4.  As I mentioned before, I'm learning a lot this as I go, but from what I've read, the newer Intel processors support a number of vectorization instructions that are not supported by earlier chips (this SSE4.2 stuff).  I have tried compiling other packages (e.g., GSL) with and without SSE4.2, and find that adding the appropriate flag in the Intel compiler gives me 10-20 percent improvement in some applications (can't remember which--did it a while ago).  So that's why I add those flags when I compile R from source.  But I recognize that the CRAN binary needs to have some backwards compatibility.  The Intel compilers offer such an option (e.g., -axsse4.2 will compile to use the best possible set of instructions up to sse4.2).  Is the CRAN binary compiled in the same way? Put another way, is it compiled for the "lowest" common instruction set, or will it use the most advanced instruction set if it's available?

As before, I am happy to split these questions into separate discussion threads.  But now the questions are more of the "this is interesting--I'd like to learn more," variety, instead of the "I have a problem, please help me" type.  And of course, thanks so much for pointing me in the right direction, and for all the work you do in developing and supporting R.






On Oct 12, 2010, at 11:44 AM, Simon Urbanek wrote:

> 
> On Oct 12, 2010, at 11:19 AM, Michael Braun wrote:
> 
>> Thanks, Simon:
>> 
>> I do have a Nehalem Mac Pro, and I've found MKL to be much faster than vecLib.
> 
> Yes, because vecLib has a serious bug and doesn't spawn threads on Nehalem, but ATLAS is faster than MKL on Nehalem Mac Pro  -- here are the tcrossprod timings (on 2.66GHz Mac Pro):
> 
> vecLib           6.43
> ATLAS serial     4.80
> MKL serial       4.30
> MKL parallel     0.90
> ATLAS parallel   0.71
> 
> 
>> I saw in one of the manuals that one could point R to another BLAS.  But I wasn't sure what to do with MKL because of their "layering" approach to linking.  So if I point libRblas to something else, how to I tell the link which of the multiple libraries I need?
>> 
> 
> MKL is picking them at run time so you don't have to point it to the machine-specific libraries. You can simply create one library (ld -dylib) re-exporting exactly what you would have done when linking it in R (i.e. use -reexport-l instead of -l).
> 
> For ATLAS it's much easier since you can compile it statically with PIC and create one library -- e.g. see
> http://r.research.att.com/libatlas-MacPro.dylib
> (Note that one is 10.6 only but includes both 32-bit and 64-bit ATLAS 3.9.25)
> 
> Cheers,
> Simon
> 	
> 
>> And since we are now straying away from the original topic about JAGS, let me know if you prefer that I start another thread.  I do try to follow the posting guide as best I can.
>> 
>> Michael
>> 
>> 
>> 
>> 
>> 
>> On Oct 12, 2010, at 9:10 AM, Simon Urbanek wrote:
>> 
>>> Michael,
>>> 
>>> On Oct 9, 2010, at 5:56 PM, Michael Braun wrote:
>>> 
>>>> Hi!
>>>> 
>>>> I am trying to install rjags on my Mac Pro running OSX 10.6.4, and R 2.11.1 (which I compiled myself so I could link to the Intel MKL blas, which I prefer to other options).  
>>> 
>>> 
>>> Just FWIW: CRAN R comes with shared BLAS option enabled and allows easy plug-in of MKL BLAS without the need to re-compile (just use the libRblas.dylib symlink). Note that MKL BLAS is often slower than ATLAS so if your main goal is speed I suggest using ATLAS (or vecLib unless you have Nehalem-type Mac Pro) - it is also easier to handle (both from technical and licensing point of view).
>>> 
>>> Cheers,
>>> Simon
>>> 
>>> 
>>> 
>>>> I was successfully able to install JAGS 2.1.0 through both the binary installer, and compiling from source (I get the same problem either way).
>>>> 
>>>> But I would like to use the rjags package. When I do 
>>>> 
>>>> install.packages("rjags")
>>>> 
>>>> 
>>>> I get the folliowing output:
>>>> 
>>>> * installing *source* package ?rjags? ...
>>>> checking for prefix by checking for jags... /usr/local/bin/jags
>>>> checking for g++... g++
>>>> checking for C++ compiler default output file name... a.out
>>>> checking whether the C++ compiler works... yes
>>>> checking whether we are cross compiling... no
>>>> checking for suffix of executables... 
>>>> checking for suffix of object files... o
>>>> checking whether we are using the GNU C++ compiler... yes
>>>> checking whether g++ accepts -g... yes
>>>> checking how to run the C++ preprocessor... g++ -E
>>>> checking for grep that handles long lines and -e... /usr/bin/grep
>>>> checking for egrep... /usr/bin/grep -E
>>>> checking for ANSI C header files... yes
>>>> checking for sys/types.h... yes
>>>> checking for sys/stat.h... yes
>>>> checking for stdlib.h... yes
>>>> checking for string.h... yes
>>>> checking for memory.h... yes
>>>> checking for strings.h... yes
>>>> checking for inttypes.h... yes
>>>> checking for stdint.h... yes
>>>> checking for unistd.h... yes
>>>> checking Console.h usability... yes
>>>> checking Console.h presence... yes
>>>> checking for Console.h... yes
>>>> checking for gcc... gcc
>>>> checking whether we are using the GNU C compiler... yes
>>>> checking whether gcc accepts -g... yes
>>>> checking for gcc option to accept ISO C89... none needed
>>>> checking for jags_version in -ljags... yes
>>>> configure: creating ./config.status
>>>> config.status: creating src/Makevars
>>>> configure: creating ./config.status
>>>> config.status: creating src/Makevars
>>>> config.status: creating R/unix/zzz.R
>>>> ** libs
>>>> *** arch - x86_64
>>>> g++ -arch x86_64 -I/Library/Frameworks/R.framework/Resources/include -I/Library/Frameworks/R.framework/Resources/include/x86_64 -I/usr/local/include/JAGS -I/opt/intel/Compiler/11.1/089/Frameworks/mkl/Headers -I/Install_Files/MKL_gfortran_interface/include/em64t/lp64    -fPIC  -m64 -msse4.2 -g -O2 -c jags.cc -o jags.o
>>>> g++ -arch x86_64 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/opt/intel/Compiler/11.1/089/Frameworks/mkl/Libraries/em64t -L/Users/braunm/Install_Files/MKL_gfortran_interface/lib/em64t -o rjags.so jags.o -lgsl -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation
>>>> installing to /Users/braunm/.R/Library/rjags/libs/x86_64
>>>> ** R
>>>> ** data
>>>> ** preparing package for lazy loading
>>>> ** help
>>>> *** installing help indices
>>>> ** building package indices ...
>>>> Error : .onLoad failed in loadNamespace() for 'rjags', details:
>>>> call: dyn.load(file, DLLpath = DLLpath, ...)
>>>> error: unable to load shared library '/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so':
>>>> dlopen(/Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so, 10): Symbol not found: _JAGS_NA
>>>> Referenced from: /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>>> Expected in: flat namespace
>>>> in /Users/braunm/.R/Library/rjags/libs/x86_64/rjags.so
>>>> ERROR: installing package indices failed
>>>> * removing ?/Users/braunm/.R/Library/rjags?
>>>> 
>>>> 
>>>> However, when I go to look at the symbols in the jags library, I see
>>>> 
>>>> braunm4: /usr/local/lib $ nm libjags.dylib |grep JAGS
>>>> 0000000000098650 S _JAGS_NA
>>>> 0000000000110338 S _JAGS_NAN
>>>> 0000000000110348 S _JAGS_NEGINF
>>>> 0000000000110340 S _JAGS_POSINF
>>>> 000000000000133c t __GLOBAL__I_JAGS_NA
>>>> 
>>>> and when I try
>>>> 
>>>> braunm4: /usr/local/lib $ nm libjags.a |grep JAGS
>>>>              U _JAGS_NA
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_NA
>>>>              U _JAGS_NA
>>>> 0000000000000060 S _JAGS_NA
>>>> 00000000000000b8 B _JAGS_NAN
>>>> 00000000000000c8 B _JAGS_NEGINF
>>>> 00000000000000c0 B _JAGS_POSINF
>>>>              U _JAGS_NA
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_POSINF
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_POSINF
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_NA
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_NA
>>>>              U _JAGS_NEGINF
>>>>              U _JAGS_POSINF
>>>> 
>>>> 
>>>> So the jags libraries (both static and dynamic) are in the standard place, and it looks like the symbols rjags.so needs are there as well.  So I'm not sure what the rjags installer is looking for.  Is there perhaps an environment variable that I am missing?
>>>> 
>>>> Here is my sessionInfo():
>>>> 
>>>>> sessionInfo()
>>>> R version 2.11.1 (2010-05-31) 
>>>> x86_64-apple-darwin10.4.2 
>>>> 
>>>> locale:
>>>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>>>> 
>>>> attached base packages:
>>>> [1] stats     grDevices datasets  graphics  utils     methods   base     
>>>> 
>>>> other attached packages:
>>>> [1] xtable_1.5-6     doMC_1.2.1       multicore_0.1-3  foreach_1.3.0    codetools_0.2-2  iterators_1.0.3  coda_0.13-5      matrixcalc_1.0-1 lattice_0.18-8   reshape_0.8.3    plyr_1.2.1      
>>>> [12] mvtnorm_0.9-92  
>>>> 
>>>> loaded via a namespace (and not attached):
>>>> [1] grid_2.11.1  tcltk_2.11.1 tools_2.11.1
>>>> 
>>>> 
>>>> Thanks in advance for your help.
>>>> 
>>>> Michael
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> -------------------------------------------
>>>> Michael Braun
>>>> Homer A. Burnell (1928) Career Development Professor, 
>>>> 	and Assistant Professor of Management Science (Marketing Group)
>>>> MIT Sloan School of Management
>>>> 100 Main St.., E62-535
>>>> Cambridge, MA 02139
>>>> braunm at mit.edu
>>>> 617-253-3436
>>>> 
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at stat.math.ethz.ch
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>> 
>>>> 
>>> 
>> 
>> -------------------------------------------
>> Michael Braun
>> Homer A. Burnell (1928) Career Development Professor, 
>> 	and Assistant Professor of Management Science (Marketing Group)
>> MIT Sloan School of Management
>> 100 Main St.., E62-535
>> Cambridge, MA 02139
>> braunm at mit.edu
>> 617-253-3436
>> 
>> 
>> 
> 

-------------------------------------------
Michael Braun
Homer A. Burnell (1928) Career Development Professor, 
	and Assistant Professor of Management Science (Marketing Group)
MIT Sloan School of Management
100 Main St.., E62-535
Cambridge, MA 02139
braunm at mit.edu
617-253-3436


From carl at witthoft.com  Thu Oct 14 23:09:52 2010
From: carl at witthoft.com (Carl Witthoft)
Date: Thu, 14 Oct 2010 17:09:52 -0400
Subject: [R-SIG-Mac] does biOps compile on OSX?
Message-ID: <4CB771A0.7030206@witthoft.com>


There's no OSX binary package for biOps at the repository,  and the link 
to the checklog is broken.
Has anyone built biOps under 10.6.x or 10.5.x  ?

Actually, the only thing I want right now is the imgConvolve function, 
so if people have other recommendations for a 2-dimensional convolution 
function in R (other than writing it myself -- I"m lazy today :-) ), I'd 
be happy to know.

thanks
Carl


From dwinsemius at comcast.net  Thu Oct 14 23:25:40 2010
From: dwinsemius at comcast.net (David Winsemius)
Date: Thu, 14 Oct 2010 17:25:40 -0400
Subject: [R-SIG-Mac] does biOps compile on OSX?
In-Reply-To: <4CB771A0.7030206@witthoft.com>
References: <4CB771A0.7030206@witthoft.com>
Message-ID: <119CB8E6-7C87-4F6C-8010-AB39EE182D0E@comcast.net>


On Oct 14, 2010, at 5:09 PM, Carl Witthoft wrote:

>
> There's no OSX binary package for biOps at the repository,  and the  
> link to the checklog is broken.
> Has anyone built biOps under 10.6.x or 10.5.x  ?

It just built and installed in 2.11.1 running  10.5.8. There was a  
warning
"checking jpeglib.h usability... configure: WARNING: Can't find fftw3  
header"
>
> Actually, the only thing I want right now is the imgConvolve function,

The example on the help page runs without error.

> so if people have other recommendations for a 2-dimensional  
> convolution function in R (other than writing it myself -- I"m lazy  
> today :-) ), I'd be happy to know.
>
> thanks
> Carl
-- 

David Winsemius, MD
West Hartford, CT


From simon.urbanek at r-project.org  Fri Oct 15 00:02:52 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 14 Oct 2010 18:02:52 -0400
Subject: [R-SIG-Mac] does biOps compile on OSX?
In-Reply-To: <4CB771A0.7030206@witthoft.com>
References: <4CB771A0.7030206@witthoft.com>
Message-ID: <C9FE9D98-F9EB-41A2-BB7B-04BFF4900633@r-project.org>


On Oct 14, 2010, at 5:09 PM, Carl Witthoft wrote:

> 
> There's no OSX binary package for biOps at the repository,  and the link to the checklog is broken.

The package has some issues with detecting TIFF and more over references it even though its detection fails -- the error log says:

** testing if installed package can be loaded
Error in dyn.load(file, DLLpath = DLLpath, ...) : 
  unable to load shared object '/Volumes/Tiger/Builds/Rdev-web/QA/Simon/packages/leopard-universal/results/2.12/biOps.Rcheck/biOps/libs/i386/biOps.so':
  dlopen(/Volumes/Tiger/Builds/Rdev-web/QA/Simon/packages/leopard-universal/results/2.12/biOps.Rcheck/biOps/libs/i386/biOps.so, 6): Symbol not found: _TIFFClose
  Referenced from: /Volumes/Tiger/Builds/Rdev-web/QA/Simon/packages/leopard-universal/results/2.12/biOps.Rcheck/biOps/libs/i386/biOps.so
  Expected in: dynamic lookup

ERROR: loading failed

While the configuration fails to detect TIFF (because it's using the wrong flags) and yet it still does reference it in the code (but not at link time):

checking whether gcc -arch i386 -std=gnu99 accepts -g... yes
checking for gcc -arch i386 -std=gnu99 option to accept ISO C89... none needed
checking for TIFFOpen in -ltiff... no
[...]
checking tiff.h usability... yes
checking tiff.h presence... yes
checking for tiff.h... yes
[...]
gcc -arch i386 -std=gnu99 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress -L/usr/local/lib -o biO
ps.so arithmetics.o canny.o convolution.o crop.o edge_detection.o fft_filters.o fft_funcs.o filter.o gaussian.o interpolation.o isodata.o isodata_cluster.o jpegio
.o kdtree.o kmeans.o kmeans_enhanced.o kmeans_kdtree.o logics.o luts.o marr_hildreth.o minification.o mirroring.o morphology.o noise_gen.o rotate.o scale.o shenca
stan.o tiffio.o translation.o utils.o -lm -ljpeg -lfftw3 -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework -Wl,CoreFoundation



There are apparently two bugs in biOps: 
1) the TIFF detection uses wrong flags - it fails to add dependencies:

configure:2624: checking for TIFFOpen in -ltiff
configure:2659: gcc -arch x86_64 -std=gnu99 -o conftest -g -O2   conftest.c -ltiff   >&5
Undefined symbols:
  "_jpeg_read_raw_data", referenced from:
      _jpeg_read_raw_data_encap in libtiff.a(tif_ojpeg.o)
      _TIFFjpeg_read_raw_data in libtiff.a(tif_jpeg.o)
  "_jpeg_write_scanlines", referenced from:
      _TIFFjpeg_write_scanlines in libtiff.a(tif_jpeg.o)
  "_jpeg_write_tables", referenced from:
      _TIFFjpeg_write_tables in libtiff.a(tif_jpeg.o)
  "_inflateSync", referenced from:
      _PixarLogDecode in libtiff.a(tif_pixarlog.o)
      _ZIPDecode in libtiff.a(tif_zip.o)
  [...]

so it's missing -ljpeg -lz
In fact it's checking jpeg and TIFF in the inverse order, so chances are if check for libz was added first, then jpeg and then tiff that it might work properly.

2) it is still referencing libTIFF in the package even though it did not link against libTIFF (I didn't dig deeper to see why - likely issue with setting a conditional or not respecting it).


I would suggest contacting the maintainer for the issues to be addressed (CC'd - please, Matias, consider this as a bug report).

Cheers,
Simon




> Has anyone built biOps under 10.6.x or 10.5.x  ?
> 
> Actually, the only thing I want right now is the imgConvolve function, so if people have other recommendations for a 2-dimensional convolution function in R (other than writing it myself -- I"m lazy today :-) ), I'd be happy to know.
> 
> thanks
> Carl
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From mcarvajal at ifc.unam.mx  Sat Oct 16 02:48:43 2010
From: mcarvajal at ifc.unam.mx (mcarvajal at ifc.unam.mx)
Date: Fri, 15 Oct 2010 19:48:43 -0500
Subject: [R-SIG-Mac] Problems with tcltk-Img
Message-ID: <20101015194843.20107b8icqukjwbv@webmail.ifc.unam.mx>

Hello!
I-m using an app which uses BWidget and Img. First I've installed  
ActiveTclTk8.5.xxx.threaded.dmg, also tcltk-8.5-x11.dmg

When I ran my application appeared:
Warning message:
In tclRequire("BWidget") : Tcl package 'BWidget' not found
In tclRequire("Img") : Tcl package 'Img' not found

Then I read that the problem could be resolved by copying both  
BWidget1.8 and Img1.4 to /usr/local/lib/

After doing that, the message about BWidget not found dissappeard...  
unfortunately the problem with Img continues.

So, when I type in R console "tclvalue("auto_path") brings me back:

> library(tcltk)
Loading Tcl/Tk interface ... done
> tclvalue("auto_path")
[1] "/usr/local/lib/tcl8.5 /usr/local/lib ./lib /usr/local/lib/tk8.5  
/usr/local/lib/tk8.5/ttk  
/Library/Frameworks/R.framework/Resources/library/tcltk/exec"


I just copied all the files to all these directories, but the problem  
persist...

Any suggestions?

Without Img the application cant'n run... help!!

Thanks!!
Miguel


From ripley at stats.ox.ac.uk  Sat Oct 16 08:15:02 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 16 Oct 2010 07:15:02 +0100 (BST)
Subject: [R-SIG-Mac] Problems with tcltk-Img
In-Reply-To: <20101015194843.20107b8icqukjwbv@webmail.ifc.unam.mx>
References: <20101015194843.20107b8icqukjwbv@webmail.ifc.unam.mx>
Message-ID: <alpine.LFD.2.00.1010160704070.24584@gannet.stats.ox.ac.uk>

Please build R from soures against ActiveTcl: this will then work. 
(Img contains compiled code.)  I have such a build, and
> library(tcltk)
Loading Tcl/Tk interface ... done
> tclRequire("BWidget")
<Tcl> 1.9.2
> tclRequire("Img")
<Tcl> 1.4.0.4
Simon has pointed out that it may conflict with R.app, but I use it as 
command-line R.

In any case, the recommended way to add Tcl packages is to add the 
paths via addTclPath.

On Fri, 15 Oct 2010, mcarvajal at ifc.unam.mx wrote:

> Hello!
> I-m using an app which uses BWidget and Img. First I've installed 
> ActiveTclTk8.5.xxx.threaded.dmg, also tcltk-8.5-x11.dmg
>
> When I ran my application appeared:
> Warning message:
> In tclRequire("BWidget") : Tcl package 'BWidget' not found
> In tclRequire("Img") : Tcl package 'Img' not found
>
> Then I read that the problem could be resolved by copying both BWidget1.8 and 
> Img1.4 to /usr/local/lib/
>
> After doing that, the message about BWidget not found dissappeard... 
> unfortunately the problem with Img continues.
>
> So, when I type in R console "tclvalue("auto_path") brings me back:
>
>> library(tcltk)
> Loading Tcl/Tk interface ... done
>> tclvalue("auto_path")
> [1] "/usr/local/lib/tcl8.5 /usr/local/lib ./lib /usr/local/lib/tk8.5 
> /usr/local/lib/tk8.5/ttk 
> /Library/Frameworks/R.framework/Resources/library/tcltk/exec"
>
>
> I just copied all the files to all these directories, but the problem 
> persist...
>
> Any suggestions?
>
> Without Img the application cant'n run... help!!
>
> Thanks!!
> Miguel
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From p.stafford at imperial.ac.uk  Thu Oct 14 15:05:40 2010
From: p.stafford at imperial.ac.uk (Stafford, Peter J)
Date: Thu, 14 Oct 2010 14:05:40 +0100
Subject: [R-SIG-Mac] [StatET-user] Trouble with Eclipse/StatEt plotting
	under OS X
In-Reply-To: <C8CB82F4.3400B%jefferis@gmail.com>
References: <C8CB82F4.3400B%jefferis@gmail.com>
Message-ID: <5BFD164C-4996-46BE-981C-D268C11CEE5B@imperial.ac.uk>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101014/a06c0e30/attachment.pl>

From rjvbertin at gmail.com  Sat Oct 16 11:28:49 2010
From: rjvbertin at gmail.com (=?ISO-8859-1?Q?Ren=E9_J=2EV=2E_Bertin?=)
Date: Sat, 16 Oct 2010 11:28:49 +0200
Subject: [R-SIG-Mac] R 2.11/Mac OSX: "Aqua" tcltk and selected compiler
In-Reply-To: <AANLkTi=XUvFSQMimi+8RjBXeGr8Lg1UuY3jcDLVYZdNB@mail.gmail.com>
References: <AANLkTi=XUvFSQMimi+8RjBXeGr8Lg1UuY3jcDLVYZdNB@mail.gmail.com>
Message-ID: <AANLkTik2RLRh+5tzhdPsqvqwzW1ySymn2Pjh6q2c_Gqj@mail.gmail.com>

Hello,

I've held off very long to replace my Powerbook G4 (until it died
about a month ago, actually, 6 years old), and as such I've gotten
into the habit of building R mysel, tweaking it to use the "optimal"
compiler options and the best compiler available to me.

Two questions inspired by that experience:

1) why build the binary distribution such that the compilers
registered in etc/Makeconf are the "system default compiler" wrappers?
Wouldn't it be better to hardcode gcc-4.2 (presuming that's the one
used), to be more robust against users (or Apple!) who redefine the
default compiler version?

2) In R 2.8 (the last version I built), I'd managed to have the tcltk
package available both for X11 and for Aqua, without particular
problems. A simple recompile of the tcltk package pointing to the Tcl
and Tk frameworks instead of the X11 distributions was enough (plus a
very small patch of the code, IIRC). A bit of extra code in the R
launcher script symlinked tcltk.so to the Aqua version if $DISPLAY was
undefined or empty, and to the X11 version otherwise. Needless to say
that having an Aqua Tk interface when running the R GUI has advantages
if not only
I tried the same thing yesterday, after installing the Cocoa version
of Tk (tk-8.5.9-decarbon), without success. tcltk.so builds and loads,
but the GUI version hangs afterwards, in the CLI version I get

##> library(tcltk)
Loading Tcl/Tk interface ... 2010-10-14 20:19:38.303 R[85712:607]
-[NSApplication _setup:]: unrecognized selector sent to instance
0x100584490
2010-10-14 20:19:38.306 R[85712:607] An uncaught exception was raised
2010-10-14 20:19:38.307 R[85712:607] -[NSApplication _setup:]:
unrecognized selector sent to instance 0x100584490
2010-10-14 20:19:38.307 R[85712:607] *** Terminating app due to
uncaught exception 'NSInvalidArgumentException', reason:
'-[NSApplication _setup:]: unrecognized selector sent to instance
0x100584490'
*** Call stack at first throw:
(
	0   CoreFoundation                      0x00007fff83f47cc4
__exceptionPreprocess + 180
	1   libobjc.A.dylib                     0x00007fff8055a0f3
objc_exception_throw + 45
	2   CoreFoundation                      0x00007fff83fa1140
+[NSObject(NSObject) doesNotRecognizeSelector:] + 0
	3   CoreFoundation                      0x00007fff83f19cdf
___forwarding___ + 751
	4   CoreFoundation                      0x00007fff83f15e28
_CF_forwarding_prep_0 + 232
	5   Tk                                  0x00000001167b5e74 TkpInit + 404
)
terminate called after throwing an instance of 'NSException'
Abort


The hang in the GUI occurs as soon as I type an opening brace ((),
suggesting something equivalent to the libreadline rl_event_hook is
not pointing in the right direction.
Before I start chasing ghosts - is there any reason why it would be
impossible to use the Aqua/Cocoa version of Tcl/Tk?

thanks,
Ren? Bertin


From richard.liu at pueo-owl.ch  Mon Oct 18 12:20:51 2010
From: richard.liu at pueo-owl.ch (Richard R. Liu)
Date: Mon, 18 Oct 2010 12:20:51 +0200 (CEST)
Subject: [R-SIG-Mac] Easiest way to install R 2.12.0 on a Mac
Message-ID: <30689136.1832.1287397251786.JavaMail.open-xchange@oxde01>

Hello, 


Up to now I've reinstalled all packages when upgrading R. ?Is there an easier
way. ?I'm wondering whether just copying the contents of ~/Library/R/2.11 to
~/Library/R/2.12 followed by updating in Packages & Date > Package Installer >
Update All in the R Console (R.app) would do the trick.


Thanks,
Richard



Richard R. Liu
richard.liu at pueo-owl.ch


From ripley at stats.ox.ac.uk  Mon Oct 18 12:49:26 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 18 Oct 2010 11:49:26 +0100 (BST)
Subject: [R-SIG-Mac] Easiest way to install R 2.12.0 on a Mac
In-Reply-To: <30689136.1832.1287397251786.JavaMail.open-xchange@oxde01>
References: <30689136.1832.1287397251786.JavaMail.open-xchange@oxde01>
Message-ID: <alpine.LFD.2.00.1010181141360.31962@gannet.stats.ox.ac.uk>

On Mon, 18 Oct 2010, Richard R. Liu wrote:

> Hello,
>
>
> Up to now I've reinstalled all packages when upgrading R. ?Is there an easier
> way. ?I'm wondering whether just copying the contents of ~/Library/R/2.11 to
> ~/Library/R/2.12 followed by updating in Packages & Date > Package Installer >
> Update All in the R Console (R.app) would do the trick.

I don't believe so.  Running

update.packages(checkBuilt=TRUE, ask=FALSE)

should, though.  (You will find more discussion in the archives or the 
rw-FAQ -- equally relevant for Mac binary packages.)

One thing to watch is that this does not update packages which are no 
longer available or not available in binary form (rather a lot for 
2.12.0 on the Mac), so

summary(packageStatus())

can be useful.

When you have an update from 2.x.y to 2.z.0 with z > x you should 
reinstall all packages -- you don't need to in all cases but only the 
experts know which.  Also, rendering of help improves continuously so 
by updating you get the best available rendering.

> Thanks,
> Richard
>
>
>
> Richard R. Liu
> richard.liu at pueo-owl.ch
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

From simon.urbanek at r-project.org  Mon Oct 18 15:51:01 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 18 Oct 2010 09:51:01 -0400
Subject: [R-SIG-Mac] Easiest way to install R 2.12.0 on a Mac
In-Reply-To: <30689136.1832.1287397251786.JavaMail.open-xchange@oxde01>
References: <30689136.1832.1287397251786.JavaMail.open-xchange@oxde01>
Message-ID: <DF8AB449-1F49-4700-A54A-5F899DA1D64A@r-project.org>


On Oct 18, 2010, at 6:20 AM, Richard R. Liu wrote:

> Hello, 
> 
> 
> Up to now I've reinstalled all packages when upgrading R.  Is there an easier
> way.  I'm wondering whether just copying the contents of ~/Library/R/2.11 to
> ~/Library/R/2.12 followed by updating in Packages & Date > Package Installer >
> Update All in the R Console (R.app) would do the trick.
> 

The whole point of using a version-dependent directories is exactly to prevent the chaos resulting from what you suggest. If you installed package at the system level then you can upgrade using the GUI:
Package Installer -> Get List -> Select Packages from R 2.11 (in the search menu) -> Install Selected

If you use user-local path like you mentioned above, you can always simply use
install.packages(.packages(TRUE,"~/Library/R/2.11/library"))

Cheers,
Simon


From minhuangr at gmail.com  Mon Oct 18 15:56:20 2010
From: minhuangr at gmail.com (huang min)
Date: Mon, 18 Oct 2010 21:56:20 +0800
Subject: [R-SIG-Mac] Easiest way to install R 2.12.0 on a Mac
In-Reply-To: <DF8AB449-1F49-4700-A54A-5F899DA1D64A@r-project.org>
References: <30689136.1832.1287397251786.JavaMail.open-xchange@oxde01>
	<DF8AB449-1F49-4700-A54A-5F899DA1D64A@r-project.org>
Message-ID: <AANLkTinanY7eYNTEyMhf=XACdtJygm+9yb8QXk_uNzrB@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101018/9e383ae1/attachment.pl>

From simon.urbanek at r-project.org  Mon Oct 18 16:07:47 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 18 Oct 2010 10:07:47 -0400
Subject: [R-SIG-Mac] Easiest way to install R 2.12.0 on a Mac
In-Reply-To: <AANLkTinanY7eYNTEyMhf=XACdtJygm+9yb8QXk_uNzrB@mail.gmail.com>
References: <30689136.1832.1287397251786.JavaMail.open-xchange@oxde01>
	<DF8AB449-1F49-4700-A54A-5F899DA1D64A@r-project.org>
	<AANLkTinanY7eYNTEyMhf=XACdtJygm+9yb8QXk_uNzrB@mail.gmail.com>
Message-ID: <2454891B-9C75-42ED-A25A-54BB905D4F0C@r-project.org>


On Oct 18, 2010, at 9:56 AM, huang min wrote:

> Hi, Simon,
> 
> When can the binary version of R2.12.0 for MAC be available? The windows version are already out.
> 

You can always get the latest R version from http://r.research.att.com

Also if you are impatient you can grab
http://r.research.att.com/bin/macosx/R-2.12.0.pkg 
which is the nightly build of the release. In most cases that becomes the release unless there is a last-minute issue.

The CRAN will likely have the official release within a day or so.

Cheers,
Simon



> Huang
> 
> On Mon, Oct 18, 2010 at 9:51 PM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> 
> On Oct 18, 2010, at 6:20 AM, Richard R. Liu wrote:
> 
> > Hello,
> >
> >
> > Up to now I've reinstalled all packages when upgrading R.  Is there an easier
> > way.  I'm wondering whether just copying the contents of ~/Library/R/2.11 to
> > ~/Library/R/2.12 followed by updating in Packages & Date > Package Installer >
> > Update All in the R Console (R.app) would do the trick.
> >
> 
> The whole point of using a version-dependent directories is exactly to prevent the chaos resulting from what you suggest. If you installed package at the system level then you can upgrade using the GUI:
> Package Installer -> Get List -> Select Packages from R 2.11 (in the search menu) -> Install Selected
> 
> If you use user-local path like you mentioned above, you can always simply use
> install.packages(.packages(TRUE,"~/Library/R/2.11/library"))
> 
> Cheers,
> Simon
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From lewinger at usc.edu  Tue Oct 19 21:12:24 2010
From: lewinger at usc.edu (Juan Pablo Lewinger)
Date: Tue, 19 Oct 2010 12:12:24 -0700
Subject: [R-SIG-Mac] Change font size of Console Output
Message-ID: <9CD61B9D-5E07-4643-BEA0-87157DABBABA@usc.edu>

This is has been asked before, yet I can't figure out how to:

1) Change (for the current session and/or permanently) the font size of the console output. 

2) Permanently change the font size of the console input.  I can change the font size of the console input from the format menu but only for the current session.

Thanks for any help!

R 2.11.1, GUI 1.34 Leopard build 64-bit, Mac OS X 10.6.4 ) 
> sessionInfo()

R version 2.11.1 (2010-05-31) 
x86_64-apple-darwin9.8.0 

locale:
[1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8




Juan Pablo Lewinger, Ph.D.
Assistant Professor
Division of Biostatistics
Department of Preventive Medicine
University of Southern California
1450 Biggy Street, NRT 1509G 
Los Angeles CA 90033
USA


From simon.urbanek at r-project.org  Tue Oct 19 21:26:05 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 19 Oct 2010 15:26:05 -0400
Subject: [R-SIG-Mac] Change font size of Console Output
In-Reply-To: <9CD61B9D-5E07-4643-BEA0-87157DABBABA@usc.edu>
References: <9CD61B9D-5E07-4643-BEA0-87157DABBABA@usc.edu>
Message-ID: <A4761A94-C6A4-4A05-B2F0-5EE5014ACCB2@r-project.org>

On Oct 19, 2010, at 3:12 PM, Juan Pablo Lewinger wrote:

> This is has been asked before, yet I can't figure out how to:
> 
> 1) Change (for the current session and/or permanently) the font size of the console output. 
> 

Format -> Font -> Bigger / Smaller
key equivalents: <Cmd><+> and <Cmd><->
The setting is persistent.


> 2) Permanently change the font size of the console input.  I can change the font size of the console input from the format menu but only for the current session.
> 

Same as above - input and output are in the same text view and use the same font type and size by default - controlled by the keys above.

Cheers,
Simon



> Thanks for any help!
> 
> R 2.11.1, GUI 1.34 Leopard build 64-bit, Mac OS X 10.6.4 ) 
>> sessionInfo()
> 
> R version 2.11.1 (2010-05-31) 
> x86_64-apple-darwin9.8.0 
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
> 
> 
> 
> 
> Juan Pablo Lewinger, Ph.D.
> Assistant Professor
> Division of Biostatistics
> Department of Preventive Medicine
> University of Southern California
> 1450 Biggy Street, NRT 1509G 
> Los Angeles CA 90033
> USA
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From chabotd at globetrotter.net  Wed Oct 20 15:48:29 2010
From: chabotd at globetrotter.net (Denis Chabot)
Date: Wed, 20 Oct 2010 09:48:29 -0400
Subject: [R-SIG-Mac] R 2.12 & install all dependencies
In-Reply-To: <mailman.19.1287568806.21927.r-sig-mac@stat.math.ethz.ch>
References: <mailman.19.1287568806.21927.r-sig-mac@stat.math.ethz.ch>
Message-ID: <B53A7EEF-FB77-4AE3-B7DF-BFF046D0FC8B@globetrotter.net>

Hi,

I just installed R 2.12 and it seems to me the way progress is reported when installing packages is different. 

I picked a few packages to install and I selected "install dependencies". R's spinning wheel spinned endlessly, with no text appearing in the console to indicate progress. I was used to see progress as each package got loaded on disk and then installed, but nothing. After a minute, I force-quit R and relaunched it. Selecting a single package without the option "install dependencies" worked as usual. In this case, it was doBy, and within seconds the process was complete.

I then selected doBy again in the package installer, but this time I selected "install dependencies". Spinning wheel, no progress in the console. I must have waited 2-3 minutes and suddenly the console quickly listed all the work that had been accomplished (it seems many packages needed to be installed, as this was a brand new R 2.12 install). It seems to me that in the past (including R 2.11), the console kept us up to date with what was happening. If this is not just my imagination, the old behavior was preferable.

Denis

From f.calboli at imperial.ac.uk  Wed Oct 20 15:56:21 2010
From: f.calboli at imperial.ac.uk (Federico Calboli)
Date: Wed, 20 Oct 2010 14:56:21 +0100
Subject: [R-SIG-Mac] R 2.12 & install all dependencies
In-Reply-To: <B53A7EEF-FB77-4AE3-B7DF-BFF046D0FC8B@globetrotter.net>
References: <mailman.19.1287568806.21927.r-sig-mac@stat.math.ethz.ch>
	<B53A7EEF-FB77-4AE3-B7DF-BFF046D0FC8B@globetrotter.net>
Message-ID: <85977660-5C00-48CC-95F7-47E0EF76F9A9@imperial.ac.uk>

On 20 Oct 2010, at 14:48, Denis Chabot wrote:
> 
> I just installed R 2.12 and it seems to me the way progress is reported when installing packages is different. 
> 
> I picked a few packages to install and I selected "install dependencies". R's spinning wheel spinned endlessly, with no text appearing in the console to indicate progress. I was used to see progress as each package got loaded on disk and then installed, but nothing. After a minute, I force-quit R and relaunched it. Selecting a single package without the option "install dependencies" worked as usual. In this case, it was doBy, and within seconds the process was complete.
> 
> I then selected doBy again in the package installer, but this time I selected "install dependencies". Spinning wheel, no progress in the console. I must have waited 2-3 minutes and suddenly the console quickly listed all the work that had been accomplished (it seems many packages needed to be installed, as this was a brand new R 2.12 install). It seems to me that in the past (including R 2.11), the console kept us up to date with what was happening. If this is not just my imagination, the old behavior was preferable.


had the same problem, and I think it is a mirror problem, not an R problem, because after changing the mirror a few times everything started working as expected.

F


--
Federico C. F. Calboli
Department of Epidemiology and Biostatistics
Imperial College, St. Mary's Campus
Norfolk Place, London W2 1PG

Tel +44 (0)20 75941602   Fax +44 (0)20 75943193

f.calboli [.a.t] imperial.ac.uk
f.calboli [.a.t] gmail.com


From chabotd at globetrotter.net  Wed Oct 20 15:58:47 2010
From: chabotd at globetrotter.net (Denis Chabot)
Date: Wed, 20 Oct 2010 09:58:47 -0400
Subject: [R-SIG-Mac] R 2.12 & install all dependencies
In-Reply-To: <85977660-5C00-48CC-95F7-47E0EF76F9A9@imperial.ac.uk>
References: <mailman.19.1287568806.21927.r-sig-mac@stat.math.ethz.ch>
	<B53A7EEF-FB77-4AE3-B7DF-BFF046D0FC8B@globetrotter.net>
	<85977660-5C00-48CC-95F7-47E0EF76F9A9@imperial.ac.uk>
Message-ID: <9BEB7439-8FA1-4427-999C-5F7AA36BC951@globetrotter.net>

Thanks, I'll try this.

Denis
Le 2010-10-20 ? 09:56, Federico Calboli a ?crit :

> On 20 Oct 2010, at 14:48, Denis Chabot wrote:
>> 
>> I just installed R 2.12 and it seems to me the way progress is reported when installing packages is different. 
>> 
>> I picked a few packages to install and I selected "install dependencies". R's spinning wheel spinned endlessly, with no text appearing in the console to indicate progress. I was used to see progress as each package got loaded on disk and then installed, but nothing. After a minute, I force-quit R and relaunched it. Selecting a single package without the option "install dependencies" worked as usual. In this case, it was doBy, and within seconds the process was complete.
>> 
>> I then selected doBy again in the package installer, but this time I selected "install dependencies". Spinning wheel, no progress in the console. I must have waited 2-3 minutes and suddenly the console quickly listed all the work that had been accomplished (it seems many packages needed to be installed, as this was a brand new R 2.12 install). It seems to me that in the past (including R 2.11), the console kept us up to date with what was happening. If this is not just my imagination, the old behavior was preferable.
> 
> 
> had the same problem, and I think it is a mirror problem, not an R problem, because after changing the mirror a few times everything started working as expected.
> 
> F
> 
> 
> --
> Federico C. F. Calboli
> Department of Epidemiology and Biostatistics
> Imperial College, St. Mary's Campus
> Norfolk Place, London W2 1PG
> 
> Tel +44 (0)20 75941602   Fax +44 (0)20 75943193
> 
> f.calboli [.a.t] imperial.ac.uk
> f.calboli [.a.t] gmail.com
> 
> 
> 
> 
> 
> 


From mbordese at gmail.com  Wed Oct 20 02:25:48 2010
From: mbordese at gmail.com (Matias Bordese)
Date: Tue, 19 Oct 2010 21:25:48 -0300
Subject: [R-SIG-Mac] does biOps compile on OSX?
In-Reply-To: <C9FE9D98-F9EB-41A2-BB7B-04BFF4900633@r-project.org>
References: <4CB771A0.7030206@witthoft.com>
	<C9FE9D98-F9EB-41A2-BB7B-04BFF4900633@r-project.org>
Message-ID: <AANLkTi=gSStBVdzVt2Gxg+Y=j=8v2S+Y3m9-mFa3T1oO@mail.gmail.com>

> I would suggest contacting the maintainer for the issues to be addressed (CC'd - please, Matias, consider this as a bug report).

Thanks Simon for the report. I have been kind of away of R developing
lately, and it is probably I could not update/maintain the biOps
package in the near future. However, I have several fixes to address
to which I'm adding your comments. If I get the time, I'll be
deploying a release with the required changes.

Regards,
Mat?as.


From michael.m.spiegel at gmail.com  Wed Oct 20 20:18:58 2010
From: michael.m.spiegel at gmail.com (Michael Spiegel)
Date: Wed, 20 Oct 2010 14:18:58 -0400
Subject: [R-SIG-Mac] daxpy performance with veclib
Message-ID: <AANLkTikKU-HAuCLatVbVAayhPDNhGTrvEbhbdOzuO5dy@mail.gmail.com>

Hi Mac Special Interest Group folks,

We've noticed some curious behavior of the veclib BLAS implementation
in the development of the OpenMx library.  The daxpy implementation
appears to be twice as slow in the veclib implementation as compared
to the reference implementation.  Attached is a test kernel that has
been run under both implementations.  The kernel consists of repeated
calls to daxpy with vectors of varying size.  In the output files, the
first column is the dimension of the vector.  The 2nd-4th column
report the runtime in seconds of the kernel; three identical trials
per vector size.

It may be more appropriate to send this information upstream to the
veclib persons.  However, I thought it would be of interest to Mac R
folks, too.  For our own project, our workaround will be to create our
own basic implementation of daxpy, and continue to link against the
veclib BLAS library so we can get a speedup on dgemm and the other
functions.

The benchmarks were executed on a Mac Pro with 2 Quad-Core Xeons @ 3
GHz (MacPro2,1) running OS X 10.5.8.  It was tested with R 2.12.0 and
the same behavior has been observed with R 2.10.1.

Thanks,
--Michael
-------------- next part --------------
A non-text attachment was scrubbed...
Name: omxTest.c
Type: text/x-csrc
Size: 1022 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101020/fdde1502/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: daxpy.veclib.results
Type: application/octet-stream
Size: 677 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101020/fdde1502/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: daxpy.refblas.results
Type: application/octet-stream
Size: 659 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101020/fdde1502/attachment-0001.obj>

From simon.urbanek at r-project.org  Wed Oct 20 22:29:20 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 20 Oct 2010 16:29:20 -0400
Subject: [R-SIG-Mac] daxpy performance with veclib
In-Reply-To: <AANLkTikKU-HAuCLatVbVAayhPDNhGTrvEbhbdOzuO5dy@mail.gmail.com>
References: <AANLkTikKU-HAuCLatVbVAayhPDNhGTrvEbhbdOzuO5dy@mail.gmail.com>
Message-ID: <13D4AF42-51E9-4C1C-9559-0937704A00BB@r-project.org>


On Oct 20, 2010, at 2:18 PM, Michael Spiegel wrote:

> Hi Mac Special Interest Group folks,
> 
> We've noticed some curious behavior of the veclib BLAS implementation
> in the development of the OpenMx library.  The daxpy implementation
> appears to be twice as slow in the veclib implementation as compared
> to the reference implementation.  


Yes, that is a known problem (see R-SIG-Mac archives). vecLib fails to use multiple cores on Nehalem-based Mac Pros. If you use ATLAS directly it will work just fine - that's what we recommend on Mac Pros.

Cheers,
Simon




> Attached is a test kernel that has
> been run under both implementations.  The kernel consists of repeated
> calls to daxpy with vectors of varying size.  In the output files, the
> first column is the dimension of the vector.  The 2nd-4th column
> report the runtime in seconds of the kernel; three identical trials
> per vector size.
> 
> It may be more appropriate to send this information upstream to the
> veclib persons.  However, I thought it would be of interest to Mac R
> folks, too.  For our own project, our workaround will be to create our
> own basic implementation of daxpy, and continue to link against the
> veclib BLAS library so we can get a speedup on dgemm and the other
> functions.
> 
> The benchmarks were executed on a Mac Pro with 2 Quad-Core Xeons @ 3
> GHz (MacPro2,1) running OS X 10.5.8.  It was tested with R 2.12.0 and
> the same behavior has been observed with R 2.10.1.
> 
> Thanks,
> --Michael
> <omxTest.c><daxpy.veclib.results><daxpy.refblas.results>_______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From smckinney at bccrc.ca  Wed Oct 20 23:55:55 2010
From: smckinney at bccrc.ca (Steven McKinney)
Date: Wed, 20 Oct 2010 14:55:55 -0700
Subject: [R-SIG-Mac] How to determine if a Mac is Nehalem-based
Message-ID: <DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>

Hi Mac Gurus,

I have been searching the web trying to find out how to determine
if my Mac is "Nehalem-based".  I have not been able to find any discussion
about how to determine this, beyond something such as "Macs built in early 2009"
or similarly vague statements.  

Does anyone know where I can find a description of which Intel chips in a Mac
constitute "Nehalem-based" and what R or Mac-OS scripts, commands etc
will yield information on the CPU chip in my Mac so I can make this determination?

>From "About this Mac" I get the following information, but I'm unclear on
what if anything in such output will reliably show whether my Mac is
Nehalem-based.

Hardware Overview:

  Model Name:	Mac Pro
  Model Identifier:	MacPro4,1
  Processor Name:	Quad-Core Intel Xeon
  Processor Speed:	2.66 GHz
  Number Of Processors:	2
  Total Number Of Cores:	8
  L2 Cache (per core):	256 KB
  L3 Cache (per processor):	8 MB
  Memory:	32 GB
  Processor Interconnect Speed:	6.4 GT/s
  Boot ROM Version:	MP41.0081.B08
  SMC Version (system):	1.39f5
  SMC Version (processor tray):	1.39f5
  Serial Number (system):	H00230C320H
  Serial Number (processor tray):	C070183004XDCVHAX 
  Hardware UUID:	482F1E2A-2588-5FA3-80AE-11BE11615B02

Any information appreciated

Steven McKinney

Statistician
Molecular Oncology and Breast Cancer Program
British Columbia Cancer Research Centre


From smckinney at bccrc.ca  Thu Oct 21 00:50:15 2010
From: smckinney at bccrc.ca (Steven McKinney)
Date: Wed, 20 Oct 2010 15:50:15 -0700
Subject: [R-SIG-Mac] How to determine if a Mac is Nehalem-based
In-Reply-To: <19162_1287611907_1287611907_DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>
References: <19162_1287611907_1287611907_DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>
Message-ID: <DCE81E14EB74504B971DAD4D2DB0356B08645684D5@crcmail4.BCCRC.CA>


I may have answered the question.

>From the log entry for

   /usr/sbin/ioreg 

I see entries including the following, which have
Nehalem and "Gainstown" variant listed, so this Mac does appear to have
Nehalem-based CPUs.  If any Mac Guru thinks otherwise, I'd appreciate
being set straight.

    | +-o CPU3 at 12  <class IOACPIPlatformDevice, id 0x10000011a, registered, matched, active, busy 0 (12682 ms), retain 8>
    | | | {
    | | |   "processor-lapic" = 0x12
    | | |   "clock-frequency" = <c01e7d9e>
    | | |   "processor-number" = 0xa
    | | |   "timebase-frequency" = <00ca9a3b>
    | | |   "processor-id" = 0x3
    | | |   "bus-frequency" = <ffffffff>
    | | |   "cpu-type" = <0105>
    | | |   "device_type" = <70726f636573736f7200>
    | | |   "processor-index" = 0x3
    | | |   "name" = <4350553300>
    | | | }
    | | | 
    | | +-o AppleACPICPU  <class AppleACPICPU, id 0x10000012d, registered, matched, active, busy 0 (12640 ms), retain 7>
    | |   | {
    | |   |   "IOClass" = "AppleACPICPU"
    | |   |   "CFBundleIdentifier" = "com.apple.driver.AppleACPIPlatform"
    | |   |   "IOProviderClass" = "IOACPIPlatformDevice"
    | |   |   "IOProbeScore" = 0x3e8
    | |   |   "IONameMatch" = "processor"
    | |   |   "IOInterruptSpecifiers" = (<000a0000>,<010a0000>)
    | |   |   "IOMatchCategory" = "IODefaultMatchCategory"
    | |   |   "IOCPUID" = 0x28a18b00
    | |   |   "IOInterruptControllers" = ("IOPlatformInterruptController","IOPlatformInterruptController")
    | |   |   "IONameMatched" = "processor"
    | |   |   "IOCPUState" = "Running"
    | |   |   "IOCPUNumber" = 0x3
    | |   | }
    | |   | 
    | |   +-o AppleIntelNehalemPerformanceMonitor  <class AppleIntelNehalemPerformanceMonitor, id 0x1000003b0, !registered, !matched, active, busy 0 (148 ms), retain 11>
    | |   | | {
    | |   | |   "IOClass" = "AppleIntelNehalemPerformanceMonitor"
    | |   | |   "IOProviderClass" = "AppleACPICPU"
    | |   | |   "IOMatchCategory" = "ApplePerformanceMonitor"
    | |   | |   "IOProbeScore" = 0x0
    | |   | |   "CFBundleIdentifier" = "com.apple.driver.AppleIntelNehalemProfile"
    | |   | | }
    | |   | | 
    | |   | +-o AppleIntelNehalemGeneralPurposeCounter  <class AppleIntelNehalemGeneralPurposeCounter, id 0x1000003f2, registered, matched, active, busy 0 (29 ms), retain 7>
    | |   | | | {
    | |   | | |   "stepping" = 0x5
    | |   | | |   "ApplePerformanceCounterHardwareInstance" = 0x0
    | |   | | |   "IOClass" = "AppleIntelNehalemGeneralPurposeCounter"
    | |   | | |   "ApplePerformanceCounterRegisteredName" = "ia32gp12"
    | |   | | |   "logical-core" = 0xa
    | |   | | |   "ApplePerformanceCounterUnit" = 0xc
    | |   | | |   "ApplePerformanceCounterState" = 0x1
    | |   | | |   "variant" = "Gainstown"
    | |   | | | }
   ...



Steven McKinney

________________________________________
From: r-sig-mac-bounces at stat.math.ethz.ch [r-sig-mac-bounces at stat.math.ethz.ch] On Behalf Of Steven McKinney [smckinney at bccrc.ca]
Sent: October 20, 2010 2:55 PM
To: R-SIG-Mac at stat.math.ethz.ch
Subject: [R-SIG-Mac] How to determine if a Mac is Nehalem-based

Hi Mac Gurus,

I have been searching the web trying to find out how to determine
if my Mac is "Nehalem-based".  I have not been able to find any discussion
about how to determine this, beyond something such as "Macs built in early 2009"
or similarly vague statements.

Does anyone know where I can find a description of which Intel chips in a Mac
constitute "Nehalem-based" and what R or Mac-OS scripts, commands etc
will yield information on the CPU chip in my Mac so I can make this determination?

>From "About this Mac" I get the following information, but I'm unclear on
what if anything in such output will reliably show whether my Mac is
Nehalem-based.

Hardware Overview:

  Model Name:   Mac Pro
  Model Identifier:     MacPro4,1
  Processor Name:       Quad-Core Intel Xeon
  Processor Speed:      2.66 GHz
  Number Of Processors: 2
  Total Number Of Cores:        8
  L2 Cache (per core):  256 KB
  L3 Cache (per processor):     8 MB
  Memory:       32 GB
  Processor Interconnect Speed: 6.4 GT/s
  Boot ROM Version:     MP41.0081.B08
  SMC Version (system): 1.39f5
  SMC Version (processor tray): 1.39f5
  Serial Number (system):       H00230C320H
  Serial Number (processor tray):       C070183004XDCVHAX
  Hardware UUID:        482F1E2A-2588-5FA3-80AE-11BE11615B02

Any information appreciated

Steven McKinney

Statistician
Molecular Oncology and Breast Cancer Program
British Columbia Cancer Research Centre

_______________________________________________
R-SIG-Mac mailing list
R-SIG-Mac at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From smckinney at bccrc.ca  Thu Oct 21 01:35:05 2010
From: smckinney at bccrc.ca (Steven McKinney)
Date: Wed, 20 Oct 2010 16:35:05 -0700
Subject: [R-SIG-Mac] ATLAS BLAS
Message-ID: <DCE81E14EB74504B971DAD4D2DB0356B08645684D6@crcmail4.BCCRC.CA>

I have R 2.11.1 installed (soon will update to R 2.12)
and I appear to have a Nehalem-based Mac Pro.

I'm trying to find documentation about how to set up R on
my Mac so I'm using the ATLAS BLAS.

I installed this version of R using the Mac installer R-2.11.1.pkg.
Does this installer set up R that uses the ATLAS BLAS, or are there
additional steps I need to take to have R use the ATLAS BLAS?

Once R is up and running, can anyone tell me how I can determine
which BLAS R is using?

Any info appreciated. 



> sessionInfo()
R version 2.11.1 (2010-05-31) 
x86_64-apple-darwin9.8.0 

locale:
[1] en_CA.UTF-8/en_CA.UTF-8/C/C/en_CA.UTF-8/en_CA.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] tools_2.11.1




Steven McKinney


From simon.urbanek at r-project.org  Thu Oct 21 03:28:31 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 20 Oct 2010 21:28:31 -0400
Subject: [R-SIG-Mac] How to determine if a Mac is Nehalem-based
In-Reply-To: <DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>
Message-ID: <6EE71DA9-2D16-4B28-A071-FA1849D48C12@r-project.org>


On Oct 20, 2010, at 5:55 PM, Steven McKinney wrote:

> Hi Mac Gurus,
> 
> I have been searching the web trying to find out how to determine if my Mac is "Nehalem-based".  I have not been able to find any discussion about how to determine this, beyond something such as "Macs built in early 2009" or similarly vague statements.  
> 

It's not vague at all, it's MacPro4,1 and MacPro5,1 models (you can use use "sysctl hw.model" to find out what you have). If in doubt, check on Wikipedia ;)

The latter uses the Nehalem architecture but I don't have a specimen of those so I can't confirm that the bug still holds true for those.

Cheers,
Simon




> Does anyone know where I can find a description of which Intel chips in a Mac
> constitute "Nehalem-based" and what R or Mac-OS scripts, commands etc
> will yield information on the CPU chip in my Mac so I can make this determination?
> 
>> From "About this Mac" I get the following information, but I'm unclear on
> what if anything in such output will reliably show whether my Mac is
> Nehalem-based.
> 
> Hardware Overview:
> 
>  Model Name:	Mac Pro
>  Model Identifier:	MacPro4,1
>  Processor Name:	Quad-Core Intel Xeon
>  Processor Speed:	2.66 GHz
>  Number Of Processors:	2
>  Total Number Of Cores:	8
>  L2 Cache (per core):	256 KB
>  L3 Cache (per processor):	8 MB
>  Memory:	32 GB
>  Processor Interconnect Speed:	6.4 GT/s
>  Boot ROM Version:	MP41.0081.B08
>  SMC Version (system):	1.39f5
>  SMC Version (processor tray):	1.39f5
>  Serial Number (system):	H00230C320H
>  Serial Number (processor tray):	C070183004XDCVHAX 
>  Hardware UUID:	482F1E2A-2588-5FA3-80AE-11BE11615B02
> 
> Any information appreciated
> 
> Steven McKinney
> 
> Statistician
> Molecular Oncology and Breast Cancer Program
> British Columbia Cancer Research Centre
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From simon.urbanek at r-project.org  Thu Oct 21 03:39:20 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 20 Oct 2010 21:39:20 -0400
Subject: [R-SIG-Mac] ATLAS BLAS
In-Reply-To: <DCE81E14EB74504B971DAD4D2DB0356B08645684D6@crcmail4.BCCRC.CA>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D6@crcmail4.BCCRC.CA>
Message-ID: <42A869F0-C104-454F-B23B-069BA5E487CE@r-project.org>

On Oct 20, 2010, at 7:35 PM, Steven McKinney wrote:

> I have R 2.11.1 installed (soon will update to R 2.12) and I appear to have a Nehalem-based Mac Pro.
> 
> I'm trying to find documentation about how to set up R on my Mac so I'm using the ATLAS BLAS.
> 

Well, you have to get it [=ATLAS] first. Then it's as easy as pointing the libRblas.dylib symlink to it.


I have a binary of ATLAS that you can use if you have Mac OS X 10.6 (Snow Leopard) it's at
http://r.research.att.com/libatlas-MacPro.dylib

So the copy/paste steps (you have to be admin) are:

cd /Library/Frameworks/R.framework/Resources/lib
curl -O http://r.research.att.com/libatlas-MacPro.dylib
chmod a+x libatlas-MacPro.dylib
ln -sfn libatlas-MacPro.dylib libRblas.dylib


## if you want to go back to vecLib
cd /Library/Frameworks/R.framework/Resources/lib
ln -sfn libRblas.vecLib.dylib libRblas.dylib

## if you want to use R's BLAS (not as fast but more reliable)
cd /Library/Frameworks/R.framework/Resources/lib
ln -sfn libRblas.0.dylib libRblas.dylib


> I installed this version of R using the Mac installer R-2.11.1.pkg.
> Does this installer set up R that uses the ATLAS BLAS, or are there
> additional steps I need to take to have R use the ATLAS BLAS?
> 
> Once R is up and running, can anyone tell me how I can determine
> which BLAS R is using?
> 

Indirectly, just look at the output of
ls -l /Library/Frameworks/R.framework/Resources/lib/libRblas.dylib

Cheers,
Simon



> Any info appreciated. 
> 
> 
> 
>> sessionInfo()
> R version 2.11.1 (2010-05-31) 
> x86_64-apple-darwin9.8.0 
> 
> locale:
> [1] en_CA.UTF-8/en_CA.UTF-8/C/C/en_CA.UTF-8/en_CA.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base     
> 
> loaded via a namespace (and not attached):
> [1] tools_2.11.1
> 
> 
> 
> 
> Steven McKinney
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From smckinney at bccrc.ca  Thu Oct 21 04:11:16 2010
From: smckinney at bccrc.ca (Steven McKinney)
Date: Wed, 20 Oct 2010 19:11:16 -0700
Subject: [R-SIG-Mac] ATLAS BLAS
In-Reply-To: <42A869F0-C104-454F-B23B-069BA5E487CE@r-project.org>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D6@crcmail4.BCCRC.CA>,
	<42A869F0-C104-454F-B23B-069BA5E487CE@r-project.org>
Message-ID: <DCE81E14EB74504B971DAD4D2DB0356B08645684D7@crcmail4.BCCRC.CA>

Dear Simon,

None of it is vague anymore.
Thank you very much!

Steven McKinney

________________________________________
From: Simon Urbanek [simon.urbanek at r-project.org]
Sent: October 20, 2010 6:39 PM
To: Steven McKinney
Cc: R-SIG-Mac at stat.math.ethz.ch
Subject: Re: [R-SIG-Mac] ATLAS BLAS

On Oct 20, 2010, at 7:35 PM, Steven McKinney wrote:

> I have R 2.11.1 installed (soon will update to R 2.12) and I appear to have a Nehalem-based Mac Pro.
>
> I'm trying to find documentation about how to set up R on my Mac so I'm using the ATLAS BLAS.
>

Well, you have to get it [=ATLAS] first. Then it's as easy as pointing the libRblas.dylib symlink to it.


I have a binary of ATLAS that you can use if you have Mac OS X 10.6 (Snow Leopard) it's at
http://r.research.att.com/libatlas-MacPro.dylib

So the copy/paste steps (you have to be admin) are:

cd /Library/Frameworks/R.framework/Resources/lib
curl -O http://r.research.att.com/libatlas-MacPro.dylib
chmod a+x libatlas-MacPro.dylib
ln -sfn libatlas-MacPro.dylib libRblas.dylib


## if you want to go back to vecLib
cd /Library/Frameworks/R.framework/Resources/lib
ln -sfn libRblas.vecLib.dylib libRblas.dylib

## if you want to use R's BLAS (not as fast but more reliable)
cd /Library/Frameworks/R.framework/Resources/lib
ln -sfn libRblas.0.dylib libRblas.dylib


> I installed this version of R using the Mac installer R-2.11.1.pkg.
> Does this installer set up R that uses the ATLAS BLAS, or are there
> additional steps I need to take to have R use the ATLAS BLAS?
>
> Once R is up and running, can anyone tell me how I can determine
> which BLAS R is using?
>

Indirectly, just look at the output of
ls -l /Library/Frameworks/R.framework/Resources/lib/libRblas.dylib

Cheers,
Simon



> Any info appreciated.
>
>
>
>> sessionInfo()
> R version 2.11.1 (2010-05-31)
> x86_64-apple-darwin9.8.0
>
> locale:
> [1] en_CA.UTF-8/en_CA.UTF-8/C/C/en_CA.UTF-8/en_CA.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] tools_2.11.1
>
>
>
>
> Steven McKinney
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>


From minhuangr at gmail.com  Thu Oct 21 04:53:56 2010
From: minhuangr at gmail.com (huang min)
Date: Thu, 21 Oct 2010 10:53:56 +0800
Subject: [R-SIG-Mac] ATLAS BLAS
In-Reply-To: <42A869F0-C104-454F-B23B-069BA5E487CE@r-project.org>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D6@crcmail4.BCCRC.CA>
	<42A869F0-C104-454F-B23B-069BA5E487CE@r-project.org>
Message-ID: <AANLkTi=xKRjbW7gZnwEomTbtKwgBXv6Dnbm41Ogh-DD2@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101021/65efb27a/attachment.pl>

From smckinney at bccrc.ca  Thu Oct 21 04:59:38 2010
From: smckinney at bccrc.ca (Steven McKinney)
Date: Wed, 20 Oct 2010 19:59:38 -0700
Subject: [R-SIG-Mac] How to determine if a Mac is Nehalem-based
In-Reply-To: <6EE71DA9-2D16-4B28-A071-FA1849D48C12@r-project.org>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>,
	<6EE71DA9-2D16-4B28-A071-FA1849D48C12@r-project.org>
Message-ID: <DCE81E14EB74504B971DAD4D2DB0356B08645684D8@crcmail4.BCCRC.CA>

Wikipedia didn't tell me about "sysctl hw.model", and I had to 
correct their misspelled "Gainestown" (Gainstown on Intel sites,
and in log reports on my Mac).

I prefer to check on Simon :)  

Thank you very much for your clear explanations.

Steven McKinney

________________________________________
From: Simon Urbanek [simon.urbanek at r-project.org]
Sent: October 20, 2010 6:28 PM
To: Steven McKinney
Cc: R-SIG-Mac at stat.math.ethz.ch
Subject: Re: [R-SIG-Mac] How to determine if a Mac is Nehalem-based

On Oct 20, 2010, at 5:55 PM, Steven McKinney wrote:

> Hi Mac Gurus,
>
> I have been searching the web trying to find out how to determine if my Mac is "Nehalem-based".  I have not been able to find any discussion about how to determine this, beyond something such as "Macs built in early 2009" or similarly vague statements.
>

It's not vague at all, it's MacPro4,1 and MacPro5,1 models (you can use use "sysctl hw.model" to find out what you have). If in doubt, check on Wikipedia ;)

The latter uses the Nehalem architecture but I don't have a specimen of those so I can't confirm that the bug still holds true for those.

Cheers,
Simon




> Does anyone know where I can find a description of which Intel chips in a Mac
> constitute "Nehalem-based" and what R or Mac-OS scripts, commands etc
> will yield information on the CPU chip in my Mac so I can make this determination?
>
>> From "About this Mac" I get the following information, but I'm unclear on
> what if anything in such output will reliably show whether my Mac is
> Nehalem-based.
>
> Hardware Overview:
>
>  Model Name:  Mac Pro
>  Model Identifier:    MacPro4,1
>  Processor Name:      Quad-Core Intel Xeon
>  Processor Speed:     2.66 GHz
>  Number Of Processors:        2
>  Total Number Of Cores:       8
>  L2 Cache (per core): 256 KB
>  L3 Cache (per processor):    8 MB
>  Memory:      32 GB
>  Processor Interconnect Speed:        6.4 GT/s
>  Boot ROM Version:    MP41.0081.B08
>  SMC Version (system):        1.39f5
>  SMC Version (processor tray):        1.39f5
>  Serial Number (system):      H00230C320H
>  Serial Number (processor tray):      C070183004XDCVHAX
>  Hardware UUID:       482F1E2A-2588-5FA3-80AE-11BE11615B02
>
> Any information appreciated
>
> Steven McKinney
>
> Statistician
> Molecular Oncology and Breast Cancer Program
> British Columbia Cancer Research Centre
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>


From simon.urbanek at r-project.org  Thu Oct 21 05:31:28 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 20 Oct 2010 23:31:28 -0400
Subject: [R-SIG-Mac] ATLAS BLAS
In-Reply-To: <AANLkTi=xKRjbW7gZnwEomTbtKwgBXv6Dnbm41Ogh-DD2@mail.gmail.com>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D6@crcmail4.BCCRC.CA>
	<42A869F0-C104-454F-B23B-069BA5E487CE@r-project.org>
	<AANLkTi=xKRjbW7gZnwEomTbtKwgBXv6Dnbm41Ogh-DD2@mail.gmail.com>
Message-ID: <B4DD7359-FF4A-453A-BC83-78362ECF2C13@r-project.org>


On Oct 20, 2010, at 10:53 PM, huang min wrote:

> Does this binary of ATLAS also work on a Core 2 Duo cpu? Thanks.
> 

It does, but it's optimized for a 16-thread machine, so it will spawn way too many threads for a core 2 duo. Still, I'm surprised that even that can be faster than vecLib (although not by much - 15.7s vs 20.7s on the tcrossprod test). Note that the vecLib bug only affects Mac Pros (AFAICT) so with other machines you can still stick with vecLib.

Cheers,
Simon


> Huang
> 
> On Thu, Oct 21, 2010 at 9:39 AM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
> On Oct 20, 2010, at 7:35 PM, Steven McKinney wrote:
> 
> > I have R 2.11.1 installed (soon will update to R 2.12) and I appear to have a Nehalem-based Mac Pro.
> >
> > I'm trying to find documentation about how to set up R on my Mac so I'm using the ATLAS BLAS.
> >
> 
> Well, you have to get it [=ATLAS] first. Then it's as easy as pointing the libRblas.dylib symlink to it.
> 
> 
> I have a binary of ATLAS that you can use if you have Mac OS X 10.6 (Snow Leopard) it's at
> http://r.research.att.com/libatlas-MacPro.dylib
> 
> So the copy/paste steps (you have to be admin) are:
> 
> cd /Library/Frameworks/R.framework/Resources/lib
> curl -O http://r.research.att.com/libatlas-MacPro.dylib
> chmod a+x libatlas-MacPro.dylib
> ln -sfn libatlas-MacPro.dylib libRblas.dylib
> 
> 
> ## if you want to go back to vecLib
> cd /Library/Frameworks/R.framework/Resources/lib
> ln -sfn libRblas.vecLib.dylib libRblas.dylib
> 
> ## if you want to use R's BLAS (not as fast but more reliable)
> cd /Library/Frameworks/R.framework/Resources/lib
> ln -sfn libRblas.0.dylib libRblas.dylib
> 
> 
> > I installed this version of R using the Mac installer R-2.11.1.pkg.
> > Does this installer set up R that uses the ATLAS BLAS, or are there
> > additional steps I need to take to have R use the ATLAS BLAS?
> >
> > Once R is up and running, can anyone tell me how I can determine
> > which BLAS R is using?
> >
> 
> Indirectly, just look at the output of
> ls -l /Library/Frameworks/R.framework/Resources/lib/libRblas.dylib
> 
> Cheers,
> Simon
> 
> 
> 
> > Any info appreciated.
> >
> >
> >
> >> sessionInfo()
> > R version 2.11.1 (2010-05-31)
> > x86_64-apple-darwin9.8.0
> >
> > locale:
> > [1] en_CA.UTF-8/en_CA.UTF-8/C/C/en_CA.UTF-8/en_CA.UTF-8
> >
> > attached base packages:
> > [1] stats     graphics  grDevices utils     datasets  methods   base
> >
> > loaded via a namespace (and not attached):
> > [1] tools_2.11.1
> >
> >
> >
> >
> > Steven McKinney
> >
> > _______________________________________________
> > R-SIG-Mac mailing list
> > R-SIG-Mac at stat.math.ethz.ch
> > https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> >
> >
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 


From stefanML at collocations.de  Thu Oct 21 13:47:40 2010
From: stefanML at collocations.de (Stefan Evert)
Date: Thu, 21 Oct 2010 13:47:40 +0200
Subject: [R-SIG-Mac] How to determine if a Mac is Nehalem-based
In-Reply-To: <6EE71DA9-2D16-4B28-A071-FA1849D48C12@r-project.org>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>
	<6EE71DA9-2D16-4B28-A071-FA1849D48C12@r-project.org>
Message-ID: <F14714D2-D2FF-4F47-B8D7-92EF642C38B3@collocations.de>


On 21 Oct 2010, at 03:28, Simon Urbanek wrote:

> It's not vague at all, it's MacPro4,1 and MacPro5,1 models (you can use use "sysctl hw.model" to find out what you have). If in doubt, check on Wikipedia ;)
> 
> The latter uses the Nehalem architecture but I don't have a specimen of those so I can't confirm that the bug still holds true for those.

Not just those ... I'm plagued by the same problem on my Penryn-based MacBookPro4,1.  In 64-bit mode, BLAS performance breaks down to single core levels, whereas in 32-bit mode (i.e. R --arch=i386) it uses both cores.  I posted some benchmark results to this list a few weeks ago.

My solution has also been to switch to the reference BLAS, which outperforms vecLib on most of the operations I benchmarked, except for crossprod(), which is terribly slow (more than 10x slower than tcrossprod()).  I've just tested again with R 2.12.0, and the situation has become even worse: now an explicit matrix multiplication M %*% t(M) -- which used to be fast -- performs as poorly as crossprod().

Any ideas about this?  The crossprod() slowdown isn't a Mac problem: I got similar results on a Pentium Dual Core laptop running Ubuntu.  If this is a known problem of the reference BLAS, is there any way to work around it?

Apart from the speed hiccups, in my benchmarks vecLib BLAS performed consistently slower than the reference BLAS.  Is there evidence from other benchmarks / hardware architectures that vecLib can be faster?  If not, perhaps the default should be _not_ to use vecLib on Mac?  Or perhaps it would be possible to autodetect hardware in the R startup wrapper and select the BLAS that's known to run faster on this setup?

Best wishes,
Stefan


From f.calboli at imperial.ac.uk  Thu Oct 21 15:47:10 2010
From: f.calboli at imperial.ac.uk (Federico Calboli)
Date: Thu, 21 Oct 2010 14:47:10 +0100
Subject: [R-SIG-Mac] [R-sig-ME] lme4 missing from repositories?
In-Reply-To: <A8F644A5-980E-4D46-80D2-2DFBEBD67032@me.com>
References: <D12D381C-DF9A-4406-9CD8-76806DD93817@cfenet.ubc.ca>
	<AANLkTikZ48i-1m3J3+Bzp1UEW6B7ttfgpt2zu07BA7GL@mail.gmail.com>
	<AANLkTikN70kiHuMCFZNcbNyhh4oYJQeorYviCh3xW7CL@mail.gmail.com>
	<AANLkTimKZTTUv3S12-uwoeL1Hrx5WzHAxioGVNLkxF3W@mail.gmail.com>
	<87312DEB-DFF3-40AF-B2F9-A9F365A0255A@imperial.ac.uk>
	<E84B04C7-E0F4-43D8-B9F4-B3917A4E2082@imperial.ac.uk>
	<AANLkTinukxno63fWnzC8=m=KV+ogJm-M_jirg3qPMxdd@mail.gmail.com>
	<AANLkTimHDGJUQm+9k_8ACaujknJGtZ19SWZCSk+SWhNi@mail.gmail.com>
	<AANLkTin8WxPh2wB9sO+=xuhvH3iEhAraRBeP_+qtmqne@mail.gmail.com>
	<08E6A2A9-68B0-4AE0-95B5-692E4ED5F104@imperial.ac.uk>
	<AANLkTinLYmO+PgTaP_=QRqqYkNHqdPtuO0vRhWxmBq=v@mail.gmail.com>
	<9F065CD6-D40E-40A2-940D-9F22452510DD@imperial.ac.uk>
	<A8F644A5-980E-4D46-80D2-2DFBEBD67032@me.com>
Message-ID: <03837FFF-2087-45DF-98F7-7E2439777CF3@imperial.ac.uk>

Mark, 
> 
> To the extent that it may be helpful here and I can do more if need be, I built 32 bit R 2.12.0 patched on Snow Leopard (10.6.4), using the R BLAS rather than Apple's veclib. This is on an early 2009 17" MBP with a 2.93 Ghz Core 2 Duo (MacBookPro5,2) and 4Gb of RAM. 
> 
> Based upon Doug's comment in this thread that the issue may be related to the use of Apple's veclib BLAS, as opposed to R's reference BLAS, I ran some tests.
> 
> My config includes:
> 
>  --without-blas --without-lapack
> 
> just to be sure that the above is the correct invocation, based upon what I found online.
> 
> Using this build, with all CRAN packages freshly installed using this build, I ran the example used here with lme4 0.999375-35. I get:
> 
> library(lme4)
> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
> M2. <- lmer (y ~ 1 + x + (1 + x | group))
> M2 <- lmer (y ~ x + ( x | group))
> 
>> identical(fixef(M2), fixef(M2.))
> [1] TRUE
> 
> 
> 
> I then created a function so that I could use replicate() to run this test a "larger" number of times:
> 
> testlme4 <- function()
> { 
>  y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>  M2. <- lmer (y ~ 1 + x + (1 + x | group))
>  M2 <- lmer (y ~ x + ( x | group))
>  identical(fixef(M2), fixef(M2.))
> }
> 
> 
> RES <- replicate(1000, testlme4())
> 
>> all(RES)
> [1] TRUE
> 
>> table(RES)
> RES
> TRUE 
> 1000 
> 
> Does the example need to be run a "very large" number of times to be sure that it does not fail, or is the above a reasonable indication that the use of R's BLAS is a more appropriate default option for R on OSX?  If I am not mistaken (and somebody correct me if wrong), R's BLAS is the default on Windows and Linux (from my recollections on Fedora). Why should OSX be different in that regard?

Thanks for the very informative post. I added R-Mac in my reply to see if someone can come up with a response to your query. It would also be interesting to know if it were possible to switch the OSX R binary to use the R BLAS library.
> 
> Also, as an aside to Federico, I use 32 bit R on OSX largely because I have to interact with an Oracle server via RODBC. The only ODBC drivers available for Oracle on OSX are 32 bit and they are not compatible with 64 bit R. It would be rather cumbersome when running reports (via Sweave) to first extract the data in 32 bit R and then switch to 64 bit R to run the reports. I can run it all in a single step using 32 bit R. I also do not have a need for the larger memory address space afforded by 64 bit R.

I'm very primitive in any integration between R and anything else, so much so that I abandoned Emacs (well integrated with R) for Vim (not as well integrated). On the other hand I do need the greater memory address space of R64. I understand my needs and habits are not universally shared, but, if the *only* reason for using R32 vs R64 is the 20% speed difference, I'd use R64 for running lme4.

Best,

Federico


--
Federico C. F. Calboli
Department of Epidemiology and Biostatistics
Imperial College, St. Mary's Campus
Norfolk Place, London W2 1PG

Tel +44 (0)20 75941602   Fax +44 (0)20 75943193

f.calboli [.a.t] imperial.ac.uk
f.calboli [.a.t] gmail.com


From marc_schwartz at me.com  Thu Oct 21 17:11:51 2010
From: marc_schwartz at me.com (Marc Schwartz)
Date: Thu, 21 Oct 2010 10:11:51 -0500
Subject: [R-SIG-Mac] [R-sig-ME] lme4 missing from repositories?
In-Reply-To: <03837FFF-2087-45DF-98F7-7E2439777CF3@imperial.ac.uk>
References: <D12D381C-DF9A-4406-9CD8-76806DD93817@cfenet.ubc.ca>
	<AANLkTikZ48i-1m3J3+Bzp1UEW6B7ttfgpt2zu07BA7GL@mail.gmail.com>
	<AANLkTikN70kiHuMCFZNcbNyhh4oYJQeorYviCh3xW7CL@mail.gmail.com>
	<AANLkTimKZTTUv3S12-uwoeL1Hrx5WzHAxioGVNLkxF3W@mail.gmail.com>
	<87312DEB-DFF3-40AF-B2F9-A9F365A0255A@imperial.ac.uk>
	<E84B04C7-E0F4-43D8-B9F4-B3917A4E2082@imperial.ac.uk>
	<AANLkTinukxno63fWnzC8=m=KV+ogJm-M_jirg3qPMxdd@mail.gmail.com>
	<AANLkTimHDGJUQm+9k_8ACaujknJGtZ19SWZCSk+SWhNi@mail.gmail.com>
	<AANLkTin8WxPh2wB9sO+=xuhvH3iEhAraRBeP_+qtmqne@mail.gmail.com>
	<08E6A2A9-68B0-4AE0-95B5-692E4ED5F104@imperial.ac.uk>
	<AANLkTinLYmO+PgTaP_=QRqqYkNHqdPtuO0vRhWxmBq=v@mail.gmail.com>
	<9F065CD6-D40E-40A2-940D-9F22452510DD@imperial.ac.uk>
	<A8F644A5-980E-4D46-80D2-2DFBEBD67032@me.com>
	<03837FFF-2087-45DF-98F7-7E2439777CF3@imperial.ac.uk>
Message-ID: <CCE3BF74-362B-4385-8B4E-2CC1173A7910@me.com>


On Oct 21, 2010, at 8:47 AM, Federico Calboli wrote:

> Mark, 
>> 
>> To the extent that it may be helpful here and I can do more if need be, I built 32 bit R 2.12.0 patched on Snow Leopard (10.6.4), using the R BLAS rather than Apple's veclib. This is on an early 2009 17" MBP with a 2.93 Ghz Core 2 Duo (MacBookPro5,2) and 4Gb of RAM. 
>> 
>> Based upon Doug's comment in this thread that the issue may be related to the use of Apple's veclib BLAS, as opposed to R's reference BLAS, I ran some tests.
>> 
>> My config includes:
>> 
>> --without-blas --without-lapack
>> 
>> just to be sure that the above is the correct invocation, based upon what I found online.
>> 
>> Using this build, with all CRAN packages freshly installed using this build, I ran the example used here with lme4 0.999375-35. I get:
>> 
>> library(lme4)
>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>> M2 <- lmer (y ~ x + ( x | group))
>> 
>>> identical(fixef(M2), fixef(M2.))
>> [1] TRUE
>> 
>> 
>> 
>> I then created a function so that I could use replicate() to run this test a "larger" number of times:
>> 
>> testlme4 <- function()
>> { 
>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>> M2 <- lmer (y ~ x + ( x | group))
>> identical(fixef(M2), fixef(M2.))
>> }
>> 
>> 
>> RES <- replicate(1000, testlme4())
>> 
>>> all(RES)
>> [1] TRUE
>> 
>>> table(RES)
>> RES
>> TRUE 
>> 1000 
>> 
>> Does the example need to be run a "very large" number of times to be sure that it does not fail, or is the above a reasonable indication that the use of R's BLAS is a more appropriate default option for R on OSX?  If I am not mistaken (and somebody correct me if wrong), R's BLAS is the default on Windows and Linux (from my recollections on Fedora). Why should OSX be different in that regard?
> 
> Thanks for the very informative post. I added R-Mac in my reply to see if someone can come up with a response to your query. It would also be interesting to know if it were possible to switch the OSX R binary to use the R BLAS library.
>> 
>> Also, as an aside to Federico, I use 32 bit R on OSX largely because I have to interact with an Oracle server via RODBC. The only ODBC drivers available for Oracle on OSX are 32 bit and they are not compatible with 64 bit R. It would be rather cumbersome when running reports (via Sweave) to first extract the data in 32 bit R and then switch to 64 bit R to run the reports. I can run it all in a single step using 32 bit R. I also do not have a need for the larger memory address space afforded by 64 bit R.
> 
> I'm very primitive in any integration between R and anything else, so much so that I abandoned Emacs (well integrated with R) for Vim (not as well integrated). On the other hand I do need the greater memory address space of R64. I understand my needs and habits are not universally shared, but, if the *only* reason for using R32 vs R64 is the 20% speed difference, I'd use R64 for running lme4.



OK, so here is some more data.  I wondered if my build using R's BLAS may have possibly been a Type II error. So I re-built 32 bit R (same SVN checkout code) using:

  --with-blas='-framework vecLib' --with-lapack

I then completely removed my old R build (using R's BLAS) and the installed CRAN packages. I re-installed R using the above configuration and then cleanly re-installed the required CRAN packages.

Here are the results:

y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
M2. <- lmer (y ~ 1 + x + (1 + x | group))
M2 <- lmer (y ~ x + ( x | group))

> identical(fixef(M2), fixef(M2.))
[1] FALSE

testlme4 <- function()
{ 
 y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
 M2. <- lmer (y ~ 1 + x + (1 + x | group))
 M2 <- lmer (y ~ x + ( x | group))
 identical(fixef(M2), fixef(M2.))
}
 
RES <- replicate(1000, testlme4())

> all(RES)
[1] FALSE

> table(RES)
RES
FALSE  TRUE 
  496   504 

So the test in question seems to fail with P(Failure) ~ 0.5 using Apple's veclib BLAS.

I should also note that all of my testing is from the CLI using the OSX terminal. I do not use R.app.

In response to Huang's reply, regarding his use of the shared lib approach, I wonder if there is some other interaction going on, either in the BLAS libs, or perhaps in the installed version of lme4, when one BLAS versus the other is in use at the time of lme4 installation, since it is installed from source on OSX. Note that I used a fully clean build of R and the required CRAN packages for each set of tests. 

If there is some other testing that I can do, let me know. But the above results with a clean build of R and lme4 each time, would seem to further reinforce a reconsideration of the use of Apple's veclib BLAS as the default for CRAN binary builds of R on OSX.

Regards,

Marc


From simon.urbanek at r-project.org  Thu Oct 21 17:41:57 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 21 Oct 2010 11:41:57 -0400
Subject: [R-SIG-Mac] [R-sig-ME] lme4 missing from repositories?
In-Reply-To: <03837FFF-2087-45DF-98F7-7E2439777CF3@imperial.ac.uk>
References: <D12D381C-DF9A-4406-9CD8-76806DD93817@cfenet.ubc.ca>
	<AANLkTikZ48i-1m3J3+Bzp1UEW6B7ttfgpt2zu07BA7GL@mail.gmail.com>
	<AANLkTikN70kiHuMCFZNcbNyhh4oYJQeorYviCh3xW7CL@mail.gmail.com>
	<AANLkTimKZTTUv3S12-uwoeL1Hrx5WzHAxioGVNLkxF3W@mail.gmail.com>
	<87312DEB-DFF3-40AF-B2F9-A9F365A0255A@imperial.ac.uk>
	<E84B04C7-E0F4-43D8-B9F4-B3917A4E2082@imperial.ac.uk>
	<AANLkTinukxno63fWnzC8=m=KV+ogJm-M_jirg3qPMxdd@mail.gmail.com>
	<AANLkTimHDGJUQm+9k_8ACaujknJGtZ19SWZCSk+SWhNi@mail.gmail.com>
	<AANLkTin8WxPh2wB9sO+=xuhvH3iEhAraRBeP_+qtmqne@mail.gmail.com>
	<08E6A2A9-68B0-4AE0-95B5-692E4ED5F104@imperial.ac.uk>
	<AANLkTinLYmO+PgTaP_=QRqqYkNHqdPtuO0vRhWxmBq=v@mail.gmail.com>
	<9F065CD6-D40E-40A2-940D-9F22452510DD@imperial.ac.uk>
	<A8F644A5-980E-4D46-80D2-2DFBEBD67032@me.com>
	<03837FFF-2087-45DF-98F7-7E2439777CF3@imperial.ac.uk>
Message-ID: <B9B2D62A-CECC-4374-9333-8962B37FCC74@r-project.org>


On Oct 21, 2010, at 9:47 AM, Federico Calboli wrote:

> Mark, 
>> 
>> To the extent that it may be helpful here and I can do more if need be, I built 32 bit R 2.12.0 patched on Snow Leopard (10.6.4), using the R BLAS rather than Apple's veclib. This is on an early 2009 17" MBP with a 2.93 Ghz Core 2 Duo (MacBookPro5,2) and 4Gb of RAM. 
>> 
>> Based upon Doug's comment in this thread that the issue may be related to the use of Apple's veclib BLAS, as opposed to R's reference BLAS, I ran some tests.
>> 
>> My config includes:
>> 
>> --without-blas --without-lapack
>> 
>> just to be sure that the above is the correct invocation, based upon what I found online.
>> 
>> Using this build, with all CRAN packages freshly installed using this build, I ran the example used here with lme4 0.999375-35. I get:
>> 
>> library(lme4)
>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>> M2 <- lmer (y ~ x + ( x | group))
>> 
>>> identical(fixef(M2), fixef(M2.))
>> [1] TRUE
>> 
>> 
>> 
>> I then created a function so that I could use replicate() to run this test a "larger" number of times:
>> 
>> testlme4 <- function()
>> { 
>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>> M2 <- lmer (y ~ x + ( x | group))
>> identical(fixef(M2), fixef(M2.))
>> }
>> 
>> 
>> RES <- replicate(1000, testlme4())
>> 
>>> all(RES)
>> [1] TRUE
>> 
>>> table(RES)
>> RES
>> TRUE 
>> 1000 
>> 
>> Does the example need to be run a "very large" number of times to be sure that it does not fail, or is the above a reasonable indication that the use of R's BLAS is a more appropriate default option for R on OSX?  If I am not mistaken (and somebody correct me if wrong), R's BLAS is the default on Windows and Linux (from my recollections on Fedora). Why should OSX be different in that regard?
> 
> Thanks for the very informative post. I added R-Mac in my reply to see if someone can come up with a response to your query. It would also be interesting to know if it were possible to switch the OSX R binary to use the R BLAS library.

Yes, see R for Mac FAQ 12.5.

Cheers,
Simon



>> 
>> Also, as an aside to Federico, I use 32 bit R on OSX largely because I have to interact with an Oracle server via RODBC. The only ODBC drivers available for Oracle on OSX are 32 bit and they are not compatible with 64 bit R. It would be rather cumbersome when running reports (via Sweave) to first extract the data in 32 bit R and then switch to 64 bit R to run the reports. I can run it all in a single step using 32 bit R. I also do not have a need for the larger memory address space afforded by 64 bit R.
> 
> I'm very primitive in any integration between R and anything else, so much so that I abandoned Emacs (well integrated with R) for Vim (not as well integrated). On the other hand I do need the greater memory address space of R64. I understand my needs and habits are not universally shared, but, if the *only* reason for using R32 vs R64 is the 20% speed difference, I'd use R64 for running lme4.
> 
> Best,
> 
> Federico
> 
> 
> --
> Federico C. F. Calboli
> Department of Epidemiology and Biostatistics
> Imperial College, St. Mary's Campus
> Norfolk Place, London W2 1PG
> 
> Tel +44 (0)20 75941602   Fax +44 (0)20 75943193
> 
> f.calboli [.a.t] imperial.ac.uk
> f.calboli [.a.t] gmail.com
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From minhuangr at gmail.com  Thu Oct 21 18:06:58 2010
From: minhuangr at gmail.com (huang min)
Date: Fri, 22 Oct 2010 00:06:58 +0800
Subject: [R-SIG-Mac] [R-sig-ME] lme4 missing from repositories?
In-Reply-To: <CCE3BF74-362B-4385-8B4E-2CC1173A7910@me.com>
References: <D12D381C-DF9A-4406-9CD8-76806DD93817@cfenet.ubc.ca>
	<AANLkTikZ48i-1m3J3+Bzp1UEW6B7ttfgpt2zu07BA7GL@mail.gmail.com>
	<AANLkTikN70kiHuMCFZNcbNyhh4oYJQeorYviCh3xW7CL@mail.gmail.com>
	<AANLkTimKZTTUv3S12-uwoeL1Hrx5WzHAxioGVNLkxF3W@mail.gmail.com>
	<87312DEB-DFF3-40AF-B2F9-A9F365A0255A@imperial.ac.uk>
	<E84B04C7-E0F4-43D8-B9F4-B3917A4E2082@imperial.ac.uk>
	<AANLkTinukxno63fWnzC8=m=KV+ogJm-M_jirg3qPMxdd@mail.gmail.com>
	<AANLkTimHDGJUQm+9k_8ACaujknJGtZ19SWZCSk+SWhNi@mail.gmail.com>
	<AANLkTin8WxPh2wB9sO+=xuhvH3iEhAraRBeP_+qtmqne@mail.gmail.com>
	<08E6A2A9-68B0-4AE0-95B5-692E4ED5F104@imperial.ac.uk>
	<AANLkTinLYmO+PgTaP_=QRqqYkNHqdPtuO0vRhWxmBq=v@mail.gmail.com>
	<9F065CD6-D40E-40A2-940D-9F22452510DD@imperial.ac.uk>
	<A8F644A5-980E-4D46-80D2-2DFBEBD67032@me.com>
	<03837FFF-2087-45DF-98F7-7E2439777CF3@imperial.ac.uk>
	<CCE3BF74-362B-4385-8B4E-2CC1173A7910@me.com>
Message-ID: <AANLkTimg3baD50B18M2ZXah4P32q8RG+c5HA2ho+Qcu9@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101022/330b8298/attachment.pl>

From ripley at stats.ox.ac.uk  Thu Oct 21 18:23:24 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 21 Oct 2010 17:23:24 +0100 (BST)
Subject: [R-SIG-Mac] [R-sig-ME] lme4 missing from repositories?
In-Reply-To: <CCE3BF74-362B-4385-8B4E-2CC1173A7910@me.com>
References: <D12D381C-DF9A-4406-9CD8-76806DD93817@cfenet.ubc.ca>
	<AANLkTikZ48i-1m3J3+Bzp1UEW6B7ttfgpt2zu07BA7GL@mail.gmail.com>
	<AANLkTikN70kiHuMCFZNcbNyhh4oYJQeorYviCh3xW7CL@mail.gmail.com>
	<AANLkTimKZTTUv3S12-uwoeL1Hrx5WzHAxioGVNLkxF3W@mail.gmail.com>
	<87312DEB-DFF3-40AF-B2F9-A9F365A0255A@imperial.ac.uk>
	<E84B04C7-E0F4-43D8-B9F4-B3917A4E2082@imperial.ac.uk>
	<AANLkTinukxno63fWnzC8=m=KV+ogJm-M_jirg3qPMxdd@mail.gmail.com>
	<AANLkTimHDGJUQm+9k_8ACaujknJGtZ19SWZCSk+SWhNi@mail.gmail.com>
	<AANLkTin8WxPh2wB9sO+=xuhvH3iEhAraRBeP_+qtmqne@mail.gmail.com>
	<08E6A2A9-68B0-4AE0-95B5-692E4ED5F104@imperial.ac.uk>
	<AANLkTinLYmO+PgTaP_=QRqqYkNHqdPtuO0vRhWxmBq=v@mail.gmail.com>
	<9F065CD6-D40E-40A2-940D-9F22452510DD@imperial.ac.uk>
	<A8F644A5-980E-4D46-80D2-2DFBEBD67032@me.com>
	<03837FFF-2087-45DF-98F7-7E2439777CF3@imperial.ac.uk>
	<CCE3BF74-362B-4385-8B4E-2CC1173A7910@me.com>
Message-ID: <alpine.LFD.2.00.1010211716220.7969@toucan.stats.ox.ac.uk>

Let me point out 
https://stat.ethz.ch/pipermail/r-sig-mac/2010-July/007608.html

This is not just a BLAS issue: I saw it with both vecLib and the 
reference BLAS.

The lme4 code is doing exactly the same calculation for M2. 
and M2, but sometimes when it does that calculation the first time in 
a session it gives a different answer.  That makes it really hard to 
get a handle on, and easy to suppose one has a fix (been there a few 
times myself).


On Thu, 21 Oct 2010, Marc Schwartz wrote:

>
> On Oct 21, 2010, at 8:47 AM, Federico Calboli wrote:
>
>> Mark,
>>>
>>> To the extent that it may be helpful here and I can do more if need be, I built 32 bit R 2.12.0 patched on Snow Leopard (10.6.4), using the R BLAS rather than Apple's veclib. This is on an early 2009 17" MBP with a 2.93 Ghz Core 2 Duo (MacBookPro5,2) and 4Gb of RAM.
>>>
>>> Based upon Doug's comment in this thread that the issue may be related to the use of Apple's veclib BLAS, as opposed to R's reference BLAS, I ran some tests.
>>>
>>> My config includes:
>>>
>>> --without-blas --without-lapack
>>>
>>> just to be sure that the above is the correct invocation, based upon what I found online.
>>>
>>> Using this build, with all CRAN packages freshly installed using this build, I ran the example used here with lme4 0.999375-35. I get:
>>>
>>> library(lme4)
>>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>>> M2 <- lmer (y ~ x + ( x | group))
>>>
>>>> identical(fixef(M2), fixef(M2.))
>>> [1] TRUE
>>>
>>>
>>>
>>> I then created a function so that I could use replicate() to run this test a "larger" number of times:
>>>
>>> testlme4 <- function()
>>> {
>>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>>> M2 <- lmer (y ~ x + ( x | group))
>>> identical(fixef(M2), fixef(M2.))
>>> }
>>>
>>>
>>> RES <- replicate(1000, testlme4())
>>>
>>>> all(RES)
>>> [1] TRUE
>>>
>>>> table(RES)
>>> RES
>>> TRUE
>>> 1000
>>>
>>> Does the example need to be run a "very large" number of times to be sure that it does not fail, or is the above a reasonable indication that the use of R's BLAS is a more appropriate default option for R on OSX?  If I am not mistaken (and somebody correct me if wrong), R's BLAS is the default on Windows and Linux (from my recollections on Fedora). Why should OSX be different in that regard?
>>
>> Thanks for the very informative post. I added R-Mac in my reply to see if someone can come up with a response to your query. It would also be interesting to know if it were possible to switch the OSX R binary to use the R BLAS library.
>>>
>>> Also, as an aside to Federico, I use 32 bit R on OSX largely because I have to interact with an Oracle server via RODBC. The only ODBC drivers available for Oracle on OSX are 32 bit and they are not compatible with 64 bit R. It would be rather cumbersome when running reports (via Sweave) to first extract the data in 32 bit R and then switch to 64 bit R to run the reports. I can run it all in a single step using 32 bit R. I also do not have a need for the larger memory address space afforded by 64 bit R.
>>
>> I'm very primitive in any integration between R and anything else, so much so that I abandoned Emacs (well integrated with R) for Vim (not as well integrated). On the other hand I do need the greater memory address space of R64. I understand my needs and habits are not universally shared, but, if the *only* reason for using R32 vs R64 is the 20% speed difference, I'd use R64 for running lme4.
>
>
>
> OK, so here is some more data.  I wondered if my build using R's BLAS may have possibly been a Type II error. So I re-built 32 bit R (same SVN checkout code) using:
>
>  --with-blas='-framework vecLib' --with-lapack
>
> I then completely removed my old R build (using R's BLAS) and the installed CRAN packages. I re-installed R using the above configuration and then cleanly re-installed the required CRAN packages.
>
> Here are the results:
>
> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
> M2. <- lmer (y ~ 1 + x + (1 + x | group))
> M2 <- lmer (y ~ x + ( x | group))
>
>> identical(fixef(M2), fixef(M2.))
> [1] FALSE
>
> testlme4 <- function()
> {
> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
> M2. <- lmer (y ~ 1 + x + (1 + x | group))
> M2 <- lmer (y ~ x + ( x | group))
> identical(fixef(M2), fixef(M2.))
> }
>
> RES <- replicate(1000, testlme4())
>
>> all(RES)
> [1] FALSE
>
>> table(RES)
> RES
> FALSE  TRUE
>  496   504
>
> So the test in question seems to fail with P(Failure) ~ 0.5 using Apple's veclib BLAS.
>
> I should also note that all of my testing is from the CLI using the OSX terminal. I do not use R.app.
>
> In response to Huang's reply, regarding his use of the shared lib approach, I wonder if there is some other interaction going on, either in the BLAS libs, or perhaps in the installed version of lme4, when one BLAS versus the other is in use at the time of lme4 installation, since it is installed from source on OSX. Note that I used a fully clean build of R and the required CRAN packages for each set of tests.
>
> If there is some other testing that I can do, let me know. But the above results with a clean build of R and lme4 each time, would seem to further reinforce a reconsideration of the use of Apple's veclib BLAS as the default for CRAN binary builds of R on OSX.
>
> Regards,
>
> Marc
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From simon.urbanek at r-project.org  Thu Oct 21 18:36:08 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 21 Oct 2010 12:36:08 -0400
Subject: [R-SIG-Mac] How to determine if a Mac is Nehalem-based
In-Reply-To: <F14714D2-D2FF-4F47-B8D7-92EF642C38B3@collocations.de>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>
	<6EE71DA9-2D16-4B28-A071-FA1849D48C12@r-project.org>
	<F14714D2-D2FF-4F47-B8D7-92EF642C38B3@collocations.de>
Message-ID: <19BD0318-8283-4A27-B75E-57FF63AA9B6F@r-project.org>

On Oct 21, 2010, at 7:47 AM, Stefan Evert wrote:

> 
> On 21 Oct 2010, at 03:28, Simon Urbanek wrote:
> 
>> It's not vague at all, it's MacPro4,1 and MacPro5,1 models (you can use use "sysctl hw.model" to find out what you have). If in doubt, check on Wikipedia ;)
>> 
>> The latter uses the Nehalem architecture but I don't have a specimen of those so I can't confirm that the bug still holds true for those.
> 
> Not just those ... I'm plagued by the same problem on my Penryn-based MacBookPro4,1.  In 64-bit mode, BLAS performance breaks down to single core levels, whereas in 32-bit mode (i.e. R --arch=i386) it uses both cores.  I posted some benchmark results to this list a few weeks ago.
> 

Well, given that it is only a two-thread CPU there is not much you can gain so I wouldn't lose my sleep over it. If you have 16-theads CPU it's a while different story ;). For illustration, those are the timings from your benchmarks (only those that use BLAS) for 64-bit R 2.12.0 at 10.6.4 on a 2.66GHz MacPro4,1:

test			R BLAS	vecLib	ATLAS	MKL
inner M %*% t(M) D	19.961	3.470	0.519	0.662
inner tcrossprod D	0.658	1.867	0.243	0.235
inner crossprod t(M) D	9.574	1.849	0.242	0.256
cosine normalised D	0.798	2.009	0.385	0.411
cosine general D	0.770	1.993	0.380	0.352
euclid() D		2.072	3.271	1.637	1.635
euclid() small D	0.515	0.821	0.421	0.395

As you can see both MKL and ATLAS outperform vecLib and R BLAS by an order of magnitude. It's sad, because vecLib used to be fairly well optimized ... (in fact it is actually some version of ATLAS which is even more strange ...).


> My solution has also been to switch to the reference BLAS, which outperforms vecLib on most of the operations I benchmarked, except for crossprod(), which is terribly slow (more than 10x slower than tcrossprod()).  I've just tested again with R 2.12.0, and the situation has become even worse: now an explicit matrix multiplication M %*% t(M) -- which used to be fast -- performs as poorly as crossprod().
> 
> Any ideas about this?  The crossprod() slowdown isn't a Mac problem: I got similar results on a Pentium Dual Core laptop running Ubuntu.  If this is a known problem of the reference BLAS, is there any way to work around it?
> 
> Apart from the speed hiccups, in my benchmarks vecLib BLAS performed consistently slower than the reference BLAS.  Is there evidence from other benchmarks / hardware architectures that vecLib can be faster?  If not, perhaps the default should be _not_ to use vecLib on Mac?  Or perhaps it would be possible to autodetect hardware in the R startup wrapper and select the BLAS that's known to run faster on this setup?
> 

I don't think we would want to do that since that would prevent the user from choosing the BLAS they want to use. We will probably abandon vecLib as the default for the next release (more due to its numerical instability issues) and maybe provide all three options (vecLib, R BLAS, ATLAS) for the user to choose from in case they have a machine that can take advantage of it.

Cheers,
Simon


From marc_schwartz at me.com  Thu Oct 21 19:15:54 2010
From: marc_schwartz at me.com (Marc Schwartz)
Date: Thu, 21 Oct 2010 12:15:54 -0500
Subject: [R-SIG-Mac] [R-sig-ME] lme4 missing from repositories?
In-Reply-To: <alpine.LFD.2.00.1010211716220.7969@toucan.stats.ox.ac.uk>
References: <D12D381C-DF9A-4406-9CD8-76806DD93817@cfenet.ubc.ca>
	<AANLkTikZ48i-1m3J3+Bzp1UEW6B7ttfgpt2zu07BA7GL@mail.gmail.com>
	<AANLkTikN70kiHuMCFZNcbNyhh4oYJQeorYviCh3xW7CL@mail.gmail.com>
	<AANLkTimKZTTUv3S12-uwoeL1Hrx5WzHAxioGVNLkxF3W@mail.gmail.com>
	<87312DEB-DFF3-40AF-B2F9-A9F365A0255A@imperial.ac.uk>
	<E84B04C7-E0F4-43D8-B9F4-B3917A4E2082@imperial.ac.uk>
	<AANLkTinukxno63fWnzC8=m=KV+ogJm-M_jirg3qPMxdd@mail.gmail.com>
	<AANLkTimHDGJUQm+9k_8ACaujknJGtZ19SWZCSk+SWhNi@mail.gmail.com>
	<AANLkTin8WxPh2wB9sO+=xuhvH3iEhAraRBeP_+qtmqne@mail.gmail.com>
	<08E6A2A9-68B0-4AE0-95B5-692E4ED5F104@imperial.ac.uk>
	<AANLkTinLYmO+PgTaP_=QRqqYkNHqdPtuO0vRhWxmBq=v@mail.gmail.com>
	<9F065CD6-D40E-40A2-940D-9F22452510DD@imperial.ac.uk>
	<A8F644A5-980E-4D46-80D2-2DFBEBD67032@me.com>
	<03837FFF-2087-45DF-98F7-7E2439777CF3@imperial.ac.uk>
	<CCE3BF74-362B-4385-8B4E-2CC1173A7910@me.com>
	<alpine.LFD.2.00.1010211716220.7969@toucan.stats.ox.ac.uk>
Message-ID: <D79192C5-44BD-4E65-AEBA-526DA36F89F4@me.com>

Interesting. No matter what I do here, I can't seem to get the test to fail using R's BLAS with clean 32 bit builds. So perhaps it is not just the BLAS, but a combination of R's BLAS and specific hardware?, which gets me into a realm of knowledge below the event horizon. 

Have there been any repeatable scenarios where vecLib can be used without failure on a particular Mac platform?

Also, I just noted Simon's reply to a different thread on r-sig-mac to Stefan Evert, in which he notes that there may be a change in the default BLAS for OSX to vecLib in the next R release. Of course, now given Prof. Ripley's observations, it will be interesting to see the actual impact in the wild.

Thanks,

Marc

On Oct 21, 2010, at 11:23 AM, Prof Brian Ripley wrote:

> Let me point out https://stat.ethz.ch/pipermail/r-sig-mac/2010-July/007608.html
> 
> This is not just a BLAS issue: I saw it with both vecLib and the reference BLAS.
> 
> The lme4 code is doing exactly the same calculation for M2. and M2, but sometimes when it does that calculation the first time in a session it gives a different answer.  That makes it really hard to get a handle on, and easy to suppose one has a fix (been there a few times myself).
> 
> 
> On Thu, 21 Oct 2010, Marc Schwartz wrote:
> 
>> 
>> On Oct 21, 2010, at 8:47 AM, Federico Calboli wrote:
>> 
>>> Mark,
>>>> 
>>>> To the extent that it may be helpful here and I can do more if need be, I built 32 bit R 2.12.0 patched on Snow Leopard (10.6.4), using the R BLAS rather than Apple's veclib. This is on an early 2009 17" MBP with a 2.93 Ghz Core 2 Duo (MacBookPro5,2) and 4Gb of RAM.
>>>> 
>>>> Based upon Doug's comment in this thread that the issue may be related to the use of Apple's veclib BLAS, as opposed to R's reference BLAS, I ran some tests.
>>>> 
>>>> My config includes:
>>>> 
>>>> --without-blas --without-lapack
>>>> 
>>>> just to be sure that the above is the correct invocation, based upon what I found online.
>>>> 
>>>> Using this build, with all CRAN packages freshly installed using this build, I ran the example used here with lme4 0.999375-35. I get:
>>>> 
>>>> library(lme4)
>>>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>>>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>>>> M2 <- lmer (y ~ x + ( x | group))
>>>> 
>>>>> identical(fixef(M2), fixef(M2.))
>>>> [1] TRUE
>>>> 
>>>> 
>>>> 
>>>> I then created a function so that I could use replicate() to run this test a "larger" number of times:
>>>> 
>>>> testlme4 <- function()
>>>> {
>>>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>>>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>>>> M2 <- lmer (y ~ x + ( x | group))
>>>> identical(fixef(M2), fixef(M2.))
>>>> }
>>>> 
>>>> 
>>>> RES <- replicate(1000, testlme4())
>>>> 
>>>>> all(RES)
>>>> [1] TRUE
>>>> 
>>>>> table(RES)
>>>> RES
>>>> TRUE
>>>> 1000
>>>> 
>>>> Does the example need to be run a "very large" number of times to be sure that it does not fail, or is the above a reasonable indication that the use of R's BLAS is a more appropriate default option for R on OSX?  If I am not mistaken (and somebody correct me if wrong), R's BLAS is the default on Windows and Linux (from my recollections on Fedora). Why should OSX be different in that regard?
>>> 
>>> Thanks for the very informative post. I added R-Mac in my reply to see if someone can come up with a response to your query. It would also be interesting to know if it were possible to switch the OSX R binary to use the R BLAS library.
>>>> 
>>>> Also, as an aside to Federico, I use 32 bit R on OSX largely because I have to interact with an Oracle server via RODBC. The only ODBC drivers available for Oracle on OSX are 32 bit and they are not compatible with 64 bit R. It would be rather cumbersome when running reports (via Sweave) to first extract the data in 32 bit R and then switch to 64 bit R to run the reports. I can run it all in a single step using 32 bit R. I also do not have a need for the larger memory address space afforded by 64 bit R.
>>> 
>>> I'm very primitive in any integration between R and anything else, so much so that I abandoned Emacs (well integrated with R) for Vim (not as well integrated). On the other hand I do need the greater memory address space of R64. I understand my needs and habits are not universally shared, but, if the *only* reason for using R32 vs R64 is the 20% speed difference, I'd use R64 for running lme4.
>> 
>> 
>> 
>> OK, so here is some more data.  I wondered if my build using R's BLAS may have possibly been a Type II error. So I re-built 32 bit R (same SVN checkout code) using:
>> 
>> --with-blas='-framework vecLib' --with-lapack
>> 
>> I then completely removed my old R build (using R's BLAS) and the installed CRAN packages. I re-installed R using the above configuration and then cleanly re-installed the required CRAN packages.
>> 
>> Here are the results:
>> 
>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>> M2 <- lmer (y ~ x + ( x | group))
>> 
>>> identical(fixef(M2), fixef(M2.))
>> [1] FALSE
>> 
>> testlme4 <- function()
>> {
>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>> M2 <- lmer (y ~ x + ( x | group))
>> identical(fixef(M2), fixef(M2.))
>> }
>> 
>> RES <- replicate(1000, testlme4())
>> 
>>> all(RES)
>> [1] FALSE
>> 
>>> table(RES)
>> RES
>> FALSE  TRUE
>> 496   504
>> 
>> So the test in question seems to fail with P(Failure) ~ 0.5 using Apple's veclib BLAS.
>> 
>> I should also note that all of my testing is from the CLI using the OSX terminal. I do not use R.app.
>> 
>> In response to Huang's reply, regarding his use of the shared lib approach, I wonder if there is some other interaction going on, either in the BLAS libs, or perhaps in the installed version of lme4, when one BLAS versus the other is in use at the time of lme4 installation, since it is installed from source on OSX. Note that I used a fully clean build of R and the required CRAN packages for each set of tests.
>> 
>> If there is some other testing that I can do, let me know. But the above results with a clean build of R and lme4 each time, would seem to further reinforce a reconsideration of the use of Apple's veclib BLAS as the default for CRAN binary builds of R on OSX.
>> 
>> Regards,
>> 
>> Marc
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From gcutler at amgen.com  Fri Oct 22 03:16:33 2010
From: gcutler at amgen.com (Cutler, Gene)
Date: Thu, 21 Oct 2010 18:16:33 -0700
Subject: [R-SIG-Mac] Need help using Rmpi
Message-ID: <C52C1C342925014EB61ACBC5A04740390C4BEF0A65@ussf-pmsg-mbs01.am.corp.amgen.com>

I've been trying to get some sort of parallel computing setup running across my two Macs, one with 8 cores the other with 4.  So far, I've mainly been trying to get MPI to work, but without a lot of success.  For example:

Attempt 1:
> /usr/local/openmpi/bin/mpirun --prefix /usr/local/openmpi -hostfile ~/hostfile /Library/Frameworks/R.framework/Versions/2.12/Resources/library/snow/RMPISNOW
# this drops me into R and I can see messages from multiple R instances starting up, so far so good...
library('Rmpi')
library('snow')
cl <- getMPIcluster()
cl	
# NULL
cl <- makeMPIcluster()
# cl <- makeMPIcluster()
# Error in makeMPIcluster() : no nodes available.
# Execution halted
# --------------------------------------------------------------------------
# mpirun noticed that the job aborted, but has no info as to the process
# that caused that situation.
# --------------------------------------------------------------------------

Note, that in fact any error such as just typing a stray character will cause R to quite with that same 'aborted' notice.

Attempt 2:
/usr/local/openmpi/bin/mpirun --prefix /usr/local/openmpi -hostfile ~/hostfile -n 1 R --slave
library(doMPI)
cl <- startMPIcluster()
# Error in system("lamnodes", TRUE, ignore.stderr = TRUE) : 
#   error in running command
# Calls: startMPIcluster -> mpi.universe.size -> grep -> system
# Execution halted
# --------------------------------------------------------------------------
# mpirun noticed that the job aborted, but has no info as to the process
# that caused that situation.
# --------------------------------------------------------------------------


I've also looked into PVM, but that doesn't seem to support multiple cpus per machine.  Using sockets with snow was also giving me problems, but I'll try that again only after completely giving up on MPI.

Does anyone have some suggestions for getting this to work?

Thanks in advance,
Gene


From ripley at stats.ox.ac.uk  Fri Oct 22 07:44:45 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 22 Oct 2010 06:44:45 +0100 (BST)
Subject: [R-SIG-Mac] Need help using Rmpi
In-Reply-To: <C52C1C342925014EB61ACBC5A04740390C4BEF0A65@ussf-pmsg-mbs01.am.corp.amgen.com>
References: <C52C1C342925014EB61ACBC5A04740390C4BEF0A65@ussf-pmsg-mbs01.am.corp.amgen.com>
Message-ID: <alpine.LFD.2.00.1010220637540.28385@gannet.stats.ox.ac.uk>

Rmpi needs help (I'd say a bugfix) if your MPI is not lam (and you 
have not told us).  See the Rmpi/README file, but the effect is more 
serious in 2.12.0 (and the maintainer was informed weeks ago).

I don't understand your notation, but am assuming lines starting with 
# are both your comments *and* error messages from R.

On Thu, 21 Oct 2010, Cutler, Gene wrote:

> I've been trying to get some sort of parallel computing setup 
> running across my two Macs, one with 8 cores the other with 4.  So 
> far, I've mainly been trying to get MPI to work, but without a lot 
> of success.  For example:
>
> Attempt 1:
>> /usr/local/openmpi/bin/mpirun --prefix /usr/local/openmpi -hostfile ~/hostfile /Library/Frameworks/R.framework/Versions/2.12/Resources/library/snow/RMPISNOW
> # this drops me into R and I can see messages from multiple R instances starting up, so far so good...
> library('Rmpi')
> library('snow')
> cl <- getMPIcluster()
> cl
> # NULL
> cl <- makeMPIcluster()
> # cl <- makeMPIcluster()
> # Error in makeMPIcluster() : no nodes available.
> # Execution halted
> # --------------------------------------------------------------------------
> # mpirun noticed that the job aborted, but has no info as to the process
> # that caused that situation.
> # --------------------------------------------------------------------------
>
> Note, that in fact any error such as just typing a stray character will cause R to quite with that same 'aborted' notice.
>
> Attempt 2:
> /usr/local/openmpi/bin/mpirun --prefix /usr/local/openmpi -hostfile ~/hostfile -n 1 R --slave
> library(doMPI)
> cl <- startMPIcluster()
> # Error in system("lamnodes", TRUE, ignore.stderr = TRUE) :
> #   error in running command
> # Calls: startMPIcluster -> mpi.universe.size -> grep -> system
> # Execution halted
> # --------------------------------------------------------------------------
> # mpirun noticed that the job aborted, but has no info as to the process
> # that caused that situation.
> # --------------------------------------------------------------------------
>
>
> I've also looked into PVM, but that doesn't seem to support multiple cpus per machine.  Using sockets with snow was also giving me problems, but I'll try that again only after completely giving up on MPI.
>
> Does anyone have some suggestions for getting this to work?
>
> Thanks in advance,
> Gene
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From jochen.laubrock at gmail.com  Fri Oct 22 15:23:36 2010
From: jochen.laubrock at gmail.com (jochen laubrock)
Date: Fri, 22 Oct 2010 15:23:36 +0200
Subject: [R-SIG-Mac] [R-sig-ME] lme4 missing from repositories?
In-Reply-To: <D79192C5-44BD-4E65-AEBA-526DA36F89F4@me.com>
References: <D12D381C-DF9A-4406-9CD8-76806DD93817@cfenet.ubc.ca>
	<AANLkTikZ48i-1m3J3+Bzp1UEW6B7ttfgpt2zu07BA7GL@mail.gmail.com>
	<AANLkTikN70kiHuMCFZNcbNyhh4oYJQeorYviCh3xW7CL@mail.gmail.com>
	<AANLkTimKZTTUv3S12-uwoeL1Hrx5WzHAxioGVNLkxF3W@mail.gmail.com>
	<87312DEB-DFF3-40AF-B2F9-A9F365A0255A@imperial.ac.uk>
	<E84B04C7-E0F4-43D8-B9F4-B3917A4E2082@imperial.ac.uk>
	<AANLkTinukxno63fWnzC8=m=KV+ogJm-M_jirg3qPMxdd@mail.gmail.com>
	<AANLkTimHDGJUQm+9k_8ACaujknJGtZ19SWZCSk+SWhNi@mail.gmail.com>
	<AANLkTin8WxPh2wB9sO+=xuhvH3iEhAraRBeP_+qtmqne@mail.gmail.com>
	<08E6A2A9-68B0-4AE0-95B5-692E4ED5F104@imperial.ac.uk>
	<AANLkTinLYmO+PgTaP_=QRqqYkNHqdPtuO0vRhWxmBq=v@mail.gmail.com>
	<9F065CD6-D40E-40A2-940D-9F22452510DD@imperial.ac.uk>
	<A8F644A5-980E-4D46-80D2-2DFBEBD67032@me.com>
	<03837FFF-2087-45DF-98F7-7E2439777CF3@imperial.ac.uk>
	<CCE3BF74-362B-4385-8B4E-2CC1173A7910@me.com>
	<alpine.LFD.2.00.1010211716220.7969@toucan.stats.ox.ac.uk>
	<D79192C5-44BD-4E65-AEBA-526DA36F89F4@me.com>
Message-ID: <AE0B4A30-95C7-4265-A1FB-8E69952FE3BE@gmail.com>

Interesting. 

When using R 2.12.0 in 32-Bit mode, I always get deterministic behavior with the reference BLAS, but random behavior with veclib. With R 2.11.1, I always get random behavior in 32-Bit mode, regardless of what BLAS implementation I chose. Finally, with R in 64-Bit mode, behavior is always deterministic (for both R 2.11.1 and R 2.12.0).

The following table summarizes the behavior (for details including sessionInfo() scroll down to end of post):

		R 2.11.1			R 2.12.0
		32-Bit	64-Bit	32-Bit	64-Bit
vecLib	rand	det		rand	det
RBLAS	rand	det		det		det

All of this has been tested on a MacPro4,1 (Quad-Core Intel Xeon, 2.26 GHz) and the 2.12.0 behavior confirmed on a MacBookPro5,5 (Intel Core 2 Duo, 2.53 GHz), with lme4_0.999375-35 and Matrix_0.999375-44.

Maybe there were two bugs, and one has been fixed in 2.12.0? Also, could it be that vecLib takes some numerical shortcuts that escalate? In that case, maybe the behavior should be brought to Apple's attention, using bugreport.apple.com. Finally, should the actual BLAS version used be included in sessionInfo()?

Thanks,
Jochen



On Oct 21, 2010, at 19:15 , Marc Schwartz wrote:

> Interesting. No matter what I do here, I can't seem to get the test to fail using R's BLAS with clean 32 bit builds. So perhaps it is not just the BLAS, but a combination of R's BLAS and specific hardware?, which gets me into a realm of knowledge below the event horizon. 
> 
> Have there been any repeatable scenarios where vecLib can be used without failure on a particular Mac platform?
> 
> Also, I just noted Simon's reply to a different thread on r-sig-mac to Stefan Evert, in which he notes that there may be a change in the default BLAS for OSX to vecLib in the next R release. Of course, now given Prof. Ripley's observations, it will be interesting to see the actual impact in the wild.
> 
> Thanks,
> 
> Marc
> 
> On Oct 21, 2010, at 11:23 AM, Prof Brian Ripley wrote:
> 
>> Let me point out https://stat.ethz.ch/pipermail/r-sig-mac/2010-July/007608.html
>> 
>> This is not just a BLAS issue: I saw it with both vecLib and the reference BLAS.
>> 
>> The lme4 code is doing exactly the same calculation for M2. and M2, but sometimes when it does that calculation the first time in a session it gives a different answer.  That makes it really hard to get a handle on, and easy to suppose one has a fix (been there a few times myself).
>> 
>> 
>> On Thu, 21 Oct 2010, Marc Schwartz wrote:
>> 
>>> 
>>> On Oct 21, 2010, at 8:47 AM, Federico Calboli wrote:
>>> 
>>>> Mark,
>>>>> 
>>>>> To the extent that it may be helpful here and I can do more if need be, I built 32 bit R 2.12.0 patched on Snow Leopard (10.6.4), using the R BLAS rather than Apple's veclib. This is on an early 2009 17" MBP with a 2.93 Ghz Core 2 Duo (MacBookPro5,2) and 4Gb of RAM.
>>>>> 
>>>>> Based upon Doug's comment in this thread that the issue may be related to the use of Apple's veclib BLAS, as opposed to R's reference BLAS, I ran some tests.
>>>>> 
>>>>> My config includes:
>>>>> 
>>>>> --without-blas --without-lapack
>>>>> 
>>>>> just to be sure that the above is the correct invocation, based upon what I found online.
>>>>> 
>>>>> Using this build, with all CRAN packages freshly installed using this build, I ran the example used here with lme4 0.999375-35. I get:
>>>>> 
>>>>> library(lme4)
>>>>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>>>>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>>>>> M2 <- lmer (y ~ x + ( x | group))
>>>>> 
>>>>>> identical(fixef(M2), fixef(M2.))
>>>>> [1] TRUE
>>>>> 
>>>>> 
>>>>> 
>>>>> I then created a function so that I could use replicate() to run this test a "larger" number of times:
>>>>> 
>>>>> testlme4 <- function()
>>>>> {
>>>>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>>>>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>>>>> M2 <- lmer (y ~ x + ( x | group))
>>>>> identical(fixef(M2), fixef(M2.))
>>>>> }
>>>>> 
>>>>> 
>>>>> RES <- replicate(1000, testlme4())
>>>>> 
>>>>>> all(RES)
>>>>> [1] TRUE
>>>>> 
>>>>>> table(RES)
>>>>> RES
>>>>> TRUE
>>>>> 1000
>>>>> 
>>>>> Does the example need to be run a "very large" number of times to be sure that it does not fail, or is the above a reasonable indication that the use of R's BLAS is a more appropriate default option for R on OSX?  If I am not mistaken (and somebody correct me if wrong), R's BLAS is the default on Windows and Linux (from my recollections on Fedora). Why should OSX be different in that regard?
>>>> 
>>>> Thanks for the very informative post. I added R-Mac in my reply to see if someone can come up with a response to your query. It would also be interesting to know if it were possible to switch the OSX R binary to use the R BLAS library.
>>>>> 
>>>>> Also, as an aside to Federico, I use 32 bit R on OSX largely because I have to interact with an Oracle server via RODBC. The only ODBC drivers available for Oracle on OSX are 32 bit and they are not compatible with 64 bit R. It would be rather cumbersome when running reports (via Sweave) to first extract the data in 32 bit R and then switch to 64 bit R to run the reports. I can run it all in a single step using 32 bit R. I also do not have a need for the larger memory address space afforded by 64 bit R.
>>>> 
>>>> I'm very primitive in any integration between R and anything else, so much so that I abandoned Emacs (well integrated with R) for Vim (not as well integrated). On the other hand I do need the greater memory address space of R64. I understand my needs and habits are not universally shared, but, if the *only* reason for using R32 vs R64 is the 20% speed difference, I'd use R64 for running lme4.
>>> 
>>> 
>>> 
>>> OK, so here is some more data.  I wondered if my build using R's BLAS may have possibly been a Type II error. So I re-built 32 bit R (same SVN checkout code) using:
>>> 
>>> --with-blas='-framework vecLib' --with-lapack
>>> 
>>> I then completely removed my old R build (using R's BLAS) and the installed CRAN packages. I re-installed R using the above configuration and then cleanly re-installed the required CRAN packages.
>>> 
>>> Here are the results:
>>> 
>>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>>> M2 <- lmer (y ~ x + ( x | group))
>>> 
>>>> identical(fixef(M2), fixef(M2.))
>>> [1] FALSE
>>> 
>>> testlme4 <- function()
>>> {
>>> y <- (1:20)*pi; x <- (1:20)^2;group <- gl(2,10)
>>> M2. <- lmer (y ~ 1 + x + (1 + x | group))
>>> M2 <- lmer (y ~ x + ( x | group))
>>> identical(fixef(M2), fixef(M2.))
>>> }
>>> 
>>> RES <- replicate(1000, testlme4())
>>> 
>>>> all(RES)
>>> [1] FALSE
>>> 
>>>> table(RES)
>>> RES
>>> FALSE  TRUE
>>> 496   504
>>> 
>>> So the test in question seems to fail with P(Failure) ~ 0.5 using Apple's veclib BLAS.
>>> 
>>> I should also note that all of my testing is from the CLI using the OSX terminal. I do not use R.app.
>>> 
>>> In response to Huang's reply, regarding his use of the shared lib approach, I wonder if there is some other interaction going on, either in the BLAS libs, or perhaps in the installed version of lme4, when one BLAS versus the other is in use at the time of lme4 installation, since it is installed from source on OSX. Note that I used a fully clean build of R and the required CRAN packages for each set of tests.
>>> 
>>> If there is some other testing that I can do, let me know. But the above results with a clean build of R and lme4 each time, would seem to further reinforce a reconsideration of the use of Apple's veclib BLAS as the default for CRAN binary builds of R on OSX.
>>> 
>>> Regards,
>>> 
>>> Marc
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>> 
>> -- 
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>> University of Oxford,             Tel:  +44 1865 272861 (self)
>> 1 South Parks Road,                     +44 1865 272866 (PA)
>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac





 ===========================================
 = libRblas.dylib -> libRblas.vecLib.dylib =
 ===========================================
 ==========
 = 32-Bit =
 ==========

------ R 2.11.1 ------
> table(RES)
RES
FALSE  TRUE 
   44    56 
> sessionInfo()
R version 2.11.1 (2010-05-31) 
i386-apple-darwin9.8.0 

locale:
[1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] lme4_0.999375-35   Matrix_0.999375-44 lattice_0.18-8    

loaded via a namespace (and not attached):
[1] grid_2.11.1   nlme_3.1-96   stats4_2.11.1

------ R 2.12.0 ------
> table(RES)
RES
FALSE  TRUE 
   52    48

> sessionInfo()
R version 2.12.0 Patched (2010-10-21 r53386)
Platform: i386-apple-darwin9.8.0/i386 (32-bit)

locale:
[1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] lme4_0.999375-35   Matrix_0.999375-44 lattice_0.19-13   

loaded via a namespace (and not attached):
[1] grid_2.12.0   nlme_3.1-97   stats4_2.12.0 tcltk_2.12.0  tools_2.12.0 


 ======================================
 = libRblas.dylib -> libRblas.0.dylib =
 ======================================
 ==========
 = 32-Bit =
 ==========
------ R 2.11.1 ------
> table(RES)
RES
FALSE  TRUE 
   59    41

> sessionInfo()
R version 2.11.1 (2010-05-31) 
i386-apple-darwin9.8.0 

locale:
[1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] lme4_0.999375-35   Matrix_0.999375-44 lattice_0.18-8    

loaded via a namespace (and not attached):
[1] grid_2.11.1   nlme_3.1-96   stats4_2.11.1 tcltk_2.11.1  tools_2.11.1

------ R 2.12.0 ------
> table(RES)
RES
TRUE 
 100 

> sessionInfo()
R version 2.12.0 Patched (2010-10-21 r53386)
Platform: i386-apple-darwin9.8.0/i386 (32-bit)

locale:
[1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] lme4_0.999375-35   Matrix_0.999375-44 lattice_0.19-13   

loaded via a namespace (and not attached):
[1] grid_2.12.0   nlme_3.1-97   stats4_2.12.0


 ==========
 = 64-Bit =
 ==========
------ R 2.11.1 ------
> table(RES)
RES
TRUE 
 100 

> sessionInfo()
R version 2.11.1 (2010-05-31) 
x86_64-apple-darwin9.8.0 

locale:
[1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] lme4_0.999375-33   Matrix_0.999375-44 lattice_0.18-8    

loaded via a namespace (and not attached):
[1] grid_2.11.1 nlme_3.1-96


------ R 2.12.0 ------
> table(RES)
RES
TRUE 
 100

> sessionInfo()
R version 2.12.0 Patched (2010-10-21 r53386)
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

locale:
[1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] lme4_0.999375-35   Matrix_0.999375-44 lattice_0.19-13   

loaded via a namespace (and not attached):
[1] grid_2.12.0   nlme_3.1-97   stats4_2.12.0


----
Jochen Laubrock, Dept. of Psychology, University of Potsdam,
Karl-Liebknecht-Strasse 24-25, 14476 Potsdam, Germany
phone: +49-331-977-2346, fax: +49-331-977-2793


From mailinglist.honeypot at gmail.com  Fri Oct 22 15:58:37 2010
From: mailinglist.honeypot at gmail.com (Steve Lianoglou)
Date: Fri, 22 Oct 2010 09:58:37 -0400
Subject: [R-SIG-Mac] How to determine if a Mac is Nehalem-based
In-Reply-To: <19BD0318-8283-4A27-B75E-57FF63AA9B6F@r-project.org>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>
	<6EE71DA9-2D16-4B28-A071-FA1849D48C12@r-project.org>
	<F14714D2-D2FF-4F47-B8D7-92EF642C38B3@collocations.de>
	<19BD0318-8283-4A27-B75E-57FF63AA9B6F@r-project.org>
Message-ID: <AANLkTi=UkA7RoeZVZ2pz3yFD4wn-LLeYCwA5mJGLawvA@mail.gmail.com>

Hi,

Although I should, I don't follow too closely in the places I should
(I don't know where those places are) to know if Apple is aware of
this vecLib breakdown issue ... are they? Where can we go to add our
voices/votes for them to fix it?

Apple still has their apple.com/science section, so I guess this
should be (somehow) important to them ... maybe we can make an
R-SIG-Mac 20-person-strong tidal wave to help force their hand? ;-)

-steve


On Thu, Oct 21, 2010 at 12:36 PM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
> On Oct 21, 2010, at 7:47 AM, Stefan Evert wrote:
>
>>
>> On 21 Oct 2010, at 03:28, Simon Urbanek wrote:
>>
>>> It's not vague at all, it's MacPro4,1 and MacPro5,1 models (you can use use "sysctl hw.model" to find out what you have). If in doubt, check on Wikipedia ;)
>>>
>>> The latter uses the Nehalem architecture but I don't have a specimen of those so I can't confirm that the bug still holds true for those.
>>
>> Not just those ... I'm plagued by the same problem on my Penryn-based MacBookPro4,1. ?In 64-bit mode, BLAS performance breaks down to single core levels, whereas in 32-bit mode (i.e. R --arch=i386) it uses both cores. ?I posted some benchmark results to this list a few weeks ago.
>>
>
> Well, given that it is only a two-thread CPU there is not much you can gain so I wouldn't lose my sleep over it. If you have 16-theads CPU it's a while different story ;). For illustration, those are the timings from your benchmarks (only those that use BLAS) for 64-bit R 2.12.0 at 10.6.4 on a 2.66GHz MacPro4,1:
>
> test ? ? ? ? ? ? ? ? ? ?R BLAS ?vecLib ?ATLAS ? MKL
> inner M %*% t(M) D ? ? ?19.961 ?3.470 ? 0.519 ? 0.662
> inner tcrossprod D ? ? ?0.658 ? 1.867 ? 0.243 ? 0.235
> inner crossprod t(M) D ?9.574 ? 1.849 ? 0.242 ? 0.256
> cosine normalised D ? ? 0.798 ? 2.009 ? 0.385 ? 0.411
> cosine general D ? ? ? ?0.770 ? 1.993 ? 0.380 ? 0.352
> euclid() D ? ? ? ? ? ? ?2.072 ? 3.271 ? 1.637 ? 1.635
> euclid() small D ? ? ? ?0.515 ? 0.821 ? 0.421 ? 0.395
>
> As you can see both MKL and ATLAS outperform vecLib and R BLAS by an order of magnitude. It's sad, because vecLib used to be fairly well optimized ... (in fact it is actually some version of ATLAS which is even more strange ...).
>
>
>> My solution has also been to switch to the reference BLAS, which outperforms vecLib on most of the operations I benchmarked, except for crossprod(), which is terribly slow (more than 10x slower than tcrossprod()). ?I've just tested again with R 2.12.0, and the situation has become even worse: now an explicit matrix multiplication M %*% t(M) -- which used to be fast -- performs as poorly as crossprod().
>>
>> Any ideas about this? ?The crossprod() slowdown isn't a Mac problem: I got similar results on a Pentium Dual Core laptop running Ubuntu. ?If this is a known problem of the reference BLAS, is there any way to work around it?
>>
>> Apart from the speed hiccups, in my benchmarks vecLib BLAS performed consistently slower than the reference BLAS. ?Is there evidence from other benchmarks / hardware architectures that vecLib can be faster? ?If not, perhaps the default should be _not_ to use vecLib on Mac? ?Or perhaps it would be possible to autodetect hardware in the R startup wrapper and select the BLAS that's known to run faster on this setup?
>>
>
> I don't think we would want to do that since that would prevent the user from choosing the BLAS they want to use. We will probably abandon vecLib as the default for the next release (more due to its numerical instability issues) and maybe provide all three options (vecLib, R BLAS, ATLAS) for the user to choose from in case they have a machine that can take advantage of it.
>
> Cheers,
> Simon
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>



-- 
Steve Lianoglou
Graduate Student: Computational Systems Biology
?| Memorial Sloan-Kettering Cancer Center
?| Weill Medical College of Cornell University
Contact Info: http://cbio.mskcc.org/~lianos/contact


From simon.urbanek at r-project.org  Fri Oct 22 16:17:44 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 22 Oct 2010 10:17:44 -0400
Subject: [R-SIG-Mac] How to determine if a Mac is Nehalem-based
In-Reply-To: <AANLkTi=UkA7RoeZVZ2pz3yFD4wn-LLeYCwA5mJGLawvA@mail.gmail.com>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D1@crcmail4.BCCRC.CA>
	<6EE71DA9-2D16-4B28-A071-FA1849D48C12@r-project.org>
	<F14714D2-D2FF-4F47-B8D7-92EF642C38B3@collocations.de>
	<19BD0318-8283-4A27-B75E-57FF63AA9B6F@r-project.org>
	<AANLkTi=UkA7RoeZVZ2pz3yFD4wn-LLeYCwA5mJGLawvA@mail.gmail.com>
Message-ID: <D5A8B20C-FCC5-4945-99AC-181CA30585D5@r-project.org>


On Oct 22, 2010, at 9:58 AM, Steve Lianoglou wrote:

> Hi,
> 
> Although I should, I don't follow too closely in the places I should
> (I don't know where those places are) to know if Apple is aware of
> this vecLib breakdown issue ... are they? Where can we go to add our
> voices/votes for them to fix it?
> 

The way to go is to file a concise bug report (simply using let's say DGEMM timings) - but I did not have time to do so. If someone else wants to go ahead, let me know and I can pass on the bug # to our contacts at Apple.


> Apple still has their apple.com/science section, so I guess this
> should be (somehow) important to them ... maybe we can make an
> R-SIG-Mac 20-person-strong tidal wave to help force their hand? ;-)
> 

Good question - and it's not only R people that are appalled.

Cheers,
Simon


> 
> 
> On Thu, Oct 21, 2010 at 12:36 PM, Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>> On Oct 21, 2010, at 7:47 AM, Stefan Evert wrote:
>> 
>>> 
>>> On 21 Oct 2010, at 03:28, Simon Urbanek wrote:
>>> 
>>>> It's not vague at all, it's MacPro4,1 and MacPro5,1 models (you can use use "sysctl hw.model" to find out what you have). If in doubt, check on Wikipedia ;)
>>>> 
>>>> The latter uses the Nehalem architecture but I don't have a specimen of those so I can't confirm that the bug still holds true for those.
>>> 
>>> Not just those ... I'm plagued by the same problem on my Penryn-based MacBookPro4,1.  In 64-bit mode, BLAS performance breaks down to single core levels, whereas in 32-bit mode (i.e. R --arch=i386) it uses both cores.  I posted some benchmark results to this list a few weeks ago.
>>> 
>> 
>> Well, given that it is only a two-thread CPU there is not much you can gain so I wouldn't lose my sleep over it. If you have 16-theads CPU it's a while different story ;). For illustration, those are the timings from your benchmarks (only those that use BLAS) for 64-bit R 2.12.0 at 10.6.4 on a 2.66GHz MacPro4,1:
>> 
>> test                    R BLAS  vecLib  ATLAS   MKL
>> inner M %*% t(M) D      19.961  3.470   0.519   0.662
>> inner tcrossprod D      0.658   1.867   0.243   0.235
>> inner crossprod t(M) D  9.574   1.849   0.242   0.256
>> cosine normalised D     0.798   2.009   0.385   0.411
>> cosine general D        0.770   1.993   0.380   0.352
>> euclid() D              2.072   3.271   1.637   1.635
>> euclid() small D        0.515   0.821   0.421   0.395
>> 
>> As you can see both MKL and ATLAS outperform vecLib and R BLAS by an order of magnitude. It's sad, because vecLib used to be fairly well optimized ... (in fact it is actually some version of ATLAS which is even more strange ...).
>> 
>> 
>>> My solution has also been to switch to the reference BLAS, which outperforms vecLib on most of the operations I benchmarked, except for crossprod(), which is terribly slow (more than 10x slower than tcrossprod()).  I've just tested again with R 2.12.0, and the situation has become even worse: now an explicit matrix multiplication M %*% t(M) -- which used to be fast -- performs as poorly as crossprod().
>>> 
>>> Any ideas about this?  The crossprod() slowdown isn't a Mac problem: I got similar results on a Pentium Dual Core laptop running Ubuntu.  If this is a known problem of the reference BLAS, is there any way to work around it?
>>> 
>>> Apart from the speed hiccups, in my benchmarks vecLib BLAS performed consistently slower than the reference BLAS.  Is there evidence from other benchmarks / hardware architectures that vecLib can be faster?  If not, perhaps the default should be _not_ to use vecLib on Mac?  Or perhaps it would be possible to autodetect hardware in the R startup wrapper and select the BLAS that's known to run faster on this setup?
>>> 
>> 
>> I don't think we would want to do that since that would prevent the user from choosing the BLAS they want to use. We will probably abandon vecLib as the default for the next release (more due to its numerical instability issues) and maybe provide all three options (vecLib, R BLAS, ATLAS) for the user to choose from in case they have a machine that can take advantage of it.
>> 
>> Cheers,
>> Simon
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> 
> 
> -- 
> Steve Lianoglou
> Graduate Student: Computational Systems Biology
>  | Memorial Sloan-Kettering Cancer Center
>  | Weill Medical College of Cornell University
> Contact Info: http://cbio.mskcc.org/~lianos/contact
> 
> 


From sirmeelo at gmail.com  Sat Oct 23 15:19:37 2010
From: sirmeelo at gmail.com (sirmeelo at gmail.com)
Date: Sat, 23 Oct 2010 09:19:37 -0400
Subject: [R-SIG-Mac] dates in R
Message-ID: <AANLkTi=HC-m7sOHYhbb=ESTEHzYURORFJwA=GB+JZUDq@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101023/b6fd3fce/attachment.pl>

From bhive01 at gmail.com  Sat Oct 23 15:47:40 2010
From: bhive01 at gmail.com (Brandon Hurr)
Date: Sat, 23 Oct 2010 14:47:40 +0100
Subject: [R-SIG-Mac] dates in R
In-Reply-To: <AANLkTi=HC-m7sOHYhbb=ESTEHzYURORFJwA=GB+JZUDq@mail.gmail.com>
References: <AANLkTi=HC-m7sOHYhbb=ESTEHzYURORFJwA=GB+JZUDq@mail.gmail.com>
Message-ID: <AANLkTimVkjZ2b87YT3jPK+8kpGn=xSZMkQxY1zfkUC8P@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101023/021e5481/attachment.pl>

From r.turner at auckland.ac.nz  Sat Oct 23 23:09:12 2010
From: r.turner at auckland.ac.nz (Turner Rolf)
Date: Sun, 24 Oct 2010 10:09:12 +1300
Subject: [R-SIG-Mac] dates in R
In-Reply-To: <AANLkTi=HC-m7sOHYhbb=ESTEHzYURORFJwA=GB+JZUDq@mail.gmail.com>
References: <AANLkTi=HC-m7sOHYhbb=ESTEHzYURORFJwA=GB+JZUDq@mail.gmail.com>
Message-ID: <2FECBA36D6EF8645A9D736633F186F815EFD7B11F8@foedmail02n>



 sirmeelo at gmail.com [sirmeelo at gmail.com] wrote:

Hi list,

I am having trouble getting R to read and display dates correctly. My dates
are in the form of day (no space) month (no space) year, for example: 250706
and sometimes 50906.

Any guidance would be appreciated...Thanks.

(1) This question has nothing to do with Mac computers.  It should have been sent to r-help.

(2) The problem seems to me to be the inconsistency in the number of digits representing
"day",  To remedy this, paste on a zero and then remove redundant zeroes:

foo <- function(x) {
              x <- paste(0,x,sep="")
              x <- substr(x,nchar(x)-5,nchar(x))
              strptime(x,format="%d%m%y")
}

x <- c(250706,50906)
foo(x)
[1] "2006-07-25" "2006-09-05"

HTH.

     cheers,

           Rolf Turner

From dwinsemius at comcast.net  Sat Oct 23 23:34:50 2010
From: dwinsemius at comcast.net (David Winsemius)
Date: Sat, 23 Oct 2010 14:34:50 -0700
Subject: [R-SIG-Mac] dates in R
In-Reply-To: <2FECBA36D6EF8645A9D736633F186F815EFD7B11F8@foedmail02n>
References: <AANLkTi=HC-m7sOHYhbb=ESTEHzYURORFJwA=GB+JZUDq@mail.gmail.com>
	<2FECBA36D6EF8645A9D736633F186F815EFD7B11F8@foedmail02n>
Message-ID: <C5C5A60F-6242-4161-B61D-3655B4372198@comcast.net>


On Oct 23, 2010, at 2:09 PM, Turner Rolf wrote:

>
>
> sirmeelo at gmail.com [sirmeelo at gmail.com] wrote:
>
> Hi list,
>
> I am having trouble getting R to read and display dates correctly.  
> My dates
> are in the form of day (no space) month (no space) year, for  
> example: 250706
> and sometimes 50906.
>
> Any guidance would be appreciated...Thanks.
>
> (1) This question has nothing to do with Mac computers.  It should  
> have been sent to r-help.
>
> (2) The problem seems to me to be the inconsistency in the number of  
> digits representing
> "day",  To remedy this, paste on a zero and then remove redundant  
> zeroes:
>
> foo <- function(x) {
>              x <- paste(0,x,sep="")
>              x <- substr(x,nchar(x)-5,nchar(x))
>              strptime(x,format="%d%m%y")
> }
>
> x <- c(250706,50906)
> foo(x)
> [1] "2006-07-25" "2006-09-05"

All true. I have had to do steps equivalent to this, but learned from  
my experience. I now use colClasses to import dates as "character"  
rather than numeric.

-- 
David.
>
> HTH.
>
>     cheers,
>
>           Rolf Turner
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From r.turner at auckland.ac.nz  Mon Oct 25 01:53:51 2010
From: r.turner at auckland.ac.nz (Turner Rolf)
Date: Mon, 25 Oct 2010 12:53:51 +1300
Subject: [R-SIG-Mac] dates in R
In-Reply-To: <C5C5A60F-6242-4161-B61D-3655B4372198@comcast.net>
References: <AANLkTi=HC-m7sOHYhbb=ESTEHzYURORFJwA=GB+JZUDq@mail.gmail.com>
	<2FECBA36D6EF8645A9D736633F186F815EFD7B11F8@foedmail02n>,
	<C5C5A60F-6242-4161-B61D-3655B4372198@comcast.net>
Message-ID: <2FECBA36D6EF8645A9D736633F186F815EFD7B11F9@foedmail02n>


________________________________________
From: David Winsemius [dwinsemius at comcast.net]
Sent: Sunday, 24 October 2010 10:34 a.m.
To: Turner Rolf
Cc: sirmeelo at gmail.com; r-sig-mac at stat.math.ethz.ch
Subject: Re: [R-SIG-Mac] dates in R

On Oct 23, 2010, at 2:09 PM, Turner Rolf wrote:

>
>
> sirmeelo at gmail.com [sirmeelo at gmail.com] wrote:
>
> Hi list,
>
> I am having trouble getting R to read and display dates correctly.
> My dates
> are in the form of day (no space) month (no space) year, for
> example: 250706
> and sometimes 50906.
>
> Any guidance would be appreciated...Thanks.
>
> (1) This question has nothing to do with Mac computers.  It should
> have been sent to r-help.
>
> (2) The problem seems to me to be the inconsistency in the number of
> digits representing
> "day",  To remedy this, paste on a zero and then remove redundant
> zeroes:
>
> foo <- function(x) {
>              x <- paste(0,x,sep="")
>              x <- substr(x,nchar(x)-5,nchar(x))
>              strptime(x,format="%d%m%y")
> }
>
> x <- c(250706,50906)
> foo(x)
> [1] "2006-07-25" "2006-09-05"

All true. I have had to do steps equivalent to this, but learned from
my experience. I now use colClasses to import dates as "character"
rather than numeric.

This will work unless the dates are whukked (Maori spelling --- I used to say "whucked" until
it was pointed out to me that there is no "c" in the Maori alphabet; this is a dodge to get around
the censorship imposed by "mailmarshal") up in the original file from which they
are imported. :-)

It is good to be a where that R is very powerful in its facilities for manipulating data and a little
understanding of R's capabilities can rescue you from almost any exigency.

    cheers,

         Rolf

From carl at witthoft.com  Tue Oct 26 01:07:31 2010
From: carl at witthoft.com (Carl Witthoft)
Date: Mon, 25 Oct 2010 19:07:31 -0400
Subject: [R-SIG-Mac] biOps compilation
In-Reply-To: <mailman.19.1285581605.12109.r-sig-mac@stat.math.ethz.ch>
References: <mailman.19.1285581605.12109.r-sig-mac@stat.math.ethz.ch>
Message-ID: <4CC60DB3.8050309@witthoft.com>

Just a point of comparison to the results others got for how biOps 
compiles under Snow Leopard:

Here are the warnings and notices I got when compiling, using the 
R-gui's Package Installer to compile from source:

checking for ANSI C header files... rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory

checking fftw3.h usability... no
checking fftw3.h presence... no
checking for fftw3.h... no
configure: WARNING: Can't find fftw3 header


I haven't exercised many of the functions in the package yet, but this 
seems to be a better result than Simon got.


Carl



---- S. Urbanek's results ----
The package has some issues with detecting TIFF and more over references 
it even though its detection fails -- the error log says:

** testing if installed package can be loaded
Error in dyn.load(file, DLLpath = DLLpath, ...) :
   unable to load shared object 
'/Volumes/Tiger/Builds/Rdev-web/QA/Simon/packages/leopard-universal/results/2.12/biOps.Rcheck/biOps/libs/i386/biOps.so':
 
dlopen(/Volumes/Tiger/Builds/Rdev-web/QA/Simon/packages/leopard-universal/results/2.12/biOps.Rcheck/biOps/libs/i386/biOps.so, 
6): Symbol not found: _TIFFClose
   Referenced from: 
/Volumes/Tiger/Builds/Rdev-web/QA/Simon/packages/leopard-universal/results/2.12/biOps.Rcheck/biOps/libs/i386/biOps.so
   Expected in: dynamic lookup

ERROR: loading failed

While the configuration fails to detect TIFF (because it's using the 
wrong flags) and yet it still does reference it in the code (but not at 
link time):

checking whether gcc -arch i386 -std=gnu99 accepts -g... yes
checking for gcc -arch i386 -std=gnu99 option to accept ISO C89... none 
needed
checking for TIFFOpen in -ltiff... no
[...]
checking tiff.h usability... yes
checking tiff.h presence... yes
checking for tiff.h... yes
[...]
gcc -arch i386 -std=gnu99 -dynamiclib -Wl,-headerpad_max_install_names 
-undefined dynamic_lookup -single_module -multiply_defined suppress 
-L/usr/local/lib -o biO
ps.so arithmetics.o canny.o convolution.o crop.o edge_detection.o 
fft_filters.o fft_funcs.o filter.o gaussian.o interpolation.o isodata.o 
isodata_cluster.o jpegio
.o kdtree.o kmeans.o kmeans_enhanced.o kmeans_kdtree.o logics.o luts.o 
marr_hildreth.o minification.o mirroring.o morphology.o noise_gen.o 
rotate.o scale.o shenca
stan.o tiffio.o translation.o utils.o -lm -ljpeg -lfftw3 
-F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework 
-Wl,CoreFoundation



There are apparently two bugs in biOps:
1) the TIFF detection uses wrong flags - it fails to add dependencies:

configure:2624: checking for TIFFOpen in -ltiff
configure:2659: gcc -arch x86_64 -std=gnu99 -o conftest -g -O2 
conftest.c -ltiff   >&5
Undefined symbols:
   "_jpeg_read_raw_data", referenced from:
       _jpeg_read_raw_data_encap in libtiff.a(tif_ojpeg.o)
       _TIFFjpeg_read_raw_data in libtiff.a(tif_jpeg.o)
   "_jpeg_write_scanlines", referenced from:
       _TIFFjpeg_write_scanlines in libtiff.a(tif_jpeg.o)
   "_jpeg_write_tables", referenced from:
       _TIFFjpeg_write_tables in libtiff.a(tif_jpeg.o)
   "_inflateSync", referenced from:
       _PixarLogDecode in libtiff.a(tif_pixarlog.o)
       _ZIPDecode in libtiff.a(tif_zip.o)
   [...]

so it's missing -ljpeg -lz
In fact it's checking jpeg and TIFF in the inverse order, so chances are 
if check for libz was added first, then jpeg and then tiff that it might 
work properly.

2) it is still referencing libTIFF in the package even though it did not 
link against libTIFF (I didn't dig deeper to see why - likely issue with 
setting a conditional or not respecting it).


From michael.m.spiegel at gmail.com  Thu Oct 21 04:20:46 2010
From: michael.m.spiegel at gmail.com (Michael Spiegel)
Date: Wed, 20 Oct 2010 22:20:46 -0400
Subject: [R-SIG-Mac] daxpy performance with veclib
In-Reply-To: <13D4AF42-51E9-4C1C-9559-0937704A00BB@r-project.org>
References: <AANLkTikKU-HAuCLatVbVAayhPDNhGTrvEbhbdOzuO5dy@mail.gmail.com>
	<13D4AF42-51E9-4C1C-9559-0937704A00BB@r-project.org>
Message-ID: <AANLkTi=gMoiLYUU185QSV6EwQp7E9nuG+XKgGvRt7wQX@mail.gmail.com>

Ah, thanks for the heads up.  It turns out that the problem is
somewhat worse than as you have described.  So not only is vecLib
single threaded on some of BLAS functions (I've noticed that dgemm is
multithreaded), but the vecLib single threaded implementation worse
than the single threaded reference implementation.  I'll follow your
suggestion and give ATLAS a try.  I had poor luck with goto BLAS, our
performance test suite was slower using that implementation.

On Wed, Oct 20, 2010 at 4:29 PM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> Yes, that is a known problem (see R-SIG-Mac archives). vecLib fails to use multiple cores on Nehalem-based Mac Pros. If you use ATLAS directly it will work just fine - that's what we recommend on Mac Pros.
>
> Cheers,
> Simon
>


From mrenner at mun.ca  Thu Oct 21 07:55:16 2010
From: mrenner at mun.ca (Martin Renner)
Date: Wed, 20 Oct 2010 21:55:16 -0800
Subject: [R-SIG-Mac] ATLAS BLAS
In-Reply-To: <B4DD7359-FF4A-453A-BC83-78362ECF2C13@r-project.org>
References: <DCE81E14EB74504B971DAD4D2DB0356B08645684D6@crcmail4.BCCRC.CA>
	<42A869F0-C104-454F-B23B-069BA5E487CE@r-project.org>
	<AANLkTi=xKRjbW7gZnwEomTbtKwgBXv6Dnbm41Ogh-DD2@mail.gmail.com>
	<B4DD7359-FF4A-453A-BC83-78362ECF2C13@r-project.org>
Message-ID: <ABCFA3B9-4CE3-4D89-AD69-126A2BD8B406@mun.ca>

Unfortunately, I can report that the vecLib bug also affects Core i5 processors. At least I see it on a current MacBook Pro, so presumably it would affect current iMacs as well. I've tried to compile Goto's BLAS (as described here at http://github.com/snb/labench/wiki/tips-for-building-gotoblas-and-lapackas ) well as ATLAS but failed in both cases. I've been able to compile ATLAS as a static library, but failed to compile a dynamic library. Any pointers would be greatly appreciated (sorry for running a bit off topic). 

Cheers,
Martin

Martin Renner				
Post-doctoral Fellow		
School of Aquatic and Fishery Sciences
University of Washington	
Seattle, USA





PS: compiling Goto's BLAS with 'make GETARCH_FLAGS=-m32' fails as follows: 

gcc -O2 -DEXPRECISION -m128bit-long-double -Wall -m64 -DF_INTERFACE_GFORT -fPIC  -DSMP_SERVER -DMAX_CPU_NUMBER=4 -DASMNAME=_sgemm_kernel -DASMFNAME=_sgemm_kernel_ -DNAME=sgemm_kernel_ -DCNAME=sgemm_kernel -DCHAR_NAME=\"sgemm_kernel_\" -DCHAR_CNAME=\"sgemm_kernel\" -DNO_AFFINITY -I.. -UDOUBLE  -UCOMPLEX -c -UDOUBLE -UCOMPLEX ../kernel/x86_64/gemm_kernel_8x4_sse3.S -o sgemm_kernel.o
../kernel/x86_64/symv_L_sse.S:418:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_L_sse.S:418:cannot do signed 4 byte relocation
../kernel/x86_64/symv_L_sse.S:437:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_L_sse.S:437:cannot do signed 4 byte relocation
../kernel/x86_64/symv_L_sse.S:462:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_L_sse.S:462:cannot do signed 4 byte relocation
../kernel/x86_64/symv_L_sse.S:503:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_L_sse.S:503:cannot do signed 4 byte relocation
../kernel/x86_64/symv_L_sse.S:522:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_L_sse.S:522:cannot do signed 4 byte relocation
../kernel/x86_64/symv_L_sse.S:547:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_L_sse.S:547:cannot do signed 4 byte relocation
make[1]: *** [ssymv_L.o] Error 1
make[1]: *** Waiting for unfinished jobs....
../kernel/x86_64/symv_U_sse.S:393:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_U_sse.S:393:cannot do signed 4 byte relocation
../kernel/x86_64/symv_U_sse.S:412:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_U_sse.S:412:cannot do signed 4 byte relocation
../kernel/x86_64/symv_U_sse.S:437:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_U_sse.S:437:cannot do signed 4 byte relocation
../kernel/x86_64/symv_U_sse.S:478:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_U_sse.S:478:cannot do signed 4 byte relocation
../kernel/x86_64/symv_U_sse.S:497:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_U_sse.S:497:cannot do signed 4 byte relocation
../kernel/x86_64/symv_U_sse.S:522:32-bit absolute addressing is not supported for x86-64
../kernel/x86_64/symv_U_sse.S:522:cannot do signed 4 byte relocation
make[1]: *** [ssymv_U.o] Error 1
make: *** [libs] Error 1




On 20 Oct 2010, at 19:31 , Simon Urbanek wrote:

> 
> On Oct 20, 2010, at 10:53 PM, huang min wrote:
> 
>> Does this binary of ATLAS also work on a Core 2 Duo cpu? Thanks.
>> 
> 
> It does, but it's optimized for a 16-thread machine, so it will spawn way too many threads for a core 2 duo. Still, I'm surprised that even that can be faster than vecLib (although not by much - 15.7s vs 20.7s on the tcrossprod test). Note that the vecLib bug only affects Mac Pros (AFAICT) so with other machines you can still stick with vecLib.
> 
> Cheers,
> Simon
> 
> 
>> Huang
>> 
>> On Thu, Oct 21, 2010 at 9:39 AM, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> On Oct 20, 2010, at 7:35 PM, Steven McKinney wrote:
>> 
>>> I have R 2.11.1 installed (soon will update to R 2.12) and I appear to have a Nehalem-based Mac Pro.
>>> 
>>> I'm trying to find documentation about how to set up R on my Mac so I'm using the ATLAS BLAS.
>>> 
>> 
>> Well, you have to get it [=ATLAS] first. Then it's as easy as pointing the libRblas.dylib symlink to it.
>> 
>> 
>> I have a binary of ATLAS that you can use if you have Mac OS X 10.6 (Snow Leopard) it's at
>> http://r.research.att.com/libatlas-MacPro.dylib
>> 
>> So the copy/paste steps (you have to be admin) are:
>> 
>> cd /Library/Frameworks/R.framework/Resources/lib
>> curl -O http://r.research.att.com/libatlas-MacPro.dylib
>> chmod a+x libatlas-MacPro.dylib
>> ln -sfn libatlas-MacPro.dylib libRblas.dylib
>> 
>> 
>> ## if you want to go back to vecLib
>> cd /Library/Frameworks/R.framework/Resources/lib
>> ln -sfn libRblas.vecLib.dylib libRblas.dylib
>> 
>> ## if you want to use R's BLAS (not as fast but more reliable)
>> cd /Library/Frameworks/R.framework/Resources/lib
>> ln -sfn libRblas.0.dylib libRblas.dylib
>> 
>> 
>>> I installed this version of R using the Mac installer R-2.11.1.pkg.
>>> Does this installer set up R that uses the ATLAS BLAS, or are there
>>> additional steps I need to take to have R use the ATLAS BLAS?
>>> 
>>> Once R is up and running, can anyone tell me how I can determine
>>> which BLAS R is using?
>>> 
>> 
>> Indirectly, just look at the output of
>> ls -l /Library/Frameworks/R.framework/Resources/lib/libRblas.dylib
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>> Any info appreciated.
>>> 
>>> 
>>> 
>>>> sessionInfo()
>>> R version 2.11.1 (2010-05-31)
>>> x86_64-apple-darwin9.8.0
>>> 
>>> locale:
>>> [1] en_CA.UTF-8/en_CA.UTF-8/C/C/en_CA.UTF-8/en_CA.UTF-8
>>> 
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>> 
>>> loaded via a namespace (and not attached):
>>> [1] tools_2.11.1
>>> 
>>> 
>>> 
>>> 
>>> Steven McKinney
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>>> 
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From harry.erwin at sunderland.ac.uk  Mon Oct 25 10:54:22 2010
From: harry.erwin at sunderland.ac.uk (Harry Erwin)
Date: Mon, 25 Oct 2010 09:54:22 +0100
Subject: [R-SIG-Mac] GUI Bug on Mac
Message-ID: <1FA824A1-2961-424A-AAF6-E381264314F7@sunderland.ac.uk>

25/10/2010 09:49:55	R[1605]	*** RController: caught ObjC exception while processing system events. Update to the latest GUI version and consider reporting this properly (see FAQ) if it persists and is not known. 
*** reason: -[NSLayoutManager _fillLayoutHoleForCharacterRange:desiredNumberOfLines:isSoft:] *** attempted layout while textStorage is editing.  It is not valid to cause the layoutManager to do layout while the textStorage is editing (ie the textStorage has been sent a beginEditing message without a matching endEditing.)
*** name: NSInternalInconsistencyException, info: (null)
*** Version: R 2.12.0 (53317) R.app R for Mac OS X GUI 1.35-dev Leopard build 32-bit/i386
Consider saving your work soon in case this develops into a problem.

It developed into a problem...

--
Harry Erwin
harry.erwin at sunderland.ac.uk
mobile: 07595494289


From simon.urbanek at r-project.org  Tue Oct 26 15:55:47 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 26 Oct 2010 09:55:47 -0400
Subject: [R-SIG-Mac] GUI Bug on Mac
In-Reply-To: <1FA824A1-2961-424A-AAF6-E381264314F7@sunderland.ac.uk>
References: <1FA824A1-2961-424A-AAF6-E381264314F7@sunderland.ac.uk>
Message-ID: <E0E5E017-B823-4E34-8598-940497881A10@r-project.org>


On Oct 25, 2010, at 4:54 AM, Harry Erwin wrote:

> 25/10/2010 09:49:55	R[1605]	*** RController: caught ObjC exception while processing system events. Update to the latest GUI version and consider reporting this properly (see FAQ) if it persists and is not known. 
> *** reason: -[NSLayoutManager _fillLayoutHoleForCharacterRange:desiredNumberOfLines:isSoft:] *** attempted layout while textStorage is editing.  It is not valid to cause the layoutManager to do layout while the textStorage is editing (ie the textStorage has been sent a beginEditing message without a matching endEditing.)
> *** name: NSInternalInconsistencyException, info: (null)
> *** Version: R 2.12.0 (53317) R.app R for Mac OS X GUI 1.35-dev Leopard build 32-bit/i386
> Consider saving your work soon in case this develops into a problem.
> 
> It developed into a problem...
> 

Nice - so will you follow up with the details how to reproduce? This is not "reporting this properly" ;).

Thanks,
Simon


From hpaul.benton08 at imperial.ac.uk  Tue Oct 26 16:40:15 2010
From: hpaul.benton08 at imperial.ac.uk (Benton, Paul)
Date: Tue, 26 Oct 2010 15:40:15 +0100
Subject: [R-SIG-Mac] R check error but install ok?!?!
Message-ID: <DB3FD488-3FBB-4FDB-9AB8-DBBE62313B6A@imperial.ac.uk>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101026/c313b411/attachment.pl>

From ripley at stats.ox.ac.uk  Tue Oct 26 17:03:49 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 26 Oct 2010 16:03:49 +0100 (BST)
Subject: [R-SIG-Mac] R check error but install ok?!?!
In-Reply-To: <DB3FD488-3FBB-4FDB-9AB8-DBBE62313B6A@imperial.ac.uk>
References: <DB3FD488-3FBB-4FDB-9AB8-DBBE62313B6A@imperial.ac.uk>
Message-ID: <alpine.LFD.2.00.1010261555510.17092@gannet.stats.ox.ac.uk>

On Tue, 26 Oct 2010, Benton, Paul wrote:

> Dear all,
>
> I'm trying to check the xcms R package under the new R 2.12.0. I can 
> install the package from the svn code, but when I try to run the 
> check, I get an error saying that it couldn't load the package. 
> However, I'm able to load xcms and use the functions (same checked 
> svn code is installed). Any ideas on what I'm doing wrong would be 
> very helpful.

You are doing a multi-arch check but running R under only the one 
arch.  It seems you have a multi-arch install of R (from CRAN?) but do 
not have a multi-arch build of netcdf.

Using R CMD check --no-multiarch *may* be what you want.

You also seem not to be using a clean set of sources: that too may 
give you problems.

>
> Thank you,
>
> Paul
>
> PS I know I'm not using the new R 2.13.0 for the check and install 
> but its the same on devel code as the current stable.

There is no 'new R 2.13.0', and will not be for months.

>
> ######## checking the  svn code
> sudo R CMD check xcms
> ERROR: sub-architecture 'R' is not installed
> * using log directory ?/Users/hpbenton/xcms/SVN/xcms.Rcheck?
> * using R version 2.12.0 (2010-10-15)
> * using platform: x86_64-apple-darwin9.8.0 (64-bit)
> * using session charset: UTF-8
> * checking for file ?xcms/DESCRIPTION? ... OK
> * this is package ?xcms? version ?1.25.1?
> * checking package name space information ... OK
> * checking package dependencies ... NOTE
> Package which this enhances but not available for checking: Rgraphviz
> * checking if this is a source package ... WARNING
> Subdirectory ?xcms/src? contains object files.
> * checking for executable files ... OK
> * checking whether package ?xcms? can be installed ... OK
> * checking package directory ... OK
> * checking for portable file names ... OK
> * checking for sufficient/correct file permissions ... OK
> .................
> loading checks for arch ?i386?
> ** checking whether the package can be loaded ... ERROR
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>  unable to load shared object '/Users/hpbenton/xcms/SVN/xcms.Rcheck/xcms/libs/i386/xcms.so':
>  dlopen(/Users/hpbenton/xcms/SVN/xcms.Rcheck/xcms/libs/i386/xcms.so, 6): Symbol not found: _nc_close
>  Referenced from: /Users/hpbenton/xcms/SVN/xcms.Rcheck/xcms/libs/i386/xcms.so
>  Expected in: flat namespace
> in /Users/hpbenton/xcms/SVN/xcms.Rcheck/xcms/libs/i386/xcms.so
> Error: package/namespace load failed for 'xcms'
> Execution halted
>
> It looks like this package has a loading problem: see the messages for
> details.
>
> #######Running install
> sudo R CMD INSTALL xcms
> Password:
> * installing to library ?/Library/Frameworks/R.framework/Resources/library?
> * installing *source* package ?xcms? ...
> ** libs
> make: *** No rule to make target `fastMatch.o', needed by `xcms.so'.  Stop.
> *** arch - i386
> ......................
> ld: warning: directory '/sw/lib' following -L not found
> ld: warning: in /usr/local/lib/libnetcdf.dylib, file was built for unsupported file format which is not the architecture being linked (i386)
> installing to /Library/Frameworks/R.framework/Resources/library/xcms/libs/i386
> *** arch - x86_64
> ....................
> ld: warning: directory '/sw/lib' following -L not found
> installing to /Library/Frameworks/R.framework/Resources/library/xcms/libs/x86_64
> ** R
> ** inst
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices ...
> ** testing if installed package can be loaded
>
> * DONE (xcms)
>
>
> ###### But running R and installing xcms
> ###### loading xcms is fine!!!
> R version 2.12.0 (2010-10-15)
> Copyright (C) 2010 The R Foundation for Statistical Computing
> ISBN 3-900051-07-0
> Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
>  Natural language support but running in an English locale
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
>> library(xcms)
>> setwd("~/xcms/Data/")
>
> xr<-xcmsRaw("CRUCIF_VEG_SAMPLE18_NEG01.CDF")
>> xr
> An "xcmsRaw" object with 545 mass spectra
>
> Time range: 2.1-720.9 seconds (0-12 minutes)
> Mass range: 100.0007-999.9885 m/z
> Intensity range: 0-4122
>
> MSn data on  0  mass(es)
> with  0  MSn spectra
> Profile method: bin
> Profile step: 1 m/z (901 grid points from 100 to 1000 m/z)
>
> Memory usage: 1170 MB
>> plotSurf(xr, m=c(200,230), rt=c(100,200))
>
>
>
> 	[[alternative HTML version deleted]]
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From senator at ecotoxicology.de  Wed Oct 27 16:50:36 2010
From: senator at ecotoxicology.de (=?iso-8859-1?Q?Ralf_Sch=E4fer?=)
Date: Wed, 27 Oct 2010 16:50:36 +0200
Subject: [R-SIG-Mac] Special characters not plotted
Message-ID: <827FC8F7-72F7-4472-90AE-9E866B932C84@ecotoxicology.de>

Hello,

I have a problem with the plotting of special characters that just occurred recently.
For example when I use the following code:

plot(1,1)
mtext(expression(phi))

Instead of the special character I get a black square. This actually happens for all special characters in a plot.
Any idea why this occurs? May be even related to fonts on my Mac?

 Hardware Overview:

      Model Name: MacBook Pro
      Model Identifier: MacBookPro3,1
      Processor Name: Intel Core 2 Duo
      Processor Speed: 2,4 GHz
      Number Of Processors: 1
      Total Number Of Cores: 2
      L2 Cache: 4 MB
      Memory: 4 GB
      Bus Speed: 800 MHz
      Boot ROM Version: MBP31.0070.B07

System Version: Mac OS X 10.6.4 (10F569)
      Kernel Version: Darwin 10.4.0
      Boot Volume: Macintosh HD
      Boot Mode: Normal

R version 2.12.0 (2010-10-15)
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

The error is the same on 32-bit...

Thanks for your help in advance!
Ralf


From vincent.philion at irda.qc.ca  Wed Oct 27 18:57:09 2010
From: vincent.philion at irda.qc.ca (Vincent Philion)
Date: Wed, 27 Oct 2010 10:57:09 -0600
Subject: [R-SIG-Mac] R file indexing under Spotlight
Message-ID: <3A4C4F82-6E0D-4E3A-9B5E-10F64DF384EF@irda.qc.ca>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101027/21cf0040/attachment.pl>

From epurdom at stat.berkeley.edu  Wed Oct 27 21:14:45 2010
From: epurdom at stat.berkeley.edu (Elizabeth Purdom)
Date: Wed, 27 Oct 2010 12:14:45 -0700
Subject: [R-SIG-Mac] Rgui freezing on function lookup
Message-ID: <4CC87A25.2060201@stat.berkeley.edu>

Hello,

Lately on my mac OS X (snowleopard) computer, when I run the Rgui it is 
freezing because of its function lookup feature.

Specifically, as I type at the command line, there is a feature where if 
I type "print(" it shows at the bottom the arguments for the print 
function. The problem is when I type a typo (my frequent typo is 
"heaD(") it goes to look this up and completely freezes my Rgui and I 
have to force quit the program. Of course the feature does it as I type, 
so it doesn't matter if I press the backspace to fix it, etc. It's too 
late. I don't remember it doing this before, but now it happens many 
times a day --  I don't know what has changed. It also doesn't do it all 
the time; I think it is related to having set options(error=recover). 
This is because it is producing an error that it can't find heaD as a 
function.

Is there a way to turn off this feature? Failing that, some work around? 
Its not responding to escape/ctrl-c etc.

Thanks,
Elizabeth Purdom

#this is my session info, though clearly not from when I actually had 
the error, because R completely crashes and I can not regain control of 
the program
 > sessionInfo()
R version 2.11.1 (2010-05-31)
x86_64-apple-darwin9.8.0

locale:
[1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] multicore_0.1-3        Rsamtools_1.0.8        Biostrings_2.16.9 
  GenomicFeatures_1.0.10 GenomicRanges_1.0.9    IRanges_1.6.17
[7] XML_3.1-1

loaded via a namespace (and not attached):
[1] Biobase_2.8.0     biomaRt_2.4.0     BSgenome_1.16.5   DBI_0.2-5 
     RCurl_1.4-2       RSQLite_0.9-2     rtracklayer_1.8.1


From dwinsemius at comcast.net  Wed Oct 27 22:01:48 2010
From: dwinsemius at comcast.net (David Winsemius)
Date: Wed, 27 Oct 2010 16:01:48 -0400
Subject: [R-SIG-Mac] Special characters not plotted
In-Reply-To: <827FC8F7-72F7-4472-90AE-9E866B932C84@ecotoxicology.de>
References: <827FC8F7-72F7-4472-90AE-9E866B932C84@ecotoxicology.de>
Message-ID: <F167F3AE-DFEF-49F0-89E8-519C716E382F@comcast.net>


On Oct 27, 2010, at 10:50 AM, Ralf Sch?fer wrote:

> Hello,
>
> I have a problem with the plotting of special characters that just  
> occurred recently.
> For example when I use the following code:
>
> plot(1,1)
> mtext(expression(phi))
>
> Instead of the special character I get a black square. This actually  
> happens for all special characters in a plot.
> Any idea why this occurs? May be even related to fonts on my Mac?

Very possibly. You can try with Font Book.app to see if you have a  
corrupted font. When this happened to me I had two entries for Symbol  
and one of them was corrupt. Deleting that one restored expected  
behavior.

-- 
David. (OSX 10.5.8/ R 2.11.1 /R64.app)

>
> Hardware Overview:
>
>      Model Name: MacBook Pro
>
> System Version: Mac OS X 10.6.4

> Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)
>
> The error is the same on 32-bit...
-- 
>

David Winsemius, MD
West Hartford, CT


From simon.urbanek at r-project.org  Wed Oct 27 22:18:59 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 27 Oct 2010 16:18:59 -0400
Subject: [R-SIG-Mac] R file indexing under Spotlight
In-Reply-To: <3A4C4F82-6E0D-4E3A-9B5E-10F64DF384EF@irda.qc.ca>
References: <3A4C4F82-6E0D-4E3A-9B5E-10F64DF384EF@irda.qc.ca>
Message-ID: <AA4EC874-A7EC-4C95-97C4-727BC236E5B4@r-project.org>


On Oct 27, 2010, at 12:57 PM, Vincent Philion wrote:

> Hi! a few years back, I posted about a R spotlight importer:
> 
> https://stat.ethz.ch/pipermail/r-sig-mac/2007-February/003676.html
> 
> I see no mention of Spotlight in http://cran.r-project.org/bin/macosx/NEWS, so unless I'm mistaken, this isn't installed by default with a new R install on Mac.
> 
> Any chance to see this included?
> 

It's not part of R (neither R.framework nor R.app) - so why should it be included with R? There are many useful plugins for R but there is no reason why they should be included with R itself. Even R packages are not installed by default with R and they bear much closer relationship .... Finally, none of us wrote it and since it is from 2007 it doesn't seem to have a maintainer ....

Cheers,
Simon


> Vincent Philion, agr., M.Sc.
> Phytopathologiste
> Laboratoire de production fruiti?re int?gr?e
> Institut de recherche et de d?veloppement en agroenvironnement
> 
> 335, Rang des vingt-cinq Est
> Case postale 24
> Saint-Bruno-de-Montarville (Qu?bec)  J3V 4P8
> T?l. bureau: 450 653-7368 poste 224
> T?l. laboratoire: 450 653-7368 poste 229
> Cellulaire: 514-623-8275
> T?l?copie: 450 653-1927
> 
> Verger du parc national du Mont-Saint-Bruno
> 330, Rang des vingt-cinq Est
> Case postale 24
> Saint-Bruno-de-Montarville (Qu?bec)  J3V 4P8
> T?l?phone et t?l?copieur : 450 653-8375
> 
> Courriel: vincent.philion at irda.qc.ca<mailto:vincent.philion at irda.qc.ca>
> Site Internet: www.irda.qc.ca<http://www.irda.qc.ca>
> 
> Avez-vous r?ellement besoin d'imprimer ce courriel? Si oui, imprimez-le recto-verso!
> 
> AVIS DE CONFIDENTIALIT?
> Ce message peut contenir de l'information de nature privil?gi?e et confidentielle. Si vous n'?tes pas le destinataire vis? ou croyez l'avoir re?u par erreur, nous vous saurions gr? d'en aviser l'?metteur. Si ce message vous a ?t? transmis par erreur, veuillez le d?truire sans en communiquer le contenu ? d'autres personnes ou le reproduire.
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From simon.urbanek at r-project.org  Wed Oct 27 22:26:46 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 27 Oct 2010 16:26:46 -0400
Subject: [R-SIG-Mac] Rgui freezing on function lookup
In-Reply-To: <4CC87A25.2060201@stat.berkeley.edu>
References: <4CC87A25.2060201@stat.berkeley.edu>
Message-ID: <6CE04693-76C4-45BD-A223-93C4B96544B8@r-project.org>


On Oct 27, 2010, at 3:14 PM, Elizabeth Purdom wrote:

> Hello,
> 
> Lately on my mac OS X (snowleopard) computer, when I run the Rgui it is freezing because of its function lookup feature.
> 
> Specifically, as I type at the command line, there is a feature where if I type "print(" it shows at the bottom the arguments for the print function. The problem is when I type a typo (my frequent typo is "heaD(") it goes to look this up and completely freezes my Rgui and I have to force quit the program. Of course the feature does it as I type, so it doesn't matter if I press the backspace to fix it, etc. It's too late. I don't remember it doing this before, but now it happens many times a day --  I don't know what has changed. It also doesn't do it all the time; I think it is related to having set options(error=recover). This is because it is producing an error that it can't find heaD as a function.
> 

I doubt it  -- partly because I cannot reproduce it and partly because it uses try(..., silent=TRUE) so that the error setting doesn't matter.

Please send me the crash report when it happens so we can have a closer look. Also please try the latest version of R.

Also FWIW I see multicore in your list of packages - you cannot use multicore from the GUI (see ?multicore).

Thanks,
Simon


> Is there a way to turn off this feature? Failing that, some work around? Its not responding to escape/ctrl-c etc.
> 
> Thanks,
> Elizabeth Purdom
> 
> #this is my session info, though clearly not from when I actually had the error, because R completely crashes and I can not regain control of the program
> > sessionInfo()
> R version 2.11.1 (2010-05-31)
> x86_64-apple-darwin9.8.0
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> other attached packages:
> [1] multicore_0.1-3        Rsamtools_1.0.8        Biostrings_2.16.9  GenomicFeatures_1.0.10 GenomicRanges_1.0.9    IRanges_1.6.17
> [7] XML_3.1-1
> 
> loaded via a namespace (and not attached):
> [1] Biobase_2.8.0     biomaRt_2.4.0     BSgenome_1.16.5   DBI_0.2-5     RCurl_1.4-2       RSQLite_0.9-2     rtracklayer_1.8.1
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From quirogagonzalo at gmail.com  Thu Oct 28 14:55:47 2010
From: quirogagonzalo at gmail.com (Biol. Gonzalo Quiroga)
Date: Thu, 28 Oct 2010 09:55:47 -0300
Subject: [R-SIG-Mac] Setting decimal separator
Message-ID: <AANLkTikAcMZOHLUFMSyUCen22s=MnDwbkJsr=5D4SZjh@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101028/4ec571e2/attachment.pl>

From jorgeivanvelez at gmail.com  Thu Oct 28 15:00:57 2010
From: jorgeivanvelez at gmail.com (Jorge Ivan Velez)
Date: Thu, 28 Oct 2010 09:00:57 -0400
Subject: [R-SIG-Mac] Setting decimal separator
In-Reply-To: <AANLkTikAcMZOHLUFMSyUCen22s=MnDwbkJsr=5D4SZjh@mail.gmail.com>
References: <AANLkTikAcMZOHLUFMSyUCen22s=MnDwbkJsr=5D4SZjh@mail.gmail.com>
Message-ID: <AANLkTi=K6qu7PYAJKwSO1dTpZcSVk7dZ0jZj9qWQnAjp@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20101028/c4f53952/attachment.pl>

From epurdom at stat.berkeley.edu  Wed Oct 27 23:11:22 2010
From: epurdom at stat.berkeley.edu (Elizabeth Purdom)
Date: Wed, 27 Oct 2010 14:11:22 -0700
Subject: [R-SIG-Mac] Rgui freezing on function lookup
In-Reply-To: <6CE04693-76C4-45BD-A223-93C4B96544B8@r-project.org>
References: <4CC87A25.2060201@stat.berkeley.edu>
	<6CE04693-76C4-45BD-A223-93C4B96544B8@r-project.org>
Message-ID: <4CC8957A.7090800@stat.berkeley.edu>

Thank you for your quick reply.
> I doubt it  -- partly because I cannot reproduce it and partly because it uses try(..., silent=TRUE) so that the error setting doesn't matter.
The reason I suggested this is that I tried to reproduce the error and 
opened up a new R, so the default error sessions. And when I typed 
heaD(), it didn't crash my program, but did print out the following on 
my screen above the prompt:
'Error in args(heaD) : no function to return from, jumping to top level'
which is why I thought it was creating an error. Then when I then did 
options(error=recover) and typed heaD() it froze R.
> Please send me the crash report when it happens so we can have a closer look. Also please try the latest version of R.
>
How do I get a crash report? There is nothing on the screen to report -- 
R hangs and doesn't ever finish and I have to manually force quit the R 
(using the Mac interface of right clicking on the Rapp button and 
clicking 'Force Quit')  Where is the crash report found?

I'm afraid I can't change R right now because I'm in the middle of a 
data analysis project and can't handle any possible disruption until 
that is finished (R 2.12 only came out a couple of weeks ago). I take it 
that I can't disable the feature in the meantime?
> Also FWIW I see multicore in your list of packages - you cannot use multicore from the GUI (see ?multicore).
>
Yes, thanks. I do know that. I copied 'starter' code from another code 
that I normally run in batch. But nothing I was doing used multicore.

Thanks,
Elizabeth
> Thanks,
> Simon
>
>
>> Is there a way to turn off this feature? Failing that, some work around? Its not responding to escape/ctrl-c etc.
>>
>> Thanks,
>> Elizabeth Purdom
>>
>> #this is my session info, though clearly not from when I actually had the error, because R completely crashes and I can not regain control of the program
>>> sessionInfo()
>> R version 2.11.1 (2010-05-31)
>> x86_64-apple-darwin9.8.0
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> other attached packages:
>> [1] multicore_0.1-3        Rsamtools_1.0.8        Biostrings_2.16.9  GenomicFeatures_1.0.10 GenomicRanges_1.0.9    IRanges_1.6.17
>> [7] XML_3.1-1
>>
>> loaded via a namespace (and not attached):
>> [1] Biobase_2.8.0     biomaRt_2.4.0     BSgenome_1.16.5   DBI_0.2-5     RCurl_1.4-2       RSQLite_0.9-2     rtracklayer_1.8.1
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>>


