From deleeuw at stat.ucla.edu  Sun Jan  3 18:29:31 2010
From: deleeuw at stat.ucla.edu (Jan de Leeuw)
Date: Sun, 3 Jan 2010 09:29:31 -0800
Subject: [R-SIG-Mac] rgl 0.89
In-Reply-To: <B98A87AD-3989-4C10-BAAC-1E4B84E356A6@stat.ucla.edu>
References: <20080724193612.j7g8tr054gs4cos8@imp.inserm.fr>	<488A2663.8020007@stats.uwo.ca>
	<20080726002755.qnll2zfcsg0c0osk@imp.inserm.fr>
	<488A5562.4040901@stats.uwo.ca>
	<B98A87AD-3989-4C10-BAAC-1E4B84E356A6@stat.ucla.edu>
Message-ID: <3829D4DF-4DA7-4D00-961E-8858FC0F27AD@stat.ucla.edu>

rgl_0.89 requires manual intervention to install on OS X. I have to tell
configure where the --x-includes and --x-libraries are (although they are
in the system default location), and then I have to go into src and
manually do R CMD SHLIB  -o aglrgl.so *.cpp *.c. Otherwise the scripts
cannot find X11 again, it seems. No big deal, but it may scare some.
===============================================================
     Jan de Leeuw, 11667 Steinhoff Rd, Frazier Park, CA 93225
     home 661-245-1725 mobile 661-231-5416 work 310-825-9550
     .mac: jdeleeuw +++  aim: deleeuwjan +++ skype: j_deleeuw
===============================================================
 Do you know because I tell you so, or do you know, do you know. 
	 		                 Gertrude Stein


From mfero at fhcrc.org  Tue Jan  5 06:56:25 2010
From: mfero at fhcrc.org (Matthew Fero)
Date: Mon, 4 Jan 2010 21:56:25 -0800
Subject: [R-SIG-Mac] Rd2dvi --pdf
Message-ID: <4FEB90BE-F515-47D3-A742-EE337C36E076@fhcrc.org>

I know this has been addressed before, but I'm not sure I understand the prior comments.  

Does the R Mac binary installer include the latex components necessary to run the 'R CMD Rd2dvi --pdf' command?  If so, where should it be located, because I'm getting the error, "/Library/Frameworks/R.framework/Resources/bin/Rd2dvi: line 233: /usr/texbin/pdflatex: No such file or directory".   If not, any suggestions on an easy way to install a lightweight, compatible latex distribution?

Thanks,

Matthew


From ripley at stats.ox.ac.uk  Tue Jan  5 07:31:59 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 5 Jan 2010 06:31:59 +0000 (GMT)
Subject: [R-SIG-Mac] Rd2dvi --pdf
In-Reply-To: <4FEB90BE-F515-47D3-A742-EE337C36E076@fhcrc.org>
References: <4FEB90BE-F515-47D3-A742-EE337C36E076@fhcrc.org>
Message-ID: <alpine.LFD.2.00.1001050616410.30270@gannet.stats.ox.ac.uk>

On Mon, 4 Jan 2010, Matthew Fero wrote:

> I know this has been addressed before, but I'm not sure I understand 
> the prior comments.
>
> Does the R Mac binary installer include the latex components 
> necessary to run the 'R CMD Rd2dvi --pdf' command?  If so, where

No.  See the FAQ, specifically section 2.1 and

http://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html#TeX-suite-of-tools-for-documentation-_0028optional_0029

Note that these days the 'R Mac binary installer' contains much less 
than it used to, basically just R (not Tcl/Tk for example).

> should it be located, because I'm getting the error, 
> "/Library/Frameworks/R.framework/Resources/bin/Rd2dvi: line 233: 
> /usr/texbin/pdflatex: No such file or directory".  If not, any 
> suggestions on an easy way to install a lightweight, compatible 
> latex distribution?

Unfortunately the CRAN binary of R (which I presume you are using) 
hardocodes the path to the TeX distribution (to values appropriate to 
MacTeX).  Depending on the architecture you are using, look in the 
file named like 
/Library/Frameworks/R.framework/Resources/etc/i386/Renviron and either 
edit the file or set the appropriate environment variables 
appropriately.

MacTeX is not 'lightweight' but you do need quite a lot (including 
fonts) to process Rd format.  So unless you install a comprehensive 
distribution or have one that updates itself on the fly, you are 
likely to spend a lot of time chasing down additional TeX packages.

> Thanks,
>
> Matthew


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From smckinney at bccrc.ca  Wed Jan  6 03:12:54 2010
From: smckinney at bccrc.ca (Steven McKinney)
Date: Tue, 5 Jan 2010 18:12:54 -0800
Subject: [R-SIG-Mac] R-2.10-branch for PPC64
Message-ID: <DCE81E14EB74504B971DAD4D2DB0356B032C625501@crcmail4.BCCRC.CA>

I see today that the R-2.10-branch build
at r.research.att.com shows 
Status:  ppc64: OK

I downloaded and installed R-2.10-branch-leopard.pkg
(Version 2.10.1 Patched (2010-01-04 r50887))
but the R64.app won't start.  I see a message stating
"You can't open the application 'R64.app' because
 it is not supported on this architecture"

The web page suggests "for 64 bit use ... R --arch ppc64 (PowerPC G5) ..."
If I enter the command
$ R --arch ppc64
in a terminal window I see
/usr/bin/R: line 208: /Library/Frameworks/R.framework/Resources/etc/ppc64/ldpaths: No such file or directory

Should the R-2.10-branch-leopard.pkg 64 bit version work on
a PowerPC (Leopard 10.5.8) at this point?  

 

 

Steven McKinney



 

 

 


From simon.urbanek at r-project.org  Thu Jan  7 18:21:14 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 7 Jan 2010 12:21:14 -0500
Subject: [R-SIG-Mac] R-2.10-branch for PPC64
In-Reply-To: <DCE81E14EB74504B971DAD4D2DB0356B032C625501@crcmail4.BCCRC.CA>
References: <DCE81E14EB74504B971DAD4D2DB0356B032C625501@crcmail4.BCCRC.CA>
Message-ID: <38E835E3-F1F8-4246-9373-4BD5B93385F7@r-project.org>


On Jan 5, 2010, at 21:12 , Steven McKinney wrote:

> I see today that the R-2.10-branch build
> at r.research.att.com shows
> Status:  ppc64: OK
>
> I downloaded and installed R-2.10-branch-leopard.pkg
> (Version 2.10.1 Patched (2010-01-04 r50887))
> but the R64.app won't start.  I see a message stating
> "You can't open the application 'R64.app' because
> it is not supported on this architecture"
>
> The web page suggests "for 64 bit use ... R --arch ppc64 (PowerPC  
> G5) ..."
> If I enter the command
> $ R --arch ppc64
> in a terminal window I see
> /usr/bin/R: line 208: /Library/Frameworks/R.framework/Resources/etc/ 
> ppc64/ldpaths: No such file or directory
>
> Should the R-2.10-branch-leopard.pkg 64 bit version work on
> a PowerPC (Leopard 10.5.8) at this point?
>

No - it has been removed since R 2.10.0 and is no longer provided  
(ppc64 is no longer supported by Apple in the current OS). The ppc64  
result is spurious in that it reports the last ppc64 build status  
(which is months ago) - thanks for reporting that - I'll need to  
remove it.

Thanks,
Simon


From simon.urbanek at r-project.org  Thu Jan  7 18:23:49 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 7 Jan 2010 12:23:49 -0500
Subject: [R-SIG-Mac] Rd2dvi --pdf
In-Reply-To: <4FEB90BE-F515-47D3-A742-EE337C36E076@fhcrc.org>
References: <4FEB90BE-F515-47D3-A742-EE337C36E076@fhcrc.org>
Message-ID: <001C1910-9C70-4147-9341-DC0DAD92DFF8@r-project.org>


On Jan 5, 2010, at 0:56 , Matthew Fero wrote:

> I know this has been addressed before, but I'm not sure I understand  
> the prior comments.
>
> Does the R Mac binary installer include the latex components  
> necessary to run the 'R CMD Rd2dvi --pdf' command?

No, see FAQ 2.1.8


>  If so, where should it be located, because I'm getting the error, "/ 
> Library/Frameworks/R.framework/Resources/bin/Rd2dvi: line 233: /usr/ 
> texbin/pdflatex: No such file or directory".   If not, any  
> suggestions on an easy way to install a lightweight, compatible  
> latex distribution?
>

Not really - MacTex is the current standard and the binary you have  
(is that a nightly build?) requires that one (or something at those  
paths).

Cheers,
Simon


From simon.urbanek at r-project.org  Thu Jan  7 18:47:30 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 7 Jan 2010 12:47:30 -0500
Subject: [R-SIG-Mac] Rd2dvi --pdf
In-Reply-To: <alpine.LFD.2.00.1001050616410.30270@gannet.stats.ox.ac.uk>
References: <4FEB90BE-F515-47D3-A742-EE337C36E076@fhcrc.org>
	<alpine.LFD.2.00.1001050616410.30270@gannet.stats.ox.ac.uk>
Message-ID: <5A75FB88-97EC-4E8C-9E41-6AFE35337578@r-project.org>


On Jan 5, 2010, at 1:31 , Prof Brian Ripley wrote:

> On Mon, 4 Jan 2010, Matthew Fero wrote:
>
>> I know this has been addressed before, but I'm not sure I  
>> understand the prior comments.
>>
>> Does the R Mac binary installer include the latex components  
>> necessary to run the 'R CMD Rd2dvi --pdf' command?  If so, where
>
> No.  See the FAQ, specifically section 2.1 and
>
> http://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html#TeX-suite-of-tools-for-documentation-_0028optional_0029
>
> Note that these days the 'R Mac binary installer' contains much less  
> than it used to, basically just R (not Tcl/Tk for example).
>
>> should it be located, because I'm getting the error, "/Library/ 
>> Frameworks/R.framework/Resources/bin/Rd2dvi: line 233: /usr/texbin/ 
>> pdflatex: No such file or directory".  If not, any suggestions on  
>> an easy way to install a lightweight, compatible latex distribution?
>
> Unfortunately the CRAN binary of R (which I presume you are using)  
> hardocodes the path to the TeX distribution (to values appropriate  
> to MacTeX).

Hmm.. this is a bug - since R 2.9.x they are supposed to be stripped  
of paths but apparently in the 2.10.1 Leopard installer they have not  
(I'll verify it at the next release to make sure they are). The only  
binaries that don't strip paths are the nightly builds as they don't  
post-process the values determined by configure (hence my assumption  
that it was a nightly build).

Thanks,
Simon





>  Depending on the architecture you are using, look in the file named  
> like /Library/Frameworks/R.framework/Resources/etc/i386/Renviron and  
> either edit the file or set the appropriate environment variables  
> appropriately.
>
> MacTeX is not 'lightweight' but you do need quite a lot (including  
> fonts) to process Rd format.  So unless you install a comprehensive  
> distribution or have one that updates itself on the fly, you are  
> likely to spend a lot of time chasing down additional TeX packages.
>
>> Thanks,
>>
>> Matthew
>
>
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>


From jackman at stanford.edu  Fri Jan  8 00:20:04 2010
From: jackman at stanford.edu (Simon Jackman)
Date: Thu, 7 Jan 2010 15:20:04 -0800
Subject: [R-SIG-Mac] quartz fonts issue, ever resolved?
Message-ID: <41062795-2B17-462E-B969-785505A68194@stanford.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100107/be317afd/attachment.pl>

From ellis at stat.harvard.edu  Fri Jan  8 01:58:09 2010
From: ellis at stat.harvard.edu (Byron Ellis)
Date: Thu, 7 Jan 2010 16:58:09 -0800
Subject: [R-SIG-Mac] quartz fonts issue, ever resolved?
In-Reply-To: <41062795-2B17-462E-B969-785505A68194@stanford.edu>
References: <41062795-2B17-462E-B969-785505A68194@stanford.edu>
Message-ID: <7098abec1001071658gc29b49rb96cf8271d299c20@mail.gmail.com>

Actually, I do have an answer. I just apparently forgot to write a
post on the subject. :-)

The problem is twofold. The first is that you don't have Arial on your
system and the hard coded fallback font is Arial (according to a note
I left to myself a problem with italics in Helvetica on 10.4 prompted
the decision).

The bigger problem is why you're falling back to that at all--it
should be a very rare occurrence. The problem looks to be that
par()$family is NULL by default which the font lookup code switches to
"default". Of course, when you look at "quartzFonts()" you'll notice
that it only includes valid values for par()$family which are "mono,"
"sans" or "serif." (Courier, Helvetica and Times-Roman respectively by
default).

A quick workaround is par(family="mono").

In the longer term, there appears to be a bug in the way
quartz.options()$family is used (it isn't as far as I can tell) that
I'm going to fix and write a patch for (probably falling back to that
before falling back to Arial).


On Thu, Jan 7, 2010 at 3:20 PM, Simon Jackman <jackman at stanford.edu> wrote:
> I saw some traffic on this list last month
>
> https://stat.ethz.ch/pipermail/r-sig-mac/2009-December/006921.html
>
> re the warnings
>
> no font could be found for family "Arial"
>
> when using a quartz device. ?Was this ever resolved? ?I'm getting the same behavior with 2.10 (and later) but *not* when using the Urbanek/Iacus GUI (1.32 5546 Leopard). ? R from a terminal window (or ESS) produces the "text-less" graphs and warnings when using a quartz device; see the output below. ?Thanks in advance for any guidance.
>
> Simon Jackman, Depts of Political Science & (by courtesy) Statistics,
> Stanford University, Stanford, CA 94305-6044, USA.
> http://jackman.stanford.edu
>
>> system("uname -v")
> Darwin Kernel Version 10.2.0: Tue Nov ?3 10:37:10 PST 2009; root:xnu-1486.2.11~1/RELEASE_I386
>> version
> ? ? ? ? ? ? ? _
> platform ? ? ? x86_64-apple-darwin9.8.0
> arch ? ? ? ? ? x86_64
> os ? ? ? ? ? ? darwin9.8.0
> system ? ? ? ? x86_64, darwin9.8.0
> status ? ? ? ? Patched
> major ? ? ? ? ?2
> minor ? ? ? ? ?10.1
> year ? ? ? ? ? 2010
> month ? ? ? ? ?01
> day ? ? ? ? ? ?06
> svn rev ? ? ? ?50921
> language ? ? ? R
> version.string R version 2.10.1 Patched (2010-01-06 r50921)
>> plot(1:10)
> There were 17 warnings (use warnings() to see them)
>> warnings()
> Warning messages:
> 1: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 2: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 3: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 4: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 5: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 6: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 7: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 8: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 9: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 10: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 11: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 12: In axis(side = side, at = at, labels = labels, ...) :
> ?no font could be found for family "Arial"
> 13: In title(...) : no font could be found for family "Arial"
> 14: In title(...) : no font could be found for family "Arial"
> 15: In title(...) : no font could be found for family "Arial"
> 16: In title(...) : no font could be found for family "Arial"
> 17: In title(...) : no font could be found for family "Arial"
>> quartz.options()
> $title
> [1] "Quartz %d"
>
> $width
> [1] 7
>
> $height
> [1] 7
>
> $pointsize
> [1] 12
>
> $family
> [1] "Helvetica"
>
> $fontsmooth
> [1] TRUE
>
> $antialias
> [1] TRUE
>
> $type
> [1] "native"
>
> $bg
> [1] "transparent"
>
> $canvas
> [1] "white"
>
> $dpi
> [1] NA
>
>
>
>
>
> ? ? ? ?[[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>



-- 
Byron Ellis (byron.ellis at gmail.com)
"Oook" -- The Librarian


From jackman at stanford.edu  Fri Jan  8 02:55:40 2010
From: jackman at stanford.edu (Simon Jackman)
Date: Thu, 7 Jan 2010 17:55:40 -0800
Subject: [R-SIG-Mac] quartz fonts issue, ever resolved?
In-Reply-To: <7098abec1001071658gc29b49rb96cf8271d299c20@mail.gmail.com>
References: <41062795-2B17-462E-B969-785505A68194@stanford.edu>
	<7098abec1001071658gc29b49rb96cf8271d299c20@mail.gmail.com>
Message-ID: <4B3139A5-BA67-4616-A691-47A20AB94152@stanford.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100107/9862629d/attachment.pl>

From pintarello at gmail.com  Fri Jan  8 15:13:02 2010
From: pintarello at gmail.com (Massimo Pinto)
Date: Fri, 8 Jan 2010 15:13:02 +0100
Subject: [R-SIG-Mac] unprecedented errors at start-up
In-Reply-To: <D4A35CB4-AC99-4B1A-ACDC-1B8468CF5E9D@r-project.org>
References: <746b43cb0912220634g47781ca9j5dac8ac8a0f10f29@mail.gmail.com> 
	<15F25D59-4880-4DC3-8176-2552696E2923@r-project.org>
	<746b43cb0912221007m416e1b9ekdd2e234fc922c2d7@mail.gmail.com> 
	<D4A35CB4-AC99-4B1A-ACDC-1B8468CF5E9D@r-project.org>
Message-ID: <746b43cb1001080613j3e7469f3p368ebd821be3c289@mail.gmail.com>

Dear Simon and all list subscribers,

Happy New Year!

Back to a problem that I had at Christmas time, when I could not
install any new BioC packages in R. I ended up re-installing the
operating system from scratch, as you Simon suggested, with Xcode, but
got only partial success. R can now find gcc and several more programs
(see below). When I try to install Rgraphviz either from source or
from Mac Binary, again tar notifies me that it could not set the
default locale and cannot complete the installation.

Just to be sure, I also downloaded the Mac binary and the source
"tarball" and tried a manual installation:

:> install.packages("/Users/massimopinto/Downloads/Rgraphviz_1.24.0.tgz",
repos=NULL, lib="/Users/massimopinto/Library/R/2.10/library",
type="mac.binary")
tar: Failed to set default locale

but to no avail. Does this provide any extra elements as to how to proceed?
Thank you in advance,
Yours Truly
Massimo

installation log follows.
-----
During startup - Warning messages:
1: Setting LC_CTYPE failed, using "C"
2: Setting LC_TIME failed, using "C"
3: Setting LC_MESSAGES failed, using "C"
tar: Failed to set default locale
* installing *source* package 'Rgraphviz' ...
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for stdbool.h that conforms to C99... yes
checking for _Bool... yes
checking for whether compiler has bool... yes
configure: No --with-graphviz option was specified. Trying to find
Graphviz using other methods.
checking for pkg-config... no
checking for dotneato-config... no
configure: dotneato-config not found in PATH.
configure: Using default directory /usr/local, consider specifiying
--with-graphviz
configure: error: /usr/local/bin/dot not found.  Check Graphviz installation.
ERROR: configuration failed for package 'Rgraphviz'
* removing '/Library/Frameworks/R.framework/Versions/2.10/Resources/library/Rgraphviz'
* restoring previous
'/Library/Frameworks/R.framework/Versions/2.10/Resources/library/Rgraphviz'
------



Massimo Pinto
Post Doctoral Research Fellow
Enrico Fermi Centre and Italian Public Health Research Institute (ISS), Rome
http://claimid.com/massimopinto



On Tue, Dec 22, 2009 at 19:22, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> On Dec 22, 2009, at 1:07 PM, Massimo Pinto wrote:
>
>> Thank you Simon. I have tried the changing locale option but got no
>> result. When you allude to restoring permissions, what are the files
>> that you have in mind?
>
> I meant fix permissions using Disk Utility - the usual step to take on a OS that acts funny, but I suspect you may have to re-install OS X in the end (the issue is not R-specific pretty much everything will fail on the locales as you can see from tar ...)
>
> (BTW: you don't have Xcode installed so the failed source installation is due to that which is unrelated to the locales...).
>
> Cheers,
> Simon
>
>
>> Cheers
>> Massimo
>>
>>
>> On Tue, Dec 22, 2009 at 16:44, Simon Urbanek
>> <simon.urbanek at r-project.org> wrote:
>>>
>>> On Dec 22, 2009, at 9:34 , Massimo Pinto wrote:
>>>
>>>> Greetings all
>>>>
>>>> I have left R aside for about a week and upon going back to it I have
>>>> found errors which I had not encountered before. I have upgraded to
>>>> OSX 10.6 recently and these errors may be a consequence of such
>>>> upgrade.
>>>>
>>>
>>> Seems like it. Your system locales seem to be completely messed up. Seems
>>> like Archive&Install is probably what you want to do ... I have never seen
>>> this before so I don't know why your OS broke so badly. You may try the
>>> usual restore permissions, change locale, re-install OS X etc.
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>> A first error encountered at start-up refers to the use of my locale:
>>>>
>>>> ========
>>>>
>>>> During startup - Warning messages:
>>>> 1: Setting LC_CTYPE failed, using "C"
>>>> 2: Setting LC_COLLATE failed, using "C"
>>>> 3: Setting LC_TIME failed, using "C"
>>>> 4: Setting LC_MESSAGES failed, using "C"
>>>> [R.app GUI 1.31 (5537) i386-apple-darwin9.8.0]
>>>>
>>>> WARNING: You're using a non-UTF8 locale, therefore only ASCII
>>>> characters will work.
>>>> Please read R for Mac OS X FAQ (see Help) section 9 and adjust your
>>>> system preferences accordingly.
>>>>
>>>> ============
>>>>
>>>> when trying to install a binary package from BioConductor, using the R
>>>> GUI, I get:
>>>>
>>>> =-===========
>>>> The downloaded packages are in
>>>>
>>>> ??/private/var/folders/vM/vMSy+Iu8HwS2jf2eaEcYFU+++TI/-Tmp-/RtmpipsYIY/downloaded_packages?
>>>> trying URL
>>>> 'http://www.bioconductor.org/packages/2.5/bioc/bin/macosx/leopard/contrib/2.10/Rgraphviz_1.24.0.tgz'
>>>> Content type 'application/x-gzip' length 800621 bytes (781 Kb)
>>>> opened URL
>>>>
>>>> downloaded 781 Kb
>>>>
>>>> tar: Failed to set default locale
>>>> ===============================================
>>>>
>>>> similarly, when trying a source package:
>>>>
>>>> =========
>>>> trying URL
>>>> 'http://www.bioconductor.org/packages/2.5/bioc/src/contrib/Rgraphviz_1.24.0.tar.gz'
>>>> Content type 'application/x-gzip' length 571761 bytes (558 Kb)
>>>> opened URL
>>>> ==================================================
>>>> downloaded 558 Kb
>>>>
>>>> During startup - Warning messages:
>>>> 1: Setting LC_CTYPE failed, using "C"
>>>> 2: Setting LC_TIME failed, using "C"
>>>> 3: Setting LC_MESSAGES failed, using "C"
>>>> tar: Failed to set default locale
>>>> * installing *source* package 'Rgraphviz' ...
>>>> checking for gcc... no
>>>> checking for cc... no
>>>> checking for cl.exe... no
>>>> configure: error: no acceptable C compiler found in $PATH
>>>> See `config.log' for more details.
>>>> ERROR: configuration failed for package 'Rgraphviz'
>>>> * removing
>>>> '/Library/Frameworks/R.framework/Versions/2.10/Resources/library/Rgraphviz'
>>>> * restoring previous
>>>>
>>>> '/Library/Frameworks/R.framework/Versions/2.10/Resources/library/Rgraphviz'
>>>> ============================
>>>>
>>>> This situation won't change if I set the locale to
>>>>
>>>>> Sys.setlocale("LC_ALL", "en_GB.UTF-8")
>>>>
>>>> Has anyone experienced this before?
>>>> Thank you in advance
>>>> Massimo
>>>>
>>>>> sessionInfo()
>>>>
>>>> R version 2.10.1 (2009-12-14)
>>>> i386-apple-darwin9.8.0
>>>>
>>>> locale:
>>>> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
>>>>
>>>> attached base packages:
>>>> [1] grid ? ? ?stats ? ? graphics ?grDevices utils ? ? datasets
>>>> methods ? base
>>>>
>>>> other attached packages:
>>>> [1] graph_1.22.2
>>>>
>>>> loaded via a namespace (and not attached):
>>>> [1] tools_2.10.1
>>>>
>>>> Massimo Pinto
>>>> Post Doctoral Research Fellow
>>>> Enrico Fermi Centre and Italian Public Health Research Institute (ISS),
>>>> Rome
>>>> http://claimid.com/massimopinto
>>>>
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at stat.math.ethz.ch
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>
>>>>
>>>
>>>
>>
>>
>
>


From dwinsemius at comcast.net  Fri Jan  8 16:13:18 2010
From: dwinsemius at comcast.net (David Winsemius)
Date: Fri, 8 Jan 2010 10:13:18 -0500
Subject: [R-SIG-Mac] unprecedented errors at start-up
In-Reply-To: <746b43cb1001080613j3e7469f3p368ebd821be3c289@mail.gmail.com>
References: <746b43cb0912220634g47781ca9j5dac8ac8a0f10f29@mail.gmail.com>
	<15F25D59-4880-4DC3-8176-2552696E2923@r-project.org>
	<746b43cb0912221007m416e1b9ekdd2e234fc922c2d7@mail.gmail.com>
	<D4A35CB4-AC99-4B1A-ACDC-1B8468CF5E9D@r-project.org>
	<746b43cb1001080613j3e7469f3p368ebd821be3c289@mail.gmail.com>
Message-ID: <45B7547C-1849-458F-AABE-6393143BEC88@comcast.net>


On Jan 8, 2010, at 9:13 AM, Massimo Pinto wrote:

> Dear Simon and all list subscribers,
>
> Happy New Year!
>
> Back to a problem that I had at Christmas time, when I could not
> install any new BioC packages in R. I ended up re-installing the
> operating system from scratch, as you Simon suggested, with Xcode, but
> got only partial success. R can now find gcc and several more programs
> (see below). When I try to install Rgraphviz either from source or
> from Mac Binary, again tar notifies me that it could not set the
> default locale and cannot complete the installation.
>
> Just to be sure, I also downloaded the Mac binary and the source
> "tarball" and tried a manual installation:
>
> :> install.packages("/Users/massimopinto/Downloads/ 
> Rgraphviz_1.24.0.tgz",
> repos=NULL, lib="/Users/massimopinto/Library/R/2.10/library",
> type="mac.binary")
> tar: Failed to set default locale
>
> but to no avail. Does this provide any extra elements as to how to  
> proceed?
> Thank you in advance,
> Yours Truly
> Massimo
>
> installation log follows.
> -----
> During startup - Warning messages:
> 1: Setting LC_CTYPE failed, using "C"
> 2: Setting LC_TIME failed, using "C"

> snipped

> checking for whether compiler has bool... yes
> configure: No --with-graphviz option was specified. Trying to find
> Graphviz using other methods.
> checking for pkg-config... no
> checking for dotneato-config... no
> configure: dotneato-config not found in PATH.
> configure: Using default directory /usr/local, consider specifiying
> --with-graphviz
> configure: error: /usr/local/bin/dot not found.  Check Graphviz  
> installation.
> ERROR: configuration failed for package 'Rgraphviz'

It's also telling you that Graphviz was not installed. It's possible  
that the error regarding locale is not the critical problem.

-- 
David


> * removing '/Library/Frameworks/R.framework/Versions/2.10/Resources/ 
> library/Rgraphviz'
> * restoring previous
> '/Library/Frameworks/R.framework/Versions/2.10/Resources/library/ 
> Rgraphviz'
> ------
>
>
>
> Massimo Pinto
> Post Doctoral Research Fellow
> Enrico Fermi Centre and Italian Public Health Research Institute  
> (ISS), Rome
> http://claimid.com/massimopinto
>
>
>
> On Tue, Dec 22, 2009 at 19:22, Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>>
>> On Dec 22, 2009, at 1:07 PM, Massimo Pinto wrote:
>>
>>> Thank you Simon. I have tried the changing locale option but got no
>>> result. When you allude to restoring permissions, what are the files
>>> that you have in mind?
>>
>> I meant fix permissions using Disk Utility - the usual step to take  
>> on a OS that acts funny, but I suspect you may have to re-install  
>> OS X in the end (the issue is not R-specific pretty much everything  
>> will fail on the locales as you can see from tar ...)
>>
>> (BTW: you don't have Xcode installed so the failed source  
>> installation is due to that which is unrelated to the locales...).
>>
>> Cheers,
>> Simon
>>
>>
>>> Cheers
>>> Massimo
>>>
>>>
>>> On Tue, Dec 22, 2009 at 16:44, Simon Urbanek
>>> <simon.urbanek at r-project.org> wrote:
>>>>
>>>> On Dec 22, 2009, at 9:34 , Massimo Pinto wrote:
>>>>
>>>>> Greetings all
>>>>>
>>>>> I have left R aside for about a week and upon going back to it I  
>>>>> have
>>>>> found errors which I had not encountered before. I have upgraded  
>>>>> to
>>>>> OSX 10.6 recently and these errors may be a consequence of such
>>>>> upgrade.
>>>>>
>>>>
>>>> Seems like it. Your system locales seem to be completely messed  
>>>> up. Seems
>>>> like Archive&Install is probably what you want to do ... I have  
>>>> never seen
>>>> this before so I don't know why your OS broke so badly. You may  
>>>> try the
>>>> usual restore permissions, change locale, re-install OS X etc.
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>>
>>>>> A first error encountered at start-up refers to the use of my  
>>>>> locale:
>>>>>
>>>>> ========
>>>>>
>>>>> During startup - Warning messages:
>>>>> 1: Setting LC_CTYPE failed, using "C"
>>>>> 2: Setting LC_COLLATE failed, using "C"
>>>>> 3: Setting LC_TIME failed, using "C"
>>>>> 4: Setting LC_MESSAGES failed, using "C"
>>>>> [R.app GUI 1.31 (5537) i386-apple-darwin9.8.0]
>>>>>
>>>>> WARNING: You're using a non-UTF8 locale, therefore only ASCII
>>>>> characters will work.
>>>>> Please read R for Mac OS X FAQ (see Help) section 9 and adjust  
>>>>> your
>>>>> system preferences accordingly.
>>>>>
>>>>> ============
>>>>>
>>>>> when trying to install a binary package from BioConductor, using  
>>>>> the R
>>>>> GUI, I get:
>>>>>
>>>>> =-===========
>>>>> The downloaded packages are in
>>>>>
>>>>>  ?/private/var/folders/vM/vMSy+Iu8HwS2jf2eaEcYFU+++TI/-Tmp-/ 
>>>>> RtmpipsYIY/downloaded_packages?
>>>>> trying URL
>>>>> 'http://www.bioconductor.org/packages/2.5/bioc/bin/macosx/leopard/contrib/2.10/Rgraphviz_1.24.0.tgz'
>>>>> Content type 'application/x-gzip' length 800621 bytes (781 Kb)
>>>>> opened URL
>>>>>
>>>>> downloaded 781 Kb
>>>>>
>>>>> tar: Failed to set default locale
>>>>> ===============================================
>>>>>
>>>>> similarly, when trying a source package:
>>>>>
>>>>> =========
>>>>> trying URL
>>>>> 'http://www.bioconductor.org/packages/2.5/bioc/src/contrib/Rgraphviz_1.24.0.tar.gz'
>>>>> Content type 'application/x-gzip' length 571761 bytes (558 Kb)
>>>>> opened URL
>>>>> ==================================================
>>>>> downloaded 558 Kb
>>>>>
>>>>> During startup - Warning messages:
>>>>> 1: Setting LC_CTYPE failed, using "C"
>>>>> 2: Setting LC_TIME failed, using "C"
>>>>> 3: Setting LC_MESSAGES failed, using "C"
>>>>> tar: Failed to set default locale
>>>>> * installing *source* package 'Rgraphviz' ...
>>>>> checking for gcc... no
>>>>> checking for cc... no
>>>>> checking for cl.exe... no
>>>>> configure: error: no acceptable C compiler found in $PATH
>>>>> See `config.log' for more details.
>>>>> ERROR: configuration failed for package 'Rgraphviz'
>>>>> * removing
>>>>> '/Library/Frameworks/R.framework/Versions/2.10/Resources/library/ 
>>>>> Rgraphviz'
>>>>> * restoring previous
>>>>>
>>>>> '/Library/Frameworks/R.framework/Versions/2.10/Resources/library/ 
>>>>> Rgraphviz'
>>>>> ============================
>>>>>
>>>>> This situation won't change if I set the locale to
>>>>>
>>>>>> Sys.setlocale("LC_ALL", "en_GB.UTF-8")
>>>>>
>>>>> Has anyone experienced this before?
>>>>> Thank you in advance
>>>>> Massimo
>>>>>
>>>>>> sessionInfo()
>>>>>
>>>>> R version 2.10.1 (2009-12-14)
>>>>> i386-apple-darwin9.8.0
>>>>>
>>>>> locale:
>>>>> [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
>>>>>
>>>>> attached base packages:
>>>>> [1] grid      stats     graphics  grDevices utils     datasets
>>>>> methods   base
>>>>>
>>>>> other attached packages:
>>>>> [1] graph_1.22.2
>>>>>
>>>>> loaded via a namespace (and not attached):
>>>>> [1] tools_2.10.1
>>>>>
>>>>> Massimo Pinto
>>>>> Post Doctoral Research Fellow
>>>>> Enrico Fermi Centre and Italian Public Health Research Institute  
>>>>> (ISS),
>>>>> Rome
>>>>> http://claimid.com/massimopinto
>>>>>
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>
>>>>>
>>>>
>>>>
>>>
>>>
>>
>>
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

David Winsemius, MD
Heritage Laboratories
West Hartford, CT


From betsy.nichols at plexlogic.com  Fri Jan  8 16:47:56 2010
From: betsy.nichols at plexlogic.com (Elizabeth Nichols)
Date: Fri, 8 Jan 2010 10:47:56 -0500
Subject: [R-SIG-Mac] rggobi: Installation problems on OS X Snow Leopard
Message-ID: <3cdb33c61001080747u37613a2bs39eda15f4a48d48e@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100108/c0a50b19/attachment.pl>

From simon.urbanek at r-project.org  Fri Jan  8 17:19:26 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 8 Jan 2010 11:19:26 -0500
Subject: [R-SIG-Mac] rggobi: Installation problems on OS X Snow Leopard
In-Reply-To: <3cdb33c61001080747u37613a2bs39eda15f4a48d48e@mail.gmail.com>
References: <3cdb33c61001080747u37613a2bs39eda15f4a48d48e@mail.gmail.com>
Message-ID: <018AA815-4DE4-44A6-A3F8-C517D21D80C1@r-project.org>

Elisabeth,

rggobi is currently not available from CRAN because RGtk2 (which is  
required by rggobi) does not work with 64-bit R.

You can try to compile your own rggobi in 32-bit (at your own risk) as  
follows:

a) install Xcode from the Snow Leopard DVD (if you didn't already)

b) download and install GTK+ and ggobi -- e.g. by typing this in the  
Terminal:

cd /tmp
curl -O http://r.research.att.com/libs/GTK+_2.14.3-X11-darwin8-bin2.tar.gz
curl -O http://r.research.att.com/libs/ggobi-2.1.8-darwin8-bin2.tar.gz
# after the next line it will ask you for your password
sudo tar fxz GTK+_2.14.3-X11-darwin8-bin2.tar.gz -C /
sudo tar fxz ggobi-2.1.8-darwin8-bin2.tar.gz -C /
rm -f GTK+_2.14.3-X11-darwin8-bin2.tar.gz
rm -f ggobi-2.1.8-darwin8-bin2.tar.gz

c) install RGtk2 and rggobi form sources -- again in Terminal:

export PATH=/Library/Frameworks/GTK+.framework/Resources/bin:/usr/ 
local/ggobi/bin:$PATH
export PKG_CONFIG_PATH=/Library/Frameworks/GTK+.framework/Resources/ 
lib/pkgconfig:/usr/local/ggobi/lib/pkgconfig

cd /tmp
curl -O http://cran.at.r-project.org/src/contrib/RGtk2_2.12.15.tar.gz
curl -O http://cran.at.r-project.org/src/contrib/rggobi_2.1.14.tar.gz

# this will take forever so be patient ...
R --arch=i386 CMD INSTALL RGtk2_2.12.15.tar.gz
R --arch=i386 CMD INSTALL rggobi_2.1.14.tar.gz

# that's it -- note that you'll need X11 of course

Cheers,
Simon



On Jan 8, 2010, at 10:47 , Elizabeth Nichols wrote:

> Hello:
> I have successfully installed both R and R64  for Apple OS X from
> CRAN  plus GTK+2.14 and GGobi 2.1.8 from:
> http://www.ggobi.org/downloads
>
> I launch either R or R64 and try to install the rrgobi package and get
> (with R64) the following:
>
> R version 2.10.1 (2009-12-14)
> Copyright (C) 2009 The R Foundation for Statistical Computing
> ISBN 3-900051-07-0
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
> Natural language support but running in an English locale
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
> [R.app GUI 1.31 (5537) x86_64-apple-darwin9.8.0]
>
>> install.packages("rggobi")
> --- Please select a CRAN mirror for use in this session ---
> Warning message:
> In getDependencies(pkgs, dependencies, available, lib) :
> package ?rggobi? is not available
>>
>
> I get substantially the same thing with R.
>
> Here is some info about my OS:
> System Version:       Mac OS X 10.6.2 (10C540)
> Kernel Version:       Darwin 10.2.0
> Boot Mode:    Normal
> Secure Virtual Memory:        Not Enabled
> 64-bit Kernel and Extensions: No
>
> What am I doing wrong?  Any help would be MOST appreciated.
> Thanks
> Betsy
>
>
> -- 
> Elizabeth A. Nichols, Ph.D.
> CTO for Metrics | PlexLogic, LLC
> Great Falls | VA 22066
> 703.963.7202
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From simon.urbanek at r-project.org  Fri Jan  8 18:10:20 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 8 Jan 2010 12:10:20 -0500
Subject: [R-SIG-Mac] New GTK+ [Was: rggobi: Installation problems on OS X
	Snow Leopard]
In-Reply-To: <018AA815-4DE4-44A6-A3F8-C517D21D80C1@r-project.org>
References: <3cdb33c61001080747u37613a2bs39eda15f4a48d48e@mail.gmail.com>
	<018AA815-4DE4-44A6-A3F8-C517D21D80C1@r-project.org>
Message-ID: <D12D1872-7CB0-4974-86AD-ACFDB626C4AE@r-project.org>

Actually, I have finally managed to get GTK+ to work even in 64-bit  
(at least most of it) and I have also compiled the corresponding  
rggobi binary. However, this requires an updated GTK+ framework as  
well as a new ggobi version. It will only work on Mac OS X 10.5 or  
10.6 (hence the Leopard build only). To install:

a) install new GTK+ and ggobi:

cd /tmp
curl -O http://r.research.att.com/libs/GTK+_2.18.5-X11-darwin9-bin3.tar.gz
curl -O http://r.research.att.com/libs/ggobi-2.1.8-darwin9-bin3.tar.gz
sudo tar fxz GTK+_2.18.5-X11-darwin9-bin3.tar.gz -C /
sudo tar fxz ggobi-2.1.8-darwin9-bin3.tar.gz -C /

b) in R install the packages form the Mac binary master server:

install.packages(c("RGtk2", "rggobi"),,"http://r.urbanek.info/")

(They will propagate to CRAN mirrors within a day or so).

Eventually I'll turn the GTK+ tar ball into an installer package so if  
the above scares you stay tuned.

Cheers,
Simon



On Jan 8, 2010, at 11:19 , Simon Urbanek wrote:

> Elisabeth,
>
> rggobi is currently not available from CRAN because RGtk2 (which is  
> required by rggobi) does not work with 64-bit R.
>
> You can try to compile your own rggobi in 32-bit (at your own risk)  
> as follows:
>
> a) install Xcode from the Snow Leopard DVD (if you didn't already)
>
> b) download and install GTK+ and ggobi -- e.g. by typing this in the  
> Terminal:
>
> cd /tmp
> curl -O http://r.research.att.com/libs/GTK+_2.14.3-X11-darwin8-bin2.tar.gz
> curl -O http://r.research.att.com/libs/ggobi-2.1.8-darwin8-bin2.tar.gz
> # after the next line it will ask you for your password
> sudo tar fxz GTK+_2.14.3-X11-darwin8-bin2.tar.gz -C /
> sudo tar fxz ggobi-2.1.8-darwin8-bin2.tar.gz -C /
> rm -f GTK+_2.14.3-X11-darwin8-bin2.tar.gz
> rm -f ggobi-2.1.8-darwin8-bin2.tar.gz
>
> c) install RGtk2 and rggobi form sources -- again in Terminal:
>
> export PATH=/Library/Frameworks/GTK+.framework/Resources/bin:/usr/ 
> local/ggobi/bin:$PATH
> export PKG_CONFIG_PATH=/Library/Frameworks/GTK+.framework/Resources/ 
> lib/pkgconfig:/usr/local/ggobi/lib/pkgconfig
>
> cd /tmp
> curl -O http://cran.at.r-project.org/src/contrib/RGtk2_2.12.15.tar.gz
> curl -O http://cran.at.r-project.org/src/contrib/rggobi_2.1.14.tar.gz
>
> # this will take forever so be patient ...
> R --arch=i386 CMD INSTALL RGtk2_2.12.15.tar.gz
> R --arch=i386 CMD INSTALL rggobi_2.1.14.tar.gz
>
> # that's it -- note that you'll need X11 of course
>
> Cheers,
> Simon
>
>
>
> On Jan 8, 2010, at 10:47 , Elizabeth Nichols wrote:
>
>> Hello:
>> I have successfully installed both R and R64  for Apple OS X from
>> CRAN  plus GTK+2.14 and GGobi 2.1.8 from:
>> http://www.ggobi.org/downloads
>>
>> I launch either R or R64 and try to install the rrgobi package and  
>> get
>> (with R64) the following:
>>
>> R version 2.10.1 (2009-12-14)
>> Copyright (C) 2009 The R Foundation for Statistical Computing
>> ISBN 3-900051-07-0
>>
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>>
>> Natural language support but running in an English locale
>>
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>>
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>>
>> [R.app GUI 1.31 (5537) x86_64-apple-darwin9.8.0]
>>
>>> install.packages("rggobi")
>> --- Please select a CRAN mirror for use in this session ---
>> Warning message:
>> In getDependencies(pkgs, dependencies, available, lib) :
>> package ?rggobi? is not available
>>>
>>
>> I get substantially the same thing with R.
>>
>> Here is some info about my OS:
>> System Version:       Mac OS X 10.6.2 (10C540)
>> Kernel Version:       Darwin 10.2.0
>> Boot Mode:    Normal
>> Secure Virtual Memory:        Not Enabled
>> 64-bit Kernel and Extensions: No
>>
>> What am I doing wrong?  Any help would be MOST appreciated.
>> Thanks
>> Betsy
>>
>>
>> -- 
>> Elizabeth A. Nichols, Ph.D.
>> CTO for Metrics | PlexLogic, LLC
>> Great Falls | VA 22066
>> 703.963.7202
>>
>> 	[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>


From khansen at stat.berkeley.edu  Tue Jan 12 14:50:01 2010
From: khansen at stat.berkeley.edu (Kasper Daniel Hansen)
Date: Tue, 12 Jan 2010 08:50:01 -0500
Subject: [R-SIG-Mac] problems with the png(type = quartz) device
Message-ID: <CC158E2A-D9D1-4508-9550-4122A031CED0@stat.berkeley.edu>

Steffen Neuman has provided the following reproducible example

for (subtype in c("cairo", "Xlib", "quartz")) {
png(filename=paste("test",subtype,"plot%003d.png", sep="_"),
    width = 640, height = 480, type=subtype)
for (i in c(1,2,3)) {
  plot(0,0, type="n", main=i,
       xlim=c(-1 + 0.1*i, +1 + 0.1*i),
       ylim=c(-1 + 0.1*i, +1 + 0.1*i),
       xlab="xlab",ylab="ylab")
  points(0.1*i, 0.1*i , col=i)
  Sys.sleep(1)
}
dev.off()
}

which shows that there is a clear problem with png(type = "quartz").  I am even ready to mention the dreaded "b"-word :)

As an aside I find the difference between cairo and Xlib a bit strange: in the cairo device you can clearly see a difference between the box around the plot and where the x-axis / y-axis has been plotted.  This might be a rendering issue, but personally I find it less aesthetically pleasing.

Kasper

From simon.urbanek at r-project.org  Tue Jan 12 16:44:34 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Jan 2010 10:44:34 -0500
Subject: [R-SIG-Mac] unprecedented errors at start-up
In-Reply-To: <7390DE20-CE20-4E62-A756-AE83355435BB@mpi-cbg.de>
References: <ED0E8EE8-B896-4345-80DA-8584B736454F@mpi-cbg.de>
	<B6F532C0-4F02-4C3A-BC81-676910DA1B3C@r-project.org>
	<7390DE20-CE20-4E62-A756-AE83355435BB@mpi-cbg.de>
Message-ID: <4A0D6792-EF06-4953-81FB-08310948297A@r-project.org>

Milan,

On Jan 12, 2010, at 10:33 , Milan Esner wrote:

>  Hi Simon,
>  thanks a lot for fast reply.
>  Actually I solved the problem now with the command
>
>  defaults write org.R-project.R force.LANG en_US.UTF-8
>
> from R help FAQ Mac OS X.  Then all warnings disappeared and I can  
> install the packages.
>

Ok, great.


> I have another problem with installing EBimage package from  
> Bioconductor, but I guess for this I have to ask someone other. I  
> have the error message about GTK framework
>
>  /Library/Frameworks/GTK+.framework/Versions/2.14.X11/Resources/lib/ 
> libgtk-x11-2.0.0.dylib: no matching architecture in universal wrapper
> Error: package/namespace load failed for 'EBImage'
>

The 2.14 GTK+ is 32-bit only and I guess you're using 64-bit so it  
won't work.

So you have two options:

a) use R in 32-bit and all will be well (R --arch=i386 on the command  
line or the 32-bit R.app GUI)

b) if you really need over 4GB of virtual RAM install 2.18 GTK+ from http://r.research.att.com/libs/ 
  which includes 64-bit GTK+ but then you'll need to compile EBimage  
from sources while setting PATH= /Library/Frameworks/GTK+.framework/ 
Resource/bin:$PATH before you do so.

Cheers,
Simon


>
> On Jan 12, 2010, at 4:07 PM, Simon Urbanek wrote:
>
>>
>> On Jan 12, 2010, at 5:27 , Milan Esner wrote:
>>
>>> Hello SImon,
>>> I just encountered similar problems like Massimo. I upgraded to  
>>> 10.6.1 from 10.5.8.  I installed a new R 2.10.1 and when I start  
>>> up the R I have the same message
>>>
>>>
>>>
>>> During startup - Warning messages:
>>> 1: Setting LC_CTYPE failed, using "C"
>>> 2: Setting LC_COLLATE failed, using "C"
>>> 3: Setting LC_TIME failed, using "C"
>>> 4: Setting LC_MESSAGES failed, using "C"
>>> [R.app GUI 1.31 (5537) x86_64-apple-darwin9.8.0]
>>>
>>> WARNING: You're using a non-UTF8 locale, therefore only ASCII  
>>> characters will work.
>>> Please read R for Mac OS X FAQ (see Help) section 9 and adjust  
>>> your system preferences accordingly.
>>>
>>>
>>> and if I want to install some packages I have as well the error  
>>> message Failed to set default locale
>>>
>>>
>>>
>>> The downloaded packages are in
>>> 	/var/folders/2z/2zafRZuKHlSXCwfDU3iVNE+++TM/-Tmp-//RtmpVxQHq0/ 
>>> downloaded_packages
>>> trying URL 'http://mirrors.softliste.de/cran/bin/macosx/leopard/contrib/2.10/iplots_1.1-3.tgz'
>>> Content type 'application/x-gzip' length 415882 bytes (406 Kb)
>>> opened URL
>>> ==================================================
>>> downloaded 406 Kb
>>>
>>> tar: Failed to set default locale
>>>
>>>
>>> Could you help me? Thanks a lot.
>>
>> Please send us the output of sessionInfo() and your exact settings  
>> (Language+Formats) under "International" in the system preferences.
>>
>> Thanks,
>> Simon
>>
>>
>


From richard.liu at pueo-owl.ch  Tue Jan 12 16:50:16 2010
From: richard.liu at pueo-owl.ch (Richard R. Liu)
Date: Tue, 12 Jan 2010 16:50:16 +0100
Subject: [R-SIG-Mac] StringIndexOutOfBoundsException in RWeka
Message-ID: <20100112154747.M97545@pueo-owl.ch>

I am running R version 2.10.1 Patched (2010-01-07 r50940) in 64-bit mode under Mac OS X 10.5.8 
on a MacBook Pro with 8GB RAM.

I am encountering the following error in RWeka:

Error in .jcall("weka/core/tokenizers/Tokenizer", "[S", "tokenize", .jcast(tokenizer,  : 
  java.lang.StringIndexOutOfBoundsException: String index out of range: 1

Here is the code that is causing the problem:

> library(rJava)
> (.jinit(parameters = "-Xmx3000m"))
> library(RWeka)
> wctrl <- Weka_control(min = 1, max = 4) 
> lseg.4gram <- lapply(lseg, NGramTokenizer, control = wctrl)

lseg is a list of 965193 sentences, each of which consists of one or more segments.  For example, 
lseg[[1]] is

[[1]]
[1] "calculation of results xxxx activity is defined as the increase in radioactivity "
[2] "in dpm"                                                                           
[3] "in the pellet "                                                                   
[4] "xxx"                                                                              
[5] ""                                                                                 
[6] "caused by the addition of xx xxxx"                                                

lapply should build 1-, 2-, 3- and 4-grams of each sentence segment.  Is there any way to solve or 
circumvent the error?  In Java Preferences on the Mac I have specified for applications Java SE 6 64-
bit, then J2SE 5.0 64-bit, before other 32-bit versions.

(Side remark:  I'm surprised that it only does this for the first and last segments of the first sentence.  
Admittedly, the other segments have less than 4 grams, but that should not stop it from building n-
grams consisting of fewer grams!)

Thanks,
Richard
------
Richard R. Liu
Dittingerstr. 33
CH-4053 Basel
Switzerland

Tel.:  +41 61 331 10 47
Email:  richard.liu at pueo-owl.ch


From simon.urbanek at r-project.org  Tue Jan 12 17:51:07 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Jan 2010 11:51:07 -0500
Subject: [R-SIG-Mac] problems with the png(type = quartz) device
In-Reply-To: <CC158E2A-D9D1-4508-9550-4122A031CED0@stat.berkeley.edu>
References: <CC158E2A-D9D1-4508-9550-4122A031CED0@stat.berkeley.edu>
Message-ID: <C5792C0F-4CE2-4078-9D4F-4DAF3763F668@r-project.org>

On Jan 12, 2010, at 8:50 , Kasper Daniel Hansen wrote:

> Steffen Neuman has provided the following reproducible example
>
> for (subtype in c("cairo", "Xlib", "quartz")) {
> png(filename=paste("test",subtype,"plot%003d.png", sep="_"),
>    width = 640, height = 480, type=subtype)
> for (i in c(1,2,3)) {
>  plot(0,0, type="n", main=i,
>       xlim=c(-1 + 0.1*i, +1 + 0.1*i),
>       ylim=c(-1 + 0.1*i, +1 + 0.1*i),
>       xlab="xlab",ylab="ylab")
>  points(0.1*i, 0.1*i , col=i)
>  Sys.sleep(1)
> }
> dev.off()
> }
>
> which shows that there is a clear problem with png(type =  
> "quartz").  I am even ready to mention the dreaded "b"-word :)
>

It's clearly a bug in multi-page bitmap output. Thanks, it is fixed now.


> As an aside I find the difference between cairo and Xlib a bit  
> strange: in the cairo device you can clearly see a difference  
> between the box around the plot and where the x-axis / y-axis has  
> been plotted.  This might be a rendering issue, but personally I  
> find it less aesthetically pleasing.

It depends a lot on your pixel size - in general it is not very  
pleasing when you use line widths that are narrower than the pixels of  
your bitmap output (Xlib just ignores it and always uses at least a  
pixel regardless since it  does not support subpixel rendering).  
Therefore you may want to adjust the resolution (dpi) and/or pixel  
size for your output. Alternatively you can disable anti-aliasing but  
the output is even more horrible (as the Xlib rendering shows). Quartz  
does pixel-snapping for rectangles so if your line width is close to a  
pixel it works well.

Cheers,
Simon


From richard.liu at pueo-owl.ch  Tue Jan 12 18:14:05 2010
From: richard.liu at pueo-owl.ch (Richard R. Liu)
Date: Tue, 12 Jan 2010 18:14:05 +0100
Subject: [R-SIG-Mac] StringIndexOutOfBoundsException in RWeka
In-Reply-To: <20100112154747.M97545@pueo-owl.ch>
References: <20100112154747.M97545@pueo-owl.ch>
Message-ID: <20100112170733.M51024@pueo-owl.ch>

I have narrowed the problem down to this:

NGramTokenizer("-", control = Weka_control(min = 1, max = 4))

The string actually occurs as fourth segment in the 21,226th sentence.  I find this strange, since I am 
using the default delimiters ' \r\n\t.,;:'"()?!', which do not contain a hyphen.

Regards,
Richard

On Tue, 12 Jan 2010 16:50:16 +0100, Richard R. Liu wrote
> I am running R version 2.10.1 Patched (2010-01-07 r50940) in 64-bit 
> mode under Mac OS X 10.5.8 on a MacBook Pro with 8GB RAM.
> 
> I am encountering the following error in RWeka:
> 
> Error in .jcall("weka/core/tokenizers/Tokenizer", "[S", "tokenize",
>  .jcast(tokenizer,  :   java.lang.StringIndexOutOfBoundsException: 
> String index out of range: 1
> 
> Here is the code that is causing the problem:
> 
> > library(rJava)
> > (.jinit(parameters = "-Xmx3000m"))
> > library(RWeka)
> > wctrl <- Weka_control(min = 1, max = 4) 
> > lseg.4gram <- lapply(lseg, NGramTokenizer, control = wctrl)
> 
> lseg is a list of 965193 sentences, each of which consists of one or 
> more segments.  For example, lseg[[1]] is
> 
> [[1]]
> [1] "calculation of results xxxx activity is defined as the increase 
> in radioactivity " [2] "in dpm"                                      
>                                      [3] "in the pellet "            
>                                                        [4] "xxx"
> 
>     [5] ""                                                           
>                       [6] "caused by the addition of xx xxxx"
> 
> lapply should build 1-, 2-, 3- and 4-grams of each sentence segment. 
>  Is there any way to solve or circumvent the error?  In Java 
> Preferences on the Mac I have specified for applications Java SE 6 
> 64- bit, then J2SE 5.0 64-bit, before other 32-bit versions.
> 
> (Side remark:  I'm surprised that it only does this for the first 
> and last segments of the first sentence.  Admittedly, the other 
> segments have less than 4 grams, but that should not stop it from 
> building n- grams consisting of fewer grams!)
> 
> Thanks,
> Richard
> ------
> Richard R. Liu
> Dittingerstr. 33
> CH-4053 Basel
> Switzerland
> 
> Tel.:  +41 61 331 10 47
> Email:  richard.liu at pueo-owl.ch


--
Richard R. Liu
Dittingerstr. 33
CH-4053 Basel
Switzerland

Tel.:  +41 61 331 10 47
Email:  richard.liu at pueo-owl.ch


From richard.liu at pueo-owl.ch  Tue Jan 12 18:22:25 2010
From: richard.liu at pueo-owl.ch (Richard R. Liu)
Date: Tue, 12 Jan 2010 18:22:25 +0100
Subject: [R-SIG-Mac] StringIndexOutOfBoundsException in RWeka
In-Reply-To: <20100112154747.M97545@pueo-owl.ch>
References: <20100112154747.M97545@pueo-owl.ch>
Message-ID: <20100112171657.M23410@pueo-owl.ch>

I have narrowed the problem down to this:

> NGramTokenizer("-", control = wctrl)
Error in .jcall("weka/core/tokenizers/Tokenizer", "[S", "tokenize", .jcast(tokenizer,  : 
  java.lang.StringIndexOutOfBoundsException: String index out of range: 1

Indeed, the 21226th sentence contains a segment composed of a single hyphen.  I am using the 
default delimiters of the WEKA control.  The hyphen is thus not a delimiter.  A segment consisting of 
two consecutive hyphens ("--") does not cause the exception.

Regards,
Richard

On Tue, 12 Jan 2010 16:50:16 +0100, Richard R. Liu wrote
> I am running R version 2.10.1 Patched (2010-01-07 r50940) in 64-bit 
> mode under Mac OS X 10.5.8 on a MacBook Pro with 8GB RAM.
> 
> I am encountering the following error in RWeka:
> 
> Error in .jcall("weka/core/tokenizers/Tokenizer", "[S", "tokenize",
>  .jcast(tokenizer,  :   java.lang.StringIndexOutOfBoundsException: 
> String index out of range: 1
> 
> Here is the code that is causing the problem:
> 
> > library(rJava)
> > (.jinit(parameters = "-Xmx3000m"))
> > library(RWeka)
> > wctrl <- Weka_control(min = 1, max = 4) 
> > lseg.4gram <- lapply(lseg, NGramTokenizer, control = wctrl)
> 
> lseg is a list of 965193 sentences, each of which consists of one or 
> more segments.  For example, lseg[[1]] is
> 
> [[1]]
> [1] "calculation of results xxxx activity is defined as the increase 
> in radioactivity " [2] "in dpm"                                      
>                                      [3] "in the pellet "            
>                                                        [4] "xxx"
> 
>     [5] ""                                                           
>                       [6] "caused by the addition of xx xxxx"
> 
> lapply should build 1-, 2-, 3- and 4-grams of each sentence segment. 
>  Is there any way to solve or circumvent the error?  In Java 
> Preferences on the Mac I have specified for applications Java SE 6 
> 64- bit, then J2SE 5.0 64-bit, before other 32-bit versions.
> 
> (Side remark:  I'm surprised that it only does this for the first 
> and last segments of the first sentence.  Admittedly, the other 
> segments have less than 4 grams, but that should not stop it from 
> building n- grams consisting of fewer grams!)
> 
> Thanks,
> Richard
> ------
> Richard R. Liu
> Dittingerstr. 33
> CH-4053 Basel
> Switzerland
> 
> Tel.:  +41 61 331 10 47
> Email:  richard.liu at pueo-owl.ch


--
Richard R. Liu
Dittingerstr. 33
CH-4053 Basel
Switzerland

Tel.:  +41 61 331 10 47
Email:  richard.liu at pueo-owl.ch


From c-w.hoffmann at sunrise.ch  Tue Jan 12 20:47:09 2010
From: c-w.hoffmann at sunrise.ch (Christian Hoffmann)
Date: Tue, 12 Jan 2010 20:47:09 +0100
Subject: [R-SIG-Mac] how to start R64 from M-x R...
Message-ID: <4B4CD1BD.8060601@sunrise.ch>

Hi there,

May be this question has been answered before, but how to start the 64 
bit version inside ESS? I have successfully used
C-u M-x R then "--arch=x86_64" <RT>, but remembering "--arch=x86_64" is 
a nuisance (for me...).
Defining on Unix >  alias R64 'R --arch=x86_64 &' works only from the 
terminal, so obviously this is an ESS thing (with elisp?) which I am not 
versed in.

Thanks for help

Christian


-- 
Christian W. Hoffmann,
Rigiblickstrasse 15 b, CH-8915Hausen am Albis, Switzerland,
Tel +41-44-7640853, c-w.hoffmann at sunrise.ch
www.wsl.ch/personal_homepages/hoffmann/


From simon.urbanek at r-project.org  Tue Jan 12 20:58:11 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Jan 2010 14:58:11 -0500
Subject: [R-SIG-Mac] how to start R64 from M-x R...
In-Reply-To: <4B4CD1BD.8060601@sunrise.ch>
References: <4B4CD1BD.8060601@sunrise.ch>
Message-ID: <3A2D975F-BF06-4CEC-90EE-A1E53EADCD01@r-project.org>


On Jan 12, 2010, at 14:47 , Christian Hoffmann wrote:

> Hi there,
>
> May be this question has been answered before, but how to start the  
> 64 bit version inside ESS? I have successfully used
> C-u M-x R then "--arch=x86_64" <RT>, but remembering "--arch=x86_64"  
> is a nuisance (for me...).
> Defining on Unix >  alias R64 'R --arch=x86_64 &' works only from  
> the terminal, so obviously this is an ESS thing (with elisp?) which  
> I am not versed in.
>

You may ask on the ESS list, but another way around is to change the  
default directly in the R start script by changing
: ${R_ARCH=/`arch`}
to
: ${R_ARCH=/x86_64}

Cheers,
Simon


From fitzjohn at zoology.ubc.ca  Tue Jan 12 19:17:12 2010
From: fitzjohn at zoology.ubc.ca (Rich FitzJohn)
Date: Tue, 12 Jan 2010 10:17:12 -0800
Subject: [R-SIG-Mac] Source package installation under OSX 10.4 / R 2.10.1
Message-ID: <7492A996-2B94-4D8C-8C64-BDCB1DBE809D@zoology.ubc.ca>

Hello,

Sorry if this is the wrong place to post or if this has been addressed  
elsewhere.  I am running R 2.10.1 under OS X 10.5 (Leopard).  After  
upgrading R from 2.10 to 2.10.1, I found that no source package would  
install, with errors like:
       gcc-4.2 -arch i386 -std=gnu99 -I/Library/Frameworks/ 
R.framework...
       make: gcc-4.2: Command not found
       make: *** [bisse-eqs.o] Error 127
(similar errors for any package containing C code that I tried).  The  
Xcode that U have does not include gcc 4.2, so it is surprising to see  
it being selected.  I think I have the most recent Xcode available for  
Leopard; in any case, the only Xcode I seem to be able to get from  
apple needs OSX 10.6.

I have worked around this problem by creating a ~/.R/Makevars file  
containing
CC = gcc-4.0 -arch i386 -std=gnu99
CFLAGS = -g -O2
CXX = g++-4.0 -arch i386
CXXCPP = g++-4.0 -arch i386 -E
CXXFLAGS = -g -O2
DYLIB_LD = gcc-4.0 -arch i386 -std=gnu99
F77 = gfortran-4.0 -arch i386
FC = gfortran-4.0 -arch i386
FCFLAGS = -g -O2
MAIN_LD = gcc-4.0 -arch i386 -std=gnu99
OBJC = gcc-4.0 -arch i386
OBJCFLAGS = -g -O2
OBJCXX = g++-4.0 -arch i386
SHLIB_CXXLD = g++-4.0 -arch i386
SHLIB_FCLD = gfortran-4.0 -arch i386
SHLIB_LD = gcc-4.0 -arch i386 -std=gnu99

after which compilation succeeds (I had to both switch the version  
numbers from 4.2 to 4.0 compared with R's Makevars and drop the - 
mtune=core flag).

I have a couple of questions
(1) Will anything terrible happen as a consequence of doing this?
(2) Does this situation mean that package compilation is no longer  
supported on leopard?

Thanks,
Rich


From Kurt.Hornik at wu.ac.at  Tue Jan 12 19:20:45 2010
From: Kurt.Hornik at wu.ac.at (Kurt Hornik)
Date: Tue, 12 Jan 2010 19:20:45 +0100
Subject: [R-SIG-Mac] StringIndexOutOfBoundsException in RWeka
In-Reply-To: <20100112171657.M23410@pueo-owl.ch>
References: <20100112154747.M97545@pueo-owl.ch>
	<20100112171657.M23410@pueo-owl.ch>
Message-ID: <19276.48509.471043.325797@hornik.net>

>>>>> Richard R Liu writes:

> I have narrowed the problem down to this:
>> NGramTokenizer("-", control = wctrl)
> Error in .jcall("weka/core/tokenizers/Tokenizer", "[S", "tokenize", .jcast(tokenizer,  : 
>   java.lang.StringIndexOutOfBoundsException: String index out of range: 1

> Indeed, the 21226th sentence contains a segment composed of a single
> hyphen.  I am using the default delimiters of the WEKA control.  The
> hyphen is thus not a delimiter.  A segment consisting of two
> consecutive hyphens ("--") does not cause the exception.

Thanks.  This seems to be a bug in Weka itself, so there is not really a
lot I can do: perhaps you can report the problem to the upstream
maintainers?

Best
-k

> Regards,
> Richard

> On Tue, 12 Jan 2010 16:50:16 +0100, Richard R. Liu wrote
>> I am running R version 2.10.1 Patched (2010-01-07 r50940) in 64-bit 
>> mode under Mac OS X 10.5.8 on a MacBook Pro with 8GB RAM.
>> 
>> I am encountering the following error in RWeka:
>> 
>> Error in .jcall("weka/core/tokenizers/Tokenizer", "[S", "tokenize",
>> .jcast(tokenizer,  :   java.lang.StringIndexOutOfBoundsException: 
>> String index out of range: 1
>> 
>> Here is the code that is causing the problem:
>> 
>> > library(rJava)
>> > (.jinit(parameters = "-Xmx3000m"))
>> > library(RWeka)
>> > wctrl <- Weka_control(min = 1, max = 4) 
>> > lseg.4gram <- lapply(lseg, NGramTokenizer, control = wctrl)
>> 
>> lseg is a list of 965193 sentences, each of which consists of one or 
>> more segments.  For example, lseg[[1]] is
>> 
>> [[1]]
>> [1] "calculation of results xxxx activity is defined as the increase 
>> in radioactivity " [2] "in dpm"                                      
>> [3] "in the pellet "            
>> [4] "xxx"
>> 
>> [5] ""                                                           
>> [6] "caused by the addition of xx xxxx"
>> 
>> lapply should build 1-, 2-, 3- and 4-grams of each sentence segment. 
>> Is there any way to solve or circumvent the error?  In Java 
>> Preferences on the Mac I have specified for applications Java SE 6 
>> 64- bit, then J2SE 5.0 64-bit, before other 32-bit versions.
>> 
>> (Side remark:  I'm surprised that it only does this for the first 
>> and last segments of the first sentence.  Admittedly, the other 
>> segments have less than 4 grams, but that should not stop it from 
>> building n- grams consisting of fewer grams!)
>> 
>> Thanks,
>> Richard
>> ------
>> Richard R. Liu
>> Dittingerstr. 33
>> CH-4053 Basel
>> Switzerland
>> 
>> Tel.:  +41 61 331 10 47
>> Email:  richard.liu at pueo-owl.ch


> --
> Richard R. Liu
> Dittingerstr. 33
> CH-4053 Basel
> Switzerland

> Tel.:  +41 61 331 10 47
> Email:  richard.liu at pueo-owl.ch


From simon.urbanek at r-project.org  Tue Jan 12 21:52:24 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Jan 2010 15:52:24 -0500
Subject: [R-SIG-Mac] Source package installation under OSX 10.4 / R
	2.10.1
In-Reply-To: <7492A996-2B94-4D8C-8C64-BDCB1DBE809D@zoology.ubc.ca>
References: <7492A996-2B94-4D8C-8C64-BDCB1DBE809D@zoology.ubc.ca>
Message-ID: <2A7467F4-2CFC-4159-82C2-667CBE04E4C1@r-project.org>

Rich,

On Jan 12, 2010, at 13:17 , Rich FitzJohn wrote:

> Hello,
>
> Sorry if this is the wrong place to post or if this has been  
> addressed elsewhere.  I am running R 2.10.1 under OS X 10.5  
> (Leopard).  After upgrading R from 2.10 to 2.10.1, I found that no  
> source package would install, with errors like:
>      gcc-4.2 -arch i386 -std=gnu99 -I/Library/Frameworks/ 
> R.framework...
>      make: gcc-4.2: Command not found
>      make: *** [bisse-eqs.o] Error 127
> (similar errors for any package containing C code that I tried).   
> The Xcode that U have does not include gcc 4.2, so it is surprising  
> to see it being selected.  I think I have the most recent Xcode  
> available for Leopard;

That's not true - gcc 4.2 is part of Xcode for quite some time on 10.5  
(Leopard) so your Xcode is definitely not recent. The latest Leopard  
one is Xcode 3.1.3.


> in any case, the only Xcode I seem to be able to get from apple  
> needs OSX 10.6.
>

Xcode 3.1.3 for Leopard is available from http://connect.apple.com  
(and so are all previous versions in fact).


> I have worked around this problem by creating a ~/.R/Makevars file  
> containing
> CC = gcc-4.0 -arch i386 -std=gnu99
> CFLAGS = -g -O2
> CXX = g++-4.0 -arch i386
> CXXCPP = g++-4.0 -arch i386 -E
> CXXFLAGS = -g -O2
> DYLIB_LD = gcc-4.0 -arch i386 -std=gnu99
> F77 = gfortran-4.0 -arch i386
> FC = gfortran-4.0 -arch i386
> FCFLAGS = -g -O2
> MAIN_LD = gcc-4.0 -arch i386 -std=gnu99
> OBJC = gcc-4.0 -arch i386
> OBJCFLAGS = -g -O2
> OBJCXX = g++-4.0 -arch i386
> SHLIB_CXXLD = g++-4.0 -arch i386
> SHLIB_FCLD = gfortran-4.0 -arch i386
> SHLIB_LD = gcc-4.0 -arch i386 -std=gnu99
>
> after which compilation succeeds (I had to both switch the version  
> numbers from 4.2 to 4.0 compared with R's Makevars and drop the - 
> mtune=core flag).
>
> I have a couple of questions
> (1) Will anything terrible happen as a consequence of doing this?

Maybe not. Older gcc versions have miscompield some code in the past  
so your milage will vary, but functionally in most cases you should be  
fine.


> (2) Does this situation mean that package compilation is no longer  
> supported on leopard?
>

No, you just need at least half-way recent Xcode.  I'm pretty sure  
that at least the 3.1 series always had gcc 4.2 and that was almost  
two years ago ...

FWIW the settings are not quite intentional - usually binaries get  
post-processed for the release (removing TeX paths, arch tuning and  
-4.2 postfix) but somehow in 2.10.1 this step failed.

Cheers,
Simon


From maj at waikato.ac.nz  Tue Jan 12 22:33:56 2010
From: maj at waikato.ac.nz (Murray Jorgensen)
Date: Wed, 13 Jan 2010 10:33:56 +1300
Subject: [R-SIG-Mac] Package loading problem
Message-ID: <4B4CEAC4.9090404@waikato.ac.nz>

Hi

I have downloaded and installed R 2.10.1 to my Mac running OS X 10.5.8.

Hardware Overview:

   Model Name:	iMac
   Model Identifier:	iMac7,1
   Processor Name:	Intel Core 2 Duo
   Processor Speed:	2.4 GHz
   Number Of Processors:	1
   Total Number Of Cores:	2
   L2 Cache:	4 MB
   Memory:	1 GB
   Bus Speed:	800 MHz
   Boot ROM Version:	IM71.007A.B03
   SMC Version (system):	1.20f4
   Serial Number (system):	W87438YWX86
   Hardware UUID:	00000000-0000-1000-8000-001B63AA8FF1
[In case this is relevant!]

I have tgz files for all the packages [plus some other files] in 
/Applications/tgz10.1   .
When I attempt to use the R Package Installer and select the tzg10.1 
folder as the "Local Package Directory" the result that I get is

Warning: invalid package ?/Applications?
Error: ERROR: no packages specified

Any help would be welcome!

Cheers,  Murray

-- 
Dr Murray Jorgensen      http://www.stats.waikato.ac.nz/Staff/maj.html
Department of Statistics, University of Waikato, Hamilton, New Zealand
Email: maj at waikato.ac.nz  majorgensen at ihug.co.nz        Fax 7 838 4155
Phone  +64 7 838 4773 wk    Home +64 7 825 0441   Mobile 021 0200 8350


From john.maindonald at anu.edu.au  Tue Jan 12 22:51:56 2010
From: john.maindonald at anu.edu.au (John Maindonald)
Date: Wed, 13 Jan 2010 08:51:56 +1100
Subject: [R-SIG-Mac] how to start R64 from M-x R...
In-Reply-To: <3A2D975F-BF06-4CEC-90EE-A1E53EADCD01@r-project.org>
References: <4B4CD1BD.8060601@sunrise.ch>
	<3A2D975F-BF06-4CEC-90EE-A1E53EADCD01@r-project.org>
Message-ID: <CE48EA5A-F047-4AD4-ABE3-6DA03DC18ED9@anu.edu.au>

The following in the .emacs file should do the job:

(setq-default inferior-R-program-name "R32")	    ; unix systems
(setq ess-r-versions '("R-1" "R-2" "R32" "R64"))

In my setup, I follow this with:
(load "/usr/local/ess/ess-5.7.1/lisp/ess-site")

Change the R32 in the initial line to R64 to make that the default.

John Maindonald             email: john.maindonald at anu.edu.au
phone : +61 2 (6125)3473    fax  : +61 2(6125)5549
Centre for Mathematics & Its Applications, Room 1194,
John Dedman Mathematical Sciences Building (Building 27)
Australian National University, Canberra ACT 0200.
http://www.maths.anu.edu.au/~johnm

On 13/01/2010, at 6:58 AM, Simon Urbanek wrote:

> 
> On Jan 12, 2010, at 14:47 , Christian Hoffmann wrote:
> 
>> Hi there,
>> 
>> May be this question has been answered before, but how to start the 64 bit version inside ESS? I have successfully used
>> C-u M-x R then "--arch=x86_64" <RT>, but remembering "--arch=x86_64" is a nuisance (for me...).
>> Defining on Unix >  alias R64 'R --arch=x86_64 &' works only from the terminal, so obviously this is an ESS thing (with elisp?) which I am not versed in.
>> 
> 
> You may ask on the ESS list, but another way around is to change the default directly in the R start script by changing
> : ${R_ARCH=/`arch`}
> to
> : ${R_ARCH=/x86_64}
> 
> Cheers,
> Simon
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From fitzjohn at zoology.ubc.ca  Tue Jan 12 22:33:50 2010
From: fitzjohn at zoology.ubc.ca (Rich FitzJohn)
Date: Tue, 12 Jan 2010 13:33:50 -0800
Subject: [R-SIG-Mac] Source package installation under OSX 10.4 / R
	2.10.1
In-Reply-To: <2A7467F4-2CFC-4159-82C2-667CBE04E4C1@r-project.org>
References: <7492A996-2B94-4D8C-8C64-BDCB1DBE809D@zoology.ubc.ca>
	<2A7467F4-2CFC-4159-82C2-667CBE04E4C1@r-project.org>
Message-ID: <C062B90B-B37A-4AAB-84E5-630CD5BC4A7B@zoology.ubc.ca>

Hi Simon,

Thanks for the information.  You are of course right; Xcode 3.1.4  
contains gcc-4.2, and after installing that everything works fine.

Cheers,
Rich

On 12-Jan-10, at 12:52 PM, Simon Urbanek wrote:

> Rich,
>
> On Jan 12, 2010, at 13:17 , Rich FitzJohn wrote:
>
>> Hello,
>>
>> Sorry if this is the wrong place to post or if this has been  
>> addressed elsewhere.  I am running R 2.10.1 under OS X 10.5  
>> (Leopard).  After upgrading R from 2.10 to 2.10.1, I found that no  
>> source package would install, with errors like:
>>     gcc-4.2 -arch i386 -std=gnu99 -I/Library/Frameworks/ 
>> R.framework...
>>     make: gcc-4.2: Command not found
>>     make: *** [bisse-eqs.o] Error 127
>> (similar errors for any package containing C code that I tried).   
>> The Xcode that U have does not include gcc 4.2, so it is surprising  
>> to see it being selected.  I think I have the most recent Xcode  
>> available for Leopard;
>
> That's not true - gcc 4.2 is part of Xcode for quite some time on  
> 10.5 (Leopard) so your Xcode is definitely not recent. The latest  
> Leopard one is Xcode 3.1.3.
>
>
>> in any case, the only Xcode I seem to be able to get from apple  
>> needs OSX 10.6.
>>
>
> Xcode 3.1.3 for Leopard is available from http://connect.apple.com  
> (and so are all previous versions in fact).
>
>
>> I have worked around this problem by creating a ~/.R/Makevars file  
>> containing
>> CC = gcc-4.0 -arch i386 -std=gnu99
>> CFLAGS = -g -O2
>> CXX = g++-4.0 -arch i386
>> CXXCPP = g++-4.0 -arch i386 -E
>> CXXFLAGS = -g -O2
>> DYLIB_LD = gcc-4.0 -arch i386 -std=gnu99
>> F77 = gfortran-4.0 -arch i386
>> FC = gfortran-4.0 -arch i386
>> FCFLAGS = -g -O2
>> MAIN_LD = gcc-4.0 -arch i386 -std=gnu99
>> OBJC = gcc-4.0 -arch i386
>> OBJCFLAGS = -g -O2
>> OBJCXX = g++-4.0 -arch i386
>> SHLIB_CXXLD = g++-4.0 -arch i386
>> SHLIB_FCLD = gfortran-4.0 -arch i386
>> SHLIB_LD = gcc-4.0 -arch i386 -std=gnu99
>>
>> after which compilation succeeds (I had to both switch the version  
>> numbers from 4.2 to 4.0 compared with R's Makevars and drop the - 
>> mtune=core flag).
>>
>> I have a couple of questions
>> (1) Will anything terrible happen as a consequence of doing this?
>
> Maybe not. Older gcc versions have miscompield some code in the past  
> so your milage will vary, but functionally in most cases you should  
> be fine.
>
>
>> (2) Does this situation mean that package compilation is no longer  
>> supported on leopard?
>>
>
> No, you just need at least half-way recent Xcode.  I'm pretty sure  
> that at least the 3.1 series always had gcc 4.2 and that was almost  
> two years ago ...
>
> FWIW the settings are not quite intentional - usually binaries get  
> post-processed for the release (removing TeX paths, arch tuning and  
> -4.2 postfix) but somehow in 2.10.1 this step failed.
>
> Cheers,
> Simon
>
>


From simon.urbanek at r-project.org  Tue Jan 12 23:44:51 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Jan 2010 17:44:51 -0500
Subject: [R-SIG-Mac] Package loading problem
In-Reply-To: <4B4CEAC4.9090404@waikato.ac.nz>
References: <4B4CEAC4.9090404@waikato.ac.nz>
Message-ID: <FDF0C252-6D4D-4825-88DF-CD7C6E4745DD@r-project.org>


On Jan 12, 2010, at 16:33 , Murray Jorgensen wrote:

> Hi
>
> I have downloaded and installed R 2.10.1 to my Mac running OS X  
> 10.5.8.
>
> Hardware Overview:
>
>  Model Name:	iMac
>  Model Identifier:	iMac7,1
>  Processor Name:	Intel Core 2 Duo
>  Processor Speed:	2.4 GHz
>  Number Of Processors:	1
>  Total Number Of Cores:	2
>  L2 Cache:	4 MB
>  Memory:	1 GB
>  Bus Speed:	800 MHz
>  Boot ROM Version:	IM71.007A.B03
>  SMC Version (system):	1.20f4
>  Serial Number (system):	W87438YWX86
>  Hardware UUID:	00000000-0000-1000-8000-001B63AA8FF1
> [In case this is relevant!]
>
> I have tgz files for all the packages [plus some other files] in / 
> Applications/tgz10.1   .
> When I attempt to use the R Package Installer and select the tzg10.1  
> folder as the "Local Package Directory" the result that I get is
>

You are using the wrong menu item - that menu is for installing  
*package directories* i.e. packages in unpacked form. For .tgz files  
you want to use "Local binary package". But, please, note that  
installing packages that way is only for very, very special cases -  
normally you should use "CRAN (binaries)" instead because that takes  
care of dependencies, downloading, installation etc.

Cheers,
Simon


From carl at witthoft.com  Tue Jan 12 23:51:39 2010
From: carl at witthoft.com (Carl Witthoft)
Date: Tue, 12 Jan 2010 17:51:39 -0500
Subject: [R-SIG-Mac] R2.10 vs OSX 10.4.11
Message-ID: <4B4CFCFB.3010808@witthoft.com>

Hi,
Can someone let me know what should work and what is known not to work 
with the latest R2.10x when installed on Tiger (10.4.11)?  I did a quick 
tryout and found that the ? command brings up a blank help window.  The 
help.start() (I think that's the command) brings up a R-help window in 
my web browser, but only some items' help pages show up there.

I'm happy to do some testing or debug work, but just don't want to beat 
myself up against known walls.

To answer the obvious:  I'm lucky still to have a Mac at work at all, so 
the chances of IT getting me a Leopard upgrade disc are zero or less.

thanks
Carl


From simon.urbanek at r-project.org  Wed Jan 13 00:19:04 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Jan 2010 18:19:04 -0500
Subject: [R-SIG-Mac] R2.10 vs OSX 10.4.11
In-Reply-To: <4B4CFCFB.3010808@witthoft.com>
References: <4B4CFCFB.3010808@witthoft.com>
Message-ID: <D8ADF90F-A350-4E11-AC7E-F86DCC16EFD7@r-project.org>

On Jan 12, 2010, at 17:51 , Carl Witthoft wrote:

> Hi,
> Can someone let me know what should work and what is known not to  
> work with the latest R2.10x when installed on Tiger (10.4.11)?

No, there is no "R2.10x".


>  I did a quick tryout and found that the ? command brings up a blank  
> help window.  The help.start() (I think that's the command) brings  
> up a R-help window in my web browser, but only some items' help  
> pages show up there.
>
> I'm happy to do some testing or debug work, but just don't want to  
> beat myself up against known walls.
>
> To answer the obvious:  I'm lucky still to have a Mac at work at  
> all, so the chances of IT getting me a Leopard upgrade disc are zero  
> or less.
>

R 2.10.1 was released for Mac OS X 10.4.11 and is the last release.  
There is no functional difference between the Leopard and Tiger  
release (other than the presence/absence of certain architectures), so  
upgrading the OS makes no difference in usability (for now -- there is  
likely to be no R 2.11.0 binary for Tiger anymore).

If you have any issues, please make sure you're using R 2.10.1 and you  
may properly report them.

Cheers,
Simon


From carl at witthoft.com  Wed Jan 13 02:07:56 2010
From: carl at witthoft.com (Carl Witthoft)
Date: Tue, 12 Jan 2010 20:07:56 -0500
Subject: [R-SIG-Mac] R2.10 vs OSX 10.4.11
In-Reply-To: <D8ADF90F-A350-4E11-AC7E-F86DCC16EFD7@r-project.org>
References: <4B4CFCFB.3010808@witthoft.com>
	<D8ADF90F-A350-4E11-AC7E-F86DCC16EFD7@r-project.org>
Message-ID: <4B4D1CEC.3050005@witthoft.com>

Sorry if my shorthand (common enough among business software devs, of 
which I am not one) is misleading.  I simply meant 'the latest release 
of R2.10' when I wrote 2.10x.

In any case,  2.10 is working fine on my 10.5.8 OS at home, but the help 
window was not working on 10.4.11 at work.  I will post as much detail 
as I can acquire in the next day or two.  Given that R wasn't crashing, 
I may not have much to offer other than a list of which packages' help 
pages show up and which don't.

Carl

Simon Urbanek wrote:
> On Jan 12, 2010, at 17:51 , Carl Witthoft wrote:
> 
>> Hi,
>> Can someone let me know what should work and what is known not to work 
>> with the latest R2.10x when installed on Tiger (10.4.11)?
> 
> No, there is no "R2.10x".
> 
> 
>>  I did a quick tryout and found that the ? command brings up a blank 
>> help window.  The help.start() (I think that's the command) brings up 
>> a R-help window in my web browser, but only some items' help pages 
>> show up there.
>>
>> I'm happy to do some testing or debug work, but just don't want to 
>> beat myself up against known walls.
>>
>> To answer the obvious:  I'm lucky still to have a Mac at work at all, 
>> so the chances of IT getting me a Leopard upgrade disc are zero or less.
>>
> 
> R 2.10.1 was released for Mac OS X 10.4.11 and is the last release. 
> There is no functional difference between the Leopard and Tiger release 
> (other than the presence/absence of certain architectures), so upgrading 
> the OS makes no difference in usability (for now -- there is likely to 
> be no R 2.11.0 binary for Tiger anymore).
> 
> If you have any issues, please make sure you're using R 2.10.1 and you 
> may properly report them.
> 
> Cheers,
> Simon
> 
>


From simon.urbanek at r-project.org  Wed Jan 13 02:15:57 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 12 Jan 2010 20:15:57 -0500
Subject: [R-SIG-Mac] R2.10 vs OSX 10.4.11
In-Reply-To: <4B4D1CEC.3050005@witthoft.com>
References: <4B4CFCFB.3010808@witthoft.com>
	<D8ADF90F-A350-4E11-AC7E-F86DCC16EFD7@r-project.org>
	<4B4D1CEC.3050005@witthoft.com>
Message-ID: <C4D93BC0-5A2C-4AB3-9D77-9ADE648B6D06@r-project.org>

Carl,

On Jan 12, 2010, at 8:07 PM, Carl Witthoft wrote:

> Sorry if my shorthand (common enough among business software devs, of which I am not one) is misleading.  I simply meant 'the latest release of R2.10' when I wrote 2.10x.
> 
> In any case,  2.10

Argh - please do include the *real* version! It *does* make a huge difference! For example 2.10.0 has some help-related bugs (and others ;)) that were fixed in 2.10.1 so it is important to distinguish exactly which version you have.


> is working fine on my 10.5.8 OS at home, but the help window was not working on 10.4.11 at work.

The new help system uses an integrated web server so firewall settings may get in your way there. I'm saying this only because you mentioned work ;).


>  I will post as much detail as I can acquire in the next day or two.  Given that R wasn't crashing, I may not have much to offer other than a list of which packages' help pages show up and which don't.
> 

A reproducible example is sufficient ... However, as I said there is no difference in the R help system between 10.4 and 10.5 so the reason is likely somewhere else (e.g. failure to re-install packages after an R upgrade).

Cheers,
Simon



> 
> 
> Simon Urbanek wrote:
>> On Jan 12, 2010, at 17:51 , Carl Witthoft wrote:
>>> Hi,
>>> Can someone let me know what should work and what is known not to work with the latest R2.10x when installed on Tiger (10.4.11)?
>> No, there is no "R2.10x".
>>> I did a quick tryout and found that the ? command brings up a blank help window.  The help.start() (I think that's the command) brings up a R-help window in my web browser, but only some items' help pages show up there.
>>> 
>>> I'm happy to do some testing or debug work, but just don't want to beat myself up against known walls.
>>> 
>>> To answer the obvious:  I'm lucky still to have a Mac at work at all, so the chances of IT getting me a Leopard upgrade disc are zero or less.
>>> 
>> R 2.10.1 was released for Mac OS X 10.4.11 and is the last release. There is no functional difference between the Leopard and Tiger release (other than the presence/absence of certain architectures), so upgrading the OS makes no difference in usability (for now -- there is likely to be no R 2.11.0 binary for Tiger anymore).
>> If you have any issues, please make sure you're using R 2.10.1 and you may properly report them.
>> Cheers,
>> Simon
> 
> 


From philippe_demoulin at yahoo.fr  Wed Jan 13 14:04:28 2010
From: philippe_demoulin at yahoo.fr (Philippe Demoulin)
Date: Wed, 13 Jan 2010 14:04:28 +0100
Subject: [R-SIG-Mac] R2.10 vs OSX 10.4.11
Message-ID: <4cc66e001001130504w510f9697lb34adb69b2fee8da@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100113/367ebc0a/attachment.pl>

From carl at witthoft.com  Thu Jan 14 00:41:39 2010
From: carl at witthoft.com (Carl Witthoft)
Date: Wed, 13 Jan 2010 18:41:39 -0500
Subject: [R-SIG-Mac] R2.10 vs OSX 10.4.11
In-Reply-To: <C4D93BC0-5A2C-4AB3-9D77-9ADE648B6D06@r-project.org>
References: <4B4CFCFB.3010808@witthoft.com>
	<D8ADF90F-A350-4E11-AC7E-F86DCC16EFD7@r-project.org>
	<4B4D1CEC.3050005@witthoft.com>
	<C4D93BC0-5A2C-4AB3-9D77-9ADE648B6D06@r-project.org>
Message-ID: <4B4E5A33.6060200@witthoft.com>

I confirmed that I'm running OSX 10.4.11, on an Intel iMac (4 yrs old or 
so).  I am using Default FolderX, FinderPop, and Logitech COntrol Center 
Panes.

OK, here's the startup info from the console:

the console says..



*********
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
[skip dull stuff]

[R.app GUI 1.31 (5538) i386-apple-darwin8.11.1]

[Workspace restored from /Users/carl/Learning/Rgames/.RData]

Rgames: ?assign
starting httpd help server ... done
Rgames:

(where "Rgames" is my prompt.

AFter that,
help window opens, blank, etc.  If I use the "fuzzy match" window  the
package list shows up but nothing writes to lower half of window.

And as you asked, I am behind a firewall at work.  This is not something
I can modify.  So, how do I 'tell'  R not to go looking for online help?
I hope I didn't misunderstand your comment here -- but certainly no 
application should ever depend on an internet connection to function!

If I run help.start(), a page does open in my browser and I can search 
all packages which are on my machine.

But just typing ?assign,  or ? followed by any command from any basic 
package, or any package I've installed manually, will bring up the GUI's 
help window, which is always completely blank.  And I checked: menu 
commands like "select all" are dimmed, which is consistent with an empty 
document window.

I turned off all my Unsanity APE-related stuff, uninstalled 
ApplicationEnhancer, ran Disk Utility (no errors), and rebooted.  I also 
logged into my "emergency account," which I keep clean and unused, and R 
behaved the same way there.

Thanks for helping, and please let me know what other tests I can do to 
try to track down this problem.



Simon Urbanek wrote:
> Carl,

> 
> Argh - please do include the *real* version! It *does* make a huge
> difference! For example 2.10.0 has some help-related bugs (and others
> ;)) that were fixed in 2.10.1 so it is important to distinguish
> exactly which version you have.
> 
> 
>> is working fine on my 10.5.8 OS at home, but the help window was
>> not working on 10.4.11 at work.
> 
> The new help system uses an integrated web server so firewall
> settings may get in your way there. I'm saying this only because you
> mentioned work ;).
> 
> 
>> I will post as much detail as I can acquire in the next day or two.
>> Given that R wasn't crashing, I may not have much to offer other
>> than a list of which packages' help pages show up and which don't.
>> 
> 
> A reproducible example is sufficient ... However, as I said there is
> no difference in the R help system between 10.4 and 10.5 so the
> reason is likely somewhere else (e.g. failure to re-install packages
> after an R upgrade).
> 
> Cheers, Simon
> 
> 
> 
>> 
>> Simon Urbanek wrote:
>>> On Jan 12, 2010, at 17:51 , Carl Witthoft wrote:
>>>> Hi, Can someone let me know what should work and what is known
>>>> not to work with the latest R2.10x when installed on Tiger
>>>> (10.4.11)?
>>> No, there is no "R2.10x".
>>>> I did a quick tryout and found that the ? command brings up a
>>>> blank help window.  The help.start() (I think that's the
>>>> command) brings up a R-help window in my web browser, but only
>>>> some items' help pages show up there.
>>>> 
>>>> I'm happy to do some testing or debug work, but just don't want
>>>> to beat myself up against known walls.
>>>> 
>>>> To answer the obvious:  I'm lucky still to have a Mac at work
>>>> at all, so the chances of IT getting me a Leopard upgrade disc
>>>> are zero or less.
>>>> 
>>> R 2.10.1 was released for Mac OS X 10.4.11 and is the last
>>> release. There is no functional difference between the Leopard
>>> and Tiger release (other than the presence/absence of certain
>>> architectures), so upgrading the OS makes no difference in
>>> usability (for now -- there is likely to be no R 2.11.0 binary
>>> for Tiger anymore). If you have any issues, please make sure
>>> you're using R 2.10.1 and you may properly report them. Cheers, 
>>> Simon
>> 
> 
>


From jackman at stanford.edu  Thu Jan 14 03:55:30 2010
From: jackman at stanford.edu (Simon Jackman)
Date: Wed, 13 Jan 2010 18:55:30 -0800
Subject: [R-SIG-Mac] 64bit R via Aquamacs/ESS
Message-ID: <2DB2D567-D42D-43AB-867D-B3A056432BF7@stanford.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100113/d3ad8283/attachment.pl>

From deleeuw at stat.ucla.edu  Fri Jan 15 03:06:26 2010
From: deleeuw at stat.ucla.edu (Jan de Leeuw)
Date: Thu, 14 Jan 2010 18:06:26 -0800
Subject: [R-SIG-Mac] udunits and RNetCDF ... simple or hard to get Mac
	version?
In-Reply-To: <7bb75e2fbbfe6d1a29a41083256d3d23.squirrel@crdmail.ucsd.edu>
References: <mailman.13.1246788004.28139.r-sig-mac@stat.math.ethz.ch>
	<8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
	<7bb75e2fbbfe6d1a29a41083256d3d23.squirrel@crdmail.ucsd.edu>
Message-ID: <E801C874-21A1-447E-97A5-D5DB6387BE54@stat.ucla.edu>

Robert, you should look at the config.log first

now, Dave, do you expect udunits-1 or udunits-2 
to be installed ?


On Jan 14, 2010, at 17:57 , David Pierce wrote:

> Hello,
> 
> maintainer of the udunits package here.  Can you install other source
> packages successfully?  Seeing the error "C compiler cannot create
> executables" makes me suspect it's not a problem with the udunits package
> per se.
> 
> Regards,
> 
> --Dave
> 
> 
> Robert Chatfield wrote:
>> We have been using both ncdf and  RNetCDF
>> packages, and often enjoy the general approach
>> offered by RNetCDF
>> 
>> That package has not been available on the Mac for
>> some time, it appears, ... but was maybe available
>> last year  (see message below).
>> 
>> According to the CRAN documentation page and my own
>> attempts to acquire RNetCDF,  the problem
>> appears to be with the needed package "udunits"
>> 
>> That package is also useful for atmosphere, oceans,
>> and connected sciences.
>> 
>> With a MacPro 1.1 running 10.5.8 and the indicated R and RGui,
>> I get this result
>> 
>> * installing *source* package ?udunits? ...
>> creating cache ./config.cache
>> checking how to run the C preprocessor... gcc -arch i386 -std=gnu99 -E
>> checking for gcc... gcc -arch i386 -std=gnu99
>> checking whether the C compiler (gcc -arch i386 -std=gnu99 -g -O2 )
>> works... no
>> configure: error: installation or configuration problem: C compiler
>> cannot create executables.
>> ERROR: configuration failed for package ?udunits?
>> * removing ?/Library/Frameworks/R.framework/Versions/2.10/Resources/
>> library/udunits?
>> 
>> The downloaded packages are in
>> 	?/private/var/folders/pb/pbT1eFNa2RaEvE+1Yx812U+++TI/-Tmp-/RtmpzhkbgP/
>> downloaded_packages?
>>> 
>>> 
>>> sessionInfo()
>> R version 2.10.0 (2009-10-26)
>> i386-apple-darwin9.8.0
>> 
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>> 
>> loaded via a namespace (and not attached):
>> [1] tools_2.10.0
>> Warning message:
>> In install.packages(c("udunits"), lib = "/Library/Frameworks/
>> R.framework/Resources/library/",  :
>>   installation of package 'udunits' had non-zero exit status
>>> 
>> 
>> ***************
>> Is this hard to fix?
>> Could there be a RNetCDF without the udunits package?  .... I myself
>> use udunits rather rarely.
>> 
>> Bob Chatfield
>> 
>> 
>> 
>> 
>>>> Message: 2
>>>> Date: Sat, 4 Jul 2009 14:35:40 -0700
>>>> From: Jan de Leeuw <deleeuw at stat.ucla.edu>
>>>> Subject: Re: [R-SIG-Mac] Unable to install package RGtk2
>>>> To: "r-sig-mac at stat.math.ethz.ch Mac List"
>>>> 	<r-sig-mac at stat.math.ethz.ch>
>>>> Cc: statcompute <statcompute at mta.stat.ucla.edu>
>>>> Message-ID: <FD535A21-B873-4986-8466-876455B77C1C at stat.ucla.edu>
>>>> Content-Type: text/plain; charset=windows-1252; format=flowed;
>>>> 	delsp=yes
>>>> 
>>>> I have a 2.5 GB file localxxxxxx.tgz, with xxxxxx indicating the
>>>> date.
>>>> 
>>>> You can get it from afp://gifi.stat.ucla.edu and then
>>>> from my Public directory in /software. Or from a WebDAV connection to
>>>> http://public.me.com/jdeleeuw/software (it's currently gone from
>>>> me.com, but
>>>> it will be there again soon).
>>>> 
>>>> It contains
>>>> 
>>>> a. 64-bit version of R-devel (a.k.a R-2.10.0) with about 600
>>>> packages.
>>>> It supports the
>>>>   GTK+, tcl/tk, SciViews, etc interfaces.
>>>> 
>>>> b. 64-bit version of grass-trunk (a.k.a. GRASS-7.0).
>>>> 
>>>> c. Support-libraries and executables, all 64-bit, for ImageMagick,
>>>> freetype, GDAL, proj,
>>>>   gsl, gmp, mpfr, fftw, mysql, pgsql, hadoop, root, heasoft, hdf4/5,
>>>> netcdf, graphviz,
>>>>   ffmpeg, asymptote, expat, cdd, cfitsio, fontconfig, gc, geos,
>>>> geotiff, gd, tiff, jpeg,
>>>>   png, svg, gettext, harminv, iconv, intl, jags, jasper, las,
>>>> pixman, qhull, readline,
>>>>   sqlite, szip, tcl/tk, udunits, xml2, gtk2, gdk, atk, glib, cairo,
>>>> pango, glade, git,
>>>>   wget, gawk, sed, gs, pkg-config, tramo, seats, x12a, yacas, pvm3
>>>> --- probably more.
>>>> 
>>>> d. A 64-bit version of gcc, g++, gfortran 4.2.5 with gomp.
>>>> Everything,
>>>> including the
>>>>   compilers, is compiled with flags "-m64 -O3 -fopenmp -
>>>> mtune=native" -- "native" in
>>>>   this context means "nocona", i.e. Intel Core Duo.
>>>> 
>>>> e. texlive-2008
>>>> 
>>>> It is updated one or twice per week with recent cvs, svn or git
>>>> versions. It installs in
>>>> /usr/local. The R is pretty snappy on my machine.
>>>> 
>>>> !!!!!!!!!!!!!!!!!
>>>> Limitations
>>>> !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>>>> 
>>>> 1. This is for CLI junkies. Normal people will stay away from this.
>>>> 
>>>> 2. The quartz device in R works, but many other things are either GTK
>>>> +, tcl/tk, or even
>>>>   Athena.
>>>> 
>>>> 3. This was compiled on OS X 10.6 (Snow Leopard). Your Leopard
>>>> mileage
>>>> may vary. No
>>>>   universal binaries of any sort, of course.
>>>> 
>>>> 4. Basically it creates a separate 64-bit development environment,
>>>> independent of the Apple stuff
>>>>   (and independently, if you want, of the "normal" and nice R and
>>>> GRASS framework-builds and GUIs).
>>>> 
>>>> 5. This is a large file. After unpacking "du -s /usr/local" says
>>>> 14167872 (i.e. 14 GB).
>>>> 
>>>> 6. I am not really supporting this for users outside my department.
>>>> That would be unwise.
>> 
>> 
>> Dr. Robert Chatfield
>> Earth Sciences, MS 245-5
>> NASA Ames Research Center
>> Moffett Field, CA 94035    USA
>> 
>> Ph: 650-604-5490  FAX 650-604-3625
>> 
>> http://geo.arc.nasa.gov/sgg/chatfield
>> 
>> 
>> 
>> 
>> 
> 
> 
> -------------------------------------------------------------------
> David W. Pierce
> Division of Climate, Atmospheric Science, and Physical Oceanography
> Scripps Institution of Oceanography
> (858) 534-8276 (voice)  /  (858) 534-8561 (fax)    dpierce at ucsd.edu
> -------------------------------------------------------------------
> 
> 
> 

===
Jan de Leeuw; Distinguished Professor and Chair, UCLA Department of Statistics;
Director: UCLA Center for Environmental Statistics (CES);
Editor: Journal of Multivariate Analysis, Journal of Statistical Software;
US mail: 8125 Math Sciences Bldg, Box 951554, Los Angeles, CA 90095-1554
phone (310)-825-9550;  fax (310)-206-5658;  email: deleeuw at stat.ucla.edu
.mac: jdeleeuw ++++++  aim: deleeuwjan ++++++ skype: j_deleeuw
homepages: http://gifi.stat.ucla.edu ++++++ http://www.cuddyvalley.org
 -------------------------------------------------------------------------------------------------
          No matter where you go, there you are. --- Buckaroo Banzai
                   http://gifi.stat.ucla.edu/sounds/nomatter.au                                  
 -------------------------------------------------------------------------------------------------        


From Robert.B.Chatfield at nasa.gov  Fri Jan 15 02:08:26 2010
From: Robert.B.Chatfield at nasa.gov (Robert Chatfield)
Date: Thu, 14 Jan 2010 17:08:26 -0800
Subject: [R-SIG-Mac] udunits and RNetCDF ... simple or hard to get Mac
	version?
In-Reply-To: <mailman.13.1246788004.28139.r-sig-mac@stat.math.ethz.ch>
References: <mailman.13.1246788004.28139.r-sig-mac@stat.math.ethz.ch>
Message-ID: <8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100114/55090b84/attachment.pl>

From dpierce at ucsd.edu  Fri Jan 15 02:57:15 2010
From: dpierce at ucsd.edu (David Pierce)
Date: Thu, 14 Jan 2010 17:57:15 -0800 (PST)
Subject: [R-SIG-Mac] udunits and RNetCDF ... simple or hard to get Mac
	version?
In-Reply-To: <8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
References: <mailman.13.1246788004.28139.r-sig-mac@stat.math.ethz.ch>
	<8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
Message-ID: <7bb75e2fbbfe6d1a29a41083256d3d23.squirrel@crdmail.ucsd.edu>

Hello,

maintainer of the udunits package here.  Can you install other source
packages successfully?  Seeing the error "C compiler cannot create
executables" makes me suspect it's not a problem with the udunits package
per se.

Regards,

--Dave


Robert Chatfield wrote:
> We have been using both ncdf and  RNetCDF
> packages, and often enjoy the general approach
> offered by RNetCDF
>
> That package has not been available on the Mac for
> some time, it appears, ... but was maybe available
> last year  (see message below).
>
> According to the CRAN documentation page and my own
> attempts to acquire RNetCDF,  the problem
> appears to be with the needed package "udunits"
>
> That package is also useful for atmosphere, oceans,
> and connected sciences.
>
> With a MacPro 1.1 running 10.5.8 and the indicated R and RGui,
> I get this result
>
> * installing *source* package ?udunits? ...
> creating cache ./config.cache
> checking how to run the C preprocessor... gcc -arch i386 -std=gnu99 -E
> checking for gcc... gcc -arch i386 -std=gnu99
> checking whether the C compiler (gcc -arch i386 -std=gnu99 -g -O2 )
> works... no
> configure: error: installation or configuration problem: C compiler
> cannot create executables.
> ERROR: configuration failed for package ?udunits?
> * removing ?/Library/Frameworks/R.framework/Versions/2.10/Resources/
> library/udunits?
>
> The downloaded packages are in
> 	?/private/var/folders/pb/pbT1eFNa2RaEvE+1Yx812U+++TI/-Tmp-/RtmpzhkbgP/
> downloaded_packages?
>  >
>  >
>  > sessionInfo()
> R version 2.10.0 (2009-10-26)
> i386-apple-darwin9.8.0
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] tools_2.10.0
> Warning message:
> In install.packages(c("udunits"), lib = "/Library/Frameworks/
> R.framework/Resources/library/",  :
>    installation of package 'udunits' had non-zero exit status
>  >
>
> ***************
> Is this hard to fix?
> Could there be a RNetCDF without the udunits package?  .... I myself
> use udunits rather rarely.
>
> Bob Chatfield
>
>
>
>
>>> Message: 2
>>> Date: Sat, 4 Jul 2009 14:35:40 -0700
>>> From: Jan de Leeuw <deleeuw at stat.ucla.edu>
>>> Subject: Re: [R-SIG-Mac] Unable to install package RGtk2
>>> To: "r-sig-mac at stat.math.ethz.ch Mac List"
>>> 	<r-sig-mac at stat.math.ethz.ch>
>>> Cc: statcompute <statcompute at mta.stat.ucla.edu>
>>> Message-ID: <FD535A21-B873-4986-8466-876455B77C1C at stat.ucla.edu>
>>> Content-Type: text/plain; charset=windows-1252; format=flowed;
>>> 	delsp=yes
>>>
>>> I have a 2.5 GB file localxxxxxx.tgz, with xxxxxx indicating the
>>> date.
>>>
>>> You can get it from afp://gifi.stat.ucla.edu and then
>>> from my Public directory in /software. Or from a WebDAV connection to
>>> http://public.me.com/jdeleeuw/software (it's currently gone from
>>> me.com, but
>>> it will be there again soon).
>>>
>>> It contains
>>>
>>> a. 64-bit version of R-devel (a.k.a R-2.10.0) with about 600
>>> packages.
>>> It supports the
>>>    GTK+, tcl/tk, SciViews, etc interfaces.
>>>
>>> b. 64-bit version of grass-trunk (a.k.a. GRASS-7.0).
>>>
>>> c. Support-libraries and executables, all 64-bit, for ImageMagick,
>>> freetype, GDAL, proj,
>>>    gsl, gmp, mpfr, fftw, mysql, pgsql, hadoop, root, heasoft, hdf4/5,
>>> netcdf, graphviz,
>>>    ffmpeg, asymptote, expat, cdd, cfitsio, fontconfig, gc, geos,
>>> geotiff, gd, tiff, jpeg,
>>>    png, svg, gettext, harminv, iconv, intl, jags, jasper, las,
>>> pixman, qhull, readline,
>>>    sqlite, szip, tcl/tk, udunits, xml2, gtk2, gdk, atk, glib, cairo,
>>> pango, glade, git,
>>>    wget, gawk, sed, gs, pkg-config, tramo, seats, x12a, yacas, pvm3
>>> --- probably more.
>>>
>>> d. A 64-bit version of gcc, g++, gfortran 4.2.5 with gomp.
>>> Everything,
>>> including the
>>>    compilers, is compiled with flags "-m64 -O3 -fopenmp -
>>> mtune=native" -- "native" in
>>>    this context means "nocona", i.e. Intel Core Duo.
>>>
>>> e. texlive-2008
>>>
>>> It is updated one or twice per week with recent cvs, svn or git
>>> versions. It installs in
>>> /usr/local. The R is pretty snappy on my machine.
>>>
>>> !!!!!!!!!!!!!!!!!
>>> Limitations
>>>  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>>>
>>> 1. This is for CLI junkies. Normal people will stay away from this.
>>>
>>> 2. The quartz device in R works, but many other things are either GTK
>>> +, tcl/tk, or even
>>>    Athena.
>>>
>>> 3. This was compiled on OS X 10.6 (Snow Leopard). Your Leopard
>>> mileage
>>> may vary. No
>>>    universal binaries of any sort, of course.
>>>
>>> 4. Basically it creates a separate 64-bit development environment,
>>> independent of the Apple stuff
>>>    (and independently, if you want, of the "normal" and nice R and
>>> GRASS framework-builds and GUIs).
>>>
>>> 5. This is a large file. After unpacking "du -s /usr/local" says
>>> 14167872 (i.e. 14 GB).
>>>
>>> 6. I am not really supporting this for users outside my department.
>>> That would be unwise.
>
>
> Dr. Robert Chatfield
> Earth Sciences, MS 245-5
> NASA Ames Research Center
> Moffett Field, CA 94035    USA
>
> Ph: 650-604-5490  FAX 650-604-3625
>
> http://geo.arc.nasa.gov/sgg/chatfield
>
>
>
>
>


-------------------------------------------------------------------
David W. Pierce
Division of Climate, Atmospheric Science, and Physical Oceanography
Scripps Institution of Oceanography
(858) 534-8276 (voice)  /  (858) 534-8561 (fax)    dpierce at ucsd.edu


From dpierce at ucsd.edu  Fri Jan 15 03:12:55 2010
From: dpierce at ucsd.edu (David Pierce)
Date: Thu, 14 Jan 2010 18:12:55 -0800 (PST)
Subject: [R-SIG-Mac] udunits and RNetCDF ... simple or hard to get Mac
	version?
In-Reply-To: <E801C874-21A1-447E-97A5-D5DB6387BE54@stat.ucla.edu>
References: <mailman.13.1246788004.28139.r-sig-mac@stat.math.ethz.ch>
	<8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
	<7bb75e2fbbfe6d1a29a41083256d3d23.squirrel@crdmail.ucsd.edu>
	<E801C874-21A1-447E-97A5-D5DB6387BE54@stat.ucla.edu>
Message-ID: <328dee52bfd180045c0525264be11980.squirrel@crdmail.ucsd.edu>

Currently, udunits-1, although I have a beta version that works with
udunits-2 that you are welcome to get a copy of (aka "be a guinea pig
for").

--Dave



Jan de Leeuw wrote:
> Robert, you should look at the config.log first
>
> now, Dave, do you expect udunits-1 or udunits-2
> to be installed ?
>
>
> On Jan 14, 2010, at 17:57 , David Pierce wrote:
>
>> Hello,
>>
>> maintainer of the udunits package here.  Can you install other source
>> packages successfully?  Seeing the error "C compiler cannot create
>> executables" makes me suspect it's not a problem with the udunits
>> package
>> per se.
>>
>> Regards,
>>
>> --Dave
>>
>>
>> Robert Chatfield wrote:
>>> We have been using both ncdf and  RNetCDF
>>> packages, and often enjoy the general approach
>>> offered by RNetCDF
>>>
>>> That package has not been available on the Mac for
>>> some time, it appears, ... but was maybe available
>>> last year  (see message below).
>>>
>>> According to the CRAN documentation page and my own
>>> attempts to acquire RNetCDF,  the problem
>>> appears to be with the needed package "udunits"
>>>
>>> That package is also useful for atmosphere, oceans,
>>> and connected sciences.
>>>
>>> With a MacPro 1.1 running 10.5.8 and the indicated R and RGui,
>>> I get this result
>>>
>>> * installing *source* package ?udunits? ...
>>> creating cache ./config.cache
>>> checking how to run the C preprocessor... gcc -arch i386 -std=gnu99 -E
>>> checking for gcc... gcc -arch i386 -std=gnu99
>>> checking whether the C compiler (gcc -arch i386 -std=gnu99 -g -O2 )
>>> works... no
>>> configure: error: installation or configuration problem: C compiler
>>> cannot create executables.
>>> ERROR: configuration failed for package ?udunits?
>>> * removing ?/Library/Frameworks/R.framework/Versions/2.10/Resources/
>>> library/udunits?
>>>
>>> The downloaded packages are in
>>> 	?/private/var/folders/pb/pbT1eFNa2RaEvE+1Yx812U+++TI/-Tmp-/RtmpzhkbgP/
>>> downloaded_packages?
>>>>
>>>>
>>>> sessionInfo()
>>> R version 2.10.0 (2009-10-26)
>>> i386-apple-darwin9.8.0
>>>
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] tools_2.10.0
>>> Warning message:
>>> In install.packages(c("udunits"), lib = "/Library/Frameworks/
>>> R.framework/Resources/library/",  :
>>>   installation of package 'udunits' had non-zero exit status
>>>>
>>>
>>> ***************
>>> Is this hard to fix?
>>> Could there be a RNetCDF without the udunits package?  .... I myself
>>> use udunits rather rarely.
>>>
>>> Bob Chatfield
>>>
>>>
>>>
>>>
>>>>> Message: 2
>>>>> Date: Sat, 4 Jul 2009 14:35:40 -0700
>>>>> From: Jan de Leeuw <deleeuw at stat.ucla.edu>
>>>>> Subject: Re: [R-SIG-Mac] Unable to install package RGtk2
>>>>> To: "r-sig-mac at stat.math.ethz.ch Mac List"
>>>>> 	<r-sig-mac at stat.math.ethz.ch>
>>>>> Cc: statcompute <statcompute at mta.stat.ucla.edu>
>>>>> Message-ID: <FD535A21-B873-4986-8466-876455B77C1C at stat.ucla.edu>
>>>>> Content-Type: text/plain; charset=windows-1252; format=flowed;
>>>>> 	delsp=yes
>>>>>
>>>>> I have a 2.5 GB file localxxxxxx.tgz, with xxxxxx indicating the
>>>>> date.
>>>>>
>>>>> You can get it from afp://gifi.stat.ucla.edu and then
>>>>> from my Public directory in /software. Or from a WebDAV connection to
>>>>> http://public.me.com/jdeleeuw/software (it's currently gone from
>>>>> me.com, but
>>>>> it will be there again soon).
>>>>>
>>>>> It contains
>>>>>
>>>>> a. 64-bit version of R-devel (a.k.a R-2.10.0) with about 600
>>>>> packages.
>>>>> It supports the
>>>>>   GTK+, tcl/tk, SciViews, etc interfaces.
>>>>>
>>>>> b. 64-bit version of grass-trunk (a.k.a. GRASS-7.0).
>>>>>
>>>>> c. Support-libraries and executables, all 64-bit, for ImageMagick,
>>>>> freetype, GDAL, proj,
>>>>>   gsl, gmp, mpfr, fftw, mysql, pgsql, hadoop, root, heasoft, hdf4/5,
>>>>> netcdf, graphviz,
>>>>>   ffmpeg, asymptote, expat, cdd, cfitsio, fontconfig, gc, geos,
>>>>> geotiff, gd, tiff, jpeg,
>>>>>   png, svg, gettext, harminv, iconv, intl, jags, jasper, las,
>>>>> pixman, qhull, readline,
>>>>>   sqlite, szip, tcl/tk, udunits, xml2, gtk2, gdk, atk, glib, cairo,
>>>>> pango, glade, git,
>>>>>   wget, gawk, sed, gs, pkg-config, tramo, seats, x12a, yacas, pvm3
>>>>> --- probably more.
>>>>>
>>>>> d. A 64-bit version of gcc, g++, gfortran 4.2.5 with gomp.
>>>>> Everything,
>>>>> including the
>>>>>   compilers, is compiled with flags "-m64 -O3 -fopenmp -
>>>>> mtune=native" -- "native" in
>>>>>   this context means "nocona", i.e. Intel Core Duo.
>>>>>
>>>>> e. texlive-2008
>>>>>
>>>>> It is updated one or twice per week with recent cvs, svn or git
>>>>> versions. It installs in
>>>>> /usr/local. The R is pretty snappy on my machine.
>>>>>
>>>>> !!!!!!!!!!!!!!!!!
>>>>> Limitations
>>>>> !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>>>>>
>>>>> 1. This is for CLI junkies. Normal people will stay away from this.
>>>>>
>>>>> 2. The quartz device in R works, but many other things are either GTK
>>>>> +, tcl/tk, or even
>>>>>   Athena.
>>>>>
>>>>> 3. This was compiled on OS X 10.6 (Snow Leopard). Your Leopard
>>>>> mileage
>>>>> may vary. No
>>>>>   universal binaries of any sort, of course.
>>>>>
>>>>> 4. Basically it creates a separate 64-bit development environment,
>>>>> independent of the Apple stuff
>>>>>   (and independently, if you want, of the "normal" and nice R and
>>>>> GRASS framework-builds and GUIs).
>>>>>
>>>>> 5. This is a large file. After unpacking "du -s /usr/local" says
>>>>> 14167872 (i.e. 14 GB).
>>>>>
>>>>> 6. I am not really supporting this for users outside my department.
>>>>> That would be unwise.
>>>
>>>
>>> Dr. Robert Chatfield
>>> Earth Sciences, MS 245-5
>>> NASA Ames Research Center
>>> Moffett Field, CA 94035    USA
>>>
>>> Ph: 650-604-5490  FAX 650-604-3625
>>>
>>> http://geo.arc.nasa.gov/sgg/chatfield
>>>
>>>
>>>
>>>
>>>
>>
>>
>> -------------------------------------------------------------------
>> David W. Pierce
>> Division of Climate, Atmospheric Science, and Physical Oceanography
>> Scripps Institution of Oceanography
>> (858) 534-8276 (voice)  /  (858) 534-8561 (fax)    dpierce at ucsd.edu
>> -------------------------------------------------------------------
>>
>>
>>
>
> ===
> Jan de Leeuw; Distinguished Professor and Chair, UCLA Department of
> Statistics;
> Director: UCLA Center for Environmental Statistics (CES);
> Editor: Journal of Multivariate Analysis, Journal of Statistical Software;
> US mail: 8125 Math Sciences Bldg, Box 951554, Los Angeles, CA 90095-1554
> phone (310)-825-9550;  fax (310)-206-5658;  email: deleeuw at stat.ucla.edu
> .mac: jdeleeuw ++++++  aim: deleeuwjan ++++++ skype: j_deleeuw
> homepages: http://gifi.stat.ucla.edu ++++++ http://www.cuddyvalley.org
>  -------------------------------------------------------------------------------------------------
>           No matter where you go, there you are. --- Buckaroo Banzai
>                    http://gifi.stat.ucla.edu/sounds/nomatter.au
>  -------------------------------------------------------------------------------------------------
>
>
>
>
>
>
>


-------------------------------------------------------------------
David W. Pierce
Division of Climate, Atmospheric Science, and Physical Oceanography
Scripps Institution of Oceanography
(858) 534-8276 (voice)  /  (858) 534-8561 (fax)    dpierce at ucsd.edu


From simon.urbanek at r-project.org  Fri Jan 15 15:32:59 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 15 Jan 2010 09:32:59 -0500
Subject: [R-SIG-Mac] udunits and RNetCDF ... simple or hard to get Mac
	version?
In-Reply-To: <8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
References: <mailman.13.1246788004.28139.r-sig-mac@stat.math.ethz.ch>
	<8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
Message-ID: <A3DDAFF2-989F-4D89-AE08-13828DCAD6BC@r-project.org>

Bob,

On Jan 14, 2010, at 8:08 PM, Robert Chatfield wrote:

> We have been using both ncdf and  RNetCDF
> packages, and often enjoy the general approach
> offered by RNetCDF
> 
> That package has not been available on the Mac for
> some time, it appears, ... but was maybe available
> last year  (see message below).
> 

AFAIR the problem with udunits (the library) is that it is not self-contained as it requires external files to be present. That means that the udunits package will not work properly unless you have those files. That is unfortunate since it prevents us from shipping packages based on it. We have in the past provided udunits without those external files thus not fully functional (albeit for the tests we did have the files installed), but not recently. We could do that again if desired but it is not very clean ...


> According to the CRAN documentation page and my own
> attempts to acquire RNetCDF,  the problem
> appears to be with the needed package "udunits"
> 
> That package is also useful for atmosphere, oceans,
> and connected sciences.
> 
> With a MacPro 1.1 running 10.5.8 and the indicated R and RGui,
> I get this result
> 
> * installing *source* package ?udunits? ...
> creating cache ./config.cache
> checking how to run the C preprocessor... gcc -arch i386 -std=gnu99 -E
> checking for gcc... gcc -arch i386 -std=gnu99
> checking whether the C compiler (gcc -arch i386 -std=gnu99 -g -O2 )  
> works... no
> configure: error: installation or configuration problem: C compiler  
> cannot create executables.

As Dave said this is likely a problem in your setup. Make sure you have recent Xcode installed and check config.log for the exact error (i.e. unpack udunits and run R CMD INSTALL udunits -- then you'll find config.log inside).

Cheers,
Simon



> ERROR: configuration failed for package ?udunits?
> * removing ?/Library/Frameworks/R.framework/Versions/2.10/Resources/ 
> library/udunits?
> 
> The downloaded packages are in
> 	?/private/var/folders/pb/pbT1eFNa2RaEvE+1Yx812U+++TI/-Tmp-/RtmpzhkbgP/ 
> downloaded_packages?
>> 
>> 
>> sessionInfo()
> R version 2.10.0 (2009-10-26)
> i386-apple-darwin9.8.0
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] tools_2.10.0
> Warning message:
> In install.packages(c("udunits"), lib = "/Library/Frameworks/ 
> R.framework/Resources/library/",  :
>   installation of package 'udunits' had non-zero exit status
>> 
> 
> ***************
> Is this hard to fix?
> Could there be a RNetCDF without the udunits package?  .... I myself
> use udunits rather rarely.
> 
> Bob Chatfield
> 
> 
> 
> 
>>> Message: 2
>>> Date: Sat, 4 Jul 2009 14:35:40 -0700
>>> From: Jan de Leeuw <deleeuw at stat.ucla.edu>
>>> Subject: Re: [R-SIG-Mac] Unable to install package RGtk2
>>> To: "r-sig-mac at stat.math.ethz.ch Mac List"
>>> 	<r-sig-mac at stat.math.ethz.ch>
>>> Cc: statcompute <statcompute at mta.stat.ucla.edu>
>>> Message-ID: <FD535A21-B873-4986-8466-876455B77C1C at stat.ucla.edu>
>>> Content-Type: text/plain; charset=windows-1252; format=flowed;
>>> 	delsp=yes
>>> 
>>> I have a 2.5 GB file localxxxxxx.tgz, with xxxxxx indicating the  
>>> date.
>>> 
>>> You can get it from afp://gifi.stat.ucla.edu and then
>>> from my Public directory in /software. Or from a WebDAV connection to
>>> http://public.me.com/jdeleeuw/software (it's currently gone from
>>> me.com, but
>>> it will be there again soon).
>>> 
>>> It contains
>>> 
>>> a. 64-bit version of R-devel (a.k.a R-2.10.0) with about 600  
>>> packages.
>>> It supports the
>>>   GTK+, tcl/tk, SciViews, etc interfaces.
>>> 
>>> b. 64-bit version of grass-trunk (a.k.a. GRASS-7.0).
>>> 
>>> c. Support-libraries and executables, all 64-bit, for ImageMagick,
>>> freetype, GDAL, proj,
>>>   gsl, gmp, mpfr, fftw, mysql, pgsql, hadoop, root, heasoft, hdf4/5,
>>> netcdf, graphviz,
>>>   ffmpeg, asymptote, expat, cdd, cfitsio, fontconfig, gc, geos,
>>> geotiff, gd, tiff, jpeg,
>>>   png, svg, gettext, harminv, iconv, intl, jags, jasper, las,
>>> pixman, qhull, readline,
>>>   sqlite, szip, tcl/tk, udunits, xml2, gtk2, gdk, atk, glib, cairo,
>>> pango, glade, git,
>>>   wget, gawk, sed, gs, pkg-config, tramo, seats, x12a, yacas, pvm3
>>> --- probably more.
>>> 
>>> d. A 64-bit version of gcc, g++, gfortran 4.2.5 with gomp.  
>>> Everything,
>>> including the
>>>   compilers, is compiled with flags "-m64 -O3 -fopenmp -
>>> mtune=native" -- "native" in
>>>   this context means "nocona", i.e. Intel Core Duo.
>>> 
>>> e. texlive-2008
>>> 
>>> It is updated one or twice per week with recent cvs, svn or git
>>> versions. It installs in
>>> /usr/local. The R is pretty snappy on my machine.
>>> 
>>> !!!!!!!!!!!!!!!!!
>>> Limitations 
>>> !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>>> 
>>> 1. This is for CLI junkies. Normal people will stay away from this.
>>> 
>>> 2. The quartz device in R works, but many other things are either GTK
>>> +, tcl/tk, or even
>>>   Athena.
>>> 
>>> 3. This was compiled on OS X 10.6 (Snow Leopard). Your Leopard  
>>> mileage
>>> may vary. No
>>>   universal binaries of any sort, of course.
>>> 
>>> 4. Basically it creates a separate 64-bit development environment,
>>> independent of the Apple stuff
>>>   (and independently, if you want, of the "normal" and nice R and
>>> GRASS framework-builds and GUIs).
>>> 
>>> 5. This is a large file. After unpacking "du -s /usr/local" says
>>> 14167872 (i.e. 14 GB).
>>> 
>>> 6. I am not really supporting this for users outside my department.
>>> That would be unwise.
> 
> 
> Dr. Robert Chatfield
> Earth Sciences, MS 245-5
> NASA Ames Research Center
> Moffett Field, CA 94035    USA
> 
> Ph: 650-604-5490  FAX 650-604-3625
> 
> http://geo.arc.nasa.gov/sgg/chatfield
> 
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From carnivorescience at gmail.com  Fri Jan 15 15:42:19 2010
From: carnivorescience at gmail.com (Guillaume Chapron)
Date: Fri, 15 Jan 2010 15:42:19 +0100
Subject: [R-SIG-Mac] Strange error message with mclapply
Message-ID: <1C1C542B-53EF-4FCA-A07E-D1CF9BAC6C58@gmail.com>

Hello,

I have this test function:

onerun <- function(j) {
	
	p <- numeric(10)	
	for (i in 1:9) {	
		p[i+1] <- j + p[i]	
	}	
	return(p)

}

Then I can call:

lapply(1:100, onerun)

I would like to multi-thread this, so I do:

library(multicore)
mclapply(1:100, onerun)

and it works.

But when I increase the size of the computations, i.e.

mclapply(1:10000, onerun)

it crashes with this error message:

The process has forked and you cannot use this CoreFoundation functionality safely. You MUST exec().
Break on __THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC__() to debug.

What do I do wrong? I have a dual core MBP.

Thanks!

Guillaume


From simon.urbanek at r-project.org  Fri Jan 15 16:05:40 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 15 Jan 2010 10:05:40 -0500
Subject: [R-SIG-Mac] Strange error message with mclapply
In-Reply-To: <1C1C542B-53EF-4FCA-A07E-D1CF9BAC6C58@gmail.com>
References: <1C1C542B-53EF-4FCA-A07E-D1CF9BAC6C58@gmail.com>
Message-ID: <B4241992-9C55-4F81-877C-9DDEC2D30F09@r-project.org>

Guillaume,

please read ?multicore -- especially the section "Warning".

Cheers,
Simon


On Jan 15, 2010, at 9:42 , Guillaume Chapron wrote:

> Hello,
>
> I have this test function:
>
> onerun <- function(j) {
> 	
> 	p <- numeric(10)	
> 	for (i in 1:9) {	
> 		p[i+1] <- j + p[i]	
> 	}	
> 	return(p)
>
> }
>
> Then I can call:
>
> lapply(1:100, onerun)
>
> I would like to multi-thread this, so I do:
>
> library(multicore)
> mclapply(1:100, onerun)
>
> and it works.
>
> But when I increase the size of the computations, i.e.
>
> mclapply(1:10000, onerun)
>
> it crashes with this error message:
>
> The process has forked and you cannot use this CoreFoundation  
> functionality safely. You MUST exec().
> Break on  
> __THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC__ 
> () to debug.
>
> What do I do wrong? I have a dual core MBP.
>
> Thanks!
>
> Guillaume
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>


From ripley at stats.ox.ac.uk  Fri Jan 15 16:12:00 2010
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 15 Jan 2010 15:12:00 +0000 (GMT)
Subject: [R-SIG-Mac] udunits and RNetCDF ... simple or hard to get Mac
 version?
In-Reply-To: <A3DDAFF2-989F-4D89-AE08-13828DCAD6BC@r-project.org>
References: <mailman.13.1246788004.28139.r-sig-mac@stat.math.ethz.ch>
	<8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
	<A3DDAFF2-989F-4D89-AE08-13828DCAD6BC@r-project.org>
Message-ID: <alpine.LFD.2.00.1001151500160.29353@gannet.stats.ox.ac.uk>

On Fri, 15 Jan 2010, Simon Urbanek wrote:

> Bob,
>
> On Jan 14, 2010, at 8:08 PM, Robert Chatfield wrote:
>
>> We have been using both ncdf and  RNetCDF
>> packages, and often enjoy the general approach
>> offered by RNetCDF
>>
>> That package has not been available on the Mac for
>> some time, it appears, ... but was maybe available
>> last year  (see message below).
>>
>
> AFAIR the problem with udunits (the library) is that it is not 
> self-contained as it requires external files to be present. That 
> means that the udunits package will not work properly unless you 
> have those files. That is unfortunate since it prevents us from 
> shipping packages based on it. We have in the past provided udunits 
> without those external files thus not fully functional (albeit for 
> the tests we did have the files installed), but not recently. We 
> could do that again if desired but it is not very clean ...

On Windows I modified udunits to look locally and then shipped the 
data file (AFAIK there is only one).  But I'd probably not do it 
again.

>> According to the CRAN documentation page and my own
>> attempts to acquire RNetCDF,  the problem
>> appears to be with the needed package "udunits"
>>
>> That package is also useful for atmosphere, oceans,
>> and connected sciences.
>>
>> With a MacPro 1.1 running 10.5.8 and the indicated R and RGui,
>> I get this result
>>
>> * installing *source* package ?udunits? ...
>> creating cache ./config.cache
>> checking how to run the C preprocessor... gcc -arch i386 -std=gnu99 -E
>> checking for gcc... gcc -arch i386 -std=gnu99
>> checking whether the C compiler (gcc -arch i386 -std=gnu99 -g -O2 )
>> works... no
>> configure: error: installation or configuration problem: C compiler
>> cannot create executables.
>
> As Dave said this is likely a problem in your setup. Make sure you have recent Xcode installed and check config.log for the exact error (i.e. unpack udunits and run R CMD INSTALL udunits -- then you'll find config.log inside).
>
> Cheers,
> Simon
>
>
>
>> ERROR: configuration failed for package ?udunits?
>> * removing ?/Library/Frameworks/R.framework/Versions/2.10/Resources/
>> library/udunits?
>>
>> The downloaded packages are in
>> 	?/private/var/folders/pb/pbT1eFNa2RaEvE+1Yx812U+++TI/-Tmp-/RtmpzhkbgP/
>> downloaded_packages?
>>>
>>>
>>> sessionInfo()
>> R version 2.10.0 (2009-10-26)
>> i386-apple-darwin9.8.0
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] tools_2.10.0
>> Warning message:
>> In install.packages(c("udunits"), lib = "/Library/Frameworks/
>> R.framework/Resources/library/",  :
>>   installation of package 'udunits' had non-zero exit status
>>>
>>
>> ***************
>> Is this hard to fix?
>> Could there be a RNetCDF without the udunits package?  .... I myself
>> use udunits rather rarely.
>>
>> Bob Chatfield
>>
>>
>>
>>
>>>> Message: 2
>>>> Date: Sat, 4 Jul 2009 14:35:40 -0700
>>>> From: Jan de Leeuw <deleeuw at stat.ucla.edu>
>>>> Subject: Re: [R-SIG-Mac] Unable to install package RGtk2
>>>> To: "r-sig-mac at stat.math.ethz.ch Mac List"
>>>> 	<r-sig-mac at stat.math.ethz.ch>
>>>> Cc: statcompute <statcompute at mta.stat.ucla.edu>
>>>> Message-ID: <FD535A21-B873-4986-8466-876455B77C1C at stat.ucla.edu>
>>>> Content-Type: text/plain; charset=windows-1252; format=flowed;
>>>> 	delsp=yes
>>>>
>>>> I have a 2.5 GB file localxxxxxx.tgz, with xxxxxx indicating the
>>>> date.
>>>>
>>>> You can get it from afp://gifi.stat.ucla.edu and then
>>>> from my Public directory in /software. Or from a WebDAV connection to
>>>> http://public.me.com/jdeleeuw/software (it's currently gone from
>>>> me.com, but
>>>> it will be there again soon).
>>>>
>>>> It contains
>>>>
>>>> a. 64-bit version of R-devel (a.k.a R-2.10.0) with about 600
>>>> packages.
>>>> It supports the
>>>>   GTK+, tcl/tk, SciViews, etc interfaces.
>>>>
>>>> b. 64-bit version of grass-trunk (a.k.a. GRASS-7.0).
>>>>
>>>> c. Support-libraries and executables, all 64-bit, for ImageMagick,
>>>> freetype, GDAL, proj,
>>>>   gsl, gmp, mpfr, fftw, mysql, pgsql, hadoop, root, heasoft, hdf4/5,
>>>> netcdf, graphviz,
>>>>   ffmpeg, asymptote, expat, cdd, cfitsio, fontconfig, gc, geos,
>>>> geotiff, gd, tiff, jpeg,
>>>>   png, svg, gettext, harminv, iconv, intl, jags, jasper, las,
>>>> pixman, qhull, readline,
>>>>   sqlite, szip, tcl/tk, udunits, xml2, gtk2, gdk, atk, glib, cairo,
>>>> pango, glade, git,
>>>>   wget, gawk, sed, gs, pkg-config, tramo, seats, x12a, yacas, pvm3
>>>> --- probably more.
>>>>
>>>> d. A 64-bit version of gcc, g++, gfortran 4.2.5 with gomp.
>>>> Everything,
>>>> including the
>>>>   compilers, is compiled with flags "-m64 -O3 -fopenmp -
>>>> mtune=native" -- "native" in
>>>>   this context means "nocona", i.e. Intel Core Duo.
>>>>
>>>> e. texlive-2008
>>>>
>>>> It is updated one or twice per week with recent cvs, svn or git
>>>> versions. It installs in
>>>> /usr/local. The R is pretty snappy on my machine.
>>>>
>>>> !!!!!!!!!!!!!!!!!
>>>> Limitations
>>>> !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>>>>
>>>> 1. This is for CLI junkies. Normal people will stay away from this.
>>>>
>>>> 2. The quartz device in R works, but many other things are either GTK
>>>> +, tcl/tk, or even
>>>>   Athena.
>>>>
>>>> 3. This was compiled on OS X 10.6 (Snow Leopard). Your Leopard
>>>> mileage
>>>> may vary. No
>>>>   universal binaries of any sort, of course.
>>>>
>>>> 4. Basically it creates a separate 64-bit development environment,
>>>> independent of the Apple stuff
>>>>   (and independently, if you want, of the "normal" and nice R and
>>>> GRASS framework-builds and GUIs).
>>>>
>>>> 5. This is a large file. After unpacking "du -s /usr/local" says
>>>> 14167872 (i.e. 14 GB).
>>>>
>>>> 6. I am not really supporting this for users outside my department.
>>>> That would be unwise.
>>
>>
>> Dr. Robert Chatfield
>> Earth Sciences, MS 245-5
>> NASA Ames Research Center
>> Moffett Field, CA 94035    USA
>>
>> Ph: 650-604-5490  FAX 650-604-3625
>>
>> http://geo.arc.nasa.gov/sgg/chatfield
>>
>>
>>
>>
>>
>> 	[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

From carnivorescience at gmail.com  Fri Jan 15 16:14:45 2010
From: carnivorescience at gmail.com (Guillaume Chapron)
Date: Fri, 15 Jan 2010 16:14:45 +0100
Subject: [R-SIG-Mac] Strange error message with mclapply
In-Reply-To: <B4241992-9C55-4F81-877C-9DDEC2D30F09@r-project.org>
References: <1C1C542B-53EF-4FCA-A07E-D1CF9BAC6C58@gmail.com>
	<B4241992-9C55-4F81-877C-9DDEC2D30F09@r-project.org>
Message-ID: <AB6BFCD8-5577-4C7F-A01D-6C77D7998348@gmail.com>

Thanks for the reply! I should have noticed this: "multicomp should be preferrably used in console R and code executed in parallel may never use GUIs or on-screen devices."

> Guillaume,
> 
> please read ?multicore -- especially the section "Warning".
> 
> Cheers,
> Simon


From macq at llnl.gov  Fri Jan 15 17:21:18 2010
From: macq at llnl.gov (Don MacQueen)
Date: Fri, 15 Jan 2010 08:21:18 -0800
Subject: [R-SIG-Mac] udunits and RNetCDF ... simple or hard to get Mac
 version?
In-Reply-To: <A3DDAFF2-989F-4D89-AE08-13828DCAD6BC@r-project.org>
References: <mailman.13.1246788004.28139.r-sig-mac@stat.math.ethz.ch>
	<8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
	<A3DDAFF2-989F-4D89-AE08-13828DCAD6BC@r-project.org>
Message-ID: <p0624080ec77644860612@[128.115.67.9]>

I think my result confirms what Simon and others have said regarding udunits.
-Don


>  install.packages('udunits',type='source')
trying URL 'http://cran.cnr.Berkeley.edu/src/contrib/udunits_1.3.tar.gz'
Content type 'application/x-gzip' length 29985 bytes (29 Kb)
opened URL
==================================================
downloaded 29 Kb

* installing *source* package 'udunits' ...
creating cache ./config.cache
checking how to run the C preprocessor... gcc -arch i386 -std=gnu99 -E
checking for gcc... gcc -arch i386 -std=gnu99
checking whether the C compiler (gcc -arch i386 
-std=gnu99 -g -O2 ) works... yes
checking whether the C compiler (gcc -arch i386 
-std=gnu99 -g -O2 ) is a cross-compiler... no
checking whether we are using GNU C... yes
checking whether gcc -arch i386 -std=gnu99 accepts -g... yes
checking for /usr/local/include/udunits.h... no
checking for /usr/include/udunits.h... no
checking for /Users/macqueen1/include/udunits.h... no
checking for /usr/local/lib/libudunits.a... no
checking for /usr/lib/libudunits.a... no
checking for /lib/libudunits.a... no
checking for /Users/macqueen1/lib/libudunits.a... no
***********************************************************************************
***********************************************************************************
NOTE: udunits package not found!  Either install 
it in a standard place (/usr or
/usr/local), or edit the file 
udunits_1.0/udunits/src/Makevars.in and put in the
location where the package is installed.
***********************************************************************************
***********************************************************************************
ERROR: configuration failed for package 'udunits'
* removing 
'/Library/Frameworks/R.framework/Versions/2.10/Resources/library/udunits'
.

>  sessionInfo()
R version 2.10.1 (2009-12-14)
i386-apple-darwin8.11.1

locale:
[1] C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base    

loaded via a namespace (and not attached):
[1] tcltk_2.10.1 tools_2.10.1


At 9:32 AM -0500 1/15/10, Simon Urbanek wrote:
>Bob,
>
>On Jan 14, 2010, at 8:08 PM, Robert Chatfield wrote:
>
>>  We have been using both ncdf and  RNetCDF
>>  packages, and often enjoy the general approach
>>  offered by RNetCDF
>>
>>  That package has not been available on the Mac for
>>  some time, it appears, ... but was maybe available
>>  last year  (see message below).
>>
>
>AFAIR the problem with udunits (the library) is 
>that it is not self-contained as it requires 
>external files to be present. That means that 
>the udunits package will not work properly 
>unless you have those files. That is unfortunate 
>since it prevents us from shipping packages 
>based on it. We have in the past provided 
>udunits without those external files thus not 
>fully functional (albeit for the tests we did 
>have the files installed), but not recently. We 
>could do that again if desired but it is not 
>very clean ...
>
>
>>  According to the CRAN documentation page and my own
>>  attempts to acquire RNetCDF,  the problem
>>  appears to be with the needed package "udunits"
>>
>>  That package is also useful for atmosphere, oceans,
>>  and connected sciences.
>>
>>  With a MacPro 1.1 running 10.5.8 and the indicated R and RGui,
>>  I get this result
>>
>>  * installing *source* package ?udunits? ...
>>  creating cache ./config.cache
>>  checking how to run the C preprocessor... gcc -arch i386 -std=gnu99 -E
>>  checking for gcc... gcc -arch i386 -std=gnu99
>>  checking whether the C compiler (gcc -arch i386 -std=gnu99 -g -O2 ) 
>>  works... no
>>  configure: error: installation or configuration problem: C compiler 
>>  cannot create executables.
>
>As Dave said this is likely a problem in your 
>setup. Make sure you have recent Xcode installed 
>and check config.log for the exact error (i.e. 
>unpack udunits and run R CMD INSTALL udunits -- 
>then you'll find config.log inside).
>
>Cheers,
>Simon
>
>
>
>  > ERROR: configuration failed for package ?udunits?
>  > * removing ?/Library/Frameworks/R.framework/Versions/2.10/Resources/
>  > library/udunits?
>  >
>  > The downloaded packages are in
>>	?/private/var/folders/pb/pbT1eFNa2RaEvE+1Yx812U+++TI/-Tmp-/RtmpzhkbgP/
>>  downloaded_packages?
>>>
>>>
>>>  sessionInfo()
>>  R version 2.10.0 (2009-10-26)
>>  i386-apple-darwin9.8.0
>>
>>  locale:
>>  [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
>>
>>  attached base packages:
>>  [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>>  loaded via a namespace (and not attached):
>>  [1] tools_2.10.0
>>  Warning message:
>>  In install.packages(c("udunits"), lib = "/Library/Frameworks/
>>  R.framework/Resources/library/",  :
>>    installation of package 'udunits' had non-zero exit status
>>>
>>
>>  ***************
>>  Is this hard to fix?
>>  Could there be a RNetCDF without the udunits package?  .... I myself
>>  use udunits rather rarely.
>>
>>  Bob Chatfield
>>
>>
>>
>>
>>>>  Message: 2
>>>>  Date: Sat, 4 Jul 2009 14:35:40 -0700
>>>>  From: Jan de Leeuw <deleeuw at stat.ucla.edu>
>>>>  Subject: Re: [R-SIG-Mac] Unable to install package RGtk2
>>>>  To: "r-sig-mac at stat.math.ethz.ch Mac List"
>>>>	<r-sig-mac at stat.math.ethz.ch>
>>>>  Cc: statcompute <statcompute at mta.stat.ucla.edu>
>>>>  Message-ID: <FD535A21-B873-4986-8466-876455B77C1C at stat.ucla.edu>
>>>>  Content-Type: text/plain; charset=windows-1252; format=flowed;
>>>>	delsp=yes
>>>>
>>>>  I have a 2.5 GB file localxxxxxx.tgz, with xxxxxx indicating the 
>>>>  date.
>>>>
>>>>  You can get it from afp://gifi.stat.ucla.edu and then
>>>>  from my Public directory in /software. Or from a WebDAV connection to
>>>>  http://*public.me.com/jdeleeuw/software (it's currently gone from
>>>>  me.com, but
>>>>  it will be there again soon).
>>>>
>>>>  It contains
>>>>
>>>>  a. 64-bit version of R-devel (a.k.a R-2.10.0) with about 600 
>>>>  packages.
>>>>  It supports the
>>>>    GTK+, tcl/tk, SciViews, etc interfaces.
>>>>
>>>>  b. 64-bit version of grass-trunk (a.k.a. GRASS-7.0).
>>>>
>>>>  c. Support-libraries and executables, all 64-bit, for ImageMagick,
>>>>  freetype, GDAL, proj,
>>>>    gsl, gmp, mpfr, fftw, mysql, pgsql, hadoop, root, heasoft, hdf4/5,
>>>>  netcdf, graphviz,
>>>>    ffmpeg, asymptote, expat, cdd, cfitsio, fontconfig, gc, geos,
>>>>  geotiff, gd, tiff, jpeg,
>>>>    png, svg, gettext, harminv, iconv, intl, jags, jasper, las,
>>>>  pixman, qhull, readline,
>>>>    sqlite, szip, tcl/tk, udunits, xml2, gtk2, gdk, atk, glib, cairo,
>>>>  pango, glade, git,
>>>>    wget, gawk, sed, gs, pkg-config, tramo, seats, x12a, yacas, pvm3
>>>>  --- probably more.
>>>>
>>>>  d. A 64-bit version of gcc, g++, gfortran 4.2.5 with gomp. 
>>>>  Everything,
>>>>  including the
>>>>    compilers, is compiled with flags "-m64 -O3 -fopenmp -
>>>>  mtune=native" -- "native" in
>>>>    this context means "nocona", i.e. Intel Core Duo.
>>>>
>>>>  e. texlive-2008
>>>>
>>>>  It is updated one or twice per week with recent cvs, svn or git
>>>>  versions. It installs in
>>>>  /usr/local. The R is pretty snappy on my machine.
>>>>
>>>>  !!!!!!!!!!!!!!!!!
>>>>  Limitations
>>>>  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>>>>
>>>>  1. This is for CLI junkies. Normal people will stay away from this.
>>>>
>>>>  2. The quartz device in R works, but many other things are either GTK
>>>>  +, tcl/tk, or even
>>>>    Athena.
>>>>
>>>>  3. This was compiled on OS X 10.6 (Snow Leopard). Your Leopard 
>>>>  mileage
>>>>  may vary. No
>>>>    universal binaries of any sort, of course.
>>>>
>>>>  4. Basically it creates a separate 64-bit development environment,
>>>>  independent of the Apple stuff
>>>>    (and independently, if you want, of the "normal" and nice R and
>>>>  GRASS framework-builds and GUIs).
>>>>
>>>>  5. This is a large file. After unpacking "du -s /usr/local" says
>>>>  14167872 (i.e. 14 GB).
>>>>
>>>>  6. I am not really supporting this for users outside my department.
>>>>  That would be unwise.
>>
>>
>>  Dr. Robert Chatfield
>>  Earth Sciences, MS 245-5
>>  NASA Ames Research Center
>>  Moffett Field, CA 94035    USA
>>
>>  Ph: 650-604-5490  FAX 650-604-3625
>>
>>  http://*geo.arc.nasa.gov/sgg/chatfield
>>
>>
>>
>>
>>
>>	[[alternative HTML version deleted]]
>  >
>>  _______________________________________________
>>  R-SIG-Mac mailing list
>>  R-SIG-Mac at stat.math.ethz.ch
>>  https://*stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>_______________________________________________
>R-SIG-Mac mailing list
>R-SIG-Mac at stat.math.ethz.ch
>https://*stat.ethz.ch/mailman/listinfo/r-sig-mac


-- 
--------------------------------------
Don MacQueen
Environmental Protection Department
Lawrence Livermore National Laboratory
Livermore, CA, USA
925-423-1062


From derykw at gmail.com  Fri Jan 15 18:42:36 2010
From: derykw at gmail.com (Deryk Wenaus)
Date: Fri, 15 Jan 2010 12:42:36 -0500
Subject: [R-SIG-Mac] suggestion to improve R GUI on Mac OS X
Message-ID: <124B3EE3-0D49-4C71-84DB-0A8CA081BB48@gmail.com>

Hi,

I've been using R for a little while and have a simple suggestion to improve usability. 

While I find the match brace/quotes feature in R! to be handy, especially when writing new code, it is problematic when I am editing existing code. For example, if I want to add an R command around an existing command, I always get () when I just need (. 

I suggest changing the behaviour so that if there is a space or nothing to the right of the cursor then if you type in ( you get ( ). But if there is a character to the right of the cursor, disable this auto-adding. So if you type in ( you get (. 

One last item, When I am on the R command line and press Command-Left Arrow. I want to go to the beginning of the R prompt, ( after the > ) but instead I end up BEFORE the > prompt - not a good place to be! Is there any way to change this behaviour?

The last issue seems to be a minor bug with Undo in the built in editor. Sometimes when I use undo, the last character in one of the lines deleted does not get deleted. - usually it is a ) or }.  At least R is being less destructive. but it is strange nonetheless. 

What is the best editor for Mac OS X? the built in editor, or BBEdit, or TextMate? I have BBEdit, but could not find how to add a new language using the R.plist that is around.

many thanks,
Deryk

-----------------------------
Deryk Wenaus
derykw at gmail.com
University of Waterloo
Independent Studies


From budgemo at ptialaska.net  Fri Jan 15 21:10:23 2010
From: budgemo at ptialaska.net (John McCormick)
Date: Fri, 15 Jan 2010 11:10:23 -0900
Subject: [R-SIG-Mac] How to find/get tcltk to run R Commander
Message-ID: <8AE3E1A3-01A1-4820-B951-388F9867AF4E@ptialaska.net>

1. I'm trying to use R commander.
2. I have: Mac OS X 10.5.6 (9G66), Kernel Version: Darwin 9.6.0.
3. I have X11: Xquartz 2.1.5 - (xorg-server 1.3.0-apple22) (2.1.5).
4. The R command install.packages("Rcmdr", dependencies=TRUE)  was  
successful.
5. I use the instructions shown at http://dataninja.wordpress.com/2006/01/20/r-commander/
6. R and R Commander work fine on my Boot Camp Win XP.
7. R command "library(Rcmdr)" yields the result shown below.
8. QUESTION: how do I get file tcltk on my machine so I can run R  
Commander.
9. I understand it is supposed to be included with Mac OS X.
10. A file search reveals only tcltk.rb in the Ruby framework of my  
library which I suspect is there because I installed XTools in hopes  
of getting tcltk.
11. I have attempted to load the tcltk package from the R package  
manager. It is disallowed.
12. Thanks for your patience for what must be a tiring question.

 > library(Rcmdr)
Loading required package: tcltk
Loading Tcl/Tk interface ... Error in dyn.load(file, DLLpath =  
DLLpath, ...) :
   unable to load shared library '/Library/Frameworks/R.framework/ 
Resources/library/tcltk/libs/i386/tcltk.so':
   dlopen(/Library/Frameworks/R.framework/Resources/library/tcltk/libs/ 
i386/tcltk.so, 10): Library not loaded: /usr/local/lib/libtcl8.5.dylib
   Referenced from: /Library/Frameworks/R.framework/Resources/library/ 
tcltk/libs/i386/tcltk.so
   Reason: image not found
Error : .onLoad failed in 'loadNamespace' for 'tcltk'
Error: package 'tcltk' could not be loaded

-----------------
John McCormick
Anchorage, Alaska


From simon.urbanek at r-project.org  Fri Jan 15 21:38:24 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 15 Jan 2010 15:38:24 -0500
Subject: [R-SIG-Mac] How to find/get tcltk to run R Commander
In-Reply-To: <8AE3E1A3-01A1-4820-B951-388F9867AF4E@ptialaska.net>
References: <8AE3E1A3-01A1-4820-B951-388F9867AF4E@ptialaska.net>
Message-ID: <FBDF99FA-DE92-4904-8C83-9E9D49D5FFA9@r-project.org>

Go to CRAN (you can use any mirror):

http://cran.r-project.org/bin/macosx/tools/

Download tcltk-8.5.5-x11.dmg, install it.

Cheers,
Simon


On Jan 15, 2010, at 15:10 , John McCormick wrote:

> 1. I'm trying to use R commander.
> 2. I have: Mac OS X 10.5.6 (9G66), Kernel Version: Darwin 9.6.0.
> 3. I have X11: Xquartz 2.1.5 - (xorg-server 1.3.0-apple22) (2.1.5).
> 4. The R command install.packages("Rcmdr", dependencies=TRUE)  was  
> successful.
> 5. I use the instructions shown at http://dataninja.wordpress.com/2006/01/20/r-commander/
> 6. R and R Commander work fine on my Boot Camp Win XP.
> 7. R command "library(Rcmdr)" yields the result shown below.
> 8. QUESTION: how do I get file tcltk on my machine so I can run R  
> Commander.
> 9. I understand it is supposed to be included with Mac OS X.
> 10. A file search reveals only tcltk.rb in the Ruby framework of my  
> library which I suspect is there because I installed XTools in hopes  
> of getting tcltk.
> 11. I have attempted to load the tcltk package from the R package  
> manager. It is disallowed.
> 12. Thanks for your patience for what must be a tiring question.
>
> > library(Rcmdr)
> Loading required package: tcltk
> Loading Tcl/Tk interface ... Error in dyn.load(file, DLLpath =  
> DLLpath, ...) :
>  unable to load shared library '/Library/Frameworks/R.framework/ 
> Resources/library/tcltk/libs/i386/tcltk.so':
>  dlopen(/Library/Frameworks/R.framework/Resources/library/tcltk/libs/ 
> i386/tcltk.so, 10): Library not loaded: /usr/local/lib/libtcl8.5.dylib
>  Referenced from: /Library/Frameworks/R.framework/Resources/library/ 
> tcltk/libs/i386/tcltk.so
>  Reason: image not found
> Error : .onLoad failed in 'loadNamespace' for 'tcltk'
> Error: package 'tcltk' could not be loaded
>
> -----------------
> John McCormick
> Anchorage, Alaska
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>
>


From dwinsemius at comcast.net  Fri Jan 15 23:35:05 2010
From: dwinsemius at comcast.net (David Winsemius)
Date: Fri, 15 Jan 2010 17:35:05 -0500
Subject: [R-SIG-Mac] suggestion to improve R GUI on Mac OS X
In-Reply-To: <124B3EE3-0D49-4C71-84DB-0A8CA081BB48@gmail.com>
References: <124B3EE3-0D49-4C71-84DB-0A8CA081BB48@gmail.com>
Message-ID: <DFFB9798-0FAB-4DF4-A228-758F8FB1AF7B@comcast.net>


On Jan 15, 2010, at 12:42 PM, Deryk Wenaus wrote:

> Hi,
>
> I've been using R for a little while and have a simple suggestion to  
> improve usability.
>
> While I find the match brace/quotes feature in R! to be handy,  
> especially when writing new code, it is problematic when I am  
> editing existing code. For example, if I want to add an R command  
> around an existing command, I always get () when I just need (.
>
> I suggest changing the behaviour so that if there is a space or  
> nothing to the right of the cursor then if you type in ( you get  
> ( ). But if there is a character to the right of the cursor, disable  
> this auto-adding. So if you type in ( you get (.
>
> One last item, When I am on the R command line and press Command- 
> Left Arrow. I want to go to the beginning of the R prompt, ( after  
> the > ) but instead I end up BEFORE the > prompt - not a good place  
> to be! Is there any way to change this behaviour?

Learn cmd-A
>
> The last issue seems to be a minor bug with Undo in the built in  
> editor. Sometimes when I use undo, the last character in one of the  
> lines deleted does not get deleted. - usually it is a ) or }.  At  
> least R is being less destructive. but it is strange nonetheless.
>
> What is the best editor for Mac OS X? the built in editor,

Which I think is vim, is that right?

> or BBEdit, or TextMate? I have BBEdit,

Opinions vary and are generally based on a trade-off of power (Emacs/ 
AlphaMacs) versus ease of learning (TextWrangler).

> but could not find how to add a new language using the R.plist that  
> is around.

I think you would change the .plist for the editor, rather than for R.

I think TextWrangler is a subset of BBedit, right? There are  
descriptions on the web for configuration of TextWrangler for R syntax  
highlighting that I have used successfully.


>
-- 

David Winsemius, MD
Heritage Laboratories
West Hartford, CT


From simon.urbanek at r-project.org  Sat Jan 16 03:25:55 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 15 Jan 2010 21:25:55 -0500
Subject: [R-SIG-Mac] suggestion to improve R GUI on Mac OS X
In-Reply-To: <DFFB9798-0FAB-4DF4-A228-758F8FB1AF7B@comcast.net>
References: <124B3EE3-0D49-4C71-84DB-0A8CA081BB48@gmail.com>
	<DFFB9798-0FAB-4DF4-A228-758F8FB1AF7B@comcast.net>
Message-ID: <0E2E87B2-E718-453E-871A-6E4882260A28@r-project.org>


On Jan 15, 2010, at 5:35 PM, David Winsemius wrote:

> 
> On Jan 15, 2010, at 12:42 PM, Deryk Wenaus wrote:
> 
>> Hi,
>> 
>> I've been using R for a little while and have a simple suggestion to improve usability.
>> 
>> While I find the match brace/quotes feature in R! to be handy, especially when writing new code, it is problematic when I am editing existing code. For example, if I want to add an R command around an existing command, I always get () when I just need (.
>> 
>> I suggest changing the behaviour so that if there is a space or nothing to the right of the cursor then if you type in ( you get ( ). But if there is a character to the right of the cursor, disable this auto-adding. So if you type in ( you get (.


Interesting idea - I'll have look ...


>> 
>> One last item, When I am on the R command line and press Command-Left Arrow. I want to go to the beginning of the R prompt, ( after the > ) but instead I end up BEFORE the > prompt - not a good place to be! Is there any way to change this behaviour?
> 
> Learn cmd-A

It is really <Ctrl><A> - the unix way. I dimly remember that there was some issue with <Cmd><Left> when I was implementing it, but if it comes to worst the you can simply remap it the plist. I may re-visit the issue ..


>> The last issue seems to be a minor bug with Undo in the built in editor. Sometimes when I use undo, the last character in one of the lines deleted does not get deleted. - usually it is a ) or }.  At least R is being less destructive. but it is strange nonetheless.
>> 
>> What is the best editor for Mac OS X? the built in editor,
> 
> Which I think is vim, is that right?
> 

No, I think Deryk meant the built-in one, literally, (= built in the R.app).

Cheers,
Simon


>> or BBEdit, or TextMate? I have BBEdit,
> 
> Opinions vary and are generally based on a trade-off of power (Emacs/AlphaMacs) versus ease of learning (TextWrangler).
> 
>> but could not find how to add a new language using the R.plist that is around.
> 
> I think you would change the .plist for the editor, rather than for R.
> 
> I think TextWrangler is a subset of BBedit, right? There are descriptions on the web for configuration of TextWrangler for R syntax highlighting that I have used successfully.
> 
> 
>> 
> -- 
> 
> David Winsemius, MD
> Heritage Laboratories
> West Hartford, CT
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From carl at witthoft.com  Sat Jan 16 20:27:49 2010
From: carl at witthoft.com (Carl Witthoft)
Date: Sat, 16 Jan 2010 14:27:49 -0500
Subject: [R-SIG-Mac] R 2.10.1,  OSX 10.4.11, and maybe a firewall
Message-ID: <4B521335.8000602@witthoft.com>

<quote>
As Simon said, 2.10.1 on Tiger 10.4.11 fixed annoying bugs related to help
and syntax error messages which make the old 2.10.0 unusable
on my 10.4.11 PPC.
Now, all is fine
Phil from Belgium
</quote>

Wish I could say the same.  Status for me remains as before: even in a 
new, "clean" user account, the help window is blank, and if I invoke the 
"fuzzy logic" window the list of matches shows but clicking on one does 
nothing.

If I use help({something}, help_type="text"),  I get the text help 
window with the full help info.  (and help.start() does bring up a fully 
working browser page whose 'search' link works just fine)

Can you suggest anything else I can try?  If it does have something to 
do with web help and the firewall I'm behind at work,  is there a 
console log or some other file I could dredge up for info?

thanks again
Carl


From derykw at gmail.com  Sun Jan 17 00:20:50 2010
From: derykw at gmail.com (Deryk Wenaus)
Date: Sat, 16 Jan 2010 18:20:50 -0500
Subject: [R-SIG-Mac] suggestion to improve R GUI on Mac OS X
In-Reply-To: <0E2E87B2-E718-453E-871A-6E4882260A28@r-project.org>
References: <124B3EE3-0D49-4C71-84DB-0A8CA081BB48@gmail.com>
	<DFFB9798-0FAB-4DF4-A228-758F8FB1AF7B@comcast.net>
	<0E2E87B2-E718-453E-871A-6E4882260A28@r-project.org>
Message-ID: <F9B43839-D0D3-435F-926D-0FDE9F04A02E@gmail.com>

Hi Simon,

thanks for the responses. yes I did mean the editor built into the R app. Ctrl-A is helpful, I'll try the unix way, and try to let go of the mac way Cmd-Left Arrow :)

Also, I tried to install the R.plist that is floating around for texwrangler, the younger sibling of BBEdit, but at first i had no luck with the instructions. The folder they said to put it into does not exist for bbedit: "~/Library/Application Support/BBEdit/Language 
Modules/". So today I tried creating the folder (not something I like to do in the Library folder) and it works fine in BBedit. You have to make sure to map .R to the R language as well in the BBEdit preferences. The latest file was found here: http://homepages.nyu.edu/~jmb736/code/R_language_module_for_BBEdit/R.plist and there was also an interesting pdf found here:  http://tr.im/KBw8

Cheers,
Deryk

-----------------------------
Deryk Wenaus
derykw at gmail.com
University of Waterloo
Independent Studies

On 2010-01-15, at 9:25 PM, Simon Urbanek wrote:

> 
> On Jan 15, 2010, at 5:35 PM, David Winsemius wrote:
> 
>> 
>> On Jan 15, 2010, at 12:42 PM, Deryk Wenaus wrote:
>> 
>>> Hi,
>>> 
>>> I've been using R for a little while and have a simple suggestion to improve usability.
>>> 
>>> While I find the match brace/quotes feature in R! to be handy, especially when writing new code, it is problematic when I am editing existing code. For example, if I want to add an R command around an existing command, I always get () when I just need (.
>>> 
>>> I suggest changing the behaviour so that if there is a space or nothing to the right of the cursor then if you type in ( you get ( ). But if there is a character to the right of the cursor, disable this auto-adding. So if you type in ( you get (.
> 
> 
> Interesting idea - I'll have look ...
> 
> 
>>> 
>>> One last item, When I am on the R command line and press Command-Left Arrow. I want to go to the beginning of the R prompt, ( after the > ) but instead I end up BEFORE the > prompt - not a good place to be! Is there any way to change this behaviour?
>> 
>> Learn cmd-A
> 
> It is really <Ctrl><A> - the unix way. I dimly remember that there was some issue with <Cmd><Left> when I was implementing it, but if it comes to worst the you can simply remap it the plist. I may re-visit the issue ..
> 
> 
>>> The last issue seems to be a minor bug with Undo in the built in editor. Sometimes when I use undo, the last character in one of the lines deleted does not get deleted. - usually it is a ) or }.  At least R is being less destructive. but it is strange nonetheless.
>>> 
>>> What is the best editor for Mac OS X? the built in editor,
>> 
>> Which I think is vim, is that right?
>> 
> 
> No, I think Deryk meant the built-in one, literally, (= built in the R.app).
> 
> Cheers,
> Simon
> 
> 
>>> or BBEdit, or TextMate? I have BBEdit,
>> 
>> Opinions vary and are generally based on a trade-off of power (Emacs/AlphaMacs) versus ease of learning (TextWrangler).
>> 
>>> but could not find how to add a new language using the R.plist that is around.
>> 
>> I think you would change the .plist for the editor, rather than for R.
>> 
>> I think TextWrangler is a subset of BBedit, right? There are descriptions on the web for configuration of TextWrangler for R syntax highlighting that I have used successfully.
>> 
>> 
>>> 
>> -- 
>> 
>> David Winsemius, MD
>> Heritage Laboratories
>> West Hartford, CT
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
> 


From dwinsemius at comcast.net  Sun Jan 17 00:38:15 2010
From: dwinsemius at comcast.net (David Winsemius)
Date: Sat, 16 Jan 2010 18:38:15 -0500
Subject: [R-SIG-Mac] suggestion to improve R GUI on Mac OS X
In-Reply-To: <F9B43839-D0D3-435F-926D-0FDE9F04A02E@gmail.com>
References: <124B3EE3-0D49-4C71-84DB-0A8CA081BB48@gmail.com>
	<DFFB9798-0FAB-4DF4-A228-758F8FB1AF7B@comcast.net>
	<0E2E87B2-E718-453E-871A-6E4882260A28@r-project.org>
	<F9B43839-D0D3-435F-926D-0FDE9F04A02E@gmail.com>
Message-ID: <44CC534A-07E7-438E-9D1A-0A5A1C4CB2DF@comcast.net>


On Jan 16, 2010, at 6:20 PM, Deryk Wenaus wrote:

> Hi Simon,
>
> thanks for the responses. yes I did mean the editor built into the R  
> app. Ctrl-A is helpful, I'll try the unix way, and try to let go of  
> the mac way Cmd-Left Arrow :)
>
> Also, I tried to install the R.plist that is floating around for  
> texwrangler, the younger sibling of BBEdit, but at first i had no  
> luck with the instructions. The folder they said to put it into does  
> not exist for bbedit: "~/Library/Application Support/BBEdit/Language
> Modules/". So today I tried creating the folder (not something I  
> like to do in the Library folder) and it works fine in BBedit. You  
> have to make sure to map .R to the R language as well in the BBEdit  
> preferences. The latest file was found here: http://homepages.nyu.edu/~jmb736/code/R_language_module_for_BBEdit/R.plist 
>  and there was also an interesting pdf found here:  http://tr.im/KBw8

And now that you have an editor with macro capabilities, you could  
define a cntrl-[ and a cntrl-( that will give you pairing of brackets  
and parens.

-- 
David.


>
> Cheers,
> Deryk
>
> -----------------------------
> Deryk Wenaus
> derykw at gmail.com
> University of Waterloo
> Independent Studies
>
> On 2010-01-15, at 9:25 PM, Simon Urbanek wrote:
>
>>
>> On Jan 15, 2010, at 5:35 PM, David Winsemius wrote:
>>
>>>
>>> On Jan 15, 2010, at 12:42 PM, Deryk Wenaus wrote:
>>>
>>>> Hi,
>>>>
>>>> I've been using R for a little while and have a simple suggestion  
>>>> to improve usability.
>>>>
>>>> While I find the match brace/quotes feature in R! to be handy,  
>>>> especially when writing new code, it is problematic when I am  
>>>> editing existing code. For example, if I want to add an R command  
>>>> around an existing command, I always get () when I just need (.
>>>>
>>>> I suggest changing the behaviour so that if there is a space or  
>>>> nothing to the right of the cursor then if you type in ( you get  
>>>> ( ). But if there is a character to the right of the cursor,  
>>>> disable this auto-adding. So if you type in ( you get (.
>>
>>
>> Interesting idea - I'll have look ...
>>
>>
>>>>
>>>> One last item, When I am on the R command line and press Command- 
>>>> Left Arrow. I want to go to the beginning of the R prompt,  
>>>> ( after the > ) but instead I end up BEFORE the > prompt - not a  
>>>> good place to be! Is there any way to change this behaviour?
>>>
>>> Learn cmd-A
>>
>> It is really <Ctrl><A> - the unix way. I dimly remember that there  
>> was some issue with <Cmd><Left> when I was implementing it, but if  
>> it comes to worst the you can simply remap it the plist. I may re- 
>> visit the issue ..
>>
>>
>>>> The last issue seems to be a minor bug with Undo in the built in  
>>>> editor. Sometimes when I use undo, the last character in one of  
>>>> the lines deleted does not get deleted. - usually it is a )  
>>>> or }.  At least R is being less destructive. but it is strange  
>>>> nonetheless.
>>>>
>>>> What is the best editor for Mac OS X? the built in editor,
>>>
>>> Which I think is vim, is that right?
>>>
>>
>> No, I think Deryk meant the built-in one, literally, (= built in  
>> the R.app).
>>
>> Cheers,
>> Simon
>>
>>
>>>> or BBEdit, or TextMate? I have BBEdit,
>>>
>>> Opinions vary and are generally based on a trade-off of power  
>>> (Emacs/AlphaMacs) versus ease of learning (TextWrangler).
>>>
>>>> but could not find how to add a new language using the R.plist  
>>>> that is around.
>>>
>>> I think you would change the .plist for the editor, rather than  
>>> for R.
>>>
>>> I think TextWrangler is a subset of BBedit, right? There are  
>>> descriptions on the web for configuration of TextWrangler for R  
>>> syntax highlighting that I have used successfully.
>>>
>>>
>>>>
>>> -- 
>>>
>>> David Winsemius, MD
>>> Heritage Laboratories
>>> West Hartford, CT
>>>
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>
>>>
>>
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

David Winsemius, MD
Heritage Laboratories
West Hartford, CT


From simon.urbanek at r-project.org  Sun Jan 17 18:14:13 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sun, 17 Jan 2010 12:14:13 -0500
Subject: [R-SIG-Mac] R 2.10.1,  OSX 10.4.11, and maybe a firewall
In-Reply-To: <4B521335.8000602@witthoft.com>
References: <4B521335.8000602@witthoft.com>
Message-ID: <574F481C-7F24-4339-B3D5-E03521B560FE@r-project.org>


On Jan 16, 2010, at 2:27 PM, Carl Witthoft wrote:

> <quote>
> As Simon said, 2.10.1 on Tiger 10.4.11 fixed annoying bugs related to help
> and syntax error messages which make the old 2.10.0 unusable
> on my 10.4.11 PPC.
> Now, all is fine
> Phil from Belgium
> </quote>
> 
> Wish I could say the same.  Status for me remains as before: even in a new, "clean" user account, the help window is blank, and if I invoke the "fuzzy logic" window the list of matches shows but clicking on one does nothing.
> 
> If I use help({something}, help_type="text"),  I get the text help window with the full help info.  (and help.start() does bring up a fully working browser page whose 'search' link works just fine)
> 
> Can you suggest anything else I can try?  If it does have something to do with web help and the firewall I'm behind at work,  is there a console log or some other file I could dredge up for info?
> 

One of the issues is that the built-in browsers don't show errors. So one way to go about this is to enable the external browser (in Terminal):

defaults write org.R-project.R use.external.help YES

Then use the help and see what it says. To revert back to the built0in help, you can use
defaults delete org.R-project.R use.external.help 

Cheers,
Simon


From hank.stevens01 at gmail.com  Fri Jan 15 19:53:49 2010
From: hank.stevens01 at gmail.com (Hank Stevens)
Date: Fri, 15 Jan 2010 13:53:49 -0500
Subject: [R-SIG-Mac] suggestion to improve R GUI on Mac OS X
In-Reply-To: <124B3EE3-0D49-4C71-84DB-0A8CA081BB48@gmail.com>
References: <124B3EE3-0D49-4C71-84DB-0A8CA081BB48@gmail.com>
Message-ID: <bfd10a121001151053q59eb3e82q90c9a9cd192de928@mail.gmail.com>

The built in editor is great, but I like to use Aquamacs, a version of
Emacs built for the Mac.
Hank
>
> What is the best editor for Mac OS X? the built in editor, or BBEdit, or TextMate? I have BBEdit, but could not find how to add a new language using the R.plist that is around.
>
> many thanks,
> Deryk
>
> -----------------------------
> Deryk Wenaus
> derykw at gmail.com
> University of Waterloo
> Independent Studies


From johannesraja at gmail.com  Sun Jan 17 12:13:44 2010
From: johannesraja at gmail.com (johannes rara)
Date: Sun, 17 Jan 2010 13:13:44 +0200
Subject: [R-SIG-Mac] Questions regarding R.app built-in-editor
Message-ID: <f49fcd831001170313i39c87c06gdb649873bdcdb4af@mail.gmail.com>

Hello,

1. When sending function code from built-in-editor to R console (using
cmd-enter), I get this kind of results:

> exfun <- function(n) {
+ ? function(df) ?{
Error: syntax error
> ? ? if (nrow(df) > n) {
Error: syntax error
> ? ? ? df
Error: syntax error
> ? ? }
Error: syntax error
> ? }
Error: syntax error
> }
Error: syntax error
>

How to avoid that?

2. Is there a way pre-set the size of the built-in-editor? I mean that
when starting R.app and pressing cmd-o to open editor, I want it have
a certain size in my screen.
3. When I copy-paste R code from web to built-in-editor, it preserves
the formatting of the original code. That's annoying, is there a way
to change this behaviour?

Many thanks,
-J


From Roy.Mendelssohn at noaa.gov  Sun Jan 17 22:41:51 2010
From: Roy.Mendelssohn at noaa.gov (Roy Mendelssohn)
Date: Sun, 17 Jan 2010 13:41:51 -0800
Subject: [R-SIG-Mac] suggestion to improve R GUI on Mac OS X
In-Reply-To: <bfd10a121001151053q59eb3e82q90c9a9cd192de928@mail.gmail.com>
References: <124B3EE3-0D49-4C71-84DB-0A8CA081BB48@gmail.com>
	<bfd10a121001151053q59eb3e82q90c9a9cd192de928@mail.gmail.com>
Message-ID: <B87C0CB1-8AD0-4AA5-8EBA-0295C76AAAA4@noaa.gov>

Fro BBEdit, put R.plist in

~Library/BBEdit/Language Modules

Restart the program and you should be good to go.

-Roy M.
On Jan 15, 2010, at 10:53 AM, Hank Stevens wrote:

> The built in editor is great, but I like to use Aquamacs, a version of
> Emacs built for the Mac.
> Hank
>> 
>> What is the best editor for Mac OS X? the built in editor, or BBEdit, or TextMate? I have BBEdit, but could not find how to add a new language using the R.plist that is around.
>> 
>> many thanks,
>> Deryk
>> 
>> -----------------------------
>> Deryk Wenaus
>> derykw at gmail.com
>> University of Waterloo
>> Independent Studies
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
1352 Lighthouse Avenue
Pacific Grove, CA 93950-2097

e-mail: Roy.Mendelssohn at noaa.gov (Note new e-mail address)
voice: (831)-648-9029
fax: (831)-648-8440
www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 


From deleeuw at stat.ucla.edu  Mon Jan 18 01:25:42 2010
From: deleeuw at stat.ucla.edu (Jan de Leeuw)
Date: Sun, 17 Jan 2010 16:25:42 -0800
Subject: [R-SIG-Mac] udunits and RNetCDF ... simple or hard to get Mac
	version?
In-Reply-To: <8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
References: <mailman.13.1246788004.28139.r-sig-mac@stat.math.ethz.ch>
	<8E84B143-09B2-488C-8BD1-A575EB22F95F@nasa.gov>
Message-ID: <1C66630C-BF62-4432-AE3A-535F54FC19A5@stat.ucla.edu>

David emailed me the beta of the R package for udunits-2.0, which compiles/installs without problems. With that new package installed, the recompiled RNetCDF and ncdf both seem to work fine now.

Everything will be in the cessoftxxxxxxxx.tgz file (with xxxxxxxx > 20100117) in http://public.me.com/jdeleeuw/software. NB: that file is now close to 4GB and is used
to replace all of /usr/local on our computers. It has the same stuff as localxxxxxxxx.tgz mentioned below, and much more, but it now uses the default gcc-4.2.1 and
Simon's corresponding gfortran.


On Jan 14, 2010, at 17:08 , Robert Chatfield wrote:

> We have been using both ncdf and  RNetCDF
> packages, and often enjoy the general approach
> offered by RNetCDF
> 
> That package has not been available on the Mac for
> some time, it appears, ... but was maybe available
> last year  (see message below).
> 
> According to the CRAN documentation page and my own
> attempts to acquire RNetCDF,  the problem
> appears to be with the needed package "udunits"
> 
> That package is also useful for atmosphere, oceans,
> and connected sciences.
> 
> With a MacPro 1.1 running 10.5.8 and the indicated R and RGui,
> I get this result
> 
> * installing *source* package ?udunits? ...
> creating cache ./config.cache
> checking how to run the C preprocessor... gcc -arch i386 -std=gnu99 -E
> checking for gcc... gcc -arch i386 -std=gnu99
> checking whether the C compiler (gcc -arch i386 -std=gnu99 -g -O2 ) works... no
> configure: error: installation or configuration problem: C compiler cannot create executables.
> ERROR: configuration failed for package ?udunits?
> * removing ?/Library/Frameworks/R.framework/Versions/2.10/Resources/library/udunits?
> 
> The downloaded packages are in
> 	?/private/var/folders/pb/pbT1eFNa2RaEvE+1Yx812U+++TI/-Tmp-/RtmpzhkbgP/downloaded_packages?
> > 
> > 
> > sessionInfo()
> R version 2.10.0 (2009-10-26) 
> i386-apple-darwin9.8.0 
> 
> locale:             
> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base     
> 
> loaded via a namespace (and not attached):
> [1] tools_2.10.0
> Warning message:
> In install.packages(c("udunits"), lib = "/Library/Frameworks/R.framework/Resources/library/",  :
>   installation of package 'udunits' had non-zero exit status
> > 
> 
> ***************
> Is this hard to fix?   
> Could there be a RNetCDF without the udunits package?  .... I myself
> use udunits rather rarely.
> 
> Bob Chatfield
> 
> 
> 
> 
>>> Message: 2
>>> Date: Sat, 4 Jul 2009 14:35:40 -0700
>>> From: Jan de Leeuw <deleeuw at stat.ucla.edu>
>>> Subject: Re: [R-SIG-Mac] Unable to install package RGtk2
>>> To: "r-sig-mac at stat.math.ethz.ch Mac List"
>>> 	<r-sig-mac at stat.math.ethz.ch>
>>> Cc: statcompute <statcompute at mta.stat.ucla.edu>
>>> Message-ID: <FD535A21-B873-4986-8466-876455B77C1C at stat.ucla.edu>
>>> Content-Type: text/plain; charset=windows-1252; format=flowed;
>>> 	delsp=yes
>>> 
>>> I have a 2.5 GB file localxxxxxx.tgz, with xxxxxx indicating the date.
>>> 
>>> You can get it from afp://gifi.stat.ucla.edu and then
>>> from my Public directory in /software. Or from a WebDAV connection to
>>> http://public.me.com/jdeleeuw/software (it's currently gone from  
>>> me.com, but
>>> it will be there again soon).
>>> 
>>> It contains
>>> 
>>> a. 64-bit version of R-devel (a.k.a R-2.10.0) with about 600 packages.  
>>> It supports the
>>>    GTK+, tcl/tk, SciViews, etc interfaces.
>>> 
>>> b. 64-bit version of grass-trunk (a.k.a. GRASS-7.0).
>>> 
>>> c. Support-libraries and executables, all 64-bit, for ImageMagick,  
>>> freetype, GDAL, proj,
>>>    gsl, gmp, mpfr, fftw, mysql, pgsql, hadoop, root, heasoft, hdf4/5,  
>>> netcdf, graphviz,
>>>    ffmpeg, asymptote, expat, cdd, cfitsio, fontconfig, gc, geos,  
>>> geotiff, gd, tiff, jpeg,
>>>    png, svg, gettext, harminv, iconv, intl, jags, jasper, las,  
>>> pixman, qhull, readline,
>>>    sqlite, szip, tcl/tk, udunits, xml2, gtk2, gdk, atk, glib, cairo,  
>>> pango, glade, git,
>>>    wget, gawk, sed, gs, pkg-config, tramo, seats, x12a, yacas, pvm3  
>>> --- probably more.
>>> 
>>> d. A 64-bit version of gcc, g++, gfortran 4.2.5 with gomp. Everything,  
>>> including the
>>>    compilers, is compiled with flags "-m64 -O3 -fopenmp - 
>>> mtune=native" -- "native" in
>>>    this context means "nocona", i.e. Intel Core Duo.
>>> 
>>> e. texlive-2008
>>> 
>>> It is updated one or twice per week with recent cvs, svn or git  
>>> versions. It installs in
>>> /usr/local. The R is pretty snappy on my machine.
>>> 
>>> !!!!!!!!!!!!!!!!!  
>>> Limitations !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>>> 
>>> 1. This is for CLI junkies. Normal people will stay away from this.
>>> 
>>> 2. The quartz device in R works, but many other things are either GTK 
>>> +, tcl/tk, or even
>>>    Athena.
>>> 
>>> 3. This was compiled on OS X 10.6 (Snow Leopard). Your Leopard mileage  
>>> may vary. No
>>>    universal binaries of any sort, of course.
>>> 
>>> 4. Basically it creates a separate 64-bit development environment,  
>>> independent of the Apple stuff
>>>    (and independently, if you want, of the "normal" and nice R and  
>>> GRASS framework-builds and GUIs).
>>> 
>>> 5. This is a large file. After unpacking "du -s /usr/local" says  
>>> 14167872 (i.e. 14 GB).
>>> 
>>> 6. I am not really supporting this for users outside my department.  
>>> That would be unwise.
> 
> 
> Dr. Robert Chatfield
> Earth Sciences, MS 245-5
> NASA Ames Research Center
> Moffett Field, CA 94035    USA
> 
> Ph: 650-604-5490  FAX 650-604-3625
> 
> http://geo.arc.nasa.gov/sgg/chatfield
> 
> 
> 
> 

===
Jan de Leeuw; Distinguished Professor and Chair, UCLA Department of Statistics;
Director: UCLA Center for Environmental Statistics (CES);
Editor: Journal of Multivariate Analysis, Journal of Statistical Software;
US mail: 8125 Math Sciences Bldg, Box 951554, Los Angeles, CA 90095-1554
phone (310)-825-9550;  fax (310)-206-5658;  email: deleeuw at stat.ucla.edu
.mac: jdeleeuw ++++++  aim: deleeuwjan ++++++ skype: j_deleeuw
homepages: http://gifi.stat.ucla.edu ++++++ http://www.cuddyvalley.org
 -------------------------------------------------------------------------------------------------
          No matter where you go, there you are. --- Buckaroo Banzai
                   http://gifi.stat.ucla.edu/sounds/nomatter.au                                  
 -------------------------------------------------------------------------------------------------        


From hb at stat.berkeley.edu  Mon Jan 18 13:53:09 2010
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Mon, 18 Jan 2010 04:53:09 -0800
Subject: [R-SIG-Mac] [Rd] CRAN: No MacOS X binary builds since January 7
In-Reply-To: <alpine.LFD.2.00.1001180931490.10230@gannet.stats.ox.ac.uk>
References: <59d7961d1001172359j4dfe39b2t91bcf90e8bc7cd2b@mail.gmail.com>
	<alpine.LFD.2.00.1001180931490.10230@gannet.stats.ox.ac.uk>
Message-ID: <59d7961d1001180453l4206374fsc64c28e89e170872@mail.gmail.com>

On Mon, Jan 18, 2010 at 1:36 AM, Prof Brian Ripley
<ripley at stats.ox.ac.uk> wrote:
> Not an issue for *this* list!

I used this list to share this with package developers - not
particularly MacOS X users.  As a package provider  I'd like to know
when packages are not available on all platforms.  It seems like a
errors, because the records show that packages are typically built
every day.

>
> Please report to the maintainer and perhaps cc R-sig-mac.

Maintainer has been notified repeatably without response (==don't know
if my messages even gets through).

> ?Note that you are
> looking at the (old) Tiger binaries and not the more current Leopard ones,
> which were last updated yesterday,

Thanks for this note.  As a non-OSX user, I wasn't aware of this.  It
made me find:

http://cran.r-project.org/bin/macosx/leopard/contrib/r-release/

This is not the directory that are used for the MacOS X links when
going to package pages under http://cran.r-project.org/web/packages/,
e.g.

http://cran.r-project.org/web/packages/aroma.core/

The MacOS X links is:

http://cran.r-project.org/bin/macosx/universal/contrib/r-release/aroma.core_1.3.1.tgz

Another example is here:

  http://cran.r-project.org/web/packages/biglars/

Then, do the MacOS X links on the CRAN package pages need to be
updated/complemented?

If this is already well known, that is all I need to hear.  (I
understand that install.packages() takes care of the installation).

/Henrik

>
> In any case, binary packages are a privilege and you can always install from
> the sources (in the vast majority of cases with no extra tools other than
> Xcode).
>
> On Sun, 17 Jan 2010, Henrik Bengtsson wrote:
>
>> FYI,
>>
>> no MacOS X binaries have been built for CRAN since 2010-01-07:
>>
>>> url <-
>>> "http://cran.r-project.org/bin/macosx/universal/contrib/r-release/";
>>> x <- readLines(url);
>>
>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
>> y <- grep(pattern, x, value=TRUE);
>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>> z <- gsub(pattern, "\\1", y);
>> z <- unique(z);
>> z <- as.Date(z, "%d-%b-%Y");
>> z <- sort(z);
>> print(z);
>>>
>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
>>> y <- grep(pattern, x, value=TRUE);
>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>> z <- gsub(pattern, "\\1", y);
>>> z <- unique(z);
>>> z <- as.Date(z, "%d-%b-%Y");
>>> z <- sort(z);
>>> print(z);
>>
>> [1] "2009-07-18" "2009-07-19" "2009-10-02" "2009-10-16" "2009-10-27"
>> [6] "2009-10-28" "2009-10-29" "2009-10-30" "2009-10-31" "2009-11-02"
>> [11] "2009-11-04" "2009-11-05" "2009-11-06" "2009-11-07" "2009-11-09"
>> [16] "2009-11-10" "2009-11-11" "2009-11-12" "2009-11-13" "2009-11-14"
>> [21] "2009-11-16" "2009-11-17" "2009-11-18" "2009-11-19" "2009-11-20"
>> [26] "2009-11-21" "2009-11-23" "2009-11-24" "2009-11-25" "2009-11-26"
>> [31] "2009-11-27" "2009-11-28" "2009-11-30" "2009-12-01" "2009-12-02"
>> [36] "2009-12-03" "2009-12-04" "2009-12-07" "2009-12-08" "2009-12-10"
>> [41] "2009-12-11" "2009-12-12" "2009-12-14" "2009-12-15" "2009-12-16"
>> [46] "2009-12-17" "2009-12-18" "2009-12-19" "2009-12-21" "2009-12-22"
>> [51] "2009-12-23" "2009-12-24" "2009-12-25" "2009-12-27" "2009-12-29"
>> [56] "2009-12-30" "2009-12-31" "2010-01-02" "2010-01-03" "2010-01-04"
>> [61] "2010-01-05" "2010-01-06" "2010-01-07"
>>>
>>> print(table(diff(z)));
>>
>> 1 ?2 ?3 11 14 75
>> 46 12 ?1 ?1 ?1 ?1
>>
>> /Henrik
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> --
> Brian D. Ripley, ? ? ? ? ? ? ? ? ?ripley at stats.ox.ac.uk
> Professor of Applied Statistics, ?http://www.stats.ox.ac.uk/~ripley/
> University of Oxford, ? ? ? ? ? ? Tel: ?+44 1865 272861 (self)
> 1 South Parks Road, ? ? ? ? ? ? ? ? ? ? +44 1865 272866 (PA)
> Oxford OX1 3TG, UK ? ? ? ? ? ? ? ?Fax: ?+44 1865 272595
>


From simon.urbanek at r-project.org  Mon Jan 18 15:54:04 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 18 Jan 2010 09:54:04 -0500
Subject: [R-SIG-Mac] [Rd] CRAN: No MacOS X binary builds since January 7
In-Reply-To: <59d7961d1001180453l4206374fsc64c28e89e170872@mail.gmail.com>
References: <59d7961d1001172359j4dfe39b2t91bcf90e8bc7cd2b@mail.gmail.com>
	<alpine.LFD.2.00.1001180931490.10230@gannet.stats.ox.ac.uk>
	<59d7961d1001180453l4206374fsc64c28e89e170872@mail.gmail.com>
Message-ID: <743AA1E0-BCE0-4613-BA33-D9083E6E5869@r-project.org>

On Jan 18, 2010, at 7:53 , Henrik Bengtsson wrote:

> On Mon, Jan 18, 2010 at 1:36 AM, Prof Brian Ripley
> <ripley at stats.ox.ac.uk> wrote:
>> Not an issue for *this* list!
>
> I used this list to share this with package developers - not
> particularly MacOS X users.  As a package provider  I'd like to know
> when packages are not available on all platforms.  It seems like a
> errors, because the records show that packages are typically built
> every day.
>
>>
>> Please report to the maintainer and perhaps cc R-sig-mac.
>
> Maintainer has been notified repeatably without response (==don't know
> if my messages even gets through).
>

I wonder where you were sending your notifications -- quite apparently  
not to the right place as I didn't get any ...

Anyway, now that it reached me (through suboptimal channels as Brian  
pointed out) it should be fixed for the next run.


>>  Note that you are
>> looking at the (old) Tiger binaries and not the more current  
>> Leopard ones,
>> which were last updated yesterday,
>
> Thanks for this note.  As a non-OSX user, I wasn't aware of this.  It
> made me find:
>
> http://cran.r-project.org/bin/macosx/leopard/contrib/r-release/
>
> This is not the directory that are used for the MacOS X links when
> going to package pages under http://cran.r-project.org/web/packages/,
> e.g.
>
> http://cran.r-project.org/web/packages/aroma.core/
>
> The MacOS X links is:
>
> http://cran.r-project.org/bin/macosx/universal/contrib/r-release/aroma.core_1.3.1.tgz
>
> Another example is here:
>
>  http://cran.r-project.org/web/packages/biglars/
>
> Then, do the MacOS X links on the CRAN package pages need to be
> updated/complemented?
>

I think so -- there is currently a discrepancy - the checks show  
Leopard builds but that link is to the Tiger build -- Kurt, can you,  
please, check?


> If this is already well known, that is all I need to hear.  (I
> understand that install.packages() takes care of the installation).
>
> /Henrik
>
>>
>> In any case, binary packages are a privilege and you can always  
>> install from
>> the sources (in the vast majority of cases with no extra tools  
>> other than
>> Xcode).
>>
>> On Sun, 17 Jan 2010, Henrik Bengtsson wrote:
>>
>>> FYI,
>>>
>>> no MacOS X binaries have been built for CRAN since 2010-01-07:
>>>
>>>> url <-
>>>> "http://cran.r-project.org/bin/macosx/universal/contrib/r- 
>>>> release/";
>>>> x <- readLines(url);
>>>
>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9] 
>>> {2}).*";
>>> y <- grep(pattern, x, value=TRUE);
>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>> z <- gsub(pattern, "\\1", y);
>>> z <- unique(z);
>>> z <- as.Date(z, "%d-%b-%Y");
>>> z <- sort(z);
>>> print(z);
>>>>
>>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9] 
>>>> {2}).*";
>>>> y <- grep(pattern, x, value=TRUE);
>>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>>> z <- gsub(pattern, "\\1", y);
>>>> z <- unique(z);
>>>> z <- as.Date(z, "%d-%b-%Y");
>>>> z <- sort(z);
>>>> print(z);
>>>
>>> [1] "2009-07-18" "2009-07-19" "2009-10-02" "2009-10-16" "2009-10-27"
>>> [6] "2009-10-28" "2009-10-29" "2009-10-30" "2009-10-31" "2009-11-02"
>>> [11] "2009-11-04" "2009-11-05" "2009-11-06" "2009-11-07"  
>>> "2009-11-09"
>>> [16] "2009-11-10" "2009-11-11" "2009-11-12" "2009-11-13"  
>>> "2009-11-14"
>>> [21] "2009-11-16" "2009-11-17" "2009-11-18" "2009-11-19"  
>>> "2009-11-20"
>>> [26] "2009-11-21" "2009-11-23" "2009-11-24" "2009-11-25"  
>>> "2009-11-26"
>>> [31] "2009-11-27" "2009-11-28" "2009-11-30" "2009-12-01"  
>>> "2009-12-02"
>>> [36] "2009-12-03" "2009-12-04" "2009-12-07" "2009-12-08"  
>>> "2009-12-10"
>>> [41] "2009-12-11" "2009-12-12" "2009-12-14" "2009-12-15"  
>>> "2009-12-16"
>>> [46] "2009-12-17" "2009-12-18" "2009-12-19" "2009-12-21"  
>>> "2009-12-22"
>>> [51] "2009-12-23" "2009-12-24" "2009-12-25" "2009-12-27"  
>>> "2009-12-29"
>>> [56] "2009-12-30" "2009-12-31" "2010-01-02" "2010-01-03"  
>>> "2010-01-04"
>>> [61] "2010-01-05" "2010-01-06" "2010-01-07"
>>>>
>>>> print(table(diff(z)));
>>>
>>> 1  2  3 11 14 75
>>> 46 12  1  1  1  1
>>>
>>> /Henrik
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>> --
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>> University of Oxford,             Tel:  +44 1865 272861 (self)
>> 1 South Parks Road,                     +44 1865 272866 (PA)
>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From maj at waikato.ac.nz  Mon Jan 18 21:40:51 2010
From: maj at waikato.ac.nz (Murray Jorgensen)
Date: Tue, 19 Jan 2010 09:40:51 +1300
Subject: [R-SIG-Mac] Package loading problem
In-Reply-To: <D2B81C09-9475-4295-8D8F-4A66D47D2DC2@r-project.org>
References: <4B4CEAC4.9090404@waikato.ac.nz>
	<FDF0C252-6D4D-4825-88DF-CD7C6E4745DD@r-project.org>
	<4B4DABBD.2040705@waikato.ac.nz>
	<D2B81C09-9475-4295-8D8F-4A66D47D2DC2@r-project.org>
Message-ID: <4B54C753.8030109@waikato.ac.nz>

Hi Simon,

my Mac or Unix skills are not that great so I need a few more clues with
my problem. I read you as suggesting that my tar.gz package files be
uncompressed somehow and then placed somewhere and possibly somehow
letting R know that this has been done.

I think that I may need a little more help with the "somehow",
"somewhere" and "possibly somehow".


Cheers,  Murray Jorgensen

Simon Urbanek wrote:
> 
> On Jan 13, 2010, at 6:17 , Murray Jorgensen wrote:
> 
>> Thanks, Simon.
>>
>> But "Local Binary Package" seems to only accept a single package 
>> selection and I want the lot. This would seem to be very very slow to 
>> load this way.
>>
> 
> Yes, because it's designed for something entirely different -- 
> installing single development package from its sources (developers often 
> do that for testing so they don't have to pack it up in the first place).
> 
> 
>> What I wish to do is to download the package files on one machine 
>> (actually an external drive connected to a PC) and then connect the 
>> drive to the Mac and install them from the drive.
>>
> 
> Well, then why don't you simply unpack them all into your library? 
> That's the fastest and simplest way ...
> 
> Cheers,
> Simon
> 
> 
>>
>>
>> Simon Urbanek wrote:
>>> On Jan 12, 2010, at 16:33 , Murray Jorgensen wrote:
>>>> Hi
>>>>
>>>> I have downloaded and installed R 2.10.1 to my Mac running OS X 10.5.8.
>>>>
>>>> Hardware Overview:
>>>>
>>>> Model Name:    iMac
>>>> Model Identifier:    iMac7,1
>>>> Processor Name:    Intel Core 2 Duo
>>>> Processor Speed:    2.4 GHz
>>>> Number Of Processors:    1
>>>> Total Number Of Cores:    2
>>>> L2 Cache:    4 MB
>>>> Memory:    1 GB
>>>> Bus Speed:    800 MHz
>>>> Boot ROM Version:    IM71.007A.B03
>>>> SMC Version (system):    1.20f4
>>>> Serial Number (system):    W87438YWX86
>>>> Hardware UUID:    00000000-0000-1000-8000-001B63AA8FF1
>>>> [In case this is relevant!]
>>>>
>>>> I have tgz files for all the packages [plus some other files] in 
>>>> /Applications/tgz10.1   .
>>>> When I attempt to use the R Package Installer and select the tzg10.1 
>>>> folder as the "Local Package Directory" the result that I get is
>>>>
>>> You are using the wrong menu item - that menu is for installing 
>>> *package directories* i.e. packages in unpacked form. For .tgz files 
>>> you want to use "Local binary package". But, please, note that 
>>> installing packages that way is only for very, very special cases - 
>>> normally you should use "CRAN (binaries)" instead because that takes 
>>> care of dependencies, downloading, installation etc.
>>> Cheers,
>>> Simon
>>
>> -- 
>> Dr Murray Jorgensen      http://www.stats.waikato.ac.nz/Staff/maj.html
>> Department of Statistics, University of Waikato, Hamilton, New Zealand
>> Email: maj at waikato.ac.nz  majorgensen at ihug.co.nz        Fax 7 838 4155
>> Phone  +64 7 838 4773 wk    Home +64 7 825 0441   Mobile 021 0200 8350
>>
>>
> 

-- 
Dr Murray Jorgensen      http://www.stats.waikato.ac.nz/Staff/maj.html
Department of Statistics, University of Waikato, Hamilton, New Zealand
Email: maj at waikato.ac.nz                                Fax 7 838 4155
Phone  +64 7 838 4773 wk    Home +64 7 825 0441   Mobile 021 0200 8350


From maj at waikato.ac.nz  Mon Jan 18 22:25:12 2010
From: maj at waikato.ac.nz (Murray Jorgensen)
Date: Tue, 19 Jan 2010 10:25:12 +1300
Subject: [R-SIG-Mac] Package loading problem
In-Reply-To: <46A8A45A-1905-4FF9-950F-C98BCD9CE436@r-project.org>
References: <4B4CEAC4.9090404@waikato.ac.nz>
	<FDF0C252-6D4D-4825-88DF-CD7C6E4745DD@r-project.org>
	<4B4DABBD.2040705@waikato.ac.nz>
	<D2B81C09-9475-4295-8D8F-4A66D47D2DC2@r-project.org>
	<4B54C5E8.3080002@waikato.ac.nz>
	<46A8A45A-1905-4FF9-950F-C98BCD9CE436@r-project.org>
Message-ID: <4B54D1B8.4060404@waikato.ac.nz>

[Apologies for re-sending but I copied to the wrong list address.]

Oh! Well, yes, I did mean .tgz, but I had vague thoughts that gunzip()
might be the tool that I needed and I started thinking of the files as
tar.gz. It helps to learn that they are not equivalent.

Your unix/terminal way of installing the files looks much the
preferable, but your description of the alternative helps me see how the
mac is organised.

Thanks again,  Murray

Simon Urbanek wrote:
> 
> On Jan 18, 2010, at 15:34 , Murray Jorgensen wrote:
> 
>> Hi Simon,
>>
>> my Mac or Unix skills are not that great so I need a few more clues 
>> with my problem. I read you as suggesting that my tar.gz
> 
> Stop here - are you talking about .tgz of .tar.gz? There is a huge 
> difference! In the previous e-mail you talked about .tgz which are 
> binaries, but .tar.gz are sources!
> 
> 
>> package files be uncompressed somehow and then placed somewhere and 
>> possibly somehow letting R know that this has been done.
>>
>> I think that I may need a little more help with the "somehow", 
>> "somewhere" and "possibly somehow".
>>
> 
> In a very non-unix way (not recommended but it works for now): get the 
> tgz files, double-click on them (I'm assuming you're in Finder) so they 
> get unpacked (it's probably a good idea to do that on a clean desktop or 
> a clean directory). Then open another Finder window an navigate to 
> /Library/Frameworks/R.framework/Resource/library (you should see 
> directories like base, codetool, datasets, ..) and drag the unpacked 
> packages from the first window into this one.
> 
> The unix way (recommended) - go to the directory containing the .tgz 
> files (in Terminal) and type:
> R
> install.packages(list.files(,"tgz$"),repos=NULL)
> 
> Cheers,
> Simon
> 
> 
>>
>> Cheers,  Murray Jorgensen
>>
>> Simon Urbanek wrote:
>>> On Jan 13, 2010, at 6:17 , Murray Jorgensen wrote:
>>>> Thanks, Simon.
>>>>
>>>> But "Local Binary Package" seems to only accept a single package 
>>>> selection and I want the lot. This would seem to be very very slow 
>>>> to load this way.
>>>>
>>> Yes, because it's designed for something entirely different -- 
>>> installing single development package from its sources (developers 
>>> often do that for testing so they don't have to pack it up in the 
>>> first place).
>>>> What I wish to do is to download the package files on one machine 
>>>> (actually an external drive connected to a PC) and then connect the 
>>>> drive to the Mac and install them from the drive.
>>>>
>>> Well, then why don't you simply unpack them all into your library? 
>>> That's the fastest and simplest way ...
>>> Cheers,
>>> Simon
>>>>
>>>>
>>>> Simon Urbanek wrote:
>>>>> On Jan 12, 2010, at 16:33 , Murray Jorgensen wrote:
>>>>>> Hi
>>>>>>
>>>>>> I have downloaded and installed R 2.10.1 to my Mac running OS X 
>>>>>> 10.5.8.
>>>>>>
>>>>>> Hardware Overview:
>>>>>>
>>>>>> Model Name:    iMac
>>>>>> Model Identifier:    iMac7,1
>>>>>> Processor Name:    Intel Core 2 Duo
>>>>>> Processor Speed:    2.4 GHz
>>>>>> Number Of Processors:    1
>>>>>> Total Number Of Cores:    2
>>>>>> L2 Cache:    4 MB
>>>>>> Memory:    1 GB
>>>>>> Bus Speed:    800 MHz
>>>>>> Boot ROM Version:    IM71.007A.B03
>>>>>> SMC Version (system):    1.20f4
>>>>>> Serial Number (system):    W87438YWX86
>>>>>> Hardware UUID:    00000000-0000-1000-8000-001B63AA8FF1
>>>>>> [In case this is relevant!]
>>>>>>
>>>>>> I have tgz files for all the packages [plus some other files] in 
>>>>>> /Applications/tgz10.1   .
>>>>>> When I attempt to use the R Package Installer and select the 
>>>>>> tzg10.1 folder as the "Local Package Directory" the result that I 
>>>>>> get is
>>>>>>
>>>>> You are using the wrong menu item - that menu is for installing 
>>>>> *package directories* i.e. packages in unpacked form. For .tgz 
>>>>> files you want to use "Local binary package". But, please, note 
>>>>> that installing packages that way is only for very, very special 
>>>>> cases - normally you should use "CRAN (binaries)" instead because 
>>>>> that takes care of dependencies, downloading, installation etc.
>>>>> Cheers,
>>>>> Simon
>>>>
>>>> -- 
>>>> Dr Murray Jorgensen      http://www.stats.waikato.ac.nz/Staff/maj.html
>>>> Department of Statistics, University of Waikato, Hamilton, New Zealand
>>>> Email: maj at waikato.ac.nz  majorgensen at ihug.co.nz        Fax 7 838 4155
>>>> Phone  +64 7 838 4773 wk    Home +64 7 825 0441   Mobile 021 0200 8350
>>>>
>>>>
>>
>> -- 
>> Dr Murray Jorgensen      http://www.stats.waikato.ac.nz/Staff/maj.html
>> Department of Statistics, University of Waikato, Hamilton, New Zealand
>> Email: maj at waikato.ac.nz                                Fax 7 838 4155
>> Phone  +64 7 838 4773 wk    Home +64 7 825 0441   Mobile 021 0200 8350
>>
>>
> 

-- 
Dr Murray Jorgensen      http://www.stats.waikato.ac.nz/Staff/maj.html
Department of Statistics, University of Waikato, Hamilton, New Zealand
Email: maj at waikato.ac.nz                                Fax 7 838 4155
Phone  +64 7 838 4773 wk    Home +64 7 825 0441   Mobile 021 0200 8350


From carl at witthoft.com  Tue Jan 19 01:49:46 2010
From: carl at witthoft.com (Carl Witthoft)
Date: Mon, 18 Jan 2010 19:49:46 -0500
Subject: [R-SIG-Mac] R 2.10.1,  OSX 10.4.11, and maybe a firewall]]
Message-ID: <4B5501AA.8060806@witthoft.com>




I changed the plist defaults per Simon's suggestion (below). Here's what 
I got:

Results:
web browser comes right up with the desired help page,  URL is
http://127.0.0.1:23285/library/base/html/assign.html  (for ?assign)

The R internal help page launches as well and remains blank.

If the "fuzzy logic" matching page comes up,  no action occurs in the 
web browser, i.e. no new page, no error, etc.

% library(help=BB) brings up the usual text window with the library info 
in R

The following links showed up in the R Package Manager window-- but I 
can't figure out how I made something show up there.  Clicking on them 
does nothing. Clicking on various installed package names in the upper 
half of the window does nothing.

http://127.0.0.1:19566/library/plotrix/html/00Index.html#Z
http://127.0.0.1:19566/doc/html/index.html

Then closing Package Mgr window and reopening left the bottom clear, 
can't reload anything into it.

And I briefly got the "help topics matching BB" to load, although links 
in the text in lower panel don't work.  The upper window doesn't respond 
to clicks on topics.
http://127.0.0.1:19566/library/BB/help/multiStart.

Note also that ??plotrix brought up matches for plotrix but did NOT 
clear or write anything in bottom panel; BBoptim was still shown there.

There are no browser or R console crash logs (which makes sense since 
neither app crashed or hung).

I don't know if this is relevant, but there is something a little bit 
wrong with my computer's MacOS Help app. If I open the help window from 
the Help menu, I generally get about its hyperlinks to work the first 5 
times or so.  If I ever try to click a second time on the "Index" link, 
nothing happens and no links work from then on.  Deleting the 
Helpviewer.plist file, quitting Help, and restarting Help gives me 
another 5 working links again..

I am beginning to fear a system reinstall is necessary. This will be 
painful because the firewall blocks "system update" so I'll have to find 
all the updaters manually.


Thanks again for all the suggestions and help.
Carl


-----Original Message-----
From: Carl Witthoft [mailto:carl at witthoft.com]
Sent: Sun 2010-01-17 4:09 PM
To: Witthoft, Carl G (AS); cellocgw at yahoo.com
Subject: [Fwd: Re: [R-SIG-Mac] R 2.10.1,  OSX 10.4.11, and maybe a firewall]



-------- Original Message --------
Subject: Re: [R-SIG-Mac] R 2.10.1,  OSX 10.4.11, and maybe a firewall
Date: Sun, 17 Jan 2010 12:14:13 -0500
From: Simon Urbanek <simon.urbanek at r-project.org>

One of the issues is that the built-in browsers don't show errors. So
one way to go about this is to enable the external browser (in Terminal):

defaults write org.R-project.R use.external.help YES

Then use the help and see what it says. To revert back to the built0in
help, you can use
defaults delete org.R-project.R use.external.help

Cheers,
Simon


From akelly at tcd.ie  Tue Jan 19 09:48:37 2010
From: akelly at tcd.ie (Alan Kelly)
Date: Tue, 19 Jan 2010 08:48:37 +0000
Subject: [R-SIG-Mac] Console font size
In-Reply-To: <mailman.3556.1260058013.4157.r-sig-mac@stat.math.ethz.ch>
References: <mailman.3556.1260058013.4157.r-sig-mac@stat.math.ethz.ch>
Message-ID: <E577191B-833D-4B2B-A78A-A64740DAACA4@tcd.ie>

Dear all, I plan to use Apple's Podcast Producer 2 to deliver some  
distance learning courses.  The existing console font size is far too  
small for this purpose.  When I open R preferences (Quartz tab) I see  
that the font family is given as "System Font Text" and font point  
size as 12.  The "change" button is greyed out.  (Why?) What do I need  
to do to reset the family and font size? I've looked at the R for Mac  
OS X FAQ without finding an answer.
Many thanks for any suggestions.
Alan Kelly
Department of Public Health & Primary Care
Trinity College Dublin


From akelly at tcd.ie  Tue Jan 19 09:52:24 2010
From: akelly at tcd.ie (Alan Kelly)
Date: Tue, 19 Jan 2010 08:52:24 +0000
Subject: [R-SIG-Mac] Re. Console font size
In-Reply-To: <mailman.3556.1260058013.4157.r-sig-mac@stat.math.ethz.ch>
References: <mailman.3556.1260058013.4157.r-sig-mac@stat.math.ethz.ch>
Message-ID: <99867EE8-E418-41D0-86D6-4431AEBB150E@tcd.ie>

Whoops!  Sorry all - found the answer just after I hit the send  
button.  Of course, the Format menu item now handles the console font  
details.
Apologies....
Alan Kelly


From hb at stat.berkeley.edu  Tue Jan 19 19:53:47 2010
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Tue, 19 Jan 2010 10:53:47 -0800
Subject: [R-SIG-Mac] [Rd] CRAN: No MacOS X binary builds since January 7
In-Reply-To: <743AA1E0-BCE0-4613-BA33-D9083E6E5869@r-project.org>
References: <59d7961d1001172359j4dfe39b2t91bcf90e8bc7cd2b@mail.gmail.com>
	<alpine.LFD.2.00.1001180931490.10230@gannet.stats.ox.ac.uk>
	<59d7961d1001180453l4206374fsc64c28e89e170872@mail.gmail.com>
	<743AA1E0-BCE0-4613-BA33-D9083E6E5869@r-project.org>
Message-ID: <59d7961d1001191053t782bfe24o7cd48e65555a28f4@mail.gmail.com>

Thanks,

the "universal" MacOS X binaries are now updated/built, which are what
the CRAN package pages refer to.

Just for others information: I've been emailing offline with Simon U
("maintainer"), and it turns out that my initial posts to him
regarding these issues went into his spam folder.  Without wanting to
raise expectations of his responsiveness, he basically said if you
don't get a reply within a few days, your post most likely ended up in
his spam folder.  May be good to know.

/Henrik

On Mon, Jan 18, 2010 at 6:54 AM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
> On Jan 18, 2010, at 7:53 , Henrik Bengtsson wrote:
>
>> On Mon, Jan 18, 2010 at 1:36 AM, Prof Brian Ripley
>> <ripley at stats.ox.ac.uk> wrote:
>>>
>>> Not an issue for *this* list!
>>
>> I used this list to share this with package developers - not
>> particularly MacOS X users. ?As a package provider ?I'd like to know
>> when packages are not available on all platforms. ?It seems like a
>> errors, because the records show that packages are typically built
>> every day.
>>
>>>
>>> Please report to the maintainer and perhaps cc R-sig-mac.
>>
>> Maintainer has been notified repeatably without response (==don't know
>> if my messages even gets through).
>>
>
> I wonder where you were sending your notifications -- quite apparently not
> to the right place as I didn't get any ...
>
> Anyway, now that it reached me (through suboptimal channels as Brian pointed
> out) it should be fixed for the next run.
>
>
>>> ?Note that you are
>>> looking at the (old) Tiger binaries and not the more current Leopard
>>> ones,
>>> which were last updated yesterday,
>>
>> Thanks for this note. ?As a non-OSX user, I wasn't aware of this. ?It
>> made me find:
>>
>> http://cran.r-project.org/bin/macosx/leopard/contrib/r-release/
>>
>> This is not the directory that are used for the MacOS X links when
>> going to package pages under http://cran.r-project.org/web/packages/,
>> e.g.
>>
>> http://cran.r-project.org/web/packages/aroma.core/
>>
>> The MacOS X links is:
>>
>>
>> http://cran.r-project.org/bin/macosx/universal/contrib/r-release/aroma.core_1.3.1.tgz
>>
>> Another example is here:
>>
>> ?http://cran.r-project.org/web/packages/biglars/
>>
>> Then, do the MacOS X links on the CRAN package pages need to be
>> updated/complemented?
>>
>
> I think so -- there is currently a discrepancy - the checks show Leopard
> builds but that link is to the Tiger build -- Kurt, can you, please, check?
>
>
>> If this is already well known, that is all I need to hear. ?(I
>> understand that install.packages() takes care of the installation).
>>
>> /Henrik
>>
>>>
>>> In any case, binary packages are a privilege and you can always install
>>> from
>>> the sources (in the vast majority of cases with no extra tools other than
>>> Xcode).
>>>
>>> On Sun, 17 Jan 2010, Henrik Bengtsson wrote:
>>>
>>>> FYI,
>>>>
>>>> no MacOS X binaries have been built for CRAN since 2010-01-07:
>>>>
>>>>> url <-
>>>>> "http://cran.r-project.org/bin/macosx/universal/contrib/r-release/";
>>>>> x <- readLines(url);
>>>>
>>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
>>>> y <- grep(pattern, x, value=TRUE);
>>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>>> z <- gsub(pattern, "\\1", y);
>>>> z <- unique(z);
>>>> z <- as.Date(z, "%d-%b-%Y");
>>>> z <- sort(z);
>>>> print(z);
>>>>>
>>>>> pattern <- ".*([0-9]{2}-[A-Za-z]{3}-[0-9]{4}) ([0-9]{2}:[0-9]{2}).*";
>>>>> y <- grep(pattern, x, value=TRUE);
>>>>> y <- grep("PACKAGE", y, invert=TRUE, value=TRUE);
>>>>> z <- gsub(pattern, "\\1", y);
>>>>> z <- unique(z);
>>>>> z <- as.Date(z, "%d-%b-%Y");
>>>>> z <- sort(z);
>>>>> print(z);
>>>>
>>>> [1] "2009-07-18" "2009-07-19" "2009-10-02" "2009-10-16" "2009-10-27"
>>>> [6] "2009-10-28" "2009-10-29" "2009-10-30" "2009-10-31" "2009-11-02"
>>>> [11] "2009-11-04" "2009-11-05" "2009-11-06" "2009-11-07" "2009-11-09"
>>>> [16] "2009-11-10" "2009-11-11" "2009-11-12" "2009-11-13" "2009-11-14"
>>>> [21] "2009-11-16" "2009-11-17" "2009-11-18" "2009-11-19" "2009-11-20"
>>>> [26] "2009-11-21" "2009-11-23" "2009-11-24" "2009-11-25" "2009-11-26"
>>>> [31] "2009-11-27" "2009-11-28" "2009-11-30" "2009-12-01" "2009-12-02"
>>>> [36] "2009-12-03" "2009-12-04" "2009-12-07" "2009-12-08" "2009-12-10"
>>>> [41] "2009-12-11" "2009-12-12" "2009-12-14" "2009-12-15" "2009-12-16"
>>>> [46] "2009-12-17" "2009-12-18" "2009-12-19" "2009-12-21" "2009-12-22"
>>>> [51] "2009-12-23" "2009-12-24" "2009-12-25" "2009-12-27" "2009-12-29"
>>>> [56] "2009-12-30" "2009-12-31" "2010-01-02" "2010-01-03" "2010-01-04"
>>>> [61] "2010-01-05" "2010-01-06" "2010-01-07"
>>>>>
>>>>> print(table(diff(z)));
>>>>
>>>> 1 ?2 ?3 11 14 75
>>>> 46 12 ?1 ?1 ?1 ?1
>>>>
>>>> /Henrik
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>> --
>>> Brian D. Ripley, ? ? ? ? ? ? ? ? ?ripley at stats.ox.ac.uk
>>> Professor of Applied Statistics, ?http://www.stats.ox.ac.uk/~ripley/
>>> University of Oxford, ? ? ? ? ? ? Tel: ?+44 1865 272861 (self)
>>> 1 South Parks Road, ? ? ? ? ? ? ? ? ? ? +44 1865 272866 (PA)
>>> Oxford OX1 3TG, UK ? ? ? ? ? ? ? ?Fax: ?+44 1865 272595
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>
>


From raktim at jimmy.harvard.edu  Wed Jan 20 17:17:15 2010
From: raktim at jimmy.harvard.edu (Raktim Sinha)
Date: Wed, 20 Jan 2010 11:17:15 -0500
Subject: [R-SIG-Mac] Using previous version of R as the default version
Message-ID: <000901ca99ec$0792c030$16b84090$@harvard.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100120/8f028181/attachment.pl>

From simon.urbanek at r-project.org  Thu Jan 21 01:52:48 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 20 Jan 2010 19:52:48 -0500
Subject: [R-SIG-Mac] Using previous version of R as the default version
In-Reply-To: <000901ca99ec$0792c030$16b84090$@harvard.edu>
References: <000901ca99ec$0792c030$16b84090$@harvard.edu>
Message-ID: <6EBD330A-E082-4A48-8191-8A84A1927DC9@r-project.org>


On Jan 20, 2010, at 11:17 AM, Raktim Sinha wrote:

> Hello,
> 
> 
> 
> I am running Mac OS X 10.6.
> 
> I had R 2.9 and recently updated to 2.10.
> 
> When I start R it defaults to v 2.10.
> 
> 
> 
> I can launch R 2.9 with an absolute path:
> 
> /Library/Frameworks/R.framework/Versions/2.9/Resources/R
> 
> 
> 
> But is there a way to launch the previous version, 2.9, or the latest
> version as the default version by running a script ?
> 
> If so how should I go about writing such a script? What all links needs to
> be updated?
> 

See R for Mac FAQ 12.15 
http://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html

Cheers,
Simon


> 
> 
> I would appreciate some suggestions.
> 
> Thanks,
> 
> Raktim
> 
> 
> 
> Bioinformatics Engineer
> 
> DFCI, Harvard Med School
> 
> Boston
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
>


From cstrato at aon.at  Thu Jan 21 20:47:00 2010
From: cstrato at aon.at (cstrato)
Date: Thu, 21 Jan 2010 20:47:00 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
Message-ID: <4B58AF34.1030303@aon.at>

Dear all,

I have the following problem:
My Bioconductor package xps requires both R and ROOT, whereby I compile 
ROOT usually from source. Until now this has not been a problem since I 
do all my development on Tiger. However, now I wanted to compile ROOT on 
Leopard but failed since my gfortran compiler is too old, see:
http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34

To solve the problem I should upgrade to the latest version coming with 
gcc-4.4 in Fink. Thus my question is:
Can I also use this version for R or do I need to use the version 
downloaded from att?

Best regards
Christian
_._._._._._._._._._._._._._._._._._
C.h.r.i.s.t.i.a.n   S.t.r.a.t.o.w.a
V.i.e.n.n.a           A.u.s.t.r.i.a
e.m.a.i.l:        cstrato at aon.at
_._._._._._._._._._._._._._._._._._


From simon.urbanek at r-project.org  Thu Jan 21 21:10:06 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 21 Jan 2010 15:10:06 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B58AF34.1030303@aon.at>
References: <4B58AF34.1030303@aon.at>
Message-ID: <F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>


On Jan 21, 2010, at 14:47 , cstrato wrote:

> Dear all,
>
> I have the following problem:
> My Bioconductor package xps requires both R and ROOT, whereby I  
> compile ROOT usually from source. Until now this has not been a  
> problem since I do all my development on Tiger. However, now I  
> wanted to compile ROOT on Leopard but failed since my gfortran  
> compiler is too old, see:
> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34
>
> To solve the problem I should upgrade to the latest version coming  
> with gcc-4.4 in Fink.

I would advise against that - using gcc from Fink usually calls for a  
disaster. The real solution is to fix their flags, but that's another  
story ...


> Thus my question is:
> Can I also use this version for R or do I need to use the version  
> downloaded from att?
>

I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x  
from the Mac devel page
http://r.research.att.com/tools/
which I assume is what you meant by the latter.

Cheers,
Simon


From cstrato at aon.at  Thu Jan 21 21:23:22 2010
From: cstrato at aon.at (cstrato)
Date: Thu, 21 Jan 2010 21:23:22 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
Message-ID: <4B58B7BA.1020705@aon.at>

Dear Simon,

Thank you for your fast reply.
At the moment I have installed gfortran-4.2.3.dmg from your web-site.

Which package do you mean with gfortran 4.2.4?
- gfortran-42-5646.pkg which requires Snow Leopard, or
- gfortran-4.2-5564-darwin9.tar.gz which I assume that I need to compile 
from source?

Best regards
Christian


Simon Urbanek wrote:
>
> On Jan 21, 2010, at 14:47 , cstrato wrote:
>
>> Dear all,
>>
>> I have the following problem:
>> My Bioconductor package xps requires both R and ROOT, whereby I 
>> compile ROOT usually from source. Until now this has not been a 
>> problem since I do all my development on Tiger. However, now I wanted 
>> to compile ROOT on Leopard but failed since my gfortran compiler is 
>> too old, see:
>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>
>>
>> To solve the problem I should upgrade to the latest version coming 
>> with gcc-4.4 in Fink.
>
> I would advise against that - using gcc from Fink usually calls for a 
> disaster. The real solution is to fix their flags, but that's another 
> story ...
>
>
>> Thus my question is:
>> Can I also use this version for R or do I need to use the version 
>> downloaded from att?
>>
>
> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x 
> from the Mac devel page
> http://r.research.att.com/tools/
> which I assume is what you meant by the latter.
>
> Cheers,
> Simon
>
>


From cstrato at aon.at  Thu Jan 21 21:56:54 2010
From: cstrato at aon.at (cstrato)
Date: Thu, 21 Jan 2010 21:56:54 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
Message-ID: <4B58BF96.3070304@aon.at>

Dear Simon,

One more question:
I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
Using built-in specs.
Target: i686-apple-darwin9
Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure 
--disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man 
--enable-languages=c,objc,c++,obj-c++,fortran 
--program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ 
--with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib 
--build=i686-apple-darwin9 --host=i686-apple-darwin9 
--target=i686-apple-darwin9
Thread model: posix
gcc version 4.2.1 (Apple Inc. build 5564)

This means that this version seems to be older than the one I am using now?

Where can I download the version Leopard gfortran 4.2.4 that you mention?

Best regards
Christian


Simon Urbanek wrote:
>
> On Jan 21, 2010, at 14:47 , cstrato wrote:
>
>> Dear all,
>>
>> I have the following problem:
>> My Bioconductor package xps requires both R and ROOT, whereby I 
>> compile ROOT usually from source. Until now this has not been a 
>> problem since I do all my development on Tiger. However, now I wanted 
>> to compile ROOT on Leopard but failed since my gfortran compiler is 
>> too old, see:
>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>
>>
>> To solve the problem I should upgrade to the latest version coming 
>> with gcc-4.4 in Fink.
>
> I would advise against that - using gcc from Fink usually calls for a 
> disaster. The real solution is to fix their flags, but that's another 
> story ...
>
>
>> Thus my question is:
>> Can I also use this version for R or do I need to use the version 
>> downloaded from att?
>>
>
> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x 
> from the Mac devel page
> http://r.research.att.com/tools/
> which I assume is what you meant by the latter.
>
> Cheers,
> Simon
>
>


From simon.urbanek at r-project.org  Thu Jan 21 22:48:32 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 21 Jan 2010 16:48:32 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B58BF96.3070304@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
Message-ID: <6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>


On Jan 21, 2010, at 15:56 , cstrato wrote:

> Dear Simon,
>
> One more question:
> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version  
> gives:
> Using built-in specs.
> Target: i686-apple-darwin9
> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure -- 
> disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/ 
> man --enable-languages=c,objc,c++,obj-c++,fortran --program- 
> transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/ 
> include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9  
> --host=i686-apple-darwin9 --target=i686-apple-darwin9
> Thread model: posix
> gcc version 4.2.1 (Apple Inc. build 5564)
>
> This means that this version seems to be older than the one I am  
> using now?
>

No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc  
version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that  
is what they define - it just adds Fortran support to the existing gcc  
4.2.1 branch of Apple that you installed as Xcode. However, the  
Fortran part is merged from the GNU Fortran 4.2.4 release - hence I  
refer to it as 4.2.4.

Cheers,
Simon


>
> Simon Urbanek wrote:
>>
>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>
>>> Dear all,
>>>
>>> I have the following problem:
>>> My Bioconductor package xps requires both R and ROOT, whereby I  
>>> compile ROOT usually from source. Until now this has not been a  
>>> problem since I do all my development on Tiger. However, now I  
>>> wanted to compile ROOT on Leopard but failed since my gfortran  
>>> compiler is too old, see:
>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34
>>>
>>> To solve the problem I should upgrade to the latest version coming  
>>> with gcc-4.4 in Fink.
>>
>> I would advise against that - using gcc from Fink usually calls for  
>> a disaster. The real solution is to fix their flags, but that's  
>> another story ...
>>
>>
>>> Thus my question is:
>>> Can I also use this version for R or do I need to use the version  
>>> downloaded from att?
>>>
>>
>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x  
>> from the Mac devel page
>> http://r.research.att.com/tools/
>> which I assume is what you meant by the latter.
>>
>> Cheers,
>> Simon
>>
>>
>
>


From helene.frigstad at gfi.uib.no  Fri Jan 22 14:20:42 2010
From: helene.frigstad at gfi.uib.no (Helene Frigstad)
Date: Fri, 22 Jan 2010 14:20:42 +0100
Subject: [R-SIG-Mac] Error when installing gtools package
Message-ID: <86E7D1EE-227C-4DC8-A406-168E022A81D9@gfi.uib.no>

Hi,

I am having difficulties installing the gtools pacakge. I am using R64 on Mac OS X version 10.6.2. I allready have gtools in my package manager, but cannot load it:

library (gplots)
Loading required package: gtools
Error: package 'gtools' could not be loaded
In addition: Warning message:
In library(pkg, character.only = TRUE, logical.return = TRUE, lib.loc = lib.loc) :
 there is no package called 'gtools'

when I try to install again I get:

trying URL 'http://cran.ii.uib.no/bin/macosx/leopard/contrib/2.10/gplots_2.7.4.tgz'
Content type 'application/x-gzip' length 331160 bytes (323 Kb)
opened URL
==================================================
downloaded 323 Kb

tar: Failed to set default locale

The downloaded packages are in
	/var/folders/Ov/OvnH9wwWGcOwAVTHGCBZ6++++TI/-Tmp-//Rtmphruf6C/downloaded_packages

is there anyone who knows how I can solve this? I need to produce some plots with CI before monday, so any help is very much appreciated!

Best regards,
Helene Frigstad
Phd student in Chemical Oceanography
University of Bergen
Norway

From dwinsemius at comcast.net  Fri Jan 22 15:10:23 2010
From: dwinsemius at comcast.net (David Winsemius)
Date: Fri, 22 Jan 2010 09:10:23 -0500
Subject: [R-SIG-Mac] Error when installing gtools package
In-Reply-To: <86E7D1EE-227C-4DC8-A406-168E022A81D9@gfi.uib.no>
References: <86E7D1EE-227C-4DC8-A406-168E022A81D9@gfi.uib.no>
Message-ID: <3A944508-DBC3-443C-B2B0-883A6F21278C@comcast.net>


On Jan 22, 2010, at 8:20 AM, Helene Frigstad wrote:

> Hi,
>
> I am having difficulties installing the gtools pacakge. I am using  
> R64 on Mac OS X version 10.6.2. I allready have gtools in my package  
> manager, but cannot load it:
>
> library (gplots)
> Loading required package: gtools
> Error: package 'gtools' could not be loaded
> In addition: Warning message:
> In library(pkg, character.only = TRUE, logical.return = TRUE,  
> lib.loc = lib.loc) :
> there is no package called 'gtools'
>
> when I try to install again I get:

Did you include a requirement that dependencies be installed as well?  
(And why didn't you "try" to install gtools? That was the problem  
package.)

You could trash both of them and then repeat the installation of  
gtools with dependencies required. By default they would be in:
/Library/Frameworks/R.framework/Versions/2.10/Resources/library

-- 
David


>
> trying URL 'http://cran.ii.uib.no/bin/macosx/leopard/contrib/2.10/gplots_2.7.4.tgz'
> Content type 'application/x-gzip' length 331160 bytes (323 Kb)
> opened URL
> ==================================================
> downloaded 323 Kb
>
> tar: Failed to set default locale
>
> The downloaded packages are in
> 	/var/folders/Ov/OvnH9wwWGcOwAVTHGCBZ6++++TI/-Tmp-//Rtmphruf6C/ 
> downloaded_packages
>
> is there anyone who knows how I can solve this? I need to produce  
> some plots with CI before monday, so any help is very much  
> appreciated!
>
> Best regards,
> Helene Frigstad
> Phd student in Chemical Oceanography
> University of Bergen
> Norway
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac

David Winsemius, MD
Heritage Laboratories
West Hartford, CT


From raktim at jimmy.harvard.edu  Fri Jan 22 15:57:14 2010
From: raktim at jimmy.harvard.edu (Raktim Sinha)
Date: Fri, 22 Jan 2010 09:57:14 -0500
Subject: [R-SIG-Mac] Using previous version of R as the default version
In-Reply-To: <6EBD330A-E082-4A48-8191-8A84A1927DC9@r-project.org>
References: <000901ca99ec$0792c030$16b84090$@harvard.edu>
	<6EBD330A-E082-4A48-8191-8A84A1927DC9@r-project.org>
Message-ID: <003c01ca9b73$2f05bd10$8d113730$@harvard.edu>

Hi Simon & Eric,

Thanks for the pointer on RSwitch, it works nicely on Leopard.

However on Snow Leopard, I can't find the /Library/Receipts/R.framework.pkg
to delete before installing R 2.10 as a result, I think, RSwitch is only
showing 2.10 and not 2.9.

I am using the 32Bit Legacy universal binary.

How can I fix this?
Thanks for the help
Raktim


-----Original Message-----
From: Simon Urbanek [mailto:simon.urbanek at r-project.org] 
Sent: Wednesday, January 20, 2010 7:53 PM
To: Raktim Sinha
Cc: r-sig-mac at stat.math.ethz.ch
Subject: Re: [R-SIG-Mac] Using previous version of R as the default version


On Jan 20, 2010, at 11:17 AM, Raktim Sinha wrote:

> Hello,
> 
> 
> 
> I am running Mac OS X 10.6.
> 
> I had R 2.9 and recently updated to 2.10.
> 
> When I start R it defaults to v 2.10.
> 
> 
> 
> I can launch R 2.9 with an absolute path:
> 
> /Library/Frameworks/R.framework/Versions/2.9/Resources/R
> 
> 
> 
> But is there a way to launch the previous version, 2.9, or the latest
> version as the default version by running a script ?
> 
> If so how should I go about writing such a script? What all links needs to
> be updated?
> 

See R for Mac FAQ 12.15 
http://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html

Cheers,
Simon


> 
> 
> I would appreciate some suggestions.
> 
> Thanks,
> 
> Raktim
> 
> 
> 
> Bioinformatics Engineer
> 
> DFCI, Harvard Med School
> 
> Boston
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
>


From simon.urbanek at r-project.org  Fri Jan 22 16:36:49 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 22 Jan 2010 10:36:49 -0500
Subject: [R-SIG-Mac] Using previous version of R as the default version
In-Reply-To: <003c01ca9b73$2f05bd10$8d113730$@harvard.edu>
References: <000901ca99ec$0792c030$16b84090$@harvard.edu>
	<6EBD330A-E082-4A48-8191-8A84A1927DC9@r-project.org>
	<003c01ca9b73$2f05bd10$8d113730$@harvard.edu>
Message-ID: <9C734EE7-1FA6-4B34-B965-535FDF13FA92@r-project.org>


On Jan 22, 2010, at 9:57 AM, Raktim Sinha wrote:

> Hi Simon & Eric,
> 
> Thanks for the pointer on RSwitch, it works nicely on Leopard.
> 
> However on Snow Leopard, I can't find the /Library/Receipts/R.framework.pkg
> to delete

That instruction is for OS X 10.4 Tiger. On OS X 10.5 and higher you have to use 

pkgutil --forget org.r-project.R.Leopard.fw.pkg

or for the Tiger binary:

pkgutil --forget org.r-project.R.framework
pkgutil --forget org.r-project.R

However now it's too late unless you reinstall both versions.


> before installing R 2.10 as a result, I think, RSwitch is only
> showing 2.10 and not 2.9.
> 
> I am using the 32Bit Legacy universal binary.
> 

You should be preferably using the current Leopard binary -- the legacy one is only meant for Mac OS X 10.4 Tiger and is deprecated.

Cheers,
Simon



> How can I fix this?
> Thanks for the help
> Raktim
> 
> 
> -----Original Message-----
> From: Simon Urbanek [mailto:simon.urbanek at r-project.org] 
> Sent: Wednesday, January 20, 2010 7:53 PM
> To: Raktim Sinha
> Cc: r-sig-mac at stat.math.ethz.ch
> Subject: Re: [R-SIG-Mac] Using previous version of R as the default version
> 
> 
> On Jan 20, 2010, at 11:17 AM, Raktim Sinha wrote:
> 
>> Hello,
>> 
>> 
>> 
>> I am running Mac OS X 10.6.
>> 
>> I had R 2.9 and recently updated to 2.10.
>> 
>> When I start R it defaults to v 2.10.
>> 
>> 
>> 
>> I can launch R 2.9 with an absolute path:
>> 
>> /Library/Frameworks/R.framework/Versions/2.9/Resources/R
>> 
>> 
>> 
>> But is there a way to launch the previous version, 2.9, or the latest
>> version as the default version by running a script ?
>> 
>> If so how should I go about writing such a script? What all links needs to
>> be updated?
>> 
> 
> See R for Mac FAQ 12.15 
> http://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html
> 
> Cheers,
> Simon
> 
> 
>> 
>> 
>> I would appreciate some suggestions.
>> 
>> Thanks,
>> 
>> Raktim
>> 
>> 
>> 
>> Bioinformatics Engineer
>> 
>> DFCI, Harvard Med School
>> 
>> Boston
>> 
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
> 
> 
> 


From raktim at jimmy.harvard.edu  Fri Jan 22 17:29:54 2010
From: raktim at jimmy.harvard.edu (Raktim Sinha)
Date: Fri, 22 Jan 2010 11:29:54 -0500
Subject: [R-SIG-Mac] Using previous version of R as the default version
In-Reply-To: <9C734EE7-1FA6-4B34-B965-535FDF13FA92@r-project.org>
References: <000901ca99ec$0792c030$16b84090$@harvard.edu>
	<6EBD330A-E082-4A48-8191-8A84A1927DC9@r-project.org>
	<003c01ca9b73$2f05bd10$8d113730$@harvard.edu>
	<9C734EE7-1FA6-4B34-B965-535FDF13FA92@r-project.org>
Message-ID: <004601ca9b80$20dacd90$629068b0$@harvard.edu>

Thanks Simon,

That worked perfectly.

We would move to the current Leopard binary soon but until then I have to
test some things against the old ones.
Rswitch is a very helpful util.

Best,
Raktim


-----Original Message-----
From: Simon Urbanek [mailto:simon.urbanek at r-project.org] 
Sent: Friday, January 22, 2010 10:37 AM
To: Raktim Sinha
Cc: r-sig-mac at stat.math.ethz.ch; 'Eric Wooten'
Subject: Re: [R-SIG-Mac] Using previous version of R as the default version


On Jan 22, 2010, at 9:57 AM, Raktim Sinha wrote:

> Hi Simon & Eric,
> 
> Thanks for the pointer on RSwitch, it works nicely on Leopard.
> 
> However on Snow Leopard, I can't find the
/Library/Receipts/R.framework.pkg
> to delete

That instruction is for OS X 10.4 Tiger. On OS X 10.5 and higher you have to
use 

pkgutil --forget org.r-project.R.Leopard.fw.pkg

or for the Tiger binary:

pkgutil --forget org.r-project.R.framework
pkgutil --forget org.r-project.R

However now it's too late unless you reinstall both versions.


> before installing R 2.10 as a result, I think, RSwitch is only
> showing 2.10 and not 2.9.
> 
> I am using the 32Bit Legacy universal binary.
> 

You should be preferably using the current Leopard binary -- the legacy one
is only meant for Mac OS X 10.4 Tiger and is deprecated.

Cheers,
Simon



> How can I fix this?
> Thanks for the help
> Raktim
> 
> 
> -----Original Message-----
> From: Simon Urbanek [mailto:simon.urbanek at r-project.org] 
> Sent: Wednesday, January 20, 2010 7:53 PM
> To: Raktim Sinha
> Cc: r-sig-mac at stat.math.ethz.ch
> Subject: Re: [R-SIG-Mac] Using previous version of R as the default
version
> 
> 
> On Jan 20, 2010, at 11:17 AM, Raktim Sinha wrote:
> 
>> Hello,
>> 
>> 
>> 
>> I am running Mac OS X 10.6.
>> 
>> I had R 2.9 and recently updated to 2.10.
>> 
>> When I start R it defaults to v 2.10.
>> 
>> 
>> 
>> I can launch R 2.9 with an absolute path:
>> 
>> /Library/Frameworks/R.framework/Versions/2.9/Resources/R
>> 
>> 
>> 
>> But is there a way to launch the previous version, 2.9, or the latest
>> version as the default version by running a script ?
>> 
>> If so how should I go about writing such a script? What all links needs
to
>> be updated?
>> 
> 
> See R for Mac FAQ 12.15 
> http://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html
> 
> Cheers,
> Simon
> 
> 
>> 
>> 
>> I would appreciate some suggestions.
>> 
>> Thanks,
>> 
>> Raktim
>> 
>> 
>> 
>> Bioinformatics Engineer
>> 
>> DFCI, Harvard Med School
>> 
>> Boston
>> 
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
> 
> 
>


From cstrato at aon.at  Fri Jan 22 22:04:00 2010
From: cstrato at aon.at (cstrato)
Date: Fri, 22 Jan 2010 22:04:00 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
Message-ID: <4B5A12C0.70909@aon.at>

Dear Simon,

Thank you for this information.

Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and 
tried to compile ROOT again, but this time I got the following error:
g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name 
@rpath/libminicern.so -O2 -m64 -o lib/libminicern.so 
misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o 
misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib 
/usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory

I know that this is not necessarily an R-related question but I would 
greatly appreciate your help if possible (at least it is a Mac- and 
somehow a BioC-related question).

When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the 
following error:
gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib 
lib/libminicern.so 
/usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
/usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a 
-lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
ld: -rpath can only be used when targeting Mac OS X 10.5 or later

As you can see gfortran-4.2.3 could find libgfortran.dylib at:
/usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 

while gfortran-4.2.4 could not find libgfortran.dylib.

Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is 
what I did:
$ gunzip gfortran-4.2-5564-darwin9.tar.gz
$ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
$ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran

Do you know what I need to do so that libgfortran.dylib can be found?

P.S.:Since many Mac users are no Unix experts please allow me to suggest 
to place on your website the commands to install/uninstall gfortran. I 
have found the following website, which told me how to install gfortran 
and how I could uninstall it:
http://www.webmo.net/support/fortran_osx.html

Thank you in advance.
Best regards
Christian



Simon Urbanek wrote:
>
> On Jan 21, 2010, at 15:56 , cstrato wrote:
>
>> Dear Simon,
>>
>> One more question:
>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version 
>> gives:
>> Using built-in specs.
>> Target: i686-apple-darwin9
>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure 
>> --disable-checking --enable-werror --prefix=/usr 
>> --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran 
>> --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ 
>> --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib 
>> --build=i686-apple-darwin9 --host=i686-apple-darwin9 
>> --target=i686-apple-darwin9
>> Thread model: posix
>> gcc version 4.2.1 (Apple Inc. build 5564)
>>
>> This means that this version seems to be older than the one I am 
>> using now?
>>
>
> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc 
> version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that 
> is what they define - it just adds Fortran support to the existing gcc 
> 4.2.1 branch of Apple that you installed as Xcode. However, the 
> Fortran part is merged from the GNU Fortran 4.2.4 release - hence I 
> refer to it as 4.2.4.
>
> Cheers,
> Simon
>
>
>>
>> Simon Urbanek wrote:
>>>
>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>
>>>> Dear all,
>>>>
>>>> I have the following problem:
>>>> My Bioconductor package xps requires both R and ROOT, whereby I 
>>>> compile ROOT usually from source. Until now this has not been a 
>>>> problem since I do all my development on Tiger. However, now I 
>>>> wanted to compile ROOT on Leopard but failed since my gfortran 
>>>> compiler is too old, see:
>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>
>>>>
>>>> To solve the problem I should upgrade to the latest version coming 
>>>> with gcc-4.4 in Fink.
>>>
>>> I would advise against that - using gcc from Fink usually calls for 
>>> a disaster. The real solution is to fix their flags, but that's 
>>> another story ...
>>>
>>>
>>>> Thus my question is:
>>>> Can I also use this version for R or do I need to use the version 
>>>> downloaded from att?
>>>>
>>>
>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x 
>>> from the Mac devel page
>>> http://r.research.att.com/tools/
>>> which I assume is what you meant by the latter.
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>
>>
>
>


From khansen at stat.berkeley.edu  Sat Jan 23 01:11:03 2010
From: khansen at stat.berkeley.edu (Kasper Daniel Hansen)
Date: Fri, 22 Jan 2010 19:11:03 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B5A12C0.70909@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
Message-ID: <855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>

Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.

The error seems to indicate that you need 4.2 in order to use Simon's gfortran.

Kasper

On Jan 22, 2010, at 16:04 PM, cstrato wrote:

> Dear Simon,
> 
> Thank you for this information.
> 
> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
> 
> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
> 
> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
> 
> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
> while gfortran-4.2.4 could not find libgfortran.dylib.
> 
> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
> 
> Do you know what I need to do so that libgfortran.dylib can be found?
> 
> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
> http://www.webmo.net/support/fortran_osx.html
> 
> Thank you in advance.
> Best regards
> Christian
> 
> 
> 
> Simon Urbanek wrote:
>> 
>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>> 
>>> Dear Simon,
>>> 
>>> One more question:
>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>> Using built-in specs.
>>> Target: i686-apple-darwin9
>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>> Thread model: posix
>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>> 
>>> This means that this version seems to be older than the one I am using now?
>>> 
>> 
>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>> 
>> Cheers,
>> Simon
>> 
>> 
>>> 
>>> Simon Urbanek wrote:
>>>> 
>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>> 
>>>>> Dear all,
>>>>> 
>>>>> I have the following problem:
>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>> 
>>>>> To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>> 
>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>> 
>>>> 
>>>>> Thus my question is:
>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>> 
>>>> 
>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>> http://r.research.att.com/tools/
>>>> which I assume is what you meant by the latter.
>>>> 
>>>> Cheers,
>>>> Simon
>>>> 
>>>> 
>>> 
>>> 
>> 
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From cstrato at aon.at  Sat Jan 23 14:37:47 2010
From: cstrato at aon.at (cstrato)
Date: Sat, 23 Jan 2010 14:37:47 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
Message-ID: <4B5AFBAB.4070800@aon.at>

Dear Kasper,

Thank you for your suggestion, I did indeed use gcc 4.0.
Since gcc_select does no longer exist on Leopard I had to do:
cd /usr/bin
sudo ln -s gcc-4.2 gcc
sudo ln -s g++-4.2 g++
sudo ln -s gcov-4.2 gcov

Sadly, compiling ROOT resulted still in the same error:
i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory

When I check the location for gfortran-4.2.3.dmg I get:
$ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
$ ls -al
total 32
drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran.2.0.0.dylib -> 
../libgfortran.2.0.0.dylib
lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib -> 
libgfortran.2.0.0.dylib
lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> 
../libgfortran.a
lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib -> 
libgfortran.2.0.0.dylib

This means that /usr/local/bin does contain libgfortran.dylib whereas 
/usr/bin does not contain any of these files or links.
Does this mean that gfortran-4.2.3.dmg does contain these file for 
libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does not 
contain these files?
How do I get libgfortran.dylib?

BTW, I must apologize to Simon. On his website he lists the commands how 
to install gfortran.tar.gz, but in the Tiger section, so I did miss it. 
Nevertheless it would still be helpful for Mac users to know how to 
uninstall it:
$ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)

Best regards
Christian


Kasper Daniel Hansen wrote:
> Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.
>
> The error seems to indicate that you need 4.2 in order to use Simon's gfortran.
>
> Kasper
>
> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>
>   
>> Dear Simon,
>>
>> Thank you for this information.
>>
>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
>> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
>>
>> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
>>
>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>
>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
>> while gfortran-4.2.4 could not find libgfortran.dylib.
>>
>> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>
>> Do you know what I need to do so that libgfortran.dylib can be found?
>>
>> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
>> http://www.webmo.net/support/fortran_osx.html
>>
>> Thank you in advance.
>> Best regards
>> Christian
>>
>>
>>
>> Simon Urbanek wrote:
>>     
>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>
>>>       
>>>> Dear Simon,
>>>>
>>>> One more question:
>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>>> Using built-in specs.
>>>> Target: i686-apple-darwin9
>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>> Thread model: posix
>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>
>>>> This means that this version seems to be older than the one I am using now?
>>>>
>>>>         
>>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>       
>>>> Simon Urbanek wrote:
>>>>         
>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>
>>>>>           
>>>>>> Dear all,
>>>>>>
>>>>>> I have the following problem:
>>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>>>
>>>>>> To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>>>>             
>>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>>>
>>>>>
>>>>>           
>>>>>> Thus my question is:
>>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>>>
>>>>>>             
>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>>> http://r.research.att.com/tools/
>>>>> which I assume is what you meant by the latter.
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>>
>>>>>           
>>>>         
>>>       
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>     
>
>
>


From khansen at stat.berkeley.edu  Sat Jan 23 16:31:19 2010
From: khansen at stat.berkeley.edu (Kasper Daniel Hansen)
Date: Sat, 23 Jan 2010 10:31:19 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B5AFBAB.4070800@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
Message-ID: <E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>

On Jan 23, 2010, at 8:37 AM, cstrato wrote:

> Dear Kasper,
> 
> Thank you for your suggestion, I did indeed use gcc 4.0.
> Since gcc_select does no longer exist on Leopard I had to do:
> cd /usr/bin
> sudo ln -s gcc-4.2 gcc
> sudo ln -s g++-4.2 g++
> sudo ln -s gcov-4.2 gcov

I am not sure this is advisable in general.  When I compile stuff with gcc-4.2 I usually explicitly set
  CC=/usr/bin/gcc-4.2
when I run configure.  For example, my entire configure line for R on my macbook is
   ../${SRCDIR}/configure SHELL='/bin/bash' \
            CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
            CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
            CXX="/usr/bin/g++-4.2 -arch x86_64" \
            CXXFLAGS="-g -O2 -march=nocona" \
            OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
            F77="/usr/bin/gfortran-4.2 -arch x86_64" \
            FFLAGS="-g -O2 -march=nocona" \
            FC="/usr/bin/gfortran-4.2 -arch x86_64" \
            FCFLAGS="-g -O2 -march=nocona" \
            --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib \
            --with-system-zlib \
            --with-blas='-framework vecLib' --with-lapack
    
Of course this requires that ROOT uses the CC/CFLAGS macros, but that should be pretty standard if it uses autoconf.

> Sadly, compiling ROOT resulted still in the same error:
> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
> 
> When I check the location for gfortran-4.2.3.dmg I get:
> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
> $ ls -al
> total 32
> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib -> libgfortran.2.0.0.dylib
> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> ../libgfortran.a
> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib -> libgfortran.2.0.0.dylib
> 
> This means that /usr/local/bin does contain libgfortran.dylib whereas /usr/bin does not contain any of these files or links.
> Does this mean that gfortran-4.2.3.dmg does contain these file for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
> How do I get libgfortran.dylib?

Simon might be able to answer this better, but the general idea is that the 
> gfortran-4.2-5564-darwin9.tar.gz
installs into /usr/bin
> gfortran-4.2.3.dmg
installs into /usr/local/bin.  There is some logic here, the way I think about it is that the former is a direct extension of the Apple build.

I would start from scratch, which means remove all traces of both gfortrans, install the 5564-tarball and then set the various macros as I have set it above for R (your exact values may of course be different depending on what machine etc. you are using).

Kasper


> BTW, I must apologize to Simon. On his website he lists the commands how to install gfortran.tar.gz, but in the Tiger section, so I did miss it. Nevertheless it would still be helpful for Mac users to know how to uninstall it:
> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
> 
> Best regards
> Christian
> 
> 
> Kasper Daniel Hansen wrote:
>> Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.
>> 
>> The error seems to indicate that you need 4.2 in order to use Simon's gfortran.
>> 
>> Kasper
>> 
>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>> 
>>  
>>> Dear Simon,
>>> 
>>> Thank you for this information.
>>> 
>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
>>> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
>>> 
>>> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
>>> 
>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>> 
>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib while gfortran-4.2.4 could not find libgfortran.dylib.
>>> 
>>> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>> 
>>> Do you know what I need to do so that libgfortran.dylib can be found?
>>> 
>>> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
>>> http://www.webmo.net/support/fortran_osx.html
>>> 
>>> Thank you in advance.
>>> Best regards
>>> Christian
>>> 
>>> 
>>> 
>>> Simon Urbanek wrote:
>>>    
>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>> 
>>>>      
>>>>> Dear Simon,
>>>>> 
>>>>> One more question:
>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>>>> Using built-in specs.
>>>>> Target: i686-apple-darwin9
>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>> Thread model: posix
>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>> 
>>>>> This means that this version seems to be older than the one I am using now?
>>>>> 
>>>>>        
>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>> 
>>>> Cheers,
>>>> Simon
>>>> 
>>>> 
>>>>      
>>>>> Simon Urbanek wrote:
>>>>>        
>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>> 
>>>>>>          
>>>>>>> Dear all,
>>>>>>> 
>>>>>>> I have the following problem:
>>>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>>>> To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>>>>>            
>>>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>>>> 
>>>>>> 
>>>>>>          
>>>>>>> Thus my question is:
>>>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>>>> 
>>>>>>>            
>>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>>>> http://r.research.att.com/tools/
>>>>>> which I assume is what you meant by the latter.
>>>>>> 
>>>>>> Cheers,
>>>>>> Simon
>>>>>> 
>>>>>> 
>>>>>>          
>>>>>        
>>>>      
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>    
>> 
>> 
>>  


From mlk8300 at gmail.com  Sat Jan 23 17:06:30 2010
From: mlk8300 at gmail.com (Mike Kalish)
Date: Sat, 23 Jan 2010 10:06:30 -0600
Subject: [R-SIG-Mac] BRugs on Mac
Message-ID: <129824181001230806v63a8af50rc08427210864898f@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100123/178a4864/attachment.pl>

From andangk at gmail.com  Sat Jan 23 19:47:58 2010
From: andangk at gmail.com (Andang Kustamsi)
Date: Sat, 23 Jan 2010 11:47:58 -0700
Subject: [R-SIG-Mac] BRugs on Mac
In-Reply-To: <129824181001230806v63a8af50rc08427210864898f@mail.gmail.com>
References: <129824181001230806v63a8af50rc08427210864898f@mail.gmail.com>
Message-ID: <b55d14191001231047l756c198crb5fb6259c0e9c065@mail.gmail.com>

Mike, please check out Christopher Desjardins's blog:
http://cddesjardins.wordpress.com/2009/06/15/openbugs-and-winbugs-on-mac-os-x/

Cheers,

Andang

On Sat, Jan 23, 2010 at 9:06 AM, Mike Kalish <mlk8300 at gmail.com> wrote:
> I know this is probably a dead topic, but here goes anyway. ?First, I'm new
> to R, so please forgive that.
> I want to get BRugs running under OS X (10.6, but it doesn't really
> matter). ?I have gotten matbugs to work with matlab, so I don't have any
> problems with WinBUGS or OpenBUGS -- I can write files and invoke either of
> these and write the results. ?Since I believe this is the only interaction R
> has with OpenBUGS I thought I should be able to get the same to happen in R.
> My problem is that I can't even start to install the BRugs package on my mac
> because it's listed as Windows only.
> I have the latest (0.5-3 tarball) and I would like to know if anyone could
> give me pointers on how to coax my R into installing it; making it work is a
> different problem altogether, of course.
>
> thanks,
> Mike
>
> ? ? ? ?[[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>


From cstrato at aon.at  Sun Jan 24 21:28:11 2010
From: cstrato at aon.at (cstrato)
Date: Sun, 24 Jan 2010 21:28:11 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
Message-ID: <4B5CAD5B.6000806@aon.at>

Dear Kasper,

You are right. Since ROOT supports the CC, CXX, F77 and LD flags I did:
./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" 
--with-f77="/usr/bin/gfortran-4.2 -arch x86_64"

The error was still the same:
i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory

However, when I replaced in the Makefile.macosx64:
F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortran.dylib)
F77LIBS      += $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
with:
F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
the error disappeared, and I could finish the compilation.

However, now I got a link-error:
ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, 
file is not of required architecture
Undefined symbols:
  "_main", referenced from:
      start in crt1.10.5.o

I am not sure what this error means since Makefile.macosx64 contains:
F77FLAGS      = -m64 -std=legacy

Could it be that libgfortranbegin.a can only be used for 32bit compilation?

Furthermore, I still have the question (and hopefully Simon will answer it):
Why does gfortran-4.2-5564-darwin9.tar.gz not contain any 
libgfortran.dylib files?

Interestingly, when googling "/usr/lib/libgfortran.dylib" I get the 
answer that NO results were found, while googling 
"/usr/local/lib/libgfortran.dylib" gives many results. Thus it seems 
that there will never be any libgfortran.dylib in "/usr/lib/"!? I must 
admit that I do not understand this issue.

Best regards
Christian


Kasper Daniel Hansen wrote:
> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>
>   
>> Dear Kasper,
>>
>> Thank you for your suggestion, I did indeed use gcc 4.0.
>> Since gcc_select does no longer exist on Leopard I had to do:
>> cd /usr/bin
>> sudo ln -s gcc-4.2 gcc
>> sudo ln -s g++-4.2 g++
>> sudo ln -s gcov-4.2 gcov
>>     
>
> I am not sure this is advisable in general.  When I compile stuff with gcc-4.2 I usually explicitly set
>   CC=/usr/bin/gcc-4.2
> when I run configure.  For example, my entire configure line for R on my macbook is
>    ../${SRCDIR}/configure SHELL='/bin/bash' \
>             CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>             CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>             CXX="/usr/bin/g++-4.2 -arch x86_64" \
>             CXXFLAGS="-g -O2 -march=nocona" \
>             OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>             F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>             FFLAGS="-g -O2 -march=nocona" \
>             FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>             FCFLAGS="-g -O2 -march=nocona" \
>             --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib \
>             --with-system-zlib \
>             --with-blas='-framework vecLib' --with-lapack
>     
> Of course this requires that ROOT uses the CC/CFLAGS macros, but that should be pretty standard if it uses autoconf.
>
>   
>> Sadly, compiling ROOT resulted still in the same error:
>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>
>> When I check the location for gfortran-4.2.3.dmg I get:
>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>> $ ls -al
>> total 32
>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> ../libgfortran.a
>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib -> libgfortran.2.0.0.dylib
>>
>> This means that /usr/local/bin does contain libgfortran.dylib whereas /usr/bin does not contain any of these files or links.
>> Does this mean that gfortran-4.2.3.dmg does contain these file for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
>> How do I get libgfortran.dylib?
>>     
>
> Simon might be able to answer this better, but the general idea is that the 
>   
>> gfortran-4.2-5564-darwin9.tar.gz
>>     
> installs into /usr/bin
>   
>> gfortran-4.2.3.dmg
>>     
> installs into /usr/local/bin.  There is some logic here, the way I think about it is that the former is a direct extension of the Apple build.
>
> I would start from scratch, which means remove all traces of both gfortrans, install the 5564-tarball and then set the various macros as I have set it above for R (your exact values may of course be different depending on what machine etc. you are using).
>
> Kasper
>
>
>   
>> BTW, I must apologize to Simon. On his website he lists the commands how to install gfortran.tar.gz, but in the Tiger section, so I did miss it. Nevertheless it would still be helpful for Mac users to know how to uninstall it:
>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>
>> Best regards
>> Christian
>>
>>
>> Kasper Daniel Hansen wrote:
>>     
>>> Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.
>>>
>>> The error seems to indicate that you need 4.2 in order to use Simon's gfortran.
>>>
>>> Kasper
>>>
>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>
>>>  
>>>       
>>>> Dear Simon,
>>>>
>>>> Thank you for this information.
>>>>
>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
>>>>
>>>> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
>>>>
>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>>>
>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>
>>>> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>
>>>> Do you know what I need to do so that libgfortran.dylib can be found?
>>>>
>>>> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
>>>> http://www.webmo.net/support/fortran_osx.html
>>>>
>>>> Thank you in advance.
>>>> Best regards
>>>> Christian
>>>>
>>>>
>>>>
>>>> Simon Urbanek wrote:
>>>>    
>>>>         
>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>
>>>>>      
>>>>>           
>>>>>> Dear Simon,
>>>>>>
>>>>>> One more question:
>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>>>>> Using built-in specs.
>>>>>> Target: i686-apple-darwin9
>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>> Thread model: posix
>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>
>>>>>> This means that this version seems to be older than the one I am using now?
>>>>>>
>>>>>>        
>>>>>>             
>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>>
>>>>>      
>>>>>           
>>>>>> Simon Urbanek wrote:
>>>>>>        
>>>>>>             
>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>
>>>>>>>          
>>>>>>>               
>>>>>>>> Dear all,
>>>>>>>>
>>>>>>>> I have the following problem:
>>>>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>>>>> To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>>>>>>            
>>>>>>>>                 
>>>>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>>>>>
>>>>>>>
>>>>>>>          
>>>>>>>               
>>>>>>>> Thus my question is:
>>>>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>>>>>
>>>>>>>>            
>>>>>>>>                 
>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>>>>> http://r.research.att.com/tools/
>>>>>>> which I assume is what you meant by the latter.
>>>>>>>
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>>
>>>>>>>
>>>>>>>          
>>>>>>>               
>>>>>>        
>>>>>>             
>>>>>      
>>>>>           
>>>> _______________________________________________
>>>> R-SIG-Mac mailing list
>>>> R-SIG-Mac at stat.math.ethz.ch
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>    
>>>>         
>>>  
>>>       
>
>
>


From simon.urbanek at r-project.org  Mon Jan 25 02:14:22 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sun, 24 Jan 2010 20:14:22 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B5CAD5B.6000806@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
Message-ID: <CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>

On Jan 24, 2010, at 3:28 PM, cstrato wrote:

> Dear Kasper,
> 
> You are right. Since ROOT supports the CC, CXX, F77 and LD flags I did:
> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
> 

You don't really need the override - it works without and they add -m64 anyway so the -arch gets essentially ignored.


> The error was still the same:
> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
> 
> However, when I replaced in the Makefile.macosx64:
> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortran.dylib)
> F77LIBS      += $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
> with:
> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)

You found the right spot but your fix is wrong - just remove the two lines, they are superfluous and only cause trouble.


> the error disappeared, and I could finish the compilation.
> 
> However, now I got a link-error:
> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, file is not of required architecture
> Undefined symbols:
> "_main", referenced from:
>     start in crt1.10.5.o
> 

Your'e getting the 32-bit version (of the wrong file - see above). It should really be ../4.2.1/x86_64/lib...


> I am not sure what this error means since Makefile.macosx64 contains:
> F77FLAGS      = -m64 -std=legacy
> 
> Could it be that libgfortranbegin.a can only be used for 32bit compilation?
> 

No, you're picking the wrong one - there is one for each architecture.


> Furthermore, I still have the question (and hopefully Simon will answer it):
> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any libgfortran.dylib files?
> 

Because it's using a static library.


> Interestingly, when googling "/usr/lib/libgfortran.dylib" I get the answer that NO results were found, while googling "/usr/local/lib/libgfortran.dylib" gives many results. Thus it seems that there will never be any libgfortran.dylib in "/usr/lib/"!?

Nope - OS X has no Fortran by default.

Cheers,
Simon



> I must admit that I do not understand this issue.
> 
> Best regards
> Christian
> 
> 
> Kasper Daniel Hansen wrote:
>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>> 
>>  
>>> Dear Kasper,
>>> 
>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>> Since gcc_select does no longer exist on Leopard I had to do:
>>> cd /usr/bin
>>> sudo ln -s gcc-4.2 gcc
>>> sudo ln -s g++-4.2 g++
>>> sudo ln -s gcov-4.2 gcov
>>>    
>> 
>> I am not sure this is advisable in general.  When I compile stuff with gcc-4.2 I usually explicitly set
>>  CC=/usr/bin/gcc-4.2
>> when I run configure.  For example, my entire configure line for R on my macbook is
>>   ../${SRCDIR}/configure SHELL='/bin/bash' \
>>            CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>            CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>            CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>            CXXFLAGS="-g -O2 -march=nocona" \
>>            OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>            F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>            FFLAGS="-g -O2 -march=nocona" \
>>            FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>            FCFLAGS="-g -O2 -march=nocona" \
>>            --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib \
>>            --with-system-zlib \
>>            --with-blas='-framework vecLib' --with-lapack
>>    Of course this requires that ROOT uses the CC/CFLAGS macros, but that should be pretty standard if it uses autoconf.
>> 
>>  
>>> Sadly, compiling ROOT resulted still in the same error:
>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>> 
>>> When I check the location for gfortran-4.2.3.dmg I get:
>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>> $ ls -al
>>> total 32
>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> ../libgfortran.a
>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib -> libgfortran.2.0.0.dylib
>>> 
>>> This means that /usr/local/bin does contain libgfortran.dylib whereas /usr/bin does not contain any of these files or links.
>>> Does this mean that gfortran-4.2.3.dmg does contain these file for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
>>> How do I get libgfortran.dylib?
>>>    
>> 
>> Simon might be able to answer this better, but the general idea is that the   
>>> gfortran-4.2-5564-darwin9.tar.gz
>>>    
>> installs into /usr/bin
>>  
>>> gfortran-4.2.3.dmg
>>>    
>> installs into /usr/local/bin.  There is some logic here, the way I think about it is that the former is a direct extension of the Apple build.
>> 
>> I would start from scratch, which means remove all traces of both gfortrans, install the 5564-tarball and then set the various macros as I have set it above for R (your exact values may of course be different depending on what machine etc. you are using).
>> 
>> Kasper
>> 
>> 
>>  
>>> BTW, I must apologize to Simon. On his website he lists the commands how to install gfortran.tar.gz, but in the Tiger section, so I did miss it. Nevertheless it would still be helpful for Mac users to know how to uninstall it:
>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>> 
>>> Best regards
>>> Christian
>>> 
>>> 
>>> Kasper Daniel Hansen wrote:
>>>    
>>>> Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.
>>>> 
>>>> The error seems to indicate that you need 4.2 in order to use Simon's gfortran.
>>>> 
>>>> Kasper
>>>> 
>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>> 
>>>>       
>>>>> Dear Simon,
>>>>> 
>>>>> Thank you for this information.
>>>>> 
>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
>>>>> 
>>>>> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
>>>>> 
>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>>>> 
>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>> 
>>>>> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>> 
>>>>> Do you know what I need to do so that libgfortran.dylib can be found?
>>>>> 
>>>>> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>> 
>>>>> Thank you in advance.
>>>>> Best regards
>>>>> Christian
>>>>> 
>>>>> 
>>>>> 
>>>>> Simon Urbanek wrote:
>>>>>           
>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>> 
>>>>>>               
>>>>>>> Dear Simon,
>>>>>>> 
>>>>>>> One more question:
>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>>>>>> Using built-in specs.
>>>>>>> Target: i686-apple-darwin9
>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>> Thread model: posix
>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>> 
>>>>>>> This means that this version seems to be older than the one I am using now?
>>>>>>> 
>>>>>>>                   
>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>>>> 
>>>>>> Cheers,
>>>>>> Simon
>>>>>> 
>>>>>> 
>>>>>>               
>>>>>>> Simon Urbanek wrote:
>>>>>>>                   
>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>> 
>>>>>>>>                       
>>>>>>>>> Dear all,
>>>>>>>>> 
>>>>>>>>> I have the following problem:
>>>>>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>>>>>>>                           
>>>>>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>>>>>> 
>>>>>>>> 
>>>>>>>>                       
>>>>>>>>> Thus my question is:
>>>>>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>>>>>> 
>>>>>>>>>                           
>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>>>>>> http://r.research.att.com/tools/
>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>> 
>>>>>>>> Cheers,
>>>>>>>> Simon
>>>>>>>> 
>>>>>>>> 
>>>>>>>>                       
>>>>>>>                   
>>>>>>               
>>>>> _______________________________________________
>>>>> R-SIG-Mac mailing list
>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>           
>>>>       
>> 
>> 
>>  
> 
> 


From cstrato at aon.at  Mon Jan 25 21:03:27 2010
From: cstrato at aon.at (cstrato)
Date: Mon, 25 Jan 2010 21:03:27 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
Message-ID: <4B5DF90F.4030809@aon.at>

Dear Simon,

Thank you for your suggestions, which I have just tried. Sadly the error 
remains the same.

The problem seems to be that for some reason 
"gfortran-4.2-5564-darwin9.tar.gz" does not have a 
"/usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory containing 
libgfortranbegin.a. For this reason the 64 bit version of 
libgfortranbegin.a is not installed in the corresponding directory 
x86_64 which contains only libgcc.a etc.

You can see this by double-clicking on 
"gfortran-4.2-5564-darwin9.tar.gz" when located in some directory.

In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a in the 
"/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory.

Could you please check or tell me what the reason might be?

I have installed it using:
$ gunzip gfortran-4.2-5564-darwin9.tar.gz
$ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /

Best regards
Christian


Simon Urbanek wrote:
> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>
>   
>> Dear Kasper,
>>
>> You are right. Since ROOT supports the CC, CXX, F77 and LD flags I did:
>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>
>>     
>
> You don't really need the override - it works without and they add -m64 anyway so the -arch gets essentially ignored.
>
>
>   
>> The error was still the same:
>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>
>> However, when I replaced in the Makefile.macosx64:
>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortran.dylib)
>> F77LIBS      += $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>> with:
>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>>     
>
> You found the right spot but your fix is wrong - just remove the two lines, they are superfluous and only cause trouble.
>
>
>   
>> the error disappeared, and I could finish the compilation.
>>
>> However, now I got a link-error:
>> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, file is not of required architecture
>> Undefined symbols:
>> "_main", referenced from:
>>     start in crt1.10.5.o
>>
>>     
>
> Your'e getting the 32-bit version (of the wrong file - see above). It should really be ../4.2.1/x86_64/lib...
>
>
>   
>> I am not sure what this error means since Makefile.macosx64 contains:
>> F77FLAGS      = -m64 -std=legacy
>>
>> Could it be that libgfortranbegin.a can only be used for 32bit compilation?
>>
>>     
>
> No, you're picking the wrong one - there is one for each architecture.
>
>
>   
>> Furthermore, I still have the question (and hopefully Simon will answer it):
>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any libgfortran.dylib files?
>>
>>     
>
> Because it's using a static library.
>
>
>   
>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I get the answer that NO results were found, while googling "/usr/local/lib/libgfortran.dylib" gives many results. Thus it seems that there will never be any libgfortran.dylib in "/usr/lib/"!?
>>     
>
> Nope - OS X has no Fortran by default.
>
> Cheers,
> Simon
>
>
>
>   
>> I must admit that I do not understand this issue.
>>
>> Best regards
>> Christian
>>
>>
>> Kasper Daniel Hansen wrote:
>>     
>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>
>>>  
>>>       
>>>> Dear Kasper,
>>>>
>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>> cd /usr/bin
>>>> sudo ln -s gcc-4.2 gcc
>>>> sudo ln -s g++-4.2 g++
>>>> sudo ln -s gcov-4.2 gcov
>>>>    
>>>>         
>>> I am not sure this is advisable in general.  When I compile stuff with gcc-4.2 I usually explicitly set
>>>  CC=/usr/bin/gcc-4.2
>>> when I run configure.  For example, my entire configure line for R on my macbook is
>>>   ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>            CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>            CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>            CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>            CXXFLAGS="-g -O2 -march=nocona" \
>>>            OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>            F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>            FFLAGS="-g -O2 -march=nocona" \
>>>            FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>            FCFLAGS="-g -O2 -march=nocona" \
>>>            --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib \
>>>            --with-system-zlib \
>>>            --with-blas='-framework vecLib' --with-lapack
>>>    Of course this requires that ROOT uses the CC/CFLAGS macros, but that should be pretty standard if it uses autoconf.
>>>
>>>  
>>>       
>>>> Sadly, compiling ROOT resulted still in the same error:
>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>>>
>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>> $ ls -al
>>>> total 32
>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> ../libgfortran.a
>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>
>>>> This means that /usr/local/bin does contain libgfortran.dylib whereas /usr/bin does not contain any of these files or links.
>>>> Does this mean that gfortran-4.2.3.dmg does contain these file for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
>>>> How do I get libgfortran.dylib?
>>>>    
>>>>         
>>> Simon might be able to answer this better, but the general idea is that the   
>>>       
>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>    
>>>>         
>>> installs into /usr/bin
>>>  
>>>       
>>>> gfortran-4.2.3.dmg
>>>>    
>>>>         
>>> installs into /usr/local/bin.  There is some logic here, the way I think about it is that the former is a direct extension of the Apple build.
>>>
>>> I would start from scratch, which means remove all traces of both gfortrans, install the 5564-tarball and then set the various macros as I have set it above for R (your exact values may of course be different depending on what machine etc. you are using).
>>>
>>> Kasper
>>>
>>>
>>>  
>>>       
>>>> BTW, I must apologize to Simon. On his website he lists the commands how to install gfortran.tar.gz, but in the Tiger section, so I did miss it. Nevertheless it would still be helpful for Mac users to know how to uninstall it:
>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>
>>>> Best regards
>>>> Christian
>>>>
>>>>
>>>> Kasper Daniel Hansen wrote:
>>>>    
>>>>         
>>>>> Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.
>>>>>
>>>>> The error seems to indicate that you need 4.2 in order to use Simon's gfortran.
>>>>>
>>>>> Kasper
>>>>>
>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>
>>>>>       
>>>>>           
>>>>>> Dear Simon,
>>>>>>
>>>>>> Thank you for this information.
>>>>>>
>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
>>>>>>
>>>>>> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
>>>>>>
>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>>>>>
>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>>>
>>>>>> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>
>>>>>> Do you know what I need to do so that libgfortran.dylib can be found?
>>>>>>
>>>>>> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>
>>>>>> Thank you in advance.
>>>>>> Best regards
>>>>>> Christian
>>>>>>
>>>>>>
>>>>>>
>>>>>> Simon Urbanek wrote:
>>>>>>           
>>>>>>             
>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>
>>>>>>>               
>>>>>>>               
>>>>>>>> Dear Simon,
>>>>>>>>
>>>>>>>> One more question:
>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>>>>>>> Using built-in specs.
>>>>>>>> Target: i686-apple-darwin9
>>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>> Thread model: posix
>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>
>>>>>>>> This means that this version seems to be older than the one I am using now?
>>>>>>>>
>>>>>>>>                   
>>>>>>>>                 
>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>>>>>
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>>>               
>>>>>>>> Simon Urbanek wrote:
>>>>>>>>                   
>>>>>>>>                 
>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>
>>>>>>>>>                       
>>>>>>>>>                   
>>>>>>>>>> Dear all,
>>>>>>>>>>
>>>>>>>>>> I have the following problem:
>>>>>>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>>>>>>>>                           
>>>>>>>>>>                     
>>>>>>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>                       
>>>>>>>>>                   
>>>>>>>>>> Thus my question is:
>>>>>>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>>>>>>>
>>>>>>>>>>                           
>>>>>>>>>>                     
>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>
>>>>>>>>> Cheers,
>>>>>>>>> Simon
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>                       
>>>>>>>>>                   
>>>>>>>>                   
>>>>>>>>                 
>>>>>>>               
>>>>>>>               
>>>>>> _______________________________________________
>>>>>> R-SIG-Mac mailing list
>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>           
>>>>>>             
>>>>>       
>>>>>           
>>>  
>>>       
>>     
>
>
>


From simon.urbanek at r-project.org  Mon Jan 25 21:29:13 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 25 Jan 2010 15:29:13 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B5DF90F.4030809@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
Message-ID: <20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>


On Jan 25, 2010, at 15:03 , cstrato wrote:

> Dear Simon,
>
> Thank you for your suggestions, which I have just tried. Sadly the  
> error remains the same.
>
> The problem seems to be that for some reason "gfortran-4.2-5564- 
> darwin9.tar.gz" does not have a "/usr/lib/gcc/i686-apple- 
> darwin9/4.2.1/x86_64" directory containing libgfortranbegin.a. For  
> this reason the 64 bit version of libgfortranbegin.a is not  
> installed in the corresponding directory x86_64 which contains only  
> libgcc.a etc.
>

Oh ... that's a surprise - it should be there, sorry. Ok, so please  
use the more recent 5566 build:
http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz

that one has the x86_64 files - I checked:
ginaz:~$ curl -s -S http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz 
  | tar fvtz - | grep gfortran.a
-rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 usr/lib/gcc/i686- 
apple-darwin9/4.2.1/libgfortran.a
-rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 usr/lib/gcc/powerpc- 
apple-darwin9/4.2.1/libgfortran.a
-rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 usr/lib/gcc/i686- 
apple-darwin9/4.2.1/x86_64/libgfortran.a

(Ideally you should install Xcode 3.1.2 for this since that is where  
the 5566 build comes from, but it will probably work even if the  
builds don't match perfectly).

Cheers,
Simon



> You can see this by double-clicking on "gfortran-4.2-5564- 
> darwin9.tar.gz" when located in some directory.
>
> In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a in  
> the "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory.
>
> Could you please check or tell me what the reason might be?
>
> I have installed it using:
> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>
> Best regards
> Christian
>
>
> Simon Urbanek wrote:
>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>
>>
>>> Dear Kasper,
>>>
>>> You are right. Since ROOT supports the CC, CXX, F77 and LD flags I  
>>> did:
>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" -- 
>>> with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>
>>>
>>
>> You don't really need the override - it works without and they add - 
>> m64 anyway so the -arch gets essentially ignored.
>>
>>
>>
>>> The error was still the same:
>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or  
>>> directory
>>>
>>> However, when I replaced in the Makefile.macosx64:
>>> F77LIBS      := $(shell $(F77) -m64 -print-file- 
>>> name=libgfortran.dylib)
>>> F77LIBS      += $(shell $(F77) -m64 -print-file- 
>>> name=libgfortranbegin.a)
>>> with:
>>> F77LIBS      := $(shell $(F77) -m64 -print-file- 
>>> name=libgfortranbegin.a)
>>>
>>
>> You found the right spot but your fix is wrong - just remove the  
>> two lines, they are superfluous and only cause trouble.
>>
>>
>>
>>> the error disappeared, and I could finish the compilation.
>>>
>>> However, now I got a link-error:
>>> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/ 
>>> libgfortranbegin.a, file is not of required architecture
>>> Undefined symbols:
>>> "_main", referenced from:
>>>    start in crt1.10.5.o
>>>
>>>
>>
>> Your'e getting the 32-bit version (of the wrong file - see above).  
>> It should really be ../4.2.1/x86_64/lib...
>>
>>
>>
>>> I am not sure what this error means since Makefile.macosx64  
>>> contains:
>>> F77FLAGS      = -m64 -std=legacy
>>>
>>> Could it be that libgfortranbegin.a can only be used for 32bit  
>>> compilation?
>>>
>>>
>>
>> No, you're picking the wrong one - there is one for each  
>> architecture.
>>
>>
>>
>>> Furthermore, I still have the question (and hopefully Simon will  
>>> answer it):
>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any  
>>> libgfortran.dylib files?
>>>
>>>
>>
>> Because it's using a static library.
>>
>>
>>
>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I get  
>>> the answer that NO results were found, while googling "/usr/local/ 
>>> lib/libgfortran.dylib" gives many results. Thus it seems that  
>>> there will never be any libgfortran.dylib in "/usr/lib/"!?
>>>
>>
>> Nope - OS X has no Fortran by default.
>>
>> Cheers,
>> Simon
>>
>>
>>
>>
>>> I must admit that I do not understand this issue.
>>>
>>> Best regards
>>> Christian
>>>
>>>
>>> Kasper Daniel Hansen wrote:
>>>
>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>
>>>>
>>>>> Dear Kasper,
>>>>>
>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>> cd /usr/bin
>>>>> sudo ln -s gcc-4.2 gcc
>>>>> sudo ln -s g++-4.2 g++
>>>>> sudo ln -s gcov-4.2 gcov
>>>>>
>>>> I am not sure this is advisable in general.  When I compile stuff  
>>>> with gcc-4.2 I usually explicitly set
>>>> CC=/usr/bin/gcc-4.2
>>>> when I run configure.  For example, my entire configure line for  
>>>> R on my macbook is
>>>>  ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>           CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>           CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>           CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>           CXXFLAGS="-g -O2 -march=nocona" \
>>>>           OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>           F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>           FFLAGS="-g -O2 -march=nocona" \
>>>>           FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>           FCFLAGS="-g -O2 -march=nocona" \
>>>>           --x-includes=/usr/X11/include --x-libraries=/usr/X11/ 
>>>> lib \
>>>>           --with-system-zlib \
>>>>           --with-blas='-framework vecLib' --with-lapack
>>>>   Of course this requires that ROOT uses the CC/CFLAGS macros,  
>>>> but that should be pretty standard if it uses autoconf.
>>>>
>>>>
>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or  
>>>>> directory
>>>>>
>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>>> $ ls -al
>>>>> total 32
>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran. 
>>>>> 2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran. 
>>>>> 2.dylib -> libgfortran.2.0.0.dylib
>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a - 
>>>>> > ../libgfortran.a
>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib - 
>>>>> > libgfortran.2.0.0.dylib
>>>>>
>>>>> This means that /usr/local/bin does contain libgfortran.dylib  
>>>>> whereas /usr/bin does not contain any of these files or links.
>>>>> Does this mean that gfortran-4.2.3.dmg does contain these file  
>>>>> for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz  
>>>>> does not contain these files?
>>>>> How do I get libgfortran.dylib?
>>>>>
>>>> Simon might be able to answer this better, but the general idea  
>>>> is that the
>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>
>>>> installs into /usr/bin
>>>>
>>>>> gfortran-4.2.3.dmg
>>>>>
>>>> installs into /usr/local/bin.  There is some logic here, the way  
>>>> I think about it is that the former is a direct extension of the  
>>>> Apple build.
>>>>
>>>> I would start from scratch, which means remove all traces of both  
>>>> gfortrans, install the 5564-tarball and then set the various  
>>>> macros as I have set it above for R (your exact values may of  
>>>> course be different depending on what machine etc. you are using).
>>>>
>>>> Kasper
>>>>
>>>>
>>>>
>>>>> BTW, I must apologize to Simon. On his website he lists the  
>>>>> commands how to install gfortran.tar.gz, but in the Tiger  
>>>>> section, so I did miss it. Nevertheless it would still be  
>>>>> helpful for Mac users to know how to uninstall it:
>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>>
>>>>> Best regards
>>>>> Christian
>>>>>
>>>>>
>>>>> Kasper Daniel Hansen wrote:
>>>>>
>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0 and  
>>>>>> 4.2.  You are using 4.0, you might want to switch to 4.2.  In  
>>>>>> Tiger there used to be gcc_select (or select_gcc) that let you  
>>>>>> choose between 3.x and 4.0, I don't remember if that is still  
>>>>>> around on Leopard.
>>>>>>
>>>>>> The error seems to indicate that you need 4.2 in order to use  
>>>>>> Simon's gfortran.
>>>>>>
>>>>>> Kasper
>>>>>>
>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>
>>>>>>
>>>>>>> Dear Simon,
>>>>>>>
>>>>>>> Thank you for this information.
>>>>>>>
>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on  
>>>>>>> Leopard and tried to compile ROOT again, but this time I got  
>>>>>>> the following error:
>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup - 
>>>>>>> install_name @rpath/libminicern.so -O2 -m64 -o lib/ 
>>>>>>> libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/ 
>>>>>>> src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/ 
>>>>>>> zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple- 
>>>>>>> darwin9/4.2.1/libgfortranbegin.a
>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file  
>>>>>>> or directory
>>>>>>>
>>>>>>> I know that this is not necessarily an R-related question but  
>>>>>>> I would greatly appreciate your help if possible (at least it  
>>>>>>> is a Mac- and somehow a BioC-related question).
>>>>>>>
>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I  
>>>>>>> got the following error:
>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/ 
>>>>>>> libminicern.so /usr/local/lib/gcc/i686-apple- 
>>>>>>> darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/ 
>>>>>>> gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm - 
>>>>>>> Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or  
>>>>>>> later
>>>>>>>
>>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/ 
>>>>>>> libgfortran.dylib while gfortran-4.2.4 could not find  
>>>>>>> libgfortran.dylib.
>>>>>>>
>>>>>>> Thus maybe I did make a mistake when installing  
>>>>>>> gfortran-4.2.4. Here is what I did:
>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>
>>>>>>> Do you know what I need to do so that libgfortran.dylib can be  
>>>>>>> found?
>>>>>>>
>>>>>>> P.S.:Since many Mac users are no Unix experts please allow me  
>>>>>>> to suggest to place on your website the commands to install/ 
>>>>>>> uninstall gfortran. I have found the following website, which  
>>>>>>> told me how to install gfortran and how I could uninstall it:
>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>
>>>>>>> Thank you in advance.
>>>>>>> Best regards
>>>>>>> Christian
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> Simon Urbanek wrote:
>>>>>>>
>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>> Dear Simon,
>>>>>>>>>
>>>>>>>>> One more question:
>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The  
>>>>>>>>> version gives:
>>>>>>>>> Using built-in specs.
>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/ 
>>>>>>>>> configure --disable-checking --enable-werror --prefix=/usr -- 
>>>>>>>>> mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c+ 
>>>>>>>>> +,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ -- 
>>>>>>>>> with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/ 
>>>>>>>>> usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9  
>>>>>>>>> --target=i686-apple-darwin9
>>>>>>>>> Thread model: posix
>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>
>>>>>>>>> This means that this version seems to be older than the one  
>>>>>>>>> I am using now?
>>>>>>>>>
>>>>>>>>>
>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The  
>>>>>>>> "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2  
>>>>>>>> branch since that is what they define - it just adds Fortran  
>>>>>>>> support to the existing gcc 4.2.1 branch of Apple that you  
>>>>>>>> installed as Xcode. However, the Fortran part is merged from  
>>>>>>>> the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>>>>>>
>>>>>>>> Cheers,
>>>>>>>> Simon
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>
>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Dear all,
>>>>>>>>>>>
>>>>>>>>>>> I have the following problem:
>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT,  
>>>>>>>>>>> whereby I compile ROOT usually from source. Until now this  
>>>>>>>>>>> has not been a problem since I do all my development on  
>>>>>>>>>>> Tiger. However, now I wanted to compile ROOT on Leopard  
>>>>>>>>>>> but failed since my gfortran compiler is too old, see:
>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>>>>>>>>  To solve the problem I should upgrade to the latest  
>>>>>>>>>>> version coming with gcc-4.4 in Fink.
>>>>>>>>>>>
>>>>>>>>>> I would advise against that - using gcc from Fink usually  
>>>>>>>>>> calls for a disaster. The real solution is to fix their  
>>>>>>>>>> flags, but that's another story ...
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Thus my question is:
>>>>>>>>>>> Can I also use this version for R or do I need to use the  
>>>>>>>>>>> version downloaded from att?
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for  
>>>>>>>>>> Xcode 3.1.x from the Mac devel page
>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>
>>>>>>>>>> Cheers,
>>>>>>>>>> Simon
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> R-SIG-Mac mailing list
>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>
>>>>>>
>>>>
>>>
>>
>>
>>
>
>


From cstrato at aon.at  Mon Jan 25 23:34:35 2010
From: cstrato at aon.at (cstrato)
Date: Mon, 25 Jan 2010 23:34:35 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
Message-ID: <4B5E1C7B.3080402@aon.at>

Dear Simon,

Thank you, with this version I could finally compile ROOT as 64 bit.

Now I have one more question:
When I do "R CMD Install xps.tar.gz" which now depends on 64 bit ROOT, 
do I need to install the 64 bit version of R or can I use the current R 
version?

Best regards
Christian


Simon Urbanek wrote:
>
> On Jan 25, 2010, at 15:03 , cstrato wrote:
>
>> Dear Simon,
>>
>> Thank you for your suggestions, which I have just tried. Sadly the 
>> error remains the same.
>>
>> The problem seems to be that for some reason 
>> "gfortran-4.2-5564-darwin9.tar.gz" does not have a 
>> "/usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory containing 
>> libgfortranbegin.a. For this reason the 64 bit version of 
>> libgfortranbegin.a is not installed in the corresponding directory 
>> x86_64 which contains only libgcc.a etc.
>>
>
> Oh ... that's a surprise - it should be there, sorry. Ok, so please 
> use the more recent 5566 build:
> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>
> that one has the x86_64 files - I checked:
> ginaz:~$ curl -s -S 
> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz | tar 
> fvtz - | grep gfortran.a
> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 
> usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortran.a
> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 
> usr/lib/gcc/powerpc-apple-darwin9/4.2.1/libgfortran.a
> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 
> usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>
> (Ideally you should install Xcode 3.1.2 for this since that is where 
> the 5566 build comes from, but it will probably work even if the 
> builds don't match perfectly).
>
> Cheers,
> Simon
>
>
>
>> You can see this by double-clicking on 
>> "gfortran-4.2-5564-darwin9.tar.gz" when located in some directory.
>>
>> In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a in 
>> the "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory.
>>
>> Could you please check or tell me what the reason might be?
>>
>> I have installed it using:
>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>
>> Best regards
>> Christian
>>
>>
>> Simon Urbanek wrote:
>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>
>>>
>>>> Dear Kasper,
>>>>
>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD flags I 
>>>> did:
>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" 
>>>> --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>
>>>>
>>>
>>> You don't really need the override - it works without and they add 
>>> -m64 anyway so the -arch gets essentially ignored.
>>>
>>>
>>>
>>>> The error was still the same:
>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or 
>>>> directory
>>>>
>>>> However, when I replaced in the Makefile.macosx64:
>>>> F77LIBS      := $(shell $(F77) -m64 
>>>> -print-file-name=libgfortran.dylib)
>>>> F77LIBS      += $(shell $(F77) -m64 
>>>> -print-file-name=libgfortranbegin.a)
>>>> with:
>>>> F77LIBS      := $(shell $(F77) -m64 
>>>> -print-file-name=libgfortranbegin.a)
>>>>
>>>
>>> You found the right spot but your fix is wrong - just remove the two 
>>> lines, they are superfluous and only cause trouble.
>>>
>>>
>>>
>>>> the error disappeared, and I could finish the compilation.
>>>>
>>>> However, now I got a link-error:
>>>> ld warning: in 
>>>> /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, file is 
>>>> not of required architecture
>>>> Undefined symbols:
>>>> "_main", referenced from:
>>>>    start in crt1.10.5.o
>>>>
>>>>
>>>
>>> Your'e getting the 32-bit version (of the wrong file - see above). 
>>> It should really be ../4.2.1/x86_64/lib...
>>>
>>>
>>>
>>>> I am not sure what this error means since Makefile.macosx64 contains:
>>>> F77FLAGS      = -m64 -std=legacy
>>>>
>>>> Could it be that libgfortranbegin.a can only be used for 32bit 
>>>> compilation?
>>>>
>>>>
>>>
>>> No, you're picking the wrong one - there is one for each architecture.
>>>
>>>
>>>
>>>> Furthermore, I still have the question (and hopefully Simon will 
>>>> answer it):
>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any 
>>>> libgfortran.dylib files?
>>>>
>>>>
>>>
>>> Because it's using a static library.
>>>
>>>
>>>
>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I get the 
>>>> answer that NO results were found, while googling 
>>>> "/usr/local/lib/libgfortran.dylib" gives many results. Thus it 
>>>> seems that there will never be any libgfortran.dylib in "/usr/lib/"!?
>>>>
>>>
>>> Nope - OS X has no Fortran by default.
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>
>>>
>>>> I must admit that I do not understand this issue.
>>>>
>>>> Best regards
>>>> Christian
>>>>
>>>>
>>>> Kasper Daniel Hansen wrote:
>>>>
>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>
>>>>>
>>>>>> Dear Kasper,
>>>>>>
>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>> cd /usr/bin
>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>> sudo ln -s g++-4.2 g++
>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>
>>>>> I am not sure this is advisable in general.  When I compile stuff 
>>>>> with gcc-4.2 I usually explicitly set
>>>>> CC=/usr/bin/gcc-4.2
>>>>> when I run configure.  For example, my entire configure line for R 
>>>>> on my macbook is
>>>>>  ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>           CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>           CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>           CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>           CXXFLAGS="-g -O2 -march=nocona" \
>>>>>           OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>           F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>           FFLAGS="-g -O2 -march=nocona" \
>>>>>           FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>           FCFLAGS="-g -O2 -march=nocona" \
>>>>>           --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib \
>>>>>           --with-system-zlib \
>>>>>           --with-blas='-framework vecLib' --with-lapack
>>>>>   Of course this requires that ROOT uses the CC/CFLAGS macros, but 
>>>>> that should be pretty standard if it uses autoconf.
>>>>>
>>>>>
>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or 
>>>>>> directory
>>>>>>
>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>>>> $ ls -al
>>>>>> total 32
>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 
>>>>>> libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib 
>>>>>> -> libgfortran.2.0.0.dylib
>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> 
>>>>>> ../libgfortran.a
>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib 
>>>>>> -> libgfortran.2.0.0.dylib
>>>>>>
>>>>>> This means that /usr/local/bin does contain libgfortran.dylib 
>>>>>> whereas /usr/bin does not contain any of these files or links.
>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these file 
>>>>>> for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does 
>>>>>> not contain these files?
>>>>>> How do I get libgfortran.dylib?
>>>>>>
>>>>> Simon might be able to answer this better, but the general idea is 
>>>>> that the
>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>
>>>>> installs into /usr/bin
>>>>>
>>>>>> gfortran-4.2.3.dmg
>>>>>>
>>>>> installs into /usr/local/bin.  There is some logic here, the way I 
>>>>> think about it is that the former is a direct extension of the 
>>>>> Apple build.
>>>>>
>>>>> I would start from scratch, which means remove all traces of both 
>>>>> gfortrans, install the 5564-tarball and then set the various 
>>>>> macros as I have set it above for R (your exact values may of 
>>>>> course be different depending on what machine etc. you are using).
>>>>>
>>>>> Kasper
>>>>>
>>>>>
>>>>>
>>>>>> BTW, I must apologize to Simon. On his website he lists the 
>>>>>> commands how to install gfortran.tar.gz, but in the Tiger 
>>>>>> section, so I did miss it. Nevertheless it would still be helpful 
>>>>>> for Mac users to know how to uninstall it:
>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>>>
>>>>>> Best regards
>>>>>> Christian
>>>>>>
>>>>>>
>>>>>> Kasper Daniel Hansen wrote:
>>>>>>
>>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0 and 
>>>>>>> 4.2.  You are using 4.0, you might want to switch to 4.2.  In 
>>>>>>> Tiger there used to be gcc_select (or select_gcc) that let you 
>>>>>>> choose between 3.x and 4.0, I don't remember if that is still 
>>>>>>> around on Leopard.
>>>>>>>
>>>>>>> The error seems to indicate that you need 4.2 in order to use 
>>>>>>> Simon's gfortran.
>>>>>>>
>>>>>>> Kasper
>>>>>>>
>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>
>>>>>>>
>>>>>>>> Dear Simon,
>>>>>>>>
>>>>>>>> Thank you for this information.
>>>>>>>>
>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on 
>>>>>>>> Leopard and tried to compile ROOT again, but this time I got 
>>>>>>>> the following error:
>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup 
>>>>>>>> -install_name @rpath/libminicern.so -O2 -m64 -o 
>>>>>>>> lib/libminicern.so misc/minicern/src/cernlib.o -ldl 
>>>>>>>> misc/minicern/src/hbook.o misc/minicern/src/kernlib.o 
>>>>>>>> misc/minicern/src/zebra.o libgfortran.dylib 
>>>>>>>> /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file 
>>>>>>>> or directory
>>>>>>>>
>>>>>>>> I know that this is not necessarily an R-related question but I 
>>>>>>>> would greatly appreciate your help if possible (at least it is 
>>>>>>>> a Mac- and somehow a BioC-related question).
>>>>>>>>
>>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got 
>>>>>>>> the following error:
>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib 
>>>>>>>> lib/libminicern.so 
>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a 
>>>>>>>> -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>>>>>>>
>>>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
>>>>>>>> while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>>>>>
>>>>>>>> Thus maybe I did make a mistake when installing gfortran-4.2.4. 
>>>>>>>> Here is what I did:
>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>
>>>>>>>> Do you know what I need to do so that libgfortran.dylib can be 
>>>>>>>> found?
>>>>>>>>
>>>>>>>> P.S.:Since many Mac users are no Unix experts please allow me 
>>>>>>>> to suggest to place on your website the commands to 
>>>>>>>> install/uninstall gfortran. I have found the following website, 
>>>>>>>> which told me how to install gfortran and how I could uninstall 
>>>>>>>> it:
>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>
>>>>>>>> Thank you in advance.
>>>>>>>> Best regards
>>>>>>>> Christian
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> Simon Urbanek wrote:
>>>>>>>>
>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Dear Simon,
>>>>>>>>>>
>>>>>>>>>> One more question:
>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The 
>>>>>>>>>> version gives:
>>>>>>>>>> Using built-in specs.
>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>> Configured with: 
>>>>>>>>>> /Builds/gcc/gcc_42-5564/build/obj/src/configure 
>>>>>>>>>> --disable-checking --enable-werror --prefix=/usr 
>>>>>>>>>> --mandir=/usr/share/man 
>>>>>>>>>> --enable-languages=c,objc,c++,obj-c++,fortran 
>>>>>>>>>> --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ 
>>>>>>>>>> --with-gxx-include-dir=/usr/include/c++/4.0.0 
>>>>>>>>>> --with-slibdir=/usr/lib --build=i686-apple-darwin9 
>>>>>>>>>> --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>>>> Thread model: posix
>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>
>>>>>>>>>> This means that this version seems to be older than the one I 
>>>>>>>>>> am using now?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The 
>>>>>>>>> "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 
>>>>>>>>> branch since that is what they define - it just adds Fortran 
>>>>>>>>> support to the existing gcc 4.2.1 branch of Apple that you 
>>>>>>>>> installed as Xcode. However, the Fortran part is merged from 
>>>>>>>>> the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>>>>>>>
>>>>>>>>> Cheers,
>>>>>>>>> Simon
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>
>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>
>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT, 
>>>>>>>>>>>> whereby I compile ROOT usually from source. Until now this 
>>>>>>>>>>>> has not been a problem since I do all my development on 
>>>>>>>>>>>> Tiger. However, now I wanted to compile ROOT on Leopard but 
>>>>>>>>>>>> failed since my gfortran compiler is too old, see:
>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 To 
>>>>>>>>>>>> solve the problem I should upgrade to the latest version 
>>>>>>>>>>>> coming with gcc-4.4 in Fink.
>>>>>>>>>>>>
>>>>>>>>>>> I would advise against that - using gcc from Fink usually 
>>>>>>>>>>> calls for a disaster. The real solution is to fix their 
>>>>>>>>>>> flags, but that's another story ...
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>> Can I also use this version for R or do I need to use the 
>>>>>>>>>>>> version downloaded from att?
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 
>>>>>>>>>>> 3.1.x from the Mac devel page
>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>
>>>>>>>>>>> Cheers,
>>>>>>>>>>> Simon
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> R-SIG-Mac mailing list
>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>
>>>>>>>
>>>>>
>>>>
>>>
>>>
>>>
>>
>>
>
>


From simon.urbanek at r-project.org  Mon Jan 25 23:55:34 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 25 Jan 2010 17:55:34 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B5E1C7B.3080402@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
Message-ID: <4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>


On Jan 25, 2010, at 5:34 PM, cstrato wrote:

> Dear Simon,
> 
> Thank you, with this version I could finally compile ROOT as 64 bit.
> 
> Now I have one more question:
> When I do "R CMD Install xps.tar.gz" which now depends on 64 bit ROOT, do I need to install the 64 bit version of R or can I use the current R version?
> 

I have no idea since I don't know your package. If you *link* to ROOT then yes, you have to use 64-bit R to load 64-bit code. (Linking in itself can be quite interesting given the flags ROOT uses, so your journey may not end there ;)).

Cheers,
Simon



> Best regards
> Christian
> 
> 
> Simon Urbanek wrote:
>> 
>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>> 
>>> Dear Simon,
>>> 
>>> Thank you for your suggestions, which I have just tried. Sadly the error remains the same.
>>> 
>>> The problem seems to be that for some reason "gfortran-4.2-5564-darwin9.tar.gz" does not have a "/usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory containing libgfortranbegin.a. For this reason the 64 bit version of libgfortranbegin.a is not installed in the corresponding directory x86_64 which contains only libgcc.a etc.
>>> 
>> 
>> Oh ... that's a surprise - it should be there, sorry. Ok, so please use the more recent 5566 build:
>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>> 
>> that one has the x86_64 files - I checked:
>> ginaz:~$ curl -s -S http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz | tar fvtz - | grep gfortran.a
>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortran.a
>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 usr/lib/gcc/powerpc-apple-darwin9/4.2.1/libgfortran.a
>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>> 
>> (Ideally you should install Xcode 3.1.2 for this since that is where the 5566 build comes from, but it will probably work even if the builds don't match perfectly).
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>> You can see this by double-clicking on "gfortran-4.2-5564-darwin9.tar.gz" when located in some directory.
>>> 
>>> In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a in the "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory.
>>> 
>>> Could you please check or tell me what the reason might be?
>>> 
>>> I have installed it using:
>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>> 
>>> Best regards
>>> Christian
>>> 
>>> 
>>> Simon Urbanek wrote:
>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>> 
>>>> 
>>>>> Dear Kasper,
>>>>> 
>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD flags I did:
>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>> 
>>>>> 
>>>> 
>>>> You don't really need the override - it works without and they add -m64 anyway so the -arch gets essentially ignored.
>>>> 
>>>> 
>>>> 
>>>>> The error was still the same:
>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>>>> 
>>>>> However, when I replaced in the Makefile.macosx64:
>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortran.dylib)
>>>>> F77LIBS      += $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>>>>> with:
>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>>>>> 
>>>> 
>>>> You found the right spot but your fix is wrong - just remove the two lines, they are superfluous and only cause trouble.
>>>> 
>>>> 
>>>> 
>>>>> the error disappeared, and I could finish the compilation.
>>>>> 
>>>>> However, now I got a link-error:
>>>>> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, file is not of required architecture
>>>>> Undefined symbols:
>>>>> "_main", referenced from:
>>>>>   start in crt1.10.5.o
>>>>> 
>>>>> 
>>>> 
>>>> Your'e getting the 32-bit version (of the wrong file - see above). It should really be ../4.2.1/x86_64/lib...
>>>> 
>>>> 
>>>> 
>>>>> I am not sure what this error means since Makefile.macosx64 contains:
>>>>> F77FLAGS      = -m64 -std=legacy
>>>>> 
>>>>> Could it be that libgfortranbegin.a can only be used for 32bit compilation?
>>>>> 
>>>>> 
>>>> 
>>>> No, you're picking the wrong one - there is one for each architecture.
>>>> 
>>>> 
>>>> 
>>>>> Furthermore, I still have the question (and hopefully Simon will answer it):
>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any libgfortran.dylib files?
>>>>> 
>>>>> 
>>>> 
>>>> Because it's using a static library.
>>>> 
>>>> 
>>>> 
>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I get the answer that NO results were found, while googling "/usr/local/lib/libgfortran.dylib" gives many results. Thus it seems that there will never be any libgfortran.dylib in "/usr/lib/"!?
>>>>> 
>>>> 
>>>> Nope - OS X has no Fortran by default.
>>>> 
>>>> Cheers,
>>>> Simon
>>>> 
>>>> 
>>>> 
>>>> 
>>>>> I must admit that I do not understand this issue.
>>>>> 
>>>>> Best regards
>>>>> Christian
>>>>> 
>>>>> 
>>>>> Kasper Daniel Hansen wrote:
>>>>> 
>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>> 
>>>>>> 
>>>>>>> Dear Kasper,
>>>>>>> 
>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>>> cd /usr/bin
>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>> 
>>>>>> I am not sure this is advisable in general.  When I compile stuff with gcc-4.2 I usually explicitly set
>>>>>> CC=/usr/bin/gcc-4.2
>>>>>> when I run configure.  For example, my entire configure line for R on my macbook is
>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>          CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>          CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>          CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>          CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>          OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>          F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>          FFLAGS="-g -O2 -march=nocona" \
>>>>>>          FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>          FCFLAGS="-g -O2 -march=nocona" \
>>>>>>          --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib \
>>>>>>          --with-system-zlib \
>>>>>>          --with-blas='-framework vecLib' --with-lapack
>>>>>>  Of course this requires that ROOT uses the CC/CFLAGS macros, but that should be pretty standard if it uses autoconf.
>>>>>> 
>>>>>> 
>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>>>>>> 
>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>>>>> $ ls -al
>>>>>>> total 32
>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> ../libgfortran.a
>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>> 
>>>>>>> This means that /usr/local/bin does contain libgfortran.dylib whereas /usr/bin does not contain any of these files or links.
>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these file for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
>>>>>>> How do I get libgfortran.dylib?
>>>>>>> 
>>>>>> Simon might be able to answer this better, but the general idea is that the
>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>> 
>>>>>> installs into /usr/bin
>>>>>> 
>>>>>>> gfortran-4.2.3.dmg
>>>>>>> 
>>>>>> installs into /usr/local/bin.  There is some logic here, the way I think about it is that the former is a direct extension of the Apple build.
>>>>>> 
>>>>>> I would start from scratch, which means remove all traces of both gfortrans, install the 5564-tarball and then set the various macros as I have set it above for R (your exact values may of course be different depending on what machine etc. you are using).
>>>>>> 
>>>>>> Kasper
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>> BTW, I must apologize to Simon. On his website he lists the commands how to install gfortran.tar.gz, but in the Tiger section, so I did miss it. Nevertheless it would still be helpful for Mac users to know how to uninstall it:
>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>>>> 
>>>>>>> Best regards
>>>>>>> Christian
>>>>>>> 
>>>>>>> 
>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>> 
>>>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.
>>>>>>>> 
>>>>>>>> The error seems to indicate that you need 4.2 in order to use Simon's gfortran.
>>>>>>>> 
>>>>>>>> Kasper
>>>>>>>> 
>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>> 
>>>>>>>> 
>>>>>>>>> Dear Simon,
>>>>>>>>> 
>>>>>>>>> Thank you for this information.
>>>>>>>>> 
>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
>>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
>>>>>>>>> 
>>>>>>>>> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
>>>>>>>>> 
>>>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>>>>>>>> 
>>>>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>>>>>> 
>>>>>>>>> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>> 
>>>>>>>>> Do you know what I need to do so that libgfortran.dylib can be found?
>>>>>>>>> 
>>>>>>>>> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>> 
>>>>>>>>> Thank you in advance.
>>>>>>>>> Best regards
>>>>>>>>> Christian
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>> 
>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>>> Dear Simon,
>>>>>>>>>>> 
>>>>>>>>>>> One more question:
>>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>>>>> Thread model: posix
>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>> 
>>>>>>>>>>> This means that this version seems to be older than the one I am using now?
>>>>>>>>>>> 
>>>>>>>>>>> 
>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>>>>>>>> 
>>>>>>>>>> Cheers,
>>>>>>>>>> Simon
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>> 
>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>> 
>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>> 
>>>>>>>>>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>>>>>>>>>> 
>>>>>>>>>>>>> 
>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>> 
>>>>>>>>>>>> Cheers,
>>>>>>>>>>>> Simon
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>> _______________________________________________
>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>> 
>>>>>>>> 
>>>>>> 
>>>>> 
>>>> 
>>>> 
>>>> 
>>> 
>>> 
>> 
>> 
> 
> 


From cstrato at aon.at  Tue Jan 26 21:24:38 2010
From: cstrato at aon.at (cstrato)
Date: Tue, 26 Jan 2010 21:24:38 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
	<4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
Message-ID: <4B5F4F86.9010906@aon.at>

Dear Simon,

Meanwhile I have tried to install xps:
$ R CMD INSTALL -l ~/Library/R/2.10/library xps_1.7.4.tar.gz
* installing *source* package 'xps' ...
checking for gcc... gcc-4.2 -arch i386 -std=gnu99
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... yes
checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI C... 
none needed
checking how to run the C preprocessor... gcc-4.2 -arch i386 -std=gnu99 -E
checking for gcc... (cached) gcc-4.2 -arch i386 -std=gnu99
checking whether we are using the GNU C compiler... (cached) yes
checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... (cached) yes
checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI C... 
(cached) none needed
found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
** libs
** arch - i386

As you can see it compiles using the wrong architecture:
 > library(xps)
Error in dyn.load(file, DLLpath = DLLpath, ...) :
  unable to load shared library 
'/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so':
  dlopen(/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so, 
6): no suitable image found.  Did find:
        /Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so: 
mach-o, but wrong architecture
Error: package/namespace load failed for 'xps'
 >

In my file "config.in" I have the following lines:
# See "Writing R Extensions"
: ${R_HOME=`R RHOME`}
if test -z "${R_HOME}"; then
   echo "could not determine R_HOME"
   exit 1
fi
CC=`"${R_HOME}/bin/R" CMD config CC`
CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
AC_PROG_CPP
AC_PROG_CC

Thus I assume that I need to use 64 bit R so that the flags are set 
correctly. Is this correct?

If yes, can I use: 
http://r.research.att.com/R-GUI-5548-2.10-leopard-Leopard64.dmg
or do I need to build 64 bit R from source?

Best regards
Christian


Simon Urbanek wrote:
> On Jan 25, 2010, at 5:34 PM, cstrato wrote:
>
>   
>> Dear Simon,
>>
>> Thank you, with this version I could finally compile ROOT as 64 bit.
>>
>> Now I have one more question:
>> When I do "R CMD Install xps.tar.gz" which now depends on 64 bit ROOT, do I need to install the 64 bit version of R or can I use the current R version?
>>
>>     
>
> I have no idea since I don't know your package. If you *link* to ROOT then yes, you have to use 64-bit R to load 64-bit code. (Linking in itself can be quite interesting given the flags ROOT uses, so your journey may not end there ;)).
>
> Cheers,
> Simon
>
>
>
>   
>> Best regards
>> Christian
>>
>>
>> Simon Urbanek wrote:
>>     
>>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>>>
>>>       
>>>> Dear Simon,
>>>>
>>>> Thank you for your suggestions, which I have just tried. Sadly the error remains the same.
>>>>
>>>> The problem seems to be that for some reason "gfortran-4.2-5564-darwin9.tar.gz" does not have a "/usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory containing libgfortranbegin.a. For this reason the 64 bit version of libgfortranbegin.a is not installed in the corresponding directory x86_64 which contains only libgcc.a etc.
>>>>
>>>>         
>>> Oh ... that's a surprise - it should be there, sorry. Ok, so please use the more recent 5566 build:
>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>>>
>>> that one has the x86_64 files - I checked:
>>> ginaz:~$ curl -s -S http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz | tar fvtz - | grep gfortran.a
>>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortran.a
>>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 usr/lib/gcc/powerpc-apple-darwin9/4.2.1/libgfortran.a
>>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>>>
>>> (Ideally you should install Xcode 3.1.2 for this since that is where the 5566 build comes from, but it will probably work even if the builds don't match perfectly).
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>
>>>       
>>>> You can see this by double-clicking on "gfortran-4.2-5564-darwin9.tar.gz" when located in some directory.
>>>>
>>>> In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a in the "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory.
>>>>
>>>> Could you please check or tell me what the reason might be?
>>>>
>>>> I have installed it using:
>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>
>>>> Best regards
>>>> Christian
>>>>
>>>>
>>>> Simon Urbanek wrote:
>>>>         
>>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>>>
>>>>>
>>>>>           
>>>>>> Dear Kasper,
>>>>>>
>>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD flags I did:
>>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>>>
>>>>>>
>>>>>>             
>>>>> You don't really need the override - it works without and they add -m64 anyway so the -arch gets essentially ignored.
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> The error was still the same:
>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>>>>>
>>>>>> However, when I replaced in the Makefile.macosx64:
>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortran.dylib)
>>>>>> F77LIBS      += $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>>>>>> with:
>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>>>>>>
>>>>>>             
>>>>> You found the right spot but your fix is wrong - just remove the two lines, they are superfluous and only cause trouble.
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> the error disappeared, and I could finish the compilation.
>>>>>>
>>>>>> However, now I got a link-error:
>>>>>> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, file is not of required architecture
>>>>>> Undefined symbols:
>>>>>> "_main", referenced from:
>>>>>>   start in crt1.10.5.o
>>>>>>
>>>>>>
>>>>>>             
>>>>> Your'e getting the 32-bit version (of the wrong file - see above). It should really be ../4.2.1/x86_64/lib...
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> I am not sure what this error means since Makefile.macosx64 contains:
>>>>>> F77FLAGS      = -m64 -std=legacy
>>>>>>
>>>>>> Could it be that libgfortranbegin.a can only be used for 32bit compilation?
>>>>>>
>>>>>>
>>>>>>             
>>>>> No, you're picking the wrong one - there is one for each architecture.
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> Furthermore, I still have the question (and hopefully Simon will answer it):
>>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any libgfortran.dylib files?
>>>>>>
>>>>>>
>>>>>>             
>>>>> Because it's using a static library.
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I get the answer that NO results were found, while googling "/usr/local/lib/libgfortran.dylib" gives many results. Thus it seems that there will never be any libgfortran.dylib in "/usr/lib/"!?
>>>>>>
>>>>>>             
>>>>> Nope - OS X has no Fortran by default.
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> I must admit that I do not understand this issue.
>>>>>>
>>>>>> Best regards
>>>>>> Christian
>>>>>>
>>>>>>
>>>>>> Kasper Daniel Hansen wrote:
>>>>>>
>>>>>>             
>>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>>>> Dear Kasper,
>>>>>>>>
>>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>>>> cd /usr/bin
>>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>>>
>>>>>>>>                 
>>>>>>> I am not sure this is advisable in general.  When I compile stuff with gcc-4.2 I usually explicitly set
>>>>>>> CC=/usr/bin/gcc-4.2
>>>>>>> when I run configure.  For example, my entire configure line for R on my macbook is
>>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>>          CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>>          CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>>          CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>>          CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>>          OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>>          F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>          FFLAGS="-g -O2 -march=nocona" \
>>>>>>>          FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>          FCFLAGS="-g -O2 -march=nocona" \
>>>>>>>          --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib \
>>>>>>>          --with-system-zlib \
>>>>>>>          --with-blas='-framework vecLib' --with-lapack
>>>>>>>  Of course this requires that ROOT uses the CC/CFLAGS macros, but that should be pretty standard if it uses autoconf.
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>>>>>>>
>>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>>>>>> $ ls -al
>>>>>>>> total 32
>>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> ../libgfortran.a
>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>
>>>>>>>> This means that /usr/local/bin does contain libgfortran.dylib whereas /usr/bin does not contain any of these files or links.
>>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these file for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
>>>>>>>> How do I get libgfortran.dylib?
>>>>>>>>
>>>>>>>>                 
>>>>>>> Simon might be able to answer this better, but the general idea is that the
>>>>>>>               
>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>
>>>>>>>>                 
>>>>>>> installs into /usr/bin
>>>>>>>
>>>>>>>               
>>>>>>>> gfortran-4.2.3.dmg
>>>>>>>>
>>>>>>>>                 
>>>>>>> installs into /usr/local/bin.  There is some logic here, the way I think about it is that the former is a direct extension of the Apple build.
>>>>>>>
>>>>>>> I would start from scratch, which means remove all traces of both gfortrans, install the 5564-tarball and then set the various macros as I have set it above for R (your exact values may of course be different depending on what machine etc. you are using).
>>>>>>>
>>>>>>> Kasper
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>>>> BTW, I must apologize to Simon. On his website he lists the commands how to install gfortran.tar.gz, but in the Tiger section, so I did miss it. Nevertheless it would still be helpful for Mac users to know how to uninstall it:
>>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>>>>>
>>>>>>>> Best regards
>>>>>>>> Christian
>>>>>>>>
>>>>>>>>
>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>
>>>>>>>>                 
>>>>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.
>>>>>>>>>
>>>>>>>>> The error seems to indicate that you need 4.2 in order to use Simon's gfortran.
>>>>>>>>>
>>>>>>>>> Kasper
>>>>>>>>>
>>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>                   
>>>>>>>>>> Dear Simon,
>>>>>>>>>>
>>>>>>>>>> Thank you for this information.
>>>>>>>>>>
>>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
>>>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
>>>>>>>>>>
>>>>>>>>>> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
>>>>>>>>>>
>>>>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
>>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>>>>>>>>>
>>>>>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>>>>>>>
>>>>>>>>>> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
>>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>>>
>>>>>>>>>> Do you know what I need to do so that libgfortran.dylib can be found?
>>>>>>>>>>
>>>>>>>>>> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
>>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>>>
>>>>>>>>>> Thank you in advance.
>>>>>>>>>> Best regards
>>>>>>>>>> Christian
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>
>>>>>>>>>>                     
>>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>                       
>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>
>>>>>>>>>>>> One more question:
>>>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>>>>>> Thread model: posix
>>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>>>
>>>>>>>>>>>> This means that this version seems to be older than the one I am using now?
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>                         
>>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>>>>>>>>>
>>>>>>>>>>> Cheers,
>>>>>>>>>>> Simon
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>                       
>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>                         
>>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>                           
>>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>                             
>>>>>>>>>>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>                           
>>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>                             
>>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>>>
>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>                           
>>>>>>>>>> _______________________________________________
>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>
>>>>>>>>>>                     
>>>>>
>>>>>           
>>>>         
>>>       
>>     
>
>
>


From simon.urbanek at r-project.org  Tue Jan 26 21:53:32 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 26 Jan 2010 15:53:32 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B5F4F86.9010906@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
	<4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
	<4B5F4F86.9010906@aon.at>
Message-ID: <5C98F8A8-B6E9-499D-8073-96C242A2B108@r-project.org>


On Jan 26, 2010, at 15:24 , cstrato wrote:

> Dear Simon,
>
> Meanwhile I have tried to install xps:
> $ R CMD INSTALL -l ~/Library/R/2.10/library xps_1.7.4.tar.gz
> * installing *source* package 'xps' ...
> checking for gcc... gcc-4.2 -arch i386 -std=gnu99
> checking for C compiler default output file name... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... yes
> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI  
> C... none needed
> checking how to run the C preprocessor... gcc-4.2 -arch i386 - 
> std=gnu99 -E
> checking for gcc... (cached) gcc-4.2 -arch i386 -std=gnu99
> checking whether we are using the GNU C compiler... (cached) yes
> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g...  
> (cached) yes
> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI  
> C... (cached) none needed
> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
> ** libs
> ** arch - i386
>
> As you can see it compiles using the wrong architecture:

Well, you're running the wrong architecture ... As I said when you  
want to link, you have to use 64-bit.


> > library(xps)
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
> unable to load shared library '/Users/rabbitus/Library/R/2.10/ 
> library/xps/libs/i386/xps.so':
> dlopen(/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so,  
> 6): no suitable image found.  Did find:
>       /Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so:  
> mach-o, but wrong architecture
> Error: package/namespace load failed for 'xps'
> >
>
> In my file "config.in" I have the following lines:
> # See "Writing R Extensions"
> : ${R_HOME=`R RHOME`}
> if test -z "${R_HOME}"; then
>  echo "could not determine R_HOME"
>  exit 1
> fi
> CC=`"${R_HOME}/bin/R" CMD config CC`
> CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
> AC_PROG_CPP
> AC_PROG_CC
>
> Thus I assume that I need to use 64 bit R so that the flags are set  
> correctly. Is this correct?
>

You have to use 64-bit R if you want to link to a 64-bit program - as  
I said.


> If yes, can I use: http://r.research.att.com/R-GUI-5548-2.10-leopard-Leopard64.dmg
> or do I need to build 64 bit R from source?
>

Neither - just pick it from CRAN - it's the first download in the  
list. Note that you still have to run 64-bit R -- e.g. R --arch=x86_64

Cheers,
Simon



>
>
> Simon Urbanek wrote:
>> On Jan 25, 2010, at 5:34 PM, cstrato wrote:
>>
>>
>>> Dear Simon,
>>>
>>> Thank you, with this version I could finally compile ROOT as 64 bit.
>>>
>>> Now I have one more question:
>>> When I do "R CMD Install xps.tar.gz" which now depends on 64 bit  
>>> ROOT, do I need to install the 64 bit version of R or can I use  
>>> the current R version?
>>>
>>>
>>
>> I have no idea since I don't know your package. If you *link* to  
>> ROOT then yes, you have to use 64-bit R to load 64-bit code.  
>> (Linking in itself can be quite interesting given the flags ROOT  
>> uses, so your journey may not end there ;)).
>>
>> Cheers,
>> Simon
>>
>>
>>
>>
>>> Best regards
>>> Christian
>>>
>>>
>>> Simon Urbanek wrote:
>>>
>>>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>>>>
>>>>
>>>>> Dear Simon,
>>>>>
>>>>> Thank you for your suggestions, which I have just tried. Sadly  
>>>>> the error remains the same.
>>>>>
>>>>> The problem seems to be that for some reason "gfortran-4.2-5564- 
>>>>> darwin9.tar.gz" does not have a "/usr/lib/gcc/i686-apple- 
>>>>> darwin9/4.2.1/x86_64" directory containing libgfortranbegin.a.  
>>>>> For this reason the 64 bit version of libgfortranbegin.a is not  
>>>>> installed in the corresponding directory x86_64 which contains  
>>>>> only libgcc.a etc.
>>>>>
>>>>>
>>>> Oh ... that's a surprise - it should be there, sorry. Ok, so  
>>>> please use the more recent 5566 build:
>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>>>>
>>>> that one has the x86_64 files - I checked:
>>>> ginaz:~$ curl -s -S http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz 
>>>>  | tar fvtz - | grep gfortran.a
>>>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 usr/lib/gcc/ 
>>>> i686-apple-darwin9/4.2.1/libgfortran.a
>>>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 usr/lib/gcc/ 
>>>> powerpc-apple-darwin9/4.2.1/libgfortran.a
>>>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 usr/lib/gcc/ 
>>>> i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>>>>
>>>> (Ideally you should install Xcode 3.1.2 for this since that is  
>>>> where the 5566 build comes from, but it will probably work even  
>>>> if the builds don't match perfectly).
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>>
>>>>
>>>>
>>>>> You can see this by double-clicking on "gfortran-4.2-5564- 
>>>>> darwin9.tar.gz" when located in some directory.
>>>>>
>>>>> In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a  
>>>>> in the "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64"  
>>>>> directory.
>>>>>
>>>>> Could you please check or tell me what the reason might be?
>>>>>
>>>>> I have installed it using:
>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>
>>>>> Best regards
>>>>> Christian
>>>>>
>>>>>
>>>>> Simon Urbanek wrote:
>>>>>
>>>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>>>>
>>>>>>
>>>>>>
>>>>>>> Dear Kasper,
>>>>>>>
>>>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD  
>>>>>>> flags I did:
>>>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch  
>>>>>>> x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>> You don't really need the override - it works without and they  
>>>>>> add -m64 anyway so the -arch gets essentially ignored.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> The error was still the same:
>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file  
>>>>>>> or directory
>>>>>>>
>>>>>>> However, when I replaced in the Makefile.macosx64:
>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file- 
>>>>>>> name=libgfortran.dylib)
>>>>>>> F77LIBS      += $(shell $(F77) -m64 -print-file- 
>>>>>>> name=libgfortranbegin.a)
>>>>>>> with:
>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file- 
>>>>>>> name=libgfortranbegin.a)
>>>>>>>
>>>>>>>
>>>>>> You found the right spot but your fix is wrong - just remove  
>>>>>> the two lines, they are superfluous and only cause trouble.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> the error disappeared, and I could finish the compilation.
>>>>>>>
>>>>>>> However, now I got a link-error:
>>>>>>> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/ 
>>>>>>> libgfortranbegin.a, file is not of required architecture
>>>>>>> Undefined symbols:
>>>>>>> "_main", referenced from:
>>>>>>>  start in crt1.10.5.o
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>> Your'e getting the 32-bit version (of the wrong file - see  
>>>>>> above). It should really be ../4.2.1/x86_64/lib...
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> I am not sure what this error means since Makefile.macosx64  
>>>>>>> contains:
>>>>>>> F77FLAGS      = -m64 -std=legacy
>>>>>>>
>>>>>>> Could it be that libgfortranbegin.a can only be used for 32bit  
>>>>>>> compilation?
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>> No, you're picking the wrong one - there is one for each  
>>>>>> architecture.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> Furthermore, I still have the question (and hopefully Simon  
>>>>>>> will answer it):
>>>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any  
>>>>>>> libgfortran.dylib files?
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>> Because it's using a static library.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I  
>>>>>>> get the answer that NO results were found, while googling "/ 
>>>>>>> usr/local/lib/libgfortran.dylib" gives many results. Thus it  
>>>>>>> seems that there will never be any libgfortran.dylib in "/usr/ 
>>>>>>> lib/"!?
>>>>>>>
>>>>>>>
>>>>>> Nope - OS X has no Fortran by default.
>>>>>>
>>>>>> Cheers,
>>>>>> Simon
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> I must admit that I do not understand this issue.
>>>>>>>
>>>>>>> Best regards
>>>>>>> Christian
>>>>>>>
>>>>>>>
>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>
>>>>>>>
>>>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> Dear Kasper,
>>>>>>>>>
>>>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>>>>> cd /usr/bin
>>>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>>>>
>>>>>>>>>
>>>>>>>> I am not sure this is advisable in general.  When I compile  
>>>>>>>> stuff with gcc-4.2 I usually explicitly set
>>>>>>>> CC=/usr/bin/gcc-4.2
>>>>>>>> when I run configure.  For example, my entire configure line  
>>>>>>>> for R on my macbook is
>>>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>>>         CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>>>         CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>>>         CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>>>         CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>>>         OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>>>         F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>         FFLAGS="-g -O2 -march=nocona" \
>>>>>>>>         FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>         FCFLAGS="-g -O2 -march=nocona" \
>>>>>>>>         --x-includes=/usr/X11/include --x-libraries=/usr/X11/ 
>>>>>>>> lib \
>>>>>>>>         --with-system-zlib \
>>>>>>>>         --with-blas='-framework vecLib' --with-lapack
>>>>>>>> Of course this requires that ROOT uses the CC/CFLAGS macros,  
>>>>>>>> but that should be pretty standard if it uses autoconf.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such  
>>>>>>>>> file or directory
>>>>>>>>>
>>>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../ 
>>>>>>>>> x86_64
>>>>>>>>> $ ls -al
>>>>>>>>> total 32
>>>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran. 
>>>>>>>>> 2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran. 
>>>>>>>>> 2.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a - 
>>>>>>>>> > ../libgfortran.a
>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26  
>>>>>>>>> libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>
>>>>>>>>> This means that /usr/local/bin does contain  
>>>>>>>>> libgfortran.dylib whereas /usr/bin does not contain any of  
>>>>>>>>> these files or links.
>>>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these  
>>>>>>>>> file for libgfortran.dylib while gfortran-4.2-5564- 
>>>>>>>>> darwin9.tar.gz does not contain these files?
>>>>>>>>> How do I get libgfortran.dylib?
>>>>>>>>>
>>>>>>>>>
>>>>>>>> Simon might be able to answer this better, but the general  
>>>>>>>> idea is that the
>>>>>>>>
>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>
>>>>>>>>>
>>>>>>>> installs into /usr/bin
>>>>>>>>
>>>>>>>>
>>>>>>>>> gfortran-4.2.3.dmg
>>>>>>>>>
>>>>>>>>>
>>>>>>>> installs into /usr/local/bin.  There is some logic here, the  
>>>>>>>> way I think about it is that the former is a direct extension  
>>>>>>>> of the Apple build.
>>>>>>>>
>>>>>>>> I would start from scratch, which means remove all traces of  
>>>>>>>> both gfortrans, install the 5564-tarball and then set the  
>>>>>>>> various macros as I have set it above for R (your exact  
>>>>>>>> values may of course be different depending on what machine  
>>>>>>>> etc. you are using).
>>>>>>>>
>>>>>>>> Kasper
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> BTW, I must apologize to Simon. On his website he lists the  
>>>>>>>>> commands how to install gfortran.tar.gz, but in the Tiger  
>>>>>>>>> section, so I did miss it. Nevertheless it would still be  
>>>>>>>>> helpful for Mac users to know how to uninstall it:
>>>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>>>>>>
>>>>>>>>> Best regards
>>>>>>>>> Christian
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0  
>>>>>>>>>> and 4.2.  You are using 4.0, you might want to switch to  
>>>>>>>>>> 4.2.  In Tiger there used to be gcc_select (or select_gcc)  
>>>>>>>>>> that let you choose between 3.x and 4.0, I don't remember  
>>>>>>>>>> if that is still around on Leopard.
>>>>>>>>>>
>>>>>>>>>> The error seems to indicate that you need 4.2 in order to  
>>>>>>>>>> use Simon's gfortran.
>>>>>>>>>>
>>>>>>>>>> Kasper
>>>>>>>>>>
>>>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>
>>>>>>>>>>> Thank you for this information.
>>>>>>>>>>>
>>>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on  
>>>>>>>>>>> Leopard and tried to compile ROOT again, but this time I  
>>>>>>>>>>> got the following error:
>>>>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup - 
>>>>>>>>>>> install_name @rpath/libminicern.so -O2 -m64 -o lib/ 
>>>>>>>>>>> libminicern.so misc/minicern/src/cernlib.o -ldl misc/ 
>>>>>>>>>>> minicern/src/hbook.o misc/minicern/src/kernlib.o misc/ 
>>>>>>>>>>> minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686- 
>>>>>>>>>>> apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such  
>>>>>>>>>>> file or directory
>>>>>>>>>>>
>>>>>>>>>>> I know that this is not necessarily an R-related question  
>>>>>>>>>>> but I would greatly appreciate your help if possible (at  
>>>>>>>>>>> least it is a Mac- and somehow a BioC-related question).
>>>>>>>>>>>
>>>>>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg  
>>>>>>>>>>> I got the following error:
>>>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib  
>>>>>>>>>>> lib/libminicern.so /usr/local/lib/gcc/i686-apple- 
>>>>>>>>>>> darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/ 
>>>>>>>>>>> lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a  
>>>>>>>>>>> -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5  
>>>>>>>>>>> or later
>>>>>>>>>>>
>>>>>>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib  
>>>>>>>>>>> at:
>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../ 
>>>>>>>>>>> x86_64/libgfortran.dylib while gfortran-4.2.4 could not  
>>>>>>>>>>> find libgfortran.dylib.
>>>>>>>>>>>
>>>>>>>>>>> Thus maybe I did make a mistake when installing  
>>>>>>>>>>> gfortran-4.2.4. Here is what I did:
>>>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>>>>
>>>>>>>>>>> Do you know what I need to do so that libgfortran.dylib  
>>>>>>>>>>> can be found?
>>>>>>>>>>>
>>>>>>>>>>> P.S.:Since many Mac users are no Unix experts please allow  
>>>>>>>>>>> me to suggest to place on your website the commands to  
>>>>>>>>>>> install/uninstall gfortran. I have found the following  
>>>>>>>>>>> website, which told me how to install gfortran and how I  
>>>>>>>>>>> could uninstall it:
>>>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>>>>
>>>>>>>>>>> Thank you in advance.
>>>>>>>>>>> Best regards
>>>>>>>>>>> Christian
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>
>>>>>>>>>>>>> One more question:
>>>>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz.  
>>>>>>>>>>>>> The version gives:
>>>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/ 
>>>>>>>>>>>>> configure --disable-checking --enable-werror --prefix=/ 
>>>>>>>>>>>>> usr --mandir=/usr/share/man --enable-languages=c,objc,c+ 
>>>>>>>>>>>>> +,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/ 
>>>>>>>>>>>>> s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0  
>>>>>>>>>>>>> --with-slibdir=/usr/lib --build=i686-apple-darwin9 -- 
>>>>>>>>>>>>> host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>>>>>>> Thread model: posix
>>>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>>>>
>>>>>>>>>>>>> This means that this version seems to be older than the  
>>>>>>>>>>>>> one I am using now?
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to.  
>>>>>>>>>>>> The "gcc version 4.2.1" comes from Apple's Xcode 3.1  
>>>>>>>>>>>> gcc-4.2 branch since that is what they define - it just  
>>>>>>>>>>>> adds Fortran support to the existing gcc 4.2.1 branch of  
>>>>>>>>>>>> Apple that you installed as Xcode. However, the Fortran  
>>>>>>>>>>>> part is merged from the GNU Fortran 4.2.4 release - hence  
>>>>>>>>>>>> I refer to it as 4.2.4.
>>>>>>>>>>>>
>>>>>>>>>>>> Cheers,
>>>>>>>>>>>> Simon
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT,  
>>>>>>>>>>>>>>> whereby I compile ROOT usually from source. Until now  
>>>>>>>>>>>>>>> this has not been a problem since I do all my  
>>>>>>>>>>>>>>> development on Tiger. However, now I wanted to compile  
>>>>>>>>>>>>>>> ROOT on Leopard but failed since my gfortran compiler  
>>>>>>>>>>>>>>> is too old, see:
>>>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>>>>>>>>>>>>  To solve the problem I should upgrade to the latest  
>>>>>>>>>>>>>>> version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>> I would advise against that - using gcc from Fink  
>>>>>>>>>>>>>> usually calls for a disaster. The real solution is to  
>>>>>>>>>>>>>> fix their flags, but that's another story ...
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>>>> Can I also use this version for R or do I need to use  
>>>>>>>>>>>>>>> the version downloaded from att?
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for  
>>>>>>>>>>>>>> Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>> _______________________________________________
>>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>>
>>
>
>


From khansen at stat.berkeley.edu  Tue Jan 26 21:57:47 2010
From: khansen at stat.berkeley.edu (Kasper Daniel Hansen)
Date: Tue, 26 Jan 2010 15:57:47 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B5F4F86.9010906@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
	<4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
	<4B5F4F86.9010906@aon.at>
Message-ID: <844682CD-B6AF-43BE-9232-C239074AEF3C@stat.berkeley.edu>

On Jan 26, 2010, at 15:24 PM, cstrato wrote:

> Dear Simon,
> 
> Meanwhile I have tried to install xps:
> $ R CMD INSTALL -l ~/Library/R/2.10/library xps_1.7.4.tar.gz
> * installing *source* package 'xps' ...
> checking for gcc... gcc-4.2 -arch i386 -std=gnu99
> checking for C compiler default output file name... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... yes
> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI C... none needed
> checking how to run the C preprocessor... gcc-4.2 -arch i386 -std=gnu99 -E
> checking for gcc... (cached) gcc-4.2 -arch i386 -std=gnu99
> checking whether we are using the GNU C compiler... (cached) yes
> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... (cached) yes
> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI C... (cached) none needed
> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
> ** libs
> ** arch - i386
> 
> As you can see it compiles using the wrong architecture:
> > library(xps)
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
> unable to load shared library '/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so':
> dlopen(/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so, 6): no suitable image found.  Did find:
>       /Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so: mach-o, but wrong architecture
> Error: package/namespace load failed for 'xps'
> >
> 
> In my file "config.in" I have the following lines:
> # See "Writing R Extensions"
> : ${R_HOME=`R RHOME`}
> if test -z "${R_HOME}"; then
>  echo "could not determine R_HOME"
>  exit 1
> fi
> CC=`"${R_HOME}/bin/R" CMD config CC`
> CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
> AC_PROG_CPP
> AC_PROG_CC
> 
> Thus I assume that I need to use 64 bit R so that the flags are set correctly. Is this correct?

This is probably because you are using the CRAN binary which is a universal binary.  Specifically this means that it will try to compile the package for all architectures, which will fail because ROOT is only installed for one of the architectures.  This will happen for any package with C code you install from source, try picking your favorite R package with C code (say, preprocessCore), set options(pkgType = "source") and install it using biocLite.  You will see several compilation runs.

There are a hack to fix this, and there may be an official way to compile a package only for a specific architecture, which I don't know about.

The hack: inside (this is for 2.11)
  /Library/Frameworks/R.framework/Versions/2.11/Resources/bin/exec/
you will see a list of subdirectories describing what architecture you have R compiled for.  If you remove all the other architectures aside from x86_64 it might work.  This might mess up your R.app though.

Alternatively you could compile R from source, only for one architecture.  This is what I do.

Kasper


> If yes, can I use: http://r.research.att.com/R-GUI-5548-2.10-leopard-Leopard64.dmg
> or do I need to build 64 bit R from source?
> 
> Best regards
> Christian
> 
> 
> Simon Urbanek wrote:
>> On Jan 25, 2010, at 5:34 PM, cstrato wrote:
>> 
>>  
>>> Dear Simon,
>>> 
>>> Thank you, with this version I could finally compile ROOT as 64 bit.
>>> 
>>> Now I have one more question:
>>> When I do "R CMD Install xps.tar.gz" which now depends on 64 bit ROOT, do I need to install the 64 bit version of R or can I use the current R version?
>>> 
>>>    
>> 
>> I have no idea since I don't know your package. If you *link* to ROOT then yes, you have to use 64-bit R to load 64-bit code. (Linking in itself can be quite interesting given the flags ROOT uses, so your journey may not end there ;)).
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>  
>>> Best regards
>>> Christian
>>> 
>>> 
>>> Simon Urbanek wrote:
>>>    
>>>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>>>> 
>>>>      
>>>>> Dear Simon,
>>>>> 
>>>>> Thank you for your suggestions, which I have just tried. Sadly the error remains the same.
>>>>> 
>>>>> The problem seems to be that for some reason "gfortran-4.2-5564-darwin9.tar.gz" does not have a "/usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory containing libgfortranbegin.a. For this reason the 64 bit version of libgfortranbegin.a is not installed in the corresponding directory x86_64 which contains only libgcc.a etc.
>>>>> 
>>>>>        
>>>> Oh ... that's a surprise - it should be there, sorry. Ok, so please use the more recent 5566 build:
>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>>>> 
>>>> that one has the x86_64 files - I checked:
>>>> ginaz:~$ curl -s -S http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz | tar fvtz - | grep gfortran.a
>>>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortran.a
>>>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 usr/lib/gcc/powerpc-apple-darwin9/4.2.1/libgfortran.a
>>>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>>>> 
>>>> (Ideally you should install Xcode 3.1.2 for this since that is where the 5566 build comes from, but it will probably work even if the builds don't match perfectly).
>>>> 
>>>> Cheers,
>>>> Simon
>>>> 
>>>> 
>>>> 
>>>>      
>>>>> You can see this by double-clicking on "gfortran-4.2-5564-darwin9.tar.gz" when located in some directory.
>>>>> 
>>>>> In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a in the "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory.
>>>>> 
>>>>> Could you please check or tell me what the reason might be?
>>>>> 
>>>>> I have installed it using:
>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>> 
>>>>> Best regards
>>>>> Christian
>>>>> 
>>>>> 
>>>>> Simon Urbanek wrote:
>>>>>        
>>>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>>>> 
>>>>>> 
>>>>>>          
>>>>>>> Dear Kasper,
>>>>>>> 
>>>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD flags I did:
>>>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>>>> 
>>>>>>> 
>>>>>>>            
>>>>>> You don't really need the override - it works without and they add -m64 anyway so the -arch gets essentially ignored.
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>          
>>>>>>> The error was still the same:
>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>>>>>> 
>>>>>>> However, when I replaced in the Makefile.macosx64:
>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortran.dylib)
>>>>>>> F77LIBS      += $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>>>>>>> with:
>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>>>>>>> 
>>>>>>>            
>>>>>> You found the right spot but your fix is wrong - just remove the two lines, they are superfluous and only cause trouble.
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>          
>>>>>>> the error disappeared, and I could finish the compilation.
>>>>>>> 
>>>>>>> However, now I got a link-error:
>>>>>>> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, file is not of required architecture
>>>>>>> Undefined symbols:
>>>>>>> "_main", referenced from:
>>>>>>>  start in crt1.10.5.o
>>>>>>> 
>>>>>>> 
>>>>>>>            
>>>>>> Your'e getting the 32-bit version (of the wrong file - see above). It should really be ../4.2.1/x86_64/lib...
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>          
>>>>>>> I am not sure what this error means since Makefile.macosx64 contains:
>>>>>>> F77FLAGS      = -m64 -std=legacy
>>>>>>> 
>>>>>>> Could it be that libgfortranbegin.a can only be used for 32bit compilation?
>>>>>>> 
>>>>>>> 
>>>>>>>            
>>>>>> No, you're picking the wrong one - there is one for each architecture.
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>          
>>>>>>> Furthermore, I still have the question (and hopefully Simon will answer it):
>>>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any libgfortran.dylib files?
>>>>>>> 
>>>>>>> 
>>>>>>>            
>>>>>> Because it's using a static library.
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>          
>>>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I get the answer that NO results were found, while googling "/usr/local/lib/libgfortran.dylib" gives many results. Thus it seems that there will never be any libgfortran.dylib in "/usr/lib/"!?
>>>>>>> 
>>>>>>>            
>>>>>> Nope - OS X has no Fortran by default.
>>>>>> 
>>>>>> Cheers,
>>>>>> Simon
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>          
>>>>>>> I must admit that I do not understand this issue.
>>>>>>> 
>>>>>>> Best regards
>>>>>>> Christian
>>>>>>> 
>>>>>>> 
>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>> 
>>>>>>>            
>>>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>>>> 
>>>>>>>> 
>>>>>>>>              
>>>>>>>>> Dear Kasper,
>>>>>>>>> 
>>>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>>>>> cd /usr/bin
>>>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>>>> 
>>>>>>>>>                
>>>>>>>> I am not sure this is advisable in general.  When I compile stuff with gcc-4.2 I usually explicitly set
>>>>>>>> CC=/usr/bin/gcc-4.2
>>>>>>>> when I run configure.  For example, my entire configure line for R on my macbook is
>>>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>>>         CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>>>         CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>>>         CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>>>         CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>>>         OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>>>         F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>         FFLAGS="-g -O2 -march=nocona" \
>>>>>>>>         FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>         FCFLAGS="-g -O2 -march=nocona" \
>>>>>>>>         --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib \
>>>>>>>>         --with-system-zlib \
>>>>>>>>         --with-blas='-framework vecLib' --with-lapack
>>>>>>>> Of course this requires that ROOT uses the CC/CFLAGS macros, but that should be pretty standard if it uses autoconf.
>>>>>>>> 
>>>>>>>> 
>>>>>>>>              
>>>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>>>>>>>> 
>>>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>>>>>>> $ ls -al
>>>>>>>>> total 32
>>>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> ../libgfortran.a
>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>> 
>>>>>>>>> This means that /usr/local/bin does contain libgfortran.dylib whereas /usr/bin does not contain any of these files or links.
>>>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these file for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
>>>>>>>>> How do I get libgfortran.dylib?
>>>>>>>>> 
>>>>>>>>>                
>>>>>>>> Simon might be able to answer this better, but the general idea is that the
>>>>>>>>              
>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>> 
>>>>>>>>>                
>>>>>>>> installs into /usr/bin
>>>>>>>> 
>>>>>>>>              
>>>>>>>>> gfortran-4.2.3.dmg
>>>>>>>>> 
>>>>>>>>>                
>>>>>>>> installs into /usr/local/bin.  There is some logic here, the way I think about it is that the former is a direct extension of the Apple build.
>>>>>>>> 
>>>>>>>> I would start from scratch, which means remove all traces of both gfortrans, install the 5564-tarball and then set the various macros as I have set it above for R (your exact values may of course be different depending on what machine etc. you are using).
>>>>>>>> 
>>>>>>>> Kasper
>>>>>>>> 
>>>>>>>> 
>>>>>>>> 
>>>>>>>>              
>>>>>>>>> BTW, I must apologize to Simon. On his website he lists the commands how to install gfortran.tar.gz, but in the Tiger section, so I did miss it. Nevertheless it would still be helpful for Mac users to know how to uninstall it:
>>>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>>>>>> 
>>>>>>>>> Best regards
>>>>>>>>> Christian
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>> 
>>>>>>>>>                
>>>>>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.
>>>>>>>>>> 
>>>>>>>>>> The error seems to indicate that you need 4.2 in order to use Simon's gfortran.
>>>>>>>>>> 
>>>>>>>>>> Kasper
>>>>>>>>>> 
>>>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>>                  
>>>>>>>>>>> Dear Simon,
>>>>>>>>>>> 
>>>>>>>>>>> Thank you for this information.
>>>>>>>>>>> 
>>>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
>>>>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
>>>>>>>>>>> 
>>>>>>>>>>> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
>>>>>>>>>>> 
>>>>>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
>>>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>>>>>>>>>> 
>>>>>>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>>>>>>>> 
>>>>>>>>>>> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
>>>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>>>> 
>>>>>>>>>>> Do you know what I need to do so that libgfortran.dylib can be found?
>>>>>>>>>>> 
>>>>>>>>>>> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
>>>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>>>> 
>>>>>>>>>>> Thank you in advance.
>>>>>>>>>>> Best regards
>>>>>>>>>>> Christian
>>>>>>>>>>> 
>>>>>>>>>>> 
>>>>>>>>>>> 
>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>> 
>>>>>>>>>>>                    
>>>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>>                      
>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>> 
>>>>>>>>>>>>> One more question:
>>>>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>>>>>>> Thread model: posix
>>>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>>>> 
>>>>>>>>>>>>> This means that this version seems to be older than the one I am using now?
>>>>>>>>>>>>> 
>>>>>>>>>>>>> 
>>>>>>>>>>>>>                        
>>>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>>>>>>>>>> 
>>>>>>>>>>>> Cheers,
>>>>>>>>>>>> Simon
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>>                      
>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>> 
>>>>>>>>>>>>>                        
>>>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>                          
>>>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>>                            
>>>>>>>>>>>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>                          
>>>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>>                            
>>>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>                          
>>>>>>>>>>> _______________________________________________
>>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>> 
>>>>>>>>>>>                    
>>>>>> 
>>>>>>          
>>>>>        
>>>>      
>>>    
>> 
>> 
>>  


From khansen at stat.berkeley.edu  Tue Jan 26 22:02:05 2010
From: khansen at stat.berkeley.edu (Kasper Daniel Hansen)
Date: Tue, 26 Jan 2010 16:02:05 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <844682CD-B6AF-43BE-9232-C239074AEF3C@stat.berkeley.edu>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
	<4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
	<4B5F4F86.9010906@aon.at>
	<844682CD-B6AF-43BE-9232-C239074AEF3C@stat.berkeley.edu>
Message-ID: <3ACE116B-649F-46E2-8724-2A6BCFB4B549@stat.berkeley.edu>

Hmm, I forgot about --arch.  As Simon said, you should be able to do it by
  R --arch=x86_64 --no-multiarch CMD INSTALL 
My guess is that you need --no-multiarch, but I cannot experiment with this where I sit.

Kasper

On Jan 26, 2010, at 15:57 PM, Kasper Daniel Hansen wrote:

> On Jan 26, 2010, at 15:24 PM, cstrato wrote:
> 
>> Dear Simon,
>> 
>> Meanwhile I have tried to install xps:
>> $ R CMD INSTALL -l ~/Library/R/2.10/library xps_1.7.4.tar.gz
>> * installing *source* package 'xps' ...
>> checking for gcc... gcc-4.2 -arch i386 -std=gnu99
>> checking for C compiler default output file name... a.out
>> checking whether the C compiler works... yes
>> checking whether we are cross compiling... no
>> checking for suffix of executables...
>> checking for suffix of object files... o
>> checking whether we are using the GNU C compiler... yes
>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... yes
>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI C... none needed
>> checking how to run the C preprocessor... gcc-4.2 -arch i386 -std=gnu99 -E
>> checking for gcc... (cached) gcc-4.2 -arch i386 -std=gnu99
>> checking whether we are using the GNU C compiler... (cached) yes
>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... (cached) yes
>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI C... (cached) none needed
>> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
>> ** libs
>> ** arch - i386
>> 
>> As you can see it compiles using the wrong architecture:
>>> library(xps)
>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>> unable to load shared library '/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so':
>> dlopen(/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so, 6): no suitable image found.  Did find:
>>      /Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so: mach-o, but wrong architecture
>> Error: package/namespace load failed for 'xps'
>>> 
>> 
>> In my file "config.in" I have the following lines:
>> # See "Writing R Extensions"
>> : ${R_HOME=`R RHOME`}
>> if test -z "${R_HOME}"; then
>> echo "could not determine R_HOME"
>> exit 1
>> fi
>> CC=`"${R_HOME}/bin/R" CMD config CC`
>> CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
>> AC_PROG_CPP
>> AC_PROG_CC
>> 
>> Thus I assume that I need to use 64 bit R so that the flags are set correctly. Is this correct?
> 
> This is probably because you are using the CRAN binary which is a universal binary.  Specifically this means that it will try to compile the package for all architectures, which will fail because ROOT is only installed for one of the architectures.  This will happen for any package with C code you install from source, try picking your favorite R package with C code (say, preprocessCore), set options(pkgType = "source") and install it using biocLite.  You will see several compilation runs.
> 
> There are a hack to fix this, and there may be an official way to compile a package only for a specific architecture, which I don't know about.
> 
> The hack: inside (this is for 2.11)
>  /Library/Frameworks/R.framework/Versions/2.11/Resources/bin/exec/
> you will see a list of subdirectories describing what architecture you have R compiled for.  If you remove all the other architectures aside from x86_64 it might work.  This might mess up your R.app though.
> 
> Alternatively you could compile R from source, only for one architecture.  This is what I do.
> 
> Kasper
> 
> 
>> If yes, can I use: http://r.research.att.com/R-GUI-5548-2.10-leopard-Leopard64.dmg
>> or do I need to build 64 bit R from source?
>> 
>> Best regards
>> Christian
>> 
>> 
>> Simon Urbanek wrote:
>>> On Jan 25, 2010, at 5:34 PM, cstrato wrote:
>>> 
>>> 
>>>> Dear Simon,
>>>> 
>>>> Thank you, with this version I could finally compile ROOT as 64 bit.
>>>> 
>>>> Now I have one more question:
>>>> When I do "R CMD Install xps.tar.gz" which now depends on 64 bit ROOT, do I need to install the 64 bit version of R or can I use the current R version?
>>>> 
>>>> 
>>> 
>>> I have no idea since I don't know your package. If you *link* to ROOT then yes, you have to use 64-bit R to load 64-bit code. (Linking in itself can be quite interesting given the flags ROOT uses, so your journey may not end there ;)).
>>> 
>>> Cheers,
>>> Simon
>>> 
>>> 
>>> 
>>> 
>>>> Best regards
>>>> Christian
>>>> 
>>>> 
>>>> Simon Urbanek wrote:
>>>> 
>>>>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>>>>> 
>>>>> 
>>>>>> Dear Simon,
>>>>>> 
>>>>>> Thank you for your suggestions, which I have just tried. Sadly the error remains the same.
>>>>>> 
>>>>>> The problem seems to be that for some reason "gfortran-4.2-5564-darwin9.tar.gz" does not have a "/usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory containing libgfortranbegin.a. For this reason the 64 bit version of libgfortranbegin.a is not installed in the corresponding directory x86_64 which contains only libgcc.a etc.
>>>>>> 
>>>>>> 
>>>>> Oh ... that's a surprise - it should be there, sorry. Ok, so please use the more recent 5566 build:
>>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>>>>> 
>>>>> that one has the x86_64 files - I checked:
>>>>> ginaz:~$ curl -s -S http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz | tar fvtz - | grep gfortran.a
>>>>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortran.a
>>>>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 usr/lib/gcc/powerpc-apple-darwin9/4.2.1/libgfortran.a
>>>>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>>>>> 
>>>>> (Ideally you should install Xcode 3.1.2 for this since that is where the 5566 build comes from, but it will probably work even if the builds don't match perfectly).
>>>>> 
>>>>> Cheers,
>>>>> Simon
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>>> You can see this by double-clicking on "gfortran-4.2-5564-darwin9.tar.gz" when located in some directory.
>>>>>> 
>>>>>> In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a in the "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory.
>>>>>> 
>>>>>> Could you please check or tell me what the reason might be?
>>>>>> 
>>>>>> I have installed it using:
>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>> 
>>>>>> Best regards
>>>>>> Christian
>>>>>> 
>>>>>> 
>>>>>> Simon Urbanek wrote:
>>>>>> 
>>>>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>>> Dear Kasper,
>>>>>>>> 
>>>>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD flags I did:
>>>>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>>>>> 
>>>>>>>> 
>>>>>>>> 
>>>>>>> You don't really need the override - it works without and they add -m64 anyway so the -arch gets essentially ignored.
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>>> The error was still the same:
>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>>>>>>> 
>>>>>>>> However, when I replaced in the Makefile.macosx64:
>>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortran.dylib)
>>>>>>>> F77LIBS      += $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>>>>>>>> with:
>>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file-name=libgfortranbegin.a)
>>>>>>>> 
>>>>>>>> 
>>>>>>> You found the right spot but your fix is wrong - just remove the two lines, they are superfluous and only cause trouble.
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>>> the error disappeared, and I could finish the compilation.
>>>>>>>> 
>>>>>>>> However, now I got a link-error:
>>>>>>>> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, file is not of required architecture
>>>>>>>> Undefined symbols:
>>>>>>>> "_main", referenced from:
>>>>>>>> start in crt1.10.5.o
>>>>>>>> 
>>>>>>>> 
>>>>>>>> 
>>>>>>> Your'e getting the 32-bit version (of the wrong file - see above). It should really be ../4.2.1/x86_64/lib...
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>>> I am not sure what this error means since Makefile.macosx64 contains:
>>>>>>>> F77FLAGS      = -m64 -std=legacy
>>>>>>>> 
>>>>>>>> Could it be that libgfortranbegin.a can only be used for 32bit compilation?
>>>>>>>> 
>>>>>>>> 
>>>>>>>> 
>>>>>>> No, you're picking the wrong one - there is one for each architecture.
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>>> Furthermore, I still have the question (and hopefully Simon will answer it):
>>>>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any libgfortran.dylib files?
>>>>>>>> 
>>>>>>>> 
>>>>>>>> 
>>>>>>> Because it's using a static library.
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I get the answer that NO results were found, while googling "/usr/local/lib/libgfortran.dylib" gives many results. Thus it seems that there will never be any libgfortran.dylib in "/usr/lib/"!?
>>>>>>>> 
>>>>>>>> 
>>>>>>> Nope - OS X has no Fortran by default.
>>>>>>> 
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>>> I must admit that I do not understand this issue.
>>>>>>>> 
>>>>>>>> Best regards
>>>>>>>> Christian
>>>>>>>> 
>>>>>>>> 
>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>> 
>>>>>>>> 
>>>>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>>> Dear Kasper,
>>>>>>>>>> 
>>>>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>>>>>> cd /usr/bin
>>>>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>> I am not sure this is advisable in general.  When I compile stuff with gcc-4.2 I usually explicitly set
>>>>>>>>> CC=/usr/bin/gcc-4.2
>>>>>>>>> when I run configure.  For example, my entire configure line for R on my macbook is
>>>>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>>>>        CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>>>>        CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>>>>        CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>>>>        CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>        OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>>>>        F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>        FFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>        FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>        FCFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>        --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib \
>>>>>>>>>        --with-system-zlib \
>>>>>>>>>        --with-blas='-framework vecLib' --with-lapack
>>>>>>>>> Of course this requires that ROOT uses the CC/CFLAGS macros, but that should be pretty standard if it uses autoconf.
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file or directory
>>>>>>>>>> 
>>>>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>>>>>>>> $ ls -al
>>>>>>>>>> total 32
>>>>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a -> ../libgfortran.a
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>> 
>>>>>>>>>> This means that /usr/local/bin does contain libgfortran.dylib whereas /usr/bin does not contain any of these files or links.
>>>>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these file for libgfortran.dylib while gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
>>>>>>>>>> How do I get libgfortran.dylib?
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>> Simon might be able to answer this better, but the general idea is that the
>>>>>>>>> 
>>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>> installs into /usr/bin
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>>> gfortran-4.2.3.dmg
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>> installs into /usr/local/bin.  There is some logic here, the way I think about it is that the former is a direct extension of the Apple build.
>>>>>>>>> 
>>>>>>>>> I would start from scratch, which means remove all traces of both gfortrans, install the 5564-tarball and then set the various macros as I have set it above for R (your exact values may of course be different depending on what machine etc. you are using).
>>>>>>>>> 
>>>>>>>>> Kasper
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>>> BTW, I must apologize to Simon. On his website he lists the commands how to install gfortran.tar.gz, but in the Tiger section, so I did miss it. Nevertheless it would still be helpful for Mac users to know how to uninstall it:
>>>>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>>>>>>> 
>>>>>>>>>> Best regards
>>>>>>>>>> Christian
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0 and 4.2.  You are using 4.0, you might want to switch to 4.2.  In Tiger there used to be gcc_select (or select_gcc) that let you choose between 3.x and 4.0, I don't remember if that is still around on Leopard.
>>>>>>>>>>> 
>>>>>>>>>>> The error seems to indicate that you need 4.2 in order to use Simon's gfortran.
>>>>>>>>>>> 
>>>>>>>>>>> Kasper
>>>>>>>>>>> 
>>>>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>>>>> 
>>>>>>>>>>> 
>>>>>>>>>>> 
>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>> 
>>>>>>>>>>>> Thank you for this information.
>>>>>>>>>>>> 
>>>>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on Leopard and tried to compile ROOT again, but this time I got the following error:
>>>>>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup -install_name @rpath/libminicern.so -O2 -m64 -o lib/libminicern.so misc/minicern/src/cernlib.o -ldl misc/minicern/src/hbook.o misc/minicern/src/kernlib.o misc/minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such file or directory
>>>>>>>>>>>> 
>>>>>>>>>>>> I know that this is not necessarily an R-related question but I would greatly appreciate your help if possible (at least it is a Mac- and somehow a BioC-related question).
>>>>>>>>>>>> 
>>>>>>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I got the following error:
>>>>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib lib/libminicern.so /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or later
>>>>>>>>>>>> 
>>>>>>>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>>>>>>>>> 
>>>>>>>>>>>> Thus maybe I did make a mistake when installing gfortran-4.2.4. Here is what I did:
>>>>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>>>>> 
>>>>>>>>>>>> Do you know what I need to do so that libgfortran.dylib can be found?
>>>>>>>>>>>> 
>>>>>>>>>>>> P.S.:Since many Mac users are no Unix experts please allow me to suggest to place on your website the commands to install/uninstall gfortran. I have found the following website, which told me how to install gfortran and how I could uninstall it:
>>>>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>>>>> 
>>>>>>>>>>>> Thank you in advance.
>>>>>>>>>>>> Best regards
>>>>>>>>>>>> Christian
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>>>>> 
>>>>>>>>>>>>> 
>>>>>>>>>>>>> 
>>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> One more question:
>>>>>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. The version gives:
>>>>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/usr/share/man --enable-languages=c,objc,c++,obj-c++,fortran --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/4.0.0 --with-slibdir=/usr/lib --build=i686-apple-darwin9 --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>>>>>>>> Thread model: posix
>>>>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> This means that this version seems to be older than the one I am using now?
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> 
>>>>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 branch since that is what they define - it just adds Fortran support to the existing gcc 4.2.1 branch of Apple that you installed as Xcode. However, the Fortran part is merged from the GNU Fortran 4.2.4 release - hence I refer to it as 4.2.4.
>>>>>>>>>>>>> 
>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>> Simon
>>>>>>>>>>>>> 
>>>>>>>>>>>>> 
>>>>>>>>>>>>> 
>>>>>>>>>>>>> 
>>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT, whereby I compile ROOT usually from source. Until now this has not been a problem since I do all my development on Tiger. However, now I wanted to compile ROOT on Leopard but failed since my gfortran compiler is too old, see:
>>>>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 To solve the problem I should upgrade to the latest version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> I would advise against that - using gcc from Fink usually calls for a disaster. The real solution is to fix their flags, but that's another story ...
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>>>>> Can I also use this version for R or do I need to use the version downloaded from att?
>>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> 
>>>>>>>>>>>>>>> 
>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>> 
>>>>> 
>>>> 
>>> 
>>> 
>>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From nils.weidmann at googlemail.com  Tue Jan 26 22:19:45 2010
From: nils.weidmann at googlemail.com (Nils B. Weidmann)
Date: Tue, 26 Jan 2010 16:19:45 -0500
Subject: [R-SIG-Mac] Failed compile of cshapes package
Message-ID: <4B5F5C71.8070208@googlemail.com>

Dear all,

I have been submitting more recent versions of my cshapes package to 
CRAN. Whereas version 0.1-1 compiled just fine, all subsequent releases 
failed to do so, but only under OS X:

http://cran.r-project.org/web/checks/check_results_cshapes.html

This is weird, because
* the example that triggered the OS X compilation error was not changed 
between 0.1-1 and now
* this example has also been excluded from testing (using "Not run:")

Any suggestions of what I could do? Thanks!

Nils
-- 
Nils B. Weidmann
Woodrow Wilson School
Princeton University
http://nils.weidmann.ws


From simon.urbanek at r-project.org  Tue Jan 26 22:23:43 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 26 Jan 2010 16:23:43 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <844682CD-B6AF-43BE-9232-C239074AEF3C@stat.berkeley.edu>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
	<4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
	<4B5F4F86.9010906@aon.at>
	<844682CD-B6AF-43BE-9232-C239074AEF3C@stat.berkeley.edu>
Message-ID: <70601071-0E53-4D00-92FD-31BB8B771430@r-project.org>


On Jan 26, 2010, at 15:57 , Kasper Daniel Hansen wrote:

> On Jan 26, 2010, at 15:24 PM, cstrato wrote:
>
>> Dear Simon,
>>
>> Meanwhile I have tried to install xps:
>> $ R CMD INSTALL -l ~/Library/R/2.10/library xps_1.7.4.tar.gz
>> * installing *source* package 'xps' ...
>> checking for gcc... gcc-4.2 -arch i386 -std=gnu99
>> checking for C compiler default output file name... a.out
>> checking whether the C compiler works... yes
>> checking whether we are cross compiling... no
>> checking for suffix of executables...
>> checking for suffix of object files... o
>> checking whether we are using the GNU C compiler... yes
>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... yes
>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI  
>> C... none needed
>> checking how to run the C preprocessor... gcc-4.2 -arch i386 - 
>> std=gnu99 -E
>> checking for gcc... (cached) gcc-4.2 -arch i386 -std=gnu99
>> checking whether we are using the GNU C compiler... (cached) yes
>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g...  
>> (cached) yes
>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI  
>> C... (cached) none needed
>> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
>> ** libs
>> ** arch - i386
>>
>> As you can see it compiles using the wrong architecture:
>>> library(xps)
>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>> unable to load shared library '/Users/rabbitus/Library/R/2.10/ 
>> library/xps/libs/i386/xps.so':
>> dlopen(/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so,  
>> 6): no suitable image found.  Did find:
>>      /Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so:  
>> mach-o, but wrong architecture
>> Error: package/namespace load failed for 'xps'
>>>
>>
>> In my file "config.in" I have the following lines:
>> # See "Writing R Extensions"
>> : ${R_HOME=`R RHOME`}
>> if test -z "${R_HOME}"; then
>> echo "could not determine R_HOME"
>> exit 1
>> fi
>> CC=`"${R_HOME}/bin/R" CMD config CC`
>> CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
>> AC_PROG_CPP
>> AC_PROG_CC
>>
>> Thus I assume that I need to use 64 bit R so that the flags are set  
>> correctly. Is this correct?
>
> This is probably because you are using the CRAN binary which is a  
> universal binary.  Specifically this means that it will try to  
> compile the package for all architectures,

Nope - see above - it has a configure. He's simply running the wrong  
architecture. With the proper binary
R --arch=x86_64 CMD INSTALL ...
will do the trick.

Cheers,
Simon


> which will fail because ROOT is only installed for one of the  
> architectures.  This will happen for any package with C code you  
> install from source, try picking your favorite R package with C code  
> (say, preprocessCore), set options(pkgType = "source") and install  
> it using biocLite.  You will see several compilation runs.
>
> There are a hack to fix this, and there may be an official way to  
> compile a package only for a specific architecture, which I don't  
> know about.
>
> The hack: inside (this is for 2.11)
>  /Library/Frameworks/R.framework/Versions/2.11/Resources/bin/exec/
> you will see a list of subdirectories describing what architecture  
> you have R compiled for.  If you remove all the other architectures  
> aside from x86_64 it might work.  This might mess up your R.app  
> though.
>
> Alternatively you could compile R from source, only for one  
> architecture.  This is what I do.
>
> Kasper
>
>
>> If yes, can I use: http://r.research.att.com/R-GUI-5548-2.10-leopard-Leopard64.dmg
>> or do I need to build 64 bit R from source?
>>
>> Best regards
>> Christian
>>
>>
>> Simon Urbanek wrote:
>>> On Jan 25, 2010, at 5:34 PM, cstrato wrote:
>>>
>>>
>>>> Dear Simon,
>>>>
>>>> Thank you, with this version I could finally compile ROOT as 64  
>>>> bit.
>>>>
>>>> Now I have one more question:
>>>> When I do "R CMD Install xps.tar.gz" which now depends on 64 bit  
>>>> ROOT, do I need to install the 64 bit version of R or can I use  
>>>> the current R version?
>>>>
>>>>
>>>
>>> I have no idea since I don't know your package. If you *link* to  
>>> ROOT then yes, you have to use 64-bit R to load 64-bit code.  
>>> (Linking in itself can be quite interesting given the flags ROOT  
>>> uses, so your journey may not end there ;)).
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>
>>>
>>>> Best regards
>>>> Christian
>>>>
>>>>
>>>> Simon Urbanek wrote:
>>>>
>>>>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>>>>>
>>>>>
>>>>>> Dear Simon,
>>>>>>
>>>>>> Thank you for your suggestions, which I have just tried. Sadly  
>>>>>> the error remains the same.
>>>>>>
>>>>>> The problem seems to be that for some reason "gfortran-4.2-5564- 
>>>>>> darwin9.tar.gz" does not have a "/usr/lib/gcc/i686-apple- 
>>>>>> darwin9/4.2.1/x86_64" directory containing libgfortranbegin.a.  
>>>>>> For this reason the 64 bit version of libgfortranbegin.a is not  
>>>>>> installed in the corresponding directory x86_64 which contains  
>>>>>> only libgcc.a etc.
>>>>>>
>>>>>>
>>>>> Oh ... that's a surprise - it should be there, sorry. Ok, so  
>>>>> please use the more recent 5566 build:
>>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>>>>>
>>>>> that one has the x86_64 files - I checked:
>>>>> ginaz:~$ curl -s -S http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz 
>>>>>  | tar fvtz - | grep gfortran.a
>>>>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 usr/lib/gcc/ 
>>>>> i686-apple-darwin9/4.2.1/libgfortran.a
>>>>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 usr/lib/gcc/ 
>>>>> powerpc-apple-darwin9/4.2.1/libgfortran.a
>>>>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 usr/lib/gcc/ 
>>>>> i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>>>>>
>>>>> (Ideally you should install Xcode 3.1.2 for this since that is  
>>>>> where the 5566 build comes from, but it will probably work even  
>>>>> if the builds don't match perfectly).
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>> You can see this by double-clicking on "gfortran-4.2-5564- 
>>>>>> darwin9.tar.gz" when located in some directory.
>>>>>>
>>>>>> In contrast, "gfortran-4.2.3.dmg" did install  
>>>>>> libgfortranbegin.a in the "/usr/local/lib/gcc/i686-apple- 
>>>>>> darwin9/4.2.1/x86_64" directory.
>>>>>>
>>>>>> Could you please check or tell me what the reason might be?
>>>>>>
>>>>>> I have installed it using:
>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>
>>>>>> Best regards
>>>>>> Christian
>>>>>>
>>>>>>
>>>>>> Simon Urbanek wrote:
>>>>>>
>>>>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> Dear Kasper,
>>>>>>>>
>>>>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD  
>>>>>>>> flags I did:
>>>>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch  
>>>>>>>> x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> You don't really need the override - it works without and they  
>>>>>>> add -m64 anyway so the -arch gets essentially ignored.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> The error was still the same:
>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file  
>>>>>>>> or directory
>>>>>>>>
>>>>>>>> However, when I replaced in the Makefile.macosx64:
>>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file- 
>>>>>>>> name=libgfortran.dylib)
>>>>>>>> F77LIBS      += $(shell $(F77) -m64 -print-file- 
>>>>>>>> name=libgfortranbegin.a)
>>>>>>>> with:
>>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file- 
>>>>>>>> name=libgfortranbegin.a)
>>>>>>>>
>>>>>>>>
>>>>>>> You found the right spot but your fix is wrong - just remove  
>>>>>>> the two lines, they are superfluous and only cause trouble.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> the error disappeared, and I could finish the compilation.
>>>>>>>>
>>>>>>>> However, now I got a link-error:
>>>>>>>> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/ 
>>>>>>>> libgfortranbegin.a, file is not of required architecture
>>>>>>>> Undefined symbols:
>>>>>>>> "_main", referenced from:
>>>>>>>> start in crt1.10.5.o
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> Your'e getting the 32-bit version (of the wrong file - see  
>>>>>>> above). It should really be ../4.2.1/x86_64/lib...
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> I am not sure what this error means since Makefile.macosx64  
>>>>>>>> contains:
>>>>>>>> F77FLAGS      = -m64 -std=legacy
>>>>>>>>
>>>>>>>> Could it be that libgfortranbegin.a can only be used for  
>>>>>>>> 32bit compilation?
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> No, you're picking the wrong one - there is one for each  
>>>>>>> architecture.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> Furthermore, I still have the question (and hopefully Simon  
>>>>>>>> will answer it):
>>>>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any  
>>>>>>>> libgfortran.dylib files?
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> Because it's using a static library.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I  
>>>>>>>> get the answer that NO results were found, while googling "/ 
>>>>>>>> usr/local/lib/libgfortran.dylib" gives many results. Thus it  
>>>>>>>> seems that there will never be any libgfortran.dylib in "/usr/ 
>>>>>>>> lib/"!?
>>>>>>>>
>>>>>>>>
>>>>>>> Nope - OS X has no Fortran by default.
>>>>>>>
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> I must admit that I do not understand this issue.
>>>>>>>>
>>>>>>>> Best regards
>>>>>>>> Christian
>>>>>>>>
>>>>>>>>
>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Dear Kasper,
>>>>>>>>>>
>>>>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>>>>>> cd /usr/bin
>>>>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> I am not sure this is advisable in general.  When I compile  
>>>>>>>>> stuff with gcc-4.2 I usually explicitly set
>>>>>>>>> CC=/usr/bin/gcc-4.2
>>>>>>>>> when I run configure.  For example, my entire configure line  
>>>>>>>>> for R on my macbook is
>>>>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>>>>        CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>>>>        CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>>>>        CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>>>>        CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>        OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>>>>        F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>        FFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>        FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>        FCFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>        --x-includes=/usr/X11/include --x-libraries=/usr/X11/ 
>>>>>>>>> lib \
>>>>>>>>>        --with-system-zlib \
>>>>>>>>>        --with-blas='-framework vecLib' --with-lapack
>>>>>>>>> Of course this requires that ROOT uses the CC/CFLAGS macros,  
>>>>>>>>> but that should be pretty standard if it uses autoconf.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such  
>>>>>>>>>> file or directory
>>>>>>>>>>
>>>>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../ 
>>>>>>>>>> x86_64
>>>>>>>>>> $ ls -al
>>>>>>>>>> total 32
>>>>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran. 
>>>>>>>>>> 2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran. 
>>>>>>>>>> 2.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a  
>>>>>>>>>> -> ../libgfortran.a
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26  
>>>>>>>>>> libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>>
>>>>>>>>>> This means that /usr/local/bin does contain  
>>>>>>>>>> libgfortran.dylib whereas /usr/bin does not contain any of  
>>>>>>>>>> these files or links.
>>>>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these  
>>>>>>>>>> file for libgfortran.dylib while gfortran-4.2-5564- 
>>>>>>>>>> darwin9.tar.gz does not contain these files?
>>>>>>>>>> How do I get libgfortran.dylib?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> Simon might be able to answer this better, but the general  
>>>>>>>>> idea is that the
>>>>>>>>>
>>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> installs into /usr/bin
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> gfortran-4.2.3.dmg
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> installs into /usr/local/bin.  There is some logic here, the  
>>>>>>>>> way I think about it is that the former is a direct  
>>>>>>>>> extension of the Apple build.
>>>>>>>>>
>>>>>>>>> I would start from scratch, which means remove all traces of  
>>>>>>>>> both gfortrans, install the 5564-tarball and then set the  
>>>>>>>>> various macros as I have set it above for R (your exact  
>>>>>>>>> values may of course be different depending on what machine  
>>>>>>>>> etc. you are using).
>>>>>>>>>
>>>>>>>>> Kasper
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> BTW, I must apologize to Simon. On his website he lists the  
>>>>>>>>>> commands how to install gfortran.tar.gz, but in the Tiger  
>>>>>>>>>> section, so I did miss it. Nevertheless it would still be  
>>>>>>>>>> helpful for Mac users to know how to uninstall it:
>>>>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm - 
>>>>>>>>>> d)
>>>>>>>>>>
>>>>>>>>>> Best regards
>>>>>>>>>> Christian
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0  
>>>>>>>>>>> and 4.2.  You are using 4.0, you might want to switch to  
>>>>>>>>>>> 4.2.  In Tiger there used to be gcc_select (or select_gcc)  
>>>>>>>>>>> that let you choose between 3.x and 4.0, I don't remember  
>>>>>>>>>>> if that is still around on Leopard.
>>>>>>>>>>>
>>>>>>>>>>> The error seems to indicate that you need 4.2 in order to  
>>>>>>>>>>> use Simon's gfortran.
>>>>>>>>>>>
>>>>>>>>>>> Kasper
>>>>>>>>>>>
>>>>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>
>>>>>>>>>>>> Thank you for this information.
>>>>>>>>>>>>
>>>>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on  
>>>>>>>>>>>> Leopard and tried to compile ROOT again, but this time I  
>>>>>>>>>>>> got the following error:
>>>>>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup - 
>>>>>>>>>>>> install_name @rpath/libminicern.so -O2 -m64 -o lib/ 
>>>>>>>>>>>> libminicern.so misc/minicern/src/cernlib.o -ldl misc/ 
>>>>>>>>>>>> minicern/src/hbook.o misc/minicern/src/kernlib.o misc/ 
>>>>>>>>>>>> minicern/src/zebra.o libgfortran.dylib /usr/lib/gcc/i686- 
>>>>>>>>>>>> apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such  
>>>>>>>>>>>> file or directory
>>>>>>>>>>>>
>>>>>>>>>>>> I know that this is not necessarily an R-related question  
>>>>>>>>>>>> but I would greatly appreciate your help if possible (at  
>>>>>>>>>>>> least it is a Mac- and somehow a BioC-related question).
>>>>>>>>>>>>
>>>>>>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg  
>>>>>>>>>>>> I got the following error:
>>>>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib  
>>>>>>>>>>>> lib/libminicern.so /usr/local/lib/gcc/i686-apple- 
>>>>>>>>>>>> darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/ 
>>>>>>>>>>>> local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/ 
>>>>>>>>>>>> libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../lib    - 
>>>>>>>>>>>> pthread -ldl
>>>>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5  
>>>>>>>>>>>> or later
>>>>>>>>>>>>
>>>>>>>>>>>> As you can see gfortran-4.2.3 could find  
>>>>>>>>>>>> libgfortran.dylib at:
>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../ 
>>>>>>>>>>>> x86_64/libgfortran.dylib while gfortran-4.2.4 could not  
>>>>>>>>>>>> find libgfortran.dylib.
>>>>>>>>>>>>
>>>>>>>>>>>> Thus maybe I did make a mistake when installing  
>>>>>>>>>>>> gfortran-4.2.4. Here is what I did:
>>>>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>>>>>
>>>>>>>>>>>> Do you know what I need to do so that libgfortran.dylib  
>>>>>>>>>>>> can be found?
>>>>>>>>>>>>
>>>>>>>>>>>> P.S.:Since many Mac users are no Unix experts please  
>>>>>>>>>>>> allow me to suggest to place on your website the commands  
>>>>>>>>>>>> to install/uninstall gfortran. I have found the following  
>>>>>>>>>>>> website, which told me how to install gfortran and how I  
>>>>>>>>>>>> could uninstall it:
>>>>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>>>>>
>>>>>>>>>>>> Thank you in advance.
>>>>>>>>>>>> Best regards
>>>>>>>>>>>> Christian
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> One more question:
>>>>>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz.  
>>>>>>>>>>>>>> The version gives:
>>>>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/src/ 
>>>>>>>>>>>>>> configure --disable-checking --enable-werror --prefix=/ 
>>>>>>>>>>>>>> usr --mandir=/usr/share/man --enable-languages=c,objc,c+ 
>>>>>>>>>>>>>> +,obj-c++,fortran --program-transform-name=/^[cg][^.-]* 
>>>>>>>>>>>>>> $/s/$/-4.2/ --with-gxx-include-dir=/usr/include/c++/ 
>>>>>>>>>>>>>> 4.0.0 --with-slibdir=/usr/lib --build=i686-apple- 
>>>>>>>>>>>>>> darwin9 --host=i686-apple-darwin9 --target=i686-apple- 
>>>>>>>>>>>>>> darwin9
>>>>>>>>>>>>>> Thread model: posix
>>>>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> This means that this version seems to be older than the  
>>>>>>>>>>>>>> one I am using now?
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to.  
>>>>>>>>>>>>> The "gcc version 4.2.1" comes from Apple's Xcode 3.1  
>>>>>>>>>>>>> gcc-4.2 branch since that is what they define - it just  
>>>>>>>>>>>>> adds Fortran support to the existing gcc 4.2.1 branch of  
>>>>>>>>>>>>> Apple that you installed as Xcode. However, the Fortran  
>>>>>>>>>>>>> part is merged from the GNU Fortran 4.2.4 release -  
>>>>>>>>>>>>> hence I refer to it as 4.2.4.
>>>>>>>>>>>>>
>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT,  
>>>>>>>>>>>>>>>> whereby I compile ROOT usually from source. Until now  
>>>>>>>>>>>>>>>> this has not been a problem since I do all my  
>>>>>>>>>>>>>>>> development on Tiger. However, now I wanted to  
>>>>>>>>>>>>>>>> compile ROOT on Leopard but failed since my gfortran  
>>>>>>>>>>>>>>>> compiler is too old, see:
>>>>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>>>>>>>>>>>>>  To solve the problem I should upgrade to the latest  
>>>>>>>>>>>>>>>> version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> I would advise against that - using gcc from Fink  
>>>>>>>>>>>>>>> usually calls for a disaster. The real solution is to  
>>>>>>>>>>>>>>> fix their flags, but that's another story ...
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>>>>> Can I also use this version for R or do I need to use  
>>>>>>>>>>>>>>>> the version downloaded from att?
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for  
>>>>>>>>>>>>>>> Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>>
>>>
>
>


From cstrato at aon.at  Tue Jan 26 22:52:55 2010
From: cstrato at aon.at (cstrato)
Date: Tue, 26 Jan 2010 22:52:55 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <5C98F8A8-B6E9-499D-8073-96C242A2B108@r-project.org>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
	<4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
	<4B5F4F86.9010906@aon.at>
	<5C98F8A8-B6E9-499D-8073-96C242A2B108@r-project.org>
Message-ID: <4B5F6437.7040906@aon.at>

Dear Kasper, dear Simon,

Thank you both for your help, this was easier than I thought.

Since I had already installed "R-2.10.1.pkg" all I needed to do was:
$ R --arch=x86_64 --no-multiarch CMD INSTALL -l ~/Library/R/2.10/library 
xps_1.7.4.tar.gz
* installing *source* package 'xps' ...
checking for gcc... gcc-4.2 -arch x86_64 -std=gnu99
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc-4.2 -arch x86_64 -std=gnu99 accepts -g... yes
checking for gcc-4.2 -arch x86_64 -std=gnu99 option to accept ANSI C... 
none needed
checking how to run the C preprocessor... gcc-4.2 -arch x86_64 -std=gnu99 -E
checking for gcc... (cached) gcc-4.2 -arch x86_64 -std=gnu99
checking whether we are using the GNU C compiler... (cached) yes
checking whether gcc-4.2 -arch x86_64 -std=gnu99 accepts -g... (cached) yes
checking for gcc-4.2 -arch x86_64 -std=gnu99 option to accept ANSI C... 
(cached) none needed
found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
** libs
** arch - x86_64

Now xps compiles for 64 bit and starting R with:
$ R --arch=x86_64
I am able to load my package:
 > library(xps)

Welcome to xps version 1.7.4
    an R wrapper for XPS - eXpression Profiling System
    (c) Copyright 2001-2009 by Christian Stratowa


Now one final question remains, which is a question of a user of xps who 
has started the whole discussion since he has compiled ROOT as 64 bit 
and wanted to install xps using:
 > biocLite("xps", type = "source")
I assume that when I start R using "R --arch=x86_64" then every package 
is compiled as 64 bit automatically.

Best regards
Christian



Simon Urbanek wrote:
>
> On Jan 26, 2010, at 15:24 , cstrato wrote:
>
>> Dear Simon,
>>
>> Meanwhile I have tried to install xps:
>> $ R CMD INSTALL -l ~/Library/R/2.10/library xps_1.7.4.tar.gz
>> * installing *source* package 'xps' ...
>> checking for gcc... gcc-4.2 -arch i386 -std=gnu99
>> checking for C compiler default output file name... a.out
>> checking whether the C compiler works... yes
>> checking whether we are cross compiling... no
>> checking for suffix of executables...
>> checking for suffix of object files... o
>> checking whether we are using the GNU C compiler... yes
>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... yes
>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI C... 
>> none needed
>> checking how to run the C preprocessor... gcc-4.2 -arch i386 
>> -std=gnu99 -E
>> checking for gcc... (cached) gcc-4.2 -arch i386 -std=gnu99
>> checking whether we are using the GNU C compiler... (cached) yes
>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... (cached) 
>> yes
>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI C... 
>> (cached) none needed
>> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
>> ** libs
>> ** arch - i386
>>
>> As you can see it compiles using the wrong architecture:
>
> Well, you're running the wrong architecture ... As I said when you 
> want to link, you have to use 64-bit.
>
>
>> > library(xps)
>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>> unable to load shared library 
>> '/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so':
>> dlopen(/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so, 
>> 6): no suitable image found.  Did find:
>>       /Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so: 
>> mach-o, but wrong architecture
>> Error: package/namespace load failed for 'xps'
>> >
>>
>> In my file "config.in" I have the following lines:
>> # See "Writing R Extensions"
>> : ${R_HOME=`R RHOME`}
>> if test -z "${R_HOME}"; then
>>  echo "could not determine R_HOME"
>>  exit 1
>> fi
>> CC=`"${R_HOME}/bin/R" CMD config CC`
>> CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
>> AC_PROG_CPP
>> AC_PROG_CC
>>
>> Thus I assume that I need to use 64 bit R so that the flags are set 
>> correctly. Is this correct?
>>
>
> You have to use 64-bit R if you want to link to a 64-bit program - as 
> I said.
>
>
>> If yes, can I use: 
>> http://r.research.att.com/R-GUI-5548-2.10-leopard-Leopard64.dmg
>> or do I need to build 64 bit R from source?
>>
>
> Neither - just pick it from CRAN - it's the first download in the 
> list. Note that you still have to run 64-bit R -- e.g. R --arch=x86_64
>
> Cheers,
> Simon
>
>
>
>>
>>
>> Simon Urbanek wrote:
>>> On Jan 25, 2010, at 5:34 PM, cstrato wrote:
>>>
>>>
>>>> Dear Simon,
>>>>
>>>> Thank you, with this version I could finally compile ROOT as 64 bit.
>>>>
>>>> Now I have one more question:
>>>> When I do "R CMD Install xps.tar.gz" which now depends on 64 bit 
>>>> ROOT, do I need to install the 64 bit version of R or can I use the 
>>>> current R version?
>>>>
>>>>
>>>
>>> I have no idea since I don't know your package. If you *link* to 
>>> ROOT then yes, you have to use 64-bit R to load 64-bit code. 
>>> (Linking in itself can be quite interesting given the flags ROOT 
>>> uses, so your journey may not end there ;)).
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>
>>>
>>>> Best regards
>>>> Christian
>>>>
>>>>
>>>> Simon Urbanek wrote:
>>>>
>>>>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>>>>>
>>>>>
>>>>>> Dear Simon,
>>>>>>
>>>>>> Thank you for your suggestions, which I have just tried. Sadly 
>>>>>> the error remains the same.
>>>>>>
>>>>>> The problem seems to be that for some reason 
>>>>>> "gfortran-4.2-5564-darwin9.tar.gz" does not have a 
>>>>>> "/usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory 
>>>>>> containing libgfortranbegin.a. For this reason the 64 bit version 
>>>>>> of libgfortranbegin.a is not installed in the corresponding 
>>>>>> directory x86_64 which contains only libgcc.a etc.
>>>>>>
>>>>>>
>>>>> Oh ... that's a surprise - it should be there, sorry. Ok, so 
>>>>> please use the more recent 5566 build:
>>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>>>>>
>>>>> that one has the x86_64 files - I checked:
>>>>> ginaz:~$ curl -s -S 
>>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz | 
>>>>> tar fvtz - | grep gfortran.a
>>>>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 
>>>>> usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortran.a
>>>>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 
>>>>> usr/lib/gcc/powerpc-apple-darwin9/4.2.1/libgfortran.a
>>>>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 
>>>>> usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>>>>>
>>>>> (Ideally you should install Xcode 3.1.2 for this since that is 
>>>>> where the 5566 build comes from, but it will probably work even if 
>>>>> the builds don't match perfectly).
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>> You can see this by double-clicking on 
>>>>>> "gfortran-4.2-5564-darwin9.tar.gz" when located in some directory.
>>>>>>
>>>>>> In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a 
>>>>>> in the "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" 
>>>>>> directory.
>>>>>>
>>>>>> Could you please check or tell me what the reason might be?
>>>>>>
>>>>>> I have installed it using:
>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>
>>>>>> Best regards
>>>>>> Christian
>>>>>>
>>>>>>
>>>>>> Simon Urbanek wrote:
>>>>>>
>>>>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> Dear Kasper,
>>>>>>>>
>>>>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD 
>>>>>>>> flags I did:
>>>>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch x86_64" 
>>>>>>>> --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> You don't really need the override - it works without and they 
>>>>>>> add -m64 anyway so the -arch gets essentially ignored.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> The error was still the same:
>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file 
>>>>>>>> or directory
>>>>>>>>
>>>>>>>> However, when I replaced in the Makefile.macosx64:
>>>>>>>> F77LIBS      := $(shell $(F77) -m64 
>>>>>>>> -print-file-name=libgfortran.dylib)
>>>>>>>> F77LIBS      += $(shell $(F77) -m64 
>>>>>>>> -print-file-name=libgfortranbegin.a)
>>>>>>>> with:
>>>>>>>> F77LIBS      := $(shell $(F77) -m64 
>>>>>>>> -print-file-name=libgfortranbegin.a)
>>>>>>>>
>>>>>>>>
>>>>>>> You found the right spot but your fix is wrong - just remove the 
>>>>>>> two lines, they are superfluous and only cause trouble.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> the error disappeared, and I could finish the compilation.
>>>>>>>>
>>>>>>>> However, now I got a link-error:
>>>>>>>> ld warning: in 
>>>>>>>> /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, file 
>>>>>>>> is not of required architecture
>>>>>>>> Undefined symbols:
>>>>>>>> "_main", referenced from:
>>>>>>>>  start in crt1.10.5.o
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> Your'e getting the 32-bit version (of the wrong file - see 
>>>>>>> above). It should really be ../4.2.1/x86_64/lib...
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> I am not sure what this error means since Makefile.macosx64 
>>>>>>>> contains:
>>>>>>>> F77FLAGS      = -m64 -std=legacy
>>>>>>>>
>>>>>>>> Could it be that libgfortranbegin.a can only be used for 32bit 
>>>>>>>> compilation?
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> No, you're picking the wrong one - there is one for each 
>>>>>>> architecture.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> Furthermore, I still have the question (and hopefully Simon 
>>>>>>>> will answer it):
>>>>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any 
>>>>>>>> libgfortran.dylib files?
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> Because it's using a static library.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I get 
>>>>>>>> the answer that NO results were found, while googling 
>>>>>>>> "/usr/local/lib/libgfortran.dylib" gives many results. Thus it 
>>>>>>>> seems that there will never be any libgfortran.dylib in 
>>>>>>>> "/usr/lib/"!?
>>>>>>>>
>>>>>>>>
>>>>>>> Nope - OS X has no Fortran by default.
>>>>>>>
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> I must admit that I do not understand this issue.
>>>>>>>>
>>>>>>>> Best regards
>>>>>>>> Christian
>>>>>>>>
>>>>>>>>
>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Dear Kasper,
>>>>>>>>>>
>>>>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>>>>>> cd /usr/bin
>>>>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> I am not sure this is advisable in general.  When I compile 
>>>>>>>>> stuff with gcc-4.2 I usually explicitly set
>>>>>>>>> CC=/usr/bin/gcc-4.2
>>>>>>>>> when I run configure.  For example, my entire configure line 
>>>>>>>>> for R on my macbook is
>>>>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>>>>         CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>>>>         CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>>>>         CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>>>>         CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>         OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>>>>         F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>         FFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>         FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>         FCFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>         --x-includes=/usr/X11/include 
>>>>>>>>> --x-libraries=/usr/X11/lib \
>>>>>>>>>         --with-system-zlib \
>>>>>>>>>         --with-blas='-framework vecLib' --with-lapack
>>>>>>>>> Of course this requires that ROOT uses the CC/CFLAGS macros, 
>>>>>>>>> but that should be pretty standard if it uses autoconf.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file 
>>>>>>>>>> or directory
>>>>>>>>>>
>>>>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>>>>>>>> $ ls -al
>>>>>>>>>> total 32
>>>>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 
>>>>>>>>>> libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 
>>>>>>>>>> libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a 
>>>>>>>>>> -> ../libgfortran.a
>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 
>>>>>>>>>> libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>>
>>>>>>>>>> This means that /usr/local/bin does contain libgfortran.dylib 
>>>>>>>>>> whereas /usr/bin does not contain any of these files or links.
>>>>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these 
>>>>>>>>>> file for libgfortran.dylib while 
>>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
>>>>>>>>>> How do I get libgfortran.dylib?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> Simon might be able to answer this better, but the general 
>>>>>>>>> idea is that the
>>>>>>>>>
>>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> installs into /usr/bin
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> gfortran-4.2.3.dmg
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> installs into /usr/local/bin.  There is some logic here, the 
>>>>>>>>> way I think about it is that the former is a direct extension 
>>>>>>>>> of the Apple build.
>>>>>>>>>
>>>>>>>>> I would start from scratch, which means remove all traces of 
>>>>>>>>> both gfortrans, install the 5564-tarball and then set the 
>>>>>>>>> various macros as I have set it above for R (your exact values 
>>>>>>>>> may of course be different depending on what machine etc. you 
>>>>>>>>> are using).
>>>>>>>>>
>>>>>>>>> Kasper
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> BTW, I must apologize to Simon. On his website he lists the 
>>>>>>>>>> commands how to install gfortran.tar.gz, but in the Tiger 
>>>>>>>>>> section, so I did miss it. Nevertheless it would still be 
>>>>>>>>>> helpful for Mac users to know how to uninstall it:
>>>>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>>>>>>>
>>>>>>>>>> Best regards
>>>>>>>>>> Christian
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0 
>>>>>>>>>>> and 4.2.  You are using 4.0, you might want to switch to 
>>>>>>>>>>> 4.2.  In Tiger there used to be gcc_select (or select_gcc) 
>>>>>>>>>>> that let you choose between 3.x and 4.0, I don't remember if 
>>>>>>>>>>> that is still around on Leopard.
>>>>>>>>>>>
>>>>>>>>>>> The error seems to indicate that you need 4.2 in order to 
>>>>>>>>>>> use Simon's gfortran.
>>>>>>>>>>>
>>>>>>>>>>> Kasper
>>>>>>>>>>>
>>>>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>
>>>>>>>>>>>> Thank you for this information.
>>>>>>>>>>>>
>>>>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on 
>>>>>>>>>>>> Leopard and tried to compile ROOT again, but this time I 
>>>>>>>>>>>> got the following error:
>>>>>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup 
>>>>>>>>>>>> -install_name @rpath/libminicern.so -O2 -m64 -o 
>>>>>>>>>>>> lib/libminicern.so misc/minicern/src/cernlib.o -ldl 
>>>>>>>>>>>> misc/minicern/src/hbook.o misc/minicern/src/kernlib.o 
>>>>>>>>>>>> misc/minicern/src/zebra.o libgfortran.dylib 
>>>>>>>>>>>> /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such 
>>>>>>>>>>>> file or directory
>>>>>>>>>>>>
>>>>>>>>>>>> I know that this is not necessarily an R-related question 
>>>>>>>>>>>> but I would greatly appreciate your help if possible (at 
>>>>>>>>>>>> least it is a Mac- and somehow a BioC-related question).
>>>>>>>>>>>>
>>>>>>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg I 
>>>>>>>>>>>> got the following error:
>>>>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib 
>>>>>>>>>>>> lib/libminicern.so 
>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a 
>>>>>>>>>>>> -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 or 
>>>>>>>>>>>> later
>>>>>>>>>>>>
>>>>>>>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib at:
>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
>>>>>>>>>>>> while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>>>>>>>>>
>>>>>>>>>>>> Thus maybe I did make a mistake when installing 
>>>>>>>>>>>> gfortran-4.2.4. Here is what I did:
>>>>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>>>>>
>>>>>>>>>>>> Do you know what I need to do so that libgfortran.dylib can 
>>>>>>>>>>>> be found?
>>>>>>>>>>>>
>>>>>>>>>>>> P.S.:Since many Mac users are no Unix experts please allow 
>>>>>>>>>>>> me to suggest to place on your website the commands to 
>>>>>>>>>>>> install/uninstall gfortran. I have found the following 
>>>>>>>>>>>> website, which told me how to install gfortran and how I 
>>>>>>>>>>>> could uninstall it:
>>>>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>>>>>
>>>>>>>>>>>> Thank you in advance.
>>>>>>>>>>>> Best regards
>>>>>>>>>>>> Christian
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> One more question:
>>>>>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. 
>>>>>>>>>>>>>> The version gives:
>>>>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>>>>> Configured with: 
>>>>>>>>>>>>>> /Builds/gcc/gcc_42-5564/build/obj/src/configure 
>>>>>>>>>>>>>> --disable-checking --enable-werror --prefix=/usr 
>>>>>>>>>>>>>> --mandir=/usr/share/man 
>>>>>>>>>>>>>> --enable-languages=c,objc,c++,obj-c++,fortran 
>>>>>>>>>>>>>> --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ 
>>>>>>>>>>>>>> --with-gxx-include-dir=/usr/include/c++/4.0.0 
>>>>>>>>>>>>>> --with-slibdir=/usr/lib --build=i686-apple-darwin9 
>>>>>>>>>>>>>> --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>>>>>>>> Thread model: posix
>>>>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> This means that this version seems to be older than the 
>>>>>>>>>>>>>> one I am using now?
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. The 
>>>>>>>>>>>>> "gcc version 4.2.1" comes from Apple's Xcode 3.1 gcc-4.2 
>>>>>>>>>>>>> branch since that is what they define - it just adds 
>>>>>>>>>>>>> Fortran support to the existing gcc 4.2.1 branch of Apple 
>>>>>>>>>>>>> that you installed as Xcode. However, the Fortran part is 
>>>>>>>>>>>>> merged from the GNU Fortran 4.2.4 release - hence I refer 
>>>>>>>>>>>>> to it as 4.2.4.
>>>>>>>>>>>>>
>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT, 
>>>>>>>>>>>>>>>> whereby I compile ROOT usually from source. Until now 
>>>>>>>>>>>>>>>> this has not been a problem since I do all my 
>>>>>>>>>>>>>>>> development on Tiger. However, now I wanted to compile 
>>>>>>>>>>>>>>>> ROOT on Leopard but failed since my gfortran compiler 
>>>>>>>>>>>>>>>> is too old, see:
>>>>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 To 
>>>>>>>>>>>>>>>> solve the problem I should upgrade to the latest 
>>>>>>>>>>>>>>>> version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> I would advise against that - using gcc from Fink 
>>>>>>>>>>>>>>> usually calls for a disaster. The real solution is to 
>>>>>>>>>>>>>>> fix their flags, but that's another story ...
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>>>>> Can I also use this version for R or do I need to use 
>>>>>>>>>>>>>>>> the version downloaded from att?
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for 
>>>>>>>>>>>>>>> Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>>
>>>
>>
>>
>
>


From simon.urbanek at r-project.org  Wed Jan 27 00:11:05 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 26 Jan 2010 18:11:05 -0500
Subject: [R-SIG-Mac] Failed compile of cshapes package
In-Reply-To: <4B5F5C71.8070208@googlemail.com>
References: <4B5F5C71.8070208@googlemail.com>
Message-ID: <80C2E675-DD50-4D69-8341-E0A0BB52DB2B@r-project.org>


On Jan 26, 2010, at 16:19 , Nils B. Weidmann wrote:

> Dear all,
>
> I have been submitting more recent versions of my cshapes package to  
> CRAN. Whereas version 0.1-1 compiled just fine, all subsequent  
> releases failed to do so, but only under OS X:
>
> http://cran.r-project.org/web/checks/check_results_cshapes.html
>
> This is weird, because
> * the example that triggered the OS X compilation error was not  
> changed between 0.1-1 and now

The issue is that you compiled it with too high target:
   java.lang.UnsupportedClassVersionError: Bad version number  
in .class file

We only support JDK 1.5. Please use -target 1.5 when compiling your  
class files (they seem to not require 1.6 at all).


> * this example has also been excluded from testing (using "Not run:")
>

No, it's not -- the "Not run" is just your comment, it has no  
influence on the examples.


> Any suggestions of what I could do?

See above.

Cheers,
Simon


From cstrato at aon.at  Fri Jan 29 19:49:10 2010
From: cstrato at aon.at (cstrato)
Date: Fri, 29 Jan 2010 19:49:10 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B5F6437.7040906@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
	<4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
	<4B5F4F86.9010906@aon.at>
	<5C98F8A8-B6E9-499D-8073-96C242A2B108@r-project.org>
	<4B5F6437.7040906@aon.at>
Message-ID: <4B632DA6.1060109@aon.at>

Dear Simon,

As a subscriber to RootTalk I have just received the following mail:
http://root.cern.ch/root/roottalk/roottalk10/0122.html

As you see there are other Mac users of ROOT who do not want to use fink 
but another gfortran compiler.
I seems that besides gfortran from your website, the following gfortran 
can also be used:
http://www.macresearch.org/gfortran-leopard

My question now is:
Can gfortran from macresearch also be used to compile R 32 bit and 64 bit?

Best regards
Christian


cstrato wrote:
> Dear Kasper, dear Simon,
>
> Thank you both for your help, this was easier than I thought.
>
> Since I had already installed "R-2.10.1.pkg" all I needed to do was:
> $ R --arch=x86_64 --no-multiarch CMD INSTALL -l 
> ~/Library/R/2.10/library xps_1.7.4.tar.gz
> * installing *source* package 'xps' ...
> checking for gcc... gcc-4.2 -arch x86_64 -std=gnu99
> checking for C compiler default output file name... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc-4.2 -arch x86_64 -std=gnu99 accepts -g... yes
> checking for gcc-4.2 -arch x86_64 -std=gnu99 option to accept ANSI 
> C... none needed
> checking how to run the C preprocessor... gcc-4.2 -arch x86_64 
> -std=gnu99 -E
> checking for gcc... (cached) gcc-4.2 -arch x86_64 -std=gnu99
> checking whether we are using the GNU C compiler... (cached) yes
> checking whether gcc-4.2 -arch x86_64 -std=gnu99 accepts -g... 
> (cached) yes
> checking for gcc-4.2 -arch x86_64 -std=gnu99 option to accept ANSI 
> C... (cached) none needed
> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
> ** libs
> ** arch - x86_64
>
> Now xps compiles for 64 bit and starting R with:
> $ R --arch=x86_64
> I am able to load my package:
> > library(xps)
>
> Welcome to xps version 1.7.4
>    an R wrapper for XPS - eXpression Profiling System
>    (c) Copyright 2001-2009 by Christian Stratowa
>
>
> Now one final question remains, which is a question of a user of xps 
> who has started the whole discussion since he has compiled ROOT as 64 
> bit and wanted to install xps using:
> > biocLite("xps", type = "source")
> I assume that when I start R using "R --arch=x86_64" then every 
> package is compiled as 64 bit automatically.
>
> Best regards
> Christian
>
>
>
> Simon Urbanek wrote:
>>
>> On Jan 26, 2010, at 15:24 , cstrato wrote:
>>
>>> Dear Simon,
>>>
>>> Meanwhile I have tried to install xps:
>>> $ R CMD INSTALL -l ~/Library/R/2.10/library xps_1.7.4.tar.gz
>>> * installing *source* package 'xps' ...
>>> checking for gcc... gcc-4.2 -arch i386 -std=gnu99
>>> checking for C compiler default output file name... a.out
>>> checking whether the C compiler works... yes
>>> checking whether we are cross compiling... no
>>> checking for suffix of executables...
>>> checking for suffix of object files... o
>>> checking whether we are using the GNU C compiler... yes
>>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... yes
>>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI 
>>> C... none needed
>>> checking how to run the C preprocessor... gcc-4.2 -arch i386 
>>> -std=gnu99 -E
>>> checking for gcc... (cached) gcc-4.2 -arch i386 -std=gnu99
>>> checking whether we are using the GNU C compiler... (cached) yes
>>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... 
>>> (cached) yes
>>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI 
>>> C... (cached) none needed
>>> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
>>> ** libs
>>> ** arch - i386
>>>
>>> As you can see it compiles using the wrong architecture:
>>
>> Well, you're running the wrong architecture ... As I said when you 
>> want to link, you have to use 64-bit.
>>
>>
>>> > library(xps)
>>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>> unable to load shared library 
>>> '/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so':
>>> dlopen(/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so, 
>>> 6): no suitable image found.  Did find:
>>>       /Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so: 
>>> mach-o, but wrong architecture
>>> Error: package/namespace load failed for 'xps'
>>> >
>>>
>>> In my file "config.in" I have the following lines:
>>> # See "Writing R Extensions"
>>> : ${R_HOME=`R RHOME`}
>>> if test -z "${R_HOME}"; then
>>>  echo "could not determine R_HOME"
>>>  exit 1
>>> fi
>>> CC=`"${R_HOME}/bin/R" CMD config CC`
>>> CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
>>> AC_PROG_CPP
>>> AC_PROG_CC
>>>
>>> Thus I assume that I need to use 64 bit R so that the flags are set 
>>> correctly. Is this correct?
>>>
>>
>> You have to use 64-bit R if you want to link to a 64-bit program - as 
>> I said.
>>
>>
>>> If yes, can I use: 
>>> http://r.research.att.com/R-GUI-5548-2.10-leopard-Leopard64.dmg
>>> or do I need to build 64 bit R from source?
>>>
>>
>> Neither - just pick it from CRAN - it's the first download in the 
>> list. Note that you still have to run 64-bit R -- e.g. R --arch=x86_64
>>
>> Cheers,
>> Simon
>>
>>
>>
>>>
>>>
>>> Simon Urbanek wrote:
>>>> On Jan 25, 2010, at 5:34 PM, cstrato wrote:
>>>>
>>>>
>>>>> Dear Simon,
>>>>>
>>>>> Thank you, with this version I could finally compile ROOT as 64 bit.
>>>>>
>>>>> Now I have one more question:
>>>>> When I do "R CMD Install xps.tar.gz" which now depends on 64 bit 
>>>>> ROOT, do I need to install the 64 bit version of R or can I use 
>>>>> the current R version?
>>>>>
>>>>>
>>>>
>>>> I have no idea since I don't know your package. If you *link* to 
>>>> ROOT then yes, you have to use 64-bit R to load 64-bit code. 
>>>> (Linking in itself can be quite interesting given the flags ROOT 
>>>> uses, so your journey may not end there ;)).
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>>
>>>>
>>>>
>>>>> Best regards
>>>>> Christian
>>>>>
>>>>>
>>>>> Simon Urbanek wrote:
>>>>>
>>>>>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>>>>>>
>>>>>>
>>>>>>> Dear Simon,
>>>>>>>
>>>>>>> Thank you for your suggestions, which I have just tried. Sadly 
>>>>>>> the error remains the same.
>>>>>>>
>>>>>>> The problem seems to be that for some reason 
>>>>>>> "gfortran-4.2-5564-darwin9.tar.gz" does not have a 
>>>>>>> "/usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory 
>>>>>>> containing libgfortranbegin.a. For this reason the 64 bit 
>>>>>>> version of libgfortranbegin.a is not installed in the 
>>>>>>> corresponding directory x86_64 which contains only libgcc.a etc.
>>>>>>>
>>>>>>>
>>>>>> Oh ... that's a surprise - it should be there, sorry. Ok, so 
>>>>>> please use the more recent 5566 build:
>>>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>>>>>>
>>>>>> that one has the x86_64 files - I checked:
>>>>>> ginaz:~$ curl -s -S 
>>>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz 
>>>>>> | tar fvtz - | grep gfortran.a
>>>>>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 
>>>>>> usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortran.a
>>>>>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 
>>>>>> usr/lib/gcc/powerpc-apple-darwin9/4.2.1/libgfortran.a
>>>>>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 
>>>>>> usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>>>>>>
>>>>>> (Ideally you should install Xcode 3.1.2 for this since that is 
>>>>>> where the 5566 build comes from, but it will probably work even 
>>>>>> if the builds don't match perfectly).
>>>>>>
>>>>>> Cheers,
>>>>>> Simon
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> You can see this by double-clicking on 
>>>>>>> "gfortran-4.2-5564-darwin9.tar.gz" when located in some directory.
>>>>>>>
>>>>>>> In contrast, "gfortran-4.2.3.dmg" did install libgfortranbegin.a 
>>>>>>> in the "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" 
>>>>>>> directory.
>>>>>>>
>>>>>>> Could you please check or tell me what the reason might be?
>>>>>>>
>>>>>>> I have installed it using:
>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>
>>>>>>> Best regards
>>>>>>> Christian
>>>>>>>
>>>>>>>
>>>>>>> Simon Urbanek wrote:
>>>>>>>
>>>>>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> Dear Kasper,
>>>>>>>>>
>>>>>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD 
>>>>>>>>> flags I did:
>>>>>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch 
>>>>>>>>> x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>> You don't really need the override - it works without and they 
>>>>>>>> add -m64 anyway so the -arch gets essentially ignored.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> The error was still the same:
>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such file 
>>>>>>>>> or directory
>>>>>>>>>
>>>>>>>>> However, when I replaced in the Makefile.macosx64:
>>>>>>>>> F77LIBS      := $(shell $(F77) -m64 
>>>>>>>>> -print-file-name=libgfortran.dylib)
>>>>>>>>> F77LIBS      += $(shell $(F77) -m64 
>>>>>>>>> -print-file-name=libgfortranbegin.a)
>>>>>>>>> with:
>>>>>>>>> F77LIBS      := $(shell $(F77) -m64 
>>>>>>>>> -print-file-name=libgfortranbegin.a)
>>>>>>>>>
>>>>>>>>>
>>>>>>>> You found the right spot but your fix is wrong - just remove 
>>>>>>>> the two lines, they are superfluous and only cause trouble.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> the error disappeared, and I could finish the compilation.
>>>>>>>>>
>>>>>>>>> However, now I got a link-error:
>>>>>>>>> ld warning: in 
>>>>>>>>> /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, file 
>>>>>>>>> is not of required architecture
>>>>>>>>> Undefined symbols:
>>>>>>>>> "_main", referenced from:
>>>>>>>>>  start in crt1.10.5.o
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>> Your'e getting the 32-bit version (of the wrong file - see 
>>>>>>>> above). It should really be ../4.2.1/x86_64/lib...
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> I am not sure what this error means since Makefile.macosx64 
>>>>>>>>> contains:
>>>>>>>>> F77FLAGS      = -m64 -std=legacy
>>>>>>>>>
>>>>>>>>> Could it be that libgfortranbegin.a can only be used for 32bit 
>>>>>>>>> compilation?
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>> No, you're picking the wrong one - there is one for each 
>>>>>>>> architecture.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> Furthermore, I still have the question (and hopefully Simon 
>>>>>>>>> will answer it):
>>>>>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any 
>>>>>>>>> libgfortran.dylib files?
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>> Because it's using a static library.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I 
>>>>>>>>> get the answer that NO results were found, while googling 
>>>>>>>>> "/usr/local/lib/libgfortran.dylib" gives many results. Thus it 
>>>>>>>>> seems that there will never be any libgfortran.dylib in 
>>>>>>>>> "/usr/lib/"!?
>>>>>>>>>
>>>>>>>>>
>>>>>>>> Nope - OS X has no Fortran by default.
>>>>>>>>
>>>>>>>> Cheers,
>>>>>>>> Simon
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> I must admit that I do not understand this issue.
>>>>>>>>>
>>>>>>>>> Best regards
>>>>>>>>> Christian
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Dear Kasper,
>>>>>>>>>>>
>>>>>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>>>>>>> cd /usr/bin
>>>>>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> I am not sure this is advisable in general.  When I compile 
>>>>>>>>>> stuff with gcc-4.2 I usually explicitly set
>>>>>>>>>> CC=/usr/bin/gcc-4.2
>>>>>>>>>> when I run configure.  For example, my entire configure line 
>>>>>>>>>> for R on my macbook is
>>>>>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>>>>>         CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>>>>>         CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>>>>>         CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>>>>>         CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>>         OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>>>>>         F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>>         FFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>>         FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>>         FCFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>>         --x-includes=/usr/X11/include 
>>>>>>>>>> --x-libraries=/usr/X11/lib \
>>>>>>>>>>         --with-system-zlib \
>>>>>>>>>>         --with-blas='-framework vecLib' --with-lapack
>>>>>>>>>> Of course this requires that ROOT uses the CC/CFLAGS macros, 
>>>>>>>>>> but that should be pretty standard if it uses autoconf.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such 
>>>>>>>>>>> file or directory
>>>>>>>>>>>
>>>>>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>>>>>> $ cd 
>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>>>>>>>>> $ ls -al
>>>>>>>>>>> total 32
>>>>>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 
>>>>>>>>>>> libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 
>>>>>>>>>>> libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 libgfortran.a 
>>>>>>>>>>> -> ../libgfortran.a
>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 
>>>>>>>>>>> libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>>>
>>>>>>>>>>> This means that /usr/local/bin does contain 
>>>>>>>>>>> libgfortran.dylib whereas /usr/bin does not contain any of 
>>>>>>>>>>> these files or links.
>>>>>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these 
>>>>>>>>>>> file for libgfortran.dylib while 
>>>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz does not contain these files?
>>>>>>>>>>> How do I get libgfortran.dylib?
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> Simon might be able to answer this better, but the general 
>>>>>>>>>> idea is that the
>>>>>>>>>>
>>>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> installs into /usr/bin
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> gfortran-4.2.3.dmg
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> installs into /usr/local/bin.  There is some logic here, the 
>>>>>>>>>> way I think about it is that the former is a direct extension 
>>>>>>>>>> of the Apple build.
>>>>>>>>>>
>>>>>>>>>> I would start from scratch, which means remove all traces of 
>>>>>>>>>> both gfortrans, install the 5564-tarball and then set the 
>>>>>>>>>> various macros as I have set it above for R (your exact 
>>>>>>>>>> values may of course be different depending on what machine 
>>>>>>>>>> etc. you are using).
>>>>>>>>>>
>>>>>>>>>> Kasper
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> BTW, I must apologize to Simon. On his website he lists the 
>>>>>>>>>>> commands how to install gfortran.tar.gz, but in the Tiger 
>>>>>>>>>>> section, so I did miss it. Nevertheless it would still be 
>>>>>>>>>>> helpful for Mac users to know how to uninstall it:
>>>>>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm -d)
>>>>>>>>>>>
>>>>>>>>>>> Best regards
>>>>>>>>>>> Christian
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> Remember that Apple has two version of GCC on Leopard: 4.0 
>>>>>>>>>>>> and 4.2.  You are using 4.0, you might want to switch to 
>>>>>>>>>>>> 4.2.  In Tiger there used to be gcc_select (or select_gcc) 
>>>>>>>>>>>> that let you choose between 3.x and 4.0, I don't remember 
>>>>>>>>>>>> if that is still around on Leopard.
>>>>>>>>>>>>
>>>>>>>>>>>> The error seems to indicate that you need 4.2 in order to 
>>>>>>>>>>>> use Simon's gfortran.
>>>>>>>>>>>>
>>>>>>>>>>>> Kasper
>>>>>>>>>>>>
>>>>>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>
>>>>>>>>>>>>> Thank you for this information.
>>>>>>>>>>>>>
>>>>>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on 
>>>>>>>>>>>>> Leopard and tried to compile ROOT again, but this time I 
>>>>>>>>>>>>> got the following error:
>>>>>>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup 
>>>>>>>>>>>>> -install_name @rpath/libminicern.so -O2 -m64 -o 
>>>>>>>>>>>>> lib/libminicern.so misc/minicern/src/cernlib.o -ldl 
>>>>>>>>>>>>> misc/minicern/src/hbook.o misc/minicern/src/kernlib.o 
>>>>>>>>>>>>> misc/minicern/src/zebra.o libgfortran.dylib 
>>>>>>>>>>>>> /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such 
>>>>>>>>>>>>> file or directory
>>>>>>>>>>>>>
>>>>>>>>>>>>> I know that this is not necessarily an R-related question 
>>>>>>>>>>>>> but I would greatly appreciate your help if possible (at 
>>>>>>>>>>>>> least it is a Mac- and somehow a BioC-related question).
>>>>>>>>>>>>>
>>>>>>>>>>>>> When I have tried to compile ROOT with gfortran-4.2.3.dmg 
>>>>>>>>>>>>> I got the following error:
>>>>>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib 
>>>>>>>>>>>>> lib/libminicern.so 
>>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
>>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a 
>>>>>>>>>>>>> -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 
>>>>>>>>>>>>> or later
>>>>>>>>>>>>>
>>>>>>>>>>>>> As you can see gfortran-4.2.3 could find libgfortran.dylib 
>>>>>>>>>>>>> at:
>>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
>>>>>>>>>>>>> while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>>>>>>>>>>
>>>>>>>>>>>>> Thus maybe I did make a mistake when installing 
>>>>>>>>>>>>> gfortran-4.2.4. Here is what I did:
>>>>>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>>>>>>
>>>>>>>>>>>>> Do you know what I need to do so that libgfortran.dylib 
>>>>>>>>>>>>> can be found?
>>>>>>>>>>>>>
>>>>>>>>>>>>> P.S.:Since many Mac users are no Unix experts please allow 
>>>>>>>>>>>>> me to suggest to place on your website the commands to 
>>>>>>>>>>>>> install/uninstall gfortran. I have found the following 
>>>>>>>>>>>>> website, which told me how to install gfortran and how I 
>>>>>>>>>>>>> could uninstall it:
>>>>>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>>>>>>
>>>>>>>>>>>>> Thank you in advance.
>>>>>>>>>>>>> Best regards
>>>>>>>>>>>>> Christian
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> One more question:
>>>>>>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. 
>>>>>>>>>>>>>>> The version gives:
>>>>>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>>>>>> Configured with: 
>>>>>>>>>>>>>>> /Builds/gcc/gcc_42-5564/build/obj/src/configure 
>>>>>>>>>>>>>>> --disable-checking --enable-werror --prefix=/usr 
>>>>>>>>>>>>>>> --mandir=/usr/share/man 
>>>>>>>>>>>>>>> --enable-languages=c,objc,c++,obj-c++,fortran 
>>>>>>>>>>>>>>> --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ 
>>>>>>>>>>>>>>> --with-gxx-include-dir=/usr/include/c++/4.0.0 
>>>>>>>>>>>>>>> --with-slibdir=/usr/lib --build=i686-apple-darwin9 
>>>>>>>>>>>>>>> --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>>>>>>>>> Thread model: posix
>>>>>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> This means that this version seems to be older than the 
>>>>>>>>>>>>>>> one I am using now?
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. 
>>>>>>>>>>>>>> The "gcc version 4.2.1" comes from Apple's Xcode 3.1 
>>>>>>>>>>>>>> gcc-4.2 branch since that is what they define - it just 
>>>>>>>>>>>>>> adds Fortran support to the existing gcc 4.2.1 branch of 
>>>>>>>>>>>>>> Apple that you installed as Xcode. However, the Fortran 
>>>>>>>>>>>>>> part is merged from the GNU Fortran 4.2.4 release - hence 
>>>>>>>>>>>>>> I refer to it as 4.2.4.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>>>>>> My Bioconductor package xps requires both R and ROOT, 
>>>>>>>>>>>>>>>>> whereby I compile ROOT usually from source. Until now 
>>>>>>>>>>>>>>>>> this has not been a problem since I do all my 
>>>>>>>>>>>>>>>>> development on Tiger. However, now I wanted to compile 
>>>>>>>>>>>>>>>>> ROOT on Leopard but failed since my gfortran compiler 
>>>>>>>>>>>>>>>>> is too old, see:
>>>>>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>>>>>>>>>>>>>> To solve the problem I should upgrade to the latest 
>>>>>>>>>>>>>>>>> version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> I would advise against that - using gcc from Fink 
>>>>>>>>>>>>>>>> usually calls for a disaster. The real solution is to 
>>>>>>>>>>>>>>>> fix their flags, but that's another story ...
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>>>>>> Can I also use this version for R or do I need to use 
>>>>>>>>>>>>>>>>> the version downloaded from att?
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 for 
>>>>>>>>>>>>>>>> Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>>
>>>>
>>>
>>>
>>
>>
>
>


From simon.urbanek at r-project.org  Fri Jan 29 20:21:31 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 29 Jan 2010 14:21:31 -0500
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <4B632DA6.1060109@aon.at>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
	<4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
	<4B5F4F86.9010906@aon.at>
	<5C98F8A8-B6E9-499D-8073-96C242A2B108@r-project.org>
	<4B5F6437.7040906@aon.at> <4B632DA6.1060109@aon.at>
Message-ID: <0CA5B91D-0C4A-4860-8FAC-65F983D4ED45@r-project.org>


On Jan 29, 2010, at 13:49 , cstrato wrote:

> Dear Simon,
>
> As a subscriber to RootTalk I have just received the following mail:
> http://root.cern.ch/root/roottalk/roottalk10/0122.html
>
> As you see there are other Mac users of ROOT who do not want to use  
> fink but another gfortran compiler.
> I seems that besides gfortran from your website, the following  
> gfortran can also be used:
> http://www.macresearch.org/gfortran-leopard
>
> My question now is:
> Can gfortran from macresearch also be used to compile R 32 bit and  
> 64 bit?
>

Pretty much any compiler including fink can be used to compile R so  
the answer specifically to your question is yes. However it will be  
incompatible with any binaries we provide.

The compilers from macresearch.org seem to be the same that used to be  
on the HPC site and are still incomplete and incompatible with Xcode  
and the usual Mac configuration so they cannot be used to replace our  
compilers. AFAIK ours are the only complete gfortran compilers for the  
Mac with Apple driver (unfortunately - I'd love to give that  
responsibility to someone else :)).

Cheers,
Simon


> cstrato wrote:
>> Dear Kasper, dear Simon,
>>
>> Thank you both for your help, this was easier than I thought.
>>
>> Since I had already installed "R-2.10.1.pkg" all I needed to do was:
>> $ R --arch=x86_64 --no-multiarch CMD INSTALL -l ~/Library/R/2.10/ 
>> library xps_1.7.4.tar.gz
>> * installing *source* package 'xps' ...
>> checking for gcc... gcc-4.2 -arch x86_64 -std=gnu99
>> checking for C compiler default output file name... a.out
>> checking whether the C compiler works... yes
>> checking whether we are cross compiling... no
>> checking for suffix of executables...
>> checking for suffix of object files... o
>> checking whether we are using the GNU C compiler... yes
>> checking whether gcc-4.2 -arch x86_64 -std=gnu99 accepts -g... yes
>> checking for gcc-4.2 -arch x86_64 -std=gnu99 option to accept ANSI  
>> C... none needed
>> checking how to run the C preprocessor... gcc-4.2 -arch x86_64 - 
>> std=gnu99 -E
>> checking for gcc... (cached) gcc-4.2 -arch x86_64 -std=gnu99
>> checking whether we are using the GNU C compiler... (cached) yes
>> checking whether gcc-4.2 -arch x86_64 -std=gnu99 accepts -g...  
>> (cached) yes
>> checking for gcc-4.2 -arch x86_64 -std=gnu99 option to accept ANSI  
>> C... (cached) none needed
>> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
>> ** libs
>> ** arch - x86_64
>>
>> Now xps compiles for 64 bit and starting R with:
>> $ R --arch=x86_64
>> I am able to load my package:
>> > library(xps)
>>
>> Welcome to xps version 1.7.4
>>   an R wrapper for XPS - eXpression Profiling System
>>   (c) Copyright 2001-2009 by Christian Stratowa
>>
>>
>> Now one final question remains, which is a question of a user of  
>> xps who has started the whole discussion since he has compiled ROOT  
>> as 64 bit and wanted to install xps using:
>> > biocLite("xps", type = "source")
>> I assume that when I start R using "R --arch=x86_64" then every  
>> package is compiled as 64 bit automatically.
>>
>> Best regards
>> Christian
>>
>>
>>
>> Simon Urbanek wrote:
>>>
>>> On Jan 26, 2010, at 15:24 , cstrato wrote:
>>>
>>>> Dear Simon,
>>>>
>>>> Meanwhile I have tried to install xps:
>>>> $ R CMD INSTALL -l ~/Library/R/2.10/library xps_1.7.4.tar.gz
>>>> * installing *source* package 'xps' ...
>>>> checking for gcc... gcc-4.2 -arch i386 -std=gnu99
>>>> checking for C compiler default output file name... a.out
>>>> checking whether the C compiler works... yes
>>>> checking whether we are cross compiling... no
>>>> checking for suffix of executables...
>>>> checking for suffix of object files... o
>>>> checking whether we are using the GNU C compiler... yes
>>>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... yes
>>>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI  
>>>> C... none needed
>>>> checking how to run the C preprocessor... gcc-4.2 -arch i386 - 
>>>> std=gnu99 -E
>>>> checking for gcc... (cached) gcc-4.2 -arch i386 -std=gnu99
>>>> checking whether we are using the GNU C compiler... (cached) yes
>>>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g...  
>>>> (cached) yes
>>>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI  
>>>> C... (cached) none needed
>>>> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
>>>> ** libs
>>>> ** arch - i386
>>>>
>>>> As you can see it compiles using the wrong architecture:
>>>
>>> Well, you're running the wrong architecture ... As I said when you  
>>> want to link, you have to use 64-bit.
>>>
>>>
>>>> > library(xps)
>>>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>>> unable to load shared library '/Users/rabbitus/Library/R/2.10/ 
>>>> library/xps/libs/i386/xps.so':
>>>> dlopen(/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/ 
>>>> xps.so, 6): no suitable image found.  Did find:
>>>>      /Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so:  
>>>> mach-o, but wrong architecture
>>>> Error: package/namespace load failed for 'xps'
>>>> >
>>>>
>>>> In my file "config.in" I have the following lines:
>>>> # See "Writing R Extensions"
>>>> : ${R_HOME=`R RHOME`}
>>>> if test -z "${R_HOME}"; then
>>>> echo "could not determine R_HOME"
>>>> exit 1
>>>> fi
>>>> CC=`"${R_HOME}/bin/R" CMD config CC`
>>>> CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
>>>> AC_PROG_CPP
>>>> AC_PROG_CC
>>>>
>>>> Thus I assume that I need to use 64 bit R so that the flags are  
>>>> set correctly. Is this correct?
>>>>
>>>
>>> You have to use 64-bit R if you want to link to a 64-bit program -  
>>> as I said.
>>>
>>>
>>>> If yes, can I use: http://r.research.att.com/R-GUI-5548-2.10-leopard-Leopard64.dmg
>>>> or do I need to build 64 bit R from source?
>>>>
>>>
>>> Neither - just pick it from CRAN - it's the first download in the  
>>> list. Note that you still have to run 64-bit R -- e.g. R -- 
>>> arch=x86_64
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>
>>>>
>>>>
>>>> Simon Urbanek wrote:
>>>>> On Jan 25, 2010, at 5:34 PM, cstrato wrote:
>>>>>
>>>>>
>>>>>> Dear Simon,
>>>>>>
>>>>>> Thank you, with this version I could finally compile ROOT as 64  
>>>>>> bit.
>>>>>>
>>>>>> Now I have one more question:
>>>>>> When I do "R CMD Install xps.tar.gz" which now depends on 64  
>>>>>> bit ROOT, do I need to install the 64 bit version of R or can I  
>>>>>> use the current R version?
>>>>>>
>>>>>>
>>>>>
>>>>> I have no idea since I don't know your package. If you *link* to  
>>>>> ROOT then yes, you have to use 64-bit R to load 64-bit code.  
>>>>> (Linking in itself can be quite interesting given the flags ROOT  
>>>>> uses, so your journey may not end there ;)).
>>>>>
>>>>> Cheers,
>>>>> Simon
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>> Best regards
>>>>>> Christian
>>>>>>
>>>>>>
>>>>>> Simon Urbanek wrote:
>>>>>>
>>>>>>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>>>>>>>
>>>>>>>
>>>>>>>> Dear Simon,
>>>>>>>>
>>>>>>>> Thank you for your suggestions, which I have just tried.  
>>>>>>>> Sadly the error remains the same.
>>>>>>>>
>>>>>>>> The problem seems to be that for some reason  
>>>>>>>> "gfortran-4.2-5564-darwin9.tar.gz" does not have a "/usr/lib/ 
>>>>>>>> gcc/i686-apple-darwin9/4.2.1/x86_64" directory containing  
>>>>>>>> libgfortranbegin.a. For this reason the 64 bit version of  
>>>>>>>> libgfortranbegin.a is not installed in the corresponding  
>>>>>>>> directory x86_64 which contains only libgcc.a etc.
>>>>>>>>
>>>>>>>>
>>>>>>> Oh ... that's a surprise - it should be there, sorry. Ok, so  
>>>>>>> please use the more recent 5566 build:
>>>>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>>>>>>>
>>>>>>> that one has the x86_64 files - I checked:
>>>>>>> ginaz:~$ curl -s -S http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz 
>>>>>>>  | tar fvtz - | grep gfortran.a
>>>>>>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 usr/lib/gcc/ 
>>>>>>> i686-apple-darwin9/4.2.1/libgfortran.a
>>>>>>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 usr/lib/gcc/ 
>>>>>>> powerpc-apple-darwin9/4.2.1/libgfortran.a
>>>>>>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 usr/lib/gcc/ 
>>>>>>> i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>>>>>>>
>>>>>>> (Ideally you should install Xcode 3.1.2 for this since that is  
>>>>>>> where the 5566 build comes from, but it will probably work  
>>>>>>> even if the builds don't match perfectly).
>>>>>>>
>>>>>>> Cheers,
>>>>>>> Simon
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> You can see this by double-clicking on "gfortran-4.2-5564- 
>>>>>>>> darwin9.tar.gz" when located in some directory.
>>>>>>>>
>>>>>>>> In contrast, "gfortran-4.2.3.dmg" did install  
>>>>>>>> libgfortranbegin.a in the "/usr/local/lib/gcc/i686-apple- 
>>>>>>>> darwin9/4.2.1/x86_64" directory.
>>>>>>>>
>>>>>>>> Could you please check or tell me what the reason might be?
>>>>>>>>
>>>>>>>> I have installed it using:
>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>
>>>>>>>> Best regards
>>>>>>>> Christian
>>>>>>>>
>>>>>>>>
>>>>>>>> Simon Urbanek wrote:
>>>>>>>>
>>>>>>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Dear Kasper,
>>>>>>>>>>
>>>>>>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD  
>>>>>>>>>> flags I did:
>>>>>>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch  
>>>>>>>>>> x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> You don't really need the override - it works without and  
>>>>>>>>> they add -m64 anyway so the -arch gets essentially ignored.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> The error was still the same:
>>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such  
>>>>>>>>>> file or directory
>>>>>>>>>>
>>>>>>>>>> However, when I replaced in the Makefile.macosx64:
>>>>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file- 
>>>>>>>>>> name=libgfortran.dylib)
>>>>>>>>>> F77LIBS      += $(shell $(F77) -m64 -print-file- 
>>>>>>>>>> name=libgfortranbegin.a)
>>>>>>>>>> with:
>>>>>>>>>> F77LIBS      := $(shell $(F77) -m64 -print-file- 
>>>>>>>>>> name=libgfortranbegin.a)
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> You found the right spot but your fix is wrong - just remove  
>>>>>>>>> the two lines, they are superfluous and only cause trouble.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> the error disappeared, and I could finish the compilation.
>>>>>>>>>>
>>>>>>>>>> However, now I got a link-error:
>>>>>>>>>> ld warning: in /usr/lib/gcc/i686-apple-darwin9/4.2.1/ 
>>>>>>>>>> libgfortranbegin.a, file is not of required architecture
>>>>>>>>>> Undefined symbols:
>>>>>>>>>> "_main", referenced from:
>>>>>>>>>> start in crt1.10.5.o
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> Your'e getting the 32-bit version (of the wrong file - see  
>>>>>>>>> above). It should really be ../4.2.1/x86_64/lib...
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> I am not sure what this error means since Makefile.macosx64  
>>>>>>>>>> contains:
>>>>>>>>>> F77FLAGS      = -m64 -std=legacy
>>>>>>>>>>
>>>>>>>>>> Could it be that libgfortranbegin.a can only be used for  
>>>>>>>>>> 32bit compilation?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> No, you're picking the wrong one - there is one for each  
>>>>>>>>> architecture.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Furthermore, I still have the question (and hopefully Simon  
>>>>>>>>>> will answer it):
>>>>>>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any  
>>>>>>>>>> libgfortran.dylib files?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> Because it's using a static library.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I  
>>>>>>>>>> get the answer that NO results were found, while googling "/ 
>>>>>>>>>> usr/local/lib/libgfortran.dylib" gives many results. Thus  
>>>>>>>>>> it seems that there will never be any libgfortran.dylib in  
>>>>>>>>>> "/usr/lib/"!?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> Nope - OS X has no Fortran by default.
>>>>>>>>>
>>>>>>>>> Cheers,
>>>>>>>>> Simon
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> I must admit that I do not understand this issue.
>>>>>>>>>>
>>>>>>>>>> Best regards
>>>>>>>>>> Christian
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> Dear Kasper,
>>>>>>>>>>>>
>>>>>>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>>>>>>> Since gcc_select does no longer exist on Leopard I had to  
>>>>>>>>>>>> do:
>>>>>>>>>>>> cd /usr/bin
>>>>>>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>> I am not sure this is advisable in general.  When I  
>>>>>>>>>>> compile stuff with gcc-4.2 I usually explicitly set
>>>>>>>>>>> CC=/usr/bin/gcc-4.2
>>>>>>>>>>> when I run configure.  For example, my entire configure  
>>>>>>>>>>> line for R on my macbook is
>>>>>>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>>>>>>        CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>>>>>>        CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>>>>>>        CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>>>>>>        CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>>>        OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>>>>>>        F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>>>        FFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>>>        FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>>>        FCFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>>>        --x-includes=/usr/X11/include --x-libraries=/usr/ 
>>>>>>>>>>> X11/lib \
>>>>>>>>>>>        --with-system-zlib \
>>>>>>>>>>>        --with-blas='-framework vecLib' --with-lapack
>>>>>>>>>>> Of course this requires that ROOT uses the CC/CFLAGS  
>>>>>>>>>>> macros, but that should be pretty standard if it uses  
>>>>>>>>>>> autoconf.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such  
>>>>>>>>>>>> file or directory
>>>>>>>>>>>>
>>>>>>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>>>>>>> $ cd /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../ 
>>>>>>>>>>>> x86_64
>>>>>>>>>>>> $ ls -al
>>>>>>>>>>>> total 32
>>>>>>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 libgfortran. 
>>>>>>>>>>>> 2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 libgfortran. 
>>>>>>>>>>>> 2.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26  
>>>>>>>>>>>> libgfortran.a -> ../libgfortran.a
>>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26  
>>>>>>>>>>>> libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>>>>
>>>>>>>>>>>> This means that /usr/local/bin does contain  
>>>>>>>>>>>> libgfortran.dylib whereas /usr/bin does not contain any  
>>>>>>>>>>>> of these files or links.
>>>>>>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these  
>>>>>>>>>>>> file for libgfortran.dylib while gfortran-4.2-5564- 
>>>>>>>>>>>> darwin9.tar.gz does not contain these files?
>>>>>>>>>>>> How do I get libgfortran.dylib?
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>> Simon might be able to answer this better, but the general  
>>>>>>>>>>> idea is that the
>>>>>>>>>>>
>>>>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>> installs into /usr/bin
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> gfortran-4.2.3.dmg
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>> installs into /usr/local/bin.  There is some logic here,  
>>>>>>>>>>> the way I think about it is that the former is a direct  
>>>>>>>>>>> extension of the Apple build.
>>>>>>>>>>>
>>>>>>>>>>> I would start from scratch, which means remove all traces  
>>>>>>>>>>> of both gfortrans, install the 5564-tarball and then set  
>>>>>>>>>>> the various macros as I have set it above for R (your  
>>>>>>>>>>> exact values may of course be different depending on what  
>>>>>>>>>>> machine etc. you are using).
>>>>>>>>>>>
>>>>>>>>>>> Kasper
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> BTW, I must apologize to Simon. On his website he lists  
>>>>>>>>>>>> the commands how to install gfortran.tar.gz, but in the  
>>>>>>>>>>>> Tiger section, so I did miss it. Nevertheless it would  
>>>>>>>>>>>> still be helpful for Mac users to know how to uninstall it:
>>>>>>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1  
>>>>>>>>>>>> rm -d)
>>>>>>>>>>>>
>>>>>>>>>>>> Best regards
>>>>>>>>>>>> Christian
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> Remember that Apple has two version of GCC on Leopard:  
>>>>>>>>>>>>> 4.0 and 4.2.  You are using 4.0, you might want to  
>>>>>>>>>>>>> switch to 4.2.  In Tiger there used to be gcc_select (or  
>>>>>>>>>>>>> select_gcc) that let you choose between 3.x and 4.0, I  
>>>>>>>>>>>>> don't remember if that is still around on Leopard.
>>>>>>>>>>>>>
>>>>>>>>>>>>> The error seems to indicate that you need 4.2 in order  
>>>>>>>>>>>>> to use Simon's gfortran.
>>>>>>>>>>>>>
>>>>>>>>>>>>> Kasper
>>>>>>>>>>>>>
>>>>>>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Thank you for this information.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz  
>>>>>>>>>>>>>> on Leopard and tried to compile ROOT again, but this  
>>>>>>>>>>>>>> time I got the following error:
>>>>>>>>>>>>>> g++ -dynamiclib -single_module -undefined  
>>>>>>>>>>>>>> dynamic_lookup -install_name @rpath/libminicern.so -O2 - 
>>>>>>>>>>>>>> m64 -o lib/libminicern.so misc/minicern/src/cernlib.o - 
>>>>>>>>>>>>>> ldl misc/minicern/src/hbook.o misc/minicern/src/ 
>>>>>>>>>>>>>> kernlib.o misc/minicern/src/zebra.o libgfortran.dylib / 
>>>>>>>>>>>>>> usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No  
>>>>>>>>>>>>>> such file or directory
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> I know that this is not necessarily an R-related  
>>>>>>>>>>>>>> question but I would greatly appreciate your help if  
>>>>>>>>>>>>>> possible (at least it is a Mac- and somehow a BioC- 
>>>>>>>>>>>>>> related question).
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> When I have tried to compile ROOT with  
>>>>>>>>>>>>>> gfortran-4.2.3.dmg I got the following error:
>>>>>>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib  
>>>>>>>>>>>>>> lib/libminicern.so /usr/local/lib/gcc/i686-apple- 
>>>>>>>>>>>>>> darwin8/4.2.3/../../../x86_64/libgfortran.dylib /usr/ 
>>>>>>>>>>>>>> local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/ 
>>>>>>>>>>>>>> libgfortranbegin.a -lm -Wl,-rpath, at loader_path/../ 
>>>>>>>>>>>>>> lib    -pthread -ldl
>>>>>>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X  
>>>>>>>>>>>>>> 10.5 or later
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> As you can see gfortran-4.2.3 could find  
>>>>>>>>>>>>>> libgfortran.dylib at:
>>>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../ 
>>>>>>>>>>>>>> x86_64/libgfortran.dylib while gfortran-4.2.4 could not  
>>>>>>>>>>>>>> find libgfortran.dylib.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Thus maybe I did make a mistake when installing  
>>>>>>>>>>>>>> gfortran-4.2.4. Here is what I did:
>>>>>>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Do you know what I need to do so that libgfortran.dylib  
>>>>>>>>>>>>>> can be found?
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> P.S.:Since many Mac users are no Unix experts please  
>>>>>>>>>>>>>> allow me to suggest to place on your website the  
>>>>>>>>>>>>>> commands to install/uninstall gfortran. I have found  
>>>>>>>>>>>>>> the following website, which told me how to install  
>>>>>>>>>>>>>> gfortran and how I could uninstall it:
>>>>>>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Thank you in advance.
>>>>>>>>>>>>>> Best regards
>>>>>>>>>>>>>> Christian
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> One more question:
>>>>>>>>>>>>>>>> I have just unzipped gfortran-4.2-5564- 
>>>>>>>>>>>>>>>> darwin9.tar.gz. The version gives:
>>>>>>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>>>>>>> Configured with: /Builds/gcc/gcc_42-5564/build/obj/ 
>>>>>>>>>>>>>>>> src/configure --disable-checking --enable-werror -- 
>>>>>>>>>>>>>>>> prefix=/usr --mandir=/usr/share/man --enable- 
>>>>>>>>>>>>>>>> languages=c,objc,c++,obj-c++,fortran --program- 
>>>>>>>>>>>>>>>> transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-gxx- 
>>>>>>>>>>>>>>>> include-dir=/usr/include/c++/4.0.0 --with-slibdir=/ 
>>>>>>>>>>>>>>>> usr/lib --build=i686-apple-darwin9 --host=i686-apple- 
>>>>>>>>>>>>>>>> darwin9 --target=i686-apple-darwin9
>>>>>>>>>>>>>>>> Thread model: posix
>>>>>>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> This means that this version seems to be older than  
>>>>>>>>>>>>>>>> the one I am using now?
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to.  
>>>>>>>>>>>>>>> The "gcc version 4.2.1" comes from Apple's Xcode 3.1  
>>>>>>>>>>>>>>> gcc-4.2 branch since that is what they define - it  
>>>>>>>>>>>>>>> just adds Fortran support to the existing gcc 4.2.1  
>>>>>>>>>>>>>>> branch of Apple that you installed as Xcode. However,  
>>>>>>>>>>>>>>> the Fortran part is merged from the GNU Fortran 4.2.4  
>>>>>>>>>>>>>>> release - hence I refer to it as 4.2.4.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>>>>>>> My Bioconductor package xps requires both R and  
>>>>>>>>>>>>>>>>>> ROOT, whereby I compile ROOT usually from source.  
>>>>>>>>>>>>>>>>>> Until now this has not been a problem since I do  
>>>>>>>>>>>>>>>>>> all my development on Tiger. However, now I wanted  
>>>>>>>>>>>>>>>>>> to compile ROOT on Leopard but failed since my  
>>>>>>>>>>>>>>>>>> gfortran compiler is too old, see:
>>>>>>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 
>>>>>>>>>>>>>>>>>>  To solve the problem I should upgrade to the  
>>>>>>>>>>>>>>>>>> latest version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> I would advise against that - using gcc from Fink  
>>>>>>>>>>>>>>>>> usually calls for a disaster. The real solution is  
>>>>>>>>>>>>>>>>> to fix their flags, but that's another story ...
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>>>>>>> Can I also use this version for R or do I need to  
>>>>>>>>>>>>>>>>>> use the version downloaded from att?
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4  
>>>>>>>>>>>>>>>>> for Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>>
>>>>>
>>>>
>>>>
>>>
>>>
>>
>>
>
>


From cstrato at aon.at  Fri Jan 29 20:25:42 2010
From: cstrato at aon.at (cstrato)
Date: Fri, 29 Jan 2010 20:25:42 +0100
Subject: [R-SIG-Mac] Which gfortran for Leopard?
In-Reply-To: <0CA5B91D-0C4A-4860-8FAC-65F983D4ED45@r-project.org>
References: <4B58AF34.1030303@aon.at>
	<F003D724-5779-49F6-B7F9-9AA989934B79@r-project.org>
	<4B58BF96.3070304@aon.at>
	<6DC07929-2D80-43CB-82B0-C60A434BB4E0@r-project.org>
	<4B5A12C0.70909@aon.at>
	<855DE91C-2D16-496D-9B38-3A872E3E2420@stat.berkeley.edu>
	<4B5AFBAB.4070800@aon.at>
	<E6FD36C1-DDCD-4A21-8F2E-E4A0CDA27FCF@stat.berkeley.edu>
	<4B5CAD5B.6000806@aon.at>
	<CDFD650B-FB96-42E8-8A1F-80A3AAD8BA56@r-project.org>
	<4B5DF90F.4030809@aon.at>
	<20AA696B-BB18-4E66-90BD-4E4E1D9A0316@r-project.org>
	<4B5E1C7B.3080402@aon.at>
	<4FED956C-543C-43C8-99FC-0E712624E48F@r-project.org>
	<4B5F4F86.9010906@aon.at>
	<5C98F8A8-B6E9-499D-8073-96C242A2B108@r-project.org>
	<4B5F6437.7040906@aon.at> <4B632DA6.1060109@aon.at>
	<0CA5B91D-0C4A-4860-8FAC-65F983D4ED45@r-project.org>
Message-ID: <4B633636.3060400@aon.at>

Dear Simon,

Thank you for your answer which is really helpful for me.

Best regards
Christian

Simon Urbanek wrote:
>
> On Jan 29, 2010, at 13:49 , cstrato wrote:
>
>> Dear Simon,
>>
>> As a subscriber to RootTalk I have just received the following mail:
>> http://root.cern.ch/root/roottalk/roottalk10/0122.html
>>
>> As you see there are other Mac users of ROOT who do not want to use 
>> fink but another gfortran compiler.
>> I seems that besides gfortran from your website, the following 
>> gfortran can also be used:
>> http://www.macresearch.org/gfortran-leopard
>>
>> My question now is:
>> Can gfortran from macresearch also be used to compile R 32 bit and 64 
>> bit?
>>
>
> Pretty much any compiler including fink can be used to compile R so 
> the answer specifically to your question is yes. However it will be 
> incompatible with any binaries we provide.
>
> The compilers from macresearch.org seem to be the same that used to be 
> on the HPC site and are still incomplete and incompatible with Xcode 
> and the usual Mac configuration so they cannot be used to replace our 
> compilers. AFAIK ours are the only complete gfortran compilers for the 
> Mac with Apple driver (unfortunately - I'd love to give that 
> responsibility to someone else :)).
>
> Cheers,
> Simon
>
>
>> cstrato wrote:
>>> Dear Kasper, dear Simon,
>>>
>>> Thank you both for your help, this was easier than I thought.
>>>
>>> Since I had already installed "R-2.10.1.pkg" all I needed to do was:
>>> $ R --arch=x86_64 --no-multiarch CMD INSTALL -l 
>>> ~/Library/R/2.10/library xps_1.7.4.tar.gz
>>> * installing *source* package 'xps' ...
>>> checking for gcc... gcc-4.2 -arch x86_64 -std=gnu99
>>> checking for C compiler default output file name... a.out
>>> checking whether the C compiler works... yes
>>> checking whether we are cross compiling... no
>>> checking for suffix of executables...
>>> checking for suffix of object files... o
>>> checking whether we are using the GNU C compiler... yes
>>> checking whether gcc-4.2 -arch x86_64 -std=gnu99 accepts -g... yes
>>> checking for gcc-4.2 -arch x86_64 -std=gnu99 option to accept ANSI 
>>> C... none needed
>>> checking how to run the C preprocessor... gcc-4.2 -arch x86_64 
>>> -std=gnu99 -E
>>> checking for gcc... (cached) gcc-4.2 -arch x86_64 -std=gnu99
>>> checking whether we are using the GNU C compiler... (cached) yes
>>> checking whether gcc-4.2 -arch x86_64 -std=gnu99 accepts -g... 
>>> (cached) yes
>>> checking for gcc-4.2 -arch x86_64 -std=gnu99 option to accept ANSI 
>>> C... (cached) none needed
>>> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
>>> ** libs
>>> ** arch - x86_64
>>>
>>> Now xps compiles for 64 bit and starting R with:
>>> $ R --arch=x86_64
>>> I am able to load my package:
>>> > library(xps)
>>>
>>> Welcome to xps version 1.7.4
>>>   an R wrapper for XPS - eXpression Profiling System
>>>   (c) Copyright 2001-2009 by Christian Stratowa
>>>
>>>
>>> Now one final question remains, which is a question of a user of xps 
>>> who has started the whole discussion since he has compiled ROOT as 
>>> 64 bit and wanted to install xps using:
>>> > biocLite("xps", type = "source")
>>> I assume that when I start R using "R --arch=x86_64" then every 
>>> package is compiled as 64 bit automatically.
>>>
>>> Best regards
>>> Christian
>>>
>>>
>>>
>>> Simon Urbanek wrote:
>>>>
>>>> On Jan 26, 2010, at 15:24 , cstrato wrote:
>>>>
>>>>> Dear Simon,
>>>>>
>>>>> Meanwhile I have tried to install xps:
>>>>> $ R CMD INSTALL -l ~/Library/R/2.10/library xps_1.7.4.tar.gz
>>>>> * installing *source* package 'xps' ...
>>>>> checking for gcc... gcc-4.2 -arch i386 -std=gnu99
>>>>> checking for C compiler default output file name... a.out
>>>>> checking whether the C compiler works... yes
>>>>> checking whether we are cross compiling... no
>>>>> checking for suffix of executables...
>>>>> checking for suffix of object files... o
>>>>> checking whether we are using the GNU C compiler... yes
>>>>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... yes
>>>>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI 
>>>>> C... none needed
>>>>> checking how to run the C preprocessor... gcc-4.2 -arch i386 
>>>>> -std=gnu99 -E
>>>>> checking for gcc... (cached) gcc-4.2 -arch i386 -std=gnu99
>>>>> checking whether we are using the GNU C compiler... (cached) yes
>>>>> checking whether gcc-4.2 -arch i386 -std=gnu99 accepts -g... 
>>>>> (cached) yes
>>>>> checking for gcc-4.2 -arch i386 -std=gnu99 option to accept ANSI 
>>>>> C... (cached) none needed
>>>>> found ROOT version 5.24/00 in directory /Users/rabbitus/ROOT/root
>>>>> ** libs
>>>>> ** arch - i386
>>>>>
>>>>> As you can see it compiles using the wrong architecture:
>>>>
>>>> Well, you're running the wrong architecture ... As I said when you 
>>>> want to link, you have to use 64-bit.
>>>>
>>>>
>>>>> > library(xps)
>>>>> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>>>>> unable to load shared library 
>>>>> '/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so':
>>>>> dlopen(/Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so, 
>>>>> 6): no suitable image found.  Did find:
>>>>>      /Users/rabbitus/Library/R/2.10/library/xps/libs/i386/xps.so: 
>>>>> mach-o, but wrong architecture
>>>>> Error: package/namespace load failed for 'xps'
>>>>> >
>>>>>
>>>>> In my file "config.in" I have the following lines:
>>>>> # See "Writing R Extensions"
>>>>> : ${R_HOME=`R RHOME`}
>>>>> if test -z "${R_HOME}"; then
>>>>> echo "could not determine R_HOME"
>>>>> exit 1
>>>>> fi
>>>>> CC=`"${R_HOME}/bin/R" CMD config CC`
>>>>> CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
>>>>> AC_PROG_CPP
>>>>> AC_PROG_CC
>>>>>
>>>>> Thus I assume that I need to use 64 bit R so that the flags are 
>>>>> set correctly. Is this correct?
>>>>>
>>>>
>>>> You have to use 64-bit R if you want to link to a 64-bit program - 
>>>> as I said.
>>>>
>>>>
>>>>> If yes, can I use: 
>>>>> http://r.research.att.com/R-GUI-5548-2.10-leopard-Leopard64.dmg
>>>>> or do I need to build 64 bit R from source?
>>>>>
>>>>
>>>> Neither - just pick it from CRAN - it's the first download in the 
>>>> list. Note that you still have to run 64-bit R -- e.g. R --arch=x86_64
>>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>>
>>>>
>>>>>
>>>>>
>>>>> Simon Urbanek wrote:
>>>>>> On Jan 25, 2010, at 5:34 PM, cstrato wrote:
>>>>>>
>>>>>>
>>>>>>> Dear Simon,
>>>>>>>
>>>>>>> Thank you, with this version I could finally compile ROOT as 64 
>>>>>>> bit.
>>>>>>>
>>>>>>> Now I have one more question:
>>>>>>> When I do "R CMD Install xps.tar.gz" which now depends on 64 bit 
>>>>>>> ROOT, do I need to install the 64 bit version of R or can I use 
>>>>>>> the current R version?
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> I have no idea since I don't know your package. If you *link* to 
>>>>>> ROOT then yes, you have to use 64-bit R to load 64-bit code. 
>>>>>> (Linking in itself can be quite interesting given the flags ROOT 
>>>>>> uses, so your journey may not end there ;)).
>>>>>>
>>>>>> Cheers,
>>>>>> Simon
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> Best regards
>>>>>>> Christian
>>>>>>>
>>>>>>>
>>>>>>> Simon Urbanek wrote:
>>>>>>>
>>>>>>>> On Jan 25, 2010, at 15:03 , cstrato wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>> Dear Simon,
>>>>>>>>>
>>>>>>>>> Thank you for your suggestions, which I have just tried. Sadly 
>>>>>>>>> the error remains the same.
>>>>>>>>>
>>>>>>>>> The problem seems to be that for some reason 
>>>>>>>>> "gfortran-4.2-5564-darwin9.tar.gz" does not have a 
>>>>>>>>> "/usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory 
>>>>>>>>> containing libgfortranbegin.a. For this reason the 64 bit 
>>>>>>>>> version of libgfortranbegin.a is not installed in the 
>>>>>>>>> corresponding directory x86_64 which contains only libgcc.a etc.
>>>>>>>>>
>>>>>>>>>
>>>>>>>> Oh ... that's a surprise - it should be there, sorry. Ok, so 
>>>>>>>> please use the more recent 5566 build:
>>>>>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz
>>>>>>>>
>>>>>>>> that one has the x86_64 files - I checked:
>>>>>>>> ginaz:~$ curl -s -S 
>>>>>>>> http://r.research.att.com/tools/gfortran-4.2-5566-darwin9.tar.gz | 
>>>>>>>> tar fvtz - | grep gfortran.a
>>>>>>>> -rw-r--r-- root/wheel  3592608 2008-12-24 14:51:33 
>>>>>>>> usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortran.a
>>>>>>>> -rw-r--r-- root/wheel  3870032 2008-12-24 14:51:33 
>>>>>>>> usr/lib/gcc/powerpc-apple-darwin9/4.2.1/libgfortran.a
>>>>>>>> -rw-r--r-- root/wheel  5002152 2008-12-24 14:51:33 
>>>>>>>> usr/lib/gcc/i686-apple-darwin9/4.2.1/x86_64/libgfortran.a
>>>>>>>>
>>>>>>>> (Ideally you should install Xcode 3.1.2 for this since that is 
>>>>>>>> where the 5566 build comes from, but it will probably work even 
>>>>>>>> if the builds don't match perfectly).
>>>>>>>>
>>>>>>>> Cheers,
>>>>>>>> Simon
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> You can see this by double-clicking on 
>>>>>>>>> "gfortran-4.2-5564-darwin9.tar.gz" when located in some 
>>>>>>>>> directory.
>>>>>>>>>
>>>>>>>>> In contrast, "gfortran-4.2.3.dmg" did install 
>>>>>>>>> libgfortranbegin.a in the 
>>>>>>>>> "/usr/local/lib/gcc/i686-apple-darwin9/4.2.1/x86_64" directory.
>>>>>>>>>
>>>>>>>>> Could you please check or tell me what the reason might be?
>>>>>>>>>
>>>>>>>>> I have installed it using:
>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>
>>>>>>>>> Best regards
>>>>>>>>> Christian
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>
>>>>>>>>>> On Jan 24, 2010, at 3:28 PM, cstrato wrote:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Dear Kasper,
>>>>>>>>>>>
>>>>>>>>>>> You are right. Since ROOT supports the CC, CXX, F77 and LD 
>>>>>>>>>>> flags I did:
>>>>>>>>>>> ./configure macosx64 --with-cxx="/usr/bin/g++-4.2 -arch 
>>>>>>>>>>> x86_64" --with-f77="/usr/bin/gfortran-4.2 -arch x86_64"
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> You don't really need the override - it works without and 
>>>>>>>>>> they add -m64 anyway so the -arch gets essentially ignored.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> The error was still the same:
>>>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such 
>>>>>>>>>>> file or directory
>>>>>>>>>>>
>>>>>>>>>>> However, when I replaced in the Makefile.macosx64:
>>>>>>>>>>> F77LIBS      := $(shell $(F77) -m64 
>>>>>>>>>>> -print-file-name=libgfortran.dylib)
>>>>>>>>>>> F77LIBS      += $(shell $(F77) -m64 
>>>>>>>>>>> -print-file-name=libgfortranbegin.a)
>>>>>>>>>>> with:
>>>>>>>>>>> F77LIBS      := $(shell $(F77) -m64 
>>>>>>>>>>> -print-file-name=libgfortranbegin.a)
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> You found the right spot but your fix is wrong - just remove 
>>>>>>>>>> the two lines, they are superfluous and only cause trouble.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> the error disappeared, and I could finish the compilation.
>>>>>>>>>>>
>>>>>>>>>>> However, now I got a link-error:
>>>>>>>>>>> ld warning: in 
>>>>>>>>>>> /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a, 
>>>>>>>>>>> file is not of required architecture
>>>>>>>>>>> Undefined symbols:
>>>>>>>>>>> "_main", referenced from:
>>>>>>>>>>> start in crt1.10.5.o
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> Your'e getting the 32-bit version (of the wrong file - see 
>>>>>>>>>> above). It should really be ../4.2.1/x86_64/lib...
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> I am not sure what this error means since Makefile.macosx64 
>>>>>>>>>>> contains:
>>>>>>>>>>> F77FLAGS      = -m64 -std=legacy
>>>>>>>>>>>
>>>>>>>>>>> Could it be that libgfortranbegin.a can only be used for 
>>>>>>>>>>> 32bit compilation?
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> No, you're picking the wrong one - there is one for each 
>>>>>>>>>> architecture.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Furthermore, I still have the question (and hopefully Simon 
>>>>>>>>>>> will answer it):
>>>>>>>>>>> Why does gfortran-4.2-5564-darwin9.tar.gz not contain any 
>>>>>>>>>>> libgfortran.dylib files?
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> Because it's using a static library.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Interestingly, when googling "/usr/lib/libgfortran.dylib" I 
>>>>>>>>>>> get the answer that NO results were found, while googling 
>>>>>>>>>>> "/usr/local/lib/libgfortran.dylib" gives many results. Thus 
>>>>>>>>>>> it seems that there will never be any libgfortran.dylib in 
>>>>>>>>>>> "/usr/lib/"!?
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> Nope - OS X has no Fortran by default.
>>>>>>>>>>
>>>>>>>>>> Cheers,
>>>>>>>>>> Simon
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> I must admit that I do not understand this issue.
>>>>>>>>>>>
>>>>>>>>>>> Best regards
>>>>>>>>>>> Christian
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> On Jan 23, 2010, at 8:37 AM, cstrato wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> Dear Kasper,
>>>>>>>>>>>>>
>>>>>>>>>>>>> Thank you for your suggestion, I did indeed use gcc 4.0.
>>>>>>>>>>>>> Since gcc_select does no longer exist on Leopard I had to do:
>>>>>>>>>>>>> cd /usr/bin
>>>>>>>>>>>>> sudo ln -s gcc-4.2 gcc
>>>>>>>>>>>>> sudo ln -s g++-4.2 g++
>>>>>>>>>>>>> sudo ln -s gcov-4.2 gcov
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>> I am not sure this is advisable in general.  When I compile 
>>>>>>>>>>>> stuff with gcc-4.2 I usually explicitly set
>>>>>>>>>>>> CC=/usr/bin/gcc-4.2
>>>>>>>>>>>> when I run configure.  For example, my entire configure 
>>>>>>>>>>>> line for R on my macbook is
>>>>>>>>>>>> ../${SRCDIR}/configure SHELL='/bin/bash' \
>>>>>>>>>>>>        CC="/usr/bin/gcc-4.2 -arch x86_64 -std=gnu99" \
>>>>>>>>>>>>        CFLAGS="-g -O2 -std=gnu99 -march=nocona" \
>>>>>>>>>>>>        CXX="/usr/bin/g++-4.2 -arch x86_64" \
>>>>>>>>>>>>        CXXFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>>>>        OBJC="/usr/bin/gcc-4.2 -arch x86_64" \
>>>>>>>>>>>>        F77="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>>>>        FFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>>>>        FC="/usr/bin/gfortran-4.2 -arch x86_64" \
>>>>>>>>>>>>        FCFLAGS="-g -O2 -march=nocona" \
>>>>>>>>>>>>        --x-includes=/usr/X11/include 
>>>>>>>>>>>> --x-libraries=/usr/X11/lib \
>>>>>>>>>>>>        --with-system-zlib \
>>>>>>>>>>>>        --with-blas='-framework vecLib' --with-lapack
>>>>>>>>>>>> Of course this requires that ROOT uses the CC/CFLAGS 
>>>>>>>>>>>> macros, but that should be pretty standard if it uses 
>>>>>>>>>>>> autoconf.
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> Sadly, compiling ROOT resulted still in the same error:
>>>>>>>>>>>>> i686-apple-darwin9-g++-4.2.1: libgfortran.dylib: No such 
>>>>>>>>>>>>> file or directory
>>>>>>>>>>>>>
>>>>>>>>>>>>> When I check the location for gfortran-4.2.3.dmg I get:
>>>>>>>>>>>>> $ cd 
>>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64
>>>>>>>>>>>>> $ ls -al
>>>>>>>>>>>>> total 32
>>>>>>>>>>>>> drwxrwxr-x   6 root  wheel   204 Jan 21 20:26 .
>>>>>>>>>>>>> drwxr-xr-x  35 root  wheel  1190 Jan 21 20:26 ..
>>>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    26 Jan 21 20:26 
>>>>>>>>>>>>> libgfortran.2.0.0.dylib -> ../libgfortran.2.0.0.dylib
>>>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 
>>>>>>>>>>>>> libgfortran.2.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    16 Jan 21 20:26 
>>>>>>>>>>>>> libgfortran.a -> ../libgfortran.a
>>>>>>>>>>>>> lrwxr-xr-x   1 root  wheel    23 Jan 21 20:26 
>>>>>>>>>>>>> libgfortran.dylib -> libgfortran.2.0.0.dylib
>>>>>>>>>>>>>
>>>>>>>>>>>>> This means that /usr/local/bin does contain 
>>>>>>>>>>>>> libgfortran.dylib whereas /usr/bin does not contain any of 
>>>>>>>>>>>>> these files or links.
>>>>>>>>>>>>> Does this mean that gfortran-4.2.3.dmg does contain these 
>>>>>>>>>>>>> file for libgfortran.dylib while 
>>>>>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz does not contain these 
>>>>>>>>>>>>> files?
>>>>>>>>>>>>> How do I get libgfortran.dylib?
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>> Simon might be able to answer this better, but the general 
>>>>>>>>>>>> idea is that the
>>>>>>>>>>>>
>>>>>>>>>>>>> gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>> installs into /usr/bin
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> gfortran-4.2.3.dmg
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>> installs into /usr/local/bin.  There is some logic here, 
>>>>>>>>>>>> the way I think about it is that the former is a direct 
>>>>>>>>>>>> extension of the Apple build.
>>>>>>>>>>>>
>>>>>>>>>>>> I would start from scratch, which means remove all traces 
>>>>>>>>>>>> of both gfortrans, install the 5564-tarball and then set 
>>>>>>>>>>>> the various macros as I have set it above for R (your exact 
>>>>>>>>>>>> values may of course be different depending on what machine 
>>>>>>>>>>>> etc. you are using).
>>>>>>>>>>>>
>>>>>>>>>>>> Kasper
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>> BTW, I must apologize to Simon. On his website he lists 
>>>>>>>>>>>>> the commands how to install gfortran.tar.gz, but in the 
>>>>>>>>>>>>> Tiger section, so I did miss it. Nevertheless it would 
>>>>>>>>>>>>> still be helpful for Mac users to know how to uninstall it:
>>>>>>>>>>>>> $ tar -tf gfortran.tar | sort -r | (cd /; xargs -p -n 1 rm 
>>>>>>>>>>>>> -d)
>>>>>>>>>>>>>
>>>>>>>>>>>>> Best regards
>>>>>>>>>>>>> Christian
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> Kasper Daniel Hansen wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Remember that Apple has two version of GCC on Leopard: 
>>>>>>>>>>>>>> 4.0 and 4.2.  You are using 4.0, you might want to switch 
>>>>>>>>>>>>>> to 4.2.  In Tiger there used to be gcc_select (or 
>>>>>>>>>>>>>> select_gcc) that let you choose between 3.x and 4.0, I 
>>>>>>>>>>>>>> don't remember if that is still around on Leopard.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> The error seems to indicate that you need 4.2 in order to 
>>>>>>>>>>>>>> use Simon's gfortran.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Kasper
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> On Jan 22, 2010, at 16:04 PM, cstrato wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Thank you for this information.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Now I have installed gfortran-4.2-5564-darwin9.tar.gz on 
>>>>>>>>>>>>>>> Leopard and tried to compile ROOT again, but this time I 
>>>>>>>>>>>>>>> got the following error:
>>>>>>>>>>>>>>> g++ -dynamiclib -single_module -undefined dynamic_lookup 
>>>>>>>>>>>>>>> -install_name @rpath/libminicern.so -O2 -m64 -o 
>>>>>>>>>>>>>>> lib/libminicern.so misc/minicern/src/cernlib.o -ldl 
>>>>>>>>>>>>>>> misc/minicern/src/hbook.o misc/minicern/src/kernlib.o 
>>>>>>>>>>>>>>> misc/minicern/src/zebra.o libgfortran.dylib 
>>>>>>>>>>>>>>> /usr/lib/gcc/i686-apple-darwin9/4.2.1/libgfortranbegin.a
>>>>>>>>>>>>>>> i686-apple-darwin9-g++-4.0.1: libgfortran.dylib: No such 
>>>>>>>>>>>>>>> file or directory
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> I know that this is not necessarily an R-related 
>>>>>>>>>>>>>>> question but I would greatly appreciate your help if 
>>>>>>>>>>>>>>> possible (at least it is a Mac- and somehow a 
>>>>>>>>>>>>>>> BioC-related question).
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> When I have tried to compile ROOT with 
>>>>>>>>>>>>>>> gfortran-4.2.3.dmg I got the following error:
>>>>>>>>>>>>>>> gfortran -O2 -m64 -o bin/g2root main/src/g2root.o -Llib 
>>>>>>>>>>>>>>> lib/libminicern.so 
>>>>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
>>>>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/x86_64/libgfortranbegin.a 
>>>>>>>>>>>>>>> -lm -Wl,-rpath, at loader_path/../lib    -pthread -ldl
>>>>>>>>>>>>>>> ld: -rpath can only be used when targeting Mac OS X 10.5 
>>>>>>>>>>>>>>> or later
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> As you can see gfortran-4.2.3 could find 
>>>>>>>>>>>>>>> libgfortran.dylib at:
>>>>>>>>>>>>>>> /usr/local/lib/gcc/i686-apple-darwin8/4.2.3/../../../x86_64/libgfortran.dylib 
>>>>>>>>>>>>>>> while gfortran-4.2.4 could not find libgfortran.dylib.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Thus maybe I did make a mistake when installing 
>>>>>>>>>>>>>>> gfortran-4.2.4. Here is what I did:
>>>>>>>>>>>>>>> $ gunzip gfortran-4.2-5564-darwin9.tar.gz
>>>>>>>>>>>>>>> $ sudo tar -xvf gfortran-4.2-5564-darwin9.tar -C /
>>>>>>>>>>>>>>> $ sudo ln -s /usr/bin/gfortran-4.2 /usr/bin/gfortran
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Do you know what I need to do so that libgfortran.dylib 
>>>>>>>>>>>>>>> can be found?
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> P.S.:Since many Mac users are no Unix experts please 
>>>>>>>>>>>>>>> allow me to suggest to place on your website the 
>>>>>>>>>>>>>>> commands to install/uninstall gfortran. I have found the 
>>>>>>>>>>>>>>> following website, which told me how to install gfortran 
>>>>>>>>>>>>>>> and how I could uninstall it:
>>>>>>>>>>>>>>> http://www.webmo.net/support/fortran_osx.html
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Thank you in advance.
>>>>>>>>>>>>>>> Best regards
>>>>>>>>>>>>>>> Christian
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> On Jan 21, 2010, at 15:56 , cstrato wrote:
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> Dear Simon,
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> One more question:
>>>>>>>>>>>>>>>>> I have just unzipped gfortran-4.2-5564-darwin9.tar.gz. 
>>>>>>>>>>>>>>>>> The version gives:
>>>>>>>>>>>>>>>>> Using built-in specs.
>>>>>>>>>>>>>>>>> Target: i686-apple-darwin9
>>>>>>>>>>>>>>>>> Configured with: 
>>>>>>>>>>>>>>>>> /Builds/gcc/gcc_42-5564/build/obj/src/configure 
>>>>>>>>>>>>>>>>> --disable-checking --enable-werror --prefix=/usr 
>>>>>>>>>>>>>>>>> --mandir=/usr/share/man 
>>>>>>>>>>>>>>>>> --enable-languages=c,objc,c++,obj-c++,fortran 
>>>>>>>>>>>>>>>>> --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ 
>>>>>>>>>>>>>>>>> --with-gxx-include-dir=/usr/include/c++/4.0.0 
>>>>>>>>>>>>>>>>> --with-slibdir=/usr/lib --build=i686-apple-darwin9 
>>>>>>>>>>>>>>>>> --host=i686-apple-darwin9 --target=i686-apple-darwin9
>>>>>>>>>>>>>>>>> Thread model: posix
>>>>>>>>>>>>>>>>> gcc version 4.2.1 (Apple Inc. build 5564)
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> This means that this version seems to be older than 
>>>>>>>>>>>>>>>>> the one I am using now?
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> No, that is GNU Fortran 4.2.4 that I was referring to. 
>>>>>>>>>>>>>>>> The "gcc version 4.2.1" comes from Apple's Xcode 3.1 
>>>>>>>>>>>>>>>> gcc-4.2 branch since that is what they define - it just 
>>>>>>>>>>>>>>>> adds Fortran support to the existing gcc 4.2.1 branch 
>>>>>>>>>>>>>>>> of Apple that you installed as Xcode. However, the 
>>>>>>>>>>>>>>>> Fortran part is merged from the GNU Fortran 4.2.4 
>>>>>>>>>>>>>>>> release - hence I refer to it as 4.2.4.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> Simon Urbanek wrote:
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> On Jan 21, 2010, at 14:47 , cstrato wrote:
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> Dear all,
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> I have the following problem:
>>>>>>>>>>>>>>>>>>> My Bioconductor package xps requires both R and 
>>>>>>>>>>>>>>>>>>> ROOT, whereby I compile ROOT usually from source. 
>>>>>>>>>>>>>>>>>>> Until now this has not been a problem since I do all 
>>>>>>>>>>>>>>>>>>> my development on Tiger. However, now I wanted to 
>>>>>>>>>>>>>>>>>>> compile ROOT on Leopard but failed since my gfortran 
>>>>>>>>>>>>>>>>>>> compiler is too old, see:
>>>>>>>>>>>>>>>>>>> http://root.cern.ch/phpBB2/viewtopic.php?t=9721&sid=003b01ddb64f33dbe0c74651ee089c34 To 
>>>>>>>>>>>>>>>>>>> solve the problem I should upgrade to the latest 
>>>>>>>>>>>>>>>>>>> version coming with gcc-4.4 in Fink.
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> I would advise against that - using gcc from Fink 
>>>>>>>>>>>>>>>>>> usually calls for a disaster. The real solution is to 
>>>>>>>>>>>>>>>>>> fix their flags, but that's another story ...
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> Thus my question is:
>>>>>>>>>>>>>>>>>>> Can I also use this version for R or do I need to 
>>>>>>>>>>>>>>>>>>> use the version downloaded from att?
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> I would recommend using the Leopard gfortran 4.2.4 
>>>>>>>>>>>>>>>>>> for Xcode 3.1.x from the Mac devel page
>>>>>>>>>>>>>>>>>> http://r.research.att.com/tools/
>>>>>>>>>>>>>>>>>> which I assume is what you meant by the latter.
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> Cheers,
>>>>>>>>>>>>>>>>>> Simon
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>>>> R-SIG-Mac mailing list
>>>>>>>>>>>>>>> R-SIG-Mac at stat.math.ethz.ch
>>>>>>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>>
>>>>
>>>>
>>>
>>>
>>
>>
>
>


From matthewcohen at me.com  Sat Jan 30 05:06:09 2010
From: matthewcohen at me.com (Matthew Cohen)
Date: Fri, 29 Jan 2010 23:06:09 -0500
Subject: [R-SIG-Mac] iPad?
Message-ID: <709DE919-01B6-4470-AEBA-6F8E3F58F701@me.com>

I think it might be worthwhile to think about getting R to work on the iPad, especially if it can access iWork/Numbers spreadsheets...  I realize someone brought up trying this on the iPhone a couple of years back, and no one was able to figure out what the point would be.  But R on the iPad seems like it would be genuinely useful...

I'm not sure that I have much to contribute in terms of making this happen, but I'm wondering if anyone who is familiar with the iPhone SDK (especially anyone who has played around with 3.2) knows how feasible it would be...

Thanks,
Matt


From dwinsemius at comcast.net  Sat Jan 30 07:45:06 2010
From: dwinsemius at comcast.net (David Winsemius)
Date: Sat, 30 Jan 2010 01:45:06 -0500
Subject: [R-SIG-Mac] iPad?
In-Reply-To: <709DE919-01B6-4470-AEBA-6F8E3F58F701@me.com>
References: <709DE919-01B6-4470-AEBA-6F8E3F58F701@me.com>
Message-ID: <4C6429C8-4588-41F2-86C4-6EF4E86E35D8@comcast.net>


On Jan 29, 2010, at 11:06 PM, Matthew Cohen wrote:

> I think it might be worthwhile to think about getting R to work on  
> the iPad, especially if it can access iWork/Numbers spreadsheets...   
> I realize someone brought up trying this on the iPhone a couple of  
> years back, and no one was able to figure out what the point would  
> be.  But R on the iPad seems like it would be genuinely useful...
>
> I'm not sure that I have much to contribute in terms of making this  
> happen, but I'm wondering if anyone who is familiar with the iPhone  
> SDK (especially anyone who has played around with 3.2) knows how  
> feasible it would be...

Show us an open-source C and Fortran compiler for the iPad.

-- 

David Winsemius, MD
Heritage Laboratories
West Hartford, CT


From ellis at stat.harvard.edu  Sat Jan 30 08:00:31 2010
From: ellis at stat.harvard.edu (Byron Ellis)
Date: Fri, 29 Jan 2010 23:00:31 -0800
Subject: [R-SIG-Mac] iPad?
In-Reply-To: <4C6429C8-4588-41F2-86C4-6EF4E86E35D8@comcast.net>
References: <709DE919-01B6-4470-AEBA-6F8E3F58F701@me.com>
	<4C6429C8-4588-41F2-86C4-6EF4E86E35D8@comcast.net>
Message-ID: <7098abec1001292300r4e532339md3fcddce238d409f@mail.gmail.com>

Erm... Not so difficult, the iPhone toolchain is using gcc and it
wouldn't be hard to make an ARM gfortran... I think Simon did on a
lark when the iPhone came out.

The real problem is actually getting it onto the App Store since R is
not allowed given current rules (no programming languages).
Interestingly, if you were to use R to build an application that was
NOT a programming language, that would be fine. (there are Smalltalk
and Mono-based Apps in the store).

On Fri, Jan 29, 2010 at 10:45 PM, David Winsemius
<dwinsemius at comcast.net> wrote:
>
> On Jan 29, 2010, at 11:06 PM, Matthew Cohen wrote:
>
>> I think it might be worthwhile to think about getting R to work on the
>> iPad, especially if it can access iWork/Numbers spreadsheets... ?I realize
>> someone brought up trying this on the iPhone a couple of years back, and no
>> one was able to figure out what the point would be. ?But R on the iPad seems
>> like it would be genuinely useful...
>>
>> I'm not sure that I have much to contribute in terms of making this
>> happen, but I'm wondering if anyone who is familiar with the iPhone SDK
>> (especially anyone who has played around with 3.2) knows how feasible it
>> would be...
>
> Show us an open-source C and Fortran compiler for the iPad.
>
> --
>
> David Winsemius, MD
> Heritage Laboratories
> West Hartford, CT
>
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>



-- 
Byron Ellis (byron.ellis at gmail.com)
"Oook" -- The Librarian


From simon.urbanek at r-project.org  Sat Jan 30 17:55:44 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sat, 30 Jan 2010 11:55:44 -0500
Subject: [R-SIG-Mac] iPad?
In-Reply-To: <7098abec1001292300r4e532339md3fcddce238d409f@mail.gmail.com>
References: <709DE919-01B6-4470-AEBA-6F8E3F58F701@me.com>
	<4C6429C8-4588-41F2-86C4-6EF4E86E35D8@comcast.net>
	<7098abec1001292300r4e532339md3fcddce238d409f@mail.gmail.com>
Message-ID: <7675BCD4-8EC1-4235-8258-62B3D9CA5426@r-project.org>

On Jan 30, 2010, at 2:00 AM, Byron Ellis wrote:

> Erm... Not so difficult, the iPhone toolchain is using gcc and it wouldn't be hard to make an ARM gfortran... I think Simon did on a lark when the iPhone came out.
> 

Indeed, R has no crucial issues on arm - the support is there from the times of the iPhone and it works with the stock Apple SDK. The usability issue was the main reason to not pursue this further. That is different for the iPad as it has a multi-core CPU, better FPU and a decent screen with a keyboard so it would make much more sense. Clearly, we'd have to add a UIKit  implementation of Quartz and maybe an UIKit console, but it certainly more reasonable than on the iPhone.

That said, I still think the more sensible approach is the remote-GUI one (Byron is the expert on this ;)).


> The real problem is actually getting it onto the App Store since R is not allowed given current rules (no programming languages). Interestingly, if you were to use R to build an application that was NOT a programming language, that would be fine. (there are Smalltalk and Mono-based Apps in the store).
> 

I don't think the programming language would be the main concern (that's something we could talk to Apple about - they usually like scientific apps), but I suspect they may have more objections to the dynamic linking that R uses - I don't think they would let us download/use packages.

Cheers,
Simon


> On Fri, Jan 29, 2010 at 10:45 PM, David Winsemius
> <dwinsemius at comcast.net> wrote:
>> 
>> On Jan 29, 2010, at 11:06 PM, Matthew Cohen wrote:
>> 
>>> I think it might be worthwhile to think about getting R to work on the
>>> iPad, especially if it can access iWork/Numbers spreadsheets...  I realize
>>> someone brought up trying this on the iPhone a couple of years back, and no
>>> one was able to figure out what the point would be.  But R on the iPad seems
>>> like it would be genuinely useful...
>>> 
>>> I'm not sure that I have much to contribute in terms of making this
>>> happen, but I'm wondering if anyone who is familiar with the iPhone SDK
>>> (especially anyone who has played around with 3.2) knows how feasible it
>>> would be...
>> 
>> Show us an open-source C and Fortran compiler for the iPad.
>> 
>> --
>> 
>> David Winsemius, MD
>> Heritage Laboratories
>> West Hartford, CT
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
> 
> 
> 
> -- 
> Byron Ellis (byron.ellis at gmail.com)
> "Oook" -- The Librarian
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
> 
> 


From matthewcohen at me.com  Sat Jan 30 19:01:44 2010
From: matthewcohen at me.com (Matthew Cohen)
Date: Sat, 30 Jan 2010 13:01:44 -0500
Subject: [R-SIG-Mac] iPad?
In-Reply-To: <7675BCD4-8EC1-4235-8258-62B3D9CA5426@r-project.org>
References: <709DE919-01B6-4470-AEBA-6F8E3F58F701@me.com>
	<4C6429C8-4588-41F2-86C4-6EF4E86E35D8@comcast.net>
	<7098abec1001292300r4e532339md3fcddce238d409f@mail.gmail.com>
	<7675BCD4-8EC1-4235-8258-62B3D9CA5426@r-project.org>
Message-ID: <519CF757-182A-4B4D-B6FD-DC8D01B95F0A@me.com>

Could you explain what remote-GUI would entail?  If I allow remote connections to my desktop at home, I can run R through one of the iPhone ssh apps.  But it obviously doesn't allow graphic outputs to display on the iPhone, or syntax highlighting.  Plus, switching back and forth between a script and the console was awkward, and editing data files more or less impossible.  Would remote-GUI be a similar solution, but one that addresses some or all of of those issues?  Or am I mis-inferring?  This would definitely be better than nothing...  Do you think it would be possible to implement something like this but also have it be able to access csv files stored on the iPad (and thus editable by Numbers running on the iPad)?

I think I'd prefer some local R functionality on a hypothetical iPad app, even if it's just a vanilla installation without any packages.  One possible solution to the packages issue would be to create different flavors of R apps, each containing different combinations of packages...  Sort of like how for many of the navigation apps, you have to buy a new one for each city...?

Just thinking out loud.

  
On Jan 30, 2010, at 11:55 AM, Simon Urbanek wrote:

> On Jan 30, 2010, at 2:00 AM, Byron Ellis wrote:
> 
>> Erm... Not so difficult, the iPhone toolchain is using gcc and it wouldn't be hard to make an ARM gfortran... I think Simon did on a lark when the iPhone came out.
>> 
> 
> Indeed, R has no crucial issues on arm - the support is there from the times of the iPhone and it works with the stock Apple SDK. The usability issue was the main reason to not pursue this further. That is different for the iPad as it has a multi-core CPU, better FPU and a decent screen with a keyboard so it would make much more sense. Clearly, we'd have to add a UIKit  implementation of Quartz and maybe an UIKit console, but it certainly more reasonable than on the iPhone.
> 
> That said, I still think the more sensible approach is the remote-GUI one (Byron is the expert on this ;)).
> 
> 
>> The real problem is actually getting it onto the App Store since R is not allowed given current rules (no programming languages). Interestingly, if you were to use R to build an application that was NOT a programming language, that would be fine. (there are Smalltalk and Mono-based Apps in the store).
>> 
> 
> I don't think the programming language would be the main concern (that's something we could talk to Apple about - they usually like scientific apps), but I suspect they may have more objections to the dynamic linking that R uses - I don't think they would let us download/use packages.
> 
> Cheers,
> Simon
> 
> 
>> On Fri, Jan 29, 2010 at 10:45 PM, David Winsemius
>> <dwinsemius at comcast.net> wrote:
>>> 
>>> On Jan 29, 2010, at 11:06 PM, Matthew Cohen wrote:
>>> 
>>>> I think it might be worthwhile to think about getting R to work on the
>>>> iPad, especially if it can access iWork/Numbers spreadsheets...  I realize
>>>> someone brought up trying this on the iPhone a couple of years back, and no
>>>> one was able to figure out what the point would be.  But R on the iPad seems
>>>> like it would be genuinely useful...
>>>> 
>>>> I'm not sure that I have much to contribute in terms of making this
>>>> happen, but I'm wondering if anyone who is familiar with the iPhone SDK
>>>> (especially anyone who has played around with 3.2) knows how feasible it
>>>> would be...
>>> 
>>> Show us an open-source C and Fortran compiler for the iPad.
>>> 
>>> --
>>> 
>>> David Winsemius, MD
>>> Heritage Laboratories
>>> West Hartford, CT
>>> 
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>> 
>> 
>> 
>> 
>> -- 
>> Byron Ellis (byron.ellis at gmail.com)
>> "Oook" -- The Librarian
>> 
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>> 
>> 
> 
> _______________________________________________
> R-SIG-Mac mailing list
> R-SIG-Mac at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-mac


From ellis at stat.harvard.edu  Sat Jan 30 21:00:08 2010
From: ellis at stat.harvard.edu (Byron Ellis)
Date: Sat, 30 Jan 2010 12:00:08 -0800
Subject: [R-SIG-Mac] iPad?
In-Reply-To: <7675BCD4-8EC1-4235-8258-62B3D9CA5426@r-project.org>
References: <709DE919-01B6-4470-AEBA-6F8E3F58F701@me.com>
	<4C6429C8-4588-41F2-86C4-6EF4E86E35D8@comcast.net>
	<7098abec1001292300r4e532339md3fcddce238d409f@mail.gmail.com>
	<7675BCD4-8EC1-4235-8258-62B3D9CA5426@r-project.org>
Message-ID: <7098abec1001301200n631c4d74l1e8a59de8544a291@mail.gmail.com>

On Sat, Jan 30, 2010 at 8:55 AM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
> On Jan 30, 2010, at 2:00 AM, Byron Ellis wrote:
>
>> Erm... Not so difficult, the iPhone toolchain is using gcc and it wouldn't be hard to make an ARM gfortran... I think Simon did on a lark when the iPhone came out.
>>
>
> Indeed, R has no crucial issues on arm - the support is there from the times of the iPhone and it works with the stock Apple SDK. The usability issue was the main reason to not pursue this further. That is different for the iPad as it has a multi-core CPU, better FPU and a decent screen with a keyboard so it would make much more sense. Clearly, we'd have to add a UIKit ?implementation of Quartz and maybe an UIKit console, but it certainly more reasonable than on the iPhone.
>

The graphics dev shouldn't be too bad, most everything we need is
there. Added bonus: a controlled font list so fewer issues there. :-)

A console would be more work than on OS X I think, but not too bad.

> That said, I still think the more sensible approach is the remote-GUI one (Byron is the expert on this ;)).

I don't think the iPhone SDK implemented the NSDIstantObject classes
so it wouldn't be quite as easy as the desktop version. I've actually
been thinking about cloud-based analysis quite a bit for a variety of
reasons and I think I would do it like DabbleDb with some sort of
database (or data document) facility. You'd spin up a "virtual
machine" (which may or may not be an actual virtual machine) with a
true copy (or copies) of R with a remote connection REPL instead of
the normal one. You'd then use sticky sessions to bind your client to
that specific copy (or copies) of R so your client could interact with
the system in the normal fashion, shipping output from graphics back
and forth to different things.



>
>
>> The real problem is actually getting it onto the App Store since R is not allowed given current rules (no programming languages). Interestingly, if you were to use R to build an application that was NOT a programming language, that would be fine. (there are Smalltalk and Mono-based Apps in the store).
>>
>
> I don't think the programming language would be the main concern (that's something we could talk to Apple about - they usually like scientific apps), but I suspect they may have more objections to the dynamic linking that R uses - I don't think they would let us download/use packages.

True, they do like education/science... Good point about the packages
though. Perhaps pure-R only packages would be OK? Really no different
than buying extra levels in a game or something.... Use the in-app
purchase capability?

>
> Cheers,
> Simon
>
>
>> On Fri, Jan 29, 2010 at 10:45 PM, David Winsemius
>> <dwinsemius at comcast.net> wrote:
>>>
>>> On Jan 29, 2010, at 11:06 PM, Matthew Cohen wrote:
>>>
>>>> I think it might be worthwhile to think about getting R to work on the
>>>> iPad, especially if it can access iWork/Numbers spreadsheets... ?I realize
>>>> someone brought up trying this on the iPhone a couple of years back, and no
>>>> one was able to figure out what the point would be. ?But R on the iPad seems
>>>> like it would be genuinely useful...
>>>>
>>>> I'm not sure that I have much to contribute in terms of making this
>>>> happen, but I'm wondering if anyone who is familiar with the iPhone SDK
>>>> (especially anyone who has played around with 3.2) knows how feasible it
>>>> would be...
>>>
>>> Show us an open-source C and Fortran compiler for the iPad.
>>>
>>> --
>>>
>>> David Winsemius, MD
>>> Heritage Laboratories
>>> West Hartford, CT
>>>
>>> _______________________________________________
>>> R-SIG-Mac mailing list
>>> R-SIG-Mac at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>>
>>
>>
>>
>> --
>> Byron Ellis (byron.ellis at gmail.com)
>> "Oook" -- The Librarian
>>
>> _______________________________________________
>> R-SIG-Mac mailing list
>> R-SIG-Mac at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-mac
>>
>>
>
>



-- 
Byron Ellis (byron.ellis at gmail.com)
"Oook" -- The Librarian


From gommoskipper at gmail.com  Sun Jan 31 16:31:58 2010
From: gommoskipper at gmail.com (Gommo Skipper)
Date: Sun, 31 Jan 2010 16:31:58 +0100
Subject: [R-SIG-Mac] No labels/titles shown on Mac
Message-ID: <9c9a19a81001310731s7fbe879sc2d5fabdba8d22b2@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100131/0c4d0398/attachment.pl>

From simon.urbanek at r-project.org  Sun Jan 31 16:49:19 2010
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sun, 31 Jan 2010 10:49:19 -0500
Subject: [R-SIG-Mac] No labels/titles shown on Mac
In-Reply-To: <9c9a19a81001310731s7fbe879sc2d5fabdba8d22b2@mail.gmail.com>
References: <9c9a19a81001310731s7fbe879sc2d5fabdba8d22b2@mail.gmail.com>
Message-ID: <9EA70A0C-75A4-4A77-BCD2-67F8AE96F383@r-project.org>


On Jan 31, 2010, at 10:31 AM, Gommo Skipper wrote:

> Hello,
> 
> I'm trying to use the mac port of R and have problem seeing any label in my
> plots. There's no main title, labels and no errors spitting from the R
> console.
> 
>> sessionInfo()
> I'm trying to use quartz on a x64 snow leopard:
> 
> R version 2.10.1 (2009-12-14)
> x86_64-apple-darwin9.8.0
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/C/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>> hist(rnorm(100),main="HELLO")
>> 
> 
> This is a stock installation, and I'm out of ideas on how to fix it.
> Any hints?
> 

I cannot reproduce it, but this sounds like a font issue. Have you disabled some fonts (such as Arial) on your system? (see the recent discussion on this) Try using some font that you have on your system, e.g.
hist(rnorm(100),main="HELLO",family="Monaco")
or
hist(rnorm(100),main="HELLO",family="Helvetica")

Cheers,
Simon

From gommoskipper at gmail.com  Sun Jan 31 17:50:54 2010
From: gommoskipper at gmail.com (Gommo Skipper)
Date: Sun, 31 Jan 2010 17:50:54 +0100
Subject: [R-SIG-Mac] No labels/titles shown on Mac
In-Reply-To: <9EA70A0C-75A4-4A77-BCD2-67F8AE96F383@r-project.org>
References: <9c9a19a81001310731s7fbe879sc2d5fabdba8d22b2@mail.gmail.com>
	<9EA70A0C-75A4-4A77-BCD2-67F8AE96F383@r-project.org>
Message-ID: <9c9a19a81001310850j4bb54380k443b9b7f0e0a1c1@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-mac/attachments/20100131/076c472d/attachment.pl>

From batholdy at googlemail.com  Sun Jan 31 18:13:31 2010
From: batholdy at googlemail.com (Martin Batholdy)
Date: Sun, 31 Jan 2010 18:13:31 +0100
Subject: [R-SIG-Mac] searchable help-files
Message-ID: <B73F4B64-4E36-4123-8752-3D877A51B05B@googlemail.com>

dear mailinglist-subscribers,


I wanted to ask if there is a way to make the help-files (which I open via '?command')  searchable ..?
That is a key feature I miss, and it would really help, especially in help-files with a list of a lot arguments (like 'par').


thanks!


From sdavis2 at mail.nih.gov  Sun Jan 31 20:37:06 2010
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Sun, 31 Jan 2010 14:37:06 -0500
Subject: [R-SIG-Mac] searchable help-files
In-Reply-To: <B73F4B64-4E36-4123-8752-3D877A51B05B@googlemail.com>
References: <B73F4B64-4E36-4123-8752-3D877A51B05B@googlemail.com>
Message-ID: <264855a01001311137j3cf9f43wbb88517019f427b0@mail.gmail.com>

On Sun, Jan 31, 2010 at 12:13 PM, Martin Batholdy
<batholdy at googlemail.com> wrote:
> dear mailinglist-subscribers,
>
>
> I wanted to ask if there is a way to make the help-files (which I open via '?command') ?searchable ..?
> That is a key feature I miss, and it would really help, especially in help-files with a list of a lot arguments (like 'par').

Do you mean help.search()?

Sean


