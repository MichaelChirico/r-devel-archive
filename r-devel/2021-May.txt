From henr|k@bengt@@on @end|ng |rom gm@||@com  Sat May  1 03:40:48 2021
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 30 Apr 2021 18:40:48 -0700
Subject: [Rd] R compilation on old(ish) CentOS
In-Reply-To: <1E8063DB-0F65-49CF-8D63-C6786D9BB880@gmail.com>
References: <1ae5a21f-a74e-b532-1359-a55856d4f365@gmail.com>
 <1E8063DB-0F65-49CF-8D63-C6786D9BB880@gmail.com>
Message-ID: <CAFDcVCTRLWpan0emJd_Ri1-iUhoxQVA_8p8+WQ2HZa86bP3Tfw@mail.gmail.com>

Ben, it's most like what Peter says.  I can confirm it works; I just
installed https://cran.r-project.org/src/base-prerelease/R-latest.tar.gz
on an up-to-date CentOS 7.9.2009 system using the vanilla gcc (GCC)
4.8.5 that comes with that version and R compiles just fine and it
passes 'make check' too.

Since R is trying to move toward C++14 support by default, I agree
with I?aki, you might wanr to build and run R with a newer version of
gcc.  gcc 4.8.5 will only give you C++11 support.  RedHat's Software
Collections (SCL) devtoolset:s is the easiest way to do this. I've
done this too and can confirm that gcc 7.3.1 that comes with SCL
devtoolset/7 is sufficient to get C++14 support.  I'm sharing my
installation with lots of users, so I'm make it all transparent to the
end-user with environment modules, i.e. 'module load r/4.1.0' is all
the user needs to know.

/Henrik

On Thu, Apr 29, 2021 at 7:28 AM Peter Dalgaard <pdalgd at gmail.com> wrote:
>
> You may want to check out your checkout....
>
> I see:
>
> Peter-Dalgaards-iMac:R pd$ grep newsock src/main/connections.c
>     con = R_newsock(host, port, server, serverfd, open, timeout, options);
>
> but your file seems to have lost the ", options" bit somehow. Also, mine is line 3488, not 3477.
>
> Maybe you have an old file getting in the way?
>
> - Peter
>
> > On 29 Apr 2021, at 15:58 , Ben Bolker <bbolker at gmail.com> wrote:
> >
> >  I probably don't want to go down this rabbit hole very far, but if anyone has any *quick* ideas ...
> >
> >  Attempting to build R from scratch with a fresh SVN checkout on a somewhat out-of-date CentOS system (for which I don't have root access, although I can bug people if I care enough).
> >
> >  ../r-devel/configure; make
> >
> > ends with
> >
> > gcc -std=gnu99 -I../../../r-devel/trunk/src/extra  -I. -I../../src/include -I../../../r-devel/trunk/src/include -I/usr/local/include -I../../../r-devel/trunk/src/nmath -DHAVE_CONFIG_H  -fopenmp  -g -O2  -c ../../../r-devel/trunk/src/main/connections.c -o connections.o
> > ../../../r-devel/trunk/src/main/connections.c: In function ?do_sockconn?:
> > ../../../r-devel/trunk/src/main/connections.c:3477:5: error: too few arguments to function ?R_newsock?
> >     con = R_newsock(host, port, server, serverfd, open, timeout);
> >     ^
> > In file included from ../../../r-devel/trunk/src/main/connections.c:80:0:
> > ../../../r-devel/trunk/src/include/Rconnections.h:83:13: note: declared here
> > Rconnection R_newsock(const char *host, int port, int server, int serverfd, const char * const mode, int timeout, int options);
> >             ^
> > make[3]: *** [connections.o] Error 1
> >
> >  Any suggestions for a quick fix/diagnosis?
> >
> >  cheers
> >    Ben Bolker
> >
> > ====
> >
> >
> > $ gcc --version
> > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
> >
> > $ lsb_release -a
> > LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch
> > Distributor ID:       CentOS
> > Description:  CentOS Linux release 7.8.2003 (Core)
> > Release:      7.8.2003
> > Codename:     Core
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From |uc@r @end|ng |rom |edor@project@org  Sat May  1 11:15:35 2021
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Sat, 1 May 2021 11:15:35 +0200
Subject: [Rd] R compilation on old(ish) CentOS
In-Reply-To: <CAFDcVCTRLWpan0emJd_Ri1-iUhoxQVA_8p8+WQ2HZa86bP3Tfw@mail.gmail.com>
References: <1ae5a21f-a74e-b532-1359-a55856d4f365@gmail.com>
 <1E8063DB-0F65-49CF-8D63-C6786D9BB880@gmail.com>
 <CAFDcVCTRLWpan0emJd_Ri1-iUhoxQVA_8p8+WQ2HZa86bP3Tfw@mail.gmail.com>
Message-ID: <CALEXWq3vufK7yrB2mwYYaDD-yB-jkt9MnVGMs-gY4yHzO-ugBw@mail.gmail.com>

On Sat, 1 May 2021 at 03:41, Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> Ben, it's most like what Peter says.  I can confirm it works; I just
> installed https://cran.r-project.org/src/base-prerelease/R-latest.tar.gz
> on an up-to-date CentOS 7.9.2009 system using the vanilla gcc (GCC)
> 4.8.5 that comes with that version and R compiles just fine and it
> passes 'make check' too.

It's not that you can't compile R with gcc 4.8.5, it's that you'll
have a hard time installing many packages. And that's why EPEL 7 has R
3.6 and cannot be updated to 4.

> Since R is trying to move toward C++14 support by default, I agree
> with I?aki, you might wanr to build and run R with a newer version of
> gcc.  gcc 4.8.5 will only give you C++11 support.  RedHat's Software
> Collections (SCL) devtoolset:s is the easiest way to do this. I've
> done this too and can confirm that gcc 7.3.1 that comes with SCL
> devtoolset/7 is sufficient to get C++14 support.  I'm sharing my
> installation with lots of users, so I'm make it all transparent to the
> end-user with environment modules, i.e. 'module load r/4.1.0' is all
> the user needs to know.

--
I?aki ?car


From bbo|ker @end|ng |rom gm@||@com  Sat May  1 13:37:47 2021
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 1 May 2021 07:37:47 -0400
Subject: [Rd] R compilation on old(ish) CentOS
In-Reply-To: <CAFDcVCTRLWpan0emJd_Ri1-iUhoxQVA_8p8+WQ2HZa86bP3Tfw@mail.gmail.com>
References: <1ae5a21f-a74e-b532-1359-a55856d4f365@gmail.com>
 <1E8063DB-0F65-49CF-8D63-C6786D9BB880@gmail.com>
 <CAFDcVCTRLWpan0emJd_Ri1-iUhoxQVA_8p8+WQ2HZa86bP3Tfw@mail.gmail.com>
Message-ID: <353a1f68-27c0-5b7a-e620-79ccbb54ffae@gmail.com>

   Thanks -- yes, I can confirm that it installs OK after erasing and 
checking out SVN from scratch.

On 4/30/21 9:40 PM, Henrik Bengtsson wrote:
> Ben, it's most like what Peter says.  I can confirm it works; I just
> installed https://cran.r-project.org/src/base-prerelease/R-latest.tar.gz
> on an up-to-date CentOS 7.9.2009 system using the vanilla gcc (GCC)
> 4.8.5 that comes with that version and R compiles just fine and it
> passes 'make check' too.
> 
> Since R is trying to move toward C++14 support by default, I agree
> with I?aki, you might wanr to build and run R with a newer version of
> gcc.  gcc 4.8.5 will only give you C++11 support.  RedHat's Software
> Collections (SCL) devtoolset:s is the easiest way to do this. I've
> done this too and can confirm that gcc 7.3.1 that comes with SCL
> devtoolset/7 is sufficient to get C++14 support.  I'm sharing my
> installation with lots of users, so I'm make it all transparent to the
> end-user with environment modules, i.e. 'module load r/4.1.0' is all
> the user needs to know.
> 
> /Henrik
> 
> On Thu, Apr 29, 2021 at 7:28 AM Peter Dalgaard <pdalgd at gmail.com> wrote:
>>
>> You may want to check out your checkout....
>>
>> I see:
>>
>> Peter-Dalgaards-iMac:R pd$ grep newsock src/main/connections.c
>>      con = R_newsock(host, port, server, serverfd, open, timeout, options);
>>
>> but your file seems to have lost the ", options" bit somehow. Also, mine is line 3488, not 3477.
>>
>> Maybe you have an old file getting in the way?
>>
>> - Peter
>>
>>> On 29 Apr 2021, at 15:58 , Ben Bolker <bbolker at gmail.com> wrote:
>>>
>>>   I probably don't want to go down this rabbit hole very far, but if anyone has any *quick* ideas ...
>>>
>>>   Attempting to build R from scratch with a fresh SVN checkout on a somewhat out-of-date CentOS system (for which I don't have root access, although I can bug people if I care enough).
>>>
>>>   ../r-devel/configure; make
>>>
>>> ends with
>>>
>>> gcc -std=gnu99 -I../../../r-devel/trunk/src/extra  -I. -I../../src/include -I../../../r-devel/trunk/src/include -I/usr/local/include -I../../../r-devel/trunk/src/nmath -DHAVE_CONFIG_H  -fopenmp  -g -O2  -c ../../../r-devel/trunk/src/main/connections.c -o connections.o
>>> ../../../r-devel/trunk/src/main/connections.c: In function ?do_sockconn?:
>>> ../../../r-devel/trunk/src/main/connections.c:3477:5: error: too few arguments to function ?R_newsock?
>>>      con = R_newsock(host, port, server, serverfd, open, timeout);
>>>      ^
>>> In file included from ../../../r-devel/trunk/src/main/connections.c:80:0:
>>> ../../../r-devel/trunk/src/include/Rconnections.h:83:13: note: declared here
>>> Rconnection R_newsock(const char *host, int port, int server, int serverfd, const char * const mode, int timeout, int options);
>>>              ^
>>> make[3]: *** [connections.o] Error 1
>>>
>>>   Any suggestions for a quick fix/diagnosis?
>>>
>>>   cheers
>>>     Ben Bolker
>>>
>>> ====
>>>
>>>
>>> $ gcc --version
>>> gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
>>>
>>> $ lsb_release -a
>>> LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch
>>> Distributor ID:       CentOS
>>> Description:  CentOS Linux release 7.8.2003 (Core)
>>> Release:      7.8.2003
>>> Codename:     Core
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> --
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From gz@p@t@w@|nberg @end|ng |rom gm@||@com  Mon May  3 20:48:49 2021
From: gz@p@t@w@|nberg @end|ng |rom gm@||@com (Gustavo Zapata Wainberg)
Date: Mon, 3 May 2021 20:48:49 +0200
Subject: [Rd] Inconsistency in median()
Message-ID: <CAFQ8Lqn=bn6pebC7gv13vHMx2PrApM7_Zo-HrxV+C7oVxjM0EA@mail.gmail.com>

Hi!

I'm wrinting this post because there is an inconsistency when median() is
calculated for even or odd vectors. For odd vectors, attributes (such as
labels added with Hmisc) are kept after running median(), but this is not
the case if the vector is even, in this last case attributes are lost.

I know that this is due to median() using mean() to obtain the result when
the vector is even, and mean() always takes attributes off vectors.

Don't you think that attributes should be kept in both cases? And, going
further, shouldn't mean() keep attributes as well? I have looked in R's
Bugzilla and I didn't find an entry related to this issue.

Please, let me know if you consider that this issue should be posted in R's
bugzilla.

Here is an example with code.

rndvar <- rnorm(n = 100)

Hmisc::label(rndvar) <- "A label for RNDVAR"

str(median(rndvar[-c(1,2)]))

Returns: "num 0.0368"

str(median(rndvar[-1]))

Returns:
 'labelled' num 0.0322
 - attr(*, "label")= chr "A label for RNDVAR"

Thanks in advance!

Gustavo Zapata-Wainberg

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue May  4 17:57:05 2021
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 4 May 2021 17:57:05 +0200
Subject: [Rd] Inconsistency in median()
In-Reply-To: <CAFQ8Lqn=bn6pebC7gv13vHMx2PrApM7_Zo-HrxV+C7oVxjM0EA@mail.gmail.com>
References: <CAFQ8Lqn=bn6pebC7gv13vHMx2PrApM7_Zo-HrxV+C7oVxjM0EA@mail.gmail.com>
Message-ID: <24721.28369.583490.768453@stat.math.ethz.ch>

>>>>> Gustavo Zapata Wainberg 
>>>>>     on Mon, 3 May 2021 20:48:49 +0200 writes:

    > Hi!

    > I'm wrinting this post because there is an inconsistency
    > when median() is calculated for even or odd vectors. For
    > odd vectors, attributes (such as labels added with Hmisc)
    > are kept after running median(), but this is not the case
    > if the vector is even, in this last case attributes are
    > lost.

    > I know that this is due to median() using mean() to obtain
    > the result when the vector is even, and mean() always
    > takes attributes off vectors.

Yes, and this has been the design of  median()  for ever :

If n := length(x)  is odd,  the median is "the middle" observation,
                   and should  equal to x[j] for j = (n+1)/2
		   and hence e.g., is well defined for an ordered factor.

When  n  is even
     however, median() must be the mean of "the two middle" observations,
       which is e.g., not even *defined* for an ordered factor.

We *could* talk of the so called lo-median  or hi-median
(terms probably coined by John W. Tukey) because (IIRC), these
are equal to each other and to the median for odd n, but
are   equal to  x[j]  and  x[j+1]   j=n/2  for even n *and* are
still "of the same kind" as x[]  itself.

Interestingly, for the mad() { = the median absolute deviation from the median}
we *do* allow to specify logical 'low' and 'high',
but that for the "outer" median in MAD's definition, not the
inner one.

## From <Rsrc>/src/library/stats/R/mad.R :

mad <- function(x, center = median(x), constant = 1.4826,
                na.rm = FALSE, low = FALSE, high = FALSE)
{
    if(na.rm)
	x <- x[!is.na(x)]
    n <- length(x)
    constant *
        if((low || high) && n%%2 == 0) {
            if(low && high) stop("'low' and 'high' cannot be both TRUE")
            n2 <- n %/% 2 + as.integer(high)
            sort(abs(x - center), partial = n2)[n2]
        }
        else median(abs(x - center))
}




    > Don't you think that attributes should be kept in both
    > cases? 

well, not all attributes can be kept.
Note that for *named* vectors x,  x[j] can (and does) keep the name,
but there's definitely no sensible name to give to (x[j] + x[j+1])/2

I'm willing to collaborate with some, considering
to extend  median.default()  making  hi-median and lo-median
available to the user.
Both of these will always return x[j] for some j and hence keep
all (sensible!) attributes (well, if the `[`-method for the
corresponding class has been defined correctly; I've encountered
quite a few cases where people created vector-like classes but
did not provide a "correct"  subsetting method (typically you
should make sure both a `[[` and `[` method works!).

Best regards,
Martin

Martin Maechler
ETH Zurich  and  R Core team

    > And, going further, shouldn't mean() keep
    > attributes as well? I have looked in R's Bugzilla and I
    > didn't find an entry related to this issue.

    > Please, let me know if you consider that this issue should
    > be posted in R's bugzilla.

    > Here is an example with code.

    > rndvar <- rnorm(n = 100)

    > Hmisc::label(rndvar) <- "A label for RNDVAR"

    > str(median(rndvar[-c(1,2)]))

    > Returns: "num 0.0368"

    > str(median(rndvar[-1]))

    > Returns: 'labelled' num 0.0322 - attr(*, "label")= chr "A
    > label for RNDVAR"

    > Thanks in advance!

    > Gustavo Zapata-Wainberg

    > 	[[alternative HTML version deleted]]

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From henr|k@bengt@@on @end|ng |rom gm@||@com  Tue May  4 18:31:25 2021
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 4 May 2021 09:31:25 -0700
Subject: [Rd] Testing R build when using --without-recommended-packages?
Message-ID: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>

I'm on Linux (Ubuntu 18.04). How do I check an R build when using
--without-recommended-packages? 'make check' assumes 'recommended'
packages are installed, so that fails without them available.

DETAILS:

When I build R from source without 'recommended' packages:

curl -O https://cran.r-project.org/src/base-prerelease/R-latest.tar.gz
tar xvfz R-latest.tar.gz
cd R-beta
./configure --enable-memory-profiling --enable-R-shlib --prefix="$PREFIX"
make

I cannot figure out how to validate the build.  Following Section
'Installation' of 'R Installation and Administration', I run:

make check

results in:

Testing examples for package ?stats?
Error: testing 'stats' failed
Execution halted

This is because those tests assume 'MASS' is installed;

$ cat /path/to/tests/Examples/stats-Ex.Rout.fail

> utils::data(muscle, package = "MASS")
Error in find.package(package, lib.loc, verbose = verbose) :
  there is no package called ?MASS?
Calls: <Anonymous> -> find.package
Execution halted

BTW, isn't this a bug? Shouldn't this example run conditionally on
'MASS' being installed, because 'MASS' is a suggested package here;

Package: stats
Version: 4.1.0
...
Imports: utils, grDevices, graphics
Suggests: MASS, Matrix, SuppDists, methods, stats4

/Henrik


From edd @end|ng |rom deb|@n@org  Tue May  4 19:16:26 2021
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 4 May 2021 12:16:26 -0500
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
Message-ID: <24721.33130.749929.947885@rob.eddelbuettel.com>


On 4 May 2021 at 09:31, Henrik Bengtsson wrote:
| I'm on Linux (Ubuntu 18.04). How do I check an R build when using
| --without-recommended-packages? 'make check' assumes 'recommended'
| packages are installed, so that fails without them available.

[...]

| BTW, isn't this a bug? Shouldn't this example run conditionally on
| 'MASS' being installed, because 'MASS' is a suggested package here;

The 'R-admin' manual in Section 1.2 "Getting patched and development
versions" ends on 

  If downloading manually from CRAN, do ensure that you have the correct
  versions of the recommended packages: if the number in the file VERSION
  is ?x.y.z? you need to download the contents of
  ?https://CRAN.R-project.org/src/contrib/dir?, where dir is
  ?x.y.z/Recommended? for r-devel or x.y-patched/Recommended for r-patched,
  respectively, to directory src/library/Recommended in the sources you
  have unpacked. After downloading manually you need to execute
  tools/link-recommended from the top level of the sources to make the
  requisite links in src/library/Recommended. A suitable incantation from
  the top level of the R sources using wget might be (for the correct
  value of dir)

      wget -r -l1 --no-parent -A\*.gz -nd -P src/library/Recommended \
        https://CRAN.R-project.org/src/contrib/dir
      ./tools/link-recommended

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From henr|k@bengt@@on @end|ng |rom gm@||@com  Tue May  4 20:07:26 2021
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 4 May 2021 11:07:26 -0700
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <24721.33130.749929.947885@rob.eddelbuettel.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
Message-ID: <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>

Thanks, but I don't understand. That's what I usually do when I build
R with 'recommended' packages.  But here, I explicitly do *not* want
to build and install 'recommended' packages with the R installation.
So, I'm going down the --without-recommended-packages path on purpose
and I'm looking for a way to validate such an installation.

If your comment is on the 'stats' examples' hard dependency on 'MASS'
despite it's being a suggested packages, I still don't follow.

/Henrik

On Tue, May 4, 2021 at 10:16 AM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 4 May 2021 at 09:31, Henrik Bengtsson wrote:
> | I'm on Linux (Ubuntu 18.04). How do I check an R build when using
> | --without-recommended-packages? 'make check' assumes 'recommended'
> | packages are installed, so that fails without them available.
>
> [...]
>
> | BTW, isn't this a bug? Shouldn't this example run conditionally on
> | 'MASS' being installed, because 'MASS' is a suggested package here;
>
> The 'R-admin' manual in Section 1.2 "Getting patched and development
> versions" ends on
>
>   If downloading manually from CRAN, do ensure that you have the correct
>   versions of the recommended packages: if the number in the file VERSION
>   is ?x.y.z? you need to download the contents of
>   ?https://CRAN.R-project.org/src/contrib/dir?, where dir is
>   ?x.y.z/Recommended? for r-devel or x.y-patched/Recommended for r-patched,
>   respectively, to directory src/library/Recommended in the sources you
>   have unpacked. After downloading manually you need to execute
>   tools/link-recommended from the top level of the sources to make the
>   requisite links in src/library/Recommended. A suitable incantation from
>   the top level of the R sources using wget might be (for the correct
>   value of dir)
>
>       wget -r -l1 --no-parent -A\*.gz -nd -P src/library/Recommended \
>         https://CRAN.R-project.org/src/contrib/dir
>       ./tools/link-recommended
>
> Dirk
>
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Tue May  4 20:17:12 2021
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 4 May 2021 13:17:12 -0500
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
Message-ID: <24721.36776.942664.909986@rob.eddelbuettel.com>


On 4 May 2021 at 11:07, Henrik Bengtsson wrote:
| Thanks, but I don't understand. That's what I usually do when I build
| R with 'recommended' packages.  But here, I explicitly do *not* want
| to build and install 'recommended' packages with the R installation.
| So, I'm going down the --without-recommended-packages path on purpose
| and I'm looking for a way to validate such an installation.

I understand the desire, and am sympathetic, but for all+ years I have been
building R (or R-devel) from source this has never been optional. Nor has any
optionality (for the build of R has a whole) been documented, at least as far
as I know.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From henr|k@bengt@@on @end|ng |rom gm@||@com  Tue May  4 20:25:01 2021
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 4 May 2021 11:25:01 -0700
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <24721.36776.942664.909986@rob.eddelbuettel.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
Message-ID: <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>

FWIW,

$ ./configure --help
...
  --with-recommended-packages
                          use/install recommended R packages [yes]

/Henrik

On Tue, May 4, 2021 at 11:17 AM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 4 May 2021 at 11:07, Henrik Bengtsson wrote:
> | Thanks, but I don't understand. That's what I usually do when I build
> | R with 'recommended' packages.  But here, I explicitly do *not* want
> | to build and install 'recommended' packages with the R installation.
> | So, I'm going down the --without-recommended-packages path on purpose
> | and I'm looking for a way to validate such an installation.
>
> I understand the desire, and am sympathetic, but for all+ years I have been
> building R (or R-devel) from source this has never been optional. Nor has any
> optionality (for the build of R has a whole) been documented, at least as far
> as I know.
>
> Dirk
>
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Tue May  4 21:22:09 2021
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 4 May 2021 14:22:09 -0500
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
Message-ID: <24721.40673.20828.844418@rob.eddelbuettel.com>


On 4 May 2021 at 11:25, Henrik Bengtsson wrote:
| FWIW,
| 
| $ ./configure --help
| ...
|   --with-recommended-packages
|                           use/install recommended R packages [yes]

Of course. But look at the verb in your Subject: no optionality _in testing_ there.

You obviously need to be able to build R itself to then build the recommended
packages you need for testing.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From henr|k@bengt@@on @end|ng |rom gm@||@com  Tue May  4 22:03:39 2021
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 4 May 2021 13:03:39 -0700
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <24721.40673.20828.844418@rob.eddelbuettel.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
 <24721.40673.20828.844418@rob.eddelbuettel.com>
Message-ID: <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>

Two questions to R Core:

1. Is R designed so that 'recommended' packages are optional, or
should that be considered uncharted territories?

2. Can such an R build/installation be validated using existing check methods?


--

Dirk, it's not clear to me whether you know for sure, or you draw
conclusions based your long experience and reading. I think it's very
important that others don't find this thread later on and read your
comments as if they're the "truth" (unless they are).  I haven't
re-read it from start to finish, but there are passages in 'R
Installation and Administration' suggesting you can build and install
R without 'recommended' packages.  For example, post-installation,
Section 'Testing an Installation' suggests you can run (after making
sure `make install-tests`):

cd tests
../bin/R CMD make check

but they fail the same way.  The passage continuous "... and other
useful targets are test-BasePackages and test-Recommended to run tests
of the standard and recommended packages (if installed) respectively."
(*).  So, to me that hints at 'recommended' packages are optional just
as they're "Priority: recommended".  Further down, there's also a
mentioning of:

$ R_LIBS_USER="" R --vanilla
> Sys.setenv(LC_COLLATE = "C", LC_TIME = "C", LANGUAGE = "en")
> tools::testInstalledPackages(scope = "base")

which also produces errors when 'recommended' packages are missing,
e.g. "Failed with error:  'there is no package called 'nlme'".

(*) BTW, '../bin/R CMD make test-BasePackages' gives "make: *** No
rule to make target 'test-BasePackages'.  Stop."

Thanks,

/Henrik

On Tue, May 4, 2021 at 12:22 PM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 4 May 2021 at 11:25, Henrik Bengtsson wrote:
> | FWIW,
> |
> | $ ./configure --help
> | ...
> |   --with-recommended-packages
> |                           use/install recommended R packages [yes]
>
> Of course. But look at the verb in your Subject: no optionality _in testing_ there.
>
> You obviously need to be able to build R itself to then build the recommended
> packages you need for testing.
>
> Dirk
>
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From g@bembecker @end|ng |rom gm@||@com  Tue May  4 23:10:12 2021
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Tue, 4 May 2021 14:10:12 -0700
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
 <24721.40673.20828.844418@rob.eddelbuettel.com>
 <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>
Message-ID: <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>

Hi Henrik,

A couple of things. Firstly, so far asI have ever heard, it's valid that a
package have hard dependencies in its tests for packages listed only in
Suggests.  In fact, that is one of the stated purposes of Suggests. An
argument could be made, I suppose, that the base packages should be under
stricter guidelines, but stats isn't violating the letter or intention of
Suggests by doing this.


Secondly, I don't have time to dig through the make files/administration
docs, but I do know that R CMD check has --no-stop-on-error, so you can
either separately or as part of make check, use that option for stats (and
elsewhere as needed?) and just know that the stats tests that depend on
MASS are "false positive" (or, more accurately, missing value) test
results, rather than real positives, and go from there.

You could also "patch" the tests as part of your build process. Somewhere I
worked had to do that for parts of the internet tests that were unable to
get through the firewall.

Best,
~G



On Tue, May 4, 2021 at 1:04 PM Henrik Bengtsson <henrik.bengtsson at gmail.com>
wrote:

> Two questions to R Core:
>
> 1. Is R designed so that 'recommended' packages are optional, or
> should that be considered uncharted territories?
>
> 2. Can such an R build/installation be validated using existing check
> methods?
>
>
> --
>
> Dirk, it's not clear to me whether you know for sure, or you draw
> conclusions based your long experience and reading. I think it's very
> important that others don't find this thread later on and read your
> comments as if they're the "truth" (unless they are).  I haven't
> re-read it from start to finish, but there are passages in 'R
> Installation and Administration' suggesting you can build and install
> R without 'recommended' packages.  For example, post-installation,
> Section 'Testing an Installation' suggests you can run (after making
> sure `make install-tests`):
>
> cd tests
> ../bin/R CMD make check
>
> but they fail the same way.  The passage continuous "... and other
> useful targets are test-BasePackages and test-Recommended to run tests
> of the standard and recommended packages (if installed) respectively."
> (*).  So, to me that hints at 'recommended' packages are optional just
> as they're "Priority: recommended".  Further down, there's also a
> mentioning of:
>
> $ R_LIBS_USER="" R --vanilla
> > Sys.setenv(LC_COLLATE = "C", LC_TIME = "C", LANGUAGE = "en")
> > tools::testInstalledPackages(scope = "base")
>
> which also produces errors when 'recommended' packages are missing,
> e.g. "Failed with error:  'there is no package called 'nlme'".
>
> (*) BTW, '../bin/R CMD make test-BasePackages' gives "make: *** No
> rule to make target 'test-BasePackages'.  Stop."
>
> Thanks,
>
> /Henrik
>
> On Tue, May 4, 2021 at 12:22 PM Dirk Eddelbuettel <edd at debian.org> wrote:
> >
> >
> > On 4 May 2021 at 11:25, Henrik Bengtsson wrote:
> > | FWIW,
> > |
> > | $ ./configure --help
> > | ...
> > |   --with-recommended-packages
> > |                           use/install recommended R packages [yes]
> >
> > Of course. But look at the verb in your Subject: no optionality _in
> testing_ there.
> >
> > You obviously need to be able to build R itself to then build the
> recommended
> > packages you need for testing.
> >
> > Dirk
> >
> > --
> > https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Tue May  4 23:22:36 2021
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 4 May 2021 17:22:36 -0400
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
 <24721.40673.20828.844418@rob.eddelbuettel.com>
 <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>
 <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>
Message-ID: <280c17af-1eda-84a8-42a0-e6f4990f9f3e@gmail.com>


   Sorry if this has been pointed out already, but some relevant text 
from 
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Suggested-packages

 > Note that someone wanting to run the examples/tests/vignettes may not 
have a suggested package available (and it may not even be possible to 
install it for that platform). The recommendation used to be to make 
their use conditional via if(require("pkgname")): this is OK if that 
conditioning is done in examples/tests/vignettes, although using 
if(requireNamespace("pkgname")) is preferred, if possible.

...

 > Some people have assumed that a ?recommended? package in ?Suggests? 
can safely be used unconditionally, but this is not so. (R can be 
installed without recommended packages, and which packages are 
?recommended? may change.)



On 5/4/21 5:10 PM, Gabriel Becker wrote:
> Hi Henrik,
> 
> A couple of things. Firstly, so far asI have ever heard, it's valid that a
> package have hard dependencies in its tests for packages listed only in
> Suggests.  In fact, that is one of the stated purposes of Suggests. An
> argument could be made, I suppose, that the base packages should be under
> stricter guidelines, but stats isn't violating the letter or intention of
> Suggests by doing this.
> 
> 
> Secondly, I don't have time to dig through the make files/administration
> docs, but I do know that R CMD check has --no-stop-on-error, so you can
> either separately or as part of make check, use that option for stats (and
> elsewhere as needed?) and just know that the stats tests that depend on
> MASS are "false positive" (or, more accurately, missing value) test
> results, rather than real positives, and go from there.
> 
> You could also "patch" the tests as part of your build process. Somewhere I
> worked had to do that for parts of the internet tests that were unable to
> get through the firewall.
> 
> Best,
> ~G
> 
> 
> 
> On Tue, May 4, 2021 at 1:04 PM Henrik Bengtsson <henrik.bengtsson at gmail.com>
> wrote:
> 
>> Two questions to R Core:
>>
>> 1. Is R designed so that 'recommended' packages are optional, or
>> should that be considered uncharted territories?
>>
>> 2. Can such an R build/installation be validated using existing check
>> methods?
>>
>>
>> --
>>
>> Dirk, it's not clear to me whether you know for sure, or you draw
>> conclusions based your long experience and reading. I think it's very
>> important that others don't find this thread later on and read your
>> comments as if they're the "truth" (unless they are).  I haven't
>> re-read it from start to finish, but there are passages in 'R
>> Installation and Administration' suggesting you can build and install
>> R without 'recommended' packages.  For example, post-installation,
>> Section 'Testing an Installation' suggests you can run (after making
>> sure `make install-tests`):
>>
>> cd tests
>> ../bin/R CMD make check
>>
>> but they fail the same way.  The passage continuous "... and other
>> useful targets are test-BasePackages and test-Recommended to run tests
>> of the standard and recommended packages (if installed) respectively."
>> (*).  So, to me that hints at 'recommended' packages are optional just
>> as they're "Priority: recommended".  Further down, there's also a
>> mentioning of:
>>
>> $ R_LIBS_USER="" R --vanilla
>>> Sys.setenv(LC_COLLATE = "C", LC_TIME = "C", LANGUAGE = "en")
>>> tools::testInstalledPackages(scope = "base")
>>
>> which also produces errors when 'recommended' packages are missing,
>> e.g. "Failed with error:  'there is no package called 'nlme'".
>>
>> (*) BTW, '../bin/R CMD make test-BasePackages' gives "make: *** No
>> rule to make target 'test-BasePackages'.  Stop."
>>
>> Thanks,
>>
>> /Henrik
>>
>> On Tue, May 4, 2021 at 12:22 PM Dirk Eddelbuettel <edd at debian.org> wrote:
>>>
>>>
>>> On 4 May 2021 at 11:25, Henrik Bengtsson wrote:
>>> | FWIW,
>>> |
>>> | $ ./configure --help
>>> | ...
>>> |   --with-recommended-packages
>>> |                           use/install recommended R packages [yes]
>>>
>>> Of course. But look at the verb in your Subject: no optionality _in
>> testing_ there.
>>>
>>> You obviously need to be able to build R itself to then build the
>> recommended
>>> packages you need for testing.
>>>
>>> Dirk
>>>
>>> --
>>> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From edd @end|ng |rom deb|@n@org  Tue May  4 23:38:19 2021
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 4 May 2021 16:38:19 -0500
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
 <24721.40673.20828.844418@rob.eddelbuettel.com>
 <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>
 <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>
Message-ID: <24721.48843.56458.417087@rob.eddelbuettel.com>


On 4 May 2021 at 14:10, Gabriel Becker wrote:
| A couple of things. Firstly, so far asI have ever heard, it's valid that a
| package have hard dependencies in its tests for packages listed only in
| Suggests.  In fact, that is one of the stated purposes of Suggests. An
| argument could be made, I suppose, that the base packages should be under
| stricter guidelines, but stats isn't violating the letter or intention of
| Suggests by doing this.

Like Ben, I also take the other side here and point you e.g. to the extended
discussion between Duncan and myself on r-package-devel (look for the thread
with Subject: "winUCRT failures").

Optional packages need testing for presence before they are used, and we are
slowly moving in that direction. Repeating "but that's not what we used to
do" is of limited interest as things do sometimes change for the better.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From g@bembecker @end|ng |rom gm@||@com  Tue May  4 23:40:22 2021
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Tue, 4 May 2021 14:40:22 -0700
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <280c17af-1eda-84a8-42a0-e6f4990f9f3e@gmail.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
 <24721.40673.20828.844418@rob.eddelbuettel.com>
 <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>
 <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>
 <280c17af-1eda-84a8-42a0-e6f4990f9f3e@gmail.com>
Message-ID: <CAD4oTHEVst9d3JXMnHkkziDZi_H83Ojv629M73UnHrZMCa1rNQ@mail.gmail.com>

Hmm, that's fair enough Ben, I stand corrected.  I will say that this seems
to be a pretty "soft" recommendation, as these things go, given that it
isn't tested for by R CMD check, including with the -as-cran extensions. In
principle, it seems like it could be, similar checks are made in package
code for inappropriate external-package-symbol usage/

Either way, though, I suppose I have a number of packages which have been
invisibly non-best-practices compliant for their entire lifetimes (or at
least, the portion of that where they had tests/vignettes...).

Best,
~G

On Tue, May 4, 2021 at 2:22 PM Ben Bolker <bbolker at gmail.com> wrote:

>
>    Sorry if this has been pointed out already, but some relevant text
> from
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Suggested-packages
>
>  > Note that someone wanting to run the examples/tests/vignettes may not
> have a suggested package available (and it may not even be possible to
> install it for that platform). The recommendation used to be to make
> their use conditional via if(require("pkgname")): this is OK if that
> conditioning is done in examples/tests/vignettes, although using
> if(requireNamespace("pkgname")) is preferred, if possible.
>
> ...
>
>  > Some people have assumed that a ?recommended? package in ?Suggests?
> can safely be used unconditionally, but this is not so. (R can be
> installed without recommended packages, and which packages are
> ?recommended? may change.)
>
>
>
> On 5/4/21 5:10 PM, Gabriel Becker wrote:
> > Hi Henrik,
> >
> > A couple of things. Firstly, so far asI have ever heard, it's valid that
> a
> > package have hard dependencies in its tests for packages listed only in
> > Suggests.  In fact, that is one of the stated purposes of Suggests. An
> > argument could be made, I suppose, that the base packages should be under
> > stricter guidelines, but stats isn't violating the letter or intention of
> > Suggests by doing this.
> >
> >
> > Secondly, I don't have time to dig through the make files/administration
> > docs, but I do know that R CMD check has --no-stop-on-error, so you can
> > either separately or as part of make check, use that option for stats
> (and
> > elsewhere as needed?) and just know that the stats tests that depend on
> > MASS are "false positive" (or, more accurately, missing value) test
> > results, rather than real positives, and go from there.
> >
> > You could also "patch" the tests as part of your build process.
> Somewhere I
> > worked had to do that for parts of the internet tests that were unable to
> > get through the firewall.
> >
> > Best,
> > ~G
> >
> >
> >
> > On Tue, May 4, 2021 at 1:04 PM Henrik Bengtsson <
> henrik.bengtsson at gmail.com>
> > wrote:
> >
> >> Two questions to R Core:
> >>
> >> 1. Is R designed so that 'recommended' packages are optional, or
> >> should that be considered uncharted territories?
> >>
> >> 2. Can such an R build/installation be validated using existing check
> >> methods?
> >>
> >>
> >> --
> >>
> >> Dirk, it's not clear to me whether you know for sure, or you draw
> >> conclusions based your long experience and reading. I think it's very
> >> important that others don't find this thread later on and read your
> >> comments as if they're the "truth" (unless they are).  I haven't
> >> re-read it from start to finish, but there are passages in 'R
> >> Installation and Administration' suggesting you can build and install
> >> R without 'recommended' packages.  For example, post-installation,
> >> Section 'Testing an Installation' suggests you can run (after making
> >> sure `make install-tests`):
> >>
> >> cd tests
> >> ../bin/R CMD make check
> >>
> >> but they fail the same way.  The passage continuous "... and other
> >> useful targets are test-BasePackages and test-Recommended to run tests
> >> of the standard and recommended packages (if installed) respectively."
> >> (*).  So, to me that hints at 'recommended' packages are optional just
> >> as they're "Priority: recommended".  Further down, there's also a
> >> mentioning of:
> >>
> >> $ R_LIBS_USER="" R --vanilla
> >>> Sys.setenv(LC_COLLATE = "C", LC_TIME = "C", LANGUAGE = "en")
> >>> tools::testInstalledPackages(scope = "base")
> >>
> >> which also produces errors when 'recommended' packages are missing,
> >> e.g. "Failed with error:  'there is no package called 'nlme'".
> >>
> >> (*) BTW, '../bin/R CMD make test-BasePackages' gives "make: *** No
> >> rule to make target 'test-BasePackages'.  Stop."
> >>
> >> Thanks,
> >>
> >> /Henrik
> >>
> >> On Tue, May 4, 2021 at 12:22 PM Dirk Eddelbuettel <edd at debian.org>
> wrote:
> >>>
> >>>
> >>> On 4 May 2021 at 11:25, Henrik Bengtsson wrote:
> >>> | FWIW,
> >>> |
> >>> | $ ./configure --help
> >>> | ...
> >>> |   --with-recommended-packages
> >>> |                           use/install recommended R packages [yes]
> >>>
> >>> Of course. But look at the verb in your Subject: no optionality _in
> >> testing_ there.
> >>>
> >>> You obviously need to be able to build R itself to then build the
> >> recommended
> >>> packages you need for testing.
> >>>
> >>> Dirk
> >>>
> >>> --
> >>> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed May  5 11:13:02 2021
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 5 May 2021 11:13:02 +0200
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <CAD4oTHEVst9d3JXMnHkkziDZi_H83Ojv629M73UnHrZMCa1rNQ@mail.gmail.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
 <24721.40673.20828.844418@rob.eddelbuettel.com>
 <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>
 <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>
 <280c17af-1eda-84a8-42a0-e6f4990f9f3e@gmail.com>
 <CAD4oTHEVst9d3JXMnHkkziDZi_H83Ojv629M73UnHrZMCa1rNQ@mail.gmail.com>
Message-ID: <24722.24990.41734.536374@stat.math.ethz.ch>

>>>>> Gabriel Becker 
>>>>>     on Tue, 4 May 2021 14:40:22 -0700 writes:

    > Hmm, that's fair enough Ben, I stand corrected.  I will say that this seems
    > to be a pretty "soft" recommendation, as these things go, given that it
    > isn't tested for by R CMD check, including with the -as-cran extensions. In
    > principle, it seems like it could be, similar checks are made in package
    > code for inappropriate external-package-symbol usage/

    > Either way, though, I suppose I have a number of packages which have been
    > invisibly non-best-practices compliant for their entire lifetimes (or at
    > least, the portion of that where they had tests/vignettes...).

    > Best,
    > ~G

    > On Tue, May 4, 2021 at 2:22 PM Ben Bolker <bbolker at gmail.com> wrote:

    >> Sorry if this has been pointed out already, but some relevant text
    >> from
    >> 
    >> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Suggested-packages
    >> 
    >> > Note that someone wanting to run the examples/tests/vignettes may not
    >> have a suggested package available (and it may not even be possible to
    >> install it for that platform). The recommendation used to be to make
    >> their use conditional via if(require("pkgname")): this is OK if that
    >> conditioning is done in examples/tests/vignettes, although using
    >> if(requireNamespace("pkgname")) is preferred, if possible.
    >> 
    >> ...
    >> 
    >> > Some people have assumed that a ?recommended? package in ?Suggests?
    >> can safely be used unconditionally, but this is not so. (R can be
    >> installed without recommended packages, and which packages are
    >> ?recommended? may change.)


Thank you all (Henrik, Gabe, Dirk & Ben) !

I think it would be a good community effort  and worth the time
also of R core to further move into the right direction
as Dirk suggested.

I think we all agree it would be nice if Henrik (and anybody)
could use  'make check' on R's own sources after using
 --without-recommended-packages

Even one more piece of evidence is the   tests/README   file in
the R sources.  It has much more but simply starts with

---------------------------------------------------------------------------
There is a hierarchy of check targets:

     make check

for all builders.  If this works one can be reasonably happy R is working
and do `make install' (or the equivalent).

    make check-devel

for people changing the code: this runs things like the demos and
no-segfault which might be broken by code changes, and checks on the
documentation (effectively R CMD check on each of the base packages).
This needs recommended packages installed.

    make check-all

runs all the checks, those in check-devel plus tests of the recommended
packages.

Note that for complete testing you will need a number of other
......................
......................

---------------------------------------------------------------------------

So, our (R core) own intent has been that   'make check'  should
run w/o rec.packages  but further checking not.

So, yes, please, you are encouraged to send patches against the
R devel trunk  to fix such examples and tests.

Best,
Martin


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed May  5 11:42:54 2021
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 5 May 2021 05:42:54 -0400
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <24722.24990.41734.536374@stat.math.ethz.ch>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
 <24721.40673.20828.844418@rob.eddelbuettel.com>
 <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>
 <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>
 <280c17af-1eda-84a8-42a0-e6f4990f9f3e@gmail.com>
 <CAD4oTHEVst9d3JXMnHkkziDZi_H83Ojv629M73UnHrZMCa1rNQ@mail.gmail.com>
 <24722.24990.41734.536374@stat.math.ethz.ch>
Message-ID: <421b7333-2ca8-1984-f21e-3b665cf98a3a@gmail.com>

On 05/05/2021 5:13 a.m., Martin Maechler wrote:
>>>>>> Gabriel Becker
>>>>>>      on Tue, 4 May 2021 14:40:22 -0700 writes:
> 
>      > Hmm, that's fair enough Ben, I stand corrected.  I will say that this seems
>      > to be a pretty "soft" recommendation, as these things go, given that it
>      > isn't tested for by R CMD check, including with the -as-cran extensions. In
>      > principle, it seems like it could be, similar checks are made in package
>      > code for inappropriate external-package-symbol usage/
> 
>      > Either way, though, I suppose I have a number of packages which have been
>      > invisibly non-best-practices compliant for their entire lifetimes (or at
>      > least, the portion of that where they had tests/vignettes...).
> 
>      > Best,
>      > ~G
> 
>      > On Tue, May 4, 2021 at 2:22 PM Ben Bolker <bbolker at gmail.com> wrote:
> 
>      >> Sorry if this has been pointed out already, but some relevant text
>      >> from
>      >>
>      >> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Suggested-packages
>      >>
>      >> > Note that someone wanting to run the examples/tests/vignettes may not
>      >> have a suggested package available (and it may not even be possible to
>      >> install it for that platform). The recommendation used to be to make
>      >> their use conditional via if(require("pkgname")): this is OK if that
>      >> conditioning is done in examples/tests/vignettes, although using
>      >> if(requireNamespace("pkgname")) is preferred, if possible.
>      >>
>      >> ...
>      >>
>      >> > Some people have assumed that a ?recommended? package in ?Suggests?
>      >> can safely be used unconditionally, but this is not so. (R can be
>      >> installed without recommended packages, and which packages are
>      >> ?recommended? may change.)
> 
> 
> Thank you all (Henrik, Gabe, Dirk & Ben) !
> 
> I think it would be a good community effort  and worth the time
> also of R core to further move into the right direction
> as Dirk suggested.
> 
> I think we all agree it would be nice if Henrik (and anybody)
> could use  'make check' on R's own sources after using
>   --without-recommended-packages
> 
> Even one more piece of evidence is the   tests/README   file in
> the R sources.  It has much more but simply starts with
> 
> ---------------------------------------------------------------------------
> There is a hierarchy of check targets:
> 
>       make check
> 
> for all builders.  If this works one can be reasonably happy R is working
> and do `make install' (or the equivalent).
> 
>      make check-devel
> 
> for people changing the code: this runs things like the demos and
> no-segfault which might be broken by code changes, and checks on the
> documentation (effectively R CMD check on each of the base packages).
> This needs recommended packages installed.
> 
>      make check-all
> 
> runs all the checks, those in check-devel plus tests of the recommended
> packages.
> 
> Note that for complete testing you will need a number of other
> ......................
> ......................
> 
> ---------------------------------------------------------------------------
> 
> So, our (R core) own intent has been that   'make check'  should
> run w/o rec.packages  but further checking not.
> 
> So, yes, please, you are encouraged to send patches against the
> R devel trunk  to fix such examples and tests.

I think it would be useful to issue some kind of warning if tests are 
skipped.  As mentioned earlier, this is impossible in user-contributed 
packages, which can only return OK or ERROR from their tests.

Duncan Murdoch


From edd @end|ng |rom deb|@n@org  Wed May  5 14:03:51 2021
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 5 May 2021 07:03:51 -0500
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <421b7333-2ca8-1984-f21e-3b665cf98a3a@gmail.com>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
 <24721.40673.20828.844418@rob.eddelbuettel.com>
 <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>
 <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>
 <280c17af-1eda-84a8-42a0-e6f4990f9f3e@gmail.com>
 <CAD4oTHEVst9d3JXMnHkkziDZi_H83Ojv629M73UnHrZMCa1rNQ@mail.gmail.com>
 <24722.24990.41734.536374@stat.math.ethz.ch>
 <421b7333-2ca8-1984-f21e-3b665cf98a3a@gmail.com>
Message-ID: <24722.35239.677540.295797@rob.eddelbuettel.com>


On 5 May 2021 at 05:42, Duncan Murdoch wrote:
| I think it would be useful to issue some kind of warning if tests are 
| skipped.  As mentioned earlier, this is impossible in user-contributed 
| packages, which can only return OK or ERROR from their tests.

Seconded!

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From gz@p@t@w@|nberg @end|ng |rom gm@||@com  Wed May  5 16:28:17 2021
From: gz@p@t@w@|nberg @end|ng |rom gm@||@com (Gustavo Zapata Wainberg)
Date: Wed, 5 May 2021 16:28:17 +0200
Subject: [Rd] Inconsistency in median()
In-Reply-To: <24721.28369.583490.768453@stat.math.ethz.ch>
References: <CAFQ8Lqn=bn6pebC7gv13vHMx2PrApM7_Zo-HrxV+C7oVxjM0EA@mail.gmail.com>
 <24721.28369.583490.768453@stat.math.ethz.ch>
Message-ID: <CAFQ8Lq=XTF=rMEqmkcaByuz5iYhcojjo5RdLKJSmigM2JFDhSw@mail.gmail.com>

Hi, thanks Dr. M?chler for your prompt response!

I agree with your explanations about this issue. But I was thinking of
something like adding an argument to median() and mean() that could keep
the attributes of the variables if set to TRUE.

Thanks again.

Best regards

El mar, 4 may 2021 a las 17:57, Martin Maechler (<maechler at stat.math.ethz.ch>)
escribi?:

> >>>>> Gustavo Zapata Wainberg
> >>>>>     on Mon, 3 May 2021 20:48:49 +0200 writes:
>
>     > Hi!
>
>     > I'm wrinting this post because there is an inconsistency
>     > when median() is calculated for even or odd vectors. For
>     > odd vectors, attributes (such as labels added with Hmisc)
>     > are kept after running median(), but this is not the case
>     > if the vector is even, in this last case attributes are
>     > lost.
>
>     > I know that this is due to median() using mean() to obtain
>     > the result when the vector is even, and mean() always
>     > takes attributes off vectors.
>
> Yes, and this has been the design of  median()  for ever :
>
> If n := length(x)  is odd,  the median is "the middle" observation,
>                    and should  equal to x[j] for j = (n+1)/2
>                    and hence e.g., is well defined for an ordered factor.
>
> When  n  is even
>      however, median() must be the mean of "the two middle" observations,
>        which is e.g., not even *defined* for an ordered factor.
>
> We *could* talk of the so called lo-median  or hi-median
> (terms probably coined by John W. Tukey) because (IIRC), these
> are equal to each other and to the median for odd n, but
> are   equal to  x[j]  and  x[j+1]   j=n/2  for even n *and* are
> still "of the same kind" as x[]  itself.
>
> Interestingly, for the mad() { = the median absolute deviation from the
> median}
> we *do* allow to specify logical 'low' and 'high',
> but that for the "outer" median in MAD's definition, not the
> inner one.
>
> ## From <Rsrc>/src/library/stats/R/mad.R :
>
> mad <- function(x, center = median(x), constant = 1.4826,
>                 na.rm = FALSE, low = FALSE, high = FALSE)
> {
>     if(na.rm)
>         x <- x[!is.na(x)]
>     n <- length(x)
>     constant *
>         if((low || high) && n%%2 == 0) {
>             if(low && high) stop("'low' and 'high' cannot be both TRUE")
>             n2 <- n %/% 2 + as.integer(high)
>             sort(abs(x - center), partial = n2)[n2]
>         }
>         else median(abs(x - center))
> }
>
>
>
>
>     > Don't you think that attributes should be kept in both
>     > cases?
>
> well, not all attributes can be kept.
> Note that for *named* vectors x,  x[j] can (and does) keep the name,
> but there's definitely no sensible name to give to (x[j] + x[j+1])/2
>
> I'm willing to collaborate with some, considering
> to extend  median.default()  making  hi-median and lo-median
> available to the user.
> Both of these will always return x[j] for some j and hence keep
> all (sensible!) attributes (well, if the `[`-method for the
> corresponding class has been defined correctly; I've encountered
> quite a few cases where people created vector-like classes but
> did not provide a "correct"  subsetting method (typically you
> should make sure both a `[[` and `[` method works!).
>
> Best regards,
> Martin
>
> Martin Maechler
> ETH Zurich  and  R Core team
>
>     > And, going further, shouldn't mean() keep
>     > attributes as well? I have looked in R's Bugzilla and I
>     > didn't find an entry related to this issue.
>
>     > Please, let me know if you consider that this issue should
>     > be posted in R's bugzilla.
>
>     > Here is an example with code.
>
>     > rndvar <- rnorm(n = 100)
>
>     > Hmisc::label(rndvar) <- "A label for RNDVAR"
>
>     > str(median(rndvar[-c(1,2)]))
>
>     > Returns: "num 0.0368"
>
>     > str(median(rndvar[-1]))
>
>     > Returns: 'labelled' num 0.0322 - attr(*, "label")= chr "A
>     > label for RNDVAR"
>
>     > Thanks in advance!
>
>     > Gustavo Zapata-Wainberg
>
>     >   [[alternative HTML version deleted]]
>
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From dw|n@em|u@ @end|ng |rom comc@@t@net  Wed May  5 19:11:58 2021
From: dw|n@em|u@ @end|ng |rom comc@@t@net (David Winsemius)
Date: Wed, 5 May 2021 11:11:58 -0600
Subject: [Rd] Inconsistency in median()
In-Reply-To: <CAFQ8Lq=XTF=rMEqmkcaByuz5iYhcojjo5RdLKJSmigM2JFDhSw@mail.gmail.com>
References: <CAFQ8Lq=XTF=rMEqmkcaByuz5iYhcojjo5RdLKJSmigM2JFDhSw@mail.gmail.com>
Message-ID: <79EC9CF7-489D-45F9-B76F-982491AF0AEC@comcast.net>

It would almost trivial to make a wrapper tha first captures attributes, runs median, and then returns the Re-attribute-ed value.

David. 

Sent from my iPhone

> On May 5, 2021, at 8:29 AM, Gustavo Zapata Wainberg <gzapatawainberg at gmail.com> wrote:
> 
> ?Hi, thanks Dr. M?chler for your prompt response!
> 
> I agree with your explanations about this issue. But I was thinking of
> something like adding an argument to median() and mean() that could keep
> the attributes of the variables if set to TRUE.
> 
> Thanks again.
> 
> Best regards
> 
> El mar, 4 may 2021 a las 17:57, Martin Maechler (<maechler at stat.math.ethz.ch>)
> escribi?:
> 
>>>>>>> Gustavo Zapata Wainberg
>>>>>>>    on Mon, 3 May 2021 20:48:49 +0200 writes:
>> 
>>> Hi!
>> 
>>> I'm wrinting this post because there is an inconsistency
>>> when median() is calculated for even or odd vectors. For
>>> odd vectors, attributes (such as labels added with Hmisc)
>>> are kept after running median(), but this is not the case
>>> if the vector is even, in this last case attributes are
>>> lost.
>> 
>>> I know that this is due to median() using mean() to obtain
>>> the result when the vector is even, and mean() always
>>> takes attributes off vectors.
>> 
>> Yes, and this has been the design of  median()  for ever :
>> 
>> If n := length(x)  is odd,  the median is "the middle" observation,
>>                   and should  equal to x[j] for j = (n+1)/2
>>                   and hence e.g., is well defined for an ordered factor.
>> 
>> When  n  is even
>>     however, median() must be the mean of "the two middle" observations,
>>       which is e.g., not even *defined* for an ordered factor.
>> 
>> We *could* talk of the so called lo-median  or hi-median
>> (terms probably coined by John W. Tukey) because (IIRC), these
>> are equal to each other and to the median for odd n, but
>> are   equal to  x[j]  and  x[j+1]   j=n/2  for even n *and* are
>> still "of the same kind" as x[]  itself.
>> 
>> Interestingly, for the mad() { = the median absolute deviation from the
>> median}
>> we *do* allow to specify logical 'low' and 'high',
>> but that for the "outer" median in MAD's definition, not the
>> inner one.
>> 
>> ## From <Rsrc>/src/library/stats/R/mad.R :
>> 
>> mad <- function(x, center = median(x), constant = 1.4826,
>>                na.rm = FALSE, low = FALSE, high = FALSE)
>> {
>>    if(na.rm)
>>        x <- x[!is.na(x)]
>>    n <- length(x)
>>    constant *
>>        if((low || high) && n%%2 == 0) {
>>            if(low && high) stop("'low' and 'high' cannot be both TRUE")
>>            n2 <- n %/% 2 + as.integer(high)
>>            sort(abs(x - center), partial = n2)[n2]
>>        }
>>        else median(abs(x - center))
>> }
>> 
>> 
>> 
>> 
>>> Don't you think that attributes should be kept in both
>>> cases?
>> 
>> well, not all attributes can be kept.
>> Note that for *named* vectors x,  x[j] can (and does) keep the name,
>> but there's definitely no sensible name to give to (x[j] + x[j+1])/2
>> 
>> I'm willing to collaborate with some, considering
>> to extend  median.default()  making  hi-median and lo-median
>> available to the user.
>> Both of these will always return x[j] for some j and hence keep
>> all (sensible!) attributes (well, if the `[`-method for the
>> corresponding class has been defined correctly; I've encountered
>> quite a few cases where people created vector-like classes but
>> did not provide a "correct"  subsetting method (typically you
>> should make sure both a `[[` and `[` method works!).
>> 
>> Best regards,
>> Martin
>> 
>> Martin Maechler
>> ETH Zurich  and  R Core team
>> 
>>> And, going further, shouldn't mean() keep
>>> attributes as well? I have looked in R's Bugzilla and I
>>> didn't find an entry related to this issue.
>> 
>>> Please, let me know if you consider that this issue should
>>> be posted in R's bugzilla.
>> 
>>> Here is an example with code.
>> 
>>> rndvar <- rnorm(n = 100)
>> 
>>> Hmisc::label(rndvar) <- "A label for RNDVAR"
>> 
>>> str(median(rndvar[-c(1,2)]))
>> 
>>> Returns: "num 0.0368"
>> 
>>> str(median(rndvar[-1]))
>> 
>>> Returns: 'labelled' num 0.0322 - attr(*, "label")= chr "A
>>> label for RNDVAR"
>> 
>>> Thanks in advance!
>> 
>>> Gustavo Zapata-Wainberg
>> 
>>>  [[alternative HTML version deleted]]
>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
>    [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed May  5 21:27:48 2021
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 5 May 2021 12:27:48 -0700
Subject: [Rd] Testing R build when using --without-recommended-packages?
In-Reply-To: <24722.24990.41734.536374@stat.math.ethz.ch>
References: <CAFDcVCS8_8c0g8CXAmHd96XH49YYUX7jt8J9Bj3guWkX8X=Knw@mail.gmail.com>
 <24721.33130.749929.947885@rob.eddelbuettel.com>
 <CAFDcVCTQ4mNK35NGaZEsiTDynuoxVk1VUCRGpgaGjMh3v++ESA@mail.gmail.com>
 <24721.36776.942664.909986@rob.eddelbuettel.com>
 <CAFDcVCTkwZtY5jVHuorT15Yc35aGMJLsyeo3p3AmeUG3oUmsHA@mail.gmail.com>
 <24721.40673.20828.844418@rob.eddelbuettel.com>
 <CAFDcVCS2SgCkVPULH4ovMPX8cgegNuQkY1cA-fW6jpPRHDNeBw@mail.gmail.com>
 <CAD4oTHG3U=tDeX2fEsnf0QPksTZYuJ7GDey45nNBE3DnCDb86w@mail.gmail.com>
 <280c17af-1eda-84a8-42a0-e6f4990f9f3e@gmail.com>
 <CAD4oTHEVst9d3JXMnHkkziDZi_H83Ojv629M73UnHrZMCa1rNQ@mail.gmail.com>
 <24722.24990.41734.536374@stat.math.ethz.ch>
Message-ID: <CAFDcVCS6BNF_gpgvpkZCU+X6-t4348VP=QzfCF_DcaOFANTGEg@mail.gmail.com>

On Wed, May 5, 2021 at 2:13 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Gabriel Becker
> >>>>>     on Tue, 4 May 2021 14:40:22 -0700 writes:
>
>     > Hmm, that's fair enough Ben, I stand corrected.  I will say that this seems
>     > to be a pretty "soft" recommendation, as these things go, given that it
>     > isn't tested for by R CMD check, including with the -as-cran extensions. In
>     > principle, it seems like it could be, similar checks are made in package
>     > code for inappropriate external-package-symbol usage/
>
>     > Either way, though, I suppose I have a number of packages which have been
>     > invisibly non-best-practices compliant for their entire lifetimes (or at
>     > least, the portion of that where they had tests/vignettes...).
>
>     > Best,
>     > ~G
>
>     > On Tue, May 4, 2021 at 2:22 PM Ben Bolker <bbolker at gmail.com> wrote:
>
>     >> Sorry if this has been pointed out already, but some relevant text
>     >> from
>     >>
>     >> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Suggested-packages
>     >>
>     >> > Note that someone wanting to run the examples/tests/vignettes may not
>     >> have a suggested package available (and it may not even be possible to
>     >> install it for that platform). The recommendation used to be to make
>     >> their use conditional via if(require("pkgname")): this is OK if that
>     >> conditioning is done in examples/tests/vignettes, although using
>     >> if(requireNamespace("pkgname")) is preferred, if possible.
>     >>
>     >> ...
>     >>
>     >> > Some people have assumed that a ?recommended? package in ?Suggests?
>     >> can safely be used unconditionally, but this is not so. (R can be
>     >> installed without recommended packages, and which packages are
>     >> ?recommended? may change.)
>
>
> Thank you all (Henrik, Gabe, Dirk & Ben) !
>
> I think it would be a good community effort  and worth the time
> also of R core to further move into the right direction
> as Dirk suggested.
>
> I think we all agree it would be nice if Henrik (and anybody)
> could use  'make check' on R's own sources after using
>  --without-recommended-packages
>
> Even one more piece of evidence is the   tests/README   file in
> the R sources.  It has much more but simply starts with
>
> ---------------------------------------------------------------------------
> There is a hierarchy of check targets:
>
>      make check
>
> for all builders.  If this works one can be reasonably happy R is working
> and do `make install' (or the equivalent).
>
>     make check-devel
>
> for people changing the code: this runs things like the demos and
> no-segfault which might be broken by code changes, and checks on the
> documentation (effectively R CMD check on each of the base packages).
> This needs recommended packages installed.
>
>     make check-all
>
> runs all the checks, those in check-devel plus tests of the recommended
> packages.
>
> Note that for complete testing you will need a number of other
> ......................
> ......................
>
> ---------------------------------------------------------------------------
>
> So, our (R core) own intent has been that   'make check'  should
> run w/o rec.packages  but further checking not.
>
> So, yes, please, you are encouraged to send patches against the
> R devel trunk  to fix such examples and tests.

Thanks Martin!  Thanks for confirming and for being open to patches.
This encourages me to try to patch what we've got so that 'make check'
and 'make check-devel' can complete also without 'recommended'
packages.

/Henrik

>
> Best,
> Martin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From j@goreck| @end|ng |rom w|t@edu@p|  Mon May 10 12:42:09 2021
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Mon, 10 May 2021 12:42:09 +0200
Subject: [Rd] R-devel new warning: no longer be an S4 object
Message-ID: <CAOO9MKVd0EYf8knZuZhbhAGy-J80b2qovhDAmR08Qe3077GGMg@mail.gmail.com>

Hi R-devs,
R 4.0.5 gives no warning. Is it expected? Searching the news for "I("
doesn't give any info. Thanks

z = I(getClass("MethodDefinition"))
Warning message:
In `class<-`(x, unique.default(c("AsIs", oldClass(x)))) :
  Setting class(x) to multiple strings ("AsIs", "classRepresentation",
...); result will no longer be an S4 object

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon May 10 14:07:55 2021
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 10 May 2021 14:07:55 +0200
Subject: [Rd] R-devel new warning: no longer be an S4 object
In-Reply-To: <CAOO9MKVd0EYf8knZuZhbhAGy-J80b2qovhDAmR08Qe3077GGMg@mail.gmail.com>
References: <CAOO9MKVd0EYf8knZuZhbhAGy-J80b2qovhDAmR08Qe3077GGMg@mail.gmail.com>
Message-ID: <24729.8731.146971.424258@stat.math.ethz.ch>

>>>>> Jan Gorecki 
>>>>>     on Mon, 10 May 2021 12:42:09 +0200 writes:

    > Hi R-devs,
    > R 4.0.5 gives no warning. Is it expected? Searching the news for "I("
    > doesn't give any info. Thanks

    > z = I(getClass("MethodDefinition"))

Now what exactly did you intend with the above line ?

I'm bold and say (for the moment) that the above line has always
been very dubious if not misleading,
and this "fact" is now finally revealed by the warning

    > Warning message:
    > In `class<-`(x, unique.default(c("AsIs", oldClass(x)))) :
    > Setting class(x) to multiple strings ("AsIs", "classRepresentation",
    > ...); result will no longer be an S4 object

So, yes, the change has been on purpose to warn about problems,
you'd get later when trying to work with 'z'.


    > [[alternative HTML version deleted]]

   (your fault: do use plain text aka   MIME time 'text/plain'))


