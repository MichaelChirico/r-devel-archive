From p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz  Wed Apr  1 04:00:46 2020
From: p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz (Paul Murrell)
Date: Wed, 1 Apr 2020 15:00:46 +1300
Subject: [Rd] [FORGED]  Any help needed in prep of 4.0.0?
In-Reply-To: <CAD4oTHGkGp+HxHFWiJ6BFEmr6ZjkUaDw=+ZZTyW=kasP+Mi=Zw@mail.gmail.com>
References: <CAD4oTHGkGp+HxHFWiJ6BFEmr6ZjkUaDw=+ZZTyW=kasP+Mi=Zw@mail.gmail.com>
Message-ID: <ba6a6c47-ad7b-36a2-2bf2-78d71c5bc00d@stat.auckland.ac.nz>

Hi

Thanks for the help you have given already with testing the 
plotmath/symbolfamily changes.

If you could keep monitoring that thread, there are likely to be further 
calls for checking builds on Mac and Windows.

Thanks!

Paul

On 1/04/20 8:35 am, Gabriel Becker wrote:
> Hi all,
> 
> Are there any small patches or further testing that any R-core
> members would like help with in the preparation to 4.0.0?
> 
> Sadly @Martin Maechler <maechler at stat.math.ethz.ch> I don't have the
> numerical optimization chops to be any help with qbeta, sorry.
> 
> But if there's anything else, small private wishlist items or things that
> could use another ste of eyes or some testing that you have locally or aa
> apatch you just haven't had time to write, please let me know on list or
> off. I'm happy to help.
> 
> I will also, of course, be going through bugzilla to see what I can help
> with there.
> 
> Best,
> ~G
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz  Wed Apr  1 04:52:18 2020
From: p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz (Paul Murrell)
Date: Wed, 1 Apr 2020 15:52:18 +1300
Subject: [Rd] 
 [FORGED] Re: Plotmath on Fedora 31 broken with with pango >=
 1.44 - workarounds?
In-Reply-To: <ce5f830ec5c0f689ccbf057103794d5176360131.camel@laposte.net>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
 <66c59964f5e36222b78bb68fb4bdf450e29857a7.camel@laposte.net>
 <29c7f633-5c05-5db1-85d3-b0c6ae285af5@stat.auckland.ac.nz>
 <c33d5034208f7ae4ccdc20f17b131d6aa13dc533.camel@laposte.net>
 <25844ba2-ffd5-2a4e-f980-f19e8c63d7a6@stat.auckland.ac.nz>
 <ce5f830ec5c0f689ccbf057103794d5176360131.camel@laposte.net>
Message-ID: <a4baed1b-bb3c-fb06-9ba1-f906057421e5@stat.auckland.ac.nz>



On 31/03/20 8:04 pm, Nicolas Mailhot wrote:
> Le mardi 31 mars 2020 ? 15:07 +1300, Paul Murrell a ?crit :
> 
>>
> 
>> Thanks, that's useful.  For my own memory, this is the parenthesis
>> block
>> that might be useful ...
>>
>> U+239b Sm LEFT PARENTHESIS UPPER HOOK ?
>> U+239c Sm LEFT PARENTHESIS EXTENSION ?
>> U+239d Sm LEFT PARENTHESIS LOWER HOOK ?
>> U+239e Sm RIGHT PARENTHESIS UPPER HOOK ?
>> U+239f Sm RIGHT PARENTHESIS EXTENSION ?
>> U+23a0 Sm RIGHT PARENTHESIS LOWER HOOK ?
>> U+23a1 Sm LEFT SQUARE BRACKET UPPER CORNER ?
>> U+23a2 Sm LEFT SQUARE BRACKET EXTENSION ?
>> U+23a3 Sm LEFT SQUARE BRACKET LOWER CORNER ?
>> U+23a4 Sm RIGHT SQUARE BRACKET UPPER CORNER ?
>> U+23a5 Sm RIGHT SQUARE BRACKET EXTENSION ?
>> U+23a6 Sm RIGHT SQUARE BRACKET LOWER CORNER ?
>> U+23a7 Sm LEFT CURLY BRACKET UPPER HOOK ?
>>
>> However, the situation is still not completely straightforward.  The
>> style of the symbols is also an issue and the DejaVu symbols are not
>> as elegant as, say, the OpenSymbol symbols.  What makes things tricky
>> is that, AFAICS, DejaVu has (TTX Unicode cmap output) ...
> 
> Ah, the endless design discussions? Myself I prefer a consistent design
> like Dejavu, over cobbling symbols of different designs, because they
> used to be in separate fonts. Anyway:
> 
>> <map code="0x239b" name="uni239B"/><!-- LEFT PARENTHESIS UPPER HOOK
>> -->
>>
>> ... while OpenSymbol has ...
>>
>> <map code="0xf8eb" name="parenlefttp"/><!-- ???? -->
>>
>> ... but neither has the other.
> 
> OpenSymbol is incorrect (it suffers from the same pre-unicode bias as
> R). However, it is, to my knowledge, actively maintained. You can ask
> its upstream (LibreOffice) for Unicode conformance fixes if you find
> problems. Especially when it?s just fixing the map of an existing
> glyph, that should not be hard for them to fix. Anything PUA-related
> won?t interoperate well in an unicode world.
> 
> (you can ask DejaVu too, maybe a request from a project like R will
> wake up its maintainers. But, that?s a long shot. DejaVu suffers from
> an almost done state without enough remaining work to interest
> designers).
> 
> Regards,
> 

Thanks again!  I will try contacting with those font projects.

In the meantime, I will look at allowing the user to select a 
symbol-to-unicode mapping or a symbol-to-unicode-using-PUA mapping 
alongside their choice of symbolfamily so that we can get a variety of 
things to work for now.

Paul
-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From kev|nu@hey @end|ng |rom gm@||@com  Thu Apr  2 06:35:30 2020
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Wed, 1 Apr 2020 21:35:30 -0700
Subject: [Rd] Rtools and R 4.0.0?
Message-ID: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>

Hello,

Has a decision been made yet as to whether R 4.0.0 on Windows is going
to be built using the new gcc8 toolchain (described at
https://cran.r-project.org/bin/windows/testing/rtools40.html)?

>From the sidelines, I can see that the toolchain is being used to
build and test packages on CRAN; if there are any remaining issues
that I can help to try and run down (either in R or any CRAN packages)
I'd be happy to try and help.

FWIW, I'm excited at the prospect at seeing a new toolchain for
Windows, since it would imply support for C++17 and so it would become
easier for CRAN packages to depend on the newer C++ standard.

Thanks,
Kevin


From @bronder @end|ng |rom @tevebronder@com  Thu Apr  2 19:28:04 2020
From: @bronder @end|ng |rom @tevebronder@com (Steve Bronder)
Date: Thu, 2 Apr 2020 13:28:04 -0400
Subject: [Rd] Rtools and R 4.0.0?
In-Reply-To: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
References: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
Message-ID: <CAAVP=am-0d==t48BW5MofGRJNvq+=yd0Jwwckz1iypUaX6rjFw@mail.gmail.com>

Also related to this, I tried looking in the archives and couldn't find a
previous discussion, was gcc 8.1 chosen over gcc 9 because mingw-w64 does
not support v9 yet? It looks like 9 is the first version that makes C++17
support non-experimental

https://gcc.gnu.org/gcc-9/changes.html

Regards,

Steve Bronder
Website: stevebronder.com
Phone: 412-719-1282
Email: sbronder at stevebronder.com



On Thu, Apr 2, 2020 at 12:36 AM Kevin Ushey <kevinushey at gmail.com> wrote:

> Hello,
>
> Has a decision been made yet as to whether R 4.0.0 on Windows is going
> to be built using the new gcc8 toolchain (described at
> https://cran.r-project.org/bin/windows/testing/rtools40.html)?
>
> From the sidelines, I can see that the toolchain is being used to
> build and test packages on CRAN; if there are any remaining issues
> that I can help to try and run down (either in R or any CRAN packages)
> I'd be happy to try and help.
>
> FWIW, I'm excited at the prospect at seeing a new toolchain for
> Windows, since it would imply support for C++17 and so it would become
> easier for CRAN packages to depend on the newer C++ standard.
>
> Thanks,
> Kevin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @zwj|08 @end|ng |rom gm@||@com  Fri Apr  3 14:55:29 2020
From: @zwj|08 @end|ng |rom gm@||@com (Wang Jiefei)
Date: Fri, 3 Apr 2020 08:55:29 -0400
Subject: [Rd] The finalizer of the externalPtr does not work when closing R?
Message-ID: <CAGiFhPP+RUJ9D8Dwr07ONFHSkWeVkmSUKVW1vo-QKvq18z6-ew@mail.gmail.com>

Hi all,

I found that the finalizer of the externalPtr is not called when R is
quitting. However, manually calling GC() works fine. This behavior is
observed on devel R 2020-04-02 r78142 on Win and R 3.6.3 on Ubuntu.  I make
a reproducible package here: https://github.com/Jiefei-Wang/example

Here is the detail of how to reproduce the problem, I create a temporary
file in the package root path and make an external pointer. The finalizer
of the external pointer will delete the  temporary file when it is called.
In the first round, I manually remove the external pointer from the global
environment and call GC() to verify if the finalizer is programmed
properly. The temporary file is deleted successfully. Then I create the
file and the pointer again and close the R session without saving the
global environment. Since the external pointer is removed when closing R,
so the finalizer should be called in this procedure. However, the temp file
still exists after closing the R session.

Here is the test code(which can be found in inst/example/example.R)

## Create a temporary file
tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
tmpFile
file.create(tmpFile)
file.exists(tmpFile)
## Create an external pointer whose finalizer will delete
## the file when the variable is not in used
x <- testPackage:::makeExtPtr(file.remove,tmpFile)
## GC is working fine
rm(list="x")
gc()
file.exists(tmpFile)

## Create the temporary file again
file.create(tmpFile)
file.exists(tmpFile)
x <- testPackage:::makeExtPtr(file.remove,tmpFile)
## Quit R session without explicitly cleaning the working space
quit(save = "no")


##=====Open a new R session=======
## The temporary file still exist
tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
file.exists(tmpFile)

Not sure if this behavior is designed on purpose, but it sounds wired to me
and can cause memory leaking if not properly handled.

Best,
Jiefei

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Apr  3 15:04:53 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 3 Apr 2020 14:04:53 +0100
Subject: [Rd] 
 The finalizer of the externalPtr does not work when closing R?
In-Reply-To: <CAGiFhPP+RUJ9D8Dwr07ONFHSkWeVkmSUKVW1vo-QKvq18z6-ew@mail.gmail.com>
References: <CAGiFhPP+RUJ9D8Dwr07ONFHSkWeVkmSUKVW1vo-QKvq18z6-ew@mail.gmail.com>
Message-ID: <CABtg=Kmv69LSehYPSjf1FexTWB=LfBhaX05Bg6JNhk7-2v_DUw@mail.gmail.com>

See R_RegisterCFinalizerEx() and set onexit to nonzero. Here:
https://github.com/wch/r-source/blob/9353ddfa8d30069ad8975e0364307d710f2488d5/src/include/Rinternals.h#L1279-L1280

Gabor

On Fri, Apr 3, 2020 at 1:56 PM Wang Jiefei <szwjf08 at gmail.com> wrote:
>
> Hi all,
>
> I found that the finalizer of the externalPtr is not called when R is
> quitting. However, manually calling GC() works fine. This behavior is
> observed on devel R 2020-04-02 r78142 on Win and R 3.6.3 on Ubuntu.  I make
> a reproducible package here: https://github.com/Jiefei-Wang/example
>
> Here is the detail of how to reproduce the problem, I create a temporary
> file in the package root path and make an external pointer. The finalizer
> of the external pointer will delete the  temporary file when it is called.
> In the first round, I manually remove the external pointer from the global
> environment and call GC() to verify if the finalizer is programmed
> properly. The temporary file is deleted successfully. Then I create the
> file and the pointer again and close the R session without saving the
> global environment. Since the external pointer is removed when closing R,
> so the finalizer should be called in this procedure. However, the temp file
> still exists after closing the R session.
>
> Here is the test code(which can be found in inst/example/example.R)
>
> ## Create a temporary file
> tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
> tmpFile
> file.create(tmpFile)
> file.exists(tmpFile)
> ## Create an external pointer whose finalizer will delete
> ## the file when the variable is not in used
> x <- testPackage:::makeExtPtr(file.remove,tmpFile)
> ## GC is working fine
> rm(list="x")
> gc()
> file.exists(tmpFile)
>
> ## Create the temporary file again
> file.create(tmpFile)
> file.exists(tmpFile)
> x <- testPackage:::makeExtPtr(file.remove,tmpFile)
> ## Quit R session without explicitly cleaning the working space
> quit(save = "no")
>
>
> ##=====Open a new R session=======
> ## The temporary file still exist
> tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
> file.exists(tmpFile)
>
> Not sure if this behavior is designed on purpose, but it sounds wired to me
> and can cause memory leaking if not properly handled.
>
> Best,
> Jiefei
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Apr  3 15:07:24 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 3 Apr 2020 15:07:24 +0200
Subject: [Rd] 
 The finalizer of the externalPtr does not work when closing R?
In-Reply-To: <CABtg=Kmv69LSehYPSjf1FexTWB=LfBhaX05Bg6JNhk7-2v_DUw@mail.gmail.com>
References: <CAGiFhPP+RUJ9D8Dwr07ONFHSkWeVkmSUKVW1vo-QKvq18z6-ew@mail.gmail.com>
 <CABtg=Kmv69LSehYPSjf1FexTWB=LfBhaX05Bg6JNhk7-2v_DUw@mail.gmail.com>
Message-ID: <63e4b385-7ec8-d0d7-78a5-274f1966e1db@gmail.com>

+ 5.13 of Writing R Extensions

Tomas
On 4/3/20 3:04 PM, G?bor Cs?rdi wrote:
> See R_RegisterCFinalizerEx() and set onexit to nonzero. Here:
> https://github.com/wch/r-source/blob/9353ddfa8d30069ad8975e0364307d710f2488d5/src/include/Rinternals.h#L1279-L1280
>
> Gabor
>
> On Fri, Apr 3, 2020 at 1:56 PM Wang Jiefei <szwjf08 at gmail.com> wrote:
>> Hi all,
>>
>> I found that the finalizer of the externalPtr is not called when R is
>> quitting. However, manually calling GC() works fine. This behavior is
>> observed on devel R 2020-04-02 r78142 on Win and R 3.6.3 on Ubuntu.  I make
>> a reproducible package here: https://github.com/Jiefei-Wang/example
>>
>> Here is the detail of how to reproduce the problem, I create a temporary
>> file in the package root path and make an external pointer. The finalizer
>> of the external pointer will delete the  temporary file when it is called.
>> In the first round, I manually remove the external pointer from the global
>> environment and call GC() to verify if the finalizer is programmed
>> properly. The temporary file is deleted successfully. Then I create the
>> file and the pointer again and close the R session without saving the
>> global environment. Since the external pointer is removed when closing R,
>> so the finalizer should be called in this procedure. However, the temp file
>> still exists after closing the R session.
>>
>> Here is the test code(which can be found in inst/example/example.R)
>>
>> ## Create a temporary file
>> tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
>> tmpFile
>> file.create(tmpFile)
>> file.exists(tmpFile)
>> ## Create an external pointer whose finalizer will delete
>> ## the file when the variable is not in used
>> x <- testPackage:::makeExtPtr(file.remove,tmpFile)
>> ## GC is working fine
>> rm(list="x")
>> gc()
>> file.exists(tmpFile)
>>
>> ## Create the temporary file again
>> file.create(tmpFile)
>> file.exists(tmpFile)
>> x <- testPackage:::makeExtPtr(file.remove,tmpFile)
>> ## Quit R session without explicitly cleaning the working space
>> quit(save = "no")
>>
>>
>> ##=====Open a new R session=======
>> ## The temporary file still exist
>> tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
>> file.exists(tmpFile)
>>
>> Not sure if this behavior is designed on purpose, but it sounds wired to me
>> and can cause memory leaking if not properly handled.
>>
>> Best,
>> Jiefei
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From iuke-tier@ey m@iii@g oii uiow@@edu  Fri Apr  3 15:14:53 2020
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Fri, 3 Apr 2020 08:14:53 -0500 (CDT)
Subject: [Rd] 
 [External] The finalizer of the externalPtr does not work when
 closing R?
In-Reply-To: <CAGiFhPP+RUJ9D8Dwr07ONFHSkWeVkmSUKVW1vo-QKvq18z6-ew@mail.gmail.com>
References: <CAGiFhPP+RUJ9D8Dwr07ONFHSkWeVkmSUKVW1vo-QKvq18z6-ew@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.2004030804160.3035@luke-Latitude-7480>

Use R_RegisterFinalizerEx in your C code. See

https://cran.r-project.org/doc/manuals/r-release/R-exts.html#External-pointers-and-weak-references

This still gives you only "best effort"; for anything stronger you
would need a different approach.

In general, finalizers should only be used as a backstop, not as a
primary resource management tool (in R or any other garbage-collected
language).

Memory leaks are not an issue -- unless you are doing very unusual
things your OS will reclaim memory resources used by your process when
it exits, cleanly or otherwise.

Best,

luke

On Fri, 3 Apr 2020, Wang Jiefei wrote:

> Hi all,
>
> I found that the finalizer of the externalPtr is not called when R is
> quitting. However, manually calling GC() works fine. This behavior is
> observed on devel R 2020-04-02 r78142 on Win and R 3.6.3 on Ubuntu.  I make
> a reproducible package here: https://github.com/Jiefei-Wang/example
>
> Here is the detail of how to reproduce the problem, I create a temporary
> file in the package root path and make an external pointer. The finalizer
> of the external pointer will delete the  temporary file when it is called.
> In the first round, I manually remove the external pointer from the global
> environment and call GC() to verify if the finalizer is programmed
> properly. The temporary file is deleted successfully. Then I create the
> file and the pointer again and close the R session without saving the
> global environment. Since the external pointer is removed when closing R,
> so the finalizer should be called in this procedure. However, the temp file
> still exists after closing the R session.
>
> Here is the test code(which can be found in inst/example/example.R)
>
> ## Create a temporary file
> tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
> tmpFile
> file.create(tmpFile)
> file.exists(tmpFile)
> ## Create an external pointer whose finalizer will delete
> ## the file when the variable is not in used
> x <- testPackage:::makeExtPtr(file.remove,tmpFile)
> ## GC is working fine
> rm(list="x")
> gc()
> file.exists(tmpFile)
>
> ## Create the temporary file again
> file.create(tmpFile)
> file.exists(tmpFile)
> x <- testPackage:::makeExtPtr(file.remove,tmpFile)
> ## Quit R session without explicitly cleaning the working space
> quit(save = "no")
>
>
> ##=====Open a new R session=======
> ## The temporary file still exist
> tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
> file.exists(tmpFile)
>
> Not sure if this behavior is designed on purpose, but it sounds wired to me
> and can cause memory leaking if not properly handled.
>
> Best,
> Jiefei
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From @zwj|08 @end|ng |rom gm@||@com  Fri Apr  3 15:23:28 2020
From: @zwj|08 @end|ng |rom gm@||@com (Wang Jiefei)
Date: Fri, 3 Apr 2020 21:23:28 +0800
Subject: [Rd] 
 [External] The finalizer of the externalPtr does not work when
 closing R?
In-Reply-To: <alpine.DEB.2.21.2004030804160.3035@luke-Latitude-7480>
References: <CAGiFhPP+RUJ9D8Dwr07ONFHSkWeVkmSUKVW1vo-QKvq18z6-ew@mail.gmail.com>
 <alpine.DEB.2.21.2004030804160.3035@luke-Latitude-7480>
Message-ID: <CAGiFhPPFHsy1FETrrcWe5RUNkTCchsDg=uZMKfszvHcvNd40rA@mail.gmail.com>

Thanks for all your guys responses! It is amazing to get so many answers in
a few minutes! My package needs to handle the shared memory so the
finalizer does cause memory leaking. The Ex version should be my solution
for that. Thanks for all your help.

Best
Jiefei


On Fri, Apr 3, 2020, 9:14 PM <luke-tierney at uiowa.edu> wrote:

> Use R_RegisterFinalizerEx in your C code. See
>
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#External-pointers-and-weak-references
>
> This still gives you only "best effort"; for anything stronger you
> would need a different approach.
>
> In general, finalizers should only be used as a backstop, not as a
> primary resource management tool (in R or any other garbage-collected
> language).
>
> Memory leaks are not an issue -- unless you are doing very unusual
> things your OS will reclaim memory resources used by your process when
> it exits, cleanly or otherwise.
>
> Best,
>
> luke
>
> On Fri, 3 Apr 2020, Wang Jiefei wrote:
>
> > Hi all,
> >
> > I found that the finalizer of the externalPtr is not called when R is
> > quitting. However, manually calling GC() works fine. This behavior is
> > observed on devel R 2020-04-02 r78142 on Win and R 3.6.3 on Ubuntu.  I
> make
> > a reproducible package here: https://github.com/Jiefei-Wang/example
> >
> > Here is the detail of how to reproduce the problem, I create a temporary
> > file in the package root path and make an external pointer. The finalizer
> > of the external pointer will delete the  temporary file when it is
> called.
> > In the first round, I manually remove the external pointer from the
> global
> > environment and call GC() to verify if the finalizer is programmed
> > properly. The temporary file is deleted successfully. Then I create the
> > file and the pointer again and close the R session without saving the
> > global environment. Since the external pointer is removed when closing R,
> > so the finalizer should be called in this procedure. However, the temp
> file
> > still exists after closing the R session.
> >
> > Here is the test code(which can be found in inst/example/example.R)
> >
> > ## Create a temporary file
> > tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
> > tmpFile
> > file.create(tmpFile)
> > file.exists(tmpFile)
> > ## Create an external pointer whose finalizer will delete
> > ## the file when the variable is not in used
> > x <- testPackage:::makeExtPtr(file.remove,tmpFile)
> > ## GC is working fine
> > rm(list="x")
> > gc()
> > file.exists(tmpFile)
> >
> > ## Create the temporary file again
> > file.create(tmpFile)
> > file.exists(tmpFile)
> > x <- testPackage:::makeExtPtr(file.remove,tmpFile)
> > ## Quit R session without explicitly cleaning the working space
> > quit(save = "no")
> >
> >
> > ##=====Open a new R session=======
> > ## The temporary file still exist
> > tmpFile <- paste0(system.file(package = "testPackage"), "/tmp")
> > file.exists(tmpFile)
> >
> > Not sure if this behavior is designed on purpose, but it sounds wired to
> me
> > and can cause memory leaking if not properly handled.
> >
> > Best,
> > Jiefei
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>     Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Apr  4 11:49:56 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 4 Apr 2020 11:49:56 +0200
Subject: [Rd] Help useRs to use R's own Time/Date objects more efficiently
Message-ID: <24200.22596.187327.474564@stat.math.ethz.ch>

This is mostly a RFC  [but *not* about the many extra packages, please..]:

Noticing to my chagrin  how my students work in a project,
googling for R code and cut'n'pasting stuff together, accumulating
this and that package on the way  all just for simple daily time series
(though with partly missing parts),
using chron, zoo, lubridate, ...  all for things that are very
easy in base R *IF* you read help pages and start thinking on
your own (...), I've noted once more that the above "if" is a
very strong one, and seems to happen rarely nowadays by typical R users...
(yes, I stop whining for now).

In this case, I propose to slightly improve the situation ...
by adding a few more lines to one help page [[how could that
help in the age where "google"+"cut'n'paste" has replaced thinking ? .. ]] :

On R's own ?Dates  help page (and also on ?DateTimeClasses )
we have pointers, notably

See Also:

     ...............
     ...............
     
     'weekdays' for convenience extraction functions.

So people must find that and follow the pointer
(instead of installing one of the dozen helper packages).

Then on that page, one sees  weekdays(), months() .. julian()
in the usage ... which don't seem directly helpful for a person
who needs more.  If that person is diligent and patient (as good useRs are ;-),
she finds

   Note:

	Other components such as the day of the month or the year are very
	easy to compute: just use 'as.POSIXlt' and extract the relevant
	component.  Alternatively (especially if the components are
	desired as character strings), use 'strftime'.


But then, nowadays, the POSIXlt class is not so transparent to the
non-expert anymore (as it behaves very much like POSIXct, and
not like a list for good reasons) .. and so 97%  of R users will
not find this "very easy".

For this reason, I propose to at add the following to the
'Examples:' section of the help file ...
and I hope that also readers of  R-devel  who have not been
aware of how to do this nicely,  will now remember (or remember
where to look?).

I at least will tell my students in the future to use these or
write versions of these simple utility functions.


------------------------------------------------

## Show how easily you get month, day, year, day (of {month, week, yr}), ... :
## (remember to count from 0 (!): mon = 0..11, wday = 0..6,  etc !!)

##' Transform (Time-)Date vector  to  convenient data frame :
dt2df <- function(dt, dName = deparse(substitute(dt)), stringsAsFactors = FALSE) {
    DF <- as.data.frame(unclass(as.POSIXlt( dt )), stringsAsFactors=stringsAsFactors)
    `names<-`(cbind(dt, DF, deparse.level=0L), c(dName, names(DF)))
}
dt2df(.leap.seconds)    # date+time
dt2df(Sys.Date() + 0:9) # date

##' Even simpler:  Date -> Matrix:
d2mat <- function(x) simplify2array(unclass(as.POSIXlt(x)))
d2mat(seq(as.Date("2000-02-02"), by=1, length.out=30)) # has R 1.0.0's release date

------------------------------------------------------------

In the distant past / one of the last times I touched on people
using (base) R's  Date / Time-Date  objects, I had started
thinking if we should not provide some simple utilities to "base R"
(not in the 'base' pkg, but rather 'utils') for "extracting" from
{POSIX(ct), Date} objects ... and we may have discussed that
within R Core 20 years ago,  and had always thought that this
shouldn't be hard for useRs themselves to see how to do...

But then I see that "everybody" uses extension packages instead,
even in the many situations where there's no gain doing so, 
but rather increases the dependency-complexity of the data analysis
unnecessarily.

Martin Maechler
ETH Zurich  and   R Core Team.


From |uc@r @end|ng |rom |edor@project@org  Sat Apr  4 12:35:06 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Sat, 4 Apr 2020 12:35:06 +0200
Subject: [Rd] 
 Help useRs to use R's own Time/Date objects more efficiently
In-Reply-To: <24200.22596.187327.474564@stat.math.ethz.ch>
References: <24200.22596.187327.474564@stat.math.ethz.ch>
Message-ID: <CALEXWq14GMJQpa24447tnBFrE0pPi9=JQe=XDyK9A7E+9C+jaw@mail.gmail.com>

On Sat, 4 Apr 2020 at 11:51, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>
> This is mostly a RFC  [but *not* about the many extra packages, please..]:
>
> Noticing to my chagrin  how my students work in a project,
> googling for R code and cut'n'pasting stuff together, accumulating
> this and that package on the way  all just for simple daily time series
> (though with partly missing parts),
> using chron, zoo, lubridate, ...  all for things that are very
> easy in base R *IF* you read help pages and start thinking on
> your own (...), I've noted once more that the above "if" is a
> very strong one, and seems to happen rarely nowadays by typical R users...
> (yes, I stop whining for now).

It's not my intention to sound harsh here, but just to provide
constructive criticism (I clarify this beforehand because, you know,
this is an email).

It's too easy to whine about this every now and then, and blame the
useRs for not being diligent enough, not patient enough and not
reading enough manual pages. But did you considered that maybe it's
the usability of this stuff in base R what leaves much to be desired,
and the lack of good and intuitive helpers what triggered the
development of so many related packages?

> In this case, I propose to slightly improve the situation ...
> by adding a few more lines to one help page [[how could that
> help in the age where "google"+"cut'n'paste" has replaced thinking ? .. ]] :

Google + cut'n'paste hasn't replaced thinking, but struggling. So no,
I don't think that more documentation (which I do think is already
great) improves the situation.

...snip...

> In the distant past / one of the last times I touched on people
> using (base) R's  Date / Time-Date  objects, I had started
> thinking if we should not provide some simple utilities to "base R"
> (not in the 'base' pkg, but rather 'utils') for "extracting" from
> {POSIX(ct), Date} objects ... and we may have discussed that
> within R Core 20 years ago,  and had always thought that this
> shouldn't be hard for useRs themselves to see how to do...

Never too late to change your mind.

> But then I see that "everybody" uses extension packages instead,
> even in the many situations where there's no gain doing so,
> but rather increases the dependency-complexity of the data analysis
> unnecessarily.

I do think there's gain. Again, it's not poor silly useRs not doing
their homework, it's a handful of developers that invested many many
hours of their time for years producing extension packages for a
functionality that is perfectly covered in base R. Maybe it's time to
think that it's not that well covered?

-- 
I?aki ?car


From pro|jcn@@h @end|ng |rom gm@||@com  Sat Apr  4 15:51:30 2020
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Sat, 4 Apr 2020 09:51:30 -0400
Subject: [Rd] 
 Help useRs to use R's own Time/Date objects more efficiently
In-Reply-To: <24200.22596.187327.474564@stat.math.ethz.ch>
References: <24200.22596.187327.474564@stat.math.ethz.ch>
Message-ID: <c5463cf5-2944-479e-3efc-5e08fc5bfefa@gmail.com>

As with many areas of R usage, my view is that the concern is one
of making it easier to find appropriate information quickly. The
difficulty is that different users have different needs. So if
one wants to know (most of) what is available, the Time Series
Task View is helpful. If one is a novice, it may now be rather
daunting, while I've found, as a long time user of different software,
that I have to dig to find what I need.

In optimization I have tried -- and have had several false starts --
to unify several packages. That could be helpful for time and date
functions.

Another possibility could be to put the "see" and "see also" information
at the TOP of the documentation rather than lower down, and also to
refer to Task Views and possibly other -- eventually R-project --
documentation objects. I happen to favour wiki-like approaches, but
there has not been much movement towards that yet. We R people are
quite strong individualists, but perhaps more team minded thinking
would help. Some of us are getting beyond our best-before date.

However, I support Martin's intent, and hope there will be attempts
in these directions.

Best,

John Nash


On 2020-04-04 5:49 a.m., Martin Maechler wrote:
> This is mostly a RFC  [but *not* about the many extra packages, please..]:
> 
> Noticing to my chagrin  how my students work in a project,
> googling for R code and cut'n'pasting stuff together, accumulating
> this and that package on the way  all just for simple daily time series
> (though with partly missing parts),
> using chron, zoo, lubridate, ...  all for things that are very
> easy in base R *IF* you read help pages and start thinking on
> your own (...), I've noted once more that the above "if" is a
> very strong one, and seems to happen rarely nowadays by typical R users...
> (yes, I stop whining for now).
> 
> In this case, I propose to slightly improve the situation ...
> by adding a few more lines to one help page [[how could that
> help in the age where "google"+"cut'n'paste" has replaced thinking ? .. ]] :
> 
> On R's own ?Dates  help page (and also on ?DateTimeClasses )
> we have pointers, notably
> 
> See Also:
> 
>      ...............
>      ...............
>      
>      'weekdays' for convenience extraction functions.
> 
> So people must find that and follow the pointer
> (instead of installing one of the dozen helper packages).
> 
> Then on that page, one sees  weekdays(), months() .. julian()
> in the usage ... which don't seem directly helpful for a person
> who needs more.  If that person is diligent and patient (as good useRs are ;-),
> she finds
> 
>    Note:
> 
> 	Other components such as the day of the month or the year are very
> 	easy to compute: just use 'as.POSIXlt' and extract the relevant
> 	component.  Alternatively (especially if the components are
> 	desired as character strings), use 'strftime'.
> 
> 
> But then, nowadays, the POSIXlt class is not so transparent to the
> non-expert anymore (as it behaves very much like POSIXct, and
> not like a list for good reasons) .. and so 97%  of R users will
> not find this "very easy".
> 
> For this reason, I propose to at add the following to the
> 'Examples:' section of the help file ...
> and I hope that also readers of  R-devel  who have not been
> aware of how to do this nicely,  will now remember (or remember
> where to look?).
> 
> I at least will tell my students in the future to use these or
> write versions of these simple utility functions.
> 
> 
> ------------------------------------------------
> 
> ## Show how easily you get month, day, year, day (of {month, week, yr}), ... :
> ## (remember to count from 0 (!): mon = 0..11, wday = 0..6,  etc !!)
> 
> ##' Transform (Time-)Date vector  to  convenient data frame :
> dt2df <- function(dt, dName = deparse(substitute(dt)), stringsAsFactors = FALSE) {
>     DF <- as.data.frame(unclass(as.POSIXlt( dt )), stringsAsFactors=stringsAsFactors)
>     `names<-`(cbind(dt, DF, deparse.level=0L), c(dName, names(DF)))
> }
> dt2df(.leap.seconds)    # date+time
> dt2df(Sys.Date() + 0:9) # date
> 
> ##' Even simpler:  Date -> Matrix:
> d2mat <- function(x) simplify2array(unclass(as.POSIXlt(x)))
> d2mat(seq(as.Date("2000-02-02"), by=1, length.out=30)) # has R 1.0.0's release date
> 
> ------------------------------------------------------------
> 
> In the distant past / one of the last times I touched on people
> using (base) R's  Date / Time-Date  objects, I had started
> thinking if we should not provide some simple utilities to "base R"
> (not in the 'base' pkg, but rather 'utils') for "extracting" from
> {POSIX(ct), Date} objects ... and we may have discussed that
> within R Core 20 years ago,  and had always thought that this
> shouldn't be hard for useRs themselves to see how to do...
> 
> But then I see that "everybody" uses extension packages instead,
> even in the many situations where there's no gain doing so, 
> but rather increases the dependency-complexity of the data analysis
> unnecessarily.
> 
> Martin Maechler
> ETH Zurich  and   R Core Team.
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From brod|e@g@@|@m @end|ng |rom y@hoo@com  Sat Apr  4 20:43:11 2020
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (brodie gaslam)
Date: Sat, 4 Apr 2020 18:43:11 +0000 (UTC)
Subject: [Rd] Possible Bug In Validation of UTF-8 Sequences
References: <603726857.502720.1586025791655.ref@mail.yahoo.com>
Message-ID: <603726857.502720.1586025791655@mail.yahoo.com>

As per `?intToUtf8`, and in the comments to `valid_utf8`[1], R 
intends to prevent illegal UTF-8 such as UTF-8 encoded
UTF-16 surrogate pairs.? `R_nchar`, invoked via `base::nchar`,
explicitly validates UTF-8 strings[2], but allows the surrogate:

??? > Encoding('\ud800')
??? [1] "UTF-8"
??? > nchar('\ud800')? // should be an error
??? [1] 1

The problem manifests on systems where `char` is signed.? The logic
used to test for the forbidden sequences implicitly assumes that
`char` is unsigned[3]:

??? if (c == 0xe0 && (d & 0x20) == 0) return 1;
??? if (c == 0xed && d >= 0xa0) return 1;

Notice the `d >= 0xa0`.? On a system where `char` is signed this can
only ever be true if a byte has more than 8 bits, as otherwise the
maximum value of `d` is 0x7f because `d` is retrieved from a plain
`char` pointer[4] (d is `int`):

??? if (((d = *(++p)) & 0xc0) != 0x80) return 1;

Where `p` is defined as[5]:

???? const char *p;

In contrast `c` above is correctly cast to `unsigned char` prior to
use[8]:

???? c = (unsigned char)*p;

I attach a simple patch to address this.

I also include a patch to remove the handling of surrogates from
`R_nchar` as that should not longer be necessary, and additionally the
current handling appears incorrect.? AFAICT, the current handling
attempts to decode a surrogate pair by combining the high surrogate
with the same high surrogate, instead of the high surrogate with the
subsequent character that hopefully is the low surrogate[7].

Here is some code that could be added to regression tests:

??? surr_good <- '\ud840\udc00'??????????? # auto-converts to normal
??? surr_bad <- paste0('\ud840', '\udc00') # surrogates remain
??? good <- c('hello', 'world', surr_good, '\ud7ff', '\ue000', '\U0010ffff')
??? bad <- c(surr_bad, '\ud800', '\udfff', '\U00110000')

On R3.6.3:

??? nchar(good, allowNA=TRUE)
??? [1] 5 5 1 1 1 1
??? nchar(bad, allowNA=TRUE)
??? [1] 2 1 1 1

On R-devel (2020-03-31 r78116) w/ patch:

??? nchar(good, allowNA=TRUE)
??? [1] 5 5 1 1 1 1
??? nchar(bad, allowNA=TRUE)
??? [1] NA NA NA NA

I ran `make check-devel` successfully, although I did have to suppress
one PCRE test[9] that segfaults on my particular set-up, though that
segfaulted prior to my patch as well.

The patch does not prevent the creation of illegal UTF-8 strings,
although I imagine it would be straightforward to add checks to the
entry points into CHARSXPs if that were desired.

Finally, this signed char business hints at a potential broader issue.
If I understand correctly importing byte sequences with values greater
than 0x7f overflows the `char` buffers on systems with signed chars
and octet (or lesser) bytes, e.g. as in `do_readLines`[6] where an
integer procured via `fgetc` is subsequently stored in a `char`
buffer.? Obviously this hasn't mattered much to date, presumably
because the implementations R runs on define the `unsigned char` to
`signed char` conversion in such a way that the `signed char` to
`unsigned char` conversion restores the original value.? I don't know
if this is something explicitly checked for like the `int` == 32bits
assumption.

[1]: https://github.com/wch/r-source/blob/tags/R-3-6-3/src/main/valid_utf8.h#L61
[2]: https://github.com/wch/r-source/blob/tags/R-3-6-3/src/main/character.c#L148
[3]: https://github.com/wch/r-source/blob/tags/R-3-6-3/src/main/valid_utf8.h#L106
[4]: https://github.com/wch/r-source/blob/tags/R-3-6-3/src/main/valid_utf8.h#L84
[5]: https://github.com/wch/r-source/blob/tags/R-3-6-3/src/main/valid_utf8.h#L69
[6]: https://github.com/wch/r-source/blob/tags/R-3-6-3/src/main/connections.c#L3935
[7]: https://github.com/wch/r-source/blob/tags/R-3-6-3/src/main/character.c#L184
[8]: https://github.com/wch/r-source/blob/tags/R-3-6-3/src/main/valid_utf8.h#L73
[9]: https://github.com/wch/r-source/blob/tags/R-3-6-3/tests/PCRE.R#L16


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch_val_utf8.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200404/2bef12f7/attachment.txt>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch_nchar.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200404/2bef12f7/attachment-0001.txt>

From @purd|e@@ @end|ng |rom gm@||@com  Sun Apr  5 22:57:21 2020
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 6 Apr 2020 08:57:21 +1200
Subject: [Rd] 
 Help useRs to use R's own Time/Date objects more efficiently
In-Reply-To: <24200.22596.187327.474564@stat.math.ethz.ch>
References: <24200.22596.187327.474564@stat.math.ethz.ch>
Message-ID: <CAB8pepzAzCrg0yc3d2H_pN9Lc+6TQGLtjUGLY63QDC_iCeDZyw@mail.gmail.com>

I think POSIXct and POSIXlt are badly-chosen names.
The name "POSIX" implies UNIX.
(i.e. XYZix operating system is mostly POSIX compliant... Woo-Hoo!).
My assumption is that most people modelling industrial/econometric
data etc, or data imported from databases, don't want system
references everywhere.

Historically, I've use the principle that:
If programming language A uses functionality from programming language
B, then bindings should be as close as possible to whatever is in
programming language B. Any additional functionality in programming
language A, should be distinct from the bindings.
R hasn't done this here, where POSIX-bindings have added in additional
R functionality and semantics.
Possibly introducing problems at an early stage.

The help file entitled DateTimeClasses, only covers a small subset of
information on date and time classes, with no obvious information
about how to construct date and time objects, except for what's in the
examples. The Date class has a similar problem, omitting information
about how to construct Date objects.

The "convenience extraction functions" aren't necessarily convenient
because they return text rather than integers, requiring many users to
still use the POSIXlt class.

I don't think your example is simple.
And I suspect it may discourage some people from using base packages.
Having opposite effect to what's intended.

It's probably too late to change the functions, but here's what I would suggest:

(1) Create a top-level help page with a title like "Date and Time
Classes" to give a brief but general overview. This would mean the
existing DateTimeClasses would need a new title.
(2) Create a another function the same as as.POSIXlt, but with a more
user-friendly name, which would increase readability.
(3) If help files for describing classes are separate from the help
files for creating/coercing objects (e.g. Date vs as.Date), then I
think they should cross reference each other in the description field,
not just the details or seealso fields.
(4) Reference relevant extraction/formatting functions, in most
date/time help files, even if there's some (small) duplication in the
help files.
(5) Focus on keeping the examples simple rather than comprehensive.

Expanding on suggestion (4), if you read the help file for as.Date
(which seems like an obvious starting point, because that's where I
started reading...), there's no reference at all to getting the month,
or the day of the week, etc. To make it worse it doesn't mention
coercion to POSIXlt objects either (but does mention coercion from
POSIXlt to Date objects). This could give the wrong impression to many
readers...

In it's defense, it does link to Date, which links to weekdays, which
links to as.POSIXlt.

Of course the note and seealso fields are near the bottom, and there's
an implicit (possibly false) assumption that the reader will read all
the help file*s*, and follow the links at the bottom, at least three
times over.
And a new-ish R user is likely to have to read more than four help files.
Unless they Google it, read stack exchange, or read some fancy
(apparently modern) textbook on data science...

Reinforcing the need for the help files to be clear about what the
functions (collectively) can do and specifically what
extraction/formatting functionality is available...

My guess is the that most common tasks with date and time objects are:
(1) Reading a character vector representing dates/times.
(2) Formatting a date/time (i.e. Object to character vector, or
character vector to another character vector).
(3) Extracting information such as month, weekday, etc, either as an
integer or as text.

So, I in short, these should be easy (to do, and find out how to do)...


On Sat, Apr 4, 2020 at 10:51 PM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> This is mostly a RFC  [but *not* about the many extra packages, please..]:
>
> Noticing to my chagrin  how my students work in a project,
> googling for R code and cut'n'pasting stuff together, accumulating
> this and that package on the way  all just for simple daily time series
> (though with partly missing parts),
> using chron, zoo, lubridate, ...  all for things that are very
> easy in base R *IF* you read help pages and start thinking on
> your own (...), I've noted once more that the above "if" is a
> very strong one, and seems to happen rarely nowadays by typical R users...
> (yes, I stop whining for now).
>
> In this case, I propose to slightly improve the situation ...
> by adding a few more lines to one help page [[how could that
> help in the age where "google"+"cut'n'paste" has replaced thinking ? .. ]] :
>
> On R's own ?Dates  help page (and also on ?DateTimeClasses )
> we have pointers, notably
>
> See Also:
>
>      ...............
>      ...............
>
>      'weekdays' for convenience extraction functions.
>
> So people must find that and follow the pointer
> (instead of installing one of the dozen helper packages).
>
> Then on that page, one sees  weekdays(), months() .. julian()
> in the usage ... which don't seem directly helpful for a person
> who needs more.  If that person is diligent and patient (as good useRs are ;-),
> she finds
>
>    Note:
>
>         Other components such as the day of the month or the year are very
>         easy to compute: just use 'as.POSIXlt' and extract the relevant
>         component.  Alternatively (especially if the components are
>         desired as character strings), use 'strftime'.
>
>
> But then, nowadays, the POSIXlt class is not so transparent to the
> non-expert anymore (as it behaves very much like POSIXct, and
> not like a list for good reasons) .. and so 97%  of R users will
> not find this "very easy".
>
> For this reason, I propose to at add the following to the
> 'Examples:' section of the help file ...
> and I hope that also readers of  R-devel  who have not been
> aware of how to do this nicely,  will now remember (or remember
> where to look?).
>
> I at least will tell my students in the future to use these or
> write versions of these simple utility functions.
>
>
> ------------------------------------------------
>
> ## Show how easily you get month, day, year, day (of {month, week, yr}), ... :
> ## (remember to count from 0 (!): mon = 0..11, wday = 0..6,  etc !!)
>
> ##' Transform (Time-)Date vector  to  convenient data frame :
> dt2df <- function(dt, dName = deparse(substitute(dt)), stringsAsFactors = FALSE) {
>     DF <- as.data.frame(unclass(as.POSIXlt( dt )), stringsAsFactors=stringsAsFactors)
>     `names<-`(cbind(dt, DF, deparse.level=0L), c(dName, names(DF)))
> }
> dt2df(.leap.seconds)    # date+time
> dt2df(Sys.Date() + 0:9) # date
>
> ##' Even simpler:  Date -> Matrix:
> d2mat <- function(x) simplify2array(unclass(as.POSIXlt(x)))
> d2mat(seq(as.Date("2000-02-02"), by=1, length.out=30)) # has R 1.0.0's release date
>
> ------------------------------------------------------------
>
> In the distant past / one of the last times I touched on people
> using (base) R's  Date / Time-Date  objects, I had started
> thinking if we should not provide some simple utilities to "base R"
> (not in the 'base' pkg, but rather 'utils') for "extracting" from
> {POSIX(ct), Date} objects ... and we may have discussed that
> within R Core 20 years ago,  and had always thought that this
> shouldn't be hard for useRs themselves to see how to do...
>
> But then I see that "everybody" uses extension packages instead,
> even in the many situations where there's no gain doing so,
> but rather increases the dependency-complexity of the data analysis
> unnecessarily.
>
> Martin Maechler
> ETH Zurich  and   R Core Team.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@rk|eed@2 @end|ng |rom gm@||@com  Sun Apr  5 23:08:39 2020
From: m@rk|eed@2 @end|ng |rom gm@||@com (Mark Leeds)
Date: Sun, 5 Apr 2020 17:08:39 -0400
Subject: [Rd] 
 Help useRs to use R's own Time/Date objects more efficiently
In-Reply-To: <CAB8pepzAzCrg0yc3d2H_pN9Lc+6TQGLtjUGLY63QDC_iCeDZyw@mail.gmail.com>
References: <24200.22596.187327.474564@stat.math.ethz.ch>
 <CAB8pepzAzCrg0yc3d2H_pN9Lc+6TQGLtjUGLY63QDC_iCeDZyw@mail.gmail.com>
Message-ID: <CAHz+bWYAxw2Zt821p94=MJbBeESmDPqq0RnGgxe13szicpMwqA@mail.gmail.com>

Hi All: I've been following this thread and just want to add one pointer.

For those who aren't interested in using new packages that try to make
dates-times easier but also find the
base R tools confusing, below is link to an extremely well written document
from over 15 years ago. It's probably
already known by quite a few people but, for people with less than 10 years
of R experience it could very well be unknown.
It's the clearest explanation of base R tools  for dates and times ( note:
one needs to consider chron a
base package but who's counting )  that I know of.

https://www.researchgate.net/publication/229087103_R_Help_Desk_Date_and_time_classes_in_R






On Sun, Apr 5, 2020 at 4:58 PM Abby Spurdle <spurdle.a at gmail.com> wrote:

> I think POSIXct and POSIXlt are badly-chosen names.
> The name "POSIX" implies UNIX.
> (i.e. XYZix operating system is mostly POSIX compliant... Woo-Hoo!).
> My assumption is that most people modelling industrial/econometric
> data etc, or data imported from databases, don't want system
> references everywhere.
>
> Historically, I've use the principle that:
> If programming language A uses functionality from programming language
> B, then bindings should be as close as possible to whatever is in
> programming language B. Any additional functionality in programming
> language A, should be distinct from the bindings.
> R hasn't done this here, where POSIX-bindings have added in additional
> R functionality and semantics.
> Possibly introducing problems at an early stage.
>
> The help file entitled DateTimeClasses, only covers a small subset of
> information on date and time classes, with no obvious information
> about how to construct date and time objects, except for what's in the
> examples. The Date class has a similar problem, omitting information
> about how to construct Date objects.
>
> The "convenience extraction functions" aren't necessarily convenient
> because they return text rather than integers, requiring many users to
> still use the POSIXlt class.
>
> I don't think your example is simple.
> And I suspect it may discourage some people from using base packages.
> Having opposite effect to what's intended.
>
> It's probably too late to change the functions, but here's what I would
> suggest:
>
> (1) Create a top-level help page with a title like "Date and Time
> Classes" to give a brief but general overview. This would mean the
> existing DateTimeClasses would need a new title.
> (2) Create a another function the same as as.POSIXlt, but with a more
> user-friendly name, which would increase readability.
> (3) If help files for describing classes are separate from the help
> files for creating/coercing objects (e.g. Date vs as.Date), then I
> think they should cross reference each other in the description field,
> not just the details or seealso fields.
> (4) Reference relevant extraction/formatting functions, in most
> date/time help files, even if there's some (small) duplication in the
> help files.
> (5) Focus on keeping the examples simple rather than comprehensive.
>
> Expanding on suggestion (4), if you read the help file for as.Date
> (which seems like an obvious starting point, because that's where I
> started reading...), there's no reference at all to getting the month,
> or the day of the week, etc. To make it worse it doesn't mention
> coercion to POSIXlt objects either (but does mention coercion from
> POSIXlt to Date objects). This could give the wrong impression to many
> readers...
>
> In it's defense, it does link to Date, which links to weekdays, which
> links to as.POSIXlt.
>
> Of course the note and seealso fields are near the bottom, and there's
> an implicit (possibly false) assumption that the reader will read all
> the help file*s*, and follow the links at the bottom, at least three
> times over.
> And a new-ish R user is likely to have to read more than four help files.
> Unless they Google it, read stack exchange, or read some fancy
> (apparently modern) textbook on data science...
>
> Reinforcing the need for the help files to be clear about what the
> functions (collectively) can do and specifically what
> extraction/formatting functionality is available...
>
> My guess is the that most common tasks with date and time objects are:
> (1) Reading a character vector representing dates/times.
> (2) Formatting a date/time (i.e. Object to character vector, or
> character vector to another character vector).
> (3) Extracting information such as month, weekday, etc, either as an
> integer or as text.
>
> So, I in short, these should be easy (to do, and find out how to do)...
>
>
> On Sat, Apr 4, 2020 at 10:51 PM Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
> >
> > This is mostly a RFC  [but *not* about the many extra packages,
> please..]:
> >
> > Noticing to my chagrin  how my students work in a project,
> > googling for R code and cut'n'pasting stuff together, accumulating
> > this and that package on the way  all just for simple daily time series
> > (though with partly missing parts),
> > using chron, zoo, lubridate, ...  all for things that are very
> > easy in base R *IF* you read help pages and start thinking on
> > your own (...), I've noted once more that the above "if" is a
> > very strong one, and seems to happen rarely nowadays by typical R
> users...
> > (yes, I stop whining for now).
> >
> > In this case, I propose to slightly improve the situation ...
> > by adding a few more lines to one help page [[how could that
> > help in the age where "google"+"cut'n'paste" has replaced thinking ? ..
> ]] :
> >
> > On R's own ?Dates  help page (and also on ?DateTimeClasses )
> > we have pointers, notably
> >
> > See Also:
> >
> >      ...............
> >      ...............
> >
> >      'weekdays' for convenience extraction functions.
> >
> > So people must find that and follow the pointer
> > (instead of installing one of the dozen helper packages).
> >
> > Then on that page, one sees  weekdays(), months() .. julian()
> > in the usage ... which don't seem directly helpful for a person
> > who needs more.  If that person is diligent and patient (as good useRs
> are ;-),
> > she finds
> >
> >    Note:
> >
> >         Other components such as the day of the month or the year are
> very
> >         easy to compute: just use 'as.POSIXlt' and extract the relevant
> >         component.  Alternatively (especially if the components are
> >         desired as character strings), use 'strftime'.
> >
> >
> > But then, nowadays, the POSIXlt class is not so transparent to the
> > non-expert anymore (as it behaves very much like POSIXct, and
> > not like a list for good reasons) .. and so 97%  of R users will
> > not find this "very easy".
> >
> > For this reason, I propose to at add the following to the
> > 'Examples:' section of the help file ...
> > and I hope that also readers of  R-devel  who have not been
> > aware of how to do this nicely,  will now remember (or remember
> > where to look?).
> >
> > I at least will tell my students in the future to use these or
> > write versions of these simple utility functions.
> >
> >
> > ------------------------------------------------
> >
> > ## Show how easily you get month, day, year, day (of {month, week, yr}),
> ... :
> > ## (remember to count from 0 (!): mon = 0..11, wday = 0..6,  etc !!)
> >
> > ##' Transform (Time-)Date vector  to  convenient data frame :
> > dt2df <- function(dt, dName = deparse(substitute(dt)), stringsAsFactors
> = FALSE) {
> >     DF <- as.data.frame(unclass(as.POSIXlt( dt )),
> stringsAsFactors=stringsAsFactors)
> >     `names<-`(cbind(dt, DF, deparse.level=0L), c(dName, names(DF)))
> > }
> > dt2df(.leap.seconds)    # date+time
> > dt2df(Sys.Date() + 0:9) # date
> >
> > ##' Even simpler:  Date -> Matrix:
> > d2mat <- function(x) simplify2array(unclass(as.POSIXlt(x)))
> > d2mat(seq(as.Date("2000-02-02"), by=1, length.out=30)) # has R 1.0.0's
> release date
> >
> > ------------------------------------------------------------
> >
> > In the distant past / one of the last times I touched on people
> > using (base) R's  Date / Time-Date  objects, I had started
> > thinking if we should not provide some simple utilities to "base R"
> > (not in the 'base' pkg, but rather 'utils') for "extracting" from
> > {POSIX(ct), Date} objects ... and we may have discussed that
> > within R Core 20 years ago,  and had always thought that this
> > shouldn't be hard for useRs themselves to see how to do...
> >
> > But then I see that "everybody" uses extension packages instead,
> > even in the many situations where there's no gain doing so,
> > but rather increases the dependency-complexity of the data analysis
> > unnecessarily.
> >
> > Martin Maechler
> > ETH Zurich  and   R Core Team.
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @purd|e@@ @end|ng |rom gm@||@com  Mon Apr  6 03:13:30 2020
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 6 Apr 2020 13:13:30 +1200
Subject: [Rd] 
 Help useRs to use R's own Time/Date objects more efficiently
In-Reply-To: <CAB8pepzAzCrg0yc3d2H_pN9Lc+6TQGLtjUGLY63QDC_iCeDZyw@mail.gmail.com>
References: <24200.22596.187327.474564@stat.math.ethz.ch>
 <CAB8pepzAzCrg0yc3d2H_pN9Lc+6TQGLtjUGLY63QDC_iCeDZyw@mail.gmail.com>
Message-ID: <CAB8pepyoxxxk=AhrTcJ4diUede__hq_B4wD90x990y+Bivvnmg@mail.gmail.com>

> (1) Create a top-level help page with a title like "Date and Time
> Classes" to give a brief but general overview. This would mean the
> existing DateTimeClasses would need a new title.

I wanted to modify my first suggestion.
Perhaps a better idea would be to reference an external document
giving an overview of the subject.
I couldn't find a discussion of POSIXct/POSIXlt objects in the R
manuals (unless I missed it somewhere), so perhaps "An Introduction to
R" could be updated to include this subject, and then the help files
could reference that?

Mark Leeds has already mentioned one possible (unofficial) source.
And I suspect that there are others.


From iuke-tier@ey m@iii@g oii uiow@@edu  Mon Apr  6 03:36:25 2020
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Sun, 5 Apr 2020 20:36:25 -0500 (CDT)
Subject: [Rd] [External] Re: Help useRs to use R's own Time/Date objects
 more efficiently
In-Reply-To: <CAB8pepyoxxxk=AhrTcJ4diUede__hq_B4wD90x990y+Bivvnmg@mail.gmail.com>
References: <24200.22596.187327.474564@stat.math.ethz.ch>
 <CAB8pepzAzCrg0yc3d2H_pN9Lc+6TQGLtjUGLY63QDC_iCeDZyw@mail.gmail.com>
 <CAB8pepyoxxxk=AhrTcJ4diUede__hq_B4wD90x990y+Bivvnmg@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.2004052035200.3035@luke-Latitude-7480>

On Mon, 6 Apr 2020, Abby Spurdle wrote:

>> (1) Create a top-level help page with a title like "Date and Time
>> Classes" to give a brief but general overview. This would mean the
>> existing DateTimeClasses would need a new title.
>
> I wanted to modify my first suggestion.
> Perhaps a better idea would be to reference an external document
> giving an overview of the subject.
> I couldn't find a discussion of POSIXct/POSIXlt objects in the R
> manuals (unless I missed it somewhere), so perhaps "An Introduction to
> R" could be updated to include this subject, and then the help files
> could reference that?
>
> Mark Leeds has already mentioned one possible (unofficial) source.
> And I suspect that there are others.

Not entirely unofficial as it waw published in R News:

@article{grothendieck2004r,
   title={R help desk: Date and time classes in R},
   author={Grothendieck, Gabor and Petzoldt, Thomas},
   journal={R News},
   volume={4},
   number={1},
   pages={29--32},
   year={2004}
}

Best,

luke

>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz  Mon Apr  6 04:59:19 2020
From: p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz (Paul Murrell)
Date: Mon, 6 Apr 2020 14:59:19 +1200
Subject: [Rd] Plotmath on Fedora 31 broken with with pango >= 1.44 -
 workarounds?
In-Reply-To: <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
Message-ID: <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>

Hi

The R branch ...

https://svn.r-project.org/R/branches/R-symfam/

... is now set up so that it works "out of the box" on Fedora by setting 
the default to be 'symbolfamily=cairoSymbolFont(family, usePUA=FALSE)' 
when grSoftVersion()["pango"] is greater than "1.44".

This means that on Fedora 31 (at least on the Docker container I am 
testing on) "sans"->"NimubusSans" is used as the symbol font by default 
and R converts Adobe Symbol Encoding code points to non-PUA UTF8 code 
points.  This is not the prettiest result, but it is a lot better than 
the page full of missing glyphs that we had.

The default on less "bleeding edge" systems, e.g., my Ubuntu 18.04, 
remains 'symbolfamily="Symbol"'.

The default on other platforms is supposed to be the same as it was, but 
I need help to confirm that.  I have set up a github repo ...

https://github.com/pmur002/R-symfam-testing

... that describes how to test this on macOS and Windows if anyone has 
time to do so.

I will start trying to set up a Windows test unless someone beats me to it.

Paul

On 30/03/20 3:24 pm, Paul Murrell wrote:
> Hi
> 
> I have created an R branch that contains a potential fix ...
> 
> https://svn.r-project.org/R/branches/R-symfam/
> 
> This allows, for example, ...
> 
> cairo_pdf(symbolfamily="OpenSymbol")
> 
> ... to specify that the OpenSymbol family should be used as the "symbol" 
> font (e.g., for "plotmath") in R.
> 
> This is just a separate branch for now because, while I have tested it 
> under Unbuntu 18.04 and Fedora 31, I cannot even build R for Windows 
> (right now) or Mac (ever) and I do not want to drop a bomb on R-devel at 
> this stage of the release process for R 4.0.0.
> 
> The attached file contains at least an outline of steps required to do a 
> minimal test if anyone wants to try the fix on Linux.
> 
> cc'ing Simon and Jeroen in case they are able to help with checking that 
> this builds and works on Mac and/or Windows.
> 
> NOTEs:
> - 'symbolfamily' can only be specified when a graphics device is opened, 
> and it is then fixed for that device.
> - on Windows, for cairo-based devices, the "symbol" font is still 
> hard-coded as "Standard Symbols L"
> 
> Paul
> 
> On 30/03/20 8:15 am, Paul Murrell wrote:
>> Hi
>>
>> Thanks for your input on this I?aki and Nicolas.
>>
>> I am starting testing an R fix for this problem today.
>>
>> As suggested, the plan is to allow the R user to specify a font family 
>> other than "symbol" for plotmath output (or, more generally, in R 
>> parlance, for 'font=5' or 'fontface=5') on a Cairo-based graphics device.
>>
>> Paul
>>
>>
>> On 27/03/20 11:30 pm, I?aki Ucar wrote:
>>> On Wed, 25 Mar 2020 at 12:25, Nicolas Mailhot
>>> <nicolas.mailhot at laposte.net> wrote:
>>>>
>>>> <snip>
>>>>
>>>> R brought this all on itself by hardcoding a Windows-only ?Symbol? font
>>>> family name in its default conf. Linux systems are UTF-8 by default for
>>>> ~20 years now, they don?t need the forcing of magic font families to
>>>> handle symbols not present in the 8-bit legacy Windows encodings.
>>>>
>>>> The actual effect of this conf is not the selection of font files with
>>>> special and unusual symbols. It is to priorize fonts that match the
>>>> "Symbol" magic name. And those fonts are few and crumbling on Linux
>>>> systems, because no one has needed to bother with them since Linux
>>>> switched to UTF-8 last millenium.
>>>>
>>>> Just stop using ?Symbol? in R and things will work a lot better.
>>>> Alternatively, prepare to maintain the ?Symbol? aliasing stack in
>>>> fontconfig (and fight with wine for it), because *no* *one* *else*
>>>> *cares* about this legacy Windows-specific stuff.
>>>
>>> So, in the light of Nicolas' input (thanks!), I think that font
>>> selection should be fixed upstream in R. I'd be happy to put all this
>>> together in R's bugzilla, but I don't have an account. Could someone
>>> please invite me?
>>>
>>> I?aki
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
> 

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From m@rk|eed@2 @end|ng |rom gm@||@com  Mon Apr  6 05:12:43 2020
From: m@rk|eed@2 @end|ng |rom gm@||@com (Mark Leeds)
Date: Sun, 5 Apr 2020 23:12:43 -0400
Subject: [Rd] [External] Re: Help useRs to use R's own Time/Date objects
 more efficiently
In-Reply-To: <alpine.DEB.2.21.2004052035200.3035@luke-Latitude-7480>
References: <24200.22596.187327.474564@stat.math.ethz.ch>
 <CAB8pepzAzCrg0yc3d2H_pN9Lc+6TQGLtjUGLY63QDC_iCeDZyw@mail.gmail.com>
 <CAB8pepyoxxxk=AhrTcJ4diUede__hq_B4wD90x990y+Bivvnmg@mail.gmail.com>
 <alpine.DEB.2.21.2004052035200.3035@luke-Latitude-7480>
Message-ID: <CAHz+bWZ=FVfJuxaZjefpY3oB8omuea5cxwMGBdxaCpLHzduEbg@mail.gmail.com>

I should have mentioned that it was in R-news. My mistake. Thanks Luke for
clarification.



On Sun, Apr 5, 2020 at 9:36 PM <luke-tierney at uiowa.edu> wrote:

> On Mon, 6 Apr 2020, Abby Spurdle wrote:
>
> >> (1) Create a top-level help page with a title like "Date and Time
> >> Classes" to give a brief but general overview. This would mean the
> >> existing DateTimeClasses would need a new title.
> >
> > I wanted to modify my first suggestion.
> > Perhaps a better idea would be to reference an external document
> > giving an overview of the subject.
> > I couldn't find a discussion of POSIXct/POSIXlt objects in the R
> > manuals (unless I missed it somewhere), so perhaps "An Introduction to
> > R" could be updated to include this subject, and then the help files
> > could reference that?
> >
> > Mark Leeds has already mentioned one possible (unofficial) source.
> > And I suspect that there are others.
>
> Not entirely unofficial as it waw published in R News:
>
> @article{grothendieck2004r,
>    title={R help desk: Date and time classes in R},
>    author={Grothendieck, Gabor and Petzoldt, Thomas},
>    journal={R News},
>    volume={4},
>    number={1},
>    pages={29--32},
>    year={2004}
> }
>
> Best,
>
> luke
>
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>     Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Mon Apr  6 09:15:20 2020
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Mon, 6 Apr 2020 08:15:20 +0100
Subject: [Rd] Rtools and R 4.0.0?
In-Reply-To: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
References: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
Message-ID: <0f0d1bf8-a662-cbee-12a9-8f106fc306f4@stats.ox.ac.uk>

On 02/04/2020 05:35, Kevin Ushey wrote:
> Hello,
> 
> Has a decision been made yet as to whether R 4.0.0 on Windows is going
> to be built using the new gcc8 toolchain (described at
> https://cran.r-project.org/bin/windows/testing/rtools40.html)?

Short answer: 'no'.

>>From the sidelines, I can see that the toolchain is being used to
> build and test packages on CRAN; if there are any remaining issues
> that I can help to try and run down (either in R or any CRAN packages)
> I'd be happy to try and help.

It is still under consideration, but resource constraints are biting 
hard as people's lives get more complicated.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From g@bembecker @end|ng |rom gm@||@com  Mon Apr  6 09:39:21 2020
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Mon, 6 Apr 2020 00:39:21 -0700
Subject: [Rd] Rtools and R 4.0.0?
In-Reply-To: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
References: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
Message-ID: <CAD4oTHGkO0_ShuCe9hL_eO8SggYqcy5xZQ0c4GH5crg8Rdc7nA@mail.gmail.com>

Hi Kevin,

On Wed, Apr 1, 2020 at 9:36 PM Kevin Ushey <kevinushey at gmail.com> wrote:

> Hello,
>
> FWIW, I'm excited at the prospect at seeing a new toolchain for
> Windows, since it would imply support for C++17 and so it would become
> easier for CRAN packages to depend on the newer C++ standard.
>

One thing to keep in mind (having been the R installation owner in such a
place for multiple years) is that many coproprate or otherwise controlled
compute environments may not have access to a c++17 compiler on their
servers so making it easy for packages to rely on that is not purely
beneficial to all parts of the R community. Not saying that should heavily
inform this decision, just wanted to throw that out there since the topic
came up. Personally if R packages are making the switch all the way  up to
17 this soon I have to say i'm glad I got out of the R administration game.

I don't have anything to add about the toolchain update discussions ,
though from what Prof Ripley said I guess they are ongoing.

~G

>
> Thanks,
> Kevin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From |uc@r @end|ng |rom |edor@project@org  Mon Apr  6 10:21:30 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Mon, 6 Apr 2020 10:21:30 +0200
Subject: [Rd] Plotmath on Fedora 31 broken with with pango >= 1.44 -
 workarounds?
In-Reply-To: <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
 <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
Message-ID: <CALEXWq18u1JeJnDBba5F1XHsGvah+SPxbmgjA7=489nqGXG_mA@mail.gmail.com>

On Mon, 6 Apr 2020 at 04:59, Paul Murrell <paul at stat.auckland.ac.nz> wrote:
>
> Hi
>
> The R branch ...
>
> https://svn.r-project.org/R/branches/R-symfam/
>
> ... is now set up so that it works "out of the box" on Fedora by setting
> the default to be 'symbolfamily=cairoSymbolFont(family, usePUA=FALSE)'
> when grSoftVersion()["pango"] is greater than "1.44".

That is awesome, thanks! Will you port this to the R-3-6-branch?

-- 
I?aki ?car


From jeroen @end|ng |rom berke|ey@edu  Mon Apr  6 13:30:16 2020
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Mon, 6 Apr 2020 13:30:16 +0200
Subject: [Rd] Rtools and R 4.0.0?
In-Reply-To: <0f0d1bf8-a662-cbee-12a9-8f106fc306f4@stats.ox.ac.uk>
References: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
 <0f0d1bf8-a662-cbee-12a9-8f106fc306f4@stats.ox.ac.uk>
Message-ID: <CABFfbXsjnz6PVpuHOHF0czXYT2h=wdf4U19CMHXBREDVzS8GHw@mail.gmail.com>

On Mon, Apr 6, 2020 at 9:15 AM Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>
> On 02/04/2020 05:35, Kevin Ushey wrote:
> > Hello,
> >
> > Has a decision been made yet as to whether R 4.0.0 on Windows is going
> > to be built using the new gcc8 toolchain (described at
> > https://cran.r-project.org/bin/windows/testing/rtools40.html)?
>
> Short answer: 'no'.
>
> >>From the sidelines, I can see that the toolchain is being used to
> > build and test packages on CRAN; if there are any remaining issues
> > that I can help to try and run down (either in R or any CRAN packages)
> > I'd be happy to try and help.
>
> It is still under consideration, but resource constraints are biting
> hard as people's lives get more complicated.

Given the amount of work that has gone into this and the importance of
an up-to-date toolchain for maintaining well-functioning and current
system libraries and R packages, I think it should be considered to
delay the R 4.0 release over this until everyone is ready.


From jeroen @end|ng |rom berke|ey@edu  Mon Apr  6 14:38:47 2020
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Mon, 6 Apr 2020 14:38:47 +0200
Subject: [Rd] Rtools and R 4.0.0?
In-Reply-To: <CAD4oTHGkO0_ShuCe9hL_eO8SggYqcy5xZQ0c4GH5crg8Rdc7nA@mail.gmail.com>
References: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
 <CAD4oTHGkO0_ShuCe9hL_eO8SggYqcy5xZQ0c4GH5crg8Rdc7nA@mail.gmail.com>
Message-ID: <CABFfbXvLLHN=HRaar+5Ae2jjjdqUTGYu+j_6ROnvFXr-avveFA@mail.gmail.com>

On Mon, Apr 6, 2020 at 9:39 AM Gabriel Becker <gabembecker at gmail.com> wrote:
>
> Hi Kevin,
>
> On Wed, Apr 1, 2020 at 9:36 PM Kevin Ushey <kevinushey at gmail.com> wrote:
>
> > Hello,
> >
> > FWIW, I'm excited at the prospect at seeing a new toolchain for
> > Windows, since it would imply support for C++17 and so it would become
> > easier for CRAN packages to depend on the newer C++ standard.
> >
>
> One thing to keep in mind (having been the R installation owner in such a
> place for multiple years) is that many coproprate or otherwise controlled
> compute environments may not have access to a c++17 compiler on their
> servers so making it easy for packages to rely on that is not purely
> beneficial to all parts of the R community.

No, you're missing an important point here. On Windows, the toolchain
version is tied to the version of R and we try to keep supporting at
least one or two previous versions of R. So this means we always need
to support the legacy toolchain for a while as well.

Hence if we switch Windows to gcc-8 for R 4.0, we still rely on
gcc-4.9 for continued support of R 3.3-3.6. This lag is what is making
the maintenance of windows system libraries painful, and why we need
to plan ahead. This is different from Linux where version of the
compiler is given by the OS and not tied to the version of R.

If we would miss the boat again, and R 4.0 on Windows would stick with
gcc-49, this means we need to keep supporting gcc-49 as long as we
want to support R-4.0, which is at least 2022 or 2023. This would be
pretty bad. Even currently the latest versions of important system
libraries used by R packages (e.g. the gdal stack) require recent
compilers and cannot be built anymore with gcc-49. As more C++
projects are adopting C++14/17, we can no longer update these system
libraries, missing out on all upstream fixes and advances. This would
seriously decrement the quality of the R ecosystem.


From g@bembecker @end|ng |rom gm@||@com  Mon Apr  6 19:23:39 2020
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Mon, 6 Apr 2020 10:23:39 -0700
Subject: [Rd] Rtools and R 4.0.0?
In-Reply-To: <CABFfbXvLLHN=HRaar+5Ae2jjjdqUTGYu+j_6ROnvFXr-avveFA@mail.gmail.com>
References: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
 <CAD4oTHGkO0_ShuCe9hL_eO8SggYqcy5xZQ0c4GH5crg8Rdc7nA@mail.gmail.com>
 <CABFfbXvLLHN=HRaar+5Ae2jjjdqUTGYu+j_6ROnvFXr-avveFA@mail.gmail.com>
Message-ID: <CAD4oTHFSyJ4OGfK=Gyom6AZsHVOnFipQyn9rS5cniC84sZTbbg@mail.gmail.com>

Jeroen,

Sorry, I was unclear. I'm not arguing against switching tot the new windows
tool chain. Without being involved or knowing the details  of any
remaining difficulties, I am de facto for that.

I was specifically responding to the prospect of R packages moving to
directly rely on c++17 this quickly, which Kevin brought up. R itself
obviously won't be relying on c++17 since there is no c++ code in it at all
I believe.

Best,
~G

On Mon, Apr 6, 2020 at 5:38 AM Jeroen Ooms <jeroen at berkeley.edu> wrote:

> On Mon, Apr 6, 2020 at 9:39 AM Gabriel Becker <gabembecker at gmail.com>
> wrote:
> >
> > Hi Kevin,
> >
> > On Wed, Apr 1, 2020 at 9:36 PM Kevin Ushey <kevinushey at gmail.com> wrote:
> >
> > > Hello,
> > >
> > > FWIW, I'm excited at the prospect at seeing a new toolchain for
> > > Windows, since it would imply support for C++17 and so it would become
> > > easier for CRAN packages to depend on the newer C++ standard.
> > >
> >
> > One thing to keep in mind (having been the R installation owner in such a
> > place for multiple years) is that many coproprate or otherwise controlled
> > compute environments may not have access to a c++17 compiler on their
> > servers so making it easy for packages to rely on that is not purely
> > beneficial to all parts of the R community.
>
> No, you're missing an important point here. On Windows, the toolchain
> version is tied to the version of R and we try to keep supporting at
> least one or two previous versions of R. So this means we always need
> to support the legacy toolchain for a while as well.
>
> Hence if we switch Windows to gcc-8 for R 4.0, we still rely on
> gcc-4.9 for continued support of R 3.3-3.6. This lag is what is making
> the maintenance of windows system libraries painful, and why we need
> to plan ahead. This is different from Linux where version of the
> compiler is given by the OS and not tied to the version of R.
>
> If we would miss the boat again, and R 4.0 on Windows would stick with
> gcc-49, this means we need to keep supporting gcc-49 as long as we
> want to support R-4.0, which is at least 2022 or 2023. This would be
> pretty bad. Even currently the latest versions of important system
> libraries used by R packages (e.g. the gdal stack) require recent
> compilers and cannot be built anymore with gcc-49. As more C++
> projects are adopting C++14/17, we can no longer update these system
> libraries, missing out on all upstream fixes and advances. This would
> seriously decrement the quality of the R ecosystem.
>

	[[alternative HTML version deleted]]


From p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz  Mon Apr  6 22:30:37 2020
From: p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz (Paul Murrell)
Date: Tue, 7 Apr 2020 08:30:37 +1200
Subject: [Rd] Plotmath on Fedora 31 broken with with pango >= 1.44 -
 workarounds?
In-Reply-To: <CALEXWq18u1JeJnDBba5F1XHsGvah+SPxbmgjA7=489nqGXG_mA@mail.gmail.com>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
 <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
 <CALEXWq18u1JeJnDBba5F1XHsGvah+SPxbmgjA7=489nqGXG_mA@mail.gmail.com>
Message-ID: <9644232c-d4a4-5b99-3d16-62f062f79567@stat.auckland.ac.nz>



On 6/04/20 8:21 pm, I?aki Ucar wrote:
> On Mon, 6 Apr 2020 at 04:59, Paul Murrell <paul at stat.auckland.ac.nz> wrote:
>>
>> Hi
>>
>> The R branch ...
>>
>> https://svn.r-project.org/R/branches/R-symfam/
>>
>> ... is now set up so that it works "out of the box" on Fedora by setting
>> the default to be 'symbolfamily=cairoSymbolFont(family, usePUA=FALSE)'
>> when grSoftVersion()["pango"] is greater than "1.44".
> 
> That is awesome, thanks! Will you port this to the R-3-6-branch?

I'll be very pleased if I can get this merged in time for R 4.0.0.

I am not sure if there will be any further patch releases in the R 3.6 
series.  That would require wider discussion within R-core.
Paul
-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From @tep@n@@|nde|@r @end|ng |rom or@c|e@com  Tue Apr  7 09:19:03 2020
From: @tep@n@@|nde|@r @end|ng |rom or@c|e@com (Stepan)
Date: Tue, 7 Apr 2020 09:19:03 +0200
Subject: [Rd] RIOT 2020
In-Reply-To: <c5c63474-132c-32c3-905a-c53ab9782552@oracle.com>
References: <c5c63474-132c-32c3-905a-c53ab9782552@oracle.com>
Message-ID: <113d21a4-abe0-dd39-317d-42cf1864502b@oracle.com>

After carefully considering the current situation regarding COVID-19, we 
decided to cancel this year's RIOT workshop.

Best regards,
Stepan

On 25. 02. 20 17:38, Stepan wrote:
> I hope you don?t mind us using this mailing list for a small 
> advertisement, but we think it is most relevant for this group:
> 
> We'd like to invite you to RIOT 2020 - the 5rd workshop on R 
> Implementation, Optimization and Tooling [1]. It will take place 
> co-located with, and during, useR! 2020 in St. Louis on July 8th. RIOT 
> is an excellent venue for deep technical discussions about R 
> implementations, tools, optimizations and R extension, and will be very 
> interesting for anyone interested in what?s under the hood of R.
> 
> Regards,
> Stepan Sindelar, Lukas Stadler (Oracle Labs), Jan Vitek (Northeastern), 
> Alexander Bertram (BeDataDriven)
> 
> [1] 
> http://riotworkshop.github.io 
>


From @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r  Tue Apr  7 13:35:48 2020
From: @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r (Samuel Granjeaud IR/Inserm)
Date: Tue, 07 Apr 2020 11:35:48 +0000
Subject: [Rd] Hard memory limit of 16GB under Windows?
Message-ID: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>

Hi,
I am not not sure whether this topic belongs to this mail list, but I 
feel the subscribers here should be the right audience.
I noticed that the memory limit reported under Windows is 16 GB. I am 
wondering how to increase it. I didn't found anything in Rprofile.site 
nor .Rprofile. Is this limit hard coded at compilation?
Best,
Samuel
	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue Apr  7 14:24:13 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 7 Apr 2020 14:24:13 +0200
Subject: [Rd] Hard memory limit of 16GB under Windows?
In-Reply-To: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
References: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
Message-ID: <1e00202b-4529-3488-800b-cdf3a81bfc58@gmail.com>

Hi Samuel,

could you please provide more information? Where do you see the limit 
reported or how did you trigger it, what version of Windows do you have, 
are you using 64-bit build of R (sessionInfo())

Please check help("Memory-limits") and section 8 of R Admin manual

Best,
Tomas

On 4/7/20 1:35 PM, Samuel Granjeaud IR/Inserm wrote:
> Hi,
> I am not not sure whether this topic belongs to this mail list, but I
> feel the subscribers here should be the right audience.
> I noticed that the memory limit reported under Windows is 16 GB. I am
> wondering how to increase it. I didn't found anything in Rprofile.site
> nor .Rprofile. Is this limit hard coded at compilation?
> Best,
> Samuel
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r  Tue Apr  7 15:57:48 2020
From: @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r (Samuel Granjeaud IR/Inserm)
Date: Tue, 07 Apr 2020 13:57:48 +0000
Subject: [Rd] Hard memory limit of 16GB under Windows?
In-Reply-To: <1e00202b-4529-3488-800b-cdf3a81bfc58@gmail.com>
References: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
 <1e00202b-4529-3488-800b-cdf3a81bfc58@gmail.com>
Message-ID: <em4318d77f-0ea6-4099-892f-73c3c5302375@bioinfo5>

Hi Tomas,

Many thanks for your answer.

Here is a copy of a fresh session under RStudio, and after a copy under 
Rgui.
Strangely enough the result of memory.limit() is not the same. Without 
your question I would not have looked to RGui, being used to work with 
RStudio.

The value under RGui sounds to correspond to the total RAM of the 
computer. It makes me noticing that the value is in MB.

The value under Rstudio was so huge (1.759219e+13) that I just 
interpreted it as GB. But I was totally wrong. So in fact I don't know 
what it refers to. The documentation says "For a 64-bit versions of R 
under 64-bit Windows the limit is currently 8Tb.", but it looks like 
being 16TB, which my computer don't have of course.

I still have to understand why my colleague has a problem of memory 
allocation (cannot allocate vector of size 12.6 Gb).

Sorry for the wrong interpretation, but thanks for the help,
Samuel

--- RStudio

R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

 > memory.limit()
[1] 1.759219e+13
 > sessionInfo()
R version 3.6.3 (2020-02-29)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 18363)

Matrix products: default

locale:
[1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252    
LC_MONETARY=French_France.1252 LC_NUMERIC=C
[5] LC_TIME=French_France.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.6.3 tools_3.6.3
 >

--- RGui

R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

 > ls()
character(0)
 > memory.limit()
[1] 32627
 > sessionInfo()
R version 3.6.3 (2020-02-29)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 18363)

Matrix products: default

locale:
[1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252    
LC_MONETARY=French_France.1252
[4] LC_NUMERIC=C                   LC_TIME=French_France.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.6.3
 >


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue Apr  7 16:24:02 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 7 Apr 2020 16:24:02 +0200
Subject: [Rd] Hard memory limit of 16GB under Windows?
In-Reply-To: <em4318d77f-0ea6-4099-892f-73c3c5302375@bioinfo5>
References: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
 <1e00202b-4529-3488-800b-cdf3a81bfc58@gmail.com>
 <em4318d77f-0ea6-4099-892f-73c3c5302375@bioinfo5>
Message-ID: <4897fd30-e8da-0c58-1c36-f59266b1163e@gmail.com>

Hi Samuel,

please also have a look at ?memory.limit. You can set this limit at R 
startup. It is in megabytes. Maybe R Studio sets it at runtime.

Best
Tomas

On 4/7/20 3:57 PM, Samuel Granjeaud IR/Inserm wrote:
> Hi Tomas,
>
> Many thanks for your answer.
>
> Here is a copy of a fresh session under RStudio, and after a copy 
> under Rgui.
> Strangely enough the result of memory.limit() is not the same. Without 
> your question I would not have looked to RGui, being used to work with 
> RStudio.
>
> The value under RGui sounds to correspond to the total RAM of the 
> computer. It makes me noticing that the value is in MB.
>
> The value under Rstudio was so huge (1.759219e+13) that I just 
> interpreted it as GB. But I was totally wrong. So in fact I don't know 
> what it refers to. The documentation says "For a 64-bit versions of R 
> under 64-bit Windows the limit is currently 8Tb.", but it looks like 
> being 16TB, which my computer don't have of course.
>
> I still have to understand why my colleague has a problem of memory 
> allocation (cannot allocate vector of size 12.6 Gb).
>
> Sorry for the wrong interpretation, but thanks for the help,
> Samuel
>
> --- RStudio
>
> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
> > memory.limit()
> [1] 1.759219e+13
> > sessionInfo()
> R version 3.6.3 (2020-02-29)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 10 x64 (build 18363)
>
> Matrix products: default
>
> locale:
> [1] LC_COLLATE=French_France.1252? LC_CTYPE=French_France.1252 
> LC_MONETARY=French_France.1252 LC_NUMERIC=C
> [5] LC_TIME=French_France.1252
>
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets? methods base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.3 tools_3.6.3
> >
>
> --- RGui
>
> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
> > ls()
> character(0)
> > memory.limit()
> [1] 32627
> > sessionInfo()
> R version 3.6.3 (2020-02-29)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 10 x64 (build 18363)
>
> Matrix products: default
>
> locale:
> [1] LC_COLLATE=French_France.1252? LC_CTYPE=French_France.1252 
> LC_MONETARY=French_France.1252
> [4] LC_NUMERIC=C?????????????????? LC_TIME=French_France.1252
>
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets? methods base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.3
> >
>


From m@rc_@chw@rtz @end|ng |rom me@com  Tue Apr  7 16:39:27 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Tue, 7 Apr 2020 10:39:27 -0400
Subject: [Rd] Hard memory limit of 16GB under Windows?
In-Reply-To: <4897fd30-e8da-0c58-1c36-f59266b1163e@gmail.com>
References: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
 <1e00202b-4529-3488-800b-cdf3a81bfc58@gmail.com>
 <em4318d77f-0ea6-4099-892f-73c3c5302375@bioinfo5>
 <4897fd30-e8da-0c58-1c36-f59266b1163e@gmail.com>
Message-ID: <03D3DC14-DBCA-4A03-87AD-6FA9576A5CBB@me.com>

Hi Samuel,

You may already be aware, but if not, RStudio has their own support mechanisms here:

  https://support.rstudio.com/hc/en-us

If this does turn out to be RStudio specific, you may wish to check there for additional insights.

Regards,

Marc Schwartz


> On Apr 7, 2020, at 10:24 AM, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
> 
> Hi Samuel,
> 
> please also have a look at ?memory.limit. You can set this limit at R startup. It is in megabytes. Maybe R Studio sets it at runtime.
> 
> Best
> Tomas
> 
> On 4/7/20 3:57 PM, Samuel Granjeaud IR/Inserm wrote:
>> Hi Tomas,
>> 
>> Many thanks for your answer.
>> 
>> Here is a copy of a fresh session under RStudio, and after a copy under Rgui.
>> Strangely enough the result of memory.limit() is not the same. Without your question I would not have looked to RGui, being used to work with RStudio.
>> 
>> The value under RGui sounds to correspond to the total RAM of the computer. It makes me noticing that the value is in MB.
>> 
>> The value under Rstudio was so huge (1.759219e+13) that I just interpreted it as GB. But I was totally wrong. So in fact I don't know what it refers to. The documentation says "For a 64-bit versions of R under 64-bit Windows the limit is currently 8Tb.", but it looks like being 16TB, which my computer don't have of course.
>> 
>> I still have to understand why my colleague has a problem of memory allocation (cannot allocate vector of size 12.6 Gb).
>> 
>> Sorry for the wrong interpretation, but thanks for the help,
>> Samuel
>> 
>> --- RStudio
>> 
>> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
>> Copyright (C) 2020 The R Foundation for Statistical Computing
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> 
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>> 
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>> 
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>> 
>> > memory.limit()
>> [1] 1.759219e+13
>> > sessionInfo()
>> R version 3.6.3 (2020-02-29)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows 10 x64 (build 18363)
>> 
>> Matrix products: default
>> 
>> locale:
>> [1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252 LC_MONETARY=French_France.1252 LC_NUMERIC=C
>> [5] LC_TIME=French_France.1252
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods base
>> 
>> loaded via a namespace (and not attached):
>> [1] compiler_3.6.3 tools_3.6.3
>> >
>> 
>> --- RGui
>> 
>> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
>> Copyright (C) 2020 The R Foundation for Statistical Computing
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> 
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>> 
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>> 
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>> 
>> > ls()
>> character(0)
>> > memory.limit()
>> [1] 32627
>> > sessionInfo()
>> R version 3.6.3 (2020-02-29)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows 10 x64 (build 18363)
>> 
>> Matrix products: default
>> 
>> locale:
>> [1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252 LC_MONETARY=French_France.1252
>> [4] LC_NUMERIC=C                   LC_TIME=French_France.1252
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods base
>> 
>> loaded via a namespace (and not attached):
>> [1] compiler_3.6.3
>> >
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From edd @end|ng |rom deb|@n@org  Tue Apr  7 16:47:13 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 7 Apr 2020 09:47:13 -0500
Subject: [Rd] Rtools and R 4.0.0?
In-Reply-To: <CAD4oTHFSyJ4OGfK=Gyom6AZsHVOnFipQyn9rS5cniC84sZTbbg@mail.gmail.com>
References: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
 <CAD4oTHGkO0_ShuCe9hL_eO8SggYqcy5xZQ0c4GH5crg8Rdc7nA@mail.gmail.com>
 <CABFfbXvLLHN=HRaar+5Ae2jjjdqUTGYu+j_6ROnvFXr-avveFA@mail.gmail.com>
 <CAD4oTHFSyJ4OGfK=Gyom6AZsHVOnFipQyn9rS5cniC84sZTbbg@mail.gmail.com>
Message-ID: <24204.37489.757879.648305@rob.eddelbuettel.com>


There appears to have been some progress on this matter:

-Note that @command{g++} 4.9.x (as used for @R{} on Windows up to 3.6.x)
+Note that @command{g++} 4.9.x (as used on Windows prior to @R{} 4.0.0)

See SVN commit r78169 titled 'anticipate change in Windows toolchain', or the
mirrored git commit at 
https://github.com/wch/r-source/commit/bd674e2b76b2384169424e3d899fbfb5ac174978

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From th|erry@onke||nx @end|ng |rom |nbo@be  Tue Apr  7 17:05:12 2020
From: th|erry@onke||nx @end|ng |rom |nbo@be (Thierry Onkelinx)
Date: Tue, 7 Apr 2020 17:05:12 +0200
Subject: [Rd] Hard memory limit of 16GB under Windows?
In-Reply-To: <em4318d77f-0ea6-4099-892f-73c3c5302375@bioinfo5>
References: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
 <1e00202b-4529-3488-800b-cdf3a81bfc58@gmail.com>
 <em4318d77f-0ea6-4099-892f-73c3c5302375@bioinfo5>
Message-ID: <CAJuCY5x-sC94EofCqSKNbTGANHyY6p=f8YAbLVLAOvOcnEsY3g@mail.gmail.com>

Dear Samuel,

The most important information from your mail was the actual error message:
"cannot allocate vector of size 12.6 Gb".

You'll need to know what code generated this error message. And then figure
out if the code does something sensible. Often that is not the case when
you get a similar error message.

Best regards,

ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>


Op di 7 apr. 2020 om 16:16 schreef Samuel Granjeaud IR/Inserm <
samuel.granjeaud at inserm.fr>:

> Hi Tomas,
>
> Many thanks for your answer.
>
> Here is a copy of a fresh session under RStudio, and after a copy under
> Rgui.
> Strangely enough the result of memory.limit() is not the same. Without
> your question I would not have looked to RGui, being used to work with
> RStudio.
>
> The value under RGui sounds to correspond to the total RAM of the
> computer. It makes me noticing that the value is in MB.
>
> The value under Rstudio was so huge (1.759219e+13) that I just
> interpreted it as GB. But I was totally wrong. So in fact I don't know
> what it refers to. The documentation says "For a 64-bit versions of R
> under 64-bit Windows the limit is currently 8Tb.", but it looks like
> being 16TB, which my computer don't have of course.
>
> I still have to understand why my colleague has a problem of memory
> allocation (cannot allocate vector of size 12.6 Gb).
>
> Sorry for the wrong interpretation, but thanks for the help,
> Samuel
>
> --- RStudio
>
> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
>  > memory.limit()
> [1] 1.759219e+13
>  > sessionInfo()
> R version 3.6.3 (2020-02-29)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 10 x64 (build 18363)
>
> Matrix products: default
>
> locale:
> [1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252
> LC_MONETARY=French_France.1252 LC_NUMERIC=C
> [5] LC_TIME=French_France.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.3 tools_3.6.3
>  >
>
> --- RGui
>
> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
>  > ls()
> character(0)
>  > memory.limit()
> [1] 32627
>  > sessionInfo()
> R version 3.6.3 (2020-02-29)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 10 x64 (build 18363)
>
> Matrix products: default
>
> locale:
> [1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252
> LC_MONETARY=French_France.1252
> [4] LC_NUMERIC=C                   LC_TIME=French_France.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.3
>  >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From kev|nu@hey @end|ng |rom gm@||@com  Tue Apr  7 18:06:48 2020
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Tue, 7 Apr 2020 09:06:48 -0700
Subject: [Rd] Rtools and R 4.0.0?
In-Reply-To: <24204.37489.757879.648305@rob.eddelbuettel.com>
References: <CAJXgQP3a-VO74kquUXBahuCYGdkj8ZZqQ44301YsyPJVsFndmg@mail.gmail.com>
 <CAD4oTHGkO0_ShuCe9hL_eO8SggYqcy5xZQ0c4GH5crg8Rdc7nA@mail.gmail.com>
 <CABFfbXvLLHN=HRaar+5Ae2jjjdqUTGYu+j_6ROnvFXr-avveFA@mail.gmail.com>
 <CAD4oTHFSyJ4OGfK=Gyom6AZsHVOnFipQyn9rS5cniC84sZTbbg@mail.gmail.com>
 <24204.37489.757879.648305@rob.eddelbuettel.com>
Message-ID: <CAJXgQP1XF5tuKrqqxbu7BHp47m93DQkbCyOa4NLTvpRKHSKfnQ@mail.gmail.com>

That's great to see, although I suspect it's still a speculative
change and could be backed out if any non-trivial issues were
encountered.

Regardless, I would like to thank R core, CRAN, and Jeroen for all of
the time that has gone into creating and validating this new
toolchain. This is arduous work at an especially arduous time, so I'd
like to voice my appreciation for all the time and energy they have
spent on making this possible.

Best,
Kevin

On Tue, Apr 7, 2020 at 7:47 AM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> There appears to have been some progress on this matter:
>
> -Note that @command{g++} 4.9.x (as used for @R{} on Windows up to 3.6.x)
> +Note that @command{g++} 4.9.x (as used on Windows prior to @R{} 4.0.0)
>
> See SVN commit r78169 titled 'anticipate change in Windows toolchain', or the
> mirrored git commit at
> https://github.com/wch/r-source/commit/bd674e2b76b2384169424e3d899fbfb5ac174978
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Tue Apr  7 18:26:13 2020
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Tue, 7 Apr 2020 17:26:13 +0100
Subject: [Rd] [SPAM]  Hard memory limit of 16GB under Windows?
In-Reply-To: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
References: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
Message-ID: <2306e489-622c-4692-ed64-5ded0ed1cac2@dewey.myzen.co.uk>

Dear Samuel

Does the FAQ for Windows section 2.9 help you here?

Michael

On 07/04/2020 12:35, Samuel Granjeaud IR/Inserm wrote:
> Hi,
> I am not not sure whether this topic belongs to this mail list, but I
> feel the subscribers here should be the right audience.
> I noticed that the memory limit reported under Windows is 16 GB. I am
> wondering how to increase it. I didn't found anything in Rprofile.site
> nor .Rprofile. Is this limit hard coded at compilation?
> Best,
> Samuel
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Michael
http://www.dewey.myzen.co.uk/home.html


From hp@ge@ @end|ng |rom |redhutch@org  Tue Apr  7 18:51:36 2020
From: hp@ge@ @end|ng |rom |redhutch@org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 7 Apr 2020 09:51:36 -0700
Subject: [Rd] Hard memory limit of 16GB under Windows?
In-Reply-To: <CAJuCY5x-sC94EofCqSKNbTGANHyY6p=f8YAbLVLAOvOcnEsY3g@mail.gmail.com>
References: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
 <1e00202b-4529-3488-800b-cdf3a81bfc58@gmail.com>
 <em4318d77f-0ea6-4099-892f-73c3c5302375@bioinfo5>
 <CAJuCY5x-sC94EofCqSKNbTGANHyY6p=f8YAbLVLAOvOcnEsY3g@mail.gmail.com>
Message-ID: <6c1125d0-c59b-744a-84ed-81a723020341@fredhutch.org>

Agreed. I don't see any evidence of a "hard limit" here. It just looks 
like the code you're running has exhausted the memory of your machine. 
It doesn't require creating a lot of 12.6 Gb vectors to do that, even on 
a machine with a lot of memory ;-)

H.

On 4/7/20 08:05, Thierry Onkelinx via R-devel wrote:
> Dear Samuel,
> 
> The most important information from your mail was the actual error message:
> "cannot allocate vector of size 12.6 Gb".
> 
> You'll need to know what code generated this error message. And then figure
> out if the code does something sensible. Often that is not the case when
> you get a similar error message.
> 
> Best regards,
> 
> ir. Thierry Onkelinx
> Statisticus / Statistician
> 
> Vlaamse Overheid / Government of Flanders
> INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
> FOREST
> Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
> thierry.onkelinx at inbo.be
> Havenlaan 88 bus 73, 1000 Brussel
> https://urldefense.proofpoint.com/v2/url?u=http-3A__www.inbo.be&d=DwICAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=r6WLJ5dXWo2qb7mQwONaCxYeeWgKwycd3y89JoqY-oY&s=VNmTfuiByvneqd4lcQS0o961TZa3ygo2Rdp7AtiGnk0&e=
> 
> ///////////////////////////////////////////////////////////////////////////////////////////
> To call in the statistician after the experiment is done may be no more
> than asking him to perform a post-mortem examination: he may be able to say
> what the experiment died of. ~ Sir Ronald Aylmer Fisher
> The plural of anecdote is not data. ~ Roger Brinner
> The combination of some data and an aching desire for an answer does not
> ensure that a reasonable answer can be extracted from a given body of data.
> ~ John Tukey
> ///////////////////////////////////////////////////////////////////////////////////////////
> 
> <https://urldefense.proofpoint.com/v2/url?u=https-3A__www.inbo.be&d=DwICAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=r6WLJ5dXWo2qb7mQwONaCxYeeWgKwycd3y89JoqY-oY&s=qqsNew3vl9ZvyUMRz_GQy_fAfoj9axzmbcsUUayPVAs&e= >
> 
> 
> Op di 7 apr. 2020 om 16:16 schreef Samuel Granjeaud IR/Inserm <
> samuel.granjeaud at inserm.fr>:
> 
>> Hi Tomas,
>>
>> Many thanks for your answer.
>>
>> Here is a copy of a fresh session under RStudio, and after a copy under
>> Rgui.
>> Strangely enough the result of memory.limit() is not the same. Without
>> your question I would not have looked to RGui, being used to work with
>> RStudio.
>>
>> The value under RGui sounds to correspond to the total RAM of the
>> computer. It makes me noticing that the value is in MB.
>>
>> The value under Rstudio was so huge (1.759219e+13) that I just
>> interpreted it as GB. But I was totally wrong. So in fact I don't know
>> what it refers to. The documentation says "For a 64-bit versions of R
>> under 64-bit Windows the limit is currently 8Tb.", but it looks like
>> being 16TB, which my computer don't have of course.
>>
>> I still have to understand why my colleague has a problem of memory
>> allocation (cannot allocate vector of size 12.6 Gb).
>>
>> Sorry for the wrong interpretation, but thanks for the help,
>> Samuel
>>
>> --- RStudio
>>
>> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
>> Copyright (C) 2020 The R Foundation for Statistical Computing
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>>
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>>
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>>
>>   > memory.limit()
>> [1] 1.759219e+13
>>   > sessionInfo()
>> R version 3.6.3 (2020-02-29)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows 10 x64 (build 18363)
>>
>> Matrix products: default
>>
>> locale:
>> [1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252
>> LC_MONETARY=French_France.1252 LC_NUMERIC=C
>> [5] LC_TIME=French_France.1252
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_3.6.3 tools_3.6.3
>>   >
>>
>> --- RGui
>>
>> R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
>> Copyright (C) 2020 The R Foundation for Statistical Computing
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>
>> R is free software and comes with ABSOLUTELY NO WARRANTY.
>> You are welcome to redistribute it under certain conditions.
>> Type 'license()' or 'licence()' for distribution details.
>>
>> R is a collaborative project with many contributors.
>> Type 'contributors()' for more information and
>> 'citation()' on how to cite R or R packages in publications.
>>
>> Type 'demo()' for some demos, 'help()' for on-line help, or
>> 'help.start()' for an HTML browser interface to help.
>> Type 'q()' to quit R.
>>
>>   > ls()
>> character(0)
>>   > memory.limit()
>> [1] 32627
>>   > sessionInfo()
>> R version 3.6.3 (2020-02-29)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows 10 x64 (build 18363)
>>
>> Matrix products: default
>>
>> locale:
>> [1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252
>> LC_MONETARY=French_France.1252
>> [4] LC_NUMERIC=C                   LC_TIME=French_France.1252
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_3.6.3
>>   >
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwICAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=r6WLJ5dXWo2qb7mQwONaCxYeeWgKwycd3y89JoqY-oY&s=ABvG3sGKR5ln27FVCM8dlmZ82X93ZCTigbMxHeBEb6E&e=
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwICAg&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=r6WLJ5dXWo2qb7mQwONaCxYeeWgKwycd3y89JoqY-oY&s=ABvG3sGKR5ln27FVCM8dlmZ82X93ZCTigbMxHeBEb6E&e=
> 

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From therne@u @end|ng |rom m@yo@edu  Tue Apr  7 19:20:11 2020
From: therne@u @end|ng |rom m@yo@edu (Therneau, Terry M., Ph.D.)
Date: Tue, 07 Apr 2020 12:20:11 -0500
Subject: [Rd] ASAN
Message-ID: <28fddd$diguqu@ironport10.mayo.edu>

I'm trying to chase down a possible issue with the survival package, and 
so was trying to resurrect my ASAN version of r-devel.?? I added the 
lines to config.site for CC, CFLAGS and MAIN_LDFLAGS per section 4.3.3 
of the? 'packages' documentation, and lines to ~/.R/Makevars.

I followed that with? svn up,? tools/rsync-recommended, make distclean, 
./configure, then make.

It fails on the rebuild of MASS with the message

==15755==ASan runtime does not come first in initial library list; you 
should either link runtime to your application or manually preload it 
with LD_PRELOAD.
ERROR: loading failed
* removing ?/usr/local/src/R-devel/library/MASS?

It's not quite clear to me what to do next.

Terry Therneau



	[[alternative HTML version deleted]]


From p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz  Wed Apr  8 04:25:16 2020
From: p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz (Paul Murrell)
Date: Wed, 8 Apr 2020 14:25:16 +1200
Subject: [Rd] Plotmath on Fedora 31 broken with with pango >= 1.44 -
 workarounds?
In-Reply-To: <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
 <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
Message-ID: <47e8a03e-bb3b-8a25-bead-0a16208cd3e8@stat.auckland.ac.nz>


The R-symfam branch (r78176) is now working, for my basic tests, on ...

Ubuntu (pango < 1.44)
Ubuntu (no pango)
Fedora (pango > 1.44)
Windows

I need help to confirm that this builds on macOS and that the basic 
tests work ...

https://github.com/pmur002/R-symfam-testing

Brian has been helping with the build, but I am still looking for 
someone who can run the tests please.  Happy to be fed PDF files to 
scrutinize myself;  it's generating the PDF files on macOS that I need 
help with.

Paul

On 6/04/20 2:59 pm, Paul Murrell wrote:
> Hi
> 
> The R branch ...
> 
> https://svn.r-project.org/R/branches/R-symfam/
> 
> ... is now set up so that it works "out of the box" on Fedora by setting 
> the default to be 'symbolfamily=cairoSymbolFont(family, usePUA=FALSE)' 
> when grSoftVersion()["pango"] is greater than "1.44".
> 
> This means that on Fedora 31 (at least on the Docker container I am 
> testing on) "sans"->"NimubusSans" is used as the symbol font by default 
> and R converts Adobe Symbol Encoding code points to non-PUA UTF8 code 
> points.? This is not the prettiest result, but it is a lot better than 
> the page full of missing glyphs that we had.
> 
> The default on less "bleeding edge" systems, e.g., my Ubuntu 18.04, 
> remains 'symbolfamily="Symbol"'.
> 
> The default on other platforms is supposed to be the same as it was, but 
> I need help to confirm that.? I have set up a github repo ...
> 
> https://github.com/pmur002/R-symfam-testing
> 
> ... that describes how to test this on macOS and Windows if anyone has 
> time to do so.
> 
> I will start trying to set up a Windows test unless someone beats me to it.
> 
> Paul
> 
> On 30/03/20 3:24 pm, Paul Murrell wrote:
>> Hi
>>
>> I have created an R branch that contains a potential fix ...
>>
>> https://svn.r-project.org/R/branches/R-symfam/
>>
>> This allows, for example, ...
>>
>> cairo_pdf(symbolfamily="OpenSymbol")
>>
>> ... to specify that the OpenSymbol family should be used as the 
>> "symbol" font (e.g., for "plotmath") in R.
>>
>> This is just a separate branch for now because, while I have tested it 
>> under Unbuntu 18.04 and Fedora 31, I cannot even build R for Windows 
>> (right now) or Mac (ever) and I do not want to drop a bomb on R-devel 
>> at this stage of the release process for R 4.0.0.
>>
>> The attached file contains at least an outline of steps required to do 
>> a minimal test if anyone wants to try the fix on Linux.
>>
>> cc'ing Simon and Jeroen in case they are able to help with checking 
>> that this builds and works on Mac and/or Windows.
>>
>> NOTEs:
>> - 'symbolfamily' can only be specified when a graphics device is 
>> opened, and it is then fixed for that device.
>> - on Windows, for cairo-based devices, the "symbol" font is still 
>> hard-coded as "Standard Symbols L"
>>
>> Paul
>>
>> On 30/03/20 8:15 am, Paul Murrell wrote:
>>> Hi
>>>
>>> Thanks for your input on this I?aki and Nicolas.
>>>
>>> I am starting testing an R fix for this problem today.
>>>
>>> As suggested, the plan is to allow the R user to specify a font 
>>> family other than "symbol" for plotmath output (or, more generally, 
>>> in R parlance, for 'font=5' or 'fontface=5') on a Cairo-based 
>>> graphics device.
>>>
>>> Paul
>>>
>>>
>>> On 27/03/20 11:30 pm, I?aki Ucar wrote:
>>>> On Wed, 25 Mar 2020 at 12:25, Nicolas Mailhot
>>>> <nicolas.mailhot at laposte.net> wrote:
>>>>>
>>>>> <snip>
>>>>>
>>>>> R brought this all on itself by hardcoding a Windows-only ?Symbol? 
>>>>> font
>>>>> family name in its default conf. Linux systems are UTF-8 by default 
>>>>> for
>>>>> ~20 years now, they don?t need the forcing of magic font families to
>>>>> handle symbols not present in the 8-bit legacy Windows encodings.
>>>>>
>>>>> The actual effect of this conf is not the selection of font files with
>>>>> special and unusual symbols. It is to priorize fonts that match the
>>>>> "Symbol" magic name. And those fonts are few and crumbling on Linux
>>>>> systems, because no one has needed to bother with them since Linux
>>>>> switched to UTF-8 last millenium.
>>>>>
>>>>> Just stop using ?Symbol? in R and things will work a lot better.
>>>>> Alternatively, prepare to maintain the ?Symbol? aliasing stack in
>>>>> fontconfig (and fight with wine for it), because *no* *one* *else*
>>>>> *cares* about this legacy Windows-specific stuff.
>>>>
>>>> So, in the light of Nicolas' input (thanks!), I think that font
>>>> selection should be fixed upstream in R. I'd be happy to put all this
>>>> together in R's bugzilla, but I don't have an account. Could someone
>>>> please invite me?
>>>>
>>>> I?aki
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>
> 

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From g@bembecker @end|ng |rom gm@||@com  Wed Apr  8 05:59:50 2020
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Tue, 7 Apr 2020 20:59:50 -0700
Subject: [Rd] Plotmath on Fedora 31 broken with with pango >= 1.44 -
 workarounds?
In-Reply-To: <47e8a03e-bb3b-8a25-bead-0a16208cd3e8@stat.auckland.ac.nz>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
 <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
 <47e8a03e-bb3b-8a25-bead-0a16208cd3e8@stat.auckland.ac.nz>
Message-ID: <CAD4oTHEnQtQ9209wQSm3473e6VdMe8dXHsX1GuHeUzRKmbaUvA@mail.gmail.com>

Paul et al,

I will try to do this tonight or tomorrow, though it will not be built with
th system tools because I have yet to get that tto work locally (spent a
good chunk of this morning trying).

I will send a separate messaage regarding those difficulties as well so
that we can at least confirm that they are due to a malconfiguration on my
part.

Best,
~G

On Tue, Apr 7, 2020 at 7:25 PM Paul Murrell <paul at stat.auckland.ac.nz>
wrote:

>
> The R-symfam branch (r78176) is now working, for my basic tests, on ...
>
> Ubuntu (pango < 1.44)
> Ubuntu (no pango)
> Fedora (pango > 1.44)
> Windows
>
> I need help to confirm that this builds on macOS and that the basic
> tests work ...
>
> https://github.com/pmur002/R-symfam-testing
>
> Brian has been helping with the build, but I am still looking for
> someone who can run the tests please.  Happy to be fed PDF files to
> scrutinize myself;  it's generating the PDF files on macOS that I need
> help with.
>
> Paul
>
> On 6/04/20 2:59 pm, Paul Murrell wrote:
> > Hi
> >
> > The R branch ...
> >
> > https://svn.r-project.org/R/branches/R-symfam/
> >
> > ... is now set up so that it works "out of the box" on Fedora by setting
> > the default to be 'symbolfamily=cairoSymbolFont(family, usePUA=FALSE)'
> > when grSoftVersion()["pango"] is greater than "1.44".
> >
> > This means that on Fedora 31 (at least on the Docker container I am
> > testing on) "sans"->"NimubusSans" is used as the symbol font by default
> > and R converts Adobe Symbol Encoding code points to non-PUA UTF8 code
> > points.  This is not the prettiest result, but it is a lot better than
> > the page full of missing glyphs that we had.
> >
> > The default on less "bleeding edge" systems, e.g., my Ubuntu 18.04,
> > remains 'symbolfamily="Symbol"'.
> >
> > The default on other platforms is supposed to be the same as it was, but
> > I need help to confirm that.  I have set up a github repo ...
> >
> > https://github.com/pmur002/R-symfam-testing
> >
> > ... that describes how to test this on macOS and Windows if anyone has
> > time to do so.
> >
> > I will start trying to set up a Windows test unless someone beats me to
> it.
> >
> > Paul
> >
> > On 30/03/20 3:24 pm, Paul Murrell wrote:
> >> Hi
> >>
> >> I have created an R branch that contains a potential fix ...
> >>
> >> https://svn.r-project.org/R/branches/R-symfam/
> >>
> >> This allows, for example, ...
> >>
> >> cairo_pdf(symbolfamily="OpenSymbol")
> >>
> >> ... to specify that the OpenSymbol family should be used as the
> >> "symbol" font (e.g., for "plotmath") in R.
> >>
> >> This is just a separate branch for now because, while I have tested it
> >> under Unbuntu 18.04 and Fedora 31, I cannot even build R for Windows
> >> (right now) or Mac (ever) and I do not want to drop a bomb on R-devel
> >> at this stage of the release process for R 4.0.0.
> >>
> >> The attached file contains at least an outline of steps required to do
> >> a minimal test if anyone wants to try the fix on Linux.
> >>
> >> cc'ing Simon and Jeroen in case they are able to help with checking
> >> that this builds and works on Mac and/or Windows.
> >>
> >> NOTEs:
> >> - 'symbolfamily' can only be specified when a graphics device is
> >> opened, and it is then fixed for that device.
> >> - on Windows, for cairo-based devices, the "symbol" font is still
> >> hard-coded as "Standard Symbols L"
> >>
> >> Paul
> >>
> >> On 30/03/20 8:15 am, Paul Murrell wrote:
> >>> Hi
> >>>
> >>> Thanks for your input on this I?aki and Nicolas.
> >>>
> >>> I am starting testing an R fix for this problem today.
> >>>
> >>> As suggested, the plan is to allow the R user to specify a font
> >>> family other than "symbol" for plotmath output (or, more generally,
> >>> in R parlance, for 'font=5' or 'fontface=5') on a Cairo-based
> >>> graphics device.
> >>>
> >>> Paul
> >>>
> >>>
> >>> On 27/03/20 11:30 pm, I?aki Ucar wrote:
> >>>> On Wed, 25 Mar 2020 at 12:25, Nicolas Mailhot
> >>>> <nicolas.mailhot at laposte.net> wrote:
> >>>>>
> >>>>> <snip>
> >>>>>
> >>>>> R brought this all on itself by hardcoding a Windows-only ?Symbol?
> >>>>> font
> >>>>> family name in its default conf. Linux systems are UTF-8 by default
> >>>>> for
> >>>>> ~20 years now, they don?t need the forcing of magic font families to
> >>>>> handle symbols not present in the 8-bit legacy Windows encodings.
> >>>>>
> >>>>> The actual effect of this conf is not the selection of font files
> with
> >>>>> special and unusual symbols. It is to priorize fonts that match the
> >>>>> "Symbol" magic name. And those fonts are few and crumbling on Linux
> >>>>> systems, because no one has needed to bother with them since Linux
> >>>>> switched to UTF-8 last millenium.
> >>>>>
> >>>>> Just stop using ?Symbol? in R and things will work a lot better.
> >>>>> Alternatively, prepare to maintain the ?Symbol? aliasing stack in
> >>>>> fontconfig (and fight with wine for it), because *no* *one* *else*
> >>>>> *cares* about this legacy Windows-specific stuff.
> >>>>
> >>>> So, in the light of Nicolas' input (thanks!), I think that font
> >>>> selection should be fixed upstream in R. I'd be happy to put all this
> >>>> together in R's bugzilla, but I don't have an account. Could someone
> >>>> please invite me?
> >>>>
> >>>> I?aki
> >>>>
> >>>> ______________________________________________
> >>>> R-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>>
> >>
> >
>
> --
> Dr Paul Murrell
> Department of Statistics
> The University of Auckland
> Private Bag 92019
> Auckland
> New Zealand
> 64 9 3737599 x85392
> paul at stat.auckland.ac.nz
> http://www.stat.auckland.ac.nz/~paul/
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Apr  8 10:31:30 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 8 Apr 2020 11:31:30 +0300
Subject: [Rd] ASAN
In-Reply-To: <28fddd$diguqu@ironport10.mayo.edu>
References: <28fddd$diguqu@ironport10.mayo.edu>
Message-ID: <20200408113130.1e0a5444@Tarkus>

On Tue, 07 Apr 2020 12:20:11 -0500
"Therneau, Terry M., Ph.D. via R-devel" <r-devel at r-project.org> wrote:

> It's not quite clear to me what to do next.

A quick check: do you have anything in LD_PRELOAD environment variable?
Third-party software like gtk3-nocsd may be using it for its own
purposes, which breaks ASan. When I build software with -fsanitize=...,
I have to explicitly unset LD_PRELOAD to get it to work.

-- 
Best regards,
Ivan


From g@bembecker @end|ng |rom gm@||@com  Wed Apr  8 11:55:31 2020
From: g@bembecker @end|ng |rom gm@||@com (Gabriel Becker)
Date: Wed, 8 Apr 2020 02:55:31 -0700
Subject: [Rd] Plotmath on Fedora 31 broken with with pango >= 1.44 -
 workarounds?
In-Reply-To: <CAD4oTHEnQtQ9209wQSm3473e6VdMe8dXHsX1GuHeUzRKmbaUvA@mail.gmail.com>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
 <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
 <47e8a03e-bb3b-8a25-bead-0a16208cd3e8@stat.auckland.ac.nz>
 <CAD4oTHEnQtQ9209wQSm3473e6VdMe8dXHsX1GuHeUzRKmbaUvA@mail.gmail.com>
Message-ID: <CAD4oTHEQ3Yq-4fqhv0VFscnFP32WzakqChN7NoyoVW8JZP3HYA@mail.gmail.com>

Hi Paul,

So I've run the tests (and am  attaching all numerous pdfs here) but the
takeaway from what I can see is as follows:

raw, without specifying font family, "look good" (see plot*raw.pdf)  from
your branch (my eye is upset by the positioning of the phi symbol in plot2,
but I've confirmed that it looks the same generated from 3.5.1, so
that isn't your branch).

The various font family settings seem to work too, from what I can tell.
Both font families you suggested, however, Helvetica and Apple Symbols (the
s is important) have significantly incomplete coverage with PUA on. Apple
Symbols does have nearly complete coverage (though  to my eye the symbols
are all smaller...) with PUA turned off, but Helvetica remains very spotty,
with disabling PUA only modestly increasing it's coverage, and not in the
places that seem likely to matter.

I hope that helps,
~G

On Tue, Apr 7, 2020 at 8:59 PM Gabriel Becker <gabembecker at gmail.com> wrote:

> Paul et al,
>
> I will try to do this tonight or tomorrow, though it will not be built
> with th system tools because I have yet to get that tto work locally (spent
> a good chunk of this morning trying).
>
> I will send a separate messaage regarding those difficulties as well so
> that we can at least confirm that they are due to a malconfiguration on my
> part.
>
> Best,
> ~G
>
> On Tue, Apr 7, 2020 at 7:25 PM Paul Murrell <paul at stat.auckland.ac.nz>
> wrote:
>
>>
>> The R-symfam branch (r78176) is now working, for my basic tests, on ...
>>
>> Ubuntu (pango < 1.44)
>> Ubuntu (no pango)
>> Fedora (pango > 1.44)
>> Windows
>>
>> I need help to confirm that this builds on macOS and that the basic
>> tests work ...
>>
>> https://github.com/pmur002/R-symfam-testing
>>
>> Brian has been helping with the build, but I am still looking for
>> someone who can run the tests please.  Happy to be fed PDF files to
>> scrutinize myself;  it's generating the PDF files on macOS that I need
>> help with.
>>
>> Paul
>>
>> On 6/04/20 2:59 pm, Paul Murrell wrote:
>> > Hi
>> >
>> > The R branch ...
>> >
>> > https://svn.r-project.org/R/branches/R-symfam/
>> >
>> > ... is now set up so that it works "out of the box" on Fedora by
>> setting
>> > the default to be 'symbolfamily=cairoSymbolFont(family, usePUA=FALSE)'
>> > when grSoftVersion()["pango"] is greater than "1.44".
>> >
>> > This means that on Fedora 31 (at least on the Docker container I am
>> > testing on) "sans"->"NimubusSans" is used as the symbol font by default
>> > and R converts Adobe Symbol Encoding code points to non-PUA UTF8 code
>> > points.  This is not the prettiest result, but it is a lot better than
>> > the page full of missing glyphs that we had.
>> >
>> > The default on less "bleeding edge" systems, e.g., my Ubuntu 18.04,
>> > remains 'symbolfamily="Symbol"'.
>> >
>> > The default on other platforms is supposed to be the same as it was,
>> but
>> > I need help to confirm that.  I have set up a github repo ...
>> >
>> > https://github.com/pmur002/R-symfam-testing
>> >
>> > ... that describes how to test this on macOS and Windows if anyone has
>> > time to do so.
>> >
>> > I will start trying to set up a Windows test unless someone beats me to
>> it.
>> >
>> > Paul
>> >
>> > On 30/03/20 3:24 pm, Paul Murrell wrote:
>> >> Hi
>> >>
>> >> I have created an R branch that contains a potential fix ...
>> >>
>> >> https://svn.r-project.org/R/branches/R-symfam/
>> >>
>> >> This allows, for example, ...
>> >>
>> >> cairo_pdf(symbolfamily="OpenSymbol")
>> >>
>> >> ... to specify that the OpenSymbol family should be used as the
>> >> "symbol" font (e.g., for "plotmath") in R.
>> >>
>> >> This is just a separate branch for now because, while I have tested it
>> >> under Unbuntu 18.04 and Fedora 31, I cannot even build R for Windows
>> >> (right now) or Mac (ever) and I do not want to drop a bomb on R-devel
>> >> at this stage of the release process for R 4.0.0.
>> >>
>> >> The attached file contains at least an outline of steps required to do
>> >> a minimal test if anyone wants to try the fix on Linux.
>> >>
>> >> cc'ing Simon and Jeroen in case they are able to help with checking
>> >> that this builds and works on Mac and/or Windows.
>> >>
>> >> NOTEs:
>> >> - 'symbolfamily' can only be specified when a graphics device is
>> >> opened, and it is then fixed for that device.
>> >> - on Windows, for cairo-based devices, the "symbol" font is still
>> >> hard-coded as "Standard Symbols L"
>> >>
>> >> Paul
>> >>
>> >> On 30/03/20 8:15 am, Paul Murrell wrote:
>> >>> Hi
>> >>>
>> >>> Thanks for your input on this I?aki and Nicolas.
>> >>>
>> >>> I am starting testing an R fix for this problem today.
>> >>>
>> >>> As suggested, the plan is to allow the R user to specify a font
>> >>> family other than "symbol" for plotmath output (or, more generally,
>> >>> in R parlance, for 'font=5' or 'fontface=5') on a Cairo-based
>> >>> graphics device.
>> >>>
>> >>> Paul
>> >>>
>> >>>
>> >>> On 27/03/20 11:30 pm, I?aki Ucar wrote:
>> >>>> On Wed, 25 Mar 2020 at 12:25, Nicolas Mailhot
>> >>>> <nicolas.mailhot at laposte.net> wrote:
>> >>>>>
>> >>>>> <snip>
>> >>>>>
>> >>>>> R brought this all on itself by hardcoding a Windows-only ?Symbol?
>> >>>>> font
>> >>>>> family name in its default conf. Linux systems are UTF-8 by default
>> >>>>> for
>> >>>>> ~20 years now, they don?t need the forcing of magic font families to
>> >>>>> handle symbols not present in the 8-bit legacy Windows encodings.
>> >>>>>
>> >>>>> The actual effect of this conf is not the selection of font files
>> with
>> >>>>> special and unusual symbols. It is to priorize fonts that match the
>> >>>>> "Symbol" magic name. And those fonts are few and crumbling on Linux
>> >>>>> systems, because no one has needed to bother with them since Linux
>> >>>>> switched to UTF-8 last millenium.
>> >>>>>
>> >>>>> Just stop using ?Symbol? in R and things will work a lot better.
>> >>>>> Alternatively, prepare to maintain the ?Symbol? aliasing stack in
>> >>>>> fontconfig (and fight with wine for it), because *no* *one* *else*
>> >>>>> *cares* about this legacy Windows-specific stuff.
>> >>>>
>> >>>> So, in the light of Nicolas' input (thanks!), I think that font
>> >>>> selection should be fixed upstream in R. I'd be happy to put all this
>> >>>> together in R's bugzilla, but I don't have an account. Could someone
>> >>>> please invite me?
>> >>>>
>> >>>> I?aki
>> >>>>
>> >>>> ______________________________________________
>> >>>> R-devel at r-project.org mailing list
>> >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> >>>>
>> >>
>> >
>>
>> --
>> Dr Paul Murrell
>> Department of Statistics
>> The University of Auckland
>> Private Bag 92019
>> Auckland
>> New Zealand
>> 64 9 3737599 x85392
>> paul at stat.auckland.ac.nz
>> http://www.stat.auckland.ac.nz/~paul/
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot001apsymNoPUA.pdf
Type: application/pdf
Size: 29162 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot001raw.pdf
Type: application/pdf
Size: 44262 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0001.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot001helvNoPUA.pdf
Type: application/pdf
Size: 36124 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0002.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot001apsym.pdf
Type: application/pdf
Size: 27796 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0003.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot001helv.pdf
Type: application/pdf
Size: 35341 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0004.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot002apsymNoPUA.pdf
Type: application/pdf
Size: 12278 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0005.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot002apsym.pdf
Type: application/pdf
Size: 12278 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0006.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot002helvNoPUA.pdf
Type: application/pdf
Size: 14845 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0007.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot002helv.pdf
Type: application/pdf
Size: 14845 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0008.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot002raw.pdf
Type: application/pdf
Size: 14349 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0009.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot003apsym.pdf
Type: application/pdf
Size: 22879 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0010.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot003apsymNoPUA.pdf
Type: application/pdf
Size: 22879 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0011.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot003helv.pdf
Type: application/pdf
Size: 27939 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0012.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot003helvNoPUA.pdf
Type: application/pdf
Size: 27939 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0013.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot003raw.pdf
Type: application/pdf
Size: 26890 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0014.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot004apsym.pdf
Type: application/pdf
Size: 16220 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0015.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot004apsymNoPUA.pdf
Type: application/pdf
Size: 16220 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0016.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot004helv.pdf
Type: application/pdf
Size: 21668 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0017.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot004raw.pdf
Type: application/pdf
Size: 20411 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0018.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot004helvNoPUA.pdf
Type: application/pdf
Size: 21668 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0019.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot005apsym.pdf
Type: application/pdf
Size: 13454 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0020.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot005apsymNoPUA.pdf
Type: application/pdf
Size: 13454 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0021.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot005helv.pdf
Type: application/pdf
Size: 14750 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0022.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot005helvNoPUA.pdf
Type: application/pdf
Size: 14750 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0023.pdf>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: plot005raw.pdf
Type: application/pdf
Size: 15651 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20200408/2ddbb91f/attachment-0024.pdf>

From @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r  Wed Apr  8 14:20:03 2020
From: @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r (Samuel Granjeaud IR/Inserm)
Date: Wed, 08 Apr 2020 12:20:03 +0000
Subject: [Rd] Hard memory limit of 16GB under Windows?
In-Reply-To: <6c1125d0-c59b-744a-84ed-81a723020341@fredhutch.org>
References: <emfb436b8b-b4cb-41bc-a183-5c31984721ee@bioinfo5>
 <1e00202b-4529-3488-800b-cdf3a81bfc58@gmail.com>
 <em4318d77f-0ea6-4099-892f-73c3c5302375@bioinfo5>
 <CAJuCY5x-sC94EofCqSKNbTGANHyY6p=f8YAbLVLAOvOcnEsY3g@mail.gmail.com>
 <6c1125d0-c59b-744a-84ed-81a723020341@fredhutch.org>
Message-ID: <em30467127-bfb4-4849-b2ce-c2602cb2add4@bioinfo5>

Thanks to all contributors for your time and useful feedbacks.
They pointed me to the right direction and brought me new knowledges.
Samuel


From p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz  Wed Apr  8 22:23:26 2020
From: p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz (Paul Murrell)
Date: Thu, 9 Apr 2020 08:23:26 +1200
Subject: [Rd] Plotmath on Fedora 31 broken with with pango >= 1.44 -
 workarounds?
In-Reply-To: <CAD4oTHEnQtQ9209wQSm3473e6VdMe8dXHsX1GuHeUzRKmbaUvA@mail.gmail.com>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
 <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
 <47e8a03e-bb3b-8a25-bead-0a16208cd3e8@stat.auckland.ac.nz>
 <CAD4oTHEnQtQ9209wQSm3473e6VdMe8dXHsX1GuHeUzRKmbaUvA@mail.gmail.com>
Message-ID: <5b1004d9-630e-b860-3d64-53cd41627025@stat.auckland.ac.nz>


Thanks Gabriel.  Simon and Brian are also helping out.  I will start a 
speparate thread for the four of us to coordinate.

Paul

On 8/04/20 3:59 pm, Gabriel Becker wrote:
> Paul et al,
> 
> I will try to do this tonight or tomorrow, though it will not be built 
> with th system tools because I have yet to get that tto work locally 
> (spent a good chunk of this morning trying).
> 
> I will send a separate messaage?regarding those difficulties as well so 
> that we can at least confirm that they are due to a malconfiguration on 
> my part.
> 
> Best,
> ~G
> 
> On Tue, Apr 7, 2020 at 7:25 PM Paul Murrell <paul at stat.auckland.ac.nz 
> <mailto:paul at stat.auckland.ac.nz>> wrote:
> 
> 
>     The R-symfam branch (r78176) is now working, for my basic tests, on ...
> 
>     Ubuntu (pango < 1.44)
>     Ubuntu (no pango)
>     Fedora (pango > 1.44)
>     Windows
> 
>     I need help to confirm that this builds on macOS and that the basic
>     tests work ...
> 
>     https://github.com/pmur002/R-symfam-testing
> 
>     Brian has been helping with the build, but I am still looking for
>     someone who can run the tests please.? Happy to be fed PDF files to
>     scrutinize myself;? it's generating the PDF files on macOS that I need
>     help with.
> 
>     Paul
> 
>     On 6/04/20 2:59 pm, Paul Murrell wrote:
>      > Hi
>      >
>      > The R branch ...
>      >
>      > https://svn.r-project.org/R/branches/R-symfam/
>      >
>      > ... is now set up so that it works "out of the box" on Fedora by
>     setting
>      > the default to be 'symbolfamily=cairoSymbolFont(family,
>     usePUA=FALSE)'
>      > when grSoftVersion()["pango"] is greater than "1.44".
>      >
>      > This means that on Fedora 31 (at least on the Docker container I am
>      > testing on) "sans"->"NimubusSans" is used as the symbol font by
>     default
>      > and R converts Adobe Symbol Encoding code points to non-PUA UTF8
>     code
>      > points.? This is not the prettiest result, but it is a lot better
>     than
>      > the page full of missing glyphs that we had.
>      >
>      > The default on less "bleeding edge" systems, e.g., my Ubuntu 18.04,
>      > remains 'symbolfamily="Symbol"'.
>      >
>      > The default on other platforms is supposed to be the same as it
>     was, but
>      > I need help to confirm that.? I have set up a github repo ...
>      >
>      > https://github.com/pmur002/R-symfam-testing
>      >
>      > ... that describes how to test this on macOS and Windows if
>     anyone has
>      > time to do so.
>      >
>      > I will start trying to set up a Windows test unless someone beats
>     me to it.
>      >
>      > Paul
>      >
>      > On 30/03/20 3:24 pm, Paul Murrell wrote:
>      >> Hi
>      >>
>      >> I have created an R branch that contains a potential fix ...
>      >>
>      >> https://svn.r-project.org/R/branches/R-symfam/
>      >>
>      >> This allows, for example, ...
>      >>
>      >> cairo_pdf(symbolfamily="OpenSymbol")
>      >>
>      >> ... to specify that the OpenSymbol family should be used as the
>      >> "symbol" font (e.g., for "plotmath") in R.
>      >>
>      >> This is just a separate branch for now because, while I have
>     tested it
>      >> under Unbuntu 18.04 and Fedora 31, I cannot even build R for
>     Windows
>      >> (right now) or Mac (ever) and I do not want to drop a bomb on
>     R-devel
>      >> at this stage of the release process for R 4.0.0.
>      >>
>      >> The attached file contains at least an outline of steps required
>     to do
>      >> a minimal test if anyone wants to try the fix on Linux.
>      >>
>      >> cc'ing Simon and Jeroen in case they are able to help with checking
>      >> that this builds and works on Mac and/or Windows.
>      >>
>      >> NOTEs:
>      >> - 'symbolfamily' can only be specified when a graphics device is
>      >> opened, and it is then fixed for that device.
>      >> - on Windows, for cairo-based devices, the "symbol" font is still
>      >> hard-coded as "Standard Symbols L"
>      >>
>      >> Paul
>      >>
>      >> On 30/03/20 8:15 am, Paul Murrell wrote:
>      >>> Hi
>      >>>
>      >>> Thanks for your input on this I?aki and Nicolas.
>      >>>
>      >>> I am starting testing an R fix for this problem today.
>      >>>
>      >>> As suggested, the plan is to allow the R user to specify a font
>      >>> family other than "symbol" for plotmath output (or, more
>     generally,
>      >>> in R parlance, for 'font=5' or 'fontface=5') on a Cairo-based
>      >>> graphics device.
>      >>>
>      >>> Paul
>      >>>
>      >>>
>      >>> On 27/03/20 11:30 pm, I?aki Ucar wrote:
>      >>>> On Wed, 25 Mar 2020 at 12:25, Nicolas Mailhot
>      >>>> <nicolas.mailhot at laposte.net
>     <mailto:nicolas.mailhot at laposte.net>> wrote:
>      >>>>>
>      >>>>> <snip>
>      >>>>>
>      >>>>> R brought this all on itself by hardcoding a Windows-only
>     ?Symbol?
>      >>>>> font
>      >>>>> family name in its default conf. Linux systems are UTF-8 by
>     default
>      >>>>> for
>      >>>>> ~20 years now, they don?t need the forcing of magic font
>     families to
>      >>>>> handle symbols not present in the 8-bit legacy Windows encodings.
>      >>>>>
>      >>>>> The actual effect of this conf is not the selection of font
>     files with
>      >>>>> special and unusual symbols. It is to priorize fonts that
>     match the
>      >>>>> "Symbol" magic name. And those fonts are few and crumbling on
>     Linux
>      >>>>> systems, because no one has needed to bother with them since
>     Linux
>      >>>>> switched to UTF-8 last millenium.
>      >>>>>
>      >>>>> Just stop using ?Symbol? in R and things will work a lot better.
>      >>>>> Alternatively, prepare to maintain the ?Symbol? aliasing stack in
>      >>>>> fontconfig (and fight with wine for it), because *no* *one*
>     *else*
>      >>>>> *cares* about this legacy Windows-specific stuff.
>      >>>>
>      >>>> So, in the light of Nicolas' input (thanks!), I think that font
>      >>>> selection should be fixed upstream in R. I'd be happy to put
>     all this
>      >>>> together in R's bugzilla, but I don't have an account. Could
>     someone
>      >>>> please invite me?
>      >>>>
>      >>>> I?aki
>      >>>>
>      >>>> ______________________________________________
>      >>>> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>      >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>      >>>>
>      >>
>      >
> 
>     -- 
>     Dr Paul Murrell
>     Department of Statistics
>     The University of Auckland
>     Private Bag 92019
>     Auckland
>     New Zealand
>     64 9 3737599 x85392
>     paul at stat.auckland.ac.nz <mailto:paul at stat.auckland.ac.nz>
>     http://www.stat.auckland.ac.nz/~paul/
> 
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz  Wed Apr  8 23:08:35 2020
From: p@u| @end|ng |rom @t@t@@uck|@nd@@c@nz (Paul Murrell)
Date: Thu, 9 Apr 2020 09:08:35 +1200
Subject: [Rd] Plotmath on Fedora 31 broken with with pango >= 1.44 -
 workarounds?
In-Reply-To: <CAD4oTHEQ3Yq-4fqhv0VFscnFP32WzakqChN7NoyoVW8JZP3HYA@mail.gmail.com>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
 <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
 <47e8a03e-bb3b-8a25-bead-0a16208cd3e8@stat.auckland.ac.nz>
 <CAD4oTHEnQtQ9209wQSm3473e6VdMe8dXHsX1GuHeUzRKmbaUvA@mail.gmail.com>
 <CAD4oTHEQ3Yq-4fqhv0VFscnFP32WzakqChN7NoyoVW8JZP3HYA@mail.gmail.com>
Message-ID: <2d5ca31a-0067-e148-0207-218287952025@stat.auckland.ac.nz>


Thanks for this Gabriel - extremely useful.
Those results look pretty good.

Paul

On 8/04/20 9:55 pm, Gabriel Becker wrote:
> Hi Paul,
> 
> So I've run the tests?(and am? attaching all numerous pdfs here) but the 
> takeaway from what I can see is as follows:
> 
> raw, without specifying font family, "look good" (see plot*raw.pdf)  
> from your branch (my eye is upset by the positioning of the phi symbol 
> in plot2, but I've confirmed that it looks the same generated from 
> 3.5.1, so that?isn't?your branch).
> 
> The various font family settings seem to work too, from what I can tell. 
> Both font families?you suggested, however, Helvetica and Apple Symbols 
> (the s is important) have significantly incomplete coverage with PUA on. 
> Apple Symbols does have nearly complete coverage (though? to my eye the 
> symbols are all smaller...) with PUA turned off, but Helvetica remains 
> very spotty, with disabling PUA only modestly increasing it's coverage, 
> and not in the places that seem likely to matter.
> 
> I hope that helps,
> ~G
> 
> On Tue, Apr 7, 2020 at 8:59 PM Gabriel Becker <gabembecker at gmail.com 
> <mailto:gabembecker at gmail.com>> wrote:
> 
>     Paul et al,
> 
>     I will try to do this tonight or tomorrow, though it will not be
>     built with th system tools because I have yet to get that tto work
>     locally (spent a good chunk of this morning trying).
> 
>     I will send a separate messaage?regarding those difficulties as well
>     so that we can at least confirm that they are due to a
>     malconfiguration on my part.
> 
>     Best,
>     ~G
> 
>     On Tue, Apr 7, 2020 at 7:25 PM Paul Murrell
>     <paul at stat.auckland.ac.nz <mailto:paul at stat.auckland.ac.nz>> wrote:
> 
> 
>         The R-symfam branch (r78176) is now working, for my basic tests,
>         on ...
> 
>         Ubuntu (pango < 1.44)
>         Ubuntu (no pango)
>         Fedora (pango > 1.44)
>         Windows
> 
>         I need help to confirm that this builds on macOS and that the basic
>         tests work ...
> 
>         https://github.com/pmur002/R-symfam-testing
> 
>         Brian has been helping with the build, but I am still looking for
>         someone who can run the tests please.? Happy to be fed PDF files to
>         scrutinize myself;? it's generating the PDF files on macOS that
>         I need
>         help with.
> 
>         Paul
> 
>         On 6/04/20 2:59 pm, Paul Murrell wrote:
>          > Hi
>          >
>          > The R branch ...
>          >
>          > https://svn.r-project.org/R/branches/R-symfam/
>          >
>          > ... is now set up so that it works "out of the box" on Fedora
>         by setting
>          > the default to be 'symbolfamily=cairoSymbolFont(family,
>         usePUA=FALSE)'
>          > when grSoftVersion()["pango"] is greater than "1.44".
>          >
>          > This means that on Fedora 31 (at least on the Docker
>         container I am
>          > testing on) "sans"->"NimubusSans" is used as the symbol font
>         by default
>          > and R converts Adobe Symbol Encoding code points to non-PUA
>         UTF8 code
>          > points.? This is not the prettiest result, but it is a lot
>         better than
>          > the page full of missing glyphs that we had.
>          >
>          > The default on less "bleeding edge" systems, e.g., my Ubuntu
>         18.04,
>          > remains 'symbolfamily="Symbol"'.
>          >
>          > The default on other platforms is supposed to be the same as
>         it was, but
>          > I need help to confirm that.? I have set up a github repo ...
>          >
>          > https://github.com/pmur002/R-symfam-testing
>          >
>          > ... that describes how to test this on macOS and Windows if
>         anyone has
>          > time to do so.
>          >
>          > I will start trying to set up a Windows test unless someone
>         beats me to it.
>          >
>          > Paul
>          >
>          > On 30/03/20 3:24 pm, Paul Murrell wrote:
>          >> Hi
>          >>
>          >> I have created an R branch that contains a potential fix ...
>          >>
>          >> https://svn.r-project.org/R/branches/R-symfam/
>          >>
>          >> This allows, for example, ...
>          >>
>          >> cairo_pdf(symbolfamily="OpenSymbol")
>          >>
>          >> ... to specify that the OpenSymbol family should be used as the
>          >> "symbol" font (e.g., for "plotmath") in R.
>          >>
>          >> This is just a separate branch for now because, while I have
>         tested it
>          >> under Unbuntu 18.04 and Fedora 31, I cannot even build R for
>         Windows
>          >> (right now) or Mac (ever) and I do not want to drop a bomb
>         on R-devel
>          >> at this stage of the release process for R 4.0.0.
>          >>
>          >> The attached file contains at least an outline of steps
>         required to do
>          >> a minimal test if anyone wants to try the fix on Linux.
>          >>
>          >> cc'ing Simon and Jeroen in case they are able to help with
>         checking
>          >> that this builds and works on Mac and/or Windows.
>          >>
>          >> NOTEs:
>          >> - 'symbolfamily' can only be specified when a graphics
>         device is
>          >> opened, and it is then fixed for that device.
>          >> - on Windows, for cairo-based devices, the "symbol" font is
>         still
>          >> hard-coded as "Standard Symbols L"
>          >>
>          >> Paul
>          >>
>          >> On 30/03/20 8:15 am, Paul Murrell wrote:
>          >>> Hi
>          >>>
>          >>> Thanks for your input on this I?aki and Nicolas.
>          >>>
>          >>> I am starting testing an R fix for this problem today.
>          >>>
>          >>> As suggested, the plan is to allow the R user to specify a
>         font
>          >>> family other than "symbol" for plotmath output (or, more
>         generally,
>          >>> in R parlance, for 'font=5' or 'fontface=5') on a Cairo-based
>          >>> graphics device.
>          >>>
>          >>> Paul
>          >>>
>          >>>
>          >>> On 27/03/20 11:30 pm, I?aki Ucar wrote:
>          >>>> On Wed, 25 Mar 2020 at 12:25, Nicolas Mailhot
>          >>>> <nicolas.mailhot at laposte.net
>         <mailto:nicolas.mailhot at laposte.net>> wrote:
>          >>>>>
>          >>>>> <snip>
>          >>>>>
>          >>>>> R brought this all on itself by hardcoding a Windows-only
>         ?Symbol?
>          >>>>> font
>          >>>>> family name in its default conf. Linux systems are UTF-8
>         by default
>          >>>>> for
>          >>>>> ~20 years now, they don?t need the forcing of magic font
>         families to
>          >>>>> handle symbols not present in the 8-bit legacy Windows
>         encodings.
>          >>>>>
>          >>>>> The actual effect of this conf is not the selection of
>         font files with
>          >>>>> special and unusual symbols. It is to priorize fonts that
>         match the
>          >>>>> "Symbol" magic name. And those fonts are few and
>         crumbling on Linux
>          >>>>> systems, because no one has needed to bother with them
>         since Linux
>          >>>>> switched to UTF-8 last millenium.
>          >>>>>
>          >>>>> Just stop using ?Symbol? in R and things will work a lot
>         better.
>          >>>>> Alternatively, prepare to maintain the ?Symbol? aliasing
>         stack in
>          >>>>> fontconfig (and fight with wine for it), because *no*
>         *one* *else*
>          >>>>> *cares* about this legacy Windows-specific stuff.
>          >>>>
>          >>>> So, in the light of Nicolas' input (thanks!), I think that
>         font
>          >>>> selection should be fixed upstream in R. I'd be happy to
>         put all this
>          >>>> together in R's bugzilla, but I don't have an account.
>         Could someone
>          >>>> please invite me?
>          >>>>
>          >>>> I?aki
>          >>>>
>          >>>> ______________________________________________
>          >>>> R-devel at r-project.org <mailto:R-devel at r-project.org>
>         mailing list
>          >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>          >>>>
>          >>
>          >
> 
>         -- 
>         Dr Paul Murrell
>         Department of Statistics
>         The University of Auckland
>         Private Bag 92019
>         Auckland
>         New Zealand
>         64 9 3737599 x85392
>         paul at stat.auckland.ac.nz <mailto:paul at stat.auckland.ac.nz>
>         http://www.stat.auckland.ac.nz/~paul/
> 
>         ______________________________________________
>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From M@rk@Br@v|ngton @end|ng |rom d@t@61@c@|ro@@u  Thu Apr  9 02:06:24 2020
From: M@rk@Br@v|ngton @end|ng |rom d@t@61@c@|ro@@u (Bravington, Mark (Data61, Hobart))
Date: Thu, 9 Apr 2020 00:06:24 +0000
Subject: [Rd] missing binaries in R-devel windows snapshot 78175
Message-ID: <MEAPR01MB2407CE5D97A62210B4F98DC3B4C00@MEAPR01MB2407.ausprd01.prod.outlook.com>

The "r-devel snapshot build" 78175 on Windows--- a dot-exe installer--- seems to be missing a couple of files in its bin/i386 folder: Rterm.exe and Rgui.exe. Both are present in its bin/x64 folder (and in the i386 folder for current R).

NB the lack of i386/Rterm.exe affects even the x64 version, since package installation seems to use it for testing loadability under both architectures (at least on the one package that I tried to install).

I've got a feeling that I've noticed this with some previous R-devel, but never got round to reporting it before the official R version caught up.

cheers
Mark


Mark Bravington
CSIRO Marine Lab
Hobart
Australia


From jeroen @end|ng |rom berke|ey@edu  Thu Apr  9 13:32:46 2020
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Thu, 9 Apr 2020 13:32:46 +0200
Subject: [Rd] missing binaries in R-devel windows snapshot 78175
In-Reply-To: <MEAPR01MB2407CE5D97A62210B4F98DC3B4C00@MEAPR01MB2407.ausprd01.prod.outlook.com>
References: <MEAPR01MB2407CE5D97A62210B4F98DC3B4C00@MEAPR01MB2407.ausprd01.prod.outlook.com>
Message-ID: <CABFfbXtH+UkF+ZoBjh=R-Uv9DuGPKXjBCkTDCaHutBcbndCAHQ@mail.gmail.com>

On Thu, Apr 9, 2020 at 12:44 PM Bravington, Mark (Data61, Hobart)
<Mark.Bravington at data61.csiro.au> wrote:
>
> The "r-devel snapshot build" 78175 on Windows--- a dot-exe installer--- seems to be missing a couple of files in its bin/i386 folder: Rterm.exe and Rgui.exe. Both are present in its bin/x64 folder (and in the i386 folder for current R).

I just tested this and as far as I can tell there are no missing
files. Are you sure there isn't a local problem with your system
permissions or antivirus that is removing the files?

Try to verify the md5 of the installer; some enterprise firewalls are
tampering with downloads:

  openssl::md5(url('https://cran.r-project.org/bin/windows/base/R-devel-win.exe'))
  readLines('https://cran.r-project.org/bin/windows/base/md5sum.txt.R-devel')


From n|co|@@@m@||hot @end|ng |rom |@po@te@net  Thu Apr  9 17:36:07 2020
From: n|co|@@@m@||hot @end|ng |rom |@po@te@net (Nicolas Mailhot)
Date: Thu, 09 Apr 2020 17:36:07 +0200
Subject: [Rd] Plotmath on Fedora 31 broken with with pango >= 1.44 -
 workarounds?
In-Reply-To: <CAD4oTHEQ3Yq-4fqhv0VFscnFP32WzakqChN7NoyoVW8JZP3HYA@mail.gmail.com>
References: <CAAHES9xvgsK1fxKZhJa=1tB2ZzyP1TAXMZEvYB8P7KUnmZaAZw@mail.gmail.com>
 <CALEXWq07mXNa3v1ykeOXTAbXy6oJrz51bjLXUfN58gcDRXsBuQ@mail.gmail.com>
 <4cc00e0d5360aaf61aefd7753e10ddd5b429a6a9.camel@laposte.net>
 <CALEXWq1mL99DiwM0zMoz9LMehK3ZCp=g6SeSvGmzibLtmFMXPA@mail.gmail.com>
 <6cd98bb3-fe37-1c0d-3ac6-d1ec36aef3a9@stat.auckland.ac.nz>
 <f3dd5ab2-0058-1de9-a72b-194f67914dd0@stat.auckland.ac.nz>
 <093cd866-2a6a-4606-f612-d4f92b8483e6@stat.auckland.ac.nz>
 <47e8a03e-bb3b-8a25-bead-0a16208cd3e8@stat.auckland.ac.nz>
 <CAD4oTHEnQtQ9209wQSm3473e6VdMe8dXHsX1GuHeUzRKmbaUvA@mail.gmail.com>
 <CAD4oTHEQ3Yq-4fqhv0VFscnFP32WzakqChN7NoyoVW8JZP3HYA@mail.gmail.com>
Message-ID: <0b55c175340777786f3a2b0e8ce28d723507a9ac.camel@laposte.net>

Le mercredi 08 avril 2020 ? 02:55 -0700, Gabriel Becker a ?crit :
> Hi Paul,

Hi Gabriel,

Thanks a lot for the testing.

> The various font family settings seem to work too, from what I can
> tell. Both font families you suggested, however, Helvetica and Apple
> Symbols (the s is important) have significantly incomplete coverage
> with PUA on.

That is to be expected, the AMS symbol dump in PUA space was a quick
hack to make pre-unicode symbols available in an unicode world, pending
their normalisation.

That standardisation is long past (IIRC it occured by unicode 3.2
released in March 2002), so no newly created/updated font family is
going to place those symbols in PUA anymore.

Now adding the AMS symbols to new fonts has been slow, due to the large
amount of software hardcoding Symbol (and equivallent) and masking the
actual glyph userbase to font makers. It will accelerate with more apps
expecting plain unicode by default.

Thanks for the testing!

Regards,

-- 
Nicolas Mailhot


From M@rk@Br@v|ngton @end|ng |rom d@t@61@c@|ro@@u  Fri Apr 10 02:41:44 2020
From: M@rk@Br@v|ngton @end|ng |rom d@t@61@c@|ro@@u (Bravington, Mark (Data61, Hobart))
Date: Fri, 10 Apr 2020 00:41:44 +0000
Subject: [Rd] missing binaries in R-devel windows snapshot 78175
In-Reply-To: <CABFfbXtH+UkF+ZoBjh=R-Uv9DuGPKXjBCkTDCaHutBcbndCAHQ@mail.gmail.com>
References: <MEAPR01MB2407CE5D97A62210B4F98DC3B4C00@MEAPR01MB2407.ausprd01.prod.outlook.com>,
 <CABFfbXtH+UkF+ZoBjh=R-Uv9DuGPKXjBCkTDCaHutBcbndCAHQ@mail.gmail.com>
Message-ID: <ME2PR01MB2403DF7A124DCB01CFB20A01B4DE0@ME2PR01MB2403.ausprd01.prod.outlook.com>

> On Thu, Apr 9, 2020 at 12:44 PM Bravington, Mark (Data61, Hobart)
> <Mark.Bravington at data61.csiro.au> wrote:
> >
> > The "r-devel snapshot build" 78175 on Windows--- a dot-exe installer--- seems to be missing a couple of files in its bin/i386 folder: Rterm.exe and Rgui.exe. Both are present in its bin/x64 folder (and in the i386 folder for current R).

From: Jeroen Ooms <jeroen at berkeley.edu>
Sent: Thursday, 9 April 2020 21:32
To: Bravington, Mark (Data61, Hobart)
Cc: R-Devel-2
Subject: Re: [Rd] missing binaries in R-devel windows snapshot 78175


> I just tested this and as far as I can tell there are no missing
> files. Are you sure there isn't a local problem with your system
> permissions or antivirus that is removing the files?

You're quite right--- my apologies. I've been Cylanced (without it having the politeness to actually tell me, grrrr). I tried again with the 78172 build that you used, and the two dot-exe files are there immediately after installation--- but 10 minutes later they're gone. One question below about the md5 stuff, though:

> Try to verify the md5 of the installer; some enterprise firewalls are
> tampering with downloads:

>   openssl::md5(url('https://cran.r-project.org/bin/windows/base/R-devel-win.exe'))
>   readLines('https://cran.r-project.org/bin/windows/base/md5sum.txt.R-devel')

Thanks for the tip. I did that, and both give the same output. But:

 - If I run 'md5sum' on my local copy of the 78182 installer (ie the file I've just downloaded) I again get the same signature as per your two lines. (It's not the firewall, it's Cylance.)
 
 - Yet if I run 'openssl::md5( <local copy of installer>)' I get a different signature!
 
That seems strange..?

Thanks for your help
Mark


From jeroen @end|ng |rom berke|ey@edu  Fri Apr 10 08:54:39 2020
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Fri, 10 Apr 2020 08:54:39 +0200
Subject: [Rd] missing binaries in R-devel windows snapshot 78175
In-Reply-To: <ME2PR01MB2403DF7A124DCB01CFB20A01B4DE0@ME2PR01MB2403.ausprd01.prod.outlook.com>
References: <MEAPR01MB2407CE5D97A62210B4F98DC3B4C00@MEAPR01MB2407.ausprd01.prod.outlook.com>
 <CABFfbXtH+UkF+ZoBjh=R-Uv9DuGPKXjBCkTDCaHutBcbndCAHQ@mail.gmail.com>
 <ME2PR01MB2403DF7A124DCB01CFB20A01B4DE0@ME2PR01MB2403.ausprd01.prod.outlook.com>
Message-ID: <CABFfbXs1y7K=vOrmQEFYh_Wto-LatdOhKpa0b0rztZqpFT_yDQ@mail.gmail.com>

On Fri, Apr 10, 2020 at 2:42 AM Bravington, Mark (Data61, Hobart)
<Mark.Bravington at data61.csiro.au> wrote:
>
> > On Thu, Apr 9, 2020 at 12:44 PM Bravington, Mark (Data61, Hobart)
> > <Mark.Bravington at data61.csiro.au> wrote:
> > >
> > > The "r-devel snapshot build" 78175 on Windows--- a dot-exe installer--- seems to be missing a couple of files in its bin/i386 folder: Rterm.exe and Rgui.exe. Both are present in its bin/x64 folder (and in the i386 folder for current R).
>
> From: Jeroen Ooms <jeroen at berkeley.edu>
> Sent: Thursday, 9 April 2020 21:32
> To: Bravington, Mark (Data61, Hobart)
> Cc: R-Devel-2
> Subject: Re: [Rd] missing binaries in R-devel windows snapshot 78175
>
>
> > I just tested this and as far as I can tell there are no missing
> > files. Are you sure there isn't a local problem with your system
> > permissions or antivirus that is removing the files?
>
> You're quite right--- my apologies. I've been Cylanced (without it having the politeness to actually tell me, grrrr). I tried again with the 78172 build that you used, and the two dot-exe files are there immediately after installation--- but 10 minutes later they're gone. One question below about the md5 stuff, though:
>
> > Try to verify the md5 of the installer; some enterprise firewalls are
> > tampering with downloads:
>
> >   openssl::md5(url('https://cran.r-project.org/bin/windows/base/R-devel-win.exe'))
> >   readLines('https://cran.r-project.org/bin/windows/base/md5sum.txt.R-devel')
>
> Thanks for the tip. I did that, and both give the same output. But:
>
>  - If I run 'md5sum' on my local copy of the 78182 installer (ie the file I've just downloaded) I again get the same signature as per your two lines. (It's not the firewall, it's Cylance.)
>
>  - Yet if I run 'openssl::md5( <local copy of installer>)' I get a different signature!

I think you're calculating the md5 of the filename, not the file. You
need to use:

  openssl::md5(file("R-devel-win.exe"))


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Apr 10 09:49:18 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 10 Apr 2020 09:49:18 +0200
Subject: [Rd] missing binaries in R-devel windows snapshot 78175
In-Reply-To: <CABFfbXs1y7K=vOrmQEFYh_Wto-LatdOhKpa0b0rztZqpFT_yDQ@mail.gmail.com>
References: <MEAPR01MB2407CE5D97A62210B4F98DC3B4C00@MEAPR01MB2407.ausprd01.prod.outlook.com>
 <CABFfbXtH+UkF+ZoBjh=R-Uv9DuGPKXjBCkTDCaHutBcbndCAHQ@mail.gmail.com>
 <ME2PR01MB2403DF7A124DCB01CFB20A01B4DE0@ME2PR01MB2403.ausprd01.prod.outlook.com>
 <CABFfbXs1y7K=vOrmQEFYh_Wto-LatdOhKpa0b0rztZqpFT_yDQ@mail.gmail.com>
Message-ID: <24208.9470.782097.483057@stat.math.ethz.ch>

>>>>> Jeroen Ooms 
>>>>>     on Fri, 10 Apr 2020 08:54:39 +0200 writes:

    > On Fri, Apr 10, 2020 at 2:42 AM Bravington, Mark (Data61,
    > Hobart) <Mark.Bravington at data61.csiro.au> wrote:
    >> 
    >> > On Thu, Apr 9, 2020 at 12:44 PM Bravington, Mark
    >> (Data61, Hobart) > <Mark.Bravington at data61.csiro.au>
    >> wrote:
    >> > >
    >> > > The "r-devel snapshot build" 78175 on Windows--- a
    >> dot-exe installer--- seems to be missing a couple of
    >> files in its bin/i386 folder: Rterm.exe and
    >> Rgui.exe. Both are present in its bin/x64 folder (and in
    >> the i386 folder for current R).
    >> 
    >> From: Jeroen Ooms <jeroen at berkeley.edu> Sent: Thursday, 9
    >> April 2020 21:32 To: Bravington, Mark (Data61, Hobart)
    >> Cc: R-Devel-2 Subject: Re: [Rd] missing binaries in
    >> R-devel windows snapshot 78175
    >> 
    >> 
    >> > I just tested this and as far as I can tell there are
    >> no missing > files. Are you sure there isn't a local
    >> problem with your system > permissions or antivirus that
    >> is removing the files?
    >> 
    >> You're quite right--- my apologies. I've been Cylanced
    >> (without it having the politeness to actually tell me,
    >> grrrr). I tried again with the 78172 build that you used,
    >> and the two dot-exe files are there immediately after
    >> installation--- but 10 minutes later they're gone. One
    >> question below about the md5 stuff, though:
    >> 
    >> > Try to verify the md5 of the installer; some enterprise
    >> firewalls are > tampering with downloads:
    >> 
    >> >
    >> openssl::md5(url('https://cran.r-project.org/bin/windows/base/R-devel-win.exe'))
    >> >
    >> readLines('https://cran.r-project.org/bin/windows/base/md5sum.txt.R-devel')
    >> 
    >> Thanks for the tip. I did that, and both give the same
    >> output. But:
    >> 
    >> - If I run 'md5sum' on my local copy of the 78182
    >> installer (ie the file I've just downloaded) I again get
    >> the same signature as per your two lines. (It's not the
    >> firewall, it's Cylance.)
    >> 
    >> - Yet if I run 'openssl::md5( <local copy of installer>)'
    >> I get a different signature!

    > I think you're calculating the md5 of the filename, not
    > the file. You need to use:

    >   openssl::md5(file("R-devel-win.exe"))

or use base R's    tools::md5sum(<local-file-name>)

md5sum() has existed forever, but needs you to do the
download.file() step  which is indirectly happening in
openssl::md5() also.


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Apr 10 09:55:14 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 10 Apr 2020 08:55:14 +0100
Subject: [Rd] missing binaries in R-devel windows snapshot 78175
In-Reply-To: <24208.9470.782097.483057@stat.math.ethz.ch>
References: <MEAPR01MB2407CE5D97A62210B4F98DC3B4C00@MEAPR01MB2407.ausprd01.prod.outlook.com>
 <CABFfbXtH+UkF+ZoBjh=R-Uv9DuGPKXjBCkTDCaHutBcbndCAHQ@mail.gmail.com>
 <ME2PR01MB2403DF7A124DCB01CFB20A01B4DE0@ME2PR01MB2403.ausprd01.prod.outlook.com>
 <CABFfbXs1y7K=vOrmQEFYh_Wto-LatdOhKpa0b0rztZqpFT_yDQ@mail.gmail.com>
 <24208.9470.782097.483057@stat.math.ethz.ch>
Message-ID: <CABtg=KnoiW=pTqSHoevZ3KgCqqZMfra31zmTTb3d=vf3YdbUww@mail.gmail.com>

On Fri, Apr 10, 2020 at 8:49 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
[...]
>
>     >   openssl::md5(file("R-devel-win.exe"))
>
> or use base R's    tools::md5sum(<local-file-name>)
>
> md5sum() has existed forever, but needs you to do the
> download.file() step  which is indirectly happening in
> openssl::md5() also.

Don't use tools::md5sum() in portable code, though, at least not just
yet, because it is broken on non-ASCII filenames on Windows. (Fixed in
R-devel.)

Gabor


From M@rk@Br@v|ngton @end|ng |rom d@t@61@c@|ro@@u  Fri Apr 10 10:29:32 2020
From: M@rk@Br@v|ngton @end|ng |rom d@t@61@c@|ro@@u (Bravington, Mark (Data61, Hobart))
Date: Fri, 10 Apr 2020 08:29:32 +0000
Subject: [Rd] missing binaries in R-devel windows snapshot 78175
In-Reply-To: <24208.9470.782097.483057@stat.math.ethz.ch>
References: <MEAPR01MB2407CE5D97A62210B4F98DC3B4C00@MEAPR01MB2407.ausprd01.prod.outlook.com>
 <CABFfbXtH+UkF+ZoBjh=R-Uv9DuGPKXjBCkTDCaHutBcbndCAHQ@mail.gmail.com>
 <ME2PR01MB2403DF7A124DCB01CFB20A01B4DE0@ME2PR01MB2403.ausprd01.prod.outlook.com>
 <CABFfbXs1y7K=vOrmQEFYh_Wto-LatdOhKpa0b0rztZqpFT_yDQ@mail.gmail.com>,
 <24208.9470.782097.483057@stat.math.ethz.ch>
Message-ID: <ME2PR01MB24037A4094CEF446A94DF0B8B4DE0@ME2PR01MB2403.ausprd01.prod.outlook.com>

Thanks all--- my fault again, this time for not reading the openssl::md5() documentation. Binaries all present and correct after all (on my Cylance-free machine), and checksums working as they should...

[Jeroen Ooms]  > I think you're calculating the md5 of the filename, not  the file. You need to use:

    >   openssl::md5(file("R-devel-win.exe"))

I am duly embarrassed...

[Martin Maechler] >  or use base R's    tools::md5sum(<local-file-name>) ...  which has existed forever 

[G?bor Cs?rdi] > Don't use tools::md5sum() in portable code, though, at least not just yet, because it is broken on non-ASCII filenames on Windows. (Fixed in R-devel.)

Indeed, I did use tools::md5sum(); it was the apparent difference between that and openssl::md5() that surprised me. I am a long-time fan of tools::md5sum(), and in fact it's used in a package of ours planned for release soon--- bit disconcerting to hear it's actually broken! However, I suspect R4.0 [ with fixed md5sum() ] will be released before our package sees the light of day.

Thanks again
Mark

Mark Bravington
CSIRO Marine Lab
Hobart
Australia


________________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Martin Maechler <maechler at stat.math.ethz.ch>
Sent: Friday, 10 April 2020 17:49
To: Jeroen Ooms
Cc: Bravington, Mark (Data61, Hobart); R-Devel-2
Subject: Re: [Rd] missing binaries in R-devel windows snapshot 78175

>>>>> Jeroen Ooms
>>>>>     on Fri, 10 Apr 2020 08:54:39 +0200 writes:

    > On Fri, Apr 10, 2020 at 2:42 AM Bravington, Mark (Data61,
    > Hobart) <Mark.Bravington at data61.csiro.au> wrote:
    >>
    >> > On Thu, Apr 9, 2020 at 12:44 PM Bravington, Mark
    >> (Data61, Hobart) > <Mark.Bravington at data61.csiro.au>
    >> wrote:
    >> > >
    >> > > The "r-devel snapshot build" 78175 on Windows--- a
    >> dot-exe installer--- seems to be missing a couple of
    >> files in its bin/i386 folder: Rterm.exe and
    >> Rgui.exe. Both are present in its bin/x64 folder (and in
    >> the i386 folder for current R).
    >>
    >> From: Jeroen Ooms <jeroen at berkeley.edu> Sent: Thursday, 9
    >> April 2020 21:32 To: Bravington, Mark (Data61, Hobart)
    >> Cc: R-Devel-2 Subject: Re: [Rd] missing binaries in
    >> R-devel windows snapshot 78175
    >>
    >>
    >> > I just tested this and as far as I can tell there are
    >> no missing > files. Are you sure there isn't a local
    >> problem with your system > permissions or antivirus that
    >> is removing the files?
    >>
    >> You're quite right--- my apologies. I've been Cylanced
    >> (without it having the politeness to actually tell me,
    >> grrrr). I tried again with the 78172 build that you used,
    >> and the two dot-exe files are there immediately after
    >> installation--- but 10 minutes later they're gone. One
    >> question below about the md5 stuff, though:
    >>
    >> > Try to verify the md5 of the installer; some enterprise
    >> firewalls are > tampering with downloads:
    >>
    >> >
    >> openssl::md5(url('https://cran.r-project.org/bin/windows/base/R-devel-win.exe'))
    >> >
    >> readLines('https://cran.r-project.org/bin/windows/base/md5sum.txt.R-devel')
    >>
    >> Thanks for the tip. I did that, and both give the same
    >> output. But:
    >>
    >> - If I run 'md5sum' on my local copy of the 78182
    >> installer (ie the file I've just downloaded) I again get
    >> the same signature as per your two lines. (It's not the
    >> firewall, it's Cylance.)
    >>
    >> - Yet if I run 'openssl::md5( <local copy of installer>)'
    >> I get a different signature!

    > I think you're calculating the md5 of the filename, not
    > the file. You need to use:

    >   openssl::md5(file("R-devel-win.exe"))

or use base R's    tools::md5sum(<local-file-name>)

md5sum() has existed forever, but needs you to do the
download.file() step  which is indirectly happening in
openssl::md5() also.

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From jeroen @end|ng |rom berke|ey@edu  Fri Apr 10 11:33:03 2020
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Fri, 10 Apr 2020 11:33:03 +0200
Subject: [Rd] missing binaries in R-devel windows snapshot 78175
In-Reply-To: <24208.9470.782097.483057@stat.math.ethz.ch>
References: <MEAPR01MB2407CE5D97A62210B4F98DC3B4C00@MEAPR01MB2407.ausprd01.prod.outlook.com>
 <CABFfbXtH+UkF+ZoBjh=R-Uv9DuGPKXjBCkTDCaHutBcbndCAHQ@mail.gmail.com>
 <ME2PR01MB2403DF7A124DCB01CFB20A01B4DE0@ME2PR01MB2403.ausprd01.prod.outlook.com>
 <CABFfbXs1y7K=vOrmQEFYh_Wto-LatdOhKpa0b0rztZqpFT_yDQ@mail.gmail.com>
 <24208.9470.782097.483057@stat.math.ethz.ch>
Message-ID: <CABFfbXu-uv+oFnj4ihCa+gexy=c3hmFxXAcNsRvz4W=6EfCy=Q@mail.gmail.com>

On Fri, Apr 10, 2020 at 9:49 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
>
> >>>>> Jeroen Ooms
> >>>>>     on Fri, 10 Apr 2020 08:54:39 +0200 writes:
>
>     > On Fri, Apr 10, 2020 at 2:42 AM Bravington, Mark (Data61,
>     > Hobart) <Mark.Bravington at data61.csiro.au> wrote:
>     >>
>     >> > On Thu, Apr 9, 2020 at 12:44 PM Bravington, Mark
>     >> (Data61, Hobart) > <Mark.Bravington at data61.csiro.au>
>     >> wrote:
>     >> > >
>     >> > > The "r-devel snapshot build" 78175 on Windows--- a
>     >> dot-exe installer--- seems to be missing a couple of
>     >> files in its bin/i386 folder: Rterm.exe and
>     >> Rgui.exe. Both are present in its bin/x64 folder (and in
>     >> the i386 folder for current R).
>     >>
>     >> From: Jeroen Ooms <jeroen at berkeley.edu> Sent: Thursday, 9
>     >> April 2020 21:32 To: Bravington, Mark (Data61, Hobart)
>     >> Cc: R-Devel-2 Subject: Re: [Rd] missing binaries in
>     >> R-devel windows snapshot 78175
>     >>
>     >>
>     >> > I just tested this and as far as I can tell there are
>     >> no missing > files. Are you sure there isn't a local
>     >> problem with your system > permissions or antivirus that
>     >> is removing the files?
>     >>
>     >> You're quite right--- my apologies. I've been Cylanced
>     >> (without it having the politeness to actually tell me,
>     >> grrrr). I tried again with the 78172 build that you used,
>     >> and the two dot-exe files are there immediately after
>     >> installation--- but 10 minutes later they're gone. One
>     >> question below about the md5 stuff, though:
>     >>
>     >> > Try to verify the md5 of the installer; some enterprise
>     >> firewalls are > tampering with downloads:
>     >>
>     >> >
>     >> openssl::md5(url('https://cran.r-project.org/bin/windows/base/R-devel-win.exe'))
>     >> >
>     >> readLines('https://cran.r-project.org/bin/windows/base/md5sum.txt.R-devel')
>     >>
>     >> Thanks for the tip. I did that, and both give the same
>     >> output. But:
>     >>
>     >> - If I run 'md5sum' on my local copy of the 78182
>     >> installer (ie the file I've just downloaded) I again get
>     >> the same signature as per your two lines. (It's not the
>     >> firewall, it's Cylance.)
>     >>
>     >> - Yet if I run 'openssl::md5( <local copy of installer>)'
>     >> I get a different signature!
>
>     > I think you're calculating the md5 of the filename, not
>     > the file. You need to use:
>
>     >   openssl::md5(file("R-devel-win.exe"))
>
> or use base R's    tools::md5sum(<local-file-name>)
>
> md5sum() has existed forever, but needs you to do the
> download.file() step  which is indirectly happening in
> openssl::md5() also.

Not entirely the same way though! The openssl implementation of md5,
sha256, etc calculate the hash directly from the connection stream,
without ever storing the entire file on disk or in memory. It
efficiently hashes arbitrary large data from any readable R connection
(url, file, pipe, etc) using a fixed amount of memory. This is
important for researchers that calculate hashes for very large data
files, where copying the entire data to disk or memory is impossible.

However, in this case it's just a small file, so tools::md5sum() is
simpler indeed :)


