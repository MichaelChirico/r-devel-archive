From jeroen @end|ng |rom berke|ey@edu  Wed Jul  1 16:41:00 2020
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Wed, 1 Jul 2020 16:41:00 +0200
Subject: [Rd] Changes in MiKTeX
Message-ID: <CABFfbXtp96g=Za0WzzVtq4B6rDNQz0ZfAJkwj6wCQNjhbZQ2-Q@mail.gmail.com>

MiKTeX released a major new version this week, with some breaking
changes that may be important for Windows users and sysadmins.

The MiKTeX versioning has changed to a date-based scheme. The previous
version was called 2.9, the distribution is now called miktex-20.6.

The default installation path has changed from "C:/Program
Files/MiKTeX 2.9/" to "C:/Program Files/MiKTeX/". Hence this may
require updating scripts that set the PATH to pdflatex and others. I
have updated the r-base build script, so people that use this to build
R locally need to make sure MikTeX is available at the new path.

Finally, the 20.6 release contains a bad bug that causes pdftex to not
work at all, including failing to build R manuals:
https://github.com/MiKTeX/miktex/issues/568 . It seems to have been
fixed and a new pdftex is rolled out via the miktex package manager,
so make sure to update the miktex packages after installing
miktex-20.6 (or wait for the 20.7 release).


From v|ncent@gou|et @end|ng |rom me@com  Wed Jul  8 17:28:10 2020
From: v|ncent@gou|et @end|ng |rom me@com (Vincent Goulet)
Date: Wed, 8 Jul 2020 11:28:10 -0400
Subject: [Rd] Adding RtangleRuncode and RtangleFinish to exports of utils
Message-ID: <B217C0E6-360B-4732-9FEB-BB4A4BFB80A3@me.com>

Hi,

Could R-Core consider adding 'RtangleRuncode' and 'RtangleFinish' to the exports of utils. Their weave equivalent 'makeRweaveLatexCodeRunner' and ?'RweaveLatexFinish' are exported, as well as the other tangle utility functions 'RtangleSetup' and 'RtangleWritedoc'.

The rationale is not just symmetry. ;-) 

I'm finishing a small package that will provide "enhanced" drivers for Sweave that are heavily based on the standard RweaveLatex and Rtangle drivers. So much so that I can reuse most of the utiity functions called by RweaveLatex() and Rtangle(). Now, 'RtangleRuncode' and 'RtangleFinish' are not exported and 'R CMD check' really does not like that I use the ::: operator to reach the functions.

The alternative is to duplicate the code verbatim in my package. This does not seem very sensible, especially since I would then need to track any changes to the aforementioned functions to remain in line.

Here is the proposed patch against the current r-devel tree:

Index: src/library/utils/NAMESPACE
===================================================================
--- src/library/utils/NAMESPACE	(revision 78794)
+++ src/library/utils/NAMESPACE	(working copy)
@@ -166,9 +166,9 @@
        Sweave, SweaveSyntConv, SweaveSyntaxLatex, SweaveSyntaxNoweb,
        RtangleWritedoc, RweaveChunkPrefix, RweaveEvalWithOpt,
        RweaveTryStop, SweaveHooks, RweaveLatexWritedoc,
-       RweaveLatexOptions, RweaveLatexFinish,
+       RweaveLatexOptions, RweaveLatexFinish, RtangleFinish,
        .RtangleCodeLabel,
-       makeRweaveLatexCodeRunner)
+       makeRweaveLatexCodeRunner, RtangleRuncode)
 
 if(tools:::.OStype() == "unix") {
 export(nsl)

Best,

v.

From We|g@nd@Stephen @end|ng |rom m@yo@edu  Wed Jul  8 20:44:40 2020
From: We|g@nd@Stephen @end|ng |rom m@yo@edu (Weigand, Stephen D.)
Date: Wed, 08 Jul 2020 18:44:40 +0000
Subject: [Rd] 
 [EXTERNAL] Adding RtangleRuncode and RtangleFinish to exports
 of utils
In-Reply-To: <B217C0E6-360B-4732-9FEB-BB4A4BFB80A3@me.com>
References: <B217C0E6-360B-4732-9FEB-BB4A4BFB80A3@me.com>
Message-ID: <28fddd$e3767p@ironport10.mayo.edu>

Hi,
For what it's worth, I would like to second this.  I have a small Sweave driver (https://r-forge.r-project.org/R/?group_id=1857) that uses:

RtangleRtf <- function(){
    list(setup = RtangleSetup,
         runcode = utils:::RtangleRuncode, # <---
         writedoc = RtangleWritedoc,
         finish = utils:::RtangleFinish, # <---
         checkopts = RweaveRtfOptions)    
}

And of course using ':::' generates warnings.  Elsewhere I use

utils:::SweaveParseOptions(opts, object$options,
                                                     RweaveRtfOptions)

and so if it is sensible to also export 'SweaveParseOptions' then that would be great.

With appreciation,
Stephen

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Vincent Goulet via R-devel
Sent: Wednesday, July 08, 2020 10:28 AM
To: R-devel at r-project.org
Subject: [EXTERNAL] [Rd] Adding RtangleRuncode and RtangleFinish to exports of utils

Hi,

Could R-Core consider adding 'RtangleRuncode' and 'RtangleFinish' to the exports of utils. Their weave equivalent 'makeRweaveLatexCodeRunner' and ?'RweaveLatexFinish' are exported, as well as the other tangle utility functions 'RtangleSetup' and 'RtangleWritedoc'.

The rationale is not just symmetry. ;-) 

I'm finishing a small package that will provide "enhanced" drivers for Sweave that are heavily based on the standard RweaveLatex and Rtangle drivers. So much so that I can reuse most of the utiity functions called by RweaveLatex() and Rtangle(). Now, 'RtangleRuncode' and 'RtangleFinish' are not exported and 'R CMD check' really does not like that I use the ::: operator to reach the functions.

The alternative is to duplicate the code verbatim in my package. This does not seem very sensible, especially since I would then need to track any changes to the aforementioned functions to remain in line.

Here is the proposed patch against the current r-devel tree:

Index: src/library/utils/NAMESPACE
===================================================================
--- src/library/utils/NAMESPACE	(revision 78794)
+++ src/library/utils/NAMESPACE	(working copy)
@@ -166,9 +166,9 @@
        Sweave, SweaveSyntConv, SweaveSyntaxLatex, SweaveSyntaxNoweb,
        RtangleWritedoc, RweaveChunkPrefix, RweaveEvalWithOpt,
        RweaveTryStop, SweaveHooks, RweaveLatexWritedoc,
-       RweaveLatexOptions, RweaveLatexFinish,
+       RweaveLatexOptions, RweaveLatexFinish, RtangleFinish,
        .RtangleCodeLabel,
-       makeRweaveLatexCodeRunner)
+       makeRweaveLatexCodeRunner, RtangleRuncode)
 
 if(tools:::.OStype() == "unix") {
 export(nsl)

Best,

v.
______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

From @hot@och|1990 @end|ng |rom gm@||@com  Thu Jul  9 22:21:06 2020
From: @hot@och|1990 @end|ng |rom gm@||@com (=?UTF-8?B?44Kq44OB44K344On44Km44K/?=)
Date: Fri, 10 Jul 2020 05:21:06 +0900
Subject: [Rd] Is this surprising behavior of tkimage.create function a bug?
Message-ID: <CANOYX1QL4N=9gYTCDTy3pwHWHCB33rpJ67ABMJeoF-VHUFNY-w@mail.gmail.com>

tkimage.create function can read some images but can't read the other
images.
We can reproduce it by running the code below.
-------------------------------------------------------------------------------------
library(tcltk)
library(magick)

# works fine
tmp <- tempfile(fileext = ".gif")
image_write(logo, tmp)
image_tcl <- tkimage.create("photo", "image_tcl", file = tmp)

# doesn't work fine
logo2 <- image_convert(logo, format = "jpeg")
tmp2 <- tempfile(fileext = ".jpg")
image_write(logo2, tmp2)
image_tcl <- tkimage.create("photo", "image_tcl2", file = tmp2)
------------------------------------------------------------------------------------

The last line returns an error below.
> Error in structure(.External(.C_dotTclObjv, objv), class = "tclObj") :
  [tcl] couldn't recognize data in image file
"C:\Users\shota\AppData\Local\Temp\RtmpmmOriu\filed04c9e079d4.jpg".

Is this a bug?

 My session info is shown below.
> R Under development (unstable) (2020-07-08 r78794)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 18362)

Matrix products: default

locale:
[1] LC_COLLATE=Japanese_Japan.932  LC_CTYPE=Japanese_Japan.932
[3] LC_MONETARY=Japanese_Japan.932 LC_NUMERIC=C
[5] LC_TIME=Japanese_Japan.932

attached base packages:
[1] tcltk     stats     graphics  grDevices utils     datasets
[7] methods   base

other attached packages:
[1] magick_2.4.0

loaded via a namespace (and not attached):
[1] compiler_4.1.0 magrittr_1.5   Rcpp_1.0.5

	[[alternative HTML version deleted]]


From co|e@m|||er42 @end|ng |rom gm@||@com  Fri Jul 10 02:38:10 2020
From: co|e@m|||er42 @end|ng |rom gm@||@com (Cole Miller)
Date: Thu, 9 Jul 2020 20:38:10 -0400
Subject: [Rd] lapply and vapply Primitive Documentation
Message-ID: <CAAat6s6ruojRSRdjN_OAzGwUFcH8XaB6sQGuZRL6jTT-fs0dDA@mail.gmail.com>

The documentation of ?lapply includes:

> lapply and vapply are primitive functions.

However, both evaluate to FALSE in `is.primitive()`:

    is.primitive(vapply)
    #FALSE

    is.primitive(lapply)
    #FALSE

It appears that they are not primitives and that the documentation
might be outdated. Thank you for your time and work.

Cole Miller

P.S. During research, my favorite `help()` is `?.Internal()`: "Only
true R wizards should even consider using this function..." Thanks
again!


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jul 10 09:51:57 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 10 Jul 2020 09:51:57 +0200
Subject: [Rd] lapply and vapply Primitive Documentation
In-Reply-To: <CAAat6s6ruojRSRdjN_OAzGwUFcH8XaB6sQGuZRL6jTT-fs0dDA@mail.gmail.com>
References: <CAAat6s6ruojRSRdjN_OAzGwUFcH8XaB6sQGuZRL6jTT-fs0dDA@mail.gmail.com>
Message-ID: <24328.7709.465307.799026@stat.math.ethz.ch>

>>>>> Cole Miller 
>>>>>     on Thu, 9 Jul 2020 20:38:10 -0400 writes:

    > The documentation of ?lapply includes:
    >> lapply and vapply are primitive functions.

    > However, both evaluate to FALSE in `is.primitive()`:

    >     is.primitive(vapply) #FALSE

    >     is.primitive(lapply) #FALSE

    > It appears that they are not primitives and that the
    > documentation might be outdated. Thank you for your time
    > and work.

Thank you, Cole.
Indeed, they were primitive originally (but e.g. lapply() seems
to have become .Internal with
   r7885 | ripley | 2000-01-31 08:58:59 +0100 
i.e. about 4 weeks *before* release of R 1.0.0

Changes made to both 'R-devel' and 'R-patched'.
Martin


    > Cole Miller

    > P.S. During research, my favorite `help()` is
    > `?.Internal()`: "Only true R wizards should even consider
    > using this function..." Thanks again!

;-)


From mtmorg@n@b|oc @end|ng |rom gm@||@com  Fri Jul 10 10:16:37 2020
From: mtmorg@n@b|oc @end|ng |rom gm@||@com (Martin Morgan)
Date: Fri, 10 Jul 2020 08:16:37 +0000
Subject: [Rd] lapply and vapply Primitive Documentation
In-Reply-To: <24328.7709.465307.799026@stat.math.ethz.ch>
References: <CAAat6s6ruojRSRdjN_OAzGwUFcH8XaB6sQGuZRL6jTT-fs0dDA@mail.gmail.com>
 <24328.7709.465307.799026@stat.math.ethz.ch>
Message-ID: <BL0PR04MB6609C94F6DA2295210C3A4AEF9650@BL0PR04MB6609.namprd04.prod.outlook.com>

Was hoping for an almost record old bug fix (older than some R users!), but apparently the documentation bug is only a decade old (maybe only older than some precious R users)

  https://github.com/wch/r-source/blame/2118f1d0ff70c1ebd06148b6cb7659efe5ff4d99/src/library/base/man/lapply.Rd#L116

(I don't see lapply / vapply referenced as primitive in the original text changed by the commit).

Martin Morgan

?On 7/10/20, 3:52 AM, "R-devel on behalf of Martin Maechler" <r-devel-bounces at r-project.org on behalf of maechler at stat.math.ethz.ch> wrote:

    >>>>> Cole Miller 
    >>>>>     on Thu, 9 Jul 2020 20:38:10 -0400 writes:

        > The documentation of ?lapply includes:
        >> lapply and vapply are primitive functions.

        > However, both evaluate to FALSE in `is.primitive()`:

        >     is.primitive(vapply) #FALSE

        >     is.primitive(lapply) #FALSE

        > It appears that they are not primitives and that the
        > documentation might be outdated. Thank you for your time
        > and work.

    Thank you, Cole.
    Indeed, they were primitive originally (but e.g. lapply() seems
    to have become .Internal with
       r7885 | ripley | 2000-01-31 08:58:59 +0100 
    i.e. about 4 weeks *before* release of R 1.0.0

    Changes made to both 'R-devel' and 'R-patched'.
    Martin


        > Cole Miller

        > P.S. During research, my favorite `help()` is
        > `?.Internal()`: "Only true R wizards should even consider
        > using this function..." Thanks again!

    ;-)

    ______________________________________________
    R-devel at r-project.org mailing list
    https://stat.ethz.ch/mailman/listinfo/r-devel

From @tephen@peder@on @end|ng |rom @de|@|de@edu@@u  Fri Jul 10 17:54:02 2020
From: @tephen@peder@on @end|ng |rom @de|@|de@edu@@u (Stephen Martin Pederson)
Date: Fri, 10 Jul 2020 15:54:02 +0000
Subject: [Rd] Strange behaviour of methods::slot() when returning a tibble
In-Reply-To: <ME2P282MB0116BCAB37495E9A8687290FD4650@ME2P282MB0116.AUSP282.PROD.OUTLOOK.COM>
References: <ME2P282MB0116BCAB37495E9A8687290FD4650@ME2P282MB0116.AUSP282.PROD.OUTLOOK.COM>
Message-ID: <ME2P282MB011640F08A60CA1274597A34D4650@ME2P282MB0116.AUSP282.PROD.OUTLOOK.COM>

I have an S4 object class defined in a Bioconductor package which contains multiple slots, some of which are tibbles, whilst others are vectors. If I call

slot(object, name)

where 'name' is an slot that contains a vector, everything works as expected. However, when I call slot(object, name) where 'name' is an slot that contains a tibble I get the following warning:


Warning message:
`...` is not empty.

We detected these problematic arguments:
* `needs_dots`

These dots only exist to allow future extensions and should be empty.
Did you misspecify an argument?
Making 'packages.html' ... done

Wrapping the call in suppressWarnings() doesn't stop this, and this warning is printed every time the resultant object is called, e.g. df <- slot(object, name); df, would not print the error on the first call, but would print the warning every time df is  printed.

For an MWE


setClass("track", slots = c(x="numeric", y="data.frame"))
myTrack <- new("track", x = -4:4, y = tibble(y = 1))

myTrack

df <- slot(myTrack, "y")
df

The package passes R CMD check even though this warning is produced in most examples. Changing to a generic S3 data.frame also doesn't produce this error. I'm running the following configuration:


R version 4.0.2 (2020-06-22)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.4 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.7.1

locale:
 [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C               LC_TIME=en_AU.UTF-8
 [4] LC_COLLATE=en_AU.UTF-8     LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8
 [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C                  LC_ADDRESS=C
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] ngsReports_1.5.3    tibble_3.0.2        ggplot2_3.3.2       BiocGenerics_0.34.0

Thanks in advance,

Steve

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jul 10 18:08:24 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 10 Jul 2020 12:08:24 -0400
Subject: [Rd] 
 Strange behaviour of methods::slot() when returning a tibble
In-Reply-To: <ME2P282MB011640F08A60CA1274597A34D4650@ME2P282MB0116.AUSP282.PROD.OUTLOOK.COM>
References: <ME2P282MB0116BCAB37495E9A8687290FD4650@ME2P282MB0116.AUSP282.PROD.OUTLOOK.COM>
 <ME2P282MB011640F08A60CA1274597A34D4650@ME2P282MB0116.AUSP282.PROD.OUTLOOK.COM>
Message-ID: <bd38e1d3-e965-21f0-28d3-769d26217872@gmail.com>

I don't get any warning (but am using slightly different versions of 
everything than you are).

You can find where that message is coming from by running 
options(warn=2) first, which will convert it to an error.

Duncan Murdoch

On 10/07/2020 11:54 a.m., Stephen Martin Pederson wrote:
> I have an S4 object class defined in a Bioconductor package which contains multiple slots, some of which are tibbles, whilst others are vectors. If I call
> 
> slot(object, name)
> 
> where 'name' is an slot that contains a vector, everything works as expected. However, when I call slot(object, name) where 'name' is an slot that contains a tibble I get the following warning:
> 
> 
> Warning message:
> `...` is not empty.
> 
> We detected these problematic arguments:
> * `needs_dots`
> 
> These dots only exist to allow future extensions and should be empty.
> Did you misspecify an argument?
> Making 'packages.html' ... done
> 
> Wrapping the call in suppressWarnings() doesn't stop this, and this warning is printed every time the resultant object is called, e.g. df <- slot(object, name); df, would not print the error on the first call, but would print the warning every time df is  printed.
> 
> For an MWE
> 
> 
> setClass("track", slots = c(x="numeric", y="data.frame"))
> myTrack <- new("track", x = -4:4, y = tibble(y = 1))
> 
> myTrack
> 
> df <- slot(myTrack, "y")
> df
> 
> The package passes R CMD check even though this warning is produced in most examples. Changing to a generic S3 data.frame also doesn't produce this error. I'm running the following configuration:
> 
> 
> R version 4.0.2 (2020-06-22)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 18.04.4 LTS
> 
> Matrix products: default
> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1
> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.7.1
> 
> locale:
>   [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C               LC_TIME=en_AU.UTF-8
>   [4] LC_COLLATE=en_AU.UTF-8     LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8
>   [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C                  LC_ADDRESS=C
> [10] LC_TELEPHONE=C             LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C
> 
> attached base packages:
> [1] parallel  stats     graphics  grDevices utils     datasets  methods   base
> 
> other attached packages:
> [1] ngsReports_1.5.3    tibble_3.0.2        ggplot2_3.3.2       BiocGenerics_0.34.0
> 
> Thanks in advance,
> 
> Steve
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From @tephen@peder@on @end|ng |rom @de|@|de@edu@@u  Fri Jul 10 18:16:25 2020
From: @tephen@peder@on @end|ng |rom @de|@|de@edu@@u (Stephen Martin Pederson)
Date: Fri, 10 Jul 2020 16:16:25 +0000
Subject: [Rd] 
 Strange behaviour of methods::slot() when returning a tibble
In-Reply-To: <bd38e1d3-e965-21f0-28d3-769d26217872@gmail.com>
References: <ME2P282MB0116BCAB37495E9A8687290FD4650@ME2P282MB0116.AUSP282.PROD.OUTLOOK.COM>
 <ME2P282MB011640F08A60CA1274597A34D4650@ME2P282MB0116.AUSP282.PROD.OUTLOOK.COM>,
 <bd38e1d3-e965-21f0-28d3-769d26217872@gmail.com>
Message-ID: <ME2P282MB01162B5DAD92A6443870B71CD4650@ME2P282MB0116.AUSP282.PROD.OUTLOOK.COM>

Thanks Duncan. Much appreciated & I can now see it's ellipsis::check_dots_empty() causing the trouble. I'll take the question to the github issues page for that package.

All the best,

Steve
________________________________
From: Duncan Murdoch <murdoch.duncan at gmail.com>
Sent: Saturday, 11 July 2020 1:38 AM
To: Stephen Martin Pederson <stephen.pederson at adelaide.edu.au>; r-devel at r-project.org <r-devel at r-project.org>
Subject: Re: [Rd] Strange behaviour of methods::slot() when returning a tibble

I don't get any warning (but am using slightly different versions of
everything than you are).

You can find where that message is coming from by running
options(warn=2) first, which will convert it to an error.

Duncan Murdoch

On 10/07/2020 11:54 a.m., Stephen Martin Pederson wrote:
> I have an S4 object class defined in a Bioconductor package which contains multiple slots, some of which are tibbles, whilst others are vectors. If I call
>
> slot(object, name)
>
> where 'name' is an slot that contains a vector, everything works as expected. However, when I call slot(object, name) where 'name' is an slot that contains a tibble I get the following warning:
>
>
> Warning message:
> `...` is not empty.
>
> We detected these problematic arguments:
> * `needs_dots`
>
> These dots only exist to allow future extensions and should be empty.
> Did you misspecify an argument?
> Making 'packages.html' ... done
>
> Wrapping the call in suppressWarnings() doesn't stop this, and this warning is printed every time the resultant object is called, e.g. df <- slot(object, name); df, would not print the error on the first call, but would print the warning every time df is  printed.
>
> For an MWE
>
>
> setClass("track", slots = c(x="numeric", y="data.frame"))
> myTrack <- new("track", x = -4:4, y = tibble(y = 1))
>
> myTrack
>
> df <- slot(myTrack, "y")
> df
>
> The package passes R CMD check even though this warning is produced in most examples. Changing to a generic S3 data.frame also doesn't produce this error. I'm running the following configuration:
>
>
> R version 4.0.2 (2020-06-22)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 18.04.4 LTS
>
> Matrix products: default
> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1
> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.7.1
>
> locale:
>   [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C               LC_TIME=en_AU.UTF-8
>   [4] LC_COLLATE=en_AU.UTF-8     LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8
>   [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C                  LC_ADDRESS=C
> [10] LC_TELEPHONE=C             LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] parallel  stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] ngsReports_1.5.3    tibble_3.0.2        ggplot2_3.3.2       BiocGenerics_0.34.0
>
> Thanks in advance,
>
> Steve
>
>        [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


	[[alternative HTML version deleted]]


From wc@rdoen @end|ng |rom gm@||@com  Fri Jul 10 20:59:37 2020
From: wc@rdoen @end|ng |rom gm@||@com (Wim R. Cardoen)
Date: Fri, 10 Jul 2020 12:59:37 -0600
Subject: [Rd] Compilation error for R 4.0.2
Message-ID: <CABNPx=zNLOiO=bHGhkW9nvP26OMMVjRp=rTiL0YgBf1=sm3tiA@mail.gmail.com>

Hello,

I experienced a compiler error when I tried to compile the latest version
of R i.e. R4.0.2
making iosupport.d from iosupport.c
making lapack.d from lapack.c
making list.d from list.c
making localecharset.d from localecharset.c
grep.c(74): catastrophic error: cannot open source file "pcre2.h"
  # include<pcre2.h>
(The pcre2.h header file is actually present!)


I used the following compiler flags:
# PCRE2:
# -----
setenv CC gcc
setenv CFLAGS " -O2 -fPIC "
./configure --prefix=/uufs/chpc.utah.edu/sys/installdir/pcre2/10.35 \
            --enable-pcre2-16 --enable-pcre2-32 --with-pic

module purge
module load intel/2019.5.281

# USe a modern version of curl & pcre2 (The current one on Centos 7 is TOO
old)
setenv CURLDIR "/uufs/chpc.utah.edu/sys/installdir/curl/7.65.3"
setenv PCRE2DIR "/uufs/chpc.utah.edu/sys/installdir/pcre2/10.35"

setenv PATH ${PCRE2DIR}/bin:$PATH

 Setting Compiler & linker flags:
setenv CC icc
setenv CXX icpc
setenv F77 ifort
setenv FC ifort
setenv CFLAGS   " -axCORE-AVX512,CORE-AVX2,AVX,SSE4.2 -O3 -qopenmp
-fp-model precise -fPIC -I${MKLROOT}/include -I${CURLDIR}/include
                  -I${PCRE2DIR}/include "
setenv CXXFLAGS " ${CFLAGS} "
setenv FFLAGS   " ${CFLAGS} "
setenv FCFLAGS  " ${CFLAGS} "
setenv LDFLAGS  " -Wl,-rpath=${MKLROOT}/lib/intel64_lin
-L${MKLROOT}/lib/intel64_lin -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core
                  -Wl,-rpath=/uufs/
chpc.utah.edu/sys/installdir/intel/compilers_and_libraries_2019.5.281/linux/compiler/lib/intel64_lin
                           -L/uufs/
chpc.utah.edu/sys/installdir/intel/compilers_and_libraries_2019.5.281/linux/compiler/lib/intel64_lin
                           -liomp5 -lpthread -ldl -Wl,-rpath=${CURLDIR}/lib
-L${CURLDIR}/lib -lcurl
                           -Wl,-rpath=${PCRE2DIR}/lib -L${PCRE2DIR}/lib
 -lpcre2-8 -lpcre2-posix "

./configure --prefix=/uufs/chpc.utah.edu/sys/installdir/R/4.0.2i
--enable-R-profiling --enable-R-shlib --enable-memory-profiling
--enable-java --enable-shared=yes --with-blas="$LDFLAGS" --with-readline
--with-cairo --with-tcltk --with-libpng --with-jpeglib --with-libtiff
--with-ICU --with-pic --with-x --with-lapack --with-pcre2

I also appended the corresponding config.log:

Thank you,

Wim

From Kurt@Horn|k @end|ng |rom wu@@c@@t  Sat Jul 11 12:47:16 2020
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Sat, 11 Jul 2020 12:47:16 +0200
Subject: [Rd] Compilation error for R 4.0.2
In-Reply-To: <CABNPx=zNLOiO=bHGhkW9nvP26OMMVjRp=rTiL0YgBf1=sm3tiA@mail.gmail.com>
References: <CABNPx=zNLOiO=bHGhkW9nvP26OMMVjRp=rTiL0YgBf1=sm3tiA@mail.gmail.com>
Message-ID: <24329.39092.235031.880505@hornik.net>

>>>>> Wim R Cardoen writes:

> Hello,
> I experienced a compiler error when I tried to compile the latest version
> of R i.e. R4.0.2
> making iosupport.d from iosupport.c
> making lapack.d from lapack.c
> making list.d from list.c
> making localecharset.d from localecharset.c
> grep.c(74): catastrophic error: cannot open source file "pcre2.h"
>   # include<pcre2.h>
> (The pcre2.h header file is actually present!)


> I used the following compiler flags:
> # PCRE2:
> # -----
> setenv CC gcc
> setenv CFLAGS " -O2 -fPIC "
> ./configure --prefix=/uufs/chpc.utah.edu/sys/installdir/pcre2/10.35 \
>             --enable-pcre2-16 --enable-pcre2-32 --with-pic

> module purge
> module load intel/2019.5.281

> # USe a modern version of curl & pcre2 (The current one on Centos 7 is TOO
> old)
> setenv CURLDIR "/uufs/chpc.utah.edu/sys/installdir/curl/7.65.3"
> setenv PCRE2DIR "/uufs/chpc.utah.edu/sys/installdir/pcre2/10.35"

> setenv PATH ${PCRE2DIR}/bin:$PATH

>  Setting Compiler & linker flags:
> setenv CC icc
> setenv CXX icpc
> setenv F77 ifort
> setenv FC ifort
> setenv CFLAGS   " -axCORE-AVX512,CORE-AVX2,AVX,SSE4.2 -O3 -qopenmp
> -fp-model precise -fPIC -I${MKLROOT}/include -I${CURLDIR}/include
>                   -I${PCRE2DIR}/include "

What I guess you should do is

 /path/to/configure CPPFLAGS="-I${PCRE2DIR}/include ......"
 make

Hth
-k


> setenv CXXFLAGS " ${CFLAGS} "
> setenv FFLAGS   " ${CFLAGS} "
> setenv FCFLAGS  " ${CFLAGS} "
> setenv LDFLAGS  " -Wl,-rpath=${MKLROOT}/lib/intel64_lin
> -L${MKLROOT}/lib/intel64_lin -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core
>                   -Wl,-rpath=/uufs/
> chpc.utah.edu/sys/installdir/intel/compilers_and_libraries_2019.5.281/linux/compiler/lib/intel64_lin
>                            -L/uufs/
> chpc.utah.edu/sys/installdir/intel/compilers_and_libraries_2019.5.281/linux/compiler/lib/intel64_lin
>                            -liomp5 -lpthread -ldl -Wl,-rpath=${CURLDIR}/lib
> -L${CURLDIR}/lib -lcurl
>                            -Wl,-rpath=${PCRE2DIR}/lib -L${PCRE2DIR}/lib
>  -lpcre2-8 -lpcre2-posix "

> ./configure --prefix=/uufs/chpc.utah.edu/sys/installdir/R/4.0.2i
> --enable-R-profiling --enable-R-shlib --enable-memory-profiling
> --enable-java --enable-shared=yes --with-blas="$LDFLAGS" --with-readline
> --with-cairo --with-tcltk --with-libpng --with-jpeglib --with-libtiff
> --with-ICU --with-pic --with-x --with-lapack --with-pcre2

> I also appended the corresponding config.log:

> Thank you,

> Wim
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Sat Jul 11 13:01:06 2020
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Sat, 11 Jul 2020 12:01:06 +0100
Subject: [Rd] Compilation error for R 4.0.2
In-Reply-To: <24329.39092.235031.880505@hornik.net>
References: <CABNPx=zNLOiO=bHGhkW9nvP26OMMVjRp=rTiL0YgBf1=sm3tiA@mail.gmail.com>
 <24329.39092.235031.880505@hornik.net>
Message-ID: <751ad0f1-1762-89a8-eb6c-7b46ff49491f@stats.ox.ac.uk>

On 11/07/2020 11:47, Kurt Hornik wrote:
>>>>>> Wim R Cardoen writes:
> 
>> Hello,
>> I experienced a compiler error when I tried to compile the latest version
>> of R i.e. R4.0.2
>> making iosupport.d from iosupport.c
>> making lapack.d from lapack.c
>> making list.d from list.c
>> making localecharset.d from localecharset.c
>> grep.c(74): catastrophic error: cannot open source file "pcre2.h"
>>    # include<pcre2.h>
>> (The pcre2.h header file is actually present!)
> 
> 
>> I used the following compiler flags:
>> # PCRE2:
>> # -----
>> setenv CC gcc
>> setenv CFLAGS " -O2 -fPIC "
>> ./configure --prefix=/uufs/chpc.utah.edu/sys/installdir/pcre2/10.35 \
>>              --enable-pcre2-16 --enable-pcre2-32 --with-pic
> 
>> module purge
>> module load intel/2019.5.281
> 
>> # USe a modern version of curl & pcre2 (The current one on Centos 7 is TOO
>> old)
>> setenv CURLDIR "/uufs/chpc.utah.edu/sys/installdir/curl/7.65.3"
>> setenv PCRE2DIR "/uufs/chpc.utah.edu/sys/installdir/pcre2/10.35"
> 
>> setenv PATH ${PCRE2DIR}/bin:$PATH
> 
>>   Setting Compiler & linker flags:
>> setenv CC icc
>> setenv CXX icpc
>> setenv F77 ifort
>> setenv FC ifort
>> setenv CFLAGS   " -axCORE-AVX512,CORE-AVX2,AVX,SSE4.2 -O3 -qopenmp
>> -fp-model precise -fPIC -I${MKLROOT}/include -I${CURLDIR}/include
>>                    -I${PCRE2DIR}/include "
> 
> What I guess you should do is
> 
>   /path/to/configure CPPFLAGS="-I${PCRE2DIR}/include ......"
>   make

Or use a config.site file for all of these settings.

On some systems (including some Linux systems I have used and current 
macOS), setting too much in the environment (usually caused by long 
values) has caused software to malfunction, including to segfault so it 
is ingrained in me to avoid it.

>> setenv CXXFLAGS " ${CFLAGS} "
>> setenv FFLAGS   " ${CFLAGS} "
>> setenv FCFLAGS  " ${CFLAGS} "
>> setenv LDFLAGS  " -Wl,-rpath=${MKLROOT}/lib/intel64_lin
>> -L${MKLROOT}/lib/intel64_lin -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core
>>                    -Wl,-rpath=/uufs/
>> chpc.utah.edu/sys/installdir/intel/compilers_and_libraries_2019.5.281/linux/compiler/lib/intel64_lin
>>                             -L/uufs/
>> chpc.utah.edu/sys/installdir/intel/compilers_and_libraries_2019.5.281/linux/compiler/lib/intel64_lin
>>                             -liomp5 -lpthread -ldl -Wl,-rpath=${CURLDIR}/lib
>> -L${CURLDIR}/lib -lcurl
>>                             -Wl,-rpath=${PCRE2DIR}/lib -L${PCRE2DIR}/lib
>>   -lpcre2-8 -lpcre2-posix "
> 
>> ./configure --prefix=/uufs/chpc.utah.edu/sys/installdir/R/4.0.2i
>> --enable-R-profiling --enable-R-shlib --enable-memory-profiling
>> --enable-java --enable-shared=yes --with-blas="$LDFLAGS" --with-readline
>> --with-cairo --with-tcltk --with-libpng --with-jpeglib --with-libtiff
>> --with-ICU --with-pic --with-x --with-lapack --with-pcre2
> 
>> I also appended the corresponding config.log:

It did not get through the filters.

> 
>> Thank you,
> 
>> Wim


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


