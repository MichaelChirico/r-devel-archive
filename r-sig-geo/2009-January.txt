From Agustin.Lobo at ija.csic.es  Fri Jan  2 13:51:59 2009
From: Agustin.Lobo at ija.csic.es (Agustin Lobo)
Date: Fri, 2 Jan 2009 13:51:59 +0100
Subject: [R-sig-Geo] Material for asdar book
Message-ID: <27de757d0901020451q10d3994fkbde8831761f4a7a7@mail.gmail.com>

Hi!
It would be helpful if the material (source, datasets...) of the asdar book
could be made available in few tar files (i.e., one for the datasets, another
for the source code...). I've tried with downThemAll but get inconvenient names
for the files.

Thanks!

Agus
-- 
Dr. Agustin Lobo
Institut de Ciencies de la Terra "Jaume Almera" (CSIC)
Lluis Sole Sabaris s/n
08028 Barcelona
Spain
Tel. 34 934095410
Fax. 34 934110012
e-mail Agustin.Lobo at ija.csic.es
http://www.ija.csic.es/gt/obster



From bohara at unm.edu  Fri Jan  2 19:11:40 2009
From: bohara at unm.edu (Alok K. Bohara, PhD)
Date: Fri, 02 Jan 2009 11:11:40 -0700
Subject: [R-sig-Geo] extracting outer boundary in spedep or GeoDa
In-Reply-To: <95CFBE72-C975-4F18-A3B8-AA0C75E9898B@utsa.edu>
References: <95CFBE72-C975-4F18-A3B8-AA0C75E9898B@utsa.edu>
Message-ID: <495E58DC.60300@unm.edu>

Hi Cory

I saw this message and thought of asking you  a question.  Or anyone 
else..  I am new to R and I am trying to learn GeoRglm.  I have used 
spdep to read state shape file to extract centroids, neighbors etc...Is 
there anyway I can extract just the outer polygon  boundary as a n by 2 
text file from such a state shape file?  I tried using GeoDa to export 
such a file using a command Shape to  Boundary,  but it gives a file 
with boundaries for all the counties (I think).  All I want is the state 
outline polygon. 

Thanks.
Alok Bohara

"Have you tried just reading the shapefile directly into R using the  readShapePoly command in maptools.  spdep can form the neighbors and  weights matrices from the shapefile, then you don't have to bother  
with the export.  Corey"




-- 
Alok K. Bohara, Ph.D.
Professor
Department of Economics
University of New Mexico
Albuquerque, NM 87131,USA
Ph: 505-277-5903/5304(w)
Fax:505-277-9445
email: bohara at unm.edu
http://www.unm.edu/~econ/faculty/professors.html
Nepal Study Center: http://nepalstudycenter.unm.edu



From Roger.Bivand at nhh.no  Fri Jan  2 20:05:37 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 2 Jan 2009 20:05:37 +0100 (CET)
Subject: [R-sig-Geo] Material for asdar book
In-Reply-To: <27de757d0901020451q10d3994fkbde8831761f4a7a7@mail.gmail.com>
References: <27de757d0901020451q10d3994fkbde8831761f4a7a7@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901021955560.12514@reclus.nhh.no>

On Fri, 2 Jan 2009, Agustin Lobo wrote:

> Hi!

> It would be helpful if the material (source, datasets...) of the asdar 
> book could be made available in few tar files (i.e., one for the 
> datasets, another for the source code...). I've tried with downThemAll 
> but get inconvenient names for the files.

Our test framework (run nightly on current R and packages) uses a script 
including the following:

$ more run_tests.sh
#! /bin/bash
export ASDAR="http://www.asdar-book.org/"
export ASDAR_BUNDLES="${ASDAR}bundles"

CHAPTERS="hello cm vis die cm2 csdacm sppa geos lat1 lat2 dismap"

for ch in $CHAPTERS; do
   if test -d ${ch}
     then cd ${ch}
   else
     mkdir ${ch}
     cd ${ch}
   fi
   wget -N "${ASDAR_BUNDLES}/${ch}_bundle.zip"
   unzip -o "${ch}_bundle.zip"
   cd ..
done

This generates a directory for each chapter, but you could do it otherwise 
if you prefer. As you will have seen, the R scripts in each chapter 
unpack the data set zip archives. We can look at trying to get PHP to do 
this dynamically, but I guess a scripting solution is good enough? I 
apologise for replying to the list, but since the question was asked here, 
I felt obliged to do so. I'm sure questions about other books would be 
handled here in the same way.

Best wishes,

Roger

>
> Thanks!
>
> Agus
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From b.rowlingson at lancaster.ac.uk  Fri Jan  2 20:22:55 2009
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Fri, 2 Jan 2009 19:22:55 +0000
Subject: [R-sig-Geo] Material for asdar book
In-Reply-To: <alpine.LRH.2.00.0901021955560.12514@reclus.nhh.no>
References: <27de757d0901020451q10d3994fkbde8831761f4a7a7@mail.gmail.com>
	<alpine.LRH.2.00.0901021955560.12514@reclus.nhh.no>
Message-ID: <d8ad40b50901021122k5d17ce1boebcf3cdcc5bbde31@mail.gmail.com>

2009/1/2 Roger Bivand <Roger.Bivand at nhh.no>:

> $ more run_tests.sh
> #! /bin/bash
> export ASDAR="http://www.asdar-book.org/"
> export ASDAR_BUNDLES="${ASDAR}bundles"
>
> CHAPTERS="hello cm vis die cm2 csdacm sppa geos lat1 lat2 dismap"
>
> for ch in $CHAPTERS; do
>  if test -d ${ch}
>    then cd ${ch}
>  else
>    mkdir ${ch}
>    cd ${ch}
>  fi
>  wget -N "${ASDAR_BUNDLES}/${ch}_bundle.zip"
>  unzip -o "${ch}_bundle.zip"
>  cd ..
> done
>
> This generates a directory for each chapter, but you could do it otherwise
> if you prefer. As you will have seen, the R scripts in each chapter unpack
> the data set zip archives. We can look at trying to get PHP to do this
> dynamically, but I guess a scripting solution is good enough?

 Why not an R solution using download.file?

Barry



From Agustin.Lobo at ija.csic.es  Fri Jan  2 20:29:51 2009
From: Agustin.Lobo at ija.csic.es (Agustin Lobo)
Date: Fri, 02 Jan 2009 20:29:51 +0100
Subject: [R-sig-Geo] Material for asdar book
In-Reply-To: <alpine.LRH.2.00.0901021955560.12514@reclus.nhh.no>
References: <27de757d0901020451q10d3994fkbde8831761f4a7a7@mail.gmail.com>
	<alpine.LRH.2.00.0901021955560.12514@reclus.nhh.no>
Message-ID: <495E6B2F.50105@ija.csic.es>

The script worked great, thanks. The problem is thus
solved for me, but may be windows users
will not be able to run it. Perhaps a line creating a tar or
zip file could be added to the script, and then upload that
tar file to the web page could also be done automatically?

(Roger, I sent my message to the list just assuming that many 
subscribers would share the same interest, I appologize if this
was actually inappropriate).

Agus

Roger Bivand wrote:
> On Fri, 2 Jan 2009, Agustin Lobo wrote:
> 
>> Hi!
> 
>> It would be helpful if the material (source, datasets...) of the asdar 
>> book could be made available in few tar files (i.e., one for the 
>> datasets, another for the source code...). I've tried with downThemAll 
>> but get inconvenient names for the files.
> 
> Our test framework (run nightly on current R and packages) uses a script 
> including the following:
> 
> $ more run_tests.sh
> #! /bin/bash
> export ASDAR="http://www.asdar-book.org/"
> export ASDAR_BUNDLES="${ASDAR}bundles"
> 
> CHAPTERS="hello cm vis die cm2 csdacm sppa geos lat1 lat2 dismap"
> 
> for ch in $CHAPTERS; do
>   if test -d ${ch}
>     then cd ${ch}
>   else
>     mkdir ${ch}
>     cd ${ch}
>   fi
>   wget -N "${ASDAR_BUNDLES}/${ch}_bundle.zip"
>   unzip -o "${ch}_bundle.zip"
>   cd ..
> done
> 
> This generates a directory for each chapter, but you could do it 
> otherwise if you prefer. As you will have seen, the R scripts in each 
> chapter unpack the data set zip archives. We can look at trying to get 
> PHP to do this dynamically, but I guess a scripting solution is good 
> enough? I apologise for replying to the list, but since the question was 
> asked here, I felt obliged to do so. I'm sure questions about other 
> books would be handled here in the same way.
> 
> Best wishes,
> 
> Roger
> 
>>
>> Thanks!
>>
>> Agus
>>
> 

-- 
Dr. Agustin Lobo
Institut de Ciencies de la Terra "Jaume Almera" (CSIC)
LLuis Sole Sabaris s/n
08028 Barcelona
Spain
Tel. 34 934095410
Fax. 34 934110012
email: Agustin.Lobo at ija.csic.es
http://www.ija.csic.es/gt/obster



From edzer.pebesma at uni-muenster.de  Sat Jan  3 15:24:57 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Sat, 03 Jan 2009 15:24:57 +0100
Subject: [R-sig-Geo] fixed colors in maps (Katona Lajos)
In-Reply-To: <59ce81443070646a32d5df368082891e@blup.ultimate.hu>
References: <59ce81443070646a32d5df368082891e@blup.ultimate.hu>
Message-ID: <495F7539.5030309@uni-muenster.de>

Dear all,

I've uploaded a new sp version to /incoming on CRAN (0.9-29) where 
spplot should deal better with factors as dependent variables. As 
levelplot does not really have this functionality, it involved a bit of 
work on the spplot side.

Now, spplot checks that all factors in layers (panels) have the same 
levels; I cannot see use of paneled plots for factors having different 
levels; this means that the example Jon Loehrke gave, to which I reacted 
with a note that the resulting plot was wrong on

https://stat.ethz.ch/pipermail/r-sig-geo/2008-December/004729.html

now breaks with an error condition. Please convince me if you think this 
is bad design.

Also, when plotting factors, the length of the col.regions color ramp 
now needs to equal the number of factor levels. An exception is when 
plotting points; in this case a single color is also accepted (because 
you may want to use point symbols to distinguish classes). The default 
color setting for factors is still that for continuous variables (the 
cm.colors() default of lattice); I'm quite unhappy about this but am 
also reluctant to make sp dependent on RColorBrewer.

Please test & comment; happy new year!
--
Edzer


Katona Lajos wrote:
>  Hi,
>  there is an example here:
>
>  library(sp)
>  library(lattice)
>  library(RColorBrewer)
>  data(meuse)
>  coordinates(meuse) <- ~x+y
> 
meuse$color_codes=as.numeric(meuse$ffreq)+as.numeric(meuse$soil)+as.numeric(meuse$lime)
>  meuse$color_codes[1:3]=1
>  meuse$color_codes[4:7]=2
>  meuse$color_codes[16:20]=8
>  meuse$color_codes[21:26]=9
>  meuse$color_codes2=meuse$color_codes
>  meuse$color_codes3=meuse$color_codes
>  meuse$color_codes2=ifelse(meuse$color_codes2<4,meuse$color_codes2,3)
>  meuse$color_codes3=ifelse(meuse$color_codes3>6,meuse$color_codes3,6)
>  meuse$color_codes=as.factor(meuse$color_codes)
>  meuse$color_codes2=factor(meuse$color_codes2, levels=c(1,2,3,4,5,6,7,8,9))
>  meuse$color_codes3=factor(meuse$color_codes3, levels=c(1,2,3,4,5,6,7,8,9))
>  #good
>  spplot(meuse, "color_codes", col.regions=brewer.pal(9, "Reds"))
>  #wrong (I'd like to see every code of colors in legend, and only the 
first 3
>  colors from the 9 in the map)
>  spplot(meuse, "color_codes2", col.regions=brewer.pal(9, "Reds"))
>  #wrong (I'd like to see every code of colors in legend, and only 
between 6 and
>  9 colors from the 9 in the map)
>  spplot(meuse, "color_codes3", col.regions=brewer.pal(9, "Reds"))
>
>  Best regards,
>  Lajos Katona
>
>
>  On Sun, 28 Dec 2008 12:36:35 +0100, Edzer Pebesma
>  <edzer.pebesma at uni-muenster.de> wrote:
> > Could you provide me and/or the list with an example that we can
> > reproduce and that illustrates your problem?
> > --
> > Edzer
>
>  _______________________________________________
>  R-sig-Geo mailing list
>  R-sig-Geo at stat.math.ethz.ch
>  https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From Roger.Bivand at nhh.no  Sat Jan  3 16:18:43 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sat, 3 Jan 2009 16:18:43 +0100 (CET)
Subject: [R-sig-Geo] Material for asdar book
In-Reply-To: <d8ad40b50901021122k5d17ce1boebcf3cdcc5bbde31@mail.gmail.com>
References: <27de757d0901020451q10d3994fkbde8831761f4a7a7@mail.gmail.com>
	<alpine.LRH.2.00.0901021955560.12514@reclus.nhh.no>
	<d8ad40b50901021122k5d17ce1boebcf3cdcc5bbde31@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901031614240.16278@reclus.nhh.no>

On Fri, 2 Jan 2009, Barry Rowlingson wrote:

> 2009/1/2 Roger Bivand <Roger.Bivand at nhh.no>:
>
>> $ more run_tests.sh
>> #! /bin/bash
>> export ASDAR="http://www.asdar-book.org/"
>> export ASDAR_BUNDLES="${ASDAR}bundles"
>>
>> CHAPTERS="hello cm vis die cm2 csdacm sppa geos lat1 lat2 dismap"
>>
>> for ch in $CHAPTERS; do
>>  if test -d ${ch}
>>    then cd ${ch}
>>  else
>>    mkdir ${ch}
>>    cd ${ch}
>>  fi
>>  wget -N "${ASDAR_BUNDLES}/${ch}_bundle.zip"
>>  unzip -o "${ch}_bundle.zip"
>>  cd ..
>> done
>>
>> This generates a directory for each chapter, but you could do it otherwise
>> if you prefer. As you will have seen, the R scripts in each chapter unpack
>> the data set zip archives. We can look at trying to get PHP to do this
>> dynamically, but I guess a scripting solution is good enough?
>
> Why not an R solution using download.file?

Here you are:

ASDAR_BUNDLES <- "http://www.asdar-book.org/bundles"
ci <- structure(list(hello = c("data1964al.xy", "hello_mod.R"),
cm = c("auck_gshhs.RData", "CRAN051001a.txt", "legend_image.R",
  "70042108.zip", "auckland_mapgen.dat", "seamap105_mod.csv", "cm_mod.R",
  "high.RData", "state.sat.data_mod.txt"),
vis = "vis_mod.R",
die = c("70042108.zip", "die_mod.R", "legend_image.R", "snow_files.zip"),
cm2 = c("70042108.zip", "90mfips.txt", "auck_gshhs.RData", "cm2_mod.R"),
csdacm = c("csdacm_mod.R", "seamap105_mod.csv", "70042108.zip"),
sppa = c("sppa_mod.R", "cv.R", "north_derby_asthma.zip"),
geos = c("geos_mod.R", "m1m2.R"),
lat1 = c("lat1_mod.R", "NY_data.zip", "Sy_GeoDa1.GAL", "Sy_GeoDa2.GAL",
  "Sy_GeoDa4.GWT"),
lat2 = c("lat2_mod.R", "NY_data.zip"),
dismap = "dismap_mod.R"), .Names = c("hello", "cm", "vis", "die", "cm2",
"csdacm", "sppa", "geos", "lat1", "lat2", "dismap"))

for (i in names(ci)) {
   fn <- paste(i, "_bundle.zip", sep = "")
   download.file(paste(ASDAR_BUNDLES, "/", fn, sep = ""), fn)
   if (!file.exists(i)) dir.create(i)
   for (j in ci[[i]]) {
     zfn <- zip.file.extract(j, fn)
     file.copy(zfn, paste(i, j, sep=.Platform$file.sep))
   }
}

I think that Python would have been easier, because it has - and I can't 
see that R has - a way of looking up the table of contents of a zipfile, 
so here I've fudged the issue by canning the contents. Any other portable 
languages?

Roger

>
> Barry
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From mdsumner at utas.edu.au  Sun Jan  4 07:33:05 2009
From: mdsumner at utas.edu.au (Michael Sumner)
Date: Sun, 04 Jan 2009 06:33:05 -0000
Subject: [R-sig-Geo] shortest realistic distance for fish travel
In-Reply-To: <CB6FB9A0-C735-4797-9F3D-D23F088A49EA@umassd.edu>
References: <CB6FB9A0-C735-4797-9F3D-D23F088A49EA@umassd.edu>
Message-ID: <C314D46A17CE6F732E89CD7F@azimuth.utas.edu.au>

A vaguely similar approach is provided by the (hard to use) code in the 
tripEstimation package.

This package is primarily for determining realistic track locations from 
raw archival light data or satellite locations with estimates included for 
the "intermediate path" between data collection times, but the methods used 
to apply auxiliary data such as SST or bathymetry, and simple speed models 
could be applied to your case.

I'd be happy to try an example to see if the existing code can be applied, 
although it might be a bit heavy handed.

Is there a freely available coastline data set that you would be confident 
using in your case? Is the GSHHS sufficient? Do you have other data that 
can be used to limit the likely/possible path?

Some more context for the package via an (out of date) light example can be 
found here:
http://staff.acecrc.org.au/~mdsumner/Rutas/tripEstimation-demo.pdf

Cheers, Mike.





--On Thursday, 18 December 2008 2:38 PM -0500 Jon Loehrke 
<jloehrke at umassd.edu> wrote:

> Hi,
>
> 	I am trying to find an algorithm or thoughts on approach for how to
> compute the shortest realistic distance between two points.  I define
> shortest realistic distance as the shortest distance between two points
> that a fish (which is what I study) could move through.  Hence the path
> must wrap around land, islands, archipelagos, etc.
>
> Point 1
>
> 41.15  	N
> 71.26 	W
>
> Point 2
>
> 42.17  	N
> 70.37 	W
>
> 	I'm sure this issue has come up with the geo-statistical community, but
> simply need a starting direction.
>
> Thank much and happy holidays.
>
> Jon Loehrke
> Graduate Research Assistant
> Department of Fisheries Oceanography
> School for Marine Science and Technology
> University of Massachusetts
> 200 Mill Road, Suite 325
> Fairhaven, MA 02719
> jloehrke at umassd.edu
> T 508-910-6393
> F 508-910-6396
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo



From bohara at unm.edu  Mon Jan  5 02:22:07 2009
From: bohara at unm.edu (Alok K. Bohara, PhD)
Date: Sun, 04 Jan 2009 18:22:07 -0700
Subject: [R-sig-Geo] covariates and quadrature points
In-Reply-To: <495F7539.5030309@uni-muenster.de>
References: <59ce81443070646a32d5df368082891e@blup.ultimate.hu>
	<495F7539.5030309@uni-muenster.de>
Message-ID: <496160BF.6020203@unm.edu>

Hi all:

I am trying to use spatstat ppm command to estimate a poisson model with 
a covariate. It gives me an error: (I am new to R)

Error in mpl.get.covariates(covariates, P, Pname) :
Number of rows in ?covariates? does not equal the number of quadrature 
points

1. I have created a point pattern dataset ppp with a polygon as window 
(using NC as a state, for example).

x1 <- rawdata$NWBIR74
U <- cbind(x,y,x1)
U <- as.data.frame(U)
Q <- quadscheme(X, dummy=list(x=U$x, y=U$y))
#where X is created using a ppp command with NC polygon as an window "owin"
# gave me many errors saying that I have duplicates...
## So I used this to extract unique elements as suggested somewhere
xu2 <- X[!duplicated(X)]
Q <- quadscheme(xu2, dummy=list(x=U$x, y=U$y))
## I also tried this:
#xu2 <- x[!duplicated(x, fromLast = TRUE)]

df <- data.frame(x11=c(x1, U$x11))
#For some reason df is a vector and NOT a matrix (I don;t know if this 
is what it needs to be??)
ppm(Q, ~ x11, Poisson(), covariates=df)
Error in mpl.get.covariates(covariates, P, Pname) :
Number of rows in ?covariates? does not equal the number of quadrature 
points

Thanks

Alok Bohara
Professor
UNM



-- 
Alok K. Bohara, Ph.D.
Professor
Department of Economics
University of New Mexico
Albuquerque, NM 87131,USA
Ph: 505-277-5903/5304(w)
Fax:505-277-9445
email: bohara at unm.edu
http://www.unm.edu/~econ/faculty/professors.html
Nepal Study Center: http://nepalstudycenter.unm.edu



From pecardoso at netcabo.pt  Mon Jan  5 12:25:01 2009
From: pecardoso at netcabo.pt (Paulo E. Cardoso)
Date: Mon, 5 Jan 2009 11:25:01 -0000
Subject: [R-sig-Geo]  Adehabitats and georegistered outputs
In-Reply-To: <496160BF.6020203@unm.edu>
References: <59ce81443070646a32d5df368082891e@blup.ultimate.hu>	<495F7539.5030309@uni-muenster.de>
	<496160BF.6020203@unm.edu>
Message-ID: <!&!AAAAAAAAAAAYAAAAAAAAAK2N38q7o51Ejb8q0JfvLrBiggAAEAAAAGCkGxDmX29MtzqRMsF25EQBAAAAAA==@netcabo.pt>

Hi,
adehabitat package functions for analysis of home range in animal ecology
provide graphical and tabular outputs nevertheless there is no apparent
connection to truly georeferenced data (positions).
I'd like to know if it's possible to convert adehabitat spatial outputs
(like convex polygons, kernel areas) to georegistered shapefiles.
Thanks in advance
____________
Paulo E. Cardoso



From moor0554 at umn.edu  Mon Jan  5 17:42:41 2009
From: moor0554 at umn.edu (Christopher Moore)
Date: 05 Jan 2009 10:42:41 -0600
Subject: [R-sig-Geo] R-sig-Geo Digest, Vol 65, Issue 1
In-Reply-To: <mailman.11.1230807603.27651.r-sig-geo@stat.math.ethz.ch>
References: <mailman.11.1230807603.27651.r-sig-geo@stat.math.ethz.ch>
Message-ID: <Prayer.1.0.16.0901051042410.7467@vs-w.tc.umn.edu>

Dear Roger,

I am glad to hear that the NAOK argument will be implemented in the next 
release. Will it be implemented in functions besides lag.listw, such as 
moran.plot?

I agree that "missing data is missing, really," which motivated me to 
develop an ad hoc alternative to treating NA as zero, one that uses all 
available information in a manner similar to pairwise deletion. I can not 
make a case for including that approach in the spdep package (which is 
great, by the way). However, I do think the approach is worthy of further 
methodological inquiry, perhaps as a complement to multiple imputation on 
the attribute side.

Thanks,
Chris

-- 
Christopher Moore, M.P.P.
Doctoral Student
Quantitative Methods in Education
University of Minnesota
moor0554 at umn.edu
http://www.tc.umn.edu/~moor0554/


On Jan 1 2009, r-sig-geo-request at stat.math.ethz.ch wrote:
>Date: Wed, 31 Dec 2008 12:36:57 +0100 (CET)
>From: Roger Bivand <Roger.Bivand at nhh.no>
>Subject: Re: [R-sig-Geo] Spatial Lags Excluding Neighbors' Missing
>	Attribute Values
>To: Christopher Moore <moor0554 at umn.edu>
>Cc: r-sig-geo at stat.math.ethz.ch
>Message-ID: <alpine.LRH.2.00.0812311223420.5052 at reclus.nhh.no>
>Content-Type: TEXT/PLAIN; format=flowed; charset=US-ASCII
>
>On Tue, 30 Dec 2008, Christopher Moore wrote:
>
>> Greetings,
>>
>> I posted a request for assistance on 12/27/08: 
>> <https://stat.ethz.ch/pipermail/r-sig-geo/2008-December/004733.html>.
>>
>> I developed a satisfactory solution, which is posted below for others 
>> who wish to similarly exclude neighbors' missing attribute values from W 
>> style spatial lags.
>>
>
>Well, this is quite a detailed question, and this isn't the best time of 
>year to get rapid response. I don't think that your solution is 
>satisfactory - and I don't think that there is any viable alternative to 
>either imputing to fill all the missing values (I wouldn't do that), or 
>subsetting out incomplete cases and using the same subset on the "nb" 
>object (there are subset methods). What happens now is that in the 
>compiled code in "lagw" the sum is not incremented when the value is not 
>finite:
>
> 		sum = 0.0;
> 		for (j=0; j<INTEGER_POINTER(card)[i]; j++) {
> 		    k = INTEGER_POINTER(VECTOR_ELT(nb, i))[j];
> 		    wt = NUMERIC_POINTER(VECTOR_ELT(weights, i))[j];
> 		    tmp = NUMERIC_POINTER(x)[k-ROFFSET];
> 		    if (R_FINITE(tmp)) sum += tmp * wt;
> 		}
> 		NUMERIC_POINTER(ans)[i] = sum;
>
>in src/lagw.c. In fact the NAOK argument is not being used, and should be, 
>so in the next release you will either get an error, or, for NAOK=TRUE, 
>you'll get an NA for the lagged value - that was the intention. If you can 
>make a case for a third choice, essentially doing what you describe, I can 
>consider it, but being conservative, missing data is missing, really, 
>isn't it?
>
>Best wishes,
>
>Roger
>



From moor0554 at umn.edu  Mon Jan  5 17:48:25 2009
From: moor0554 at umn.edu (Christopher Moore)
Date: 05 Jan 2009 10:48:25 -0600
Subject: [R-sig-Geo] Spatial Lags Excluding Neighbors' Missing Attribute
	Values
In-Reply-To: <alpine.LRH.2.00.0812311223420.5052@reclus.nhh.no>
References: <mailman.5.1230462002.17612.r-sig-geo@stat.math.ethz.ch>
	<Prayer.1.0.16.0812301527410.10033@vs-a.tc.umn.edu>
	<alpine.LRH.2.00.0812311223420.5052@reclus.nhh.no>
Message-ID: <Prayer.1.0.16.0901051048250.7467@vs-w.tc.umn.edu>

Dear Roger,

I am glad to hear that the NAOK argument will be implemented in the next 
release. Will it be implemented in functions besides lag.listw, such as 
moran.plot?

I agree that "missing data is missing, really," which motivated me to 
develop an ad hoc alternative to treating NA as zero, one that uses all 
available information in a manner similar to pairwise deletion. I can not 
make a case for including that approach in the spdep package (which is 
great, by the way). However, I do think the approach is worthy of further 
methodological inquiry, perhaps as a complement to multiple imputation on 
the attribute side.

Thanks,
Chris

P.S. My apologies for double posting to the list. I mistakenly used an 
uninformative subject line in the first posting.

-- 
Christopher Moore, M.P.P.
Doctoral Student
Quantitative Methods in Education
University of Minnesota
moor0554 at umn.edu
http://www.tc.umn.edu/~moor0554/


On Jan 1 2009, r-sig-geo-request at stat.math.ethz.ch wrote:
>Date: Wed, 31 Dec 2008 12:36:57 +0100 (CET)
>From: Roger Bivand <Roger.Bivand at nhh.no>
>Subject: Re: [R-sig-Geo] Spatial Lags Excluding Neighbors' Missing
>	Attribute Values
>To: Christopher Moore <moor0554 at umn.edu>
>Cc: r-sig-geo at stat.math.ethz.ch
>Message-ID: <alpine.LRH.2.00.0812311223420.5052 at reclus.nhh.no>
>Content-Type: TEXT/PLAIN; format=flowed; charset=US-ASCII
>
>On Tue, 30 Dec 2008, Christopher Moore wrote:
>
>> Greetings,
>>
>> I posted a request for assistance on 12/27/08: 
>> <https://stat.ethz.ch/pipermail/r-sig-geo/2008-December/004733.html>.
>>
>> I developed a satisfactory solution, which is posted below for others 
>> who wish to similarly exclude neighbors' missing attribute values from W 
>> style spatial lags.
>>
>
>Well, this is quite a detailed question, and this isn't the best time of 
>year to get rapid response. I don't think that your solution is 
>satisfactory - and I don't think that there is any viable alternative to 
>either imputing to fill all the missing values (I wouldn't do that), or 
>subsetting out incomplete cases and using the same subset on the "nb" 
>object (there are subset methods). What happens now is that in the 
>compiled code in "lagw" the sum is not incremented when the value is not 
>finite:
>
> 		sum = 0.0;
> 		for (j=0; j<INTEGER_POINTER(card)[i]; j++) {
> 		    k = INTEGER_POINTER(VECTOR_ELT(nb, i))[j];
> 		    wt = NUMERIC_POINTER(VECTOR_ELT(weights, i))[j];
> 		    tmp = NUMERIC_POINTER(x)[k-ROFFSET];
> 		    if (R_FINITE(tmp)) sum += tmp * wt;
> 		}
> 		NUMERIC_POINTER(ans)[i] = sum;
>
>in src/lagw.c. In fact the NAOK argument is not being used, and should be, 
>so in the next release you will either get an error, or, for NAOK=TRUE, 
>you'll get an NA for the lagged value - that was the intention. If you can 
>make a case for a third choice, essentially doing what you describe, I can 
>consider it, but being conservative, missing data is missing, really, 
>isn't it?
>
>Best wishes,
>
>Roger
>



From Roger.Bivand at nhh.no  Mon Jan  5 21:41:45 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 5 Jan 2009 21:41:45 +0100 (CET)
Subject: [R-sig-Geo] Spatial Lags Excluding Neighbors' Missing Attribute
 Values
In-Reply-To: <Prayer.1.0.16.0901051048250.7467@vs-w.tc.umn.edu>
References: <mailman.5.1230462002.17612.r-sig-geo@stat.math.ethz.ch>
	<Prayer.1.0.16.0812301527410.10033@vs-a.tc.umn.edu>
	<alpine.LRH.2.00.0812311223420.5052@reclus.nhh.no>
	<Prayer.1.0.16.0901051048250.7467@vs-w.tc.umn.edu>
Message-ID: <alpine.LRH.2.00.0901052120570.27249@reclus.nhh.no>

On Mon, 5 Jan 2009, Christopher Moore wrote:

> Dear Roger,
>
> I am glad to hear that the NAOK argument will be implemented in the next 
> release. Will it be implemented in functions besides lag.listw, such as 
> moran.plot?

The draft release 0.4-32 is on R-Forge, you can try it by:

install.packages("spdep",repos="http://R-Forge.R-project.org")

with the usual precautions. I ought to revisit several functions - some 
take an NAOK or similar argument, others do not. In fact, for analysis 
they should do something more like what moran.test() does, using 
na.action= as an argument, but usage isn't consistent. Probably this needs 
to be factored out as a helper function that can be plugged into the test 
and model functions. I'd be interested in some (off-list) indications of 
whether NA handling matters and why, with some example data sets to add to 
spdep if possible.

For na.omit, moran.test() subsets the variable and the weights object 
internally to remove NA observations.

Roger

>
> I agree that "missing data is missing, really," which motivated me to develop 
> an ad hoc alternative to treating NA as zero, one that uses all available 
> information in a manner similar to pairwise deletion. I can not make a case 
> for including that approach in the spdep package (which is great, by the 
> way). However, I do think the approach is worthy of further methodological 
> inquiry, perhaps as a complement to multiple imputation on the attribute 
> side.
>
> Thanks,
> Chris
>
> P.S. My apologies for double posting to the list. I mistakenly used an 
> uninformative subject line in the first posting.
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Paul.Satterthwaite at oregonstate.edu  Tue Jan  6 00:30:29 2009
From: Paul.Satterthwaite at oregonstate.edu (Satterthwaite, Paul)
Date: Mon, 5 Jan 2009 15:30:29 -0800
Subject: [R-sig-Geo] semivariance analysis of categorical variable
Message-ID: <D7B94F0B40246740A3EFF9DBBD921B7BB8989F@SAGE.forestry.oregonstate.edu>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090105/e49e3a77/attachment.pl>

From Henk.Sierdsema at sovon.nl  Tue Jan  6 11:43:08 2009
From: Henk.Sierdsema at sovon.nl (Henk Sierdsema)
Date: Tue, 6 Jan 2009 11:43:08 +0100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <D7B94F0B40246740A3EFF9DBBD921B7BB8989F@SAGE.forestry.oregonstate.edu>
Message-ID: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB622@mail.sovon.nl>

Hi,

I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage to read the kml-file. Can anyone help me with this? 

Thnx,

Henk Sierdsema


SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology

Rijksstraatweg 178
6573 DG  Beek-Ubbergen
The Netherlands
tel: +31 (0)24 6848145
fax: +31 (0)24 6848122



From edzer.pebesma at uni-muenster.de  Tue Jan  6 12:15:49 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Tue, 06 Jan 2009 12:15:49 +0100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB622@mail.sovon.nl>
References: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB622@mail.sovon.nl>
Message-ID: <49633D65.6070502@uni-muenster.de>



Henk Sierdsema wrote:
> Hi,
>
> I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage to read the kml-file. Can anyone help me with this? 
>   
http://www.gdal.org/ogr/ogr_formats.html mentions at KML that "read 
support needs libexpat". Further it says "KML reading is only available 
if GDAL/OGR is built with the Expat XML Parser, otherwise only KML 
writing will be supported."

Maybe this was missing while your gdal/rgdal was built?
--
Edzer
> Thnx,
>
> Henk Sierdsema
>
>
> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>
> Rijksstraatweg 178
> 6573 DG  Beek-Ubbergen
> The Netherlands
> tel: +31 (0)24 6848145
> fax: +31 (0)24 6848122
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From p.hiemstra at geo.uu.nl  Tue Jan  6 12:14:59 2009
From: p.hiemstra at geo.uu.nl (Paul Hiemstra)
Date: Tue, 06 Jan 2009 12:14:59 +0100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB622@mail.sovon.nl>
References: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB622@mail.sovon.nl>
Message-ID: <49633D33.7090704@geo.uu.nl>

Hi Henk,

We need more details to be able to solve your problem. What kind of 
system are your using (sessionInfo() command)? Could you provide use 
with a piece of code that reproduces the error. What was the exact error 
and what piece of code generated the error (use traceback()).

cheers,
Paul

ps You replied to an earlier e-mail on the r-sig-geo list([R-sig-Geo] 
semivariance analysis of categorical variable). This breaks the 
threading and adds your e-mail to the thread of the above mentioned 
e-mail. Sending a new e-mail makes a fresh new thread for your problem.

Henk Sierdsema wrote:
> Hi,
>
> I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage to read the kml-file. Can anyone help me with this? 
>
> Thnx,
>
> Henk Sierdsema
>
>
> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>
> Rijksstraatweg 178
> 6573 DG  Beek-Ubbergen
> The Netherlands
> tel: +31 (0)24 6848145
> fax: +31 (0)24 6848122
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   


-- 
Drs. Paul Hiemstra
Department of Physical Geography
Faculty of Geosciences
University of Utrecht
Heidelberglaan 2
P.O. Box 80.115
3508 TC Utrecht
Phone: 	+31302535773
Fax:	+31302531145
http://intamap.geo.uu.nl/~paul



From T.Hengl at uva.nl  Tue Jan  6 13:10:56 2009
From: T.Hengl at uva.nl (Tomislav Hengl)
Date: Tue, 6 Jan 2009 13:10:56 +0100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <49633D65.6070502@uni-muenster.de>
References: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB622@mail.sovon.nl>
	<49633D65.6070502@uni-muenster.de>
Message-ID: <8BBEDAD18B8944CAB10F65937B5A5ADB@pcibed193>


Dear Henk,

My experiences is that the easiest way to read KML files and convert them to sp-type of objects is
to use the XML package.

Here is a small example:

> library(XML)
> meuse_lead.kml <- xmlTreeParse("meuse_lead.kml")
> lengthp <- length(meuse_lead.kml$doc[[1]][[1]][[1]])-1
> lead_sp <- data.frame(Longitude=rep(0,lengthp), Latitude=rep(0,lengthp), Var=rep(0,lengthp))
> for(j in 1:lengthp) {
>     LatLon <- unclass(meuse_lead.kml$doc[[1]][[1]][[1]][j+1][[1]][2][[1]][[1]][[1]])$value
>     Var <- unclass(meuse_lead.kml$doc[[1]][[1]][[1]][j+1][[1]][1][[1]][[1]])$value
>      lead_sp$Longitude[[j]] <- as.numeric(matrix(unlist(strsplit(LatLon, split=",")), ncol=2)[1])
>      lead_sp$Latitude[[j]] <- as.numeric(matrix(unlist(strsplit(LatLon, split=",")), ncol=2)[2])
>      lead_sp$Var[[j]] <- as.numeric(matrix(unlist(strsplit(strsplit(Var, split="<i>")[[1]][2],
split="</i>")), ncol=2)[1])
> }
> coordinates(lead_sp) <-~Longitude+Latitude
> proj4string(lead_sp) <- CRS("+proj=longlat +ellps=WGS84")
> bubble(lead_sp, "Var")

every KML can have a completely different structure, so you will need to modify position of
coordinates / variables where needed.

see also:
http://spatial-analyst.net/wiki/index.php?title=Export_maps_to_GE 

HTH



-----Original Message-----
From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf Of
Edzer Pebesma
Sent: Tuesday, January 06, 2009 12:16 PM
To: Henk Sierdsema
Cc: r-sig-geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] Converting kml to shape (readOGR)



Henk Sierdsema wrote:
> Hi,
>
> I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage
to read the kml-file. Can anyone help me with this? 
>   
http://www.gdal.org/ogr/ogr_formats.html mentions at KML that "read 
support needs libexpat". Further it says "KML reading is only available 
if GDAL/OGR is built with the Expat XML Parser, otherwise only KML 
writing will be supported."

Maybe this was missing while your gdal/rgdal was built?
--
Edzer
> Thnx,
>
> Henk Sierdsema
>
>
> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>
> Rijksstraatweg 178
> 6573 DG  Beek-Ubbergen
> The Netherlands
> tel: +31 (0)24 6848145
> fax: +31 (0)24 6848122
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-geo



From Henk.Sierdsema at sovon.nl  Tue Jan  6 13:44:38 2009
From: Henk.Sierdsema at sovon.nl (Henk Sierdsema)
Date: Tue, 6 Jan 2009 13:44:38 +0100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <49633D65.6070502@uni-muenster.de>
Message-ID: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB624@mail.sovon.nl>

I have installed Expat XML Parser, but how do I rebuilt GDAL/OGR?

Henk


Henk Sierdsema

SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology

Rijksstraatweg 178
6573 DG  Beek-Ubbergen
The Netherlands
tel: +31 (0)24 6848145
fax: +31 (0)24 6848122



-----Oorspronkelijk bericht-----
Van: Edzer Pebesma [mailto:edzer.pebesma at uni-muenster.de]
Verzonden: dinsdag 6 januari 2009 12:16
Aan: Henk Sierdsema
CC: r-sig-geo at stat.math.ethz.ch
Onderwerp: Re: [R-sig-Geo] Converting kml to shape (readOGR)




Henk Sierdsema wrote:
> Hi,
>
> I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage to read the kml-file. Can anyone help me with this? 
>   
http://www.gdal.org/ogr/ogr_formats.html mentions at KML that "read 
support needs libexpat". Further it says "KML reading is only available 
if GDAL/OGR is built with the Expat XML Parser, otherwise only KML 
writing will be supported."

Maybe this was missing while your gdal/rgdal was built?
--
Edzer
> Thnx,
>
> Henk Sierdsema
>
>
> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>
> Rijksstraatweg 178
> 6573 DG  Beek-Ubbergen
> The Netherlands
> tel: +31 (0)24 6848145
> fax: +31 (0)24 6848122
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From Henk.Sierdsema at sovon.nl  Tue Jan  6 13:49:24 2009
From: Henk.Sierdsema at sovon.nl (Henk Sierdsema)
Date: Tue, 6 Jan 2009 13:49:24 +0100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <49633D33.7090704@geo.uu.nl>
Message-ID: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB625@mail.sovon.nl>

Hi Paul,

Here is the requested information:

> sessionInfo()
R version 2.8.0 (2008-10-20) 
i386-pc-mingw32 

locale:
LC_COLLATE=Dutch_Netherlands.1252;LC_CTYPE=Dutch_Netherlands.1252;LC_MONETARY=Dutch_Netherlands.1252;LC_NUMERIC=C;LC_TIME=Dutch_Netherlands.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rgdal_0.5-33 sp_0.9-29   

loaded via a namespace (and not attached):
[1] grid_2.8.0      lattice_0.17-17

Codes that produces the error:
> kml <-readOGR(dsn=".",layer="Gebied2.kml")
Error in ogrInfo(dsn = dsn, layer = layer) : Cannot open layer

and the traceback:
> traceback()
3: .Call("ogrInfo", as.character(dsn), as.character(layer), PACKAGE = "rgdal")
2: ogrInfo(dsn = dsn, layer = layer)
1: readOGR(dsn = ".", layer = "Gebied2.kml")

And thnx for the remark on the list.

Henk


Henk Sierdsema

SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology

Rijksstraatweg 178
6573 DG  Beek-Ubbergen
The Netherlands
tel: +31 (0)24 6848145
fax: +31 (0)24 6848122



-----Oorspronkelijk bericht-----
Van: Paul Hiemstra [mailto:p.hiemstra at geo.uu.nl]
Verzonden: dinsdag 6 januari 2009 12:15
Aan: Henk Sierdsema
CC: r-sig-geo at stat.math.ethz.ch
Onderwerp: Re: [R-sig-Geo] Converting kml to shape (readOGR)


Hi Henk,

We need more details to be able to solve your problem. What kind of 
system are your using (sessionInfo() command)? Could you provide use 
with a piece of code that reproduces the error. What was the exact error 
and what piece of code generated the error (use traceback()).

cheers,
Paul

ps You replied to an earlier e-mail on the r-sig-geo list([R-sig-Geo] 
semivariance analysis of categorical variable). This breaks the 
threading and adds your e-mail to the thread of the above mentioned 
e-mail. Sending a new e-mail makes a fresh new thread for your problem.

Henk Sierdsema wrote:
> Hi,
>
> I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage to read the kml-file. Can anyone help me with this? 
>
> Thnx,
>
> Henk Sierdsema
>
>
> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>
> Rijksstraatweg 178
> 6573 DG  Beek-Ubbergen
> The Netherlands
> tel: +31 (0)24 6848145
> fax: +31 (0)24 6848122
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   


-- 
Drs. Paul Hiemstra
Department of Physical Geography
Faculty of Geosciences
University of Utrecht
Heidelberglaan 2
P.O. Box 80.115
3508 TC Utrecht
Phone: 	+31302535773
Fax:	+31302531145
http://intamap.geo.uu.nl/~paul



From b.rowlingson at lancaster.ac.uk  Tue Jan  6 14:01:42 2009
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Tue, 6 Jan 2009 13:01:42 +0000
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB625@mail.sovon.nl>
References: <49633D33.7090704@geo.uu.nl>
	<F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB625@mail.sovon.nl>
Message-ID: <d8ad40b50901060501n36e86134u6b4526aa52a86975@mail.gmail.com>

2009/1/6 Henk Sierdsema <Henk.Sierdsema at sovon.nl>:

> Codes that produces the error:
>> kml <-readOGR(dsn=".",layer="Gebied2.kml")
> Error in ogrInfo(dsn = dsn, layer = layer) : Cannot open layer

 I get this error, but I think it is because OGR is a bit confused...

 I created meuse.kml from the example in writeOGR, but I can't read it
back - slightly different error though:

> m=readOGR(".","meuse.kml")
Error in ogrInfo(dsn = dsn, layer = layer) : Cannot open file

 - hmm lets hit the command line to see if my ogr supports KML:

$ ogrinfo --formats| grep -i KML
  -> "KML" (read/write)

 which seems good, yet:

$ ogrinfo meuse.kml
ERROR 1: Reading KML files is not currently supported

Fun.

Barry



From edzer.pebesma at uni-muenster.de  Tue Jan  6 14:02:14 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Tue, 06 Jan 2009 14:02:14 +0100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB624@mail.sovon.nl>
References: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB624@mail.sovon.nl>
Message-ID: <49635656.4040307@uni-muenster.de>

That's a question beyond the scope of r-sig-geo, IMO; it's in the R 
documentation and/or faqs.
--
Edzer

Henk Sierdsema wrote:
> I have installed Expat XML Parser, but how do I rebuilt GDAL/OGR?
>
> Henk
>
>
> Henk Sierdsema
>
> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>
> Rijksstraatweg 178
> 6573 DG  Beek-Ubbergen
> The Netherlands
> tel: +31 (0)24 6848145
> fax: +31 (0)24 6848122
>
>
>
> -----Oorspronkelijk bericht-----
> Van: Edzer Pebesma [mailto:edzer.pebesma at uni-muenster.de]
> Verzonden: dinsdag 6 januari 2009 12:16
> Aan: Henk Sierdsema
> CC: r-sig-geo at stat.math.ethz.ch
> Onderwerp: Re: [R-sig-Geo] Converting kml to shape (readOGR)
>
>
>
>
> Henk Sierdsema wrote:
>   
>> Hi,
>>
>> I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage to read the kml-file. Can anyone help me with this? 
>>   
>>     
> http://www.gdal.org/ogr/ogr_formats.html mentions at KML that "read 
> support needs libexpat". Further it says "KML reading is only available 
> if GDAL/OGR is built with the Expat XML Parser, otherwise only KML 
> writing will be supported."
>
> Maybe this was missing while your gdal/rgdal was built?
> --
> Edzer
>   
>> Thnx,
>>
>> Henk Sierdsema
>>
>>
>> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>>
>> Rijksstraatweg 178
>> 6573 DG  Beek-Ubbergen
>> The Netherlands
>> tel: +31 (0)24 6848145
>> fax: +31 (0)24 6848122
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>   
>>     
>
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From sp8ial at gmail.com  Tue Jan  6 14:40:47 2009
From: sp8ial at gmail.com (Greg Lee)
Date: Wed, 7 Jan 2009 00:40:47 +1100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <49635656.4040307@uni-muenster.de>
References: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB624@mail.sovon.nl>
	<49635656.4040307@uni-muenster.de>
Message-ID: <54c8adaa0901060540p45ee5ad4nbeae28e9a558adc3@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090107/f2bcee73/attachment.pl>

From Henk.Sierdsema at sovon.nl  Tue Jan  6 14:43:00 2009
From: Henk.Sierdsema at sovon.nl (Henk Sierdsema)
Date: Tue, 6 Jan 2009 14:43:00 +0100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <992982.60123.qm@web27204.mail.ukl.yahoo.com>
Message-ID: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB627@mail.sovon.nl>

Hi Juliane,

I have found an Arcview3-extension that converts kml to shapes (http://arcscripts.esri.com/details.asp?dbid=14988) and that works fine. But it would like to solve the problem in the scripting-environment of R.

Henk

PS: the kml-files were made with Google Earth.

 

Henk Sierdsema

SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology

Rijksstraatweg 178
6573 DG  Beek-Ubbergen
The Netherlands
tel: +31 (0)24 6848145
fax: +31 (0)24 6848122



-----Oorspronkelijk bericht-----
Van: Juliane Struve [mailto:juliane_struve at yahoo.co.uk]
Verzonden: dinsdag 6 januari 2009 12:26
Aan: Henk Sierdsema
Onderwerp: Re: [R-sig-Geo] Converting kml to shape (readOGR)


Hi,

I know this does not answer your question directly, but have you tried converting your kml file using the Data Interoperability extension in ArcGIS ? This is supposed to be possible. I?can't activate?that extension so can't try it. But I'd be interested to know if it works. 

Also the shape2earth plugin in MapWindows apparently converts shape to kml files, but?can it convert kml to shape ??

Regards,

Juliane 


?Dr. Juliane Struve
Environmental Scientist
10, Lynwood Crescent
Sunningdale SL5 0BL
01344 620811 



----- Original Message ----
From: Henk Sierdsema <Henk.Sierdsema at sovon.nl>
To: r-sig-geo at stat.math.ethz.ch
Sent: Tuesday, 6 January, 2009 11:43:08
Subject: [R-sig-Geo] Converting kml to shape (readOGR)

Hi,

I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage to read the kml-file. Can anyone help me with this? 

Thnx,

Henk Sierdsema


SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology

Rijksstraatweg 178
6573 DG? Beek-Ubbergen
The Netherlands
tel: +31 (0)24 6848145
fax: +31 (0)24 6848122

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-geo



      



From Roger.Bivand at nhh.no  Tue Jan  6 15:39:47 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 6 Jan 2009 15:39:47 +0100 (CET)
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
In-Reply-To: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB624@mail.sovon.nl>
References: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB624@mail.sovon.nl>
Message-ID: <alpine.LRH.2.00.0901061532520.30549@reclus.nhh.no>

On Tue, 6 Jan 2009, Henk Sierdsema wrote:

> I have installed Expat XML Parser, but how do I rebuilt GDAL/OGR?

Since you are on Windows, please read:

file.show(system.file("README.windows", package="rgdal"))

One suggestion is to use ogr2ogr in the latest Windows binary FWTools 
collection for example through system() for doing this within R - see the 
GDAL site for links. Building the package yourself using FWTools may be 
useful if you need to know, if you don't, use an alternative. On 
Unix/Linux/OSX with the underlying libraries present, this would have 
worked (with the curiosity that only the KML driver is default write only, 
but returns the read/write capability even if it cannot read - the choices 
it gets are read or read/write, but no write-only.

Roger

>
> Henk
>
>
> Henk Sierdsema
>
> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>
> Rijksstraatweg 178
> 6573 DG  Beek-Ubbergen
> The Netherlands
> tel: +31 (0)24 6848145
> fax: +31 (0)24 6848122
>
>
>
> -----Oorspronkelijk bericht-----
> Van: Edzer Pebesma [mailto:edzer.pebesma at uni-muenster.de]
> Verzonden: dinsdag 6 januari 2009 12:16
> Aan: Henk Sierdsema
> CC: r-sig-geo at stat.math.ethz.ch
> Onderwerp: Re: [R-sig-Geo] Converting kml to shape (readOGR)
>
>
>
>
> Henk Sierdsema wrote:
>> Hi,
>>
>> I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage to read the kml-file. Can anyone help me with this?
>>
> http://www.gdal.org/ogr/ogr_formats.html mentions at KML that "read
> support needs libexpat". Further it says "KML reading is only available
> if GDAL/OGR is built with the Expat XML Parser, otherwise only KML
> writing will be supported."
>
> Maybe this was missing while your gdal/rgdal was built?
> --
> Edzer
>> Thnx,
>>
>> Henk Sierdsema
>>
>>
>> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>>
>> Rijksstraatweg 178
>> 6573 DG  Beek-Ubbergen
>> The Netherlands
>> tel: +31 (0)24 6848145
>> fax: +31 (0)24 6848122
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From bohara at unm.edu  Wed Jan  7 08:20:23 2009
From: bohara at unm.edu (Alok K. Bohara, PhD)
Date: Wed, 07 Jan 2009 00:20:23 -0700
Subject: [R-sig-Geo] combining two image files into one database
In-Reply-To: <D7B94F0B40246740A3EFF9DBBD921B7BB8989F@SAGE.forestry.oregonstate.edu>
References: <D7B94F0B40246740A3EFF9DBBD921B7BB8989F@SAGE.forestry.oregonstate.edu>
Message-ID: <496457B7.7050203@unm.edu>

Hi:

Let me start by saying that I am new to R.  I converted two pixel ascii 
matrices into image files:

X_im <- im(X)   # X is an ascii pixel matrix
Y_im <- im(Y)  # Y is an ascii pixel matrix

How can I combine these two images into 1) one datafile "XY_im", 2) save 
it  and 3) read it after loading (e.g., x <- XY_im$X_im. and plot it.)

I tried doing this:

XY_im <- c(X_im,Y_im)
save(XY _im, file = "XM_im.Rdata")
load("XY_im.Rdata")
x<- XY_im$X_im    # It does not like $ and says it is atomic something...
plot(x)  # of course it does not work either.

What am I doing wrong?  Any tips?

Thanks you.

Alok Bohara
 

-- 
Alok K. Bohara, Ph.D.
Professor
Department of Economics
University of New Mexico
Albuquerque, NM 87131,USA
Ph: 505-277-5903/5304(w)
Fax:505-277-9445
email: bohara at unm.edu
http://www.unm.edu/~econ/faculty/professors.html
Nepal Study Center: http://nepalstudycenter.unm.edu



From Henk.Sierdsema at sovon.nl  Wed Jan  7 10:21:12 2009
From: Henk.Sierdsema at sovon.nl (Henk Sierdsema)
Date: Wed, 7 Jan 2009 10:21:12 +0100
Subject: [R-sig-Geo] Converting kml to shape (readOGR)
References: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3FDB624@mail.sovon.nl>
	<alpine.LRH.2.00.0901061532520.30549@reclus.nhh.no>
Message-ID: <F7A3EE6B27F4D54B9CCAAB767F1B5AA3D84E08@mail.sovon.nl>

Hi,
 
Thanks for the all the information on kml's and rebuilding gdal which sets me on a new paths using stuff like VC++, source codes, etc. I started this 'excercise' because we receive more and more kml-files (from Google Earth) of observers with the outlines of plots and/or observations. But reading kml's is apparently a lot more difficult than I anticipated. That may also explain why there are hardly any scripts or programs that can deal with it. Tom Hengl suggested to use the XML-package and I will also look into that. I will let you know about the results.
 
Henk
 
Henk Sierdsema
 
SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
Rijksstraatweg 178
NL-6573 DG  Beek-Ubbergen
The Netherlands
tel: +31 (0)24 6848145
fax: +31 (0)24 6848122

 
________________________________

Van: Roger Bivand [mailto:Roger.Bivand at nhh.no]
Verzonden: di 6-1-2009 15:39
Aan: Henk Sierdsema
CC: Edzer Pebesma; r-sig-geo at stat.math.ethz.ch
Onderwerp: Re: [R-sig-Geo] Converting kml to shape (readOGR)


On Tue, 6 Jan 2009, Henk Sierdsema wrote:

> I have installed Expat XML Parser, but how do I rebuilt GDAL/OGR?

Since you are on Windows, please read:

file.show(system.file("README.windows", package="rgdal"))

One suggestion is to use ogr2ogr in the latest Windows binary FWTools
collection for example through system() for doing this within R - see the
GDAL site for links. Building the package yourself using FWTools may be
useful if you need to know, if you don't, use an alternative. On
Unix/Linux/OSX with the underlying libraries present, this would have
worked (with the curiosity that only the KML driver is default write only,
but returns the read/write capability even if it cannot read - the choices
it gets are read or read/write, but no write-only.

Roger

>
> Henk
>
>
> Henk Sierdsema
>
> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>
> Rijksstraatweg 178
> 6573 DG  Beek-Ubbergen
> The Netherlands
> tel: +31 (0)24 6848145
> fax: +31 (0)24 6848122
>
>
>
> -----Oorspronkelijk bericht-----
> Van: Edzer Pebesma [mailto:edzer.pebesma at uni-muenster.de]
> Verzonden: dinsdag 6 januari 2009 12:16
> Aan: Henk Sierdsema
> CC: r-sig-geo at stat.math.ethz.ch
> Onderwerp: Re: [R-sig-Geo] Converting kml to shape (readOGR)
>
>
>
>
> Henk Sierdsema wrote:
>> Hi,
>>
>> I've been trying to convert a vector kml-file to an ESRI shape with readOGR(), but I don't manage to read the kml-file. Can anyone help me with this?
>>
> http://www.gdal.org/ogr/ogr_formats.html mentions at KML that "read
> support needs libexpat". Further it says "KML reading is only available
> if GDAL/OGR is built with the Expat XML Parser, otherwise only KML
> writing will be supported."
>
> Maybe this was missing while your gdal/rgdal was built?
> --
> Edzer
>> Thnx,
>>
>> Henk Sierdsema
>>
>>
>> SOVON Vogelonderzoek Nederland / SOVON Dutch Centre for Field Ornithology
>>
>> Rijksstraatweg 178
>> 6573 DG  Beek-Ubbergen
>> The Netherlands
>> tel: +31 (0)24 6848145
>> fax: +31 (0)24 6848122
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
>

--
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From sp8ial at gmail.com  Wed Jan  7 10:49:38 2009
From: sp8ial at gmail.com (Greg Lee)
Date: Wed, 7 Jan 2009 20:49:38 +1100
Subject: [R-sig-Geo] combining two image files into one database
In-Reply-To: <496457B7.7050203@unm.edu>
References: <D7B94F0B40246740A3EFF9DBBD921B7BB8989F@SAGE.forestry.oregonstate.edu>
	<496457B7.7050203@unm.edu>
Message-ID: <54c8adaa0901070149q6eb9df67uddb361f1eae663dc@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090107/2db5e742/attachment.pl>

From bibiko at eva.mpg.de  Wed Jan  7 15:32:44 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Wed, 7 Jan 2009 15:32:44 +0100
Subject: [R-sig-Geo] no boundaries between countries by using
	unionSpatialPolygons
Message-ID: <DB7363DD-79BA-44FC-89AF-C73F951D994D@eva.mpg.de>

Hi,

I have a tiny problem. I'm using Roger Bivand's ( http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData 
  ) to create a plot showing two countries without boundaries. I did  
this:



library("foreign")
library("sp")
library("maptools")
library("gpclib")

load("TM_WORLD_BORDERS_SIMPL-0.2.RData")
pe_bo_data <- wrld_simpl[wrld_simpl$NAME %in% c("Bolivia","Peru"),]

lps <- coordinates(pe_bo_data)
ID <- cut(lps[,1], quantile(lps[,1]), include.lowest=TRUE)

pe_bo <- unionSpatialPolygons(pe_bo_data, ID, threshold = NULL)
plot(pe_bo)




but the plot still shows the boundary between Peru and Bolivia. I also  
tried to set a proper threshold but unfortunately no success.

What's wrong with my approach? I'd be glad for any hint!

I'm using R version 2.8.0 (2008-10-20) on Mac OSX 10.5.6 (Intel)


Thanks in advance,

--Hans



From annachiara.saguatti at gmail.com  Wed Jan  7 15:40:24 2009
From: annachiara.saguatti at gmail.com (Annachiara Saguatti)
Date: Wed, 7 Jan 2009 15:40:24 +0100
Subject: [R-sig-Geo] Wald statistics
Message-ID: <516dbff70901070640s4df5f063yc001fac8a05acd21@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090107/df6cec07/attachment.pl>

From Roger.Bivand at nhh.no  Wed Jan  7 15:47:45 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 7 Jan 2009 15:47:45 +0100 (CET)
Subject: [R-sig-Geo] no boundaries between countries by using
 unionSpatialPolygons
In-Reply-To: <DB7363DD-79BA-44FC-89AF-C73F951D994D@eva.mpg.de>
References: <DB7363DD-79BA-44FC-89AF-C73F951D994D@eva.mpg.de>
Message-ID: <alpine.LRH.2.00.0901071543250.3618@reclus.nhh.no>

On Wed, 7 Jan 2009, Hans-J?rg Bibiko wrote:

> Hi,
>
> I have a tiny problem. I'm using Roger Bivand's ( 
> http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData ) to create a 
> plot showing two countries without boundaries. I did this:
>
>
>
> library("foreign")
> library("sp")
> library("maptools")
> library("gpclib")
>
> load("TM_WORLD_BORDERS_SIMPL-0.2.RData")
> pe_bo_data <- wrld_simpl[wrld_simpl$NAME %in% c("Bolivia","Peru"),]
>
> lps <- coordinates(pe_bo_data)
> ID <- cut(lps[,1], quantile(lps[,1]), include.lowest=TRUE)
>
> pe_bo <- unionSpatialPolygons(pe_bo_data, ID, threshold = NULL)
> plot(pe_bo)
>

Excellent question - easy to reproduce!

Your ID has two unique values:

> ID
[1] (-67.1,-64.6] [-74.4,-71.9]
Levels: [-74.4,-71.9] (-71.9,-69.5] (-69.5,-67.1] (-67.1,-64.6]

with two country polygons:

> length(slot(pe_bo_data, "polygons"))
[1] 2

so you get two output polygons. If you do:

ID2 <- rep("pe_bo", length(slot(pe_bo_data, "polygons")))
pe_bo <- unionSpatialPolygons(pe_bo_data, ID2)

gives one output polygon:

> length(slot(pe_bo, "polygons"))
[1] 1

and no boundary.

Roger

>
>
>
> but the plot still shows the boundary between Peru and Bolivia. I also tried 
> to set a proper threshold but unfortunately no success.
>
> What's wrong with my approach? I'd be glad for any hint!
>
> I'm using R version 2.8.0 (2008-10-20) on Mac OSX 10.5.6 (Intel)
>
>
> Thanks in advance,
>
> --Hans
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no

From Roger.Bivand at nhh.no  Wed Jan  7 15:56:27 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 7 Jan 2009 15:56:27 +0100 (CET)
Subject: [R-sig-Geo] Wald statistics
In-Reply-To: <516dbff70901070640s4df5f063yc001fac8a05acd21@mail.gmail.com>
References: <516dbff70901070640s4df5f063yc001fac8a05acd21@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901071548040.3618@reclus.nhh.no>

On Wed, 7 Jan 2009, Annachiara Saguatti wrote:

> Hi,
>
> I'd need some information about the Wald statistics which is displayed in
> the summaries of the lagsarlm and errorsarlm regressions.
> Can anyone explain me which the null hypothesis is?

?Wald1.sarlm explains - the test reports the values for the absence of 
spatial dependence in spatial lag or error models. You'll note that the 
Wald test as a p-value that is equal to that of the asymptotic test on the 
spatial coefficient on the previous line, which isn't suprising, since 
both use the fitted coefficient and its asymptotic standard error, but 
look up different ratios of these wrt. different distributions.

Roger

> Thank you very much.
>
> Best regards,
> Annachiara Saguatti
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From bibiko at eva.mpg.de  Wed Jan  7 16:00:44 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Wed, 7 Jan 2009 16:00:44 +0100
Subject: [R-sig-Geo] no boundaries between countries by using
	unionSpatialPolygons
In-Reply-To: <alpine.LRH.2.00.0901071543250.3618@reclus.nhh.no>
References: <DB7363DD-79BA-44FC-89AF-C73F951D994D@eva.mpg.de>
	<alpine.LRH.2.00.0901071543250.3618@reclus.nhh.no>
Message-ID: <607D8CC3-CF57-4D09-BEAD-A06F15CB3B2D@eva.mpg.de>

On 07.01.2009, at 15:47, Roger Bivand wrote:
> Your ID has two unique values:
>> ID
> [1] (-67.1,-64.6] [-74.4,-71.9]
> Levels: [-74.4,-71.9] (-71.9,-69.5] (-69.5,-67.1] (-67.1,-64.6]

> with two country polygons:
>
>> length(slot(pe_bo_data, "polygons"))
> [1] 2
>
> so you get two output polygons. If you do:
>
> ID2 <- rep("pe_bo", length(slot(pe_bo_data, "polygons")))
> pe_bo <- unionSpatialPolygons(pe_bo_data, ID2)
>
> gives one output polygon:
>
>> length(slot(pe_bo, "polygons"))
> [1] 1
>
> and no boundary.

thank you so much for the prompt clarification!

Now I see, unionSpatialPolygons creates as many polygons as the number  
of unique IDs. You saved my day :)

Kind regards,

--Hans


**********************************************************
Hans-Joerg Bibiko
Max Planck Institute for Evolutionary Anthropology
Department of Linguistics
Deutscher Platz 6     phone:   +49 (0) 341 3550 341
D-04103 Leipzig       fax:     +49 (0) 341 3550 333
Germany               e-mail:  bibiko at eva.mpg.de



From bohara at unm.edu  Wed Jan  7 16:20:35 2009
From: bohara at unm.edu (Alok K. Bohara, PhD)
Date: Wed, 07 Jan 2009 08:20:35 -0700
Subject: [R-sig-Geo] combining two image files into one database
In-Reply-To: <54c8adaa0901070149q6eb9df67uddb361f1eae663dc@mail.gmail.com>
References: <D7B94F0B40246740A3EFF9DBBD921B7BB8989F@SAGE.forestry.oregonstate.edu>	
	<496457B7.7050203@unm.edu>
	<54c8adaa0901070149q6eb9df67uddb361f1eae663dc@mail.gmail.com>
Message-ID: <4964C843.5080905@unm.edu>

Thanks Greg for your response:

I want to do what the examples in Spatstat do with regard to the point  
and pixel/image data bei and bei.extra.. (bei.extra contains a list of 
two image files --elevation and gradient.  They plot these two items 
(and also take log, I believe)

In my case:

X_image 
Y_image

(I converted  both from text matrix to pixel/image using  "im(...)" command)

I want to combine (or list) X_image and Y.image as a part of a single 
file -- XY_image, and save and do the following

load("XY.image")

plot(XY_image)    # plot both images side by side
plot(XY_image$X_image)   # plot just the X_image
etc...

Thank you for your help.

#########

I tried doing the list command:
XY_image <-list(X_image,Y_image)

but it returns NULL when I do  "XY$X_image"

Sincerely,
Alok Bohara





Greg Lee wrote:
> Hello Alok,
>  
> We really need more details about what you are trying to acheive in 
> order to help you.
>  
> c(X, Y) concatenates the objects X and Y. The result will be a vector. 
> If X and Y happen to be m x n matrices, the result will be a vector of 
> length 2 * m * n: probably not what you want.
>  
> You can see this for yourself. Eg:
>  
> X <- matrix(1, 3, 3)
> Y <- matrix(2, 3, 3)
> c(X, Y)
>
> If you were hoping to combine the information in corresponding pixels 
> of the matrices X and Y, you will need to have a clear idea of *how* 
> you would like the information to be combined. ie: Are you looking for 
> the mean value of the pixels, or is some other operation required?
>  
> Eg 2:
>  
> X <- matrix(1:9, 3, 3)
> Y <- matrix(2, 3, 3)
> X + Y / 2 
>  
> Hope that helps. 
>  
> Greg 
>  
>  
> 2009/1/7 Alok K. Bohara, PhD <bohara at unm.edu <mailto:bohara at unm.edu>>
>
>     Hi:
>
>     Let me start by saying that I am new to R.  I converted two pixel
>     ascii matrices into image files:
>
>     X_im <- im(X)   # X is an ascii pixel matrix
>     Y_im <- im(Y)  # Y is an ascii pixel matrix
>
>     How can I combine these two images into 1) one datafile "XY_im",
>     2) save it  and 3) read it after loading (e.g., x <- XY_im$X_im.
>     and plot it.)
>
>     I tried doing this:
>
>     XY_im <- c(X_im,Y_im)
>     save(XY _im, file = "XM_im.Rdata")
>     load("XY_im.Rdata")
>     x<- XY_im$X_im    # It does not like $ and says it is atomic
>     something...
>     plot(x)  # of course it does not work either.
>
>     What am I doing wrong?  Any tips?
>
>     Thanks you.
>
>     Alok Bohara
>
>
>     -- 
>     Alok K. Bohara, Ph.D.
>     Professor
>     Department of Economics
>     University of New Mexico
>     Albuquerque, NM 87131,USA
>     Ph: 505-277-5903/5304(w)
>     Fax:505-277-9445
>     email: bohara at unm.edu <mailto:bohara at unm.edu>
>     http://www.unm.edu/~econ/faculty/professors.html
>     <http://www.unm.edu/%7Eecon/faculty/professors.html>
>     Nepal Study Center: http://nepalstudycenter.unm.edu
>     <http://nepalstudycenter.unm.edu/>
>
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at stat.math.ethz.ch <mailto:R-sig-Geo at stat.math.ethz.ch>
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>


-- 
Alok K. Bohara, Ph.D.
Professor
Department of Economics
University of New Mexico
Albuquerque, NM 87131,USA
Ph: 505-277-5903/5304(w)
Fax:505-277-9445
email: bohara at unm.edu
http://www.unm.edu/~econ/faculty/professors.html
Nepal Study Center: http://nepalstudycenter.unm.edu



From T.Hengl at uva.nl  Wed Jan  7 17:10:16 2009
From: T.Hengl at uva.nl (Tomislav Hengl)
Date: Wed, 7 Jan 2009 17:10:16 +0100
Subject: [R-sig-Geo] combining two image files into one database
In-Reply-To: <4964C843.5080905@unm.edu>
References: <D7B94F0B40246740A3EFF9DBBD921B7BB8989F@SAGE.forestry.oregonstate.edu>	<496457B7.7050203@unm.edu><54c8adaa0901070149q6eb9df67uddb361f1eae663dc@mail.gmail.com>
	<4964C843.5080905@unm.edu>
Message-ID: <FB82092E9C1B43DFA0B485CE4BA959DC@pcibed193>


Dear Alok,

Maybe you should consider converting the im data to sp class. Then, you have as many grids in a
single SpatialGridDataFrame e.g.:

> library(maptools)
> library(rgdal)
> grids <- as(bei.extra[[1]], "SpatialGridDataFrame")
> names(grids)[1] <- "elev"
> grids$grad <- as(bei.extra[[2]], "SpatialGridDataFrame")$v
> spplot(grids["elev"])
...
> grids$achan <- readGDAL("achan.asc")$band1
> save(grids, "grids.image")

see also: http://spatial-analyst.net/wiki/index.php?title=Species_Distribution_Modelling 

HTH,

T. Hengl


> -----Original Message-----
> From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf
> Of Alok K. Bohara, PhD
> Sent: Wednesday, January 07, 2009 4:21 PM
> To: Greg Lee
> Cc: r-sig-geo at stat.math.ethz.ch
> Subject: Re: [R-sig-Geo] combining two image files into one database
> 
> Thanks Greg for your response:
> 
> I want to do what the examples in Spatstat do with regard to the point
> and pixel/image data bei and bei.extra.. (bei.extra contains a list of
> two image files --elevation and gradient.  They plot these two items
> (and also take log, I believe)
> 
> In my case:
> 
> X_image
> Y_image
> 
> (I converted  both from text matrix to pixel/image using  "im(...)" command)
> 
> I want to combine (or list) X_image and Y.image as a part of a single
> file -- XY_image, and save and do the following
> 
> load("XY.image")
> 
> plot(XY_image)    # plot both images side by side
> plot(XY_image$X_image)   # plot just the X_image
> etc...
> 
> Thank you for your help.
> 
> #########
> 
> I tried doing the list command:
> XY_image <-list(X_image,Y_image)
> 
> but it returns NULL when I do  "XY$X_image"
> 
> Sincerely,
> Alok Bohara
> 
> 
> 
> 
> 
> Greg Lee wrote:
> > Hello Alok,
> >
> > We really need more details about what you are trying to acheive in
> > order to help you.
> >
> > c(X, Y) concatenates the objects X and Y. The result will be a vector.
> > If X and Y happen to be m x n matrices, the result will be a vector of
> > length 2 * m * n: probably not what you want.
> >
> > You can see this for yourself. Eg:
> >
> > X <- matrix(1, 3, 3)
> > Y <- matrix(2, 3, 3)
> > c(X, Y)
> >
> > If you were hoping to combine the information in corresponding pixels
> > of the matrices X and Y, you will need to have a clear idea of *how*
> > you would like the information to be combined. ie: Are you looking for
> > the mean value of the pixels, or is some other operation required?
> >
> > Eg 2:
> >
> > X <- matrix(1:9, 3, 3)
> > Y <- matrix(2, 3, 3)
> > X + Y / 2
> >
> > Hope that helps.
> >
> > Greg
> >
> >
> > 2009/1/7 Alok K. Bohara, PhD <bohara at unm.edu <mailto:bohara at unm.edu>>
> >
> >     Hi:
> >
> >     Let me start by saying that I am new to R.  I converted two pixel
> >     ascii matrices into image files:
> >
> >     X_im <- im(X)   # X is an ascii pixel matrix
> >     Y_im <- im(Y)  # Y is an ascii pixel matrix
> >
> >     How can I combine these two images into 1) one datafile "XY_im",
> >     2) save it  and 3) read it after loading (e.g., x <- XY_im$X_im.
> >     and plot it.)
> >
> >     I tried doing this:
> >
> >     XY_im <- c(X_im,Y_im)
> >     save(XY _im, file = "XM_im.Rdata")
> >     load("XY_im.Rdata")
> >     x<- XY_im$X_im    # It does not like $ and says it is atomic
> >     something...
> >     plot(x)  # of course it does not work either.
> >
> >     What am I doing wrong?  Any tips?
> >
> >     Thanks you.
> >
> >     Alok Bohara
> >
> >
> >     --
> >     Alok K. Bohara, Ph.D.
> >     Professor
> >     Department of Economics
> >     University of New Mexico
> >     Albuquerque, NM 87131,USA
> >     Ph: 505-277-5903/5304(w)
> >     Fax:505-277-9445
> >     email: bohara at unm.edu <mailto:bohara at unm.edu>
> >     http://www.unm.edu/~econ/faculty/professors.html
> >     <http://www.unm.edu/%7Eecon/faculty/professors.html>
> >     Nepal Study Center: http://nepalstudycenter.unm.edu
> >     <http://nepalstudycenter.unm.edu/>
> >
> >     _______________________________________________
> >     R-sig-Geo mailing list
> >     R-sig-Geo at stat.math.ethz.ch <mailto:R-sig-Geo at stat.math.ethz.ch>
> >     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
> >
> 
> 
> --
> Alok K. Bohara, Ph.D.
> Professor
> Department of Economics
> University of New Mexico
> Albuquerque, NM 87131,USA
> Ph: 505-277-5903/5304(w)
> Fax:505-277-9445
> email: bohara at unm.edu
> http://www.unm.edu/~econ/faculty/professors.html
> Nepal Study Center: http://nepalstudycenter.unm.edu
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo



From bibiko at eva.mpg.de  Thu Jan  8 10:07:28 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Thu, 8 Jan 2009 10:07:28 +0100
Subject: [R-sig-Geo] seamless maps
Message-ID: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>

Hi,

I wonder if there's a workaround to generate seamless maps based on  
SpatialPolygons objects. E.g. to produce a map showing Australia at  
the left edge and America at the right one ( xlim := min: 110?E , max:  
30?W ).
Or the way around, is there a function to re-center a given map by  
defining the median longitude? (I know the function 'recenter' which  
produce a map from 0? to 360?)

Kind regards,

--Hans


From moliver at udel.edu  Thu Jan  8 14:23:19 2009
From: moliver at udel.edu (Matt Oliver)
Date: Thu, 8 Jan 2009 08:23:19 -0500
Subject: [R-sig-Geo] seamless maps
In-Reply-To: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>
References: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>
Message-ID: <6d4aad460901080523o73f0955fx6d63bf1a420d0b4f@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090108/45fa036d/attachment.pl>

From Roger.Bivand at nhh.no  Thu Jan  8 14:27:24 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 8 Jan 2009 14:27:24 +0100 (CET)
Subject: [R-sig-Geo] seamless maps
In-Reply-To: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>
References: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>
Message-ID: <alpine.LRH.2.00.0901081416240.7928@reclus.nhh.no>

On Thu, 8 Jan 2009, Hans-J?rg Bibiko wrote:

> Hi,
>
> I wonder if there's a workaround to generate seamless maps based on 
> SpatialPolygons objects. E.g. to produce a map showing Australia at the left 
> edge and America at the right one ( xlim := min: 110?E , max: 30?W ).
> Or the way around, is there a function to re-center a given map by defining 
> the median longitude? (I know the function 'recenter' which produce a map 
> from 0? to 360?)

Not without recentering, I think. As you've probably found out:

library(maptools)
load(url("http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData"))
rc <- recenter(world_simp)

gives nasty artefacts where polygons cross the Prime Meridian, so subsets 
of countries crossing 180? and west of but not crossing the Prime Meridian 
need to be recentered, and added back into the object. That is a good deal 
of work. Do you need the country polygons, or can you manage with just the 
shoreline (as polygons):

gshhs.c.b <- system.file("share/gshhs_c.b", package="maptools")
Px <- c(110, 330)
Py <- c(-62, 90)
P <- Rgshhs(gshhs.c.b, xlim=Px, ylim=Py, level=1)
plot(P$SP)

A coarse borders file is also available, but only as lines, and varies in 
levels of detail between countries see ?Rgshhs.

If you do need the country polygons, we'd need to list the blocks 
of polygons needing recentering. The maps package also has Pacific view 
databases for shorelines and some borders.

Hope this helps,

Roger

>
> Kind regards,
>
> --Hans
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no

From bibiko at eva.mpg.de  Thu Jan  8 14:59:02 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Thu, 8 Jan 2009 14:59:02 +0100
Subject: [R-sig-Geo] seamless maps
In-Reply-To: <alpine.LRH.2.00.0901081416240.7928@reclus.nhh.no>
References: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>
	<alpine.LRH.2.00.0901081416240.7928@reclus.nhh.no>
Message-ID: <4F881DF7-CA0B-4485-A986-FB2BD03E298C@eva.mpg.de>


On 08.01.2009, at 14:27, Roger Bivand wrote:

> On Thu, 8 Jan 2009, Hans-J?rg Bibiko wrote:
>
>> Hi,
>>
>> I wonder if there's a workaround to generate seamless maps based on  
>> SpatialPolygons objects. E.g. to produce a map showing Australia at  
>> the left edge and America at the right one ( xlim := min: 110?E ,  
>> max: 30?W ).
>> Or the way around, is there a function to re-center a given map by  
>> defining the median longitude? (I know the function 'recenter'  
>> which produce a map from 0? to 360?)


Dear Roger and Matt,

many thanks for the hints. I'll have a look at these.


Best,

--Hans

**********************************************************
Hans-Joerg Bibiko
Max Planck Institute for Evolutionary Anthropology
Department of Linguistics
Deutscher Platz 6     phone:   +49 (0) 341 3550 341
D-04103 Leipzig       fax:     +49 (0) 341 3550 333
Germany               e-mail:  bibiko at eva.mpg.de



From Roger.Bivand at nhh.no  Thu Jan  8 15:05:41 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 8 Jan 2009 15:05:41 +0100 (CET)
Subject: [R-sig-Geo] seamless maps
In-Reply-To: <6d4aad460901080523o73f0955fx6d63bf1a420d0b4f@mail.gmail.com>
References: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>
	<6d4aad460901080523o73f0955fx6d63bf1a420d0b4f@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901081428010.7928@reclus.nhh.no>

On Thu, 8 Jan 2009, Matt Oliver wrote:

> Hans,
>
> Take a look at the proj4 package, specifically project()

Or rather rgdal, which is a fully featured implementation with a proper 
interface to the PROJ.4 library. Unfortunately, there does not seem to be 
a way of shifting the prime meridian in a helpful way - and the original 
question was not about projection, but about joining +180 to -180, which 
is obvious in spherical but not in planar terms. rgdal provides methods 
for projection and datum transformation for objects defined in the sp 
package, as well as for projection of matrices of coordinates.

Roger

PS:

This gives something, but at the cost of meaningless coordinates and 
artefacts for Greenland and Iceland, which could be subsetted out:

wrld_simpl_nA <- wrld_simpl[wrld_simpl$NAME != "Antarctica",]
library(rgdal)
wrld_simpl_nA_22k <- spTransform(wrld_simpl_nA,
   CRS("+proj=merc +datum=WGS84 +x_0=22000000"))
proj4string(wrld_simpl_nA_22k) <- CRS("+proj=merc +datum=WGS84")
wrld_simpl_nA_22k_ll <- spTransform(wrld_simpl_nA_22k,
   CRS("+proj=longlat"))
plot(wrld_simpl_nA_22k_ll, axes=TRUE)

The alternative is as given before - dividing the polygons into ones to be 
recentered and ones to be left as is.

>
> see http://trac.osgeo.org/proj/
>
> There are many projections that allow you to recenter a map on a specific
> longitude
>
> For example
>
>
> x <- seq(-180, 180)
> y <- seq(-90, 90)
>
> xy <- expand.grid(x, y)
>
> plot(xy)
>
> mer <- cbind(0, y)  #prime meridian
> points(mer[,1], mer[,2], col = "white")
>
>
> proj.xy <- project(xy, "+proj=eck4") ###project grid into eckert IV
> proj.mer <- project(mer, "+proj=eck4") ###project meridian into eckert IV
>
> plot(proj.xy)
> points(proj.mer[,1], proj.mer[,2], col = "white")
>
>
> proj.xy <- project(xy, "+proj=eck4 +lon_0=90W") ###project grid into eckert
> IV with central meridian at 90W
> proj.mer <- project(mer, "+proj=eck4 +lon_0=90W") ###project meridian into
> eckert IV with central meridian at 90W
>
>
> plot(proj.xy)
> points(proj.mer[,1], proj.mer[,2], col = "white")
>
>
>
> On Thu, Jan 8, 2009 at 4:07 AM, Hans-J?rg Bibiko <bibiko at eva.mpg.de> wrote:
>
>> Hi,
>>
>> I wonder if there's a workaround to generate seamless maps based on
>> SpatialPolygons objects. E.g. to produce a map showing Australia at the left
>> edge and America at the right one ( xlim := min: 110?E , max: 30?W ).
>> Or the way around, is there a function to re-center a given map by defining
>> the median longitude? (I know the function 'recenter' which produce a map
>> from 0? to 360?)
>>
>> Kind regards,
>>
>> --Hans
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
>
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Roger.Bivand at nhh.no  Thu Jan  8 15:22:57 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 8 Jan 2009 15:22:57 +0100 (CET)
Subject: [R-sig-Geo] seamless maps
In-Reply-To: <4F881DF7-CA0B-4485-A986-FB2BD03E298C@eva.mpg.de>
References: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>
	<alpine.LRH.2.00.0901081416240.7928@reclus.nhh.no>
	<4F881DF7-CA0B-4485-A986-FB2BD03E298C@eva.mpg.de>
Message-ID: <alpine.LRH.2.00.0901081520410.7928@reclus.nhh.no>

On Thu, 8 Jan 2009, Hans-J?rg Bibiko wrote:

>
> On 08.01.2009, at 14:27, Roger Bivand wrote:
>
>> On Thu, 8 Jan 2009, Hans-J?rg Bibiko wrote:
>> 
>>> Hi,
>>> 
>>> I wonder if there's a workaround to generate seamless maps based on 
>>> SpatialPolygons objects. E.g. to produce a map showing Australia at the 
>>> left edge and America at the right one ( xlim := min: 110?E , max: 30?W ).
>>> Or the way around, is there a function to re-center a given map by 
>>> defining the median longitude? (I know the function 'recenter' which 
>>> produce a map from 0? to 360?)
>
>
> Dear Roger and Matt,
>
> many thanks for the hints. I'll have a look at these.
>

A further idea if you don't need the polygons is:

wrld_simpl_SL <- as(as(wrld_simpl, "SpatialPolygons"), "SpatialLines")
wrld_simpl_SL_0_360 <- recenter(nowrapSpatialLines(wrld_simpl_SL))
plot(wrld_simpl_SL_0_360, axes=TRUE, xlim=c(110, 330), ylim=c(-80, 80))

which keeps the correct coordinates but at the cost of losing the polygons 
and a couple of artefact lines at 180?.

Roger

>
> Best,
>
> --Hans
>
> **********************************************************
> Hans-Joerg Bibiko
> Max Planck Institute for Evolutionary Anthropology
> Department of Linguistics
> Deutscher Platz 6     phone:   +49 (0) 341 3550 341
> D-04103 Leipzig       fax:     +49 (0) 341 3550 333
> Germany               e-mail:  bibiko at eva.mpg.de
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no

From bibiko at eva.mpg.de  Thu Jan  8 15:29:10 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Thu, 8 Jan 2009 15:29:10 +0100
Subject: [R-sig-Geo] seamless maps
In-Reply-To: <alpine.LRH.2.00.0901081428010.7928@reclus.nhh.no>
References: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>
	<6d4aad460901080523o73f0955fx6d63bf1a420d0b4f@mail.gmail.com>
	<alpine.LRH.2.00.0901081428010.7928@reclus.nhh.no>
Message-ID: <DCE876F4-50BE-43B0-8007-DC685DC228C3@eva.mpg.de>


On 08.01.2009, at 15:05, Roger Bivand wrote:

> On Thu, 8 Jan 2009, Matt Oliver wrote:
>
>> Hans,
>>
>> Take a look at the proj4 package, specifically project()
>
> Or rather rgdal, which is a fully featured implementation with a  
> proper interface to the PROJ.4 library. Unfortunately, there does  
> not seem to be a way of shifting the prime meridian in a helpful way  
> - and the original question was not about projection, but about  
> joining +180 to -180, which is obvious in spherical but not in  
> planar terms. rgdal provides methods for projection and datum  
> transformation for objects defined in the sp package, as well as for  
> projection of matrices of coordinates.

Thanks! I'm just playing with it.
Actually I do need the polygons as well.

A VERY quick&dirty&crude solution would be to pack the wrld_simpl  
polygons three times in a new SpatialPolygons object:

-the original one from -180 to 180
-a transformed one from 180 to 540
-a transformed one from -540 to -180

then by specifying xlim only one should be able to center the map for  
any longitude (to get only that clipping).
But I know it's a crude approach and then if one wants to put  
additional points/lines/etc. on it one has to treble them as well.

But anyway, thanks so much for the hints. If I found a way I'll post it.

--Hans

**********************************************************
Hans-Joerg Bibiko
Max Planck Institute for Evolutionary Anthropology
Department of Linguistics
Deutscher Platz 6     phone:   +49 (0) 341 3550 341
D-04103 Leipzig       fax:     +49 (0) 341 3550 333
Germany               e-mail:  bibiko at eva.mpg.de



From bohara at unm.edu  Thu Jan  8 16:43:22 2009
From: bohara at unm.edu (Alok K Bohara, PhD)
Date: Thu, 08 Jan 2009 08:43:22 -0700
Subject: [R-sig-Geo] combining two image files into one database
In-Reply-To: <FB82092E9C1B43DFA0B485CE4BA959DC@pcibed193>
References: <D7B94F0B40246740A3EFF9DBBD921B7BB8989F@SAGE.forestry.oregonstate.edu>	<496457B7.7050203@unm.edu><54c8adaa0901070149q6eb9df67uddb361f1eae663dc@mail.gmail.com>	<4964C843.5080905@unm.edu>
	<FB82092E9C1B43DFA0B485CE4BA959DC@pcibed193>
Message-ID: <49661F1A.7070309@unm.edu>

Hi Tomislav:

I tried what you suggested, and it works for the first part with the 
built-in data example "bei.extra". (By the way, my script could not find 
achan.asc file????)

Anyway, for me, I actually wanted to build the bei.extra type file 
itself which contains a list of pixel images "elev"  and "grad". 

To replicate this, I took X_im and Y_im (two pixel image files)

X_im <- im(....)
Y_im <- im(...)

Now, I want to create/save  a file "XY.extra" that contains a list of 
two pixel images X_im and Y_im.

Thanks.

Alok





Tomislav Hengl wrote:
> Dear Alok,
>
> Maybe you should consider converting the im data to sp class. Then, you have as many grids in a
> single SpatialGridDataFrame e.g.:
>
>   
>> library(maptools)
>> library(rgdal)
>> grids <- as(bei.extra[[1]], "SpatialGridDataFrame")
>> names(grids)[1] <- "elev"
>> grids$grad <- as(bei.extra[[2]], "SpatialGridDataFrame")$v
>> spplot(grids["elev"])
>>     
> ...
>   
>> grids$achan <- readGDAL("achan.asc")$band1
>> save(grids, "grids.image")
>>     
>
> see also: http://spatial-analyst.net/wiki/index.php?title=Species_Distribution_Modelling 
>
> HTH,
>
> T. Hengl
>
>
>   
>> -----Original Message-----
>> From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf
>> Of Alok K. Bohara, PhD
>> Sent: Wednesday, January 07, 2009 4:21 PM
>> To: Greg Lee
>> Cc: r-sig-geo at stat.math.ethz.ch
>> Subject: Re: [R-sig-Geo] combining two image files into one database
>>
>> Thanks Greg for your response:
>>
>> I want to do what the examples in Spatstat do with regard to the point
>> and pixel/image data bei and bei.extra.. (bei.extra contains a list of
>> two image files --elevation and gradient.  They plot these two items
>> (and also take log, I believe)
>>
>> In my case:
>>
>> X_image
>> Y_image
>>
>> (I converted  both from text matrix to pixel/image using  "im(...)" command)
>>
>> I want to combine (or list) X_image and Y.image as a part of a single
>> file -- XY_image, and save and do the following
>>
>> load("XY.image")
>>
>> plot(XY_image)    # plot both images side by side
>> plot(XY_image$X_image)   # plot just the X_image
>> etc...
>>
>> Thank you for your help.
>>
>> #########
>>
>> I tried doing the list command:
>> XY_image <-list(X_image,Y_image)
>>
>> but it returns NULL when I do  "XY$X_image"
>>
>> Sincerely,
>> Alok Bohara
>>
>>
>>
>>
>>
>> Greg Lee wrote:
>>     
>>> Hello Alok,
>>>
>>> We really need more details about what you are trying to acheive in
>>> order to help you.
>>>
>>> c(X, Y) concatenates the objects X and Y. The result will be a vector.
>>> If X and Y happen to be m x n matrices, the result will be a vector of
>>> length 2 * m * n: probably not what you want.
>>>
>>> You can see this for yourself. Eg:
>>>
>>> X <- matrix(1, 3, 3)
>>> Y <- matrix(2, 3, 3)
>>> c(X, Y)
>>>
>>> If you were hoping to combine the information in corresponding pixels
>>> of the matrices X and Y, you will need to have a clear idea of *how*
>>> you would like the information to be combined. ie: Are you looking for
>>> the mean value of the pixels, or is some other operation required?
>>>
>>> Eg 2:
>>>
>>> X <- matrix(1:9, 3, 3)
>>> Y <- matrix(2, 3, 3)
>>> X + Y / 2
>>>
>>> Hope that helps.
>>>
>>> Greg
>>>
>>>
>>> 2009/1/7 Alok K. Bohara, PhD <bohara at unm.edu <mailto:bohara at unm.edu>>
>>>
>>>     Hi:
>>>
>>>     Let me start by saying that I am new to R.  I converted two pixel
>>>     ascii matrices into image files:
>>>
>>>     X_im <- im(X)   # X is an ascii pixel matrix
>>>     Y_im <- im(Y)  # Y is an ascii pixel matrix
>>>
>>>     How can I combine these two images into 1) one datafile "XY_im",
>>>     2) save it  and 3) read it after loading (e.g., x <- XY_im$X_im.
>>>     and plot it.)
>>>
>>>     I tried doing this:
>>>
>>>     XY_im <- c(X_im,Y_im)
>>>     save(XY _im, file = "XM_im.Rdata")
>>>     load("XY_im.Rdata")
>>>     x<- XY_im$X_im    # It does not like $ and says it is atomic
>>>     something...
>>>     plot(x)  # of course it does not work either.
>>>
>>>     What am I doing wrong?  Any tips?
>>>
>>>     Thanks you.
>>>
>>>     Alok Bohara
>>>
>>>
>>>     --
>>>     Alok K. Bohara, Ph.D.
>>>     Professor
>>>     Department of Economics
>>>     University of New Mexico
>>>     Albuquerque, NM 87131,USA
>>>     Ph: 505-277-5903/5304(w)
>>>     Fax:505-277-9445
>>>     email: bohara at unm.edu <mailto:bohara at unm.edu>
>>>     http://www.unm.edu/~econ/faculty/professors.html
>>>     <http://www.unm.edu/%7Eecon/faculty/professors.html>
>>>     Nepal Study Center: http://nepalstudycenter.unm.edu
>>>     <http://nepalstudycenter.unm.edu/>
>>>
>>>     _______________________________________________
>>>     R-sig-Geo mailing list
>>>     R-sig-Geo at stat.math.ethz.ch <mailto:R-sig-Geo at stat.math.ethz.ch>
>>>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>>
>>>       
>> --
>> Alok K. Bohara, Ph.D.
>> Professor
>> Department of Economics
>> University of New Mexico
>> Albuquerque, NM 87131,USA
>> Ph: 505-277-5903/5304(w)
>> Fax:505-277-9445
>> email: bohara at unm.edu
>> http://www.unm.edu/~econ/faculty/professors.html
>> Nepal Study Center: http://nepalstudycenter.unm.edu
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>     
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   


-- 
Alok K. Bohara, Ph.D.
Professor
Department of Economics
MSC 05 3060
1 University of New Mexico
Albuquerque, NM 87131-0001, USA
Ph: 505-277-5903/5304(w)
Fax:505-277-9445
email: bohara at unm.edu
http://www.unm.edu/~econ/faculty/professors.html
Nepal Study Center: http://nepalstudycenter.unm.edu



From bohara at unm.edu  Thu Jan  8 17:50:54 2009
From: bohara at unm.edu (Alok K Bohara, PhD)
Date: Thu, 08 Jan 2009 09:50:54 -0700
Subject: [R-sig-Geo] R in The New York Times
In-Reply-To: <FB82092E9C1B43DFA0B485CE4BA959DC@pcibed193>
References: <D7B94F0B40246740A3EFF9DBBD921B7BB8989F@SAGE.forestry.oregonstate.edu>	<496457B7.7050203@unm.edu><54c8adaa0901070149q6eb9df67uddb361f1eae663dc@mail.gmail.com>	<4964C843.5080905@unm.edu>
	<FB82092E9C1B43DFA0B485CE4BA959DC@pcibed193>
Message-ID: <49662EEE.1060706@unm.edu>

In case if you have not seen this:

Data Analysts Captivated by R?s Power
http://www.nytimes.com/2009/01/07/technology/business-computing/07program.html?em

Best,
Alok Bohara

-- 
Alok K. Bohara, Ph.D.
Professor
Department of Economics
MSC 05 3060
1 University of New Mexico
Albuquerque, NM 87131-0001, USA
Ph: 505-277-5903/5304(w)
Fax:505-277-9445
email: bohara at unm.edu
http://www.unm.edu/~econ/faculty/professors.html
Nepal Study Center: http://nepalstudycenter.unm.edu



From COREY.SPARKS at UTSA.EDU  Thu Jan  8 20:04:31 2009
From: COREY.SPARKS at UTSA.EDU (Corey Sparks)
Date: Thu, 8 Jan 2009 13:04:31 -0600
Subject: [R-sig-Geo] Help with anti-clockwise polygon in owin
Message-ID: <90BAF15D-856D-405F-9336-7E0B33C8CBE5@UTSA.EDU>

Dear list,
I have a point pattern that consists of  wells on an island.  I am  
interested doing some exploratory point pattern analysis on this data  
(such as Gest in spatstat).  The island as you can imagine is an  
irregular polygon defined by 1815 points.  When I try to create the  
observation window for the point pattern in spatstat using

owin(x=range(westcoords$X), y=range(westcoords$Y),  
poly=list(x=westcoords$X, y=westcoords$Y))
where westcoords are the coordinated of the polygon
I get:
Error in owin(x = range(westcoords$X), y = range(westcoords$Y), poly =  
list(x = westcoords$X,  :
   Area of polygon is negative - maybe traversed in wrong direction?

Since the origin of the coordinates is a shapefile I created myself,  
how can I get around this "traversed in the wrong direction" problem?   
I can make the data this is based on available if anyone would need it.

I'm using R 2.8.1 on a Mac with Leopard OS
Thanks,
Corey

Corey Sparks
Assistant Professor
Department of Demography and Organization Studies
University of Texas at San Antonio
One UTSA Circle
San Antonio, TX 78249
210 458 6858
corey.sparks at utsa.edu



From Roger.Bivand at nhh.no  Thu Jan  8 22:10:55 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 8 Jan 2009 22:10:55 +0100 (CET)
Subject: [R-sig-Geo] Help with anti-clockwise polygon in owin
In-Reply-To: <90BAF15D-856D-405F-9336-7E0B33C8CBE5@UTSA.EDU>
References: <90BAF15D-856D-405F-9336-7E0B33C8CBE5@UTSA.EDU>
Message-ID: <alpine.LRH.2.00.0901082202170.11265@reclus.nhh.no>

On Thu, 8 Jan 2009, Corey Sparks wrote:

> Dear list,
> I have a point pattern that consists of  wells on an island.  I am interested 
> doing some exploratory point pattern analysis on this data (such as Gest in 
> spatstat).  The island as you can imagine is an irregular polygon defined by 
> 1815 points.  When I try to create the observation window for the point 
> pattern in spatstat using
>
> owin(x=range(westcoords$X), y=range(westcoords$Y), poly=list(x=westcoords$X, 
> y=westcoords$Y))
> where westcoords are the coordinated of the polygon
> I get:
> Error in owin(x = range(westcoords$X), y = range(westcoords$Y), poly = list(x 
> = westcoords$X,  :
> Area of polygon is negative - maybe traversed in wrong direction?
>
> Since the origin of the coordinates is a shapefile I created myself, how can 
> I get around this "traversed in the wrong direction" problem?  I can make the 
> data this is based on available if anyone would need it.

Could you try using readShapeSpatial() in maptools to read in the 
shapefile, then coerce the polygon object to an owin object, something 
like:

library(maptools)
pl_obj <- readShapeSpatial("my_file.shp")
class(pl_obj)
plot(pl_obj, axes=TRUE)
owin_obj <- as(as(pl_obj, "SpatialPolygons"), "owin")
plot(owin_obj)

The reason for doing this is that if a ring in a SpatialPolygons... 
object, created by nested calls to Polygon, does not seem to be a hole - 
that is that it is a singleton ring in this case, its ring direction will 
be reversed automatically. The heuristics are only approximate, but may 
get you where you want to go. If this doesn't help, see if you can make 
the offending shapefile available for helpers to hack on.

Roger

>
> I'm using R 2.8.1 on a Mac with Leopard OS
> Thanks,
> Corey
>
> Corey Sparks
> Assistant Professor
> Department of Demography and Organization Studies
> University of Texas at San Antonio
> One UTSA Circle
> San Antonio, TX 78249
> 210 458 6858
> corey.sparks at utsa.edu
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From katona at statisztikus.hu  Thu Jan  8 22:30:13 2009
From: katona at statisztikus.hu (Katona Lajos)
Date: Thu, 8 Jan 2009 22:30:13 +0100
Subject: [R-sig-Geo] analyse geo-time data
Message-ID: <cdef834063421f10346e13891710e8ec@blup.ultimate.hu>

Dear all,

can you suggest/advise statistical methode in R to analyse my time series and regional/spatial data?
I have 174 region and daily (365) data for every region (geo-time data). (There is 174*365=63510 data/observation)

How can I building a model what is founded on parameters of spatial and time series.

I'd like to simulate how to expand a contagious disease (flu). Find typical patterns and paths.

What do you think what is the best way to discover and analyse my data?

Thank you in anticipation,
Lajos Katona



From aloboaleu at gmail.com  Sun Jan 11 21:42:07 2009
From: aloboaleu at gmail.com (Agustin Lobo)
Date: Sun, 11 Jan 2009 21:42:07 +0100
Subject: [R-sig-Geo] EPIMAP format
Message-ID: <496A599F.9090208@gmail.com>

Hi!

I have a bunch of files in *.MAP and *.REC
formats. I've seen that I can import
*.REC into R, but what about the *.MAP
files? Is there any way to import those to
R or a GIS program and then export
to another format?

Thanks

Agus
-- 
Dr. Agustin Lobo
Institut de Ciencies de la Terra "Jaume Almera" (CSIC)
LLuis Sole Sabaris s/n
08028 Barcelona
Spain
Tel. 34 934095410
Fax. 34 934110012
email: Agustin.Lobo at ija.csic.es
http://www.ija.csic.es/gt/obster



From T.Hengl at uva.nl  Tue Jan 13 10:34:37 2009
From: T.Hengl at uva.nl (Tomislav Hengl)
Date: Tue, 13 Jan 2009 10:34:37 +0100
Subject: [R-sig-Geo] analyse geo-time data
In-Reply-To: <cdef834063421f10346e13891710e8ec@blup.ultimate.hu>
References: <cdef834063421f10346e13891710e8ec@blup.ultimate.hu>
Message-ID: <CF37DE36FD4940678A084D5D3175D69E@pcibed193>


Dear Katona,

R (i.e. its packages) are definitively suited for analysis of spatio-temporal data. Try searching
the packages in the [http://cran.r-project.org/web/views/Environmetrics.html] views; in fact, there
is a section dedicated to time-series [http://cran.r-project.org/web/views/TimeSeries.html].

There are several good papers on spatio-temporal interpolation e.g.:

Pebesma, E.J., Duin, R.N.M., Burrough, P.A., 2005. Mapping sea bird densities over the North Sea:
spatially aggregated estimates and temporal changes. Environmetrics 16(6), 573--587.
http://dx.doi.org/10.1002/env.723 
(The authors claim to have put the R script on-line but I could not locate them anymore) 

If you are interested in the analysis of time-series data, take a look at this book:

Chatfield, C., 2003. The Analysis of Time Series: An Introduction (6th edition). CRC Press, pp. 352.
http://people.bath.ac.uk/mascc/TS 

Dynamic modeling of spatial phenomena is more difficult (e.g. dynamic simulation of flu spreading).
Maybe you should consider using some diffusion algorithm from ecology? E.g.: diffusion function
implemented in the "simecol" package:

http://bm2.genes.nig.ac.jp/RGM2/pkg.php?p=simecol 

Or maybe consider using some hydrological flow models as implemented in e.g. SAGA GIS.


Few remaining questions:
1. What kind of variables are your talking about? Give some examples.
2. Does your data has a point support or is it areal (polygons)?


HTH,

Tom Hengl
http://spatial-analyst.net 




> -----Original Message-----
> From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf
> Of Katona Lajos
> Sent: Thursday, January 08, 2009 10:30 PM
> To: r-sig-geo at stat.math.ethz.ch
> Subject: [R-sig-Geo] analyse geo-time data
> 
> Dear all,
> 
> can you suggest/advise statistical methode in R to analyse my time series and regional/spatial
> data?
> I have 174 region and daily (365) data for every region (geo-time data). (There is 174*365=63510
> data/observation)
> 
> How can I building a model what is founded on parameters of spatial and time series.
> 
> I'd like to simulate how to expand a contagious disease (flu). Find typical patterns and paths.
> 
> What do you think what is the best way to discover and analyse my data?
> 
> Thank you in anticipation,
> Lajos Katona
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo



From rob.robinson at bto.org  Tue Jan 13 10:51:21 2009
From: rob.robinson at bto.org (Rob Robinson)
Date: Tue, 13 Jan 2009 09:51:21 -0000
Subject: [R-sig-Geo] analyse geo-time data
In-Reply-To: <CF37DE36FD4940678A084D5D3175D69E@pcibed193>
References: <cdef834063421f10346e13891710e8ec@blup.ultimate.hu>
	<CF37DE36FD4940678A084D5D3175D69E@pcibed193>
Message-ID: <1BC0FD9094084F788E0B7DBA4D553A5C@btodomain.bto.org>


> Pebesma, E.J., Duin, R.N.M., Burrough, P.A., 2005. Mapping 
> sea bird densities over the North Sea:
> spatially aggregated estimates and temporal changes. 
> Environmetrics 16(6), 573--587.
> http://dx.doi.org/10.1002/env.723
> (The authors claim to have put the R script on-line but I 
> could not locate them anymore) 
> 

Coincidentally, I was looking at this the other day try...
library(gstat)
demo(fulmar)

Cheers
Rob

*** Want to know about Britain's birds? Try  www.bto.org/birdfacts ***

Dr Rob Robinson, Senior Population Biologist
British Trust for Ornithology, The Nunnery, Thetford, Norfolk, IP24 2PU
Ph: +44 (0)1842 750050        E: rob.robinson at bto.org
Fx: +44 (0)1842 750030        W: www.bto.org/cv/rob_robinson.htm

==== "How can anyone be enlightened, when truth is so poorly lit" =====
  

> -----Original Message-----
> From: r-sig-geo-bounces at stat.math.ethz.ch 
> [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf Of 
> Tomislav Hengl
> Sent: 13 January 2009 09:35
> To: 'Katona Lajos'; r-sig-geo at stat.math.ethz.ch
> Subject: Re: [R-sig-Geo] analyse geo-time data
> 
> 
> Dear Katona,
> 
> R (i.e. its packages) are definitively suited for analysis of 
> spatio-temporal data. Try searching the packages in the 
> [http://cran.r-project.org/web/views/Environmetrics.html] 
> views; in fact, there is a section dedicated to time-series 
> [http://cran.r-project.org/web/views/TimeSeries.html].
> 
> There are several good papers on spatio-temporal interpolation e.g.:
> 
> Pebesma, E.J., Duin, R.N.M., Burrough, P.A., 2005. Mapping 
> sea bird densities over the North Sea:
> spatially aggregated estimates and temporal changes. 
> Environmetrics 16(6), 573--587.
> http://dx.doi.org/10.1002/env.723
> (The authors claim to have put the R script on-line but I 
> could not locate them anymore) 
> 
> If you are interested in the analysis of time-series data, 
> take a look at this book:
> 
> Chatfield, C., 2003. The Analysis of Time Series: An 
> Introduction (6th edition). CRC Press, pp. 352.
> http://people.bath.ac.uk/mascc/TS 
> 
> Dynamic modeling of spatial phenomena is more difficult (e.g. 
> dynamic simulation of flu spreading).
> Maybe you should consider using some diffusion algorithm from 
> ecology? E.g.: diffusion function implemented in the 
> "simecol" package:
> 
> http://bm2.genes.nig.ac.jp/RGM2/pkg.php?p=simecol 
> 
> Or maybe consider using some hydrological flow models as 
> implemented in e.g. SAGA GIS.
> 
> 
> Few remaining questions:
> 1. What kind of variables are your talking about? Give some examples.
> 2. Does your data has a point support or is it areal (polygons)?
> 
> 
> HTH,
> 
> Tom Hengl
> http://spatial-analyst.net 
> 
> 
> 
> 
> > -----Original Message-----
> > From: r-sig-geo-bounces at stat.math.ethz.ch 
> > [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf Of 
> Katona Lajos
> > Sent: Thursday, January 08, 2009 10:30 PM
> > To: r-sig-geo at stat.math.ethz.ch
> > Subject: [R-sig-Geo] analyse geo-time data
> > 
> > Dear all,
> > 
> > can you suggest/advise statistical methode in R to analyse my time 
> > series and regional/spatial data?
> > I have 174 region and daily (365) data for every region (geo-time 
> > data). (There is 174*365=63510
> > data/observation)
> > 
> > How can I building a model what is founded on parameters of 
> spatial and time series.
> > 
> > I'd like to simulate how to expand a contagious disease 
> (flu). Find typical patterns and paths.
> > 
> > What do you think what is the best way to discover and 
> analyse my data?
> > 
> > Thank you in anticipation,
> > Lajos Katona
> > 
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at stat.math.ethz.ch
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>



From Steve.Cumming at sbf.ulaval.ca  Tue Jan 13 16:50:32 2009
From: Steve.Cumming at sbf.ulaval.ca (Steven G. Cumming)
Date: Tue, 13 Jan 2009 10:50:32 -0500
Subject: [R-sig-Geo] correcting for degrees of freedom in correlation tests
Message-ID: <316BDACB69CE814F94A7B6C5536929D9ECA586@exch-be04.ulaval.ca>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090113/b67a3266/attachment.pl>

From Joshua.Myers at norfolk.gov  Tue Jan 13 19:18:30 2009
From: Joshua.Myers at norfolk.gov (Myers, Joshua)
Date: Tue, 13 Jan 2009 13:18:30 -0500
Subject: [R-sig-Geo] Help Needed on gwr function
Message-ID: <C5DEA02721CD7242A0985DFCD5FA68A808A85A7A@MAILC-EVS.norfolk.gov>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090113/b2526cf0/attachment.pl>

From Roger.Bivand at nhh.no  Tue Jan 13 20:16:47 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 13 Jan 2009 20:16:47 +0100 (CET)
Subject: [R-sig-Geo] Help Needed on gwr function
In-Reply-To: <C5DEA02721CD7242A0985DFCD5FA68A808A85A7A@MAILC-EVS.norfolk.gov>
References: <C5DEA02721CD7242A0985DFCD5FA68A808A85A7A@MAILC-EVS.norfolk.gov>
Message-ID: <alpine.LRH.2.00.0901132005040.19278@reclus.nhh.no>

On Tue, 13 Jan 2009, Myers, Joshua wrote:

> I am using R 2.8.0 and Windows XP Professional, and the latest version
> of spgwr package and the latest versions of spgwr's dependent packages.
>
> In using the gwr function inside of spgwr, I can run it fine until I
> input fit points.  The x,y fit points matrix I am entering is in the
> same form as the coordinates argument.  I get the following error
> immediately:  Error: object "rss" not found.  I have spent some time
> looking into the gwr function and what the object rss is, but I can't
> figure out why this error message comes up and what I am doing wrong.
> Can anyone help?
>
> -Josh Myers
>
>
>
> The code, if it helps, is below.
>

The code always helps, sessionInfo() would too, but I guess that this is 
my fault - I noticed the bug in October, but haven't released since then. 
If you're in a hurry, I can roll up a Windows binary, otherwise 0.5-5 
should get to CRAN soon.

Roger

> house1.sel<-gwr.sel(house$consideration ~ house$total_living_area +
> house$waterfront + house$grade_recode + house$effective_age +
> house$accepted_acreage + house$major_infl_amt, data=house, housecoords,
> adapt=TRUE);
>
> house1.gwr<-gwr(house$consideration ~ house$total_living_area +
> house$waterfront + house$grade_recode + house$effective_age +
> house$accepted_acreage + house$major_infl_amt, data=house, housecoords,
> adapt=house1.sel, fit.points=xys, se.fit=TRUE);
>
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From brmiranda at fs.fed.us  Tue Jan 13 21:43:06 2009
From: brmiranda at fs.fed.us (Brian R Miranda)
Date: Tue, 13 Jan 2009 14:43:06 -0600
Subject: [R-sig-Geo] ESRI Ascii Grid
Message-ID: <OF31546B87.8AAA7E36-ON8625753D.006FA5A1-8625753D.00717A86@fs.fed.us>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090113/cda6a5cc/attachment.pl>

From Roger.Bivand at nhh.no  Tue Jan 13 21:49:29 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 13 Jan 2009 21:49:29 +0100 (CET)
Subject: [R-sig-Geo] ESRI Ascii Grid
In-Reply-To: <OF31546B87.8AAA7E36-ON8625753D.006FA5A1-8625753D.00717A86@fs.fed.us>
References: <OF31546B87.8AAA7E36-ON8625753D.006FA5A1-8625753D.00717A86@fs.fed.us>
Message-ID: <alpine.LRH.2.00.0901132144130.19278@reclus.nhh.no>

On Tue, 13 Jan 2009, Brian R Miranda wrote:

> Hello,
>
> I have an Ascii grid that was created using the GridAscii command in
> ArcGrid.  The grid represents cell distance to railroads and has values
> ranging from 0 to 37,082.  When I bring this grid into R as a
> SpatialGridDataFrame, the maximum and/or the minimum values in the grid do
> not exactly match the original grid.  I have tried using both readGDAL and
> readAsciiGrid for this purpose.  I have confirmed in a text editor that
> the Ascii file does contain the maximum value of 37,082.  Below are the
> results I have seen.  Note the differences in the Max. value and Min.
> value (from readGDAL).

First, beware of the possible difference between the printed summary value 
and the actual value - printed summaries may round. What does range() of 
the variable say? The difference between the two functions is puzzling - 
could you make the data available (off list for example, zipped, 
preferably for download) to try to see what is going on?

Roger

>
>> g1 <- readAsciiGrid("G:/Oconto/WI_Fire/distrail_100m.asc")
>> summary(g1)
> Object of class SpatialGridDataFrame
> Coordinates:
>                min      max
> coords.x1 -263487.6 149512.4
> coords.x2  358821.1 666821.1
> Is projected: NA
> proj4string : [NA]
> Number of points: 2
> Grid attributes:
>  cellcentre.offset cellsize cells.dim
> 1         -263437.6      100      4130
> 2          358871.1      100      3080
> Data attributes:
>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
>      0    2878    6562    7896   11670   37080 6483714
>
>> g2 <- readGDAL("G:/Oconto/WI_Fire/distrail_100m.asc")
> G:/Oconto/WI_Fire/distrail_100m.asc has GDAL driver AAIGrid
> and has 3080 rows and 4130 columns
>> summary(g2)
> Object of class SpatialGridDataFrame
> Coordinates:
>        min      max
> x -263487.6 149512.4
> y  358821.1 666821.1
> Is projected: NA
> proj4string : [NA]
> Number of points: 2
> Grid attributes:
>  cellcentre.offset cellsize cells.dim
> x         -263437.6      100      4130
> y          358871.1      100      3080
> Data attributes:
>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
> -32770    2844    6516    7718   11600   32770 6483714
>
> The results from readAsciiGrid are pretty close (Max = 37,080) to the
> original grid, but readGDAL results in much different values.  I would
> expect both functions to create an object with exactly the same values as
> the Ascii grid.  Can anyone explain why this occurs, and if there is a
> different way to get my grid into R (I eventually need an 'im' to work
> with)?  I am new to spatial analysis using R, so if there is something
> obvious I am missing I apologize.  Thanks in advance for any help!
>
> Cheers,
> -Brian
>
>
> =======================
> Brian R. Miranda
> USDA Forest Service
> Northern Research Station
> brmiranda at fs.fed.us
>
> Institute for Applied Ecosystem Studies
> 5985 Highway K
> Rhinelander, WI  54501
> phone: 715-362-1186
> fax: 715-362-1166
>
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From brmiranda at fs.fed.us  Tue Jan 13 22:39:03 2009
From: brmiranda at fs.fed.us (Brian R Miranda)
Date: Tue, 13 Jan 2009 15:39:03 -0600
Subject: [R-sig-Geo] ESRI Ascii Grid
In-Reply-To: <alpine.LRH.2.00.0901132144130.19278@reclus.nhh.no>
Message-ID: <OFA80C7E89.FB5EC818-ON8625753D.00753C6F-8625753D.007699D1@fs.fed.us>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090113/8fe53f00/attachment.pl>

From edzer.pebesma at uni-muenster.de  Tue Jan 13 23:07:08 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Tue, 13 Jan 2009 23:07:08 +0100
Subject: [R-sig-Geo] ESRI Ascii Grid
In-Reply-To: <OFA80C7E89.FB5EC818-ON8625753D.00753C6F-8625753D.007699D1@fs.fed.us>
References: <OFA80C7E89.FB5EC818-ON8625753D.00753C6F-8625753D.007699D1@fs.fed.us>
Message-ID: <496D108C.4030404@uni-muenster.de>

This sounds very familiar; I ran into this about 6 years ago or so.

The asciigrid driver in gdal reads the first so 100K of the file to 
figure out whether the data are integer or floating point. It then 
searches for a dot in any of the numbers, indicating floating point 
data. If it doesn't find a floating point (g2), it assumes integer and 
proceeds with that. The funny min and max values equal the min and max 
value of a signed two-bytes integer, +/- 2^15. The problem is that many 
images come as integer data, and what do you want gdal to do: read your 
13 Mb (zipped!) first to figure out what it is, to start all over again? 
This would make many other users very unhappy.

I remember filing a bug long ago.

How about putting a dot after your first value in the grid?
--
Edzer


Brian R Miranda wrote:
> Roger,
>
> Thanks for your help.  I believe you are correct that the printed summary 
> values have been rounded.  I couldn't quite figure out how to extract the 
> range specifically, but when I did a summary for the data.frame from each 
> grid I got what I was expecting for the one created by readAsciiGrid (g1). 
>  However, the grid created by readGDAL (g2) still shows unexpected min and 
> max values.  See results below:
>
>   
>> d1 <- g1 at data
>> summary(d1)
>>     
>  distrail_100m.asc
>  Min.   :      0 
>  1st Qu.:   2878 
>  Median :   6562 
>  Mean   :   7896 
>  3rd Qu.:  11670 
>  Max.   :  37082 
>  NA's   :6483714 
>
>   
>> d2 <- g2 at data
>> summary(d2)
>>     
>      band1 
>  Min.   : -32768 
>  1st Qu.:   2844 
>  Median :   6516 
>  Mean   :   7718 
>  3rd Qu.:  11600 
>  Max.   :  32767 
>  NA's   :6483714 
>
> For my own purposes, I have found that I should continue using 
> readAsciiGrid to bring in my grids.  But I would be happy to share my 
> dataset to help figure out why readGDAL has these strange results.  My 
> Ascii file is 13Mb zipped, probably too large to email, and I don't have 
> an FTP site that can be accessed outside of the Forest Service.  I can 
> send the file to you off list using YouSendIt.com if you would like, or if 
> you have an alternative suggestion for transferring the file, let me know. 
>  Thanks again for your assistance, and if you need any additional 
> information from me, let me know.
>
> Cheers,
> -Brian
>
> =======================
> Brian R. Miranda
> USDA Forest Service
> Northern Research Station
> brmiranda at fs.fed.us
>
> Institute for Applied Ecosystem Studies
> 5985 Highway K
> Rhinelander, WI  54501
> phone: 715-362-1186
> fax: 715-362-1166
>
>
>
>
>
> Roger Bivand <Roger.Bivand at nhh.no> 
> 01/13/2009 02:49 PM
> Please respond to
> Roger.Bivand at nhh.no
>
>
> To
> Brian R Miranda <brmiranda at fs.fed.us>
> cc
> r-sig-geo at stat.math.ethz.ch
> Subject
> Re: [R-sig-Geo] ESRI Ascii Grid
>
>
>
>
>
>
> On Tue, 13 Jan 2009, Brian R Miranda wrote:
>
>   
>> Hello,
>>
>> I have an Ascii grid that was created using the GridAscii command in
>> ArcGrid.  The grid represents cell distance to railroads and has values
>> ranging from 0 to 37,082.  When I bring this grid into R as a
>> SpatialGridDataFrame, the maximum and/or the minimum values in the grid 
>>     
> do
>   
>> not exactly match the original grid.  I have tried using both readGDAL 
>>     
> and
>   
>> readAsciiGrid for this purpose.  I have confirmed in a text editor that
>> the Ascii file does contain the maximum value of 37,082.  Below are the
>> results I have seen.  Note the differences in the Max. value and Min.
>> value (from readGDAL).
>>     
>
> First, beware of the possible difference between the printed summary value 
>
> and the actual value - printed summaries may round. What does range() of 
> the variable say? The difference between the two functions is puzzling - 
> could you make the data available (off list for example, zipped, 
> preferably for download) to try to see what is going on?
>
> Roger
>
>   
>>> g1 <- readAsciiGrid("G:/Oconto/WI_Fire/distrail_100m.asc")
>>> summary(g1)
>>>       
>> Object of class SpatialGridDataFrame
>> Coordinates:
>>                min      max
>> coords.x1 -263487.6 149512.4
>> coords.x2  358821.1 666821.1
>> Is projected: NA
>> proj4string : [NA]
>> Number of points: 2
>> Grid attributes:
>>  cellcentre.offset cellsize cells.dim
>> 1         -263437.6      100      4130
>> 2          358871.1      100      3080
>> Data attributes:
>>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
>>      0    2878    6562    7896   11670   37080 6483714
>>
>>     
>>> g2 <- readGDAL("G:/Oconto/WI_Fire/distrail_100m.asc")
>>>       
>> G:/Oconto/WI_Fire/distrail_100m.asc has GDAL driver AAIGrid
>> and has 3080 rows and 4130 columns
>>     
>>> summary(g2)
>>>       
>> Object of class SpatialGridDataFrame
>> Coordinates:
>>        min      max
>> x -263487.6 149512.4
>> y  358821.1 666821.1
>> Is projected: NA
>> proj4string : [NA]
>> Number of points: 2
>> Grid attributes:
>>  cellcentre.offset cellsize cells.dim
>> x         -263437.6      100      4130
>> y          358871.1      100      3080
>> Data attributes:
>>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
>> -32770    2844    6516    7718   11600   32770 6483714
>>
>> The results from readAsciiGrid are pretty close (Max = 37,080) to the
>> original grid, but readGDAL results in much different values.  I would
>> expect both functions to create an object with exactly the same values 
>>     
> as
>   
>> the Ascii grid.  Can anyone explain why this occurs, and if there is a
>> different way to get my grid into R (I eventually need an 'im' to work
>> with)?  I am new to spatial analysis using R, so if there is something
>> obvious I am missing I apologize.  Thanks in advance for any help!
>>
>> Cheers,
>> -Brian
>>
>>
>> =======================
>> Brian R. Miranda
>> USDA Forest Service
>> Northern Research Station
>> brmiranda at fs.fed.us
>>
>> Institute for Applied Ecosystem Studies
>> 5985 Highway K
>> Rhinelander, WI  54501
>> phone: 715-362-1186
>> fax: 715-362-1166
>>
>>
>>                [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>>     
>
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From yong.li at unimelb.edu.au  Tue Jan 13 23:11:28 2009
From: yong.li at unimelb.edu.au (Yong Li)
Date: Wed, 14 Jan 2009 09:11:28 +1100
Subject: [R-sig-Geo] FW: How to interpolate a points raster file (gridded)?
Message-ID: <86DBA0678E017341B449A62F258E29561549A7@IS-EX-BEV3.unimelb.edu.au>

Dear All,

I have a points raster file (e.g. crop yield derived from RS) and I want
to interpolate these discrete points in this 2D raster domain into a
continuous crop yield surface for other further use. I knew I can do it
in ILWIS and GRASS, but not sure within R.
Any comments are appreciated.

Regards

Yong Li 



From yong.li at unimelb.edu.au  Tue Jan 13 23:31:39 2009
From: yong.li at unimelb.edu.au (Yong Li)
Date: Wed, 14 Jan 2009 09:31:39 +1100
Subject: [R-sig-Geo] How to interpolate a raster-based point data?
Message-ID: <86DBA0678E017341B449A62F258E29561549A8@IS-EX-BEV3.unimelb.edu.au>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090114/85e2cb3b/attachment.pl>

From debeaudette at ucdavis.edu  Wed Jan 14 01:36:14 2009
From: debeaudette at ucdavis.edu (Dylan Beaudette)
Date: Tue, 13 Jan 2009 16:36:14 -0800
Subject: [R-sig-Geo] ESRI Ascii Grid
In-Reply-To: <496D108C.4030404@uni-muenster.de>
References: <OFA80C7E89.FB5EC818-ON8625753D.00753C6F-8625753D.007699D1@fs.fed.us>
	<496D108C.4030404@uni-muenster.de>
Message-ID: <200901131636.14720.dylan.beaudette@gmail.com>

On Tuesday 13 January 2009, Edzer Pebesma wrote:
> This sounds very familiar; I ran into this about 6 years ago or so.

Could it be related to this ticket:

http://trac.osgeo.org/gdal/ticket/2369

???

should be fixed in a recent GDAL build.

Cheers,

Dylan


> The asciigrid driver in gdal reads the first so 100K of the file to
> figure out whether the data are integer or floating point. It then
> searches for a dot in any of the numbers, indicating floating point
> data. If it doesn't find a floating point (g2), it assumes integer and
> proceeds with that. The funny min and max values equal the min and max
> value of a signed two-bytes integer, +/- 2^15. The problem is that many
> images come as integer data, and what do you want gdal to do: read your
> 13 Mb (zipped!) first to figure out what it is, to start all over again?
> This would make many other users very unhappy.
>
> I remember filing a bug long ago.
>
> How about putting a dot after your first value in the grid?
> --
> Edzer
>
> Brian R Miranda wrote:
> > Roger,
> >
> > Thanks for your help.  I believe you are correct that the printed summary
> > values have been rounded.  I couldn't quite figure out how to extract the
> > range specifically, but when I did a summary for the data.frame from each
> > grid I got what I was expecting for the one created by readAsciiGrid
> > (g1). However, the grid created by readGDAL (g2) still shows unexpected
> > min and
> >
> > max values.  See results below:
> >> d1 <- g1 at data
> >> summary(d1)
> >
> >  distrail_100m.asc
> >  Min.   :      0
> >  1st Qu.:   2878
> >  Median :   6562
> >  Mean   :   7896
> >  3rd Qu.:  11670
> >  Max.   :  37082
> >  NA's   :6483714
> >
> >> d2 <- g2 at data
> >> summary(d2)
> >
> >      band1
> >  Min.   : -32768
> >  1st Qu.:   2844
> >  Median :   6516
> >  Mean   :   7718
> >  3rd Qu.:  11600
> >  Max.   :  32767
> >  NA's   :6483714
> >
> > For my own purposes, I have found that I should continue using
> > readAsciiGrid to bring in my grids.  But I would be happy to share my
> > dataset to help figure out why readGDAL has these strange results.  My
> > Ascii file is 13Mb zipped, probably too large to email, and I don't have
> > an FTP site that can be accessed outside of the Forest Service.  I can
> > send the file to you off list using YouSendIt.com if you would like, or
> > if you have an alternative suggestion for transferring the file, let me
> > know. Thanks again for your assistance, and if you need any additional
> > information from me, let me know.
> >
> > Cheers,
> > -Brian
> >
> > =======================
> > Brian R. Miranda
> > USDA Forest Service
> > Northern Research Station
> > brmiranda at fs.fed.us
> >
> > Institute for Applied Ecosystem Studies
> > 5985 Highway K
> > Rhinelander, WI  54501
> > phone: 715-362-1186
> > fax: 715-362-1166
> >
> >
> >
> >
> >
> > Roger Bivand <Roger.Bivand at nhh.no>
> > 01/13/2009 02:49 PM
> > Please respond to
> > Roger.Bivand at nhh.no
> >
> >
> > To
> > Brian R Miranda <brmiranda at fs.fed.us>
> > cc
> > r-sig-geo at stat.math.ethz.ch
> > Subject
> > Re: [R-sig-Geo] ESRI Ascii Grid
> >
> > On Tue, 13 Jan 2009, Brian R Miranda wrote:
> >> Hello,
> >>
> >> I have an Ascii grid that was created using the GridAscii command in
> >> ArcGrid.  The grid represents cell distance to railroads and has values
> >> ranging from 0 to 37,082.  When I bring this grid into R as a
> >> SpatialGridDataFrame, the maximum and/or the minimum values in the grid
> >
> > do
> >
> >> not exactly match the original grid.  I have tried using both readGDAL
> >
> > and
> >
> >> readAsciiGrid for this purpose.  I have confirmed in a text editor that
> >> the Ascii file does contain the maximum value of 37,082.  Below are the
> >> results I have seen.  Note the differences in the Max. value and Min.
> >> value (from readGDAL).
> >
> > First, beware of the possible difference between the printed summary
> > value
> >
> > and the actual value - printed summaries may round. What does range() of
> > the variable say? The difference between the two functions is puzzling -
> > could you make the data available (off list for example, zipped,
> > preferably for download) to try to see what is going on?
> >
> > Roger
> >
> >>> g1 <- readAsciiGrid("G:/Oconto/WI_Fire/distrail_100m.asc")
> >>> summary(g1)
> >>
> >> Object of class SpatialGridDataFrame
> >> Coordinates:
> >>                min      max
> >> coords.x1 -263487.6 149512.4
> >> coords.x2  358821.1 666821.1
> >> Is projected: NA
> >> proj4string : [NA]
> >> Number of points: 2
> >> Grid attributes:
> >>  cellcentre.offset cellsize cells.dim
> >> 1         -263437.6      100      4130
> >> 2          358871.1      100      3080
> >> Data attributes:
> >>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
> >>      0    2878    6562    7896   11670   37080 6483714
> >>
> >>> g2 <- readGDAL("G:/Oconto/WI_Fire/distrail_100m.asc")
> >>
> >> G:/Oconto/WI_Fire/distrail_100m.asc has GDAL driver AAIGrid
> >> and has 3080 rows and 4130 columns
> >>
> >>> summary(g2)
> >>
> >> Object of class SpatialGridDataFrame
> >> Coordinates:
> >>        min      max
> >> x -263487.6 149512.4
> >> y  358821.1 666821.1
> >> Is projected: NA
> >> proj4string : [NA]
> >> Number of points: 2
> >> Grid attributes:
> >>  cellcentre.offset cellsize cells.dim
> >> x         -263437.6      100      4130
> >> y          358871.1      100      3080
> >> Data attributes:
> >>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
> >> -32770    2844    6516    7718   11600   32770 6483714
> >>
> >> The results from readAsciiGrid are pretty close (Max = 37,080) to the
> >> original grid, but readGDAL results in much different values.  I would
> >> expect both functions to create an object with exactly the same values
> >
> > as
> >
> >> the Ascii grid.  Can anyone explain why this occurs, and if there is a
> >> different way to get my grid into R (I eventually need an 'im' to work
> >> with)?  I am new to spatial analysis using R, so if there is something
> >> obvious I am missing I apologize.  Thanks in advance for any help!
> >>
> >> Cheers,
> >> -Brian
> >>
> >>
> >> =======================
> >> Brian R. Miranda
> >> USDA Forest Service
> >> Northern Research Station
> >> brmiranda at fs.fed.us
> >>
> >> Institute for Applied Ecosystem Studies
> >> 5985 Highway K
> >> Rhinelander, WI  54501
> >> phone: 715-362-1186
> >> fax: 715-362-1166
> >>
> >>
> >>                [[alternative HTML version deleted]]
> >>
> >> _______________________________________________
> >> R-sig-Geo mailing list
> >> R-sig-Geo at stat.math.ethz.ch
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo



-- 
Dylan Beaudette
Soil Resource Laboratory
http://casoilresource.lawr.ucdavis.edu/
University of California at Davis
530.754.7341



From milton.ruser at gmail.com  Wed Jan 14 02:24:40 2009
From: milton.ruser at gmail.com (milton ruser)
Date: Tue, 13 Jan 2009 22:24:40 -0300
Subject: [R-sig-Geo] How to interpolate a raster-based point data?
In-Reply-To: <86DBA0678E017341B449A62F258E29561549A8@IS-EX-BEV3.unimelb.edu.au>
References: <86DBA0678E017341B449A62F258E29561549A8@IS-EX-BEV3.unimelb.edu.au>
Message-ID: <3aaf1a030901131724k7a13b16du58831da2f5e3e14f@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090113/65c80243/attachment.pl>

From Roger.Bivand at nhh.no  Wed Jan 14 09:37:06 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 14 Jan 2009 09:37:06 +0100 (CET)
Subject: [R-sig-Geo] How to interpolate a raster-based point data?
In-Reply-To: <86DBA0678E017341B449A62F258E29561549A8@IS-EX-BEV3.unimelb.edu.au>
References: <86DBA0678E017341B449A62F258E29561549A8@IS-EX-BEV3.unimelb.edu.au>
Message-ID: <alpine.LRH.2.00.0901140935560.2244@reclus.nhh.no>

On Wed, 14 Jan 2009, Yong Li wrote:

> Dear All,
>
>
>
> I have a points raster file (e.g. crop yield derived from RS) and I want
> to interpolate these discrete points in this 2D raster domain into a
> continuous crop yield surface for other further use. I knew I can do it
> in ILWIS and GRASS, but not sure within R.

Please see the section on geostatistics in the "Spatial" task view on your 
nearest CRAN mirror - this contains links to relevant packages.

Roger

>
> Any comments are appreciated.
>
>
>
> Regards
>
>
>
> Yong Li
>
>
>
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Roger.Bivand at nhh.no  Wed Jan 14 10:14:31 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 14 Jan 2009 10:14:31 +0100 (CET)
Subject: [R-sig-Geo] ESRI Ascii Grid
In-Reply-To: <200901131636.14720.dylan.beaudette@gmail.com>
References: <OFA80C7E89.FB5EC818-ON8625753D.00753C6F-8625753D.007699D1@fs.fed.us>
	<496D108C.4030404@uni-muenster.de>
	<200901131636.14720.dylan.beaudette@gmail.com>
Message-ID: <alpine.LRH.2.00.0901141001561.2244@reclus.nhh.no>

On Tue, 13 Jan 2009, Dylan Beaudette wrote:

> On Tuesday 13 January 2009, Edzer Pebesma wrote:
>> This sounds very familiar; I ran into this about 6 years ago or so.
>
> Could it be related to this ticket:
>
> http://trac.osgeo.org/gdal/ticket/2369

Yes, exactly! I have checked with readGDAL() with GDAL 1.6.0, and the 
problem is resolved (in fact it defaults to int32), while the problem 
remains in the 1.5.* GDAL series (including 1.5.4 released last week) for 
the sample file in the ticket. May I add the sample file to rgdal to give 
an indication of this?

The next Windows binary packages will be GDAL 1.5.4, not 1.6.0 - I'm 
working on getting 1.6.0 to check through rgdal.

If Brian is working on something other than Windows with the CRAN binary 
package, upgrading GDAL will fix the problem, because rgdal will use the 
installed GDAL.

Roger

PS. GDAL < 1.6 can be tricked into doing the right thing by using a 
NODATA_value in the file that is either less than the minimum int16 or 
greater than the maximum int16, so with a text editor this can be a 
"solution". The GDAL driver is more flexible in letting you choose 
subscenes, etc, so this may be prefered to readAsciiGrid().

>
> ???
>
> should be fixed in a recent GDAL build.
>
> Cheers,
>
> Dylan
>
>
>> The asciigrid driver in gdal reads the first so 100K of the file to
>> figure out whether the data are integer or floating point. It then
>> searches for a dot in any of the numbers, indicating floating point
>> data. If it doesn't find a floating point (g2), it assumes integer and
>> proceeds with that. The funny min and max values equal the min and max
>> value of a signed two-bytes integer, +/- 2^15. The problem is that many
>> images come as integer data, and what do you want gdal to do: read your
>> 13 Mb (zipped!) first to figure out what it is, to start all over again?
>> This would make many other users very unhappy.
>>
>> I remember filing a bug long ago.
>>
>> How about putting a dot after your first value in the grid?
>> --
>> Edzer
>>
>> Brian R Miranda wrote:
>>> Roger,
>>>
>>> Thanks for your help.  I believe you are correct that the printed summary
>>> values have been rounded.  I couldn't quite figure out how to extract the
>>> range specifically, but when I did a summary for the data.frame from each
>>> grid I got what I was expecting for the one created by readAsciiGrid
>>> (g1). However, the grid created by readGDAL (g2) still shows unexpected
>>> min and
>>>
>>> max values.  See results below:
>>>> d1 <- g1 at data
>>>> summary(d1)
>>>
>>>  distrail_100m.asc
>>>  Min.   :      0
>>>  1st Qu.:   2878
>>>  Median :   6562
>>>  Mean   :   7896
>>>  3rd Qu.:  11670
>>>  Max.   :  37082
>>>  NA's   :6483714
>>>
>>>> d2 <- g2 at data
>>>> summary(d2)
>>>
>>>      band1
>>>  Min.   : -32768
>>>  1st Qu.:   2844
>>>  Median :   6516
>>>  Mean   :   7718
>>>  3rd Qu.:  11600
>>>  Max.   :  32767
>>>  NA's   :6483714
>>>
>>> For my own purposes, I have found that I should continue using
>>> readAsciiGrid to bring in my grids.  But I would be happy to share my
>>> dataset to help figure out why readGDAL has these strange results.  My
>>> Ascii file is 13Mb zipped, probably too large to email, and I don't have
>>> an FTP site that can be accessed outside of the Forest Service.  I can
>>> send the file to you off list using YouSendIt.com if you would like, or
>>> if you have an alternative suggestion for transferring the file, let me
>>> know. Thanks again for your assistance, and if you need any additional
>>> information from me, let me know.
>>>
>>> Cheers,
>>> -Brian
>>>
>>> =======================
>>> Brian R. Miranda
>>> USDA Forest Service
>>> Northern Research Station
>>> brmiranda at fs.fed.us
>>>
>>> Institute for Applied Ecosystem Studies
>>> 5985 Highway K
>>> Rhinelander, WI  54501
>>> phone: 715-362-1186
>>> fax: 715-362-1166
>>>
>>>
>>>
>>>
>>>
>>> Roger Bivand <Roger.Bivand at nhh.no>
>>> 01/13/2009 02:49 PM
>>> Please respond to
>>> Roger.Bivand at nhh.no
>>>
>>>
>>> To
>>> Brian R Miranda <brmiranda at fs.fed.us>
>>> cc
>>> r-sig-geo at stat.math.ethz.ch
>>> Subject
>>> Re: [R-sig-Geo] ESRI Ascii Grid
>>>
>>> On Tue, 13 Jan 2009, Brian R Miranda wrote:
>>>> Hello,
>>>>
>>>> I have an Ascii grid that was created using the GridAscii command in
>>>> ArcGrid.  The grid represents cell distance to railroads and has values
>>>> ranging from 0 to 37,082.  When I bring this grid into R as a
>>>> SpatialGridDataFrame, the maximum and/or the minimum values in the grid
>>>
>>> do
>>>
>>>> not exactly match the original grid.  I have tried using both readGDAL
>>>
>>> and
>>>
>>>> readAsciiGrid for this purpose.  I have confirmed in a text editor that
>>>> the Ascii file does contain the maximum value of 37,082.  Below are the
>>>> results I have seen.  Note the differences in the Max. value and Min.
>>>> value (from readGDAL).
>>>
>>> First, beware of the possible difference between the printed summary
>>> value
>>>
>>> and the actual value - printed summaries may round. What does range() of
>>> the variable say? The difference between the two functions is puzzling -
>>> could you make the data available (off list for example, zipped,
>>> preferably for download) to try to see what is going on?
>>>
>>> Roger
>>>
>>>>> g1 <- readAsciiGrid("G:/Oconto/WI_Fire/distrail_100m.asc")
>>>>> summary(g1)
>>>>
>>>> Object of class SpatialGridDataFrame
>>>> Coordinates:
>>>>                min      max
>>>> coords.x1 -263487.6 149512.4
>>>> coords.x2  358821.1 666821.1
>>>> Is projected: NA
>>>> proj4string : [NA]
>>>> Number of points: 2
>>>> Grid attributes:
>>>>  cellcentre.offset cellsize cells.dim
>>>> 1         -263437.6      100      4130
>>>> 2          358871.1      100      3080
>>>> Data attributes:
>>>>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
>>>>      0    2878    6562    7896   11670   37080 6483714
>>>>
>>>>> g2 <- readGDAL("G:/Oconto/WI_Fire/distrail_100m.asc")
>>>>
>>>> G:/Oconto/WI_Fire/distrail_100m.asc has GDAL driver AAIGrid
>>>> and has 3080 rows and 4130 columns
>>>>
>>>>> summary(g2)
>>>>
>>>> Object of class SpatialGridDataFrame
>>>> Coordinates:
>>>>        min      max
>>>> x -263487.6 149512.4
>>>> y  358821.1 666821.1
>>>> Is projected: NA
>>>> proj4string : [NA]
>>>> Number of points: 2
>>>> Grid attributes:
>>>>  cellcentre.offset cellsize cells.dim
>>>> x         -263437.6      100      4130
>>>> y          358871.1      100      3080
>>>> Data attributes:
>>>>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
>>>> -32770    2844    6516    7718   11600   32770 6483714
>>>>
>>>> The results from readAsciiGrid are pretty close (Max = 37,080) to the
>>>> original grid, but readGDAL results in much different values.  I would
>>>> expect both functions to create an object with exactly the same values
>>>
>>> as
>>>
>>>> the Ascii grid.  Can anyone explain why this occurs, and if there is a
>>>> different way to get my grid into R (I eventually need an 'im' to work
>>>> with)?  I am new to spatial analysis using R, so if there is something
>>>> obvious I am missing I apologize.  Thanks in advance for any help!
>>>>
>>>> Cheers,
>>>> -Brian
>>>>
>>>>
>>>> =======================
>>>> Brian R. Miranda
>>>> USDA Forest Service
>>>> Northern Research Station
>>>> brmiranda at fs.fed.us
>>>>
>>>> Institute for Applied Ecosystem Studies
>>>> 5985 Highway K
>>>> Rhinelander, WI  54501
>>>> phone: 715-362-1186
>>>> fax: 715-362-1166
>>>>
>>>>
>>>>                [[alternative HTML version deleted]]
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at stat.math.ethz.ch
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From david.wahlund at gmail.com  Wed Jan 14 14:41:08 2009
From: david.wahlund at gmail.com (David Wahlund)
Date: Wed, 14 Jan 2009 14:41:08 +0100
Subject: [R-sig-Geo] Confused by overlay(x = "SpatialPixelsDataFrame",
	y = "SpatialPoints")
Message-ID: <616581940901140541o3222c1aaucae878e2ef325381@mail.gmail.com>

Hi,
trying to extract by mask using sp package.
Was surprised that I couldn't find 'overlay(x =
"SpatialPixelsDataFrame", y = "SpatialPolygon")' to extract pixels
within a polygon.
So instead I'm using
ascPoints <- SpatialPoints(coordinates(asc))
ascPointsHR <- ascPoints[!is.na(overlay(ascPoints,hr))]

Now when I try to use overlay using 'ascPointsHR' on 'asc' I get a
strange return. sp docs says it 'returns grid values x at spatial
point locations
y' which I interpret as me getting the raster values. Instead I seem
to be getting the index values of the pixels or something. The raster
is float, as seen from the summary below. But the return from
overlay() is ordered integer.

Am I missing something?

Thank you
David Wahlund

> summary(asc)
Object of class SpatialPixelsDataFrame
Coordinates:
      min     max
x 1592482 1622382
y 7121568 7144668
Is projected: NA
proj4string : [NA]
Number of points: 1105104
Grid attributes:
  cellcentre.offset cellsize cells.dim
x           1592494       25      1196
y           7121580       25       924
Data attributes:
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
0.000e+00 0.000e+00 0.000e+00 1.448e-09 4.750e-11 4.954e-08
> summary(ascPointsHR)
Object of class SpatialPoints
Coordinates:
      min     max
x 1599144 1617094
y 7127130 7138680
Is projected: NA
proj4string : [NA]
Number of points: 198320
> ascHR <- overlay(asc,ascPointsHR)
> summary(ascHR)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
 266300  464700  556800  552900  646600  818600



From N.A.Batchelor at sms.ed.ac.uk  Wed Jan 14 16:20:55 2009
From: N.A.Batchelor at sms.ed.ac.uk (Nicola Batchelor)
Date: Wed, 14 Jan 2009 15:20:55 -0000
Subject: [R-sig-Geo] autologistic model in R
Message-ID: <7911591D31DF4309A9D7D5B6BCA29EE5@VCS126114>

Dear all,

 

I'm currently using a logistic regression model for my dataset, which has a
binary outcome of 0 or 1.  I've looked at the residuals, which are spatially
autocorrelated, so I want to do an autologistic regression model to remove
any residual correlation.

 

I've been looking online, and it seems there are not yet any packages with
such a function.

 

I've found references to Rcitrus which seems like it should be of use, but
the package doesn't seem to be available at the moment for some reason.  I
have also seen reference to the stLattice package which is under
construction.

 

I'm a novice to this type of analysis, so I'd really appreciate any input as
to which would be the most suitable package, or any other advice.

 

I have considered using geoRglm, but am a reluctant as I tried it previously
and found it a bit too involved for a beginner such as myself!

 

Thanks,

Nicola

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090114/93ebe0e1/attachment.html>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090114/93ebe0e1/attachment.pl>

From dylan.beaudette at gmail.com  Wed Jan 14 17:07:19 2009
From: dylan.beaudette at gmail.com (Dylan Beaudette)
Date: Wed, 14 Jan 2009 08:07:19 -0800
Subject: [R-sig-Geo] ESRI Ascii Grid
In-Reply-To: <alpine.LRH.2.00.0901141001561.2244@reclus.nhh.no>
References: <OFA80C7E89.FB5EC818-ON8625753D.00753C6F-8625753D.007699D1@fs.fed.us>
	<496D108C.4030404@uni-muenster.de>
	<200901131636.14720.dylan.beaudette@gmail.com>
	<alpine.LRH.2.00.0901141001561.2244@reclus.nhh.no>
Message-ID: <3c5546140901140807t6604f7b7q14e3c2f9ce5cfab8@mail.gmail.com>

On Wed, Jan 14, 2009 at 1:14 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> On Tue, 13 Jan 2009, Dylan Beaudette wrote:
>
>> On Tuesday 13 January 2009, Edzer Pebesma wrote:
>>>
>>> This sounds very familiar; I ran into this about 6 years ago or so.
>>
>> Could it be related to this ticket:
>>
>> http://trac.osgeo.org/gdal/ticket/2369
>
> Yes, exactly! I have checked with readGDAL() with GDAL 1.6.0, and the
> problem is resolved (in fact it defaults to int32), while the problem
> remains in the 1.5.* GDAL series (including 1.5.4 released last week) for
> the sample file in the ticket. May I add the sample file to rgdal to give an
> indication of this?

Yes, please do include the sample file. This particular bug bit me
while processing a bunch of climate data about 4 months ago.

Cheers,

Dylan

>
> The next Windows binary packages will be GDAL 1.5.4, not 1.6.0 - I'm working
> on getting 1.6.0 to check through rgdal.
>
> If Brian is working on something other than Windows with the CRAN binary
> package, upgrading GDAL will fix the problem, because rgdal will use the
> installed GDAL.
>
> Roger
>
> PS. GDAL < 1.6 can be tricked into doing the right thing by using a
> NODATA_value in the file that is either less than the minimum int16 or
> greater than the maximum int16, so with a text editor this can be a
> "solution". The GDAL driver is more flexible in letting you choose
> subscenes, etc, so this may be prefered to readAsciiGrid().
>
>>
>> ?

[snip]



From juliane_struve at yahoo.co.uk  Wed Jan 14 18:01:26 2009
From: juliane_struve at yahoo.co.uk (Juliane Struve)
Date: Wed, 14 Jan 2009 17:01:26 +0000 (GMT)
Subject: [R-sig-Geo] Reading an Ascii file
Message-ID: <906374.22499.qm@web27201.mail.ukl.yahoo.com>

Dear list,

I am trying to read ArcGIS raster data sets into R after converting them into ASCII .txt file. The text file I am trying to read contains 

ncols???????? 250
nrows???????? 276
xllcorner???? 344147.19411119
yllcorner???? 3024657.6122834
cellsize????? 0.19970250725746
NODATA_value? -9999

in the first lines followed by a grid of values that are either -9999?or 1. 

I have used read.table("myfile.txt") which yields this (first 10 lines).


V1??????????? V2
1????????? ncols? 2.500000e+02
2????????? nrows? 2.760000e+02
3????? xllcorner? 3.441472e+05
4????? yllcorner? 3.024658e+06
5?????? cellsize? 1.997025e-01
6????? NODATA_value -9.999000e+03
7????????? -9999 -9.999000e+03
8????????? -9999 -9.999000e+03
9????????? -9999 -9.999000e+03
10????????-9999 -9.999000e+03

I would like to have the data as a table with coordinates for each cell and the actual value.

Could somebody advise me which function I should use ? 

Many thanks,

Juliane 






From paulojus at c3sl.ufpr.br  Wed Jan 14 18:18:09 2009
From: paulojus at c3sl.ufpr.br (Paulo Justiniano Ribeiro Jr)
Date: Wed, 14 Jan 2009 15:18:09 -0200 (BRST)
Subject: [R-sig-Geo] autologistic model in R
In-Reply-To: <7911591D31DF4309A9D7D5B6BCA29EE5@VCS126114>
References: <7911591D31DF4309A9D7D5B6BCA29EE5@VCS126114>
Message-ID: <Pine.LNX.4.58.0901141508040.20248@dalmore.c3sl.ufpr.br>

Nicola

Rcitrus and stLattice are "unofficial" packages
mantained by Elias Krainski and available
from links at www.leg.ufpr.br.

Rcitrus implements a simple autologistic model motivated by the
need to analyse date from citrus fields using such model.
It also implements some other methods commonly used for such analysis such
as quadrat counts, Taylor Law, some simulation algorithms.
The documentation is only available in  Portuguese and,
although available, it is unlike to be turn into an official R package.

stLattice is meant to generalise the function to fit autologistic
model via the key fnction aglm(),
turning it into a more flexible and general setup for such models,
including possibilities to specify time lags and "auto" and "non-auto"
spatial covariates via a lag() function to be used in the formulae.

This is working in progress but some functionality is alread available and
the Session " Paper Companions" at the LEG web page has an example code
used in a paper.

Hope this helps and you can contact us via the email available at the page
for further details

Best
P.J.


Paulo Justiniano Ribeiro Jr
LEG (Laboratorio de Estatistica e Geoinformacao)
Universidade Federal do Parana
Caixa Postal 19.081
CEP 81.531-990
Curitiba, PR  -  Brasil
Tel: (+55) 41 3361 3573
Fax: (+55) 41 3361 3141
e-mail: paulojus AT  ufpr  br
http://www.leg.ufpr.br/~paulojus



On Wed, 14 Jan 2009, Nicola Batchelor wrote:

> Dear all,
>
>
>
> I'm currently using a logistic regression model for my dataset, which has a
> binary outcome of 0 or 1.  I've looked at the residuals, which are spatially
> autocorrelated, so I want to do an autologistic regression model to remove
> any residual correlation.
>
>
>
> I've been looking online, and it seems there are not yet any packages with
> such a function.
>
>
>
> I've found references to Rcitrus which seems like it should be of use, but
> the package doesn't seem to be available at the moment for some reason.  I
> have also seen reference to the stLattice package which is under
> construction.
>
>
>
> I'm a novice to this type of analysis, so I'd really appreciate any input as
> to which would be the most suitable package, or any other advice.
>
>
>
> I have considered using geoRglm, but am a reluctant as I tried it previously
> and found it a bit too involved for a beginner such as myself!
>
>
>
> Thanks,
>
> Nicola
>
>



From milton.ruser at gmail.com  Thu Jan 15 01:18:39 2009
From: milton.ruser at gmail.com (milton ruser)
Date: Wed, 14 Jan 2009 21:18:39 -0300
Subject: [R-sig-Geo] Reading an Ascii file
In-Reply-To: <906374.22499.qm@web27201.mail.ukl.yahoo.com>
References: <906374.22499.qm@web27201.mail.ukl.yahoo.com>
Message-ID: <3aaf1a030901141618t2b16e639te6389707261dae0c@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090114/13aed895/attachment.pl>

From milton.ruser at gmail.com  Thu Jan 15 01:20:38 2009
From: milton.ruser at gmail.com (milton ruser)
Date: Wed, 14 Jan 2009 21:20:38 -0300
Subject: [R-sig-Geo] Reading an Ascii file
In-Reply-To: <3aaf1a030901141618t2b16e639te6389707261dae0c@mail.gmail.com>
References: <906374.22499.qm@web27201.mail.ukl.yahoo.com>
	<3aaf1a030901141618t2b16e639te6389707261dae0c@mail.gmail.com>
Message-ID: <3aaf1a030901141620l6290b6ibe315267f30ff554@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090114/fb027c70/attachment.pl>

From r.hijmans at gmail.com  Thu Jan 15 04:13:17 2009
From: r.hijmans at gmail.com (Robert Hijmans)
Date: Thu, 15 Jan 2009 11:13:17 +0800
Subject: [R-sig-Geo] Reading an Ascii file
In-Reply-To: <906374.22499.qm@web27201.mail.ukl.yahoo.com>
References: <906374.22499.qm@web27201.mail.ukl.yahoo.com>
Message-ID: <dc22b2570901141913u150ed09apee883637ec6f1436@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090115/4e30681d/attachment.pl>

From kamran.safi at ioz.ac.uk  Thu Jan 15 08:28:11 2009
From: kamran.safi at ioz.ac.uk (Kamran Safi)
Date: Thu, 15 Jan 2009 07:28:11 -0000
Subject: [R-sig-Geo] Reading an Ascii file
References: <906374.22499.qm@web27201.mail.ukl.yahoo.com>
	<dc22b2570901141913u150ed09apee883637ec6f1436@mail.gmail.com>
Message-ID: <41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98616@zsl26>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090115/92893a21/attachment.pl>

From J.vanEtten at cgiar.org  Thu Jan 15 09:34:11 2009
From: J.vanEtten at cgiar.org (van Etten, Jacob (IRRI))
Date: Thu, 15 Jan 2009 16:34:11 +0800
Subject: [R-sig-Geo] Reading an Ascii file
In-Reply-To: <41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98616@zsl26>
References: <906374.22499.qm@web27201.mail.ukl.yahoo.com><dc22b2570901141913u150ed09apee883637ec6f1436@mail.gmail.com>
	<41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98616@zsl26>
Message-ID: <AFBF317E3DEC0B43BF750B4618EBFA0DEB907B@HERMES>

The case for a as.data.frame(signature=RasterStack) method (then you
would have three lines (one less than Kamran)

-----Original Message-----
From: r-sig-geo-bounces at stat.math.ethz.ch
[mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf Of Kamran Safi
Sent: Thursday, January 15, 2009 3:28 PM
To: Robert Hijmans; Juliane Struve
Cc: R-sig-Geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] Reading an Ascii file

Hi all,

This should deliver the results Julie is looking for:

library(rgdal)
library(maptools)
grid <- readAsciiGrid("<your file and its path>")
table <- data.frame(grid)

That was it! Replace s1 and s2 with X and Y.

Kamran



------------------------
Kamran Safi

Postdoctoral Research Fellow
Institute of Zoology
Zoological Society of London
Regent's Park
London NW1 4RY

http://www.zoo.cam.ac.uk/ioz/people/safi.htm

http://spatialr.googlepages.com
http://asapi.wetpaint.com



-----Original Message-----
From: r-sig-geo-bounces at stat.math.ethz.ch on behalf of Robert Hijmans
Sent: Thu 15.01.2009 03:13
To: Juliane Struve
Cc: R-sig-Geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] Reading an Ascii file
 
Dear Julie,

This is one way to do that, using the raster package (under
development):


install.packages("raster",
repos="http://R-Forge.R-project.org<http://r-forge.r-project.org/>
")

require(raster)
r <- rasterFromFile("d:/alt.asc", TRUE)
xy <- xyFromCell(r, 1:ncells(r))
xyv <- cbind(xy, values(r))

xyv[1:10,]

# To get rid of the NAs

xyv <- na.omit(xyv)
xyv[1:10,]




On Thu, Jan 15, 2009 at 1:01 AM, Juliane Struve
<juliane_struve at yahoo.co.uk>wrote:

> Dear list,
>
> I am trying to read ArcGIS raster data sets into R after converting
them
> into ASCII .txt file. The text file I am trying to read contains
>
> ncols         250
> nrows         276
> xllcorner     344147.19411119
> yllcorner     3024657.6122834
> cellsize      0.19970250725746
> NODATA_value  -9999
>
> in the first lines followed by a grid of values that are either -9999
or 1.
>
> I have used read.table("myfile.txt") which yields this (first 10
lines).
>
>
> V1            V2
> 1          ncols  2.500000e+02
> 2          nrows  2.760000e+02
> 3      xllcorner  3.441472e+05
> 4      yllcorner  3.024658e+06
> 5       cellsize  1.997025e-01
> 6      NODATA_value -9.999000e+03
> 7          -9999 -9.999000e+03
> 8          -9999 -9.999000e+03
> 9          -9999 -9.999000e+03
> 10        -9999 -9.999000e+03
>
> I would like to have the data as a table with coordinates for each
cell and
> the actual value.
>
> Could somebody advise me which function I should use ?
>
> Many thanks,
>
> Juliane
>
>
>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-geo




Click https://www.mailcontrol.com/sr/wQw0zmjPoHdJTZGyOCrrhg==  to report
this email as spam.



The Zoological Society of London is incorporated by Royal Charter
Principal Office England. Company Number RC000749
Registered address: 
Regent's Park, London, England NW1 4RY
Registered Charity in England and Wales no. 208728 

________________________________________________________________________
_
This e-mail has been sent in confidence to the named\ ad...{{dropped:8}}



From edzer.pebesma at uni-muenster.de  Thu Jan 15 09:48:41 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Thu, 15 Jan 2009 09:48:41 +0100
Subject: [R-sig-Geo] ESRI Ascii Grid
In-Reply-To: <3c5546140901140807t6604f7b7q14e3c2f9ce5cfab8@mail.gmail.com>
References: <OFA80C7E89.FB5EC818-ON8625753D.00753C6F-8625753D.007699D1@fs.fed.us>	<496D108C.4030404@uni-muenster.de>	<200901131636.14720.dylan.beaudette@gmail.com>	<alpine.LRH.2.00.0901141001561.2244@reclus.nhh.no>
	<3c5546140901140807t6604f7b7q14e3c2f9ce5cfab8@mail.gmail.com>
Message-ID: <496EF869.6060404@uni-muenster.de>

Does this mean that floating point grids are still read as integer when 
the first "." does not appear in the first 100K of the file?
--
Edzer

Dylan Beaudette wrote:
> On Wed, Jan 14, 2009 at 1:14 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>   
>> On Tue, 13 Jan 2009, Dylan Beaudette wrote:
>>
>>     
>>> On Tuesday 13 January 2009, Edzer Pebesma wrote:
>>>       
>>>> This sounds very familiar; I ran into this about 6 years ago or so.
>>>>         
>>> Could it be related to this ticket:
>>>
>>> http://trac.osgeo.org/gdal/ticket/2369
>>>       
>> Yes, exactly! I have checked with readGDAL() with GDAL 1.6.0, and the
>> problem is resolved (in fact it defaults to int32), while the problem
>> remains in the 1.5.* GDAL series (including 1.5.4 released last week) for
>> the sample file in the ticket. May I add the sample file to rgdal to give an
>> indication of this?
>>     
>
> Yes, please do include the sample file. This particular bug bit me
> while processing a bunch of climate data about 4 months ago.
>
> Cheers,
>
> Dylan
>
>   
>> The next Windows binary packages will be GDAL 1.5.4, not 1.6.0 - I'm working
>> on getting 1.6.0 to check through rgdal.
>>
>> If Brian is working on something other than Windows with the CRAN binary
>> package, upgrading GDAL will fix the problem, because rgdal will use the
>> installed GDAL.
>>
>> Roger
>>
>> PS. GDAL < 1.6 can be tricked into doing the right thing by using a
>> NODATA_value in the file that is either less than the minimum int16 or
>> greater than the maximum int16, so with a text editor this can be a
>> "solution". The GDAL driver is more flexible in letting you choose
>> subscenes, etc, so this may be prefered to readAsciiGrid().
>>
>>     
>>> ?
>>>       
>
> [snip]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From kamran.safi at ioz.ac.uk  Thu Jan 15 10:20:04 2009
From: kamran.safi at ioz.ac.uk (Kamran Safi)
Date: Thu, 15 Jan 2009 09:20:04 -0000
Subject: [R-sig-Geo] Reading an Ascii file
References: <906374.22499.qm@web27201.mail.ukl.yahoo.com><dc22b2570901141913u150ed09apee883637ec6f1436@mail.gmail.com><41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98616@zsl26>
	<AFBF317E3DEC0B43BF750B4618EBFA0DEB907B@HERMES>
Message-ID: <41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98617@zsl26>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090115/e91d7adc/attachment.pl>

From juliane_struve at yahoo.co.uk  Thu Jan 15 11:01:32 2009
From: juliane_struve at yahoo.co.uk (Juliane Struve)
Date: Thu, 15 Jan 2009 10:01:32 +0000 (GMT)
Subject: [R-sig-Geo] Reading an Ascii file
References: <906374.22499.qm@web27201.mail.ukl.yahoo.com>
	<3aaf1a030901141618t2b16e639te6389707261dae0c@mail.gmail.com>
	<3aaf1a030901141620l6290b6ibe315267f30ff554@mail.gmail.com>
Message-ID: <357827.51585.qm@web27207.mail.ukl.yahoo.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090115/16eee406/attachment.pl>

From edzer.pebesma at uni-muenster.de  Thu Jan 15 12:07:14 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Thu, 15 Jan 2009 12:07:14 +0100
Subject: [R-sig-Geo] Confused by overlay(x = "SpatialPixelsDataFrame",
 y = "SpatialPoints")
In-Reply-To: <616581940901140541o3222c1aaucae878e2ef325381@mail.gmail.com>
References: <616581940901140541o3222c1aaucae878e2ef325381@mail.gmail.com>
Message-ID: <496F18E2.6010108@uni-muenster.de>



David Wahlund wrote:
> Hi,
> trying to extract by mask using sp package.
> Was surprised that I couldn't find 'overlay(x =
> "SpatialPixelsDataFrame", y = "SpatialPolygon")' to extract pixels
> within a polygon.
>   
There is one except that it is y="SpatialPolygons" rather than 
"SpatialPolygon":

 > showMethods(overlay)
Function: overlay (package sp)
x="SpatialGridDataFrame", y="SpatialPoints"
x="SpatialGrid", y="SpatialPoints"
x="SpatialPixelsDataFrame", y="SpatialPoints"
x="SpatialPixelsDataFrame", y="SpatialPolygons"
    (inherited from: x="SpatialPointsDataFrame", y="SpatialPolygons")
x="SpatialPixels", y="SpatialPoints"
x="SpatialPointsDataFrame", y="SpatialPolygons"
x="SpatialPoints", y="SpatialPolygons"
x="SpatialPolygons", y="SpatialPoints"

(note that it's only visible this way only after you've used it)
> So instead I'm using
> ascPoints <- SpatialPoints(coordinates(asc))
> ascPointsHR <- ascPoints[!is.na(overlay(ascPoints,hr))]
>
> Now when I try to use overlay using 'ascPointsHR' on 'asc' I get a
> strange return. sp docs says it 'returns grid values x at spatial
> point locations
> y' which I interpret as me getting the raster values. 
This is wrong; where exactly does it say so? Documentation is a bit 
scattered sometimes.

> Instead I seem
> to be getting the index values of the pixels or something. The raster
> is float, as seen from the summary below. But the return from
> overlay() is ordered integer.
>
> Am I missing something?
>   
Do you manage to get the pixels you want from the indexes returned?
--
Edzer
> Thank you
> David Wahlund
>
>   
>> summary(asc)
>>     
> Object of class SpatialPixelsDataFrame
> Coordinates:
>       min     max
> x 1592482 1622382
> y 7121568 7144668
> Is projected: NA
> proj4string : [NA]
> Number of points: 1105104
> Grid attributes:
>   cellcentre.offset cellsize cells.dim
> x           1592494       25      1196
> y           7121580       25       924
> Data attributes:
>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
> 0.000e+00 0.000e+00 0.000e+00 1.448e-09 4.750e-11 4.954e-08
>   
>> summary(ascPointsHR)
>>     
> Object of class SpatialPoints
> Coordinates:
>       min     max
> x 1599144 1617094
> y 7127130 7138680
> Is projected: NA
> proj4string : [NA]
> Number of points: 198320
>   
>> ascHR <- overlay(asc,ascPointsHR)
>> summary(ascHR)
>>     
>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
>  266300  464700  556800  552900  646600  818600
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From juliane_struve at yahoo.co.uk  Thu Jan 15 15:42:11 2009
From: juliane_struve at yahoo.co.uk (Juliane Struve)
Date: Thu, 15 Jan 2009 14:42:11 +0000 (GMT)
Subject: [R-sig-Geo] Reading an Ascii file
References: <906374.22499.qm@web27201.mail.ukl.yahoo.com><dc22b2570901141913u150ed09apee883637ec6f1436@mail.gmail.com><41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98616@zsl26>
	<AFBF317E3DEC0B43BF750B4618EBFA0DEB907B@HERMES>
	<41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98617@zsl26>
Message-ID: <699019.98663.qm@web27206.mail.ukl.yahoo.com>

Dear Kamran,

this solution works fine for me but I have noticed that plot() does not work on the resulting dataframe. I am trying to read a variety of shape files and?raster data sets into R for the purpose of running a model using the?geographic info as inputs. I am using readOGR?and plot() for my other shapefiles. What do I need to do to the SpatialGridDataFrame created in your script in order to use plot()? ? 

Sorry to ask such simplistic questions, but I am not that familar yet with with R or spatial analysis.

many thanks and best wishes,

Juliane 

?Dr. Juliane Struve
Environmental Scientist
10, Lynwood Crescent
Sunningdale SL5 0BL
01344 620811 



----- Original Message ----
From: Kamran Safi <kamran.safi at ioz.ac.uk>
To: "van Etten, Jacob (IRRI)" <J.vanEtten at cgiar.org>; Robert Hijmans <r.hijmans at gmail.com>
Cc: R-sig-Geo at stat.math.ethz.ch
Sent: Thursday, 15 January, 2009 9:20:04
Subject: Re: [R-sig-Geo] Reading an Ascii file

Good comment, and actually if the number of lines should be important, I can do it in two lines ;-)

library(maptools)
table <- data.frame(readAsciiGrid("<your file and its path>"))

I realized that you don't need rgdal.


Kamran


-----Original Message-----
From: r-sig-geo-bounces at stat.math.ethz.ch on behalf of van Etten, Jacob (IRRI)
Sent: Thu 15.01.2009 08:34
To: Robert Hijmans
Cc: R-sig-Geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] Reading an Ascii file

The case for a as.data.frame(signature=RasterStack) method (then you
would have three lines (one less than Kamran)

-----Original Message-----
From: r-sig-geo-bounces at stat.math.ethz.ch
[mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf Of Kamran Safi
Sent: Thursday, January 15, 2009 3:28 PM
To: Robert Hijmans; Juliane Struve
Cc: R-sig-Geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] Reading an Ascii file

Hi all,

This should deliver the results Julie is looking for:

library(rgdal)
library(maptools)
grid <- readAsciiGrid("<your file and its path>")
table <- data.frame(grid)

That was it! Replace s1 and s2 with X and Y.

Kamran



------------------------
Kamran Safi

Postdoctoral Research Fellow
Institute of Zoology
Zoological Society of London
Regent's Park
London NW1 4RY

http://www.zoo.cam.ac.uk/ioz/people/safi.htm

http://spatialr.googlepages.com
http://asapi.wetpaint.com



-----Original Message-----
From: r-sig-geo-bounces at stat.math.ethz.ch on behalf of Robert Hijmans
Sent: Thu 15.01.2009 03:13
To: Juliane Struve
Cc: R-sig-Geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] Reading an Ascii file

Dear Julie,

This is one way to do that, using the raster package (under
development):


install.packages("raster",
repos="http://R-Forge.R-project.org<http://r-forge.r-project.org/>
")

require(raster)
r <- rasterFromFile("d:/alt.asc", TRUE)
xy <- xyFromCell(r, 1:ncells(r))
xyv <- cbind(xy, values(r))

xyv[1:10,]

# To get rid of the NAs

xyv <- na.omit(xyv)
xyv[1:10,]




On Thu, Jan 15, 2009 at 1:01 AM, Juliane Struve
<juliane_struve at yahoo.co.uk>wrote:

> Dear list,
>
> I am trying to read ArcGIS raster data sets into R after converting
them
> into ASCII .txt file. The text file I am trying to read contains
>
> ncols? ? ? ? 250
> nrows? ? ? ? 276
> xllcorner? ? 344147.19411119
> yllcorner? ? 3024657.6122834
> cellsize? ? ? 0.19970250725746
> NODATA_value? -9999
>
> in the first lines followed by a grid of values that are either -9999
or 1.
>
> I have used read.table("myfile.txt") which yields this (first 10
lines).
>
>
> V1? ? ? ? ? ? V2
> 1? ? ? ? ? ncols? 2.500000e+02
> 2? ? ? ? ? nrows? 2.760000e+02
> 3? ? ? xllcorner? 3.441472e+05
> 4? ? ? yllcorner? 3.024658e+06
> 5? ? ? cellsize? 1.997025e-01
> 6? ? ? NODATA_value -9.999000e+03
> 7? ? ? ? ? -9999 -9.999000e+03
> 8? ? ? ? ? -9999 -9.999000e+03
> 9? ? ? ? ? -9999 -9.999000e+03
> 10? ? ? ? -9999 -9.999000e+03
>
> I would like to have the data as a table with coordinates for each
cell and
> the actual value.
>
> Could somebody advise me which function I should use ?
>
> Many thanks,
>
> Juliane
>
>
>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

??? [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-geo




Click https://www.mailcontrol.com/sr/wQw0zmjPoHdJTZGyOCrrhg==? to report
this email as spam.



The Zoological Society of London is incorporated by Royal Charter
Principal Office England. Company Number RC000749
Registered address: 
Regent's Park, London, England NW1 4RY
Registered Charity in England and Wales no. 208728 

________________________________________________________________________
_
This e-mail has been sent in confidence to the named\ ad...{{dropped:8}}

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-geo




Click https://www.mailcontrol.com/sr/wQw0zmjPoHdJTZGyOCrrhg==? to report this email as spam.



The Zoological Society of London is incorporated by Royal Charter
Principal Office England. Company Number RC000749
Registered address: 
Regent's Park, London, England NW1 4RY
Registered Charity in England and Wales no. 208728 

_________________________________________________________________________
This e-mail has been sent in confidence to the named addressee(s).
If you are not the intended recipient, you must not disclose or distribute
it in any form, and you are asked to contact the sender immediately.
Views or opinions expressed in this communication may not be those
of The Zoological Society of London and, therefore, The Zoological
Society of London does not accept legal responsibility for the contents
of this message. The recipient(s) must be aware that e-mail is not a
secure communication medium and that the contents of this mail may
have been altered by a third party in transit.
If you have any issues regarding this mail please contact:
administrator at zsl.org.
___________________________________________________________________________





??? [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-geo







From kamran.safi at ioz.ac.uk  Thu Jan 15 15:55:20 2009
From: kamran.safi at ioz.ac.uk (Kamran Safi)
Date: Thu, 15 Jan 2009 14:55:20 -0000
Subject: [R-sig-Geo] Reading an Ascii file
References: <906374.22499.qm@web27201.mail.ukl.yahoo.com><dc22b2570901141913u150ed09apee883637ec6f1436@mail.gmail.com><41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98616@zsl26>
	<AFBF317E3DEC0B43BF750B4618EBFA0DEB907B@HERMES>
	<41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98617@zsl26>
	<699019.98663.qm@web27206.mail.ukl.yahoo.com>
Message-ID: <41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98619@zsl26>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090115/f08b1173/attachment.pl>

From kamran.safi at ioz.ac.uk  Thu Jan 15 16:05:53 2009
From: kamran.safi at ioz.ac.uk (Kamran Safi)
Date: Thu, 15 Jan 2009 15:05:53 -0000
Subject: [R-sig-Geo] autologistic model in R
References: <7911591D31DF4309A9D7D5B6BCA29EE5@VCS126114>
	<Pine.LNX.4.58.0901141508040.20248@dalmore.c3sl.ufpr.br>
Message-ID: <41E1ED29E5E8E34BBDD8B82CFA1A9D0405F9861A@zsl26>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090115/592090ef/attachment.pl>

From david.wahlund at gmail.com  Thu Jan 15 17:19:41 2009
From: david.wahlund at gmail.com (David Wahlund)
Date: Thu, 15 Jan 2009 17:19:41 +0100
Subject: [R-sig-Geo] Confused by overlay(x = "SpatialPixelsDataFrame",
	y = "SpatialPoints")
In-Reply-To: <496F18E2.6010108@uni-muenster.de>
References: <616581940901140541o3222c1aaucae878e2ef325381@mail.gmail.com>
	<496F18E2.6010108@uni-muenster.de>
Message-ID: <616581940901150819u7c9da856m98c2b3a43ca6c945@mail.gmail.com>

On Thu, Jan 15, 2009 at 12:07, Edzer Pebesma
<edzer.pebesma at uni-muenster.de> wrote:
>
>
> David Wahlund wrote:
>>
>> Hi,
>> trying to extract by mask using sp package.
>> Was surprised that I couldn't find 'overlay(x =
>> "SpatialPixelsDataFrame", y = "SpatialPolygon")' to extract pixels
>> within a polygon.
>>
>
> There is one except that it is y="SpatialPolygons" rather than
> "SpatialPolygon":
>
>> showMethods(overlay)
> Function: overlay (package sp)
> x="SpatialGridDataFrame", y="SpatialPoints"
> x="SpatialGrid", y="SpatialPoints"
> x="SpatialPixelsDataFrame", y="SpatialPoints"
> x="SpatialPixelsDataFrame", y="SpatialPolygons"
>   (inherited from: x="SpatialPointsDataFrame", y="SpatialPolygons")
> x="SpatialPixels", y="SpatialPoints"
> x="SpatialPointsDataFrame", y="SpatialPolygons"
> x="SpatialPoints", y="SpatialPolygons"
> x="SpatialPolygons", y="SpatialPoints"
>
> (note that it's only visible this way only after you've used it)

Might be a good idea to include something about this in the docs .
Seems a bit hidden now.

>>
>> So instead I'm using
>> ascPoints <- SpatialPoints(coordinates(asc))
>> ascPointsHR <- ascPoints[!is.na(overlay(ascPoints,hr))]
>>
>> Now when I try to use overlay using 'ascPointsHR' on 'asc' I get a
>> strange return. sp docs says it 'returns grid values x at spatial
>> point locations
>> y' which I interpret as me getting the raster values.
>
> This is wrong; where exactly does it say so? Documentation is a bit
> scattered sometimes.

It's in 'sp.pdf' created 2009-01-04 15:55, page 56, under 'overlay-methods'.

>
>> Instead I seem
>> to be getting the index values of the pixels or something. The raster
>> is float, as seen from the summary below. But the return from
>> overlay() is ordered integer.
>>
>> Am I missing something?
>>
>
> Do you manage to get the pixels you want from the indexes returned?

I'll try your suggestions. I figured it was the indices of the pixels
but since it contradicted the documentation I thought I was doing
something wrong. I'll get back to you with results.

> --
> Edzer
>>
>> Thank you
>> David Wahlund
>>
>>
>>>
>>> summary(asc)
>>>
>>
>> Object of class SpatialPixelsDataFrame
>> Coordinates:
>>      min     max
>> x 1592482 1622382
>> y 7121568 7144668
>> Is projected: NA
>> proj4string : [NA]
>> Number of points: 1105104
>> Grid attributes:
>>  cellcentre.offset cellsize cells.dim
>> x           1592494       25      1196
>> y           7121580       25       924
>> Data attributes:
>>     Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
>> 0.000e+00 0.000e+00 0.000e+00 1.448e-09 4.750e-11 4.954e-08
>>
>>>
>>> summary(ascPointsHR)
>>>
>>
>> Object of class SpatialPoints
>> Coordinates:
>>      min     max
>> x 1599144 1617094
>> y 7127130 7138680
>> Is projected: NA
>> proj4string : [NA]
>> Number of points: 198320
>>
>>>
>>> ascHR <- overlay(asc,ascPointsHR)
>>> summary(ascHR)
>>>
>>
>>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
>>  266300  464700  556800  552900  646600  818600
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> --
> Edzer Pebesma
> Institute for Geoinformatics (ifgi), University of M?nster
> Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
> 8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
> http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de
>
>



From mwdenslow at yahoo.com  Thu Jan 15 18:41:43 2009
From: mwdenslow at yahoo.com (Michael Denslow)
Date: Thu, 15 Jan 2009 09:41:43 -0800 (PST)
Subject: [R-sig-Geo] help with spatial neighbors/weights
In-Reply-To: <mailman.17.1228215603.3552.r-sig-geo@stat.math.ethz.ch>
Message-ID: <721229.34339.qm@web33102.mail.mud.yahoo.com>

Dear R-sig-geo,

I am fairly new to R and very new to spatial regression models. I am attempting to compare an OLS model to some sort of spatial regression such as SAR. However, I am unclear about how to properly designate the spatial neighbors and weights and hope that someone can provide guidance. 

My data set consists of variables taken from a series of irregularly shaped and spaced polygons, some are spatial nested (one completely inside another). I have approximate centroids for the polygons as well as some values for the max and min latitude and longitude of each. I am using the centroids in the example below. I have been using Bivand et al. (Applied Spatial Data Analysis with R) as a guide but my data is a bit different then the examples provided. 

I am attempting to make a weight file based on the distance based neighbors. I have pasted some example code below. My thought was that using distance based neighbors would associate the nested as well as some of the areas that are close by. This method seems to leave me with some areas without neighbors. This seems to cause a problem when I attempt to convert the 'nb' to the 'listw'. 

Can anyone provide me with guidance as to how to proceed or how to best associated the areas in my data set.
Thank you in advance for any help!


library(spdep)

my.lat <- c(36.4000, 36.3908, 35.0550, 36.0226, 36.4472, 36.1450, 35.2680, 35.1335,
??? 35.3225, 35.0050, 35.0450, 35.0600, 35.0500, 35.6120, 35.4330, 36.4580,
??? 35.8850, 35.7647, 35.8842, 35.6135, 36.3915, 35.1290, 35.4769, 34.9881,
??? 35.4267, 35.5986, 35.8927, 35.4721, 35.4684, 35.6802, 35.6413, 36.2405,
??? 35.3650, 35.8183, 36.5495, 35.7250, 36.1955, 35.5960, 35.6300, 35.8930,
??? 35.2360, 35.1400, 35.1970, 36.5000, 35.1540, 35.5432, 35.8898, 35.5389,
??? 35.8641, 35.6340, 35.4560, 35.3630, 35.4270, 35.7080, 35.7930, 36.1020,
??? 35.0127, 35.1380, 35.1310, 35.5689, 35.5417, 35.5206, 35.5634, 35.5157,
??? 35.9020, 35.8975, 35.8843, 35.8872)

my.long <-? c(-81.4614, -81.5717, -83.4550, -81.8264, -81.0608, -81.8070, -82.4525,
??? -79.8415, -82.5035, -83.1400, -83.0000, -82.9500, -82.9500, -83.7800, -82.2475,
??? -81.4715, -81.8815, -82.2653, -78.5282, -79.1614, -81.0700, -79.1500, -76.8119,
??? -79.5515, -80.0516, -81.6531, -78.5834, -76.9099, -78.9180, -80.9803, -80.5191,
??? -77.8615, -80.0825, -78.8575, -76.3840, -78.7000, -78.8034, -79.1300, -83.5200,
??? -79.0300, -77.8800, -79.2200, -77.8700, -76.1245, -79.1400, -79.3216, -79.0232,??? 
??? -79.2881, -78.7555, -83.4000, -83.1300, -82.9200, -82.7600, -82.3700, -82.2900,
??? -82.1100, -82.8264, -81.3900, -81.3700, -83.6629, -83.4933, -83.8661, -83.7328,
??? -83.8830, -79.0390, -79.0305, -79.0469, -79.0166)


my.coords <- as.matrix(cbind(my.long,my.lat))
nb40km <- dnearneigh(my.coords,0,40, longlat = TRUE)
plot(my.coords)
plot(nb40km, my.coords, add = TRUE)

nb50km.w <- nb2listw(nb40km, glist=NULL, style="W", zero.policy=TRUE)
# this causes an error because of the regions with no neighbours found

I am using R 2.8.1, spdep 0.4-29 on Windows XP


Michael Denslow

I.W. Carpenter Jr. Herbarium [BOON]
Appalachian State University
Boone, North Carolina U.S.A.

-- AND --

Communications Manager
Southeastern Regional Network of Expertise and Collections
sernec.org







From Roger.Bivand at nhh.no  Thu Jan 15 19:22:24 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 15 Jan 2009 19:22:24 +0100 (CET)
Subject: [R-sig-Geo] help with spatial neighbors/weights
In-Reply-To: <721229.34339.qm@web33102.mail.mud.yahoo.com>
References: <721229.34339.qm@web33102.mail.mud.yahoo.com>
Message-ID: <alpine.LRH.2.00.0901151910370.11901@reclus.nhh.no>

On Thu, 15 Jan 2009, Michael Denslow wrote:

> Dear R-sig-geo,
>
> I am fairly new to R and very new to spatial regression models. I am 
> attempting to compare an OLS model to some sort of spatial regression 
> such as SAR. However, I am unclear about how to properly designate the 
> spatial neighbors and weights and hope that someone can provide 
> guidance.
>
> My data set consists of variables taken from a series of irregularly 
> shaped and spaced polygons, some are spatial nested (one completely 
> inside another). I have approximate centroids for the polygons as well 
> as some values for the max and min latitude and longitude of each. I am 
> using the centroids in the example below. I have been using Bivand et 
> al. (Applied Spatial Data Analysis with R) as a guide but my data is a 
> bit different then the examples provided.
>
> I am attempting to make a weight file based on the distance based 
> neighbors. I have pasted some example code below. My thought was that 
> using distance based neighbors would associate the nested as well as 
> some of the areas that are close by. This method seems to leave me with 
> some areas without neighbors. This seems to cause a problem when I 
> attempt to convert the 'nb' to the 'listw'.
>
> Can anyone provide me with guidance as to how to proceed or how to best 
> associated the areas in my data set. Thank you in advance for any help!
>
>
> library(spdep)
>
> my.lat <- c(36.4000, 36.3908, 35.0550, 36.0226, 36.4472, 36.1450, 35.2680, 35.1335,
> ??? 35.3225, 35.0050, 35.0450, 35.0600, 35.0500, 35.6120, 35.4330, 36.4580,
> ??? 35.8850, 35.7647, 35.8842, 35.6135, 36.3915, 35.1290, 35.4769, 34.9881,
> ??? 35.4267, 35.5986, 35.8927, 35.4721, 35.4684, 35.6802, 35.6413, 36.2405,
> ??? 35.3650, 35.8183, 36.5495, 35.7250, 36.1955, 35.5960, 35.6300, 35.8930,
> ??? 35.2360, 35.1400, 35.1970, 36.5000, 35.1540, 35.5432, 35.8898, 35.5389,
> ??? 35.8641, 35.6340, 35.4560, 35.3630, 35.4270, 35.7080, 35.7930, 36.1020,
> ??? 35.0127, 35.1380, 35.1310, 35.5689, 35.5417, 35.5206, 35.5634, 35.5157,
> ??? 35.9020, 35.8975, 35.8843, 35.8872)
>
> my.long <-? c(-81.4614, -81.5717, -83.4550, -81.8264, -81.0608, -81.8070, -82.4525,
> ??? -79.8415, -82.5035, -83.1400, -83.0000, -82.9500, -82.9500, -83.7800, -82.2475,
> ??? -81.4715, -81.8815, -82.2653, -78.5282, -79.1614, -81.0700, -79.1500, -76.8119,
> ??? -79.5515, -80.0516, -81.6531, -78.5834, -76.9099, -78.9180, -80.9803, -80.5191,
> ??? -77.8615, -80.0825, -78.8575, -76.3840, -78.7000, -78.8034, -79.1300, -83.5200,
> ??? -79.0300, -77.8800, -79.2200, -77.8700, -76.1245, -79.1400, -79.3216, -79.0232,???
> ??? -79.2881, -78.7555, -83.4000, -83.1300, -82.9200, -82.7600, -82.3700, -82.2900,
> ??? -82.1100, -82.8264, -81.3900, -81.3700, -83.6629, -83.4933, -83.8661, -83.7328,
> ??? -83.8830, -79.0390, -79.0305, -79.0469, -79.0166)
>
>
> my.coords <- as.matrix(cbind(my.long,my.lat))
> nb40km <- dnearneigh(my.coords,0,40, longlat = TRUE)
> plot(my.coords)
> plot(nb40km, my.coords, add = TRUE)

plot(SpatialPoints(my.coords, proj4string=CRS("+proj=longlat")),
   axes=TRUE)
plot(nb40km, my.coords, add = TRUE)

is probably more legible, because it corrects for stretching.

>
> nb50km.w <- nb2listw(nb40km, glist=NULL, style="W", zero.policy=TRUE)
> # this causes an error because of the regions with no neighbours found
>

The nb2listw() completes OK, but you need to use the zero.policy=TRUE in 
all subsequent functions needing this specified

You could include all by increasing the distance threshold to:

k1nb <- knn2nb(knearneigh(my.coords, k=1, longlat=TRUE))
max(unlist(nbdists(k1nb, my.coords, longlat=TRUE)))

but a graph-based neighbour scheme may suit you better - see ?graph2nb.

Hope this helps,

Roger

PS. Thanks for a clear report with example data - makes the problem much 
clearer than just a description.

> I am using R 2.8.1, spdep 0.4-29 on Windows XP
>
>
> Michael Denslow
>
> I.W. Carpenter Jr. Herbarium [BOON]
> Appalachian State University
> Boone, North Carolina U.S.A.
>
> -- AND --
>
> Communications Manager
> Southeastern Regional Network of Expertise and Collections
> sernec.org
>
>
>
>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no

From spluque at gmail.com  Fri Jan 16 18:51:42 2009
From: spluque at gmail.com (Sebastian P. Luque)
Date: Fri, 16 Jan 2009 11:51:42 -0600
Subject: [R-sig-Geo] readGDAL() and HDF5 files
Message-ID: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>

Hi,

I'm trying to use HDF5 files with this structure:

---<--------------------cut here---------------start------------------->---
$ gdalinfo conc_200901011200.hdf 
Driver: HDF5/Hierarchical Data Format Release 5
Files: conc_200901011200.hdf
Size is 512, 512
Coordinate System is `'
Subdatasets:
  SUBDATASET_0_NAME=HDF5:"conc_200901011200.hdf"://Data/data[00]
  SUBDATASET_0_DESC=[760x1120] //Data/data[00] (32-bit floating-point)
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0,  512.0)
Upper Right (  512.0,    0.0)
Lower Right (  512.0,  512.0)
Center      (  256.0,  256.0)
---<--------------------cut here---------------end--------------------->---

The file (467 kb placed in
http://members.shaw.ca/sluque/conc_200901011200.hdf) is a grid of a
single variable (ice concentration) in a well defined polar
stereographic projection, that loads ok in R, via rgdal's readGDAL():

---<--------------------cut here---------------start------------------->---
R> p4s <- "+proj=stere +a=6378273 +b=6356889.44891 +lat_0=90 +lat_ts=70 +lon_0=-45"
R> ice <- readGDAL("HDF5:\"conc_200901011200.hdf\"://Data/data[00]", p4s=p4s)
HDF5:"conc_200901011200.hdf"://Data/data[00] has GDAL driver HDF5Image 
and has 760 rows and 1120 columns
R> summary(ice)
Object of class SpatialGridDataFrame
Coordinates:
  min  max
x   0 1120
y   0  760
Is projected: TRUE 
proj4string :
[+proj=stere +a=6378273 +b=6356889.44891 +lat_0=90 +lat_ts=70 +lon_0=-45]
Number of points: 2
Grid attributes:
  cellcentre.offset cellsize cells.dim
x               0.5        1      1120
y               0.5        1       760
Data attributes:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 -32800     -99     -99    -117       0     100 
R> ## We are concerned only with the 0-100 range; other values are codes with
R> ## various meanings, so we remove them
R> ice at data[ice at data[[1]] < 0 | ice at data[[1]] > 100, ] <- NA
R> summary(ice)
Object of class SpatialGridDataFrame
Coordinates:
  min  max
x   0 1120
y   0  760
Is projected: TRUE 
proj4string :
[+proj=stere +a=6378273 +b=6356889.44891 +lat_0=90 +lat_ts=70 +lon_0=-45]
Number of points: 2
Grid attributes:
  cellcentre.offset cellsize cells.dim
x               0.5        1      1120
y               0.5        1       760
Data attributes:
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's 
     0.0      0.0      0.0     23.3     36.7    100.0 478521.0 
## but something is wrong with visualizing these data
pdf("~/tmp/ice.pdf")
spplot(ice)
dev.off()
R> sessionInfo()
R version 2.8.1 (2008-12-22) 
x86_64-pc-linux-gnu 

locale:
LC_CTYPE=en_CA.UTF-8;LC_NUMERIC=C;LC_TIME=en_CA.UTF-8;LC_COLLATE=en_CA.UTF-8;LC_MONETARY=C;LC_MESSAGES=en_CA.UTF-8;LC_PAPER=en_CA.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_CA.UTF-8;LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rgdal_0.5-35    sp_0.9-29       slmisc_0.7.0    lattice_0.17-20

loaded via a namespace (and not attached):
[1] grid_2.8.1
---<--------------------cut here---------------end--------------------->---

I'm not attaching the resulting file because it's too large.  However,
the plot should look like http://members.shaw.ca/sluque/full.ps I'd
appreciate any feedback on what the problem might be.  Thanks.


Cheers,

-- 
Seb



From Roger.Bivand at nhh.no  Fri Jan 16 20:02:14 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 16 Jan 2009 20:02:14 +0100 (CET)
Subject: [R-sig-Geo] New release of rgdal
Message-ID: <alpine.LRH.2.00.0901161938030.17533@reclus.nhh.no>

To all rgdal users!

The new rgdal release (0.6-1) is not yet stable in some respects, some of 
which are showing up as we go.

Do not update to this release for production work yet, but do update if 
you are willing to help sort out problems.

The Windows binary from CRAN will bundle the minimal GDAL and PROJ.4 
binaries, and their support files as before.

The source package *no longer* bundles the GDAL or PROJ.4 support files - 
bundled NAD Intel-endian binary files were causing trouble on OSX PPC for 
understandable reasons. From 0.6-*, source-installed rgdal (all installs 
except the Windows CRAN build) will need to rely on the local platform 
support files. If need be, set environment variables PROJ_LIB and 
GDAL_DATA manually, but try first to see whether GDAL and PROJ.4 
autodetect correctly.

Expect rapid releases for the next few days until things stabilise.

I apologise for doing this "live", but it is well-nigh impossible to 
pre-test the networked build systems used to distribute software in any 
other way. Reports of problems with the 0.6-* series will be very helpful, 
I will tabulate them on:

http://geodacenter.asu.edu/map-packages-on-cran

under the rgdal entry, and note which version number resolved them and 
when.

Roger

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From rhurlin at gwdg.de  Fri Jan 16 22:18:56 2009
From: rhurlin at gwdg.de (Rainer Hurling)
Date: Fri, 16 Jan 2009 22:18:56 +0100
Subject: [R-sig-Geo] New release of rgdal
In-Reply-To: <alpine.LRH.2.00.0901161938030.17533@reclus.nhh.no>
References: <alpine.LRH.2.00.0901161938030.17533@reclus.nhh.no>
Message-ID: <4970F9C0.9070607@gwdg.de>

Hi Roger,

I am working on FreeBSD 8.0-CURRENT with R-2.8.1. PROJ4 is installed as 
'port' in version 'proj-4.6.1'.

As for older versions of rgdal, your actual package rgdal_0.6-1 does not 
recognize the presence and location of proj4 on FreeBSD systems. With 
the following script I am used to get a complete install:

------------------
#!/bin/sh
R CMD INSTALL --configure-args='--with-proj-lib=/usr/local/lib' 
rgdal_0.6-1.tar.gz
------------------

Is there any chance to integrate this 'path-finding' in the configure of 
  future versions of rgdal?

Thank you for your great work,
Rainer


On 16.01.2009 20:02 (UTC+1), Roger Bivand wrote:
> To all rgdal users!
> 
> The new rgdal release (0.6-1) is not yet stable in some respects, some 
> of which are showing up as we go.
> 
> Do not update to this release for production work yet, but do update if 
> you are willing to help sort out problems.
> 
> The Windows binary from CRAN will bundle the minimal GDAL and PROJ.4 
> binaries, and their support files as before.
> 
> The source package *no longer* bundles the GDAL or PROJ.4 support files 
> - bundled NAD Intel-endian binary files were causing trouble on OSX PPC 
> for understandable reasons. From 0.6-*, source-installed rgdal (all 
> installs except the Windows CRAN build) will need to rely on the local 
> platform support files. If need be, set environment variables PROJ_LIB 
> and GDAL_DATA manually, but try first to see whether GDAL and PROJ.4 
> autodetect correctly.
> 
> Expect rapid releases for the next few days until things stabilise.
> 
> I apologise for doing this "live", but it is well-nigh impossible to 
> pre-test the networked build systems used to distribute software in any 
> other way. Reports of problems with the 0.6-* series will be very 
> helpful, I will tabulate them on:
> 
> http://geodacenter.asu.edu/map-packages-on-cran
> 
> under the rgdal entry, and note which version number resolved them and 
> when.
> 
> Roger



From edzer.pebesma at uni-muenster.de  Sat Jan 17 12:57:54 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Sat, 17 Jan 2009 12:57:54 +0100
Subject: [R-sig-Geo] community support vs. corporate support
Message-ID: <4971C7C2.3070907@uni-muenster.de>

In a 9-minute video on youtube, Clay Skirkys talks about why the 
community-driven software model works. I found the metaphors he's using 
no less convincing than Eric Raymond's in "the cathedral and the bazaar".

http://www.youtube.com/watch?v=Xe1TZaElTAs

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From J.vanEtten at cgiar.org  Sat Jan 17 13:58:59 2009
From: J.vanEtten at cgiar.org (van Etten, Jacob (IRRI))
Date: Sat, 17 Jan 2009 20:58:59 +0800
Subject: [R-sig-Geo] community support vs. corporate support
References: <4971C7C2.3070907@uni-muenster.de>
Message-ID: <AFBF317E3DEC0B43BF750B4618EBFA0D7939B3@HERMES>

Cathedrals were never based on grand design but on "ad hoc collective work" (David Turnbull) and bazaar economies are all about hiding (price) information (Clifford Geertz).

The Shinto shrine is indeed an improvement in metaphor, I guess.

Jacob van Etten


-----Original Message-----
From: r-sig-geo-bounces at stat.math.ethz.ch on behalf of Edzer Pebesma
Sent: Sat 17/01/2009 19:57
To: ifgi-ifgi at listserv.uni-muenster.de; sig-geo
Subject: [R-sig-Geo] community support vs. corporate support
 
In a 9-minute video on youtube, Clay Skirkys talks about why the 
community-driven software model works. I found the metaphors he's using 
no less convincing than Eric Raymond's in "the cathedral and the bazaar".

http://www.youtube.com/watch?v=Xe1TZaElTAs

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-geo



From b.rowlingson at lancaster.ac.uk  Sat Jan 17 14:44:40 2009
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Sat, 17 Jan 2009 13:44:40 +0000
Subject: [R-sig-Geo] community support vs. corporate support
In-Reply-To: <AFBF317E3DEC0B43BF750B4618EBFA0D7939B3@HERMES>
References: <4971C7C2.3070907@uni-muenster.de>
	<AFBF317E3DEC0B43BF750B4618EBFA0D7939B3@HERMES>
Message-ID: <d8ad40b50901170544w5147fe36qbffc5e4cea7e12da@mail.gmail.com>

2009/1/17 van Etten, Jacob (IRRI) <J.vanEtten at cgiar.org>:
> Cathedrals were never based on grand design but on "ad hoc collective work" (David Turnbull) and bazaar economies are all about hiding (price) information (Clifford Geertz).

 And an analogy is like a box of chocolates - you never know what
you're gonna get, unless of course you read the little card that tells
you what shape chocolate is which flavour, at which point you know
exactly what you're gonna get, but by then the original point of your
analogy is long gone and you should just enjoy the chocolate. Oh yeah,
Chartres may have been built without plans but Wren's St Paul's
wasn't.

> The Shinto shrine is indeed an improvement in metaphor, I guess.

 Would have been nice to actually see it on the YouTube video :)

 On a related note I ran a course on Open Source Geospatial last
November, and Jason Jorgenson taught a session on Qgis and Grass. We
had a lot of Open Source newbies in the class, so Jason illustrated
the community support idea by showing an IRC log where at 09:12 he'd
submitted a bug report, and by 09:54 the bug had been fixed, the
source code patched, SVN updated, downloaded and compiled and it was
working for him. Sure that's a best case scenario, but I reckon a
one-hour response time from a commercial vendor would be pretty
unlikely...

Barry



From J.vanEtten at cgiar.org  Sat Jan 17 15:39:29 2009
From: J.vanEtten at cgiar.org (van Etten, Jacob (IRRI))
Date: Sat, 17 Jan 2009 22:39:29 +0800
Subject: [R-sig-Geo] community support vs. corporate support
References: <4971C7C2.3070907@uni-muenster.de><AFBF317E3DEC0B43BF750B4618EBFA0D7939B3@HERMES>
	<d8ad40b50901170544w5147fe36qbffc5e4cea7e12da@mail.gmail.com>
Message-ID: <AFBF317E3DEC0B43BF750B4618EBFA0D7939B4@HERMES>

Medieval cathedrals, that is. And bazaars also the real ones.

-----Original Message-----
From: b.rowlingson at googlemail.com on behalf of Barry Rowlingson
Sent: Sat 17/01/2009 21:44
To: van Etten, Jacob (IRRI)
Cc: Edzer Pebesma; sig-geo
Subject: Re: [R-sig-Geo] community support vs. corporate support
 
2009/1/17 van Etten, Jacob (IRRI) <J.vanEtten at cgiar.org>:
> Cathedrals were never based on grand design but on "ad hoc collective work" (David Turnbull) and bazaar economies are all about hiding (price) information (Clifford Geertz).

 And an analogy is like a box of chocolates - you never know what
you're gonna get, unless of course you read the little card that tells
you what shape chocolate is which flavour, at which point you know
exactly what you're gonna get, but by then the original point of your
analogy is long gone and you should just enjoy the chocolate. Oh yeah,
Chartres may have been built without plans but Wren's St Paul's
wasn't.

> The Shinto shrine is indeed an improvement in metaphor, I guess.

 Would have been nice to actually see it on the YouTube video :)

 On a related note I ran a course on Open Source Geospatial last
November, and Jason Jorgenson taught a session on Qgis and Grass. We
had a lot of Open Source newbies in the class, so Jason illustrated
the community support idea by showing an IRC log where at 09:12 he'd
submitted a bug report, and by 09:54 the bug had been fixed, the
source code patched, SVN updated, downloaded and compiled and it was
working for him. Sure that's a best case scenario, but I reckon a
one-hour response time from a commercial vendor would be pretty
unlikely...

Barry



From mwdenslow at yahoo.com  Sat Jan 17 23:23:23 2009
From: mwdenslow at yahoo.com (Michael Denslow)
Date: Sat, 17 Jan 2009 14:23:23 -0800 (PST)
Subject: [R-sig-Geo] error in spautolm spdep and model selection?
Message-ID: <988409.76690.qm@web33104.mail.mud.yahoo.com>

Dear r-sig-geo,

I am attempting to compare the results from an lm() regression with an appropriate spatial regression. I have run into a problem when using the spautolm function in spdep.
When I include a polynomial term in the model I get the following error message:

> SAR <- spautolm(log10ns2a ~ log10a2a + floras2a$Field.Year +
 floras2a$mid.elev +  I(floras2a$mid.elev^2), 
 listw = nb72km.w)

Error in solve.default(t(X) %*% as.matrix(IlW %*% X), tol = tol.solve) : 
  system is computationally singular: reciprocal condition number = 2.07505e-17

I am not sure how to interpret this. The function seems to work fine if I remove the polynomial term. 

Perhaps to larger question is which is the appropriate SAR/CAR model to use for my data. I realize that this is not an R question but any help would be most appreciated! My data has some spatial autocorrelation in the predictor variables. The residuals of the lm() model are not autocorrelated. Also the elevation variable is strongly autocorrelated and directional in my data set. As I understand it this would rule out CAR as an option. 

Thank you in advance for any help you can provide,
Michael




Michael Denslow

I.W. Carpenter Jr. Herbarium [BOON]
Appalachian State University
Boone, North Carolina U.S.A.

-- AND --

Communications Manager
Southeastern Regional Network of Expertise and Collections
sernec.org



From Roger.Bivand at nhh.no  Sun Jan 18 10:41:33 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sun, 18 Jan 2009 10:41:33 +0100 (CET)
Subject: [R-sig-Geo] error in spautolm spdep and model selection?
In-Reply-To: <988409.76690.qm@web33104.mail.mud.yahoo.com>
References: <988409.76690.qm@web33104.mail.mud.yahoo.com>
Message-ID: <alpine.LRH.2.00.0901181017360.26224@reclus.nhh.no>

On Sat, 17 Jan 2009, Michael Denslow wrote:

> Dear r-sig-geo,
>
> I am attempting to compare the results from an lm() regression with an 
> appropriate spatial regression. I have run into a problem when using the 
> spautolm function in spdep. When I include a polynomial term in the 
> model I get the following error message:
>
>> SAR <- spautolm(log10ns2a ~ log10a2a + floras2a$Field.Year +
> floras2a$mid.elev +  I(floras2a$mid.elev^2),
> listw = nb72km.w)
>
> Error in solve.default(t(X) %*% as.matrix(IlW %*% X), tol = tol.solve) :
>  system is computationally singular: reciprocal condition number = 2.07505e-17
>
> I am not sure how to interpret this. The function seems to work fine if 
> I remove the polynomial term.

For spautolm, this is a new report, and I'll try to find out how to make 
the error message clearer. What is happening is the when the squared term 
is included, X' (I - \lambda W)' \Omega (I - \lambda W) X is singular. My 
guess would be that:

SAR <- errorsarlm(log10ns2a ~ log10a2a + floras2a$Field.Year + 
floras2a$mid.elev +  I(floras2a$mid.elev^2), listw = nb72km.w)

might very well fail too - almost certainly floras2a$mid.elev and 
I(floras2a$mid.elev^2) are highly correlated. spautolm does check whether 
the X variables are aliased, but using QR, rather than the less robust 
solve.default(). Can you try changing the scale of mid.elev, which will 
then change the scale of its square?

If you believe that the variable scaling is as it should be, and want to 
proceed, set the tol.solve= argument in spautolm to a value less than 
2.07505e-17, such as 1e-17. In principle, the internal function should not 
use solve.default(), but this is the first report of it causing 
trouble since spautolm was introduced in late 2005.

>
> Perhaps to larger question is which is the appropriate SAR/CAR model to 
> use for my data. I realize that this is not an R question but any help 
> would be most appreciated! My data has some spatial autocorrelation in 
> the predictor variables. The residuals of the lm() model are not 
> autocorrelated. Also the elevation variable is strongly autocorrelated 
> and directional in my data set. As I understand it this would rule out 
> CAR as an option.

The models you are fitting are trying to harvest spatial structure in the 
residual. If there isn't any spatial structure to harvest, lm() is quite 
good enough. Spatial pattern in the X variables is not a problem, 
especially if it matches the spatial patterning in the response. Do you 
have a reference for your claims above, they sound like heresay to me? In 
this case, the only interesting spatial patterning is in the residuals - 
if they are clean, and you beleive that your model is well specified, 
there is no spatial story left.

Best wishes,

Roger

PS. access to your data set might be helpful in inserting a better error 
message into spautolm.

>
> Thank you in advance for any help you can provide,
> Michael
>
>
>
>
> Michael Denslow
>
> I.W. Carpenter Jr. Herbarium [BOON]
> Appalachian State University
> Boone, North Carolina U.S.A.
>
> -- AND --
>
> Communications Manager
> Southeastern Regional Network of Expertise and Collections
> sernec.org
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From kingsfordjones at gmail.com  Sun Jan 18 19:55:42 2009
From: kingsfordjones at gmail.com (Kingsford Jones)
Date: Sun, 18 Jan 2009 11:55:42 -0700
Subject: [R-sig-Geo] error in spautolm spdep and model selection?
In-Reply-To: <alpine.LRH.2.00.0901181017360.26224@reclus.nhh.no>
References: <988409.76690.qm@web33104.mail.mud.yahoo.com>
	<alpine.LRH.2.00.0901181017360.26224@reclus.nhh.no>
Message-ID: <2ad0cc110901181055i666f34d5m3a6acafcde29aee8@mail.gmail.com>

On Sun, Jan 18, 2009 at 2:41 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> On Sat, 17 Jan 2009, Michael Denslow wrote:
>
>> Dear r-sig-geo,
>>
>> I am attempting to compare the results from an lm() regression with an
>> appropriate spatial regression.

As Roger mentioned, without spatially autocorrelated residuals the
spatial regression is not the 'appropriate' model.


>> I have run into a problem when using the
>> spautolm function in spdep. When I include a polynomial term in the model I
>> get the following error message:
>>
>>> SAR <- spautolm(log10ns2a ~ log10a2a + floras2a$Field.Year +
>>
>> floras2a$mid.elev +  I(floras2a$mid.elev^2),
>> listw = nb72km.w)

Note that it's safer to use the 'data' argument rather than using '$'
within model formulas


>>
>> Error in solve.default(t(X) %*% as.matrix(IlW %*% X), tol = tol.solve) :
>>  system is computationally singular: reciprocal condition number =
>> 2.07505e-17
>>
>> I am not sure how to interpret this. The function seems to work fine if I
>> remove the polynomial term.
>
> For spautolm, this is a new report, and I'll try to find out how to make the
> error message clearer. What is happening is the when the squared term is
> included, X' (I - \lambda W)' \Omega (I - \lambda W) X is singular. My guess
> would be that:
>
> SAR <- errorsarlm(log10ns2a ~ log10a2a + floras2a$Field.Year +
> floras2a$mid.elev +  I(floras2a$mid.elev^2), listw = nb72km.w)
>
> might very well fail too - almost certainly floras2a$mid.elev and
> I(floras2a$mid.elev^2) are highly correlated. spautolm does check whether
> the X variables are aliased, but using QR, rather than the less robust
> solve.default(). Can you try changing the scale of mid.elev, which will then
> change the scale of its square?

Also, orthogonal polynomial terms can be created automatically using
'poly' within model formulas


>
> If you believe that the variable scaling is as it should be, and want to
> proceed, set the tol.solve= argument in spautolm to a value less than
> 2.07505e-17, such as 1e-17. In principle, the internal function should not
> use solve.default(), but this is the first report of it causing trouble
> since spautolm was introduced in late 2005.
>

It does seem suspicious that just adding a squared term causes
singularity.  I wonder if there's something else going on with the
model matrix or weights

>>
>> Perhaps to larger question is which is the appropriate SAR/CAR model to
>> use for my data. I realize that this is not an R question but any help would
>> be most appreciated! My data has some spatial autocorrelation in the
>> predictor variables. The residuals of the lm() model are not autocorrelated.
>> Also the elevation variable is strongly autocorrelated and directional in my
>> data set. As I understand it this would rule out CAR as an option.

Tobler's law guarantees that your spatial predictors will be
autocorrelated.  If spatial variables were random the world would be a
very strange place indeed!

We don't know enough about your study to offer statistical advice
(e.g. I assume it's regional/lattice/areal data?), and this really
isn't the place for consulting, but I'll reiterate what Roger said in
different terms.

The problem with spatially autocorrelated residuals in an lm model is
that you are not meeting the assumption of independence; points close
together contain redundant information and you overestimate the
degrees of freedom available for formal inference.  This not only
provides anti-conservative SEs, but when GLS estimators are used (as I
believe they are under the hood of spautolm), it also changes the
estimated coefficients.  If there is no autocorrelation in the
residuals this suggests the conditional mean part of the model has
already explained the spatial structure in the response and you don't
have lack of independence (at least not due to spatial
autocorrelation).  I've never seen a spatial regression where I
believed there was truly no spatial autocorrelation in the residuals,
but formal inference is full of approximations and if we can get close
to no autocorrelation then we can get close to an optimal estimator.
The tricky part is looking for the spatial structure in the residuals
-- it can come in many forms.

hth,

Kingsford Jones



>
> The models you are fitting are trying to harvest spatial structure in the
> residual. If there isn't any spatial structure to harvest, lm() is quite
> good enough. Spatial pattern in the X variables is not a problem, especially
> if it matches the spatial patterning in the response. Do you have a
> reference for your claims above, they sound like heresay to me? In this
> case, the only interesting spatial patterning is in the residuals - if they
> are clean, and you beleive that your model is well specified, there is no
> spatial story left.
>
> Best wishes,
>
> Roger
>
> PS. access to your data set might be helpful in inserting a better error
> message into spautolm.
>
>>
>> Thank you in advance for any help you can provide,
>> Michael
>>
>>
>>
>>
>> Michael Denslow
>>
>> I.W. Carpenter Jr. Herbarium [BOON]
>> Appalachian State University
>> Boone, North Carolina U.S.A.
>>
>> -- AND --
>>
>> Communications Manager
>> Southeastern Regional Network of Expertise and Collections
>> sernec.org
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> --
> Roger Bivand
> Economic Geography Section, Department of Economics, Norwegian School of
> Economics and Business Administration, Helleveien 30, N-5045 Bergen,
> Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
> e-mail: Roger.Bivand at nhh.no
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>



From mwdenslow at yahoo.com  Mon Jan 19 02:05:02 2009
From: mwdenslow at yahoo.com (Michael Denslow)
Date: Sun, 18 Jan 2009 17:05:02 -0800 (PST)
Subject: [R-sig-Geo] error in spautolm spdep and model selection?
In-Reply-To: <alpine.LRH.2.00.0901181017360.26224@reclus.nhh.no>
Message-ID: <749294.98404.qm@web33103.mail.mud.yahoo.com>

Thank you Roger and others who responded on and off list,
Roger, I am happy to send the data that generated the error and will do so off list.

> > 
> > Perhaps to larger question is which is the appropriate
> SAR/CAR model to use for my data. I realize that this is not
> an R question but any help would be most appreciated! My
> data has some spatial autocorrelation in the predictor
> variables. The residuals of the lm() model are not
> autocorrelated. Also the elevation variable is strongly
> autocorrelated and directional in my data set. As I
> understand it this would rule out CAR as an option.
> 
> The models you are fitting are trying to harvest spatial
> structure in the residual. If there isn't any spatial
> structure to harvest, lm() is quite good enough. Spatial
> pattern in the X variables is not a problem, especially if
> it matches the spatial patterning in the response. Do you
> have a reference for your claims above, they sound like
> heresay to me? 

I think that the problem is that I miss understood a statement that I read about the CAR model. In Dormann et al. (2008 p. 614, Methods to account for spatial autocorrelation in the analysis of species distributional data: a review) they state:

'CAR is unsuitable when directional processes such as stream flow effects or prevalent wind directions are coded as non-Euclidean distances, resulting in an asymmetric covariance matrix.'

I originally took this to mean that if you have some effect that is strongly directional CAR is not appropriate. After looking at it again, I am frankly not sure what it means. In any case, it appears that I may not need any of these models at this time. This leads to my last question. 
Should I present the results of my Moran's I test of lm() residuals (lm.morantest) to show that they are indeed not autocorrelated and a spatial regression is therefore not needed? 

Thank you again,
Michael

> > 
> > Michael Denslow
> > 
> > I.W. Carpenter Jr. Herbarium [BOON]
> > Appalachian State University
> > Boone, North Carolina U.S.A.
> > 
> > -- AND --
> > 
> > Communications Manager
> > Southeastern Regional Network of Expertise and
> Collections
> > sernec.org
> >



From Maxime.Pauwels at univ-lille1.fr  Mon Jan 19 18:02:40 2009
From: Maxime.Pauwels at univ-lille1.fr (Maxime Pauwels)
Date: Mon, 19 Jan 2009 18:02:40 +0100
Subject: [R-sig-Geo] contour lines on a plot
Message-ID: <4974B230.10604@univ-lille1.fr>

Dear users,

First of all, I'd like to wish you a happy new year, with many nice 
results from R.
I have a graphical problem when plotting kriging results. I first want 
to see results on a plot and, secondary, I'd like to add contour lines 
to the plot. The problem is that lines are at a wrong place with respect 
to the x-axis.
Does anyone know what could generate this?

Many thanks,

max

here's my script

library(sp)
library(gstat)
# read data file
d<-read.table("file.txt")
coordinates(d)<-~long+lat
#create ? grid to perform kriging
x.range=c(-4.5,30)
y.range=c(40,55)
grd<-expand.grid(x=seq(from=x.range[1], to=x.range[2], by=1/6), 
y=seq(from=y.range[1], to=y.range[2], by=1/6))
coordinates(grd)=~x+y
gridded(grd)=TRUE
#ordinary kriging
g<-gstat(id="K1", formula=K1~1, data=d)
p<-predict(g, model=v.fit, newdata=range)
pts<-list("sp.points", d,pch=20, col="black", cex=1)
spplot(p,zcol="K1.pred",col.regions=gray(0:100/100), cuts=40, 
sp.layout=list(pts), pretty=T)
contour(p, add=T, nlevels=2)

-- 
Maxime Pauwels
Researcher ID: http://www.researcherid.com/rid/A-1745-2009

Laboratoire de G?n?tique et Evolution des Populations V?g?tales
http://www.univ-lille1.fr/gepv
Tel  : +33 3 20 43 40 76
Fax  : +33 3 20 43 69 79
			
?Impose ta chance, serre ton bonheur et va vers ton risque. A te regarder, ils s?habitueront.?
Ren? Char



From Virgilio.Gomez at uclm.es  Mon Jan 19 18:16:53 2009
From: Virgilio.Gomez at uclm.es (Virgilio Gomez Rubio)
Date: Mon, 19 Jan 2009 18:16:53 +0100
Subject: [R-sig-Geo] contour lines on a plot
In-Reply-To: <4974B230.10604@univ-lille1.fr>
References: <4974B230.10604@univ-lille1.fr>
Message-ID: <1232385413.7298.55.camel@Virgilio-Gomez>

Dear Maxime,

I have not been able to reproduce your example because I lack your data
file (file.txt). However, I believe that the problem is at

> spplot(p,zcol="K1.pred",col.regions=gray(0:100/100), cuts=40, 
> sp.layout=list(pts), pretty=T)
> contour(p, add=T, nlevels=2)

You are combining lattice graphics (spplot()) and 'traditional' graphics
(contour()). A good alternative here is to pass the contour lines  to
spplot via the sp.layout parameter. You can use ContourLines2SLDF to
convert contour lines to a SpatialLinesDataFrame.

Hope this helps.

Virgilio



From Maxime.Pauwels at univ-lille1.fr  Mon Jan 19 18:37:27 2009
From: Maxime.Pauwels at univ-lille1.fr (Maxime Pauwels)
Date: Mon, 19 Jan 2009 18:37:27 +0100
Subject: [R-sig-Geo] contour lines on a plot
In-Reply-To: <1232385413.7298.55.camel@Virgilio-Gomez>
References: <4974B230.10604@univ-lille1.fr>
	<1232385413.7298.55.camel@Virgilio-Gomez>
Message-ID: <4974BA57.4090907@univ-lille1.fr>

Dear Virgilio,

I think you're right. Unfortunately, I am not familiar enough with the 
analysis of spatial data to avoid such conflict.
Do you know wath function I should use to generate contour before 
conversion.
I tried contour but it didn't work:

contour<-ContourLines2SLDF(contour(p, nlevels=2))
Erreur dans ContourLines2SLDF(contour(p, nlevels = 2)) : cL too short
De plus : Warning message:
In plot.window(xlim = xlim, ylim = ylim, asp = asp, ...) :
"nlevels" is not a graphical parameter

Many thanks,

max



Virgilio Gomez Rubio a ?crit :
> Dear Maxime,
>
> I have not been able to reproduce your example because I lack your data
> file (file.txt). However, I believe that the problem is at
>
>   
>> spplot(p,zcol="K1.pred",col.regions=gray(0:100/100), cuts=40, 
>> sp.layout=list(pts), pretty=T)
>> contour(p, add=T, nlevels=2)
>>     
>
> You are combining lattice graphics (spplot()) and 'traditional' graphics
> (contour()). A good alternative here is to pass the contour lines  to
> spplot via the sp.layout parameter. You can use ContourLines2SLDF to
> convert contour lines to a SpatialLinesDataFrame.
>
> Hope this helps.
>
> Virgilio
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>   


-- 
Maxime Pauwels
Researcher ID: http://www.researcherid.com/rid/A-1745-2009

Laboratoire de G?n?tique et Evolution des Populations V?g?tales
http://www.univ-lille1.fr/gepv
Tel  : +33 3 20 43 40 76
Fax  : +33 3 20 43 69 79
			
?Impose ta chance, serre ton bonheur et va vers ton risque. A te regarder, ils s?habitueront.?
Ren? Char



From Virgilio.Gomez at uclm.es  Mon Jan 19 19:05:25 2009
From: Virgilio.Gomez at uclm.es (Virgilio Gomez Rubio)
Date: Mon, 19 Jan 2009 19:05:25 +0100
Subject: [R-sig-Geo] contour lines on a plot
In-Reply-To: <4974BA57.4090907@univ-lille1.fr>
References: <4974B230.10604@univ-lille1.fr>
	<1232385413.7298.55.camel@Virgilio-Gomez>
	<4974BA57.4090907@univ-lille1.fr>
Message-ID: <1232388325.7298.59.camel@Virgilio-Gomez>

Hi,

El lun, 19-01-2009 a las 18:37 +0100, Maxime Pauwels escribi?:
> Dear Virgilio,
> 
> I think you're right. Unfortunately, I am not familiar enough with the 
> analysis of spatial data to avoid such conflict.
> Do you know wath function I should use to generate contour before 
> conversion.

This example may help:


library(maptools)

res <- ContourLines2SLDF(contourLines(volcano))

grd<-GridTopology(c(0,0), 1/dim(volcano), dim(volcano))
spvolcano<-SpatialGridDataFrame(grd,
data.frame(altitude=as.vector(volcano)))

spplot(spvolcano, sp.layout=list(list("sp.lines", res)) )

There is something wrong in the way I have defined the grid topology and
the contour lines are shifted north, but you will get the idea. You
could also add labels to the contour lines.

Best,

Virgilio



From jmblanco at ub.edu  Mon Jan 19 22:19:20 2009
From: jmblanco at ub.edu (=?UTF-8?B?Sm9zw6kgTWFudWVsIEJsYW5jbyBNb3Jlbm8=?=)
Date: Mon, 19 Jan 2009 22:19:20 +0100
Subject: [R-sig-Geo] contour lines on a plot
In-Reply-To: <1232388325.7298.59.camel@Virgilio-Gomez>
References: <4974B230.10604@univ-lille1.fr>
	<1232385413.7298.55.camel@Virgilio-Gomez>
	<4974BA57.4090907@univ-lille1.fr>
	<1232388325.7298.59.camel@Virgilio-Gomez>
Message-ID: <4974EE58.2050507@ub.edu>

Just a doubt... there seems that the contours are not shifted but 
"mirrored" (flipped) along an horizontal line?


Virgilio Gomez Rubio escribi?:
> Hi,
>
> El lun, 19-01-2009 a las 18:37 +0100, Maxime Pauwels escribi?:
>   
>> Dear Virgilio,
>>
>> I think you're right. Unfortunately, I am not familiar enough with the 
>> analysis of spatial data to avoid such conflict.
>> Do you know wath function I should use to generate contour before 
>> conversion.
>>     
>
> This example may help:
>
>
> library(maptools)
>
> res <- ContourLines2SLDF(contourLines(volcano))
>
> grd<-GridTopology(c(0,0), 1/dim(volcano), dim(volcano))
> spvolcano<-SpatialGridDataFrame(grd,
> data.frame(altitude=as.vector(volcano)))
>
> spplot(spvolcano, sp.layout=list(list("sp.lines", res)) )
>
> There is something wrong in the way I have defined the grid topology and
> the contour lines are shifted north, but you will get the idea. You
> could also add labels to the contour lines.
>
> Best,
>
> Virgilio
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   


-- 
---------------------------------------
Jos? M. Blanco Moreno

Dept. de Biologia Vegetal (Bot?nica)
Universitat de Barcelona
Av. Diagonal 645 
08028 Barcelona SPAIN
---------------------------------------

phone: (+34) 934 039 863
fax: (+34) 934 112 842
e-mail: jmblanco at ub.edu 



From vkepoglu at gmail.com  Mon Jan 19 22:43:45 2009
From: vkepoglu at gmail.com (Volkan Kepoglu)
Date: Mon, 19 Jan 2009 23:43:45 +0200
Subject: [R-sig-Geo] conversion from tessellation in spatstat package to sp
	classes ???
In-Reply-To: <8b5938320901191313w59ac91bdja420a828688c2ce0@mail.gmail.com>
References: <8b5938320901191313w59ac91bdja420a828688c2ce0@mail.gmail.com>
Message-ID: <8b5938320901191343r5239c097mdd9c80741a0bac57@mail.gmail.com>

Is there any way to convert from tessellation to sp classes like
SpatialLines or SpatialPolygons?

library(spatstat)
library(maptools)
x <- runifpoint(42)
t <- dirichlet(x)
plot(t)
plot(x, add=TRUE)

sp <- as(t, "SpatialPolygons")
Error in .classEnv(thisClass) :
  unable to find an environment containing class "tess"

any other suggestion?



From j.struve at imperial.ac.uk  Mon Jan 19 23:03:36 2009
From: j.struve at imperial.ac.uk (Struve, Juliane)
Date: Mon, 19 Jan 2009 22:03:36 -0000
Subject: [R-sig-Geo] matching points by their coordinates
Message-ID: <BAB4F703E4F0C64A9CD4C08933D31D7C034B8F36@icex3.ic.ac.uk>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090119/6c5a67de/attachment.pl>

From Virgilio.Gomez at uclm.es  Mon Jan 19 23:43:11 2009
From: Virgilio.Gomez at uclm.es (Virgilio Gomez Rubio)
Date: Mon, 19 Jan 2009 23:43:11 +0100
Subject: [R-sig-Geo] contour lines on a plot
In-Reply-To: <4974EE58.2050507@ub.edu>
References: <4974B230.10604@univ-lille1.fr>
	<1232385413.7298.55.camel@Virgilio-Gomez>
	<4974BA57.4090907@univ-lille1.fr>
	<1232388325.7298.59.camel@Virgilio-Gomez>  <4974EE58.2050507@ub.edu>
Message-ID: <1232404991.7716.11.camel@Virgilio-Gomez>

Hi,
El lun, 19-01-2009 a las 22:19 +0100, Jos? Manuel Blanco Moreno
escribi?:
> Just a doubt... there seems that the contours are not shifted but 
> "mirrored" (flipped) along an horizontal line?

Very well spotted!!

The right code should be as follows (the change is in the definition of
'spvolcano'):

library(maptools)

x <- 10*1:nrow(volcano)
y <- 10*1:ncol(volcano)
clv<-contourLines(x, y, volcano)

res <- ContourLines2SLDF(clv)

grd<-GridTopology(c(0,0), c(10, 10), dim(volcano))
spvolcano<-SpatialGridDataFrame(grd, 
   data.frame(altitude=as.vector((volcano[,ncol(volcano):1]))))

spplot(spvolcano, sp.layout=list(list("sp.lines", res)) )



Best,

Virgilio



From Jin.Li at ga.gov.au  Tue Jan 20 00:31:12 2009
From: Jin.Li at ga.gov.au (Jin.Li at ga.gov.au)
Date: Tue, 20 Jan 2009 10:31:12 +1100
Subject: [R-sig-Geo] OCK in gstat and co-located [SEC=UNCLASSIFIED]
Message-ID: <8D2A822B1C6C2A44ABEB777AA83FA0E32C5C3F1D61@EXCCR01.agso.gov.au>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090120/c6e8a3c8/attachment.pl>

From j.burke at earthlink.net  Tue Jan 20 03:24:11 2009
From: j.burke at earthlink.net (Jim Burke)
Date: Mon, 19 Jan 2009 20:24:11 -0600
Subject: [R-sig-Geo] colorkey print order is incorrect??
Message-ID: <497535CB.7030602@earthlink.net>

Question. When I use the code below to print
a list of values to the right of my graph,
the colorkey list appears unusual.  At the top
the list of percentages tops out at 90.87%
instead of the expected 100%. The 100% appears
at the bottom below the lowest percent 14.29%.

The numbers of tx3_sp CK_PCT are read in as follows.
ID is the PCT and CK_PCT is what's plotted.
 > tx3_sp
An object of class "SpatialPolygonsDataFrame"
Slot "data":
    PCT    CD   COMM   JP     LD    SB    SS CK_TOT  CK_PCT TOT_VOTE
1  1120 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16   1693  90.87%     1863
2  1121 CD-05 COMM01 JP-3 LD-102 SB-12 SS-16    634  54.28%     1168
3  1124 CD-05 COMM01 JP-3 LD-102 SB-12 SS-16    584  43.39%     1346
4  1135 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    815  33.51%     2432
5  1136 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    446  52.84%      844
6  1719 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16   1392  68.17%     2042
7  1720 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16    523  66.20%      790
8  1723 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16    788  82.34%      957
9  1724 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16    994  69.41%     1432
10 1725 CD-32 COMM01 JP-3 LD-102 SB-12 SS-16     31  59.62%       52
11 1802 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    999  44.20%     2260
12 1803 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    672  44.24%     1519
13 1804 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    280  39.94%      701
14 1805 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    654  48.12%     1359
15 1806 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    495  37.61%     1316
16 1807 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    695  40.81%     1703
17 1809 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    563  47.11%     1195
18 1810 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    461  42.92%     1074
19 1811 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    779  42.61%     1828
20 1812 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    585  37.77%     1549
21 1816 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    311  32.16%      967
22 1817 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    528  44.18%     1195
23 1819 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    338  47.88%      706
24 1820 CD-32 COMM01 JP-3 LD-102 SB-12 SS-16    305  70.11%      435
25 1821 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16    617  74.07%      833
26 2115 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16      1  14.29%        7
27 2121 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    646  50.91%     1269
28 2122 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    120  60.00%      200
29 2126 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    511  57.55%      888
30 2127 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    522  41.04%     1272
31 2128 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    390  49.49%      788
32 2129 CD-05 COMM02 JP-2 LD-102 SB-12 SS-16    243  41.33%      588
33 2150 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16      2 100.00%        2
34 2151 CD-05 COMM02 JP-2 LD-102 SB-12 SS-16     36  38.71%       93
35 2200 CD-03 COMM02 JP-3 LD-102 SB-12 SS-16    959  88.39%     1085
36 2204 CD-05 COMM02 JP-3 LD-102 SB-12 SS-16    363  90.07%      403
37 2205 CD-03 COMM02 JP-3 LD-102 SB-12 SS-16    921  90.38%     1019
38 2206 CD-05 COMM02 JP-3 LD-102 SB-12 SS-16    704  45.77%     1538



Is there any way to move the 100% to the top
when the colorkey legend prints?

    spplot(tx3_sp, c("CK_PCT"),
        names.attr = c("Carol Kent 2008"),
        colorkey=list(height=1.0, width=0.6),
        main = "HD102 - Carol Kent",
        sp.layout = list("sp.text",coordinates(tx3_sp),
        as.character(tx3_sp$PCT,cex = .02),
        as.table = TRUE))

See the attached jpg file. I hope this goes through.

Forgive my dumb question as I am new to R. I like
R after reading the NYTIMES article last week;
"Data Analysts Mesermized by Power of R". Query
the NYTIMES for this. And read the "Are U Ready
for R" article with its comments as well.

Thanks,
Jim Burke



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090119/1307384b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PercentOrder.jpg
Type: image/jpeg
Size: 55874 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090119/1307384b/attachment.jpg>

From Jin.Li at ga.gov.au  Tue Jan 20 04:56:42 2009
From: Jin.Li at ga.gov.au (Jin.Li at ga.gov.au)
Date: Tue, 20 Jan 2009 14:56:42 +1100
Subject: [R-sig-Geo] OCK in gstat and co-located [SEC=UNCLASSIFIED]
In-Reply-To: <8D2A822B1C6C2A44ABEB777AA83FA0E32C5C3F1D61@EXCCR01.agso.gov.au>
Message-ID: <8D2A822B1C6C2A44ABEB777AA83FA0E32C5C3F1D64@EXCCR01.agso.gov.au>

Dear all,

One more error:
> mud.pred<-predict(mud.ock.fit, newdata=data.file.pred)
non-positive definite coefficient matrix in structure 2Error in predict.gstat(mud.ock.fit, newdata = data.file.pred) :
  gstat: value not allowed for: variograms do not satisfy a legal model

Thanks for any suggestions.
Regards,
Jin

-----Original Message-----
From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf Of Li Jin
Sent: Tuesday, 20 January 2009 10:31
To: r-sig-geo at stat.math.ethz.ch
Subject: [R-sig-Geo] OCK in gstat and co-located [SEC=UNCLASSIFIED]

Dear there,

I am running OCK for a number of datasets. The codes worked for the first five datasets and then I got an error message:

Linear Model of Coregionalization found. Good.
[using ordinary cokriging]
Linear Model of Coregionalization found. Good.
[using ordinary cokriging]
Linear Model of Coregionalization found. Good.
[using ordinary cokriging]
Linear Model of Coregionalization found. Good.
[using ordinary cokriging]
Linear Model of Coregionalization found. Good.
[using ordinary cokriging]non-positive definite coefficient matrix in structure 1Error in predict.gstat(mud.ock.fit, newdata = data.file.pred) :
  gstat: value not allowed for: variograms do not satisfy a legal model

I wonder what caused the problem and how to correct it? Any suggestions are appreciated.

Givent that we have data of all secondary variables for each point of interest, I guess this would automatically lead to a co-located OCK. Is this assumption correct?  As I remember, Edzer mentioned to use merge parameter to specify this, is there an example for this as a reference if we have to specify this? Thanks in advance.

The scripts used are:

file.read.dev<-paste(files.path.dev, dev.files[i], sep="") # create the path for the file to be imported in
data.file.dev<-read.table(file.read.dev, header=TRUE, sep=",")
file.read.pred<-paste(files.path.pred, pred.files[i], sep="") # create the path for the file to be imported in
data.file.pred<-read.table(file.read.pred, header=TRUE, sep=",")
coordinates(data.file.dev) = ~LON+LAT
coordinates(data.file.pred) = ~LON+LAT #gridded require constant coordinate intervals, so we used coordinates instead
#mud.ock <- gstat(id="md", formula=sqrt(mud)~1, data=data.file.dev, nmax=20)
mud.ock <- gstat(id="md", formula=sqrt(mud)~1, data=data.file.dev)
mud.ock <- gstat(mud.ock, "bathy", bathy~1, data.file.dev)
mud.ock <- gstat(mud.ock, "dc", dist.coast~1, data.file.dev)
mud.ock <- gstat(mud.ock, "sl", slope~1, data.file.dev)
mud.ock <- gstat(mud.ock, model = vgm(1,"Sph",5,1), fill.all=T)
x <- variogram(mud.ock)
mud.ock.fit=fit.lmc(x, mud.ock)
mud.pred<-predict(mud.ock.fit, newdata=data.file.pred)
#plot(x, model=mud.ock.fit)
mud.pred<- as.data.frame(mud.pred)
mud.pred$bt.pred<-(mud.pred$md.pred)^2
mud.pred$bt.pred[mud.pred$bt.pred>=100]=100

Regards,

Jin


        [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-geo



From edzer.pebesma at uni-muenster.de  Tue Jan 20 08:14:31 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Tue, 20 Jan 2009 08:14:31 +0100
Subject: [R-sig-Geo] OCK in gstat and co-located [SEC=UNCLASSIFIED]
In-Reply-To: <8D2A822B1C6C2A44ABEB777AA83FA0E32C5C3F1D61@EXCCR01.agso.gov.au>
References: <8D2A822B1C6C2A44ABEB777AA83FA0E32C5C3F1D61@EXCCR01.agso.gov.au>
Message-ID: <497579D7.5010201@uni-muenster.de>

Hi Jin, you're not the first to run into this one; read the fit.lmc 
documentation.

fit.lmc fits partial sill matrices that may have perfect correlation 
among variables. To avoid so, you could instead of

Jin.Li at ga.gov.au wrote:
...
>
> mud.ock.fit=fit.lmc(x, mud.ock)
>
try:
mud.ock.fit = fit.lmc(x, mud.ock, correct.diagonal = 1.01)

or a larger value. This gets the correlation down to say .99 instead of 
1.0; 1.0 is allowed (I believe) for a LMC, but then you run into trouble 
when the secondary variable is collocated with the first.

There's also ways of avoiding predict.gstat to do this check, but that 
might lead to trouble further down the pipeline.
--
Edzer
>
> mud.pred<-predict(mud.ock.fit, newdata=data.file.pred)
>
> #plot(x, model=mud.ock.fit)
>
> mud.pred<- as.data.frame(mud.pred)
>
> mud.pred$bt.pred<-(mud.pred$md.pred)^2
>
> mud.pred$bt.pred[mud.pred$bt.pred>=100]=100
>
>  
>
> Regards,
>
>  
>
> Jin
>
>  
>

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From Roger.Bivand at nhh.no  Tue Jan 20 08:20:36 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 20 Jan 2009 08:20:36 +0100 (CET)
Subject: [R-sig-Geo] colorkey print order is incorrect??
In-Reply-To: <497535CB.7030602@earthlink.net>
References: <497535CB.7030602@earthlink.net>
Message-ID: <alpine.LRH.2.00.0901200811520.17261@reclus.nhh.no>

On Mon, 19 Jan 2009, Jim Burke wrote:

> Question. When I use the code below to print
> a list of values to the right of my graph,
> the colorkey list appears unusual.  At the top
> the list of percentages tops out at 90.87%
> instead of the expected 100%. The 100% appears
> at the bottom below the lowest percent 14.29%.

Yes, very nice! Your variable CK_PCT is clearly a categorical variable, 
with a % in it, and has been sorted correctly, as "100.00%" < "14.29%" in 
alphanumeric sort order. Maybe:

tx3_sp$nCK_PCT <- (100*tx3_sp$CK_TOT)/tx3_sp$TOT_VOTE

then map "nCK_PCT" (assuming that CK_TOT and TOT_VOTE are numeric - some 
software makes all fields in say shapefiles into strings)? If they aren't 
numeric (see below), coerce them using as.numeric() first.

You can check the way in which the data are represented by using the str() 
command, here

str(as(tx3_sp, "data.frame"))

will show the representation of your variables (str(tx3_sp) would show the 
geometries too, which you don't need here).

Roger

>
> The numbers of tx3_sp CK_PCT are read in as follows.
> ID is the PCT and CK_PCT is what's plotted.
>> tx3_sp
> An object of class "SpatialPolygonsDataFrame"
> Slot "data":
>   PCT    CD   COMM   JP     LD    SB    SS CK_TOT  CK_PCT TOT_VOTE
> 1  1120 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16   1693  90.87%     1863
> 2  1121 CD-05 COMM01 JP-3 LD-102 SB-12 SS-16    634  54.28%     1168
> 3  1124 CD-05 COMM01 JP-3 LD-102 SB-12 SS-16    584  43.39%     1346
> 4  1135 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    815  33.51%     2432
> 5  1136 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    446  52.84%      844
> 6  1719 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16   1392  68.17%     2042
> 7  1720 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16    523  66.20%      790
> 8  1723 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16    788  82.34%      957
> 9  1724 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16    994  69.41%     1432
> 10 1725 CD-32 COMM01 JP-3 LD-102 SB-12 SS-16     31  59.62%       52
> 11 1802 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    999  44.20%     2260
> 12 1803 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    672  44.24%     1519
> 13 1804 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    280  39.94%      701
> 14 1805 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    654  48.12%     1359
> 15 1806 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    495  37.61%     1316
> 16 1807 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    695  40.81%     1703
> 17 1809 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    563  47.11%     1195
> 18 1810 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    461  42.92%     1074
> 19 1811 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    779  42.61%     1828
> 20 1812 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    585  37.77%     1549
> 21 1816 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    311  32.16%      967
> 22 1817 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    528  44.18%     1195
> 23 1819 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08    338  47.88%      706
> 24 1820 CD-32 COMM01 JP-3 LD-102 SB-12 SS-16    305  70.11%      435
> 25 1821 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16    617  74.07%      833
> 26 2115 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16      1  14.29%        7
> 27 2121 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    646  50.91%     1269
> 28 2122 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    120  60.00%      200
> 29 2126 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    511  57.55%      888
> 30 2127 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    522  41.04%     1272
> 31 2128 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16    390  49.49%      788
> 32 2129 CD-05 COMM02 JP-2 LD-102 SB-12 SS-16    243  41.33%      588
> 33 2150 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16      2 100.00%        2
> 34 2151 CD-05 COMM02 JP-2 LD-102 SB-12 SS-16     36  38.71%       93
> 35 2200 CD-03 COMM02 JP-3 LD-102 SB-12 SS-16    959  88.39%     1085
> 36 2204 CD-05 COMM02 JP-3 LD-102 SB-12 SS-16    363  90.07%      403
> 37 2205 CD-03 COMM02 JP-3 LD-102 SB-12 SS-16    921  90.38%     1019
> 38 2206 CD-05 COMM02 JP-3 LD-102 SB-12 SS-16    704  45.77%     1538
>
>
>
> Is there any way to move the 100% to the top
> when the colorkey legend prints?
>
>   spplot(tx3_sp, c("CK_PCT"),
>       names.attr = c("Carol Kent 2008"),
>       colorkey=list(height=1.0, width=0.6),
>       main = "HD102 - Carol Kent",
>       sp.layout = list("sp.text",coordinates(tx3_sp),
>       as.character(tx3_sp$PCT,cex = .02),
>       as.table = TRUE))
>
> See the attached jpg file. I hope this goes through.
>
> Forgive my dumb question as I am new to R. I like
> R after reading the NYTIMES article last week;
> "Data Analysts Mesermized by Power of R". Query
> the NYTIMES for this. And read the "Are U Ready
> for R" article with its comments as well.
>
> Thanks,
> Jim Burke
>
>
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From edzer.pebesma at uni-muenster.de  Tue Jan 20 08:24:29 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Tue, 20 Jan 2009 08:24:29 +0100
Subject: [R-sig-Geo] colorkey print order is incorrect??
In-Reply-To: <497535CB.7030602@earthlink.net>
References: <497535CB.7030602@earthlink.net>
Message-ID: <49757C2D.1080005@uni-muenster.de>

Jim,

your percentage variable is read as a factor; just check:

 > class(tx3_sp$CK_PCT)

this is because R does not understand % symbols (unless you tell it). 
Convert it to numeric by

 > tx3_sp$CK_PCTN = as.numeric(unlist(strsplit(tx3_sp$CK_PCT,"%")))

and use spplot on the new variable. The as.table=TRUE argument does not 
have an effect when plotting a single variable only.

Thanks; the list is aware of the NY Times article:
https://stat.ethz.ch/pipermail/r-sig-geo/2009-January/004789.html
--
Edzer


Jim Burke wrote:
> Question. When I use the code below to print
> a list of values to the right of my graph,
> the colorkey list appears unusual. At the top
> the list of percentages tops out at 90.87%
> instead of the expected 100%. The 100% appears
> at the bottom below the lowest percent 14.29%.
>
> The numbers of tx3_sp CK_PCT are read in as follows.
> ID is the PCT and CK_PCT is what's plotted.
> > tx3_sp
> An object of class ?SpatialPolygonsDataFrame?
> Slot "data":
> PCT CD COMM JP LD SB SS CK_TOT CK_PCT TOT_VOTE
> 1 1120 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16 1693 90.87% 1863
> 2 1121 CD-05 COMM01 JP-3 LD-102 SB-12 SS-16 634 54.28% 1168
> 3 1124 CD-05 COMM01 JP-3 LD-102 SB-12 SS-16 584 43.39% 1346
> 4 1135 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 815 33.51% 2432
> 5 1136 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 446 52.84% 844
> 6 1719 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16 1392 68.17% 2042
> 7 1720 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16 523 66.20% 790
> 8 1723 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16 788 82.34% 957
> 9 1724 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16 994 69.41% 1432
> 10 1725 CD-32 COMM01 JP-3 LD-102 SB-12 SS-16 31 59.62% 52
> 11 1802 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 999 44.20% 2260
> 12 1803 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 672 44.24% 1519
> 13 1804 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 280 39.94% 701
> 14 1805 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 654 48.12% 1359
> 15 1806 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 495 37.61% 1316
> 16 1807 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 695 40.81% 1703
> 17 1809 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 563 47.11% 1195
> 18 1810 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 461 42.92% 1074
> 19 1811 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 779 42.61% 1828
> 20 1812 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 585 37.77% 1549
> 21 1816 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 311 32.16% 967
> 22 1817 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 528 44.18% 1195
> 23 1819 CD-32 COMM01 JP-3 LD-102 SB-12 SS-08 338 47.88% 706
> 24 1820 CD-32 COMM01 JP-3 LD-102 SB-12 SS-16 305 70.11% 435
> 25 1821 CD-03 COMM01 JP-3 LD-102 SB-12 SS-16 617 74.07% 833
> 26 2115 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16 1 14.29% 7
> 27 2121 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16 646 50.91% 1269
> 28 2122 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16 120 60.00% 200
> 29 2126 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16 511 57.55% 888
> 30 2127 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16 522 41.04% 1272
> 31 2128 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16 390 49.49% 788
> 32 2129 CD-05 COMM02 JP-2 LD-102 SB-12 SS-16 243 41.33% 588
> 33 2150 CD-03 COMM02 JP-2 LD-102 SB-12 SS-16 2 100.00% 2
> 34 2151 CD-05 COMM02 JP-2 LD-102 SB-12 SS-16 36 38.71% 93
> 35 2200 CD-03 COMM02 JP-3 LD-102 SB-12 SS-16 959 88.39% 1085
> 36 2204 CD-05 COMM02 JP-3 LD-102 SB-12 SS-16 363 90.07% 403
> 37 2205 CD-03 COMM02 JP-3 LD-102 SB-12 SS-16 921 90.38% 1019
> 38 2206 CD-05 COMM02 JP-3 LD-102 SB-12 SS-16 704 45.77% 1538
>
>
>
> Is there any way to move the 100% to the top
> when the colorkey legend prints?
>
> spplot(tx3_sp, c("CK_PCT"),
> names.attr = c("Carol Kent 2008"),
> colorkey=list(height=1.0, width=0.6),
> main = "HD102 - Carol Kent",
> sp.layout = list("sp.text",coordinates(tx3_sp),
> as.character(tx3_sp$PCT,cex = .02),
> as.table = TRUE))
>
> See the attached jpg file. I hope this goes through.
>
> Forgive my dumb question as I am new to R. I like
> R after reading the NYTIMES article last week;
> "Data Analysts Mesermized by Power of R". Query
> the NYTIMES for this. And read the "Are U Ready
> for R" article with its comments as well.
>
> Thanks,
> Jim Burke
>
>
>
>
> ------------------------------------------------------------------------
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From Roger.Bivand at nhh.no  Tue Jan 20 08:49:53 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 20 Jan 2009 08:49:53 +0100 (CET)
Subject: [R-sig-Geo] matching points by their coordinates
In-Reply-To: <BAB4F703E4F0C64A9CD4C08933D31D7C034B8F36@icex3.ic.ac.uk>
References: <BAB4F703E4F0C64A9CD4C08933D31D7C034B8F36@icex3.ic.ac.uk>
Message-ID: <alpine.LRH.2.00.0901200821310.17261@reclus.nhh.no>

On Mon, 19 Jan 2009, Struve, Juliane wrote:

> Dear list members,
>
> I would like to look for attributes (e.g. distance from the shore) of 
> spatial points in other data sets (e.g. dist_shoreDF)  after matching 
> the points in fishlocationDF and dist_shoreDF by their coordinates.

The most direct way for planar coordinates is to use functions in the 
spatstat package, to give the distance between a point and a line. You'll 
need to ceorce from sp objects to spatstat objects using methods in the 
maptools package, something like:

library(maptools)
library(spatstat)
fish_ppp <- as(as(fishlocationDF, "SpatialPoints"), "ppp")
shore_psp <- as(as(shoreDF, "SpatialLines"), "psp")

As far as I can see, the pairdist method exists for either ppp or psp 
objects, but not for a combination, but I may be wrong. There is an 
internal function called distppll() which takes a matrix of points and a 
single line segment as a matrix, which can be used, but which involves 
some coding to extract the matrices from the input objects.

http://www.csiro.au/resources/Spatial-Point-Patterns-in-R.html

is a very useful resource, but there isn't too much on line segements yet.

Hope this helps,

Roger

PS. Is there a function in PBSmapping to do this, perhaps handling 
geographical coordinates?

>
> fishlocationDF$dist=dist_shoreDF$dist[match(dist_shoreDF$coordinates, 
> fishlocationDF$coordinates)] does not work but illustrates what I am 
> trying to do.
>
> How can I deal with the two coordinates that every point has ? Would it 
> be possible to coerce both x and y-coordinate into one column in order 
> in order to apply the match() function ? Or is there a better way of 
> approaching this ? I would be grateful for a hint.
>
> Thank you for your time.
>
> Juliane
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Roger.Bivand at nhh.no  Tue Jan 20 09:05:58 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 20 Jan 2009 09:05:58 +0100 (CET)
Subject: [R-sig-Geo] conversion from tessellation in spatstat package to
 sp classes ???
In-Reply-To: <8b5938320901191343r5239c097mdd9c80741a0bac57@mail.gmail.com>
References: <8b5938320901191313w59ac91bdja420a828688c2ce0@mail.gmail.com>
	<8b5938320901191343r5239c097mdd9c80741a0bac57@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901200901240.17261@reclus.nhh.no>

On Mon, 19 Jan 2009, Volkan Kepoglu wrote:

> Is there any way to convert from tessellation to sp classes like
> SpatialLines or SpatialPolygons?
>
> library(spatstat)
> library(maptools)
> x <- runifpoint(42)
> t <- dirichlet(x)
> plot(t)
> plot(x, add=TRUE)
>
> sp <- as(t, "SpatialPolygons")
> Error in .classEnv(thisClass) :
>  unable to find an environment containing class "tess"
>
> any other suggestion?

Contributions welcome! The "tess" object has several different forms, each 
of which will need a different method. My guess would be that coercing to 
owin first, and coding the next coercion step(s) - there are also several 
types of owin - would work, but there are more methods available now from 
sp classes to spatstat classes than the reverse.

Roger

>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From T.Hengl at uva.nl  Tue Jan 20 10:03:28 2009
From: T.Hengl at uva.nl (Tomislav Hengl)
Date: Tue, 20 Jan 2009 10:03:28 +0100
Subject: [R-sig-Geo] Spatial data analysis in MATLAB / Comparison of MATLAB
	vs R
Message-ID: <770580DEE4E945E2BF1DD93A51FF47B2@pcibed193>


Dear list,

I am preparing to teach spatial data analysis at BSc level (environmental and Earth sciences). The
study programme is completely based on MATLAB, which means that I will also need to adjust (I do not
have much experience with MATLAB).

Or maybe I can give a convincing argument to my colleagues to slowly switch to R? For example, I did
a small inventory / comparison between MATLAB and R and came to this small table:

GDAL: (R) yes; (MATLAB) limited;
Geostatistics: (R) yes; (MATLAB) +;
Map plotting: (R) yes; (MATLAB) yes;
Integration with GIS: (R) yes; (MATLAB) ?;
Overlay and proximity: (R) yes (limited); (MATLAB) ?;
Point pattern analysis: (R) yes; (MATLAB) yes;
PROJ4: (R) yes; (MATLAB) ?;
Spatial data classes: (R) excellent; (MATLAB) ?;
Spatial regression: (R) yes; (MATLAB) yes;
Vector-raster conversion:  (R) limited; (MATLAB) ?;
3D visualization: (R) limited; (MATLAB) yes;

Does anybody have more experience with analysis of spatial data in MATLAB? Did anybody maybe produce
a more detailed comparison of R vs MATLAB? (I could only find this discussion forum from 2004:
http://tolstoy.newcastle.edu.au/R/help/04/04/1284.html)

Thanks!

****************************

Comparison of the web-traffic for the three statistical software websites:
http://trends.google.com/websites?q=r-project.org%2C+mathworks.com%2C+sas.com
*Note how R users are much more active during holiday times.  :)

Comparison of the web-traffic R-project vs ESRI:
http://trends.google.com/websites?q=r-project.org%2C+esri.com%2C+osgeo.org 
*ESRI community seems to be decreasing drastically! R looks stable.

****************************


Tom Hengl
http://spatial-analyst.net



From marcelino.delacruz at upm.es  Tue Jan 20 10:13:07 2009
From: marcelino.delacruz at upm.es (Marcelino de la Cruz)
Date: Tue, 20 Jan 2009 10:13:07 +0100
Subject: [R-sig-Geo] matching points by their coordinates
In-Reply-To: <alpine.LRH.2.00.0901200821310.17261@reclus.nhh.no>
References: <BAB4F703E4F0C64A9CD4C08933D31D7C034B8F36@icex3.ic.ac.uk>
	<alpine.LRH.2.00.0901200821310.17261@reclus.nhh.no>
Message-ID: <200901200916.n0K9GvRU021728@edison.ccupm.upm.es>




At 08:49 20/01/2009, Roger Bivand wrote:
>On Mon, 19 Jan 2009, Struve, Juliane wrote:
>
>>Dear list members,
>>
>>I would like to look for attributes (e.g. 
>>distance from the shore) of spatial points in 
>>other data sets (e.g. dist_shoreDF)  after 
>>matching the points in fishlocationDF and dist_shoreDF by their coordinates.
>
>The most direct way for planar coordinates is to 
>use functions in the spatstat package, to give 
>the distance between a point and a line. You'll 
>need to ceorce from sp objects to spatstat 
>objects using methods in the maptools package, something like:
>
>library(maptools)
>library(spatstat)
>fish_ppp <- as(as(fishlocationDF, "SpatialPoints"), "ppp")
>shore_psp <- as(as(shoreDF, "SpatialLines"), "psp")
>
>As far as I can see, the pairdist method exists 
>for either ppp or psp objects, but not for a combination, but I may be wrong.

Maybe

dist_fish_shore <-   project2segment(fish_ppp, shore_psp)



Best,

Marcelino



>There is an internal function called distppll() 
>which takes a matrix of points and a single line 
>segment as a matrix, which can be used, but 
>which involves some coding to extract the matrices from the input objects.
>
>http://www.csiro.au/resources/Spatial-Point-Patterns-in-R.html
>
>is a very useful resource, but there isn't too much on line segements yet.
>
>Hope this helps,
>
>Roger
>
>PS. Is there a function in PBSmapping to do 
>this, perhaps handling geographical coordinates?
>
>>
>>fishlocationDF$dist=dist_shoreDF$dist[match(dist_shoreDF$coordinates, 
>>fishlocationDF$coordinates)] does not work but 
>>illustrates what I am trying to do.
>>
>>How can I deal with the two coordinates that 
>>every point has ? Would it be possible to 
>>coerce both x and y-coordinate into one column 
>>in order in order to apply the match() function 
>>? Or is there a better way of approaching this 
>>? I would be grateful for a hint.
>>
>>Thank you for your time.
>>
>>Juliane
>>
>>         [[alternative HTML version deleted]]
>>
>>_______________________________________________
>>R-sig-Geo mailing list
>>R-sig-Geo at stat.math.ethz.ch
>>https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>--
>Roger Bivand
>Economic Geography Section, Department of Economics, Norwegian School of
>Economics and Business Administration, Helleveien 30, N-5045 Bergen,
>Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
>e-mail: Roger.Bivand at nhh.no
>
>_______________________________________________
>R-sig-Geo mailing list
>R-sig-Geo at stat.math.ethz.ch
>https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
>---------------------------------------------------------------------------------------------------
>Texto a?adido por Panda IS 2008:
>
>Este mensaje NO ha sido clasificado como SPAM. 
>Si se trata de un mensaje de correo no 
>solicitado (SPAM), haz clic en el siguiente 
>v?nculo para reclasificarlo: 
>http://localhost:6083/Panda?ID=pav_3774&SPAM=true&path=C:\Documents%20and%20Settings\mcr\Configuraci?n%20local\Datos%20de%20programa\Panda%20Software\AntiSpam
>---------------------------------------------------------------------------------------------------

________________________________

Marcelino de la Cruz Rot

Departamento de  Biolog?a Vegetal
E.U.T.I. Agr?cola
Universidad Polit?cnica de Madrid
28040-Madrid
Tel.: 91 336 54 35
Fax: 91 336 56 56
marcelino.delacruz at upm.es



From b.rowlingson at lancaster.ac.uk  Tue Jan 20 10:16:50 2009
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Tue, 20 Jan 2009 09:16:50 +0000
Subject: [R-sig-Geo] Spatial data analysis in MATLAB / Comparison of
	MATLAB vs R
In-Reply-To: <770580DEE4E945E2BF1DD93A51FF47B2@pcibed193>
References: <770580DEE4E945E2BF1DD93A51FF47B2@pcibed193>
Message-ID: <d8ad40b50901200116k345ff7f3s92ebb6c3e902c396@mail.gmail.com>

2009/1/20 Tomislav Hengl <T.Hengl at uva.nl>:

> I am preparing to teach spatial data analysis at BSc level (environmental and Earth sciences). The
> study programme is completely based on MATLAB, which means that I will also need to adjust (I do not
> have much experience with MATLAB).

 If you convert your entire study programme to R you'll annoy your
colleagues who have to learn and rewrite their courses in R. If you
just convert your spatial data analysis module to R you'll annoy your
students who'll have to learn R for this and MATLAB for everything
else. You choose :)

 Ideally all your colleagues will take to R and feel joy at the
prospect of learning new software and rewriting course notes - but how
often does that happen?

 As a first step you could try introducing Scilab or Octave to the
students so they can use a MATLAB-ish package at zero cost.

 For our undergrad maths course they use Scilab for linear
algebra-type stuff, R for stats, and Maxima for computer algebra. You
may need to really rework your programme if you want to use just R
throughout. It could be worth it.

 Don't forget the big argument. R is free and open source - it can,
like the research we publish, be freely shared. For me that's
ultimately compelling - if it's not open, it's not science; and if
it's not science, it's not a BSc.

Barry



From Maxime.Pauwels at univ-lille1.fr  Tue Jan 20 11:16:37 2009
From: Maxime.Pauwels at univ-lille1.fr (Maxime Pauwels)
Date: Tue, 20 Jan 2009 11:16:37 +0100
Subject: [R-sig-Geo] contour lines on a plot
In-Reply-To: <1232404991.7716.11.camel@Virgilio-Gomez>
References: <4974B230.10604@univ-lille1.fr>	
	<1232385413.7298.55.camel@Virgilio-Gomez>
	<4974BA57.4090907@univ-lille1.fr>	
	<1232388325.7298.59.camel@Virgilio-Gomez> <4974EE58.2050507@ub.edu>
	<1232404991.7716.11.camel@Virgilio-Gomez>
Message-ID: <4975A485.7020009@univ-lille1.fr>

Dear Virgilio and Jos?,

Congratulations for the way you succeed in putting contourline at the 
good place, although I'm not sure I understood the solution.
I'm almost able to draw myplot... but not yet.
The problem is that I can not use contourlines on a dataframe. I attache 
my datafile to help you to see what it looks like.
I tried to use contour instead of contourLines but it didn't worked.

Many thanks,

max

Virgilio Gomez Rubio a ?crit :
> Hi,
> El lun, 19-01-2009 a las 22:19 +0100, Jos? Manuel Blanco Moreno
> escribi?:
>   
>> Just a doubt... there seems that the contours are not shifted but 
>> "mirrored" (flipped) along an horizontal line?
>>     
>
> Very well spotted!!
>
> The right code should be as follows (the change is in the definition of
> 'spvolcano'):
>
> library(maptools)
>
> x <- 10*1:nrow(volcano)
> y <- 10*1:ncol(volcano)
> clv<-contourLines(x, y, volcano)
>
> res <- ContourLines2SLDF(clv)
>
> grd<-GridTopology(c(0,0), c(10, 10), dim(volcano))
> spvolcano<-SpatialGridDataFrame(grd, 
>    data.frame(altitude=as.vector((volcano[,ncol(volcano):1]))))
>
> spplot(spvolcano, sp.layout=list(list("sp.lines", res)) )
>
>
>
> Best,
>
> Virgilio
>
>
>   


-- 
Maxime Pauwels
Researcher ID: http://www.researcherid.com/rid/A-1745-2009

Laboratoire de G?n?tique et Evolution des Populations V?g?tales
http://www.univ-lille1.fr/gepv
Tel  : +33 3 20 43 40 76
Fax  : +33 3 20 43 69 79
			
?Impose ta chance, serre ton bonheur et va vers ton risque. A te regarder, ils s?habitueront.?
Ren? Char

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Str65popK15coordK.txt
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090120/a2e0c4a8/attachment.txt>

From Roger.Bivand at nhh.no  Tue Jan 20 14:58:39 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 20 Jan 2009 14:58:39 +0100 (CET)
Subject: [R-sig-Geo] New release of rgdal
In-Reply-To: <alpine.LRH.2.00.0901161938030.17533@reclus.nhh.no>
References: <alpine.LRH.2.00.0901161938030.17533@reclus.nhh.no>
Message-ID: <alpine.LRH.2.00.0901201442570.18157@reclus.nhh.no>

On Fri, 16 Jan 2009, Roger Bivand wrote:

> To all rgdal users!
>
> The new rgdal release (0.6-1) is not yet stable in some respects, some of 
> which are showing up as we go.
>
> Do not update to this release for production work yet, but do update if you 
> are willing to help sort out problems.
>
> The Windows binary from CRAN will bundle the minimal GDAL and PROJ.4 
> binaries, and their support files as before.
>
> The source package *no longer* bundles the GDAL or PROJ.4 support files - 
> bundled NAD Intel-endian binary files were causing trouble on OSX PPC for 
> understandable reasons. From 0.6-*, source-installed rgdal (all installs 
> except the Windows CRAN build) will need to rely on the local platform 
> support files. If need be, set environment variables PROJ_LIB and GDAL_DATA 
> manually, but try first to see whether GDAL and PROJ.4 autodetect correctly.
>
> Expect rapid releases for the next few days until things stabilise.

The 0.6-5 release, coming to a CRAN near you soon, is more stable. The 
CRAN Windows binary will work very much as before, but incorporates the 
latest GDAL release, with improved drivers, including the Arc ASCII grid 
driver discussed on the list recently.

Two notes for Linux users who install PROJ.4 from binary packages (GDAL 
installs are less problematic). Those using RPMs should install four 
packages: proj, proj-devel, proj-epsg, and proj-nad, in order to run 
smoothly. Users of Debian and derived distributions should note that no 
grid datum transformation files are included in the proj package - rgdal 
will install, but during ./configure, a Note: will be seen showing that 
grid datum transformation cannot be carried out.

These issues are mentioned on http://www.r-project.org/Rgeo, and in the 
package README file:

file.show(system.file("README", package="rgdal"))

In addition, you may be aware of activity going on to make the provision 
of open geostatial software easier on the Windows platform in the OSGeo4W 
project:

http://wiki.osgeo.org/wiki/OSGeo4W

The project is still at an early stage, but does provide GDAL binaries for 
Windows with more drivers than the CRAN rgdal binary package. The OSGeo4W 
installer may be downloaded from:

http://download.osgeo.org/osgeo4w/osgeo4w-setup.exe

giving a choice of packages - for rgdal, at least PROJ.4 and GDAL are 
needed. I have built a very experimental binary package of rgdal against 
OSGeo4W:

http://spatial.nhh.no/R/Devel/rgdal_0.6-6.zip

If you choose to try this preliminary version, please read:

file.show(system.file("README.windows", package="rgdal"))

for further details; in particular, note that you should start R from the 
OSGeo4W console command line, something like:

"C:\Program Files\R\R-2.8.1\bin\Rgui.exe"

in order to pick up OSGeo4W environment variables.

I'd be grateful for feedback.

Roger

>
> I apologise for doing this "live", but it is well-nigh impossible to pre-test 
> the networked build systems used to distribute software in any other way. 
> Reports of problems with the 0.6-* series will be very helpful, I will 
> tabulate them on:
>
> http://geodacenter.asu.edu/map-packages-on-cran
>
> under the rgdal entry, and note which version number resolved them and when.
>
> Roger
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From T.Hengl at uva.nl  Tue Jan 20 17:09:44 2009
From: T.Hengl at uva.nl (Tomislav Hengl)
Date: Tue, 20 Jan 2009 17:09:44 +0100
Subject: [R-sig-Geo] Spatial data analysis in MATLAB / Comparison of
	MATLAB vs R
In-Reply-To: <d8ad40b50901200116k345ff7f3s92ebb6c3e902c396@mail.gmail.com>
References: <770580DEE4E945E2BF1DD93A51FF47B2@pcibed193>
	<d8ad40b50901200116k345ff7f3s92ebb6c3e902c396@mail.gmail.com>
Message-ID: <38F09FEB892B4B2484A6063BED81BA6D@pcibed193>


Dear Barry,

Thanks for your reply.

Funnily enough, I got the same reply from the module coordinator - "you will enjoy learning MATLAB".


I have accepted to do everything in MATLAB (I do not have much choice really). Then, I might also
try Scilab afterwards and controlling Scilab from R. I will keep you informed about what I
discovered about MATLAB (at least considering the spatial analysis capabilities).

The real problem is that students want to get training in ESRI and Mathworks products, because they
think that it gives them better chances to find work in large/government companies (and this is
still largely true). So I think that we really need to 'work' on government agencies.

At least when I look at the Google trend graphs, I can see that some of the commercial players are
irreversibly flowing into a decay function  :)
 

Tom Hengl
http://spatial-analyst.net 


> -----Original Message-----
> From: b.rowlingson at googlemail.com [mailto:b.rowlingson at googlemail.com] On Behalf Of Barry
> Rowlingson
> Sent: Tuesday, January 20, 2009 10:17 AM
> To: Tomislav Hengl
> Cc: r-sig-geo at stat.math.ethz.ch
> Subject: Re: [R-sig-Geo] Spatial data analysis in MATLAB / Comparison of MATLAB vs R
> 
> 2009/1/20 Tomislav Hengl <T.Hengl at uva.nl>:
> 
> > I am preparing to teach spatial data analysis at BSc level (environmental and Earth sciences).
> The
> > study programme is completely based on MATLAB, which means that I will also need to adjust (I do
> not
> > have much experience with MATLAB).
> 
>  If you convert your entire study programme to R you'll annoy your
> colleagues who have to learn and rewrite their courses in R. If you
> just convert your spatial data analysis module to R you'll annoy your
> students who'll have to learn R for this and MATLAB for everything
> else. You choose :)
> 
>  Ideally all your colleagues will take to R and feel joy at the
> prospect of learning new software and rewriting course notes - but how
> often does that happen?
> 
>  As a first step you could try introducing Scilab or Octave to the
> students so they can use a MATLAB-ish package at zero cost.
> 
>  For our undergrad maths course they use Scilab for linear
> algebra-type stuff, R for stats, and Maxima for computer algebra. You
> may need to really rework your programme if you want to use just R
> throughout. It could be worth it.
> 
>  Don't forget the big argument. R is free and open source - it can,
> like the research we publish, be freely shared. For me that's
> ultimately compelling - if it's not open, it's not science; and if
> it's not science, it's not a BSc.
> 
> Barry



From aloboaleu at gmail.com  Tue Jan 20 19:07:21 2009
From: aloboaleu at gmail.com (Agustin Lobo)
Date: Tue, 20 Jan 2009 19:07:21 +0100
Subject: [R-sig-Geo] Passing a parameter from R to r.mapcalc ?
Message-ID: <497612D9.5000900@gmail.com>

Hi!

I have an script in R that mostly controls the
flow of grass commands through system()
I've got stuck at:

for (k in mistat[,1]){
		system("r.mapcalc 'mancha = if(manchas.clmp==k,1,0)'")


is there any way I could pass the value of k to r.mapcalc?
I was thinking on using the shell through system, something like
for (k in mistat[,1]){
		system("set k = @1")
		system("r.mapcalc 'mancha = if(manchas.clmp==$k,1,0)'")

but do not get thru,
(perhaps I'm mixing my memories of the csh and the Bourne shell...)

any help?

Agus

-- 
Dr. Agustin Lobo
Institut de Ciencies de la Terra "Jaume Almera" (CSIC)
LLuis Sole Sabaris s/n
08028 Barcelona
Spain
Tel. 34 934095410
Fax. 34 934110012
email: Agustin.Lobo at ija.csic.es
http://www.ija.csic.es/gt/obster



From Roger.Bivand at nhh.no  Tue Jan 20 19:45:39 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 20 Jan 2009 19:45:39 +0100 (CET)
Subject: [R-sig-Geo] [GRASS-stats] Passing a parameter from R to
	r.mapcalc ?
In-Reply-To: <497612D9.5000900@gmail.com>
References: <497612D9.5000900@gmail.com>
Message-ID: <alpine.LRH.2.00.0901201939250.18826@reclus.nhh.no>

On Tue, 20 Jan 2009, Agustin Lobo wrote:

> Hi!
>
> I have an script in R that mostly controls the
> flow of grass commands through system()
> I've got stuck at:
>
> for (k in mistat[,1]){
> 		system("r.mapcalc 'mancha = if(manchas.clmp==k,1,0)'")
>
>
> is there any way I could pass the value of k to r.mapcalc?
> I was thinking on using the shell through system, something like
> for (k in mistat[,1]){
> 		system("set k = @1")
> 		system("r.mapcalc 'mancha = if(manchas.clmp==$k,1,0)'")
>
> but do not get thru,
> (perhaps I'm mixing my memories of the csh and the Bourne shell...)

Please don't cross-post - people may not be subscribed to both lists and 
this may break threads.

The answer is paste(), or possibly a formatting function:

cmd <- paste("r.mapcalc \'mancha = if(manchas.clmp==", formatC(k, ...),
   ",1,0)\'", sep="")
cmd
cat(cmd, "\n")
system(cmd)

if you need more control of the string going to system(); in my 
experience, eyeballing cmd is very helpful.

Roger

>
> any help?
>
> Agus
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Roger.Bivand at nhh.no  Tue Jan 20 20:11:02 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 20 Jan 2009 20:11:02 +0100 (CET)
Subject: [R-sig-Geo] Spatial data analysis in MATLAB / Comparison of
 MATLAB vs R
In-Reply-To: <38F09FEB892B4B2484A6063BED81BA6D@pcibed193>
References: <770580DEE4E945E2BF1DD93A51FF47B2@pcibed193>
	<d8ad40b50901200116k345ff7f3s92ebb6c3e902c396@mail.gmail.com>
	<38F09FEB892B4B2484A6063BED81BA6D@pcibed193>
Message-ID: <alpine.LRH.2.00.0901201946190.18826@reclus.nhh.no>

On Tue, 20 Jan 2009, Tomislav Hengl wrote:

>
> Dear Barry,
>
> Thanks for your reply.
>
> Funnily enough, I got the same reply from the module coordinator - "you 
> will enjoy learning MATLAB".
>
>
> I have accepted to do everything in MATLAB (I do not have much choice 
> really). Then, I might also try Scilab afterwards and controlling Scilab 
> from R. I will keep you informed about what I discovered about MATLAB 
> (at least considering the spatial analysis capabilities).

Tom,

Can you try going in through the back door using R as a compute server 
from Matlab (or Arc?)? I assume that you are obliged to use Windows, but 
that does get you the R(D)COM opportunity:

http://learnserver.csd.univie.ac.at/rcomwiki/doku.php?id=r_d_com_rcom_and_and_other_software_systems

If Matlab is willing to be a client, then you can hand over some things to 
R from there. Maybe the R.matlab package can also be used with socket 
connections instead of DCOM. In fact, the more able students might find 
Python programming liberating, as I guess you can drive both Matlab and R 
as servers from a Python client - and Python is the currently prefered 
scripting language for ESRI, I believe. The key problem is representing 
objects defined in one language in others, so here points and rasters are 
OK, but lines and polygons are hard.

Note that OSGeo does Python pretty well now too - in terms of how much 
development you'll have to do to prepare the course, you may find that 
there are more packages ready for sticking together with a little language 
than in Matlab itself, and which provide a higher level of abstraction 
(richer objects) than Matlab offers. Matlab is very powerful if objects 
can be readily coerced to matrices, for example in modelling (not fitting 
models but building and calibrating systems models) - there is a different 
view of the world between S/R and Matlab, in GIScience terms a different 
ontology. The priors (model knowledge) probably have more weight among 
Matlab users, the observed data among S/R users (as a rough guess). 
Neither are as good at designing objects or programming - ideally, all 
three would suit your students.

Roger

>
> The real problem is that students want to get training in ESRI and 
> Mathworks products, because they think that it gives them better chances 
> to find work in large/government companies (and this is still largely 
> true). So I think that we really need to 'work' on government agencies.
>
> At least when I look at the Google trend graphs, I can see that some of 
> the commercial players are irreversibly flowing into a decay function :)
>
>
> Tom Hengl
> http://spatial-analyst.net
>
>
>> -----Original Message-----
>> From: b.rowlingson at googlemail.com [mailto:b.rowlingson at googlemail.com] On Behalf Of Barry
>> Rowlingson
>> Sent: Tuesday, January 20, 2009 10:17 AM
>> To: Tomislav Hengl
>> Cc: r-sig-geo at stat.math.ethz.ch
>> Subject: Re: [R-sig-Geo] Spatial data analysis in MATLAB / Comparison of MATLAB vs R
>>
>> 2009/1/20 Tomislav Hengl <T.Hengl at uva.nl>:
>>
>>> I am preparing to teach spatial data analysis at BSc level 
>>> (environmental and Earth sciences). The study programme is completely 
>>> based on MATLAB, which means that I will also need to adjust (I do not 
>>> have much experience with MATLAB).
>>
>>  If you convert your entire study programme to R you'll annoy your
>> colleagues who have to learn and rewrite their courses in R. If you
>> just convert your spatial data analysis module to R you'll annoy your
>> students who'll have to learn R for this and MATLAB for everything
>> else. You choose :)
>>
>>  Ideally all your colleagues will take to R and feel joy at the
>> prospect of learning new software and rewriting course notes - but how
>> often does that happen?
>>
>>  As a first step you could try introducing Scilab or Octave to the
>> students so they can use a MATLAB-ish package at zero cost.
>>
>>  For our undergrad maths course they use Scilab for linear
>> algebra-type stuff, R for stats, and Maxima for computer algebra. You
>> may need to really rework your programme if you want to use just R
>> throughout. It could be worth it.
>>
>>  Don't forget the big argument. R is free and open source - it can,
>> like the research we publish, be freely shared. For me that's
>> ultimately compelling - if it's not open, it's not science; and if
>> it's not science, it's not a BSc.
>>
>> Barry
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From dan.putler at sauder.ubc.ca  Wed Jan 21 00:54:11 2009
From: dan.putler at sauder.ubc.ca (Dan Putler)
Date: Tue, 20 Jan 2009 15:54:11 -0800
Subject: [R-sig-Geo] NAs returned as from and to IDs in gabrielneigh
	function in the	spdep package
Message-ID: <1232495651.6838.33.camel@whitebox>

Hi,

The issue is as in the subject. I'm running R 2.8.1 with spdep 0.4-29,
tripack 1.2-11, sp 0.9-14, maptools 0.6-13, spam 0.15-2, and Matrix
0.999375-17 under Linux (I'm still on Ubuntu Dapper). In addition to
gabrielneigh returning NAs for "from" and "to" point IDs, when the
resulting graph object is given to graph2nb, R senses a segmentation
fault and experiences a hard crash. The short (self-contained) script
below generates the error on my system.

dx <- rep(0.25*0:4,5)
dy <- c(rep(0,5),rep(0.25,5),rep(0.5,5), rep(0.75,5),rep(1,5))
exampDat <- data.frame(x=c(dx, dx, 3+dx, 3+dx), y=c(dy, 3+dy, dy, 3+dy))
plot(exampDat)
library(spdep)
exampGG <- gabrielneigh(as.matrix(exampDat))
print(data.frame(from=exampGG$from, to=exampGG$to))
# Uncomment the line below to induce a segmentation fault R crash
# exampNB <- graph2nb(exampGG)
rm(list=c("bx","by","exampDat","exampGG","exampNB"))

Dan

-- 
Dan Putler
Sauder School of Business
University of British Columbia



From giam at nus.edu.sg  Wed Jan 21 02:58:11 2009
From: giam at nus.edu.sg (Giam Xingli)
Date: Wed, 21 Jan 2009 09:58:11 +0800
Subject: [R-sig-Geo] Need help in using spdep package for running spatial
	models
Message-ID: <9BD0FDD497B6464682342F906E32305404271EC4@MBX23.stu.nus.edu.sg>

An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090121/3e3858b7/attachment.html>

From Roger.Bivand at nhh.no  Wed Jan 21 09:39:43 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 21 Jan 2009 09:39:43 +0100 (CET)
Subject: [R-sig-Geo] NAs returned as from and to IDs in gabrielneigh
 function in the	spdep package
In-Reply-To: <1232495651.6838.33.camel@whitebox>
References: <1232495651.6838.33.camel@whitebox>
Message-ID: <alpine.LRH.2.00.0901210938000.23826@reclus.nhh.no>

On Tue, 20 Jan 2009, Dan Putler wrote:

> Hi,
>
> The issue is as in the subject. I'm running R 2.8.1 with spdep 0.4-29,
> tripack 1.2-11, sp 0.9-14, maptools 0.6-13, spam 0.15-2, and Matrix
> 0.999375-17 under Linux (I'm still on Ubuntu Dapper). In addition to
> gabrielneigh returning NAs for "from" and "to" point IDs, when the
> resulting graph object is given to graph2nb, R senses a segmentation
> fault and experiences a hard crash. The short (self-contained) script
> below generates the error on my system.
>
> dx <- rep(0.25*0:4,5)
> dy <- c(rep(0,5),rep(0.25,5),rep(0.5,5), rep(0.75,5),rep(1,5))
> exampDat <- data.frame(x=c(dx, dx, 3+dx, 3+dx), y=c(dy, 3+dy, dy, 3+dy))
> plot(exampDat)
> library(spdep)
> exampGG <- gabrielneigh(as.matrix(exampDat))
> print(data.frame(from=exampGG$from, to=exampGG$to))
> # Uncomment the line below to induce a segmentation fault R crash
> # exampNB <- graph2nb(exampGG)
> rm(list=c("bx","by","exampDat","exampGG","exampNB"))

Thanks for a clear report with a reproducable example. A revision will be 
forthcoming soon, at least to block the segmentation fault.

Roger

>
> Dan
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Roger.Bivand at nhh.no  Wed Jan 21 11:30:54 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 21 Jan 2009 11:30:54 +0100 (CET)
Subject: [R-sig-Geo] NAs returned as from and to IDs in gabrielneigh
 function in the	spdep package
In-Reply-To: <alpine.LRH.2.00.0901210938000.23826@reclus.nhh.no>
References: <1232495651.6838.33.camel@whitebox>
	<alpine.LRH.2.00.0901210938000.23826@reclus.nhh.no>
Message-ID: <alpine.LRH.2.00.0901211126110.23826@reclus.nhh.no>

On Wed, 21 Jan 2009, Roger Bivand wrote:

> On Tue, 20 Jan 2009, Dan Putler wrote:
>
>> Hi,
>> 
>> The issue is as in the subject. I'm running R 2.8.1 with spdep 0.4-29,
>> tripack 1.2-11, sp 0.9-14, maptools 0.6-13, spam 0.15-2, and Matrix
>> 0.999375-17 under Linux (I'm still on Ubuntu Dapper). In addition to
>> gabrielneigh returning NAs for "from" and "to" point IDs, when the
>> resulting graph object is given to graph2nb, R senses a segmentation
>> fault and experiences a hard crash. The short (self-contained) script
>> below generates the error on my system.
>> 
>> dx <- rep(0.25*0:4,5)
>> dy <- c(rep(0,5),rep(0.25,5),rep(0.5,5), rep(0.75,5),rep(1,5))
>> exampDat <- data.frame(x=c(dx, dx, 3+dx, 3+dx), y=c(dy, 3+dy, dy, 3+dy))
>> plot(exampDat)
>> library(spdep)
>> exampGG <- gabrielneigh(as.matrix(exampDat))
>> print(data.frame(from=exampGG$from, to=exampGG$to))
>> # Uncomment the line below to induce a segmentation fault R crash
>> # exampNB <- graph2nb(exampGG)
>> rm(list=c("bx","by","exampDat","exampGG","exampNB"))
>
> Thanks for a clear report with a reproducable example. A revision will be 
> forthcoming soon, at least to block the segmentation fault.

0.4-34 submitted to CRAN, fixed this problem (too short vectors passed to 
compiled code being overrun - test now in place to force user to increase 
a multiplier factor manually). In addition, changes to GMerrorsar() and to 
the "SMA" variant of spautolm(), and other recently spotted bugs and/or 
infelicities.

Roger

>
> Roger
>
>> 
>> Dan
>> 
>> 
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From j.struve at imperial.ac.uk  Wed Jan 21 14:55:42 2009
From: j.struve at imperial.ac.uk (Struve, Juliane)
Date: Wed, 21 Jan 2009 13:55:42 +0000
Subject: [R-sig-Geo] matching points by their coordinates - Resolved
Message-ID: <5D1820C78E313F42AF9CD1C3DA846282050AFA9418@ICEXM5.ic.ac.uk>

Dear list members,

this worked for me:

1. paste() puts both x and y coordinate into one column:

Examples: 

Dist_shoreDF$coord=paste(Dist_shoreDF$UTMX,Dist_shoreDF$UTMY,sep=",")
fishmove$coord[day=i+1]=paste(fishmove$UTMX[day=i+1],fishmove$UTMY[day=i+1],sep=",")

2. Equal coordinates can be used as an index to match two points:

Example:
fishlocationDF$distance[day=i+1]=Dist_shoreDF$distance[Dist_shoreDF$coord==fishmove$coord[day=i+1]]

reads the required distance from Dist_shoreDF into fishlocationDF 

I was confused by my attempted use of match(). It dosn't seem to be necessary.

Thank you for your time and the helpful comments.

Juliane 

________________________________________
From: Marcelino de la Cruz [marcelino.delacruz at upm.es]
Sent: 20 January 2009 09:13
To: Roger.Bivand at nhh.no; Struve, Juliane
Cc: r-sig-geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] matching points by their coordinates

At 08:49 20/01/2009, Roger Bivand wrote:
>On Mon, 19 Jan 2009, Struve, Juliane wrote:
>
>>Dear list members,
>>
>>I would like to look for attributes (e.g.
>>distance from the shore) of spatial points in
>>other data sets (e.g. dist_shoreDF)  after
>>matching the points in fishlocationDF and dist_shoreDF by their coordinates.
>
>The most direct way for planar coordinates is to
>use functions in the spatstat package, to give
>the distance between a point and a line. You'll
>need to ceorce from sp objects to spatstat
>objects using methods in the maptools package, something like:
>
>library(maptools)
>library(spatstat)
>fish_ppp <- as(as(fishlocationDF, "SpatialPoints"), "ppp")
>shore_psp <- as(as(shoreDF, "SpatialLines"), "psp")
>
>As far as I can see, the pairdist method exists
>for either ppp or psp objects, but not for a combination, but I may be wrong.

Maybe

dist_fish_shore <-   project2segment(fish_ppp, shore_psp)



Best,

Marcelino



>There is an internal function called distppll()
>which takes a matrix of points and a single line
>segment as a matrix, which can be used, but
>which involves some coding to extract the matrices from the input objects.
>
>http://www.csiro.au/resources/Spatial-Point-Patterns-in-R.html
>
>is a very useful resource, but there isn't too much on line segements yet.
>
>Hope this helps,
>
>Roger
>
>PS. Is there a function in PBSmapping to do
>this, perhaps handling geographical coordinates?
>
>>
>>fishlocationDF$dist=dist_shoreDF$dist[match(dist_shoreDF$coordinates,
>>fishlocationDF$coordinates)] does not work but
>>illustrates what I am trying to do.
>>
>>How can I deal with the two coordinates that
>>every point has ? Would it be possible to
>>coerce both x and y-coordinate into one column
>>in order in order to apply the match() function
>>? Or is there a better way of approaching this
>>? I would be grateful for a hint.
>>
>>Thank you for your time.
>>
>>Juliane
>>
>>         [[alternative HTML version deleted]]
>>
>>_______________________________________________
>>R-sig-Geo mailing list
>>R-sig-Geo at stat.math.ethz.ch
>>https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>--
>Roger Bivand
>Economic Geography Section, Department of Economics, Norwegian School of
>Economics and Business Administration, Helleveien 30, N-5045 Bergen,
>Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
>e-mail: Roger.Bivand at nhh.no
>
>_______________________________________________
>R-sig-Geo mailing list
>R-sig-Geo at stat.math.ethz.ch
>https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
>---------------------------------------------------------------------------------------------------
>Texto a?adido por Panda IS 2008:
>
>Este mensaje NO ha sido clasificado como SPAM.
>Si se trata de un mensaje de correo no
>solicitado (SPAM), haz clic en el siguiente
>v?nculo para reclasificarlo:
>http://localhost:6083/Panda?ID=pav_3774&SPAM=true&path=C:\Documents%20and%20Settings\mcr\Configuraci?n%20local\Datos%20de%20programa\Panda%20Software\AntiSpam
>---------------------------------------------------------------------------------------------------

________________________________

Marcelino de la Cruz Rot

Departamento de  Biolog?a Vegetal
E.U.T.I. Agr?cola
Universidad Polit?cnica de Madrid
28040-Madrid
Tel.: 91 336 54 35
Fax: 91 336 56 56
marcelino.delacruz at upm.es



From enrico.guastaldi at gmail.com  Thu Jan 22 16:15:20 2009
From: enrico.guastaldi at gmail.com (Enrico Guastaldi)
Date: Thu, 22 Jan 2009 16:15:20 +0100
Subject: [R-sig-Geo] strange performances of R graphic window under Linux
	and MS WIndows
Message-ID: <7ce8d7d30901220715k43631b0bvd8d0828ab8e88103@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090122/5b6472b3/attachment.pl>

From b.rowlingson at lancaster.ac.uk  Thu Jan 22 16:29:15 2009
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Thu, 22 Jan 2009 15:29:15 +0000
Subject: [R-sig-Geo] strange performances of R graphic window under
	Linux and MS WIndows
In-Reply-To: <7ce8d7d30901220715k43631b0bvd8d0828ab8e88103@mail.gmail.com>
References: <7ce8d7d30901220715k43631b0bvd8d0828ab8e88103@mail.gmail.com>
Message-ID: <d8ad40b50901220729m3c4e3876s5f576e1e6a8ecb31@mail.gmail.com>

2009/1/22 Enrico Guastaldi <enrico.guastaldi at gmail.com>:

> Moreover, the graphic result is very poor, if I compare the resolution of
> two graphic windows (see attached file, Linux ont he left, and Windows on
> the right: the latter is really much better!!!)
>
> What I'm doing wrong? Or, what is wrong in X configuration of our Linux
> computers?
> Remeber that R in MS Windows under virtual machine is 10 times faster!

 Cairo?!

 Your attachments have been stripped (or you forgot to attach them),
but latest R versions use the Cairo graphics 'engine', which produces
higher quality output at a speed cost. You can fire up a non-Cairo
device with X11(type="Xlib").
 The difference in speed is a factor 5 on my machine:

 > X11(type="Xlib")
 > system.time(pairs(USJudgeRatings))
   user  system elapsed
  0.176   0.004   0.407
 > system.time(pairs(USJudgeRatings))
   user  system elapsed
  0.836   0.252   2.398

 Cairo graphics can look a bit 'blurred' because of the anti-aliasing.

Barry



From Roger.Bivand at nhh.no  Thu Jan 22 16:35:54 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 22 Jan 2009 16:35:54 +0100 (CET)
Subject: [R-sig-Geo] strange performances of R graphic window under
 Linux and MS WIndows
In-Reply-To: <7ce8d7d30901220715k43631b0bvd8d0828ab8e88103@mail.gmail.com>
References: <7ce8d7d30901220715k43631b0bvd8d0828ab8e88103@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901221625120.5960@reclus.nhh.no>

On Thu, 22 Jan 2009, Enrico Guastaldi wrote:

> Dear list members,
> I'm Kubuntu 8.10 + KDE4.1 user, but in other "older" kubuntu (8.04 + KDE3.5)
> machine it happens the same strange think.
> The performance of R graphic window under Linux are very poor compared with
> MS WIndows, even if MS Windows is working under a Virtual machine: R under
> Linux is more time consuming in performing a graphic plot.
> In terms of time, R under Linux needs almost 10 seconds in order to
> construct the attached graph, the result of this code:
>
> pairs(USJudgeRatings)
>
> while R under MS Windows requires less than 1 second!
>
> Moreover, the graphic result is very poor, if I compare the resolution of
> two graphic windows (see attached file, Linux ont he left, and Windows on
> the right: the latter is really much better!!!)
>
> What I'm doing wrong? Or, what is wrong in X configuration of our Linux
> computers?

Probably wrongly configured. Note that the timing for x11(type="Xlib") is 
comparable with Windows, see capabilities() to see if you have "cairo" 
built. If it is built, it will be used, because it gives graphics output 
what is (more) device independent (looks the same on different devices), 
but may take longer. If I remember correctly, it also needs some pango 
packages, and things like font placings may depend on that.

This question is more appropriate for R-help.

Roger

PS. your attached figures did not get through - R mailing list sites have 
an explicit policy on attachments, set out in the posting guide at:

http://www.r-project.org/mail.html#instructions

http://www.r-project.org/posting-guide.html

Your HTML-formatted version was discarded - see the instructions to see 
how to make your mail client only send plain text. If you had attached a 
PNG graphics file, it would (probably) have got through.

> Remeber that R in MS Windows under virtual machine is 10 times faster!
>
> Any suggetions?
>
> Thanks,
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From greenberg at ucdavis.edu  Thu Jan 22 22:59:02 2009
From: greenberg at ucdavis.edu (Jonathan Greenberg)
Date: Thu, 22 Jan 2009 13:59:02 -0800
Subject: [R-sig-Geo] Coercing multiband readGDAL objects to a
	matrix/vector...
Message-ID: <4978EC26.9060407@ucdavis.edu>

I was hoping I could get some info on how to coerce the type of object 
readGDAL produces, assuming its a multiband object, into an R matrix (I 
just want the raster values in the matrix)?  Thanks!

--j

-- 

Jonathan A. Greenberg, PhD
Postdoctoral Scholar
Center for Spatial Technologies and Remote Sensing (CSTARS)
University of California, Davis
One Shields Avenue
The Barn, Room 250N
Davis, CA 95616
Cell: 415-794-5043
AIM: jgrn307, MSN: jgrn307 at hotmail.com, Gchat: jgrn307



From mdsumner at utas.edu.au  Thu Jan 22 23:27:48 2009
From: mdsumner at utas.edu.au (Michael Sumner)
Date: Fri, 23 Jan 2009 9:27:48 +1100
Subject: [R-sig-Geo] Coercing multiband readGDAL objects to a
 matrix/vector...
Message-ID: <200901222227.n0MMRmrh027421@corinna.its.utas.edu.au>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090123/953a9893/attachment.pl>

From Roger.Bivand at nhh.no  Fri Jan 23 11:01:21 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 23 Jan 2009 11:01:21 +0100 (CET)
Subject: [R-sig-Geo] readGDAL() and HDF5 files
In-Reply-To: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
Message-ID: <alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>

On Fri, 16 Jan 2009, Sebastian P. Luque wrote:

> Hi,
>
> I'm trying to use HDF5 files with this structure:

Sorry for the delay. Having now set up a reprodicable route (OSGeo4W GDAL 
and drivers, rgdal built against OSGeo4W as in a posting a couple of days 
ago), I can see the problem, but have no resolution.

Doing gdalinfo on the data itself, I see geographical coordinates, not 
projected. GDAL does not retrieve the grid metadata correctly, and assigns 
default 1x1 grid cells starting at c(0.5, 0.5). Using gdal_translate to 
convert it to a GTiff, I see that I have to set p4s to NA to read at all, 
and the problems remain. I would be interested in knowing who or what 
wrote the HDF5 file, because it doesn't seem to be what it says it is (no 
grid metadata, different CRS from your assumption), and so the data may 
actually be in the wrong order too.

Roger

PS - I can't see that you've asked on the GDAL list, hence the reply here.

>
> ---<--------------------cut here---------------start------------------->---
> $ gdalinfo conc_200901011200.hdf
> Driver: HDF5/Hierarchical Data Format Release 5
> Files: conc_200901011200.hdf
> Size is 512, 512
> Coordinate System is `'
> Subdatasets:
>  SUBDATASET_0_NAME=HDF5:"conc_200901011200.hdf"://Data/data[00]
>  SUBDATASET_0_DESC=[760x1120] //Data/data[00] (32-bit floating-point)
> Corner Coordinates:
> Upper Left  (    0.0,    0.0)
> Lower Left  (    0.0,  512.0)
> Upper Right (  512.0,    0.0)
> Lower Right (  512.0,  512.0)
> Center      (  256.0,  256.0)
> ---<--------------------cut here---------------end--------------------->---
>
> The file (467 kb placed in
> http://members.shaw.ca/sluque/conc_200901011200.hdf) is a grid of a
> single variable (ice concentration) in a well defined polar
> stereographic projection, that loads ok in R, via rgdal's readGDAL():
>
> ---<--------------------cut here---------------start------------------->---
> R> p4s <- "+proj=stere +a=6378273 +b=6356889.44891 +lat_0=90 +lat_ts=70 +lon_0=-45"
> R> ice <- readGDAL("HDF5:\"conc_200901011200.hdf\"://Data/data[00]", p4s=p4s)
> HDF5:"conc_200901011200.hdf"://Data/data[00] has GDAL driver HDF5Image
> and has 760 rows and 1120 columns
> R> summary(ice)
> Object of class SpatialGridDataFrame
> Coordinates:
>  min  max
> x   0 1120
> y   0  760
> Is projected: TRUE
> proj4string :
> [+proj=stere +a=6378273 +b=6356889.44891 +lat_0=90 +lat_ts=70 +lon_0=-45]
> Number of points: 2
> Grid attributes:
>  cellcentre.offset cellsize cells.dim
> x               0.5        1      1120
> y               0.5        1       760
> Data attributes:
>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
> -32800     -99     -99    -117       0     100
> R> ## We are concerned only with the 0-100 range; other values are codes with
> R> ## various meanings, so we remove them
> R> ice at data[ice at data[[1]] < 0 | ice at data[[1]] > 100, ] <- NA
> R> summary(ice)
> Object of class SpatialGridDataFrame
> Coordinates:
>  min  max
> x   0 1120
> y   0  760
> Is projected: TRUE
> proj4string :
> [+proj=stere +a=6378273 +b=6356889.44891 +lat_0=90 +lat_ts=70 +lon_0=-45]
> Number of points: 2
> Grid attributes:
>  cellcentre.offset cellsize cells.dim
> x               0.5        1      1120
> y               0.5        1       760
> Data attributes:
>    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's
>     0.0      0.0      0.0     23.3     36.7    100.0 478521.0
> ## but something is wrong with visualizing these data
> pdf("~/tmp/ice.pdf")
> spplot(ice)
> dev.off()
> R> sessionInfo()
> R version 2.8.1 (2008-12-22)
> x86_64-pc-linux-gnu
>
> locale:
> LC_CTYPE=en_CA.UTF-8;LC_NUMERIC=C;LC_TIME=en_CA.UTF-8;LC_COLLATE=en_CA.UTF-8;LC_MONETARY=C;LC_MESSAGES=en_CA.UTF-8;LC_PAPER=en_CA.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_CA.UTF-8;LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] rgdal_0.5-35    sp_0.9-29       slmisc_0.7.0    lattice_0.17-20
>
> loaded via a namespace (and not attached):
> [1] grid_2.8.1
> ---<--------------------cut here---------------end--------------------->---
>
> I'm not attaching the resulting file because it's too large.  However,
> the plot should look like http://members.shaw.ca/sluque/full.ps I'd
> appreciate any feedback on what the problem might be.  Thanks.
>
>
> Cheers,
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From spluque at gmail.com  Fri Jan 23 16:15:39 2009
From: spluque at gmail.com (Sebastian P. Luque)
Date: Fri, 23 Jan 2009 09:15:39 -0600
Subject: [R-sig-Geo] readGDAL() and HDF5 files
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
Message-ID: <871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>

On Fri, 23 Jan 2009 11:01:21 +0100 (CET),
Roger Bivand <Roger.Bivand at nhh.no> wrote:

> On Fri, 16 Jan 2009, Sebastian P. Luque wrote:
>> Hi,

>> I'm trying to use HDF5 files with this structure:

> Sorry for the delay. Having now set up a reprodicable route (OSGeo4W
> GDAL and drivers, rgdal built against OSGeo4W as in a posting a couple
> of days ago), I can see the problem, but have no resolution.

> Doing gdalinfo on the data itself, I see geographical coordinates, not
> projected. GDAL does not retrieve the grid metadata correctly, and
> assigns default 1x1 grid cells starting at c(0.5, 0.5). Using
> gdal_translate to convert it to a GTiff, I see that I have to set p4s
> to NA to read at all, and the problems remain. I would be interested
> in knowing who or what wrote the HDF5 file, because it doesn't seem to
> be what it says it is (no grid metadata, different CRS from your
> assumption), and so the data may actually be in the wrong order too.

Thanks for looking into this Roger.  The data are distributed by the
OSI-SAF group (http://www.osi-saf.org).  I was able to work with the
data using the NetCDF files they distribute (for a subset of their data
for now), using NetCDF tools outside R.  However, I'd like to do it more
directly from R.

In the NetCDF files, longitude, latitude, and the data, are stored in
separate data subsets.  The grid is produced using the CRS specification
I provided (from OSI-SAF's documentation), however I cannot see where
the actual coordinates in that projection are in the files.  The
geographical coordinates are the inverse-projected coordinates of the
grid, hence not a regular grid.

I might ask in the GDAL list for more help.


Cheers,

-- 
Seb



From T.Hengl at uva.nl  Fri Jan 23 16:50:22 2009
From: T.Hengl at uva.nl (Tomislav Hengl)
Date: Fri, 23 Jan 2009 16:50:22 +0100
Subject: [R-sig-Geo] The geonames.org server changed / geonames package
Message-ID: <3125260B4A3E4758AFD14F6DA6B87ACA@pcibed193>


Hi Barry, Edzer,

Just to let you know that geonames.org server changed from "ws.geonames.org" to "ws5.geonames.org"

See the info at: http://www.geonames.org/export/ 

Maybe you should add to your R package "geonames" an option to specify the server name manually,
e.g.:

setGNserver <- "ws5.geonames.org"


PS: Does anybody know more about how to utilize the Google maps services in R
(http://code.google.com/apis/maps/documentation/services.html)? (i.e. to get the same type of output
as in the case of geonames.org). These need to be combined with some Java script or similar right?

My idea is to automate the way to save an image shown in Google maps (e.g. as TIF), then obtain the
bounding coordinates, import to a GIS and use the image (high res satellite imagery) as a GIS layer.


Tom Hengl
http://spatial-analyst.net



From b.rowlingson at lancaster.ac.uk  Fri Jan 23 17:34:07 2009
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Fri, 23 Jan 2009 16:34:07 +0000
Subject: [R-sig-Geo] The geonames.org server changed / geonames package
In-Reply-To: <3125260B4A3E4758AFD14F6DA6B87ACA@pcibed193>
References: <3125260B4A3E4758AFD14F6DA6B87ACA@pcibed193>
Message-ID: <d8ad40b50901230834q2aecaae6obc2ca53171d6a379@mail.gmail.com>

2009/1/23 Tomislav Hengl <T.Hengl at uva.nl>:
>
> Hi Barry, Edzer,
>
> Just to let you know that geonames.org server changed from "ws.geonames.org" to "ws5.geonames.org"
>
> See the info at: http://www.geonames.org/export/
>
> Maybe you should add to your R package "geonames" an option to specify the server name manually,
> e.g.:
>
> setGNserver <- "ws5.geonames.org"

 Ouch! Thanks for that. The domain name is only in one place in the
code, but I never thought they'd change it! They say it's only
temporary so maybe it'll be changed back before I get round to
implementing an option.

>
> PS: Does anybody know more about how to utilize the Google maps services in R
> (http://code.google.com/apis/maps/documentation/services.html)? (i.e. to get the same type of output
> as in the case of geonames.org). These need to be combined with some Java script or similar right?
>
> My idea is to automate the way to save an image shown in Google maps (e.g. as TIF), then obtain the
> bounding coordinates, import to a GIS and use the image (high res satellite imagery) as a GIS layer.

 I'd watch google's copyright on map images if you do that...

 The problem is that a google map isn't a single image, but a number
of tiles and overlays that are made into a full map using javascript
in the browser. You can get the map tiles easily enough:

http://khm1.google.com/kh?v=35&hl=en&x=3&y=5&z=4

 I think google don't make it easy (for example, by providing their
imagery as a WMS server) on purpose.

Barry



From greenberg at ucdavis.edu  Fri Jan 23 20:00:30 2009
From: greenberg at ucdavis.edu (Jonathan Greenberg)
Date: Fri, 23 Jan 2009 11:00:30 -0800
Subject: [R-sig-Geo] Coercing multiband readGDAL objects to a
	matrix/vector...
In-Reply-To: <200901222227.n0MMRmrh027421@corinna.its.utas.edu.au>
References: <200901222227.n0MMRmrh027421@corinna.its.utas.edu.au>
Message-ID: <497A13CE.5070309@ucdavis.edu>

Michael:

    Thank you for your prompt reply -- if I wanted to extract multiple 
bands in a single call, how would I do that?  I suppose I could do it 
with a for-next loop, but it seems there is probably some simple way of 
doing this:

as.matrix(x[1:3]) (doesn't work, but the idea is I want bands 1-3 in this matrix).

--j




Michael Sumner wrote:
> Hello, 
>
> You can use either as.imageSpatialGridDataFrame(x[1]) or as.matrix(x[1]), 
> where "x" is a SpatialGridDataFrame or SpatialPixelsDataFrame.
>
> The "1" index assumes you want the first band, replace as appropriate. 
>
> The first gives you a list with x, y, z components in the convention
> expected by image(), so
> as.imageSpatialGridDataFrame(x[1])$z is the matrix. 
>
> The second returns the matrix directly but in a different orientation. 
>
> HTH
>
> Regards, Mike. 
>
>
> ==============Original message text===============
> On Fri, 23 Jan 2009 8:59:02 +1100 Jonathan Greenberg wrote:
>
> I was hoping I could get some info on how to coerce the type of object 
> readGDAL produces, assuming its a multiband object, into an R matrix (I 
> just want the raster values in the matrix)?  Thanks!
>
> --j
>
>



From Virgilio.Gomez at uclm.es  Fri Jan 23 20:42:13 2009
From: Virgilio.Gomez at uclm.es (Virgilio Gomez Rubio)
Date: Fri, 23 Jan 2009 20:42:13 +0100
Subject: [R-sig-Geo] contour lines on a plot
In-Reply-To: <4975A485.7020009@univ-lille1.fr>
References: <4974B230.10604@univ-lille1.fr>
	<1232385413.7298.55.camel@Virgilio-Gomez>
	<4974BA57.4090907@univ-lille1.fr>
	<1232388325.7298.59.camel@Virgilio-Gomez>  <4974EE58.2050507@ub.edu>
	<1232404991.7716.11.camel@Virgilio-Gomez>
	<4975A485.7020009@univ-lille1.fr>
Message-ID: <1232739733.7289.2.camel@Virgilio-Gomez>

Dear Maxime,

> Congratulations for the way you succeed in putting contourline at the 
> good place, although I'm not sure I understood the solution.
> I'm almost able to draw myplot... but not yet.
> The problem is that I can not use contourlines on a dataframe. I attache 
> my datafile to help you to see what it looks like.
> I tried to use contour instead of contourLines but it didn't worked.

The following linesw of code will get you some spatial interpolation using IDW (extension to ordinary kringing is very simple) and the contour lines you seek:

#
#
#

#Read data
library(sp)
library(gstat)
d<-read.table(file="Str65popK15coordK.txt", header=TRUE)
coordinates(d)<-~long+lat
proj4string(d)<-CRS("+proj=longlat")


#create ? grid to perform kriging
x.range=c(-4.5,30)
y.range=c(40,55)
grd<-expand.grid(x=seq(from=x.range[1], to=x.range[2], by=1/6), 
   y=seq(from=y.range[1], to=y.range[2], by=1/6))
coordinates(grd)=~x+y
gridded(grd)=TRUE
proj4string(grd)<-CRS("+proj=longlat")

#IDW
g<-gstat(id="K1", formula=K1~1, data=d)
p<-predict(g,  newdata=grd)

#Get contour lines
library(maptools)
img<-as(p, "SpatialGridDataFrame")
img1<-as.image.SpatialGridDataFrame(img["K1.pred"])
CL<-contourLines(img1, levels=1:9/10)
CLSL<-ContourLines2SLDF(CL)

#Display results
pts<-list("sp.points", d,pch=20, col="black", cex=1)
lns<-list("sp.lines", CLSL )
spplot(p,zcol="K1.pred",col.regions=gray(0:100/100), cuts=40, 
   sp.layout=list(pts, lns), pretty=T)


Hope this helps,

Virgilio



From mdsumner at utas.edu.au  Fri Jan 23 21:50:58 2009
From: mdsumner at utas.edu.au (Michael Sumner)
Date: Sat, 24 Jan 2009 07:50:58 +1100
Subject: [R-sig-Geo] Coercing multiband readGDAL objects to a
	matrix/vector...
In-Reply-To: <497A13CE.5070309@ucdavis.edu>
References: <200901222227.n0MMRmrh027421@corinna.its.utas.edu.au>
	<497A13CE.5070309@ucdavis.edu>
Message-ID: <497A2DB2.40101@utas.edu.au>


Can you provide more detail as to what you mean?

If you want more than one band in the matrix you'll need to pre-allocate 
the result and use sub-indexing into that matrix (2D).

In one step you could access the bands from the Spatial*DataFrame 
directly as columns/vectors, but you'd have to handle the orientation 
specially.

Perhaps you actually want the 3 bands as a 3D array?

Here's an example of that.

library(sp)
data(meuse.grid)
m = SpatialPixelsDataFrame(points = meuse.grid[c("x", "y")], data = 
meuse.grid)

dimXY <- getGridTopology(m)@cells.dim  ## the X/Y dimensions of the result

## the 3D result
result <- array(NA, c(dimXY, 3))

## slot each band matrix into the 3D array
for (i in 1:3) {
    result[,,i] <- as.image.SpatialGridDataFrame(m[i])$z
}
## check the result

image(result[,,1])
image(result[,,2])
image(result[,,3])

Regards, Mike.

Jonathan Greenberg wrote:
> Michael:
>
>    Thank you for your prompt reply -- if I wanted to extract multiple 
> bands in a single call, how would I do that?  I suppose I could do it 
> with a for-next loop, but it seems there is probably some simple way 
> of doing this:
>
> as.matrix(x[1:3]) (doesn't work, but the idea is I want bands 1-3 in 
> this matrix).
>
> --j
>
>
>
>
> Michael Sumner wrote:
>> Hello,
>> You can use either as.imageSpatialGridDataFrame(x[1]) or 
>> as.matrix(x[1]), where "x" is a SpatialGridDataFrame or 
>> SpatialPixelsDataFrame.
>>
>> The "1" index assumes you want the first band, replace as appropriate.
>> The first gives you a list with x, y, z components in the convention
>> expected by image(), so
>> as.imageSpatialGridDataFrame(x[1])$z is the matrix.
>> The second returns the matrix directly but in a different orientation.
>> HTH
>>
>> Regards, Mike.
>>
>> ==============Original message text===============
>> On Fri, 23 Jan 2009 8:59:02 +1100 Jonathan Greenberg wrote:
>>
>> I was hoping I could get some info on how to coerce the type of 
>> object readGDAL produces, assuming its a multiband object, into an R 
>> matrix (I just want the raster values in the matrix)?  Thanks!
>>
>> --j
>>
>>   
> ------------------------------------------------------------------------
>
>
> No virus found in this incoming message.
> Checked by AVG - http://www.avg.com 
> Version: 8.0.176 / Virus Database: 270.10.12/1910 - Release Date: 22/01/2009 6:28 PM
>
>



From mdsumner at utas.edu.au  Fri Jan 23 22:11:15 2009
From: mdsumner at utas.edu.au (Michael Sumner)
Date: Sat, 24 Jan 2009 08:11:15 +1100
Subject: [R-sig-Geo] readGDAL() and HDF5 files
In-Reply-To: <871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
	<871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
Message-ID: <497A3273.1030003@utas.edu.au>

Hi Sebastian,

When you say the geographic coordinates are not a regular grid - is it 
that the actual grid is Mercator but the NetCDF file stores an X and Y 
vector separately for each unique longitude and latitude? I've seen this 
many times, but never with enough metadata to determine that without 
guessing. I've seen some documents that refer to the source grid as 
being in Mercator, but never any that mention explicitly the method used 
to generate the NetCDF file from those.

If this is the case for your data, I've had success by figuring out an 
offset/scale value that work sufficiently by assuming a Mercator grid

Specifically this one but sometimes with an extra X offset to overcome 
hemisphere shift.

CRSargs(CRS("+proj=merc"))

I don't have the details available today, but I can dig them up if that 
sounds promising. Also, I'd be interested to hear any details you have 
about the grids you are using, whether they use this Mercator-kludge or 
not.

Cheers, Mike.


Sebastian P. Luque wrote:
> On Fri, 23 Jan 2009 11:01:21 +0100 (CET),
> Roger Bivand <Roger.Bivand at nhh.no> wrote:
>
>   
>> On Fri, 16 Jan 2009, Sebastian P. Luque wrote:
>>     
>>> Hi,
>>>       
>
>   
>>> I'm trying to use HDF5 files with this structure:
>>>       
>
>   
>> Sorry for the delay. Having now set up a reprodicable route (OSGeo4W
>> GDAL and drivers, rgdal built against OSGeo4W as in a posting a couple
>> of days ago), I can see the problem, but have no resolution.
>>     
>
>   
>> Doing gdalinfo on the data itself, I see geographical coordinates, not
>> projected. GDAL does not retrieve the grid metadata correctly, and
>> assigns default 1x1 grid cells starting at c(0.5, 0.5). Using
>> gdal_translate to convert it to a GTiff, I see that I have to set p4s
>> to NA to read at all, and the problems remain. I would be interested
>> in knowing who or what wrote the HDF5 file, because it doesn't seem to
>> be what it says it is (no grid metadata, different CRS from your
>> assumption), and so the data may actually be in the wrong order too.
>>     
>
> Thanks for looking into this Roger.  The data are distributed by the
> OSI-SAF group (http://www.osi-saf.org).  I was able to work with the
> data using the NetCDF files they distribute (for a subset of their data
> for now), using NetCDF tools outside R.  However, I'd like to do it more
> directly from R.
>
> In the NetCDF files, longitude, latitude, and the data, are stored in
> separate data subsets.  The grid is produced using the CRS specification
> I provided (from OSI-SAF's documentation), however I cannot see where
> the actual coordinates in that projection are in the files.  The
> geographical coordinates are the inverse-projected coordinates of the
> grid, hence not a regular grid.
>
> I might ask in the GDAL list for more help.
>
>
> Cheers,
>
>   
> ------------------------------------------------------------------------
>
>
> No virus found in this incoming message.
> Checked by AVG - http://www.avg.com 
> Version: 8.0.176 / Virus Database: 270.10.12/1910 - Release Date: 22/01/2009 6:28 PM
>
>



From spluque at gmail.com  Sat Jan 24 00:05:10 2009
From: spluque at gmail.com (Sebastian P. Luque)
Date: Fri, 23 Jan 2009 17:05:10 -0600
Subject: [R-sig-Geo] readGDAL() and HDF5 files
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
	<871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
	<497A3273.1030003@utas.edu.au>
Message-ID: <873af9lj2x.fsf@patagonia.sebmags.homelinux.org>

On Sat, 24 Jan 2009 08:11:15 +1100,
Michael Sumner <mdsumner at utas.edu.au> wrote:

> Hi Sebastian, When you say the geographic coordinates are not a
> regular grid - is it that the actual grid is Mercator but the NetCDF
> file stores an X and Y vector separately for each unique longitude and
> latitude? I've seen this many times, but never with enough metadata to
> determine that without guessing. I've seen some documents that refer
> to the source grid as being in Mercator, but never any that mention
> explicitly the method used to generate the NetCDF file from those.

> If this is the case for your data, I've had success by figuring out an
> offset/scale value that work sufficiently by assuming a Mercator grid

> Specifically this one but sometimes with an extra X offset to overcome
> hemisphere shift.

> CRSargs(CRS("+proj=merc"))

> I don't have the details available today, but I can dig them up if
> that sounds promising. Also, I'd be interested to hear any details you
> have about the grids you are using, whether they use this
> Mercator-kludge or not.

Thanks for the feedback.

You're right in that the geographic coordinates are not a regular grid,
but separate data subsets in the NetCDF file, with the actual grid being
in a polar stereographic projection (the one in my first post).  The
actual coordinates of the grid are not available in any file (NetCDF nor
HDF5), and neither these nor the geographical coordinates in the HDF5
files, but that doesn't matter in my case because I need to subset a
smaller area, grid at an appropriate resolution using the geographical
coordinates, and reproject to a different projection for my area.  After
all, it's simple enough to access the geographical coordinates from any
of the NetCDF files to map the grid onto such a coordinate system.

Therefore, for working with these grids in R, I'd be happy if I could
just load the grid correctly using the arbitrary grid coordinates that
readGDAL() builds from the HDF5 file.  I haven't managed to read the
NetCDF files into R (R segfaults), so things look better with HDF5 for
working in R with these data.  The example I showed (and that Roger
reproduced) builds a grid with the wrong dimensions.  This is what the
header of the whole file (this is a new file, with the same structure as
the one I showed) says (using HDF5 tools,
http://hdf.ncsa.uiuc.edu/HDF5):

---<--------------------cut here---------------start------------------->---
$ h5dump -H ice_conc_nh_200901011200.hdf 
HDF5 "ice_conc_nh_200901011200.hdf" {
GROUP "/" {
   GROUP "Data" {
      DATASET "data[00]" {
         DATATYPE  H5T_IEEE_F32LE
         DATASPACE  SIMPLE { ( 760, 1120 ) / ( 760, 1120 ) }
         ATTRIBUTE "Description" {
            DATATYPE  H5T_STRING {
                  STRSIZE 16;
                  STRPAD H5T_STR_NULLTERM;
                  CSET H5T_CSET_ASCII;
                  CTYPE H5T_C_S1;
               }
            DATASPACE  SIMPLE { ( 1 ) / ( 1 ) }
         }
      }
   }
   DATASET "Header" {
      DATATYPE  H5T_COMPOUND {
         H5T_STRING {
            STRSIZE 32;
            STRPAD H5T_STR_NULLTERM;
            CSET H5T_CSET_ASCII;
            CTYPE H5T_C_S1;
         } "source";
         H5T_STRING {
            STRSIZE 16;
            STRPAD H5T_STR_NULLTERM;
            CSET H5T_CSET_ASCII;
            CTYPE H5T_C_S1;
         } "product";
         H5T_STRING {
            STRSIZE 16;
            STRPAD H5T_STR_NULLTERM;
            CSET H5T_CSET_ASCII;
            CTYPE H5T_C_S1;
         } "area";
         H5T_STRING {
            STRSIZE 128;
            STRPAD H5T_STR_NULLTERM;
            CSET H5T_CSET_ASCII;
            CTYPE H5T_C_S1;
         } "projstr";
         H5T_STD_U32LE "iw";
         H5T_STD_U32LE "ih";
         H5T_STD_U16LE "z";
         H5T_IEEE_F32LE "Ax";
         H5T_IEEE_F32LE "Ay";
         H5T_IEEE_F32LE "Bx";
         H5T_IEEE_F32LE "By";
         H5T_STD_U32LE "year";
         H5T_STD_U16LE "month";
         H5T_STD_U16LE "day";
         H5T_STD_U16LE "hour";
         H5T_STD_U16LE "minute";
      }
      DATASPACE  SIMPLE { ( 1 ) / ( 1 ) }
   }
}
}
---<--------------------cut here---------------end--------------------->---

and the grid should have 1120 rows and 760 columns, as displayed by
gdalinfo on the actual data:

---<--------------------cut here---------------start------------------->---
$ gdalinfo HDF5:"ice_conc_nh_200901011200.hdf"://Data/data[00]
Driver: HDF5Image/HDF5 Dataset
Files: none associated
Size is 1120, 760
Coordinate System is:
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        TOWGS84[0,0,0,0,0,0,0],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0,
        AUTHORITY["EPSG","8901"]],
    UNIT["degree",0.0174532925199433,
        AUTHORITY["EPSG","9108"]],
    AXIS["Lat",NORTH],
    AXIS["Long",EAST],
    AUTHORITY["EPSG","4326"]]
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0,  760.0)
Upper Right ( 1120.0,    0.0)
Lower Right ( 1120.0,  760.0)
Center      (  560.0,  380.0)
Band 1 Block=1120x1 Type=Float32, ColorInterp=Undefined
  Metadata:
    data[00]:Description=Ice Conc
---<--------------------cut here---------------end--------------------->---

but readGDAL() apparently read the dimensions in the opposite order:

---<--------------------cut here---------------start------------------->---
R> summary(ice)
Object of class SpatialGridDataFrame
Coordinates:
  min  max
x   0 1120
y   0  760
Is projected: NA 
proj4string : [NA]
Number of points: 2
Grid attributes:
  cellcentre.offset cellsize cells.dim
x               0.5        1      1120
y               0.5        1       760
Data attributes:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 -32800     -99     -99    -117       0     100 
---<--------------------cut here---------------end--------------------->---

Does this make sense? and could this be the problem?  The data that are
read into the `ice' object do look ok via summary(ice), but the way
they're mapped onto the grid does not.


Cheers,

-- 
Seb



From enrico.guastaldi at gmail.com  Sat Jan 24 09:26:53 2009
From: enrico.guastaldi at gmail.com (Enrico Guastaldi)
Date: Sat, 24 Jan 2009 09:26:53 +0100
Subject: [R-sig-Geo] strange performances of R graphic window under
	Linux and MS WIndows
In-Reply-To: <d8ad40b50901220729m3c4e3876s5f576e1e6a8ecb31@mail.gmail.com>
References: <7ce8d7d30901220715k43631b0bvd8d0828ab8e88103@mail.gmail.com>
	<d8ad40b50901220729m3c4e3876s5f576e1e6a8ecb31@mail.gmail.com>
Message-ID: <7ce8d7d30901240026x6a510166md1cc05c4d1bc34b7@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090124/b7d2fcb6/attachment.pl>

From Roger.Bivand at nhh.no  Sat Jan 24 12:56:13 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sat, 24 Jan 2009 12:56:13 +0100 (CET)
Subject: [R-sig-Geo] readGDAL() and HDF5 files
In-Reply-To: <873af9lj2x.fsf@patagonia.sebmags.homelinux.org>
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
	<871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
	<497A3273.1030003@utas.edu.au>
	<873af9lj2x.fsf@patagonia.sebmags.homelinux.org>
Message-ID: <alpine.LRH.2.00.0901241136580.6867@reclus.nhh.no>

On Fri, 23 Jan 2009, Sebastian P. Luque wrote:

> On Sat, 24 Jan 2009 08:11:15 +1100,
> Michael Sumner <mdsumner at utas.edu.au> wrote:
>
>> Hi Sebastian, When you say the geographic coordinates are not a
>> regular grid - is it that the actual grid is Mercator but the NetCDF
>> file stores an X and Y vector separately for each unique longitude and
>> latitude? I've seen this many times, but never with enough metadata to
>> determine that without guessing. I've seen some documents that refer
>> to the source grid as being in Mercator, but never any that mention
>> explicitly the method used to generate the NetCDF file from those.
>
>> If this is the case for your data, I've had success by figuring out an
>> offset/scale value that work sufficiently by assuming a Mercator grid
>
>> Specifically this one but sometimes with an extra X offset to overcome
>> hemisphere shift.
>
>> CRSargs(CRS("+proj=merc"))
>
>> I don't have the details available today, but I can dig them up if
>> that sounds promising. Also, I'd be interested to hear any details you
>> have about the grids you are using, whether they use this
>> Mercator-kludge or not.
>
> Thanks for the feedback.
>
> You're right in that the geographic coordinates are not a regular grid,
> but separate data subsets in the NetCDF file, with the actual grid being
> in a polar stereographic projection (the one in my first post).  The
> actual coordinates of the grid are not available in any file (NetCDF nor
> HDF5), and neither these nor the geographical coordinates in the HDF5
> files, but that doesn't matter in my case because I need to subset a
> smaller area, grid at an appropriate resolution using the geographical
> coordinates, and reproject to a different projection for my area.  After
> all, it's simple enough to access the geographical coordinates from any
> of the NetCDF files to map the grid onto such a coordinate system.
>
> Therefore, for working with these grids in R, I'd be happy if I could
> just load the grid correctly using the arbitrary grid coordinates that
> readGDAL() builds from the HDF5 file.  I haven't managed to read the
> NetCDF files into R (R segfaults), so things look better with HDF5 for
> working in R with these data.

Please do provide full version data for R, rgdal, GDAL, and the GDAL 
drivers, including the HDF5 libraries. I did - please do the same: all 
tests on Windows, OSGeo4W GDAL 1.5.4 with released drivers:

http://download.osgeo.org/osgeo4w/osgeo4w-setup.exe

and unreleased Windows binary rgdal_0.6-6 from:

http://spatial.nhh.no/R/Devel/rgdal_0.6-6.zip

Then at least we are comparing like with like. Nothing should segfault 
under any circumstances (though the GDAL HDF5 driver segfaults for me when 
asking for non-existent data[01]). A fuller report on the NetCDF case 
would be helpful.

My feeling at the moment is that the file is not self-documenting itself 
in a portable way, because GDAL does read the data in an order that isn't 
what the file header claims.

> The example I showed (and that Roger
> reproduced) builds a grid with the wrong dimensions.

The dimensions are what the file declares - I suspect that software within 
the originator institution knows that they are reversed, and does the 
same, but this isn't portable. I further suspect that the 1120x1 block 
size is not helpful, and probably should be 760x1. See below for analysis.

>  This is what the
> header of the whole file (this is a new file, with the same structure as
> the one I showed) says (using HDF5 tools,
> http://hdf.ncsa.uiuc.edu/HDF5):
>
> ---<--------------------cut here---------------start------------------->---
> $ h5dump -H ice_conc_nh_200901011200.hdf
> HDF5 "ice_conc_nh_200901011200.hdf" {
> GROUP "/" {
>   GROUP "Data" {
>      DATASET "data[00]" {
>         DATATYPE  H5T_IEEE_F32LE
>         DATASPACE  SIMPLE { ( 760, 1120 ) / ( 760, 1120 ) }
>         ATTRIBUTE "Description" {
>            DATATYPE  H5T_STRING {
>                  STRSIZE 16;
>                  STRPAD H5T_STR_NULLTERM;
>                  CSET H5T_CSET_ASCII;
>                  CTYPE H5T_C_S1;
>               }
>            DATASPACE  SIMPLE { ( 1 ) / ( 1 ) }
>         }
>      }
>   }
>   DATASET "Header" {
>      DATATYPE  H5T_COMPOUND {
>         H5T_STRING {
>            STRSIZE 32;
>            STRPAD H5T_STR_NULLTERM;
>            CSET H5T_CSET_ASCII;
>            CTYPE H5T_C_S1;
>         } "source";
>         H5T_STRING {
>            STRSIZE 16;
>            STRPAD H5T_STR_NULLTERM;
>            CSET H5T_CSET_ASCII;
>            CTYPE H5T_C_S1;
>         } "product";
>         H5T_STRING {
>            STRSIZE 16;
>            STRPAD H5T_STR_NULLTERM;
>            CSET H5T_CSET_ASCII;
>            CTYPE H5T_C_S1;
>         } "area";
>         H5T_STRING {
>            STRSIZE 128;
>            STRPAD H5T_STR_NULLTERM;
>            CSET H5T_CSET_ASCII;
>            CTYPE H5T_C_S1;
>         } "projstr";
>         H5T_STD_U32LE "iw";
>         H5T_STD_U32LE "ih";
>         H5T_STD_U16LE "z";
>         H5T_IEEE_F32LE "Ax";
>         H5T_IEEE_F32LE "Ay";
>         H5T_IEEE_F32LE "Bx";
>         H5T_IEEE_F32LE "By";
>         H5T_STD_U32LE "year";
>         H5T_STD_U16LE "month";
>         H5T_STD_U16LE "day";
>         H5T_STD_U16LE "hour";
>         H5T_STD_U16LE "minute";
>      }
>      DATASPACE  SIMPLE { ( 1 ) / ( 1 ) }
>   }
> }
> }
> ---<--------------------cut here---------------end--------------------->---
>
> and the grid should have 1120 rows and 760 columns, as displayed by
> gdalinfo on the actual data:

No, see below, you are reversing axes in gdalinfo:

>
> ---<--------------------cut here---------------start------------------->---
> $ gdalinfo HDF5:"ice_conc_nh_200901011200.hdf"://Data/data[00]
> Driver: HDF5Image/HDF5 Dataset
> Files: none associated
> Size is 1120, 760
> Coordinate System is:
> GEOGCS["WGS 84",
>    DATUM["WGS_1984",
>        SPHEROID["WGS 84",6378137,298.257223563,
>            AUTHORITY["EPSG","7030"]],
>        TOWGS84[0,0,0,0,0,0,0],
>        AUTHORITY["EPSG","6326"]],
>    PRIMEM["Greenwich",0,
>        AUTHORITY["EPSG","8901"]],
>    UNIT["degree",0.0174532925199433,
>        AUTHORITY["EPSG","9108"]],
>    AXIS["Lat",NORTH],
>    AXIS["Long",EAST],
>    AUTHORITY["EPSG","4326"]]
> Corner Coordinates:
> Upper Left  (    0.0,    0.0)
> Lower Left  (    0.0,  760.0)
> Upper Right ( 1120.0,    0.0)
> Lower Right ( 1120.0,  760.0)
> Center      (  560.0,  380.0)
> Band 1 Block=1120x1 Type=Float32, ColorInterp=Undefined
>  Metadata:
>    data[00]:Description=Ice Conc
> ---<--------------------cut here---------------end--------------------->---
>
> but readGDAL() apparently read the dimensions in the opposite order:

No, exactly as the GDAL driver does, 760 rows and 1120 columns, left is 0, 
right is 1120, upper is 0, lower is 760.

upper left (0,0)                        upper right (1120, 0)

lower left (0,760)                      lower right (1120, 760)

So either the GDAL driver is broken, or the data in the file is not in 
sync with its metadata.

So far I get your figure by molesting the input metadata:

ice <- readGDAL("HDF5:\"conc_200901011200.hdf\"://Data/data[00]",
  p4s=as.character(NA))
is.na(ice$band1) <- ice$band1 < 0
vice <- ice$band1
mice <- matrix(vice, ncol=760, byrow=TRUE)
image(t(mice[1120:1,]), asp=1)

As I said before, the input HDF5 file has a completely wrong description 
of its own projection, so my conclusion would be that it is so badly 
configured as not to be usable in a portable way, since both its geometry 
and projection are declared in error.

Hope this helps,

Roger


>
> ---<--------------------cut here---------------start------------------->---
> R> summary(ice)
> Object of class SpatialGridDataFrame
> Coordinates:
>  min  max
> x   0 1120
> y   0  760
> Is projected: NA
> proj4string : [NA]
> Number of points: 2
> Grid attributes:
>  cellcentre.offset cellsize cells.dim
> x               0.5        1      1120
> y               0.5        1       760
> Data attributes:
>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
> -32800     -99     -99    -117       0     100
> ---<--------------------cut here---------------end--------------------->---
>
> Does this make sense? and could this be the problem?  The data that are
> read into the `ice' object do look ok via summary(ice), but the way
> they're mapped onto the grid does not.
>
>
> Cheers,
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From spluque at gmail.com  Sat Jan 24 20:21:02 2009
From: spluque at gmail.com (Sebastian P. Luque)
Date: Sat, 24 Jan 2009 13:21:02 -0600
Subject: [R-sig-Geo] readGDAL() and HDF5 files
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
	<871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
	<497A3273.1030003@utas.edu.au>
	<873af9lj2x.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901241136580.6867@reclus.nhh.no>
Message-ID: <87wsckecip.fsf@patagonia.sebmags.homelinux.org>

On Sat, 24 Jan 2009 12:56:13 +0100 (CET),
Roger Bivand <Roger.Bivand at nhh.no> wrote:

> On Fri, 23 Jan 2009, Sebastian P. Luque wrote:
>> On Sat, 24 Jan 2009 08:11:15 +1100,
>> Michael Sumner <mdsumner at utas.edu.au> wrote:

>> Hi Sebastian, When you say the geographic coordinates are not a
>>> regular grid - is it that the actual grid is Mercator but the NetCDF
>>> file stores an X and Y vector separately for each unique longitude
>>> and latitude? I've seen this many times, but never with enough
>>> metadata to determine that without guessing. I've seen some
>>> documents that refer to the source grid as being in Mercator, but
>>> never any that mention explicitly the method used to generate the
>>> NetCDF file from those.

>>> If this is the case for your data, I've had success by figuring out
>>> an offset/scale value that work sufficiently by assuming a Mercator
>>> grid

>>> Specifically this one but sometimes with an extra X offset to
>>> overcome hemisphere shift.

>>> CRSargs(CRS("+proj=merc"))

>>> I don't have the details available today, but I can dig them up if
>>> that sounds promising. Also, I'd be interested to hear any details
>>> you have about the grids you are using, whether they use this
>>> Mercator-kludge or not.

>> Thanks for the feedback.

>> You're right in that the geographic coordinates are not a regular
>> grid, but separate data subsets in the NetCDF file, with the actual
>> grid being in a polar stereographic projection (the one in my first
>> post).  The actual coordinates of the grid are not available in any
>> file (NetCDF nor HDF5), and neither these nor the geographical
>> coordinates in the HDF5 files, but that doesn't matter in my case
>> because I need to subset a smaller area, grid at an appropriate
>> resolution using the geographical coordinates, and reproject to a
>> different projection for my area.  After all, it's simple enough to
>> access the geographical coordinates from any of the NetCDF files to
>> map the grid onto such a coordinate system.

>> Therefore, for working with these grids in R, I'd be happy if I could
>> just load the grid correctly using the arbitrary grid coordinates
>> that readGDAL() builds from the HDF5 file.  I haven't managed to read
>> the NetCDF files into R (R segfaults), so things look better with
>> HDF5 for working in R with these data.

> Please do provide full version data for R, rgdal, GDAL, and the GDAL
> drivers, including the HDF5 libraries. I did - please do the same: all
> tests on Windows, OSGeo4W GDAL 1.5.4 with released drivers:

I did provide most of this information in my first post, although I
forgot to include info on non-R software, so here it is again:

R> sessionInfo()
R version 2.8.1 (2008-12-22) 
x86_64-pc-linux-gnu 

locale:
LC_CTYPE=en_CA.UTF-8;LC_NUMERIC=C;LC_TIME=en_CA.UTF-8;LC_COLLATE=en_CA.UTF-8;LC_MONETARY=C;LC_MESSAGES=en_CA.UTF-8;LC_PAPER=en_CA.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_CA.UTF-8;LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rgdal_0.6-5     sp_0.9-29       slmisc_0.7.0    lattice_0.17-20

loaded via a namespace (and not attached):
[1] grid_2.8.1


and Debian sid libgdal1-1.5.2-3, which lags behind slightly the upstream
version.  I'm also using Debian sid's libhdf5-serial-1.6.6-0 for the
HDF5 libraries.  OSGeo4W is only for MS Windows IIUC.  So we may not be
able to properly compare our results.

For what it's worth, this is what I tried with one of the NetCDF files
(using Debian sid's libnetcdf4 1:3.6.2-3.1, where ncdump-hdf is
equivalent to the upstream ncdump facility):

---<--------------------cut here---------------start------------------->---
$ ncdump-hdf -h ice_conc_nh_200901151200.nc 
netcdf ice_conc_nh_200901151200 {
dimensions:
	time = 1 ;
	ni = 760 ;
	nj = 1120 ;

variables:
	long time(time) ;
		time:long_name = "reference time of sea ice file" ;
		time:units = "seconds since 1981-01-01 00:00:00" ;
	float lat(nj, ni) ;
		lat:long_name = "latitude" ;
		lat:units = "degrees_north" ;
	float lon(nj, ni) ;
		lon:long_name = "longitude" ;
		lon:units = "degrees_east" ;
	char polar_stereographic ;
		polar_stereographic:grid_mapping_name = "polar_stereographic" ;
		polar_stereographic:straight_vertical_longitude_from_pole = -45.f ;
		polar_stereographic:latitude_of_projection_origin = 90.f ;
		polar_stereographic:standard_parallel = 70.f ;
		polar_stereographic:false_easting = -3850.f ;
		polar_stereographic:false_northing = 5850.f ;
		polar_stereographic:proj4_string = "+proj=stere +a=6378273 +b=6356889.44891 +lat_0=90 +lat_ts=70 +lon_0=-45" ;
	short ice_concentration(time, nj, ni) ;
		ice_concentration:long_name = "sea ice concentration" ;
		ice_concentration:standard_name = "ice_concentration" ;
		ice_concentration:units = "%" ;
		ice_concentration:coordinates = "lon lat" ;
		ice_concentration:grid_mapping = "polar_stereographic" ;
		ice_concentration:source = "EUMETSAT OSI SAF" ;
		ice_concentration:missing_value = -32767s ;
		ice_concentration:_FillValue = -32767s ;
		ice_concentration:valid_min = 0.f ;
		ice_concentration:valid_max = 100.f ;
		ice_concentration:scale_factor = 0.0099999998f ;
		ice_concentration:add_offset = 0.f ;
	byte confidence_level(time, nj, ni) ;
		confidence_level:long_name = "confidence level" ;
		confidence_level:units = "1" ;
		confidence_level:coordinates = "lon lat" ;
		confidence_level:grid_mapping = "polar_stereographic" ;
		confidence_level:missing_value = '\0' ;
		confidence_level:_FillValue = '\0' ;
		confidence_level:valid_min = '\1' ;
		confidence_level:valid_max = '\5' ;
		confidence_level:comment = "0 Unprocessed; 1 Erroneous; 2 Unreliable; 3 Acceptable; 4 Good; 5 Excellent" ;
	short quality_index(time, nj, ni) ;
		quality_index:long_name = "quality index" ;
		quality_index:units = "1" ;
		quality_index:coordinates = "lon lat" ;
		quality_index:grid_mapping = "polar_stereographic" ;
		quality_index:missing_value = 0s ;
		quality_index:_FillValue = 0s ;
		quality_index:comment = "Contains bitmap with quality flags, see Users Manual for details" ;

// global attributes:
		:title = "Total Sea Ice Concentration from EUMETSAT OSI SAF" ;
		:conventions = "CF-1.0" ;
		:netcdf_version_id = "3.5.1 of Feb  7 2008 11:53:33 $" ;
		:creation_date = "2009-01-16" ;
		:product_version = "2.1" ;
		:software_version = "3.2" ;
		:reference = "OSI SAF Sea Ice Product Manual, Andersen S., Breivik L.A., Eastwood S., God?y ?., Lind M., Porcires M., Schyberg H., v3.5, January 2007" ;
		:comment = "For more information about the OSI SAF Sea Ice products, see http://saf.met.no" ;
		:sensor = "Multi sensor" ;
		:spatial_resolution = "10.0km" ;
		:area = "Northern Hemipshere" ;
		:southernmost_latitude = 31.08831f ;
		:northernmost_latitude = 89.934723f ;
		:westernmost_longitude = -180.f ;
		:easternmost_longitude = 179.92558f ;
		:start_date = "2009-01-15 UTC" ;
		:start_time = "00:00:00 UTC" ;
		:stop_date = "2009-01-15 UTC" ;
		:stop_time = "23:59:59 UTC" ;
		:field_type = "daily" ;
		:institution = "EUMETSAT OSI SAF" ;
		:institution_references = "http://www.osi-saf.org" ;
		:contact = "osisaf-manager at met.no" ;
		:operational_status = "operational" ;
}
$ gdalinfo ice_conc_nh_200901151200.nc 
Segmentation fault
---<--------------------cut here---------------end--------------------->---

As can be seen, these files have more datasets.  Presumably the segfault
I'm getting in R stems from the same problem with gdal above:

---<--------------------cut here---------------start------------------->---
R> ncdata <- "ice_conc_nh_200901151200.nc"
R> p4s <- NA
R> ice <- readGDAL(ncdata, p4s=p4s)

 *** caught segfault ***
address 0x1050, cause 'memory not mapped'

Traceback:
 1: .Call("RGDAL_OpenDataset", as.character(filename), TRUE, PACKAGE = "rgdal")
 2: .local(.Object, ...)
 3: initialize(value, ...)
 4: initialize(value, ...)
 5: new("GDALReadOnlyDataset", filename)
 6: GDAL.open(fname)
 7: readGDAL(ncdata, p4s = p4s)

Possible actions:
1: abort (with core dump, if enabled)
2: normal R exit
3: exit R without saving workspace
4: exit R saving workspace
---<--------------------cut here---------------end--------------------->---

although note that I don't know how to tell readGDAL to access the
dataset that contains the actual grid I want (ice_concentration) for
this file format.

Anyway, based on your analysis below, it does seem as if the file header
is not providing metadata that GDAL can actually understand.  Otherwise
gdalinfo should not segfault like that.  I also get the same messed up
image I get in R if I use gdaltranslate to see a TIFF image of the file.

Thanks for looking into this.  I can live using your data "molesting"
approach for now! :-)


Cheers,
Seb



> http://download.osgeo.org/osgeo4w/osgeo4w-setup.exe

> and unreleased Windows binary rgdal_0.6-6 from:

> http://spatial.nhh.no/R/Devel/rgdal_0.6-6.zip

> Then at least we are comparing like with like. Nothing should segfault
> under any circumstances (though the GDAL HDF5 driver segfaults for me
> when asking for non-existent data[01]). A fuller report on the NetCDF
> case would be helpful.

> My feeling at the moment is that the file is not self-documenting
> itself in a portable way, because GDAL does read the data in an order
> that isn't what the file header claims.

>> The example I showed (and that Roger reproduced) builds a grid with
>> the wrong dimensions.

> The dimensions are what the file declares - I suspect that software
> within the originator institution knows that they are reversed, and
> does the same, but this isn't portable. I further suspect that the
> 1120x1 block size is not helpful, and probably should be 760x1. See
> below for analysis.

>> This is what the header of the whole file (this is a new file, with
>> the same structure as the one I showed) says (using HDF5 tools,
>> http://hdf.ncsa.uiuc.edu/HDF5):

>> ---<--------------------cut
>> here---------------start------------------->--- $ h5dump -H
>> ice_conc_nh_200901011200.hdf HDF5 "ice_conc_nh_200901011200.hdf" {
>> GROUP "/" { GROUP "Data" { DATASET "data[00]" { DATATYPE
>> H5T_IEEE_F32LE DATASPACE SIMPLE { ( 760, 1120 ) / ( 760, 1120 ) }
>> ATTRIBUTE "Description" { DATATYPE H5T_STRING { STRSIZE 16; STRPAD
>> H5T_STR_NULLTERM; CSET H5T_CSET_ASCII; CTYPE H5T_C_S1;
>> }
>> DATASPACE SIMPLE { ( 1 ) / ( 1 ) }
>> }
>> }
>> }
>> DATASET "Header" { DATATYPE H5T_COMPOUND { H5T_STRING { STRSIZE 32;
>> STRPAD H5T_STR_NULLTERM; CSET H5T_CSET_ASCII; CTYPE H5T_C_S1; }
>> "source"; H5T_STRING { STRSIZE 16; STRPAD H5T_STR_NULLTERM; CSET
>> H5T_CSET_ASCII; CTYPE H5T_C_S1; } "product"; H5T_STRING { STRSIZE 16;
>> STRPAD H5T_STR_NULLTERM; CSET H5T_CSET_ASCII; CTYPE H5T_C_S1; }
>> "area"; H5T_STRING { STRSIZE 128; STRPAD H5T_STR_NULLTERM; CSET
>> H5T_CSET_ASCII; CTYPE H5T_C_S1; } "projstr"; H5T_STD_U32LE "iw";
>> H5T_STD_U32LE "ih"; H5T_STD_U16LE "z"; H5T_IEEE_F32LE "Ax";
>> H5T_IEEE_F32LE "Ay"; H5T_IEEE_F32LE "Bx"; H5T_IEEE_F32LE "By";
>> H5T_STD_U32LE "year"; H5T_STD_U16LE "month"; H5T_STD_U16LE "day";
>> H5T_STD_U16LE "hour"; H5T_STD_U16LE "minute";
>> }
>> DATASPACE SIMPLE { ( 1 ) / ( 1 ) }
>> }
>> }
>> }
>> ---<--------------------cut
>> here---------------end--------------------->---

>> and the grid should have 1120 rows and 760 columns, as displayed by
>> gdalinfo on the actual data:

> No, see below, you are reversing axes in gdalinfo:


>> ---<--------------------cut
>> here---------------start------------------->--- $ gdalinfo
>> HDF5:"ice_conc_nh_200901011200.hdf"://Data/data[00] Driver:
>> HDF5Image/HDF5 Dataset Files: none associated Size is 1120, 760
>> Coordinate System is: GEOGCS["WGS 84", DATUM["WGS_1984",
>> SPHEROID["WGS 84",6378137,298.257223563, AUTHORITY["EPSG","7030"]],
>> TOWGS84[0,0,0,0,0,0,0], AUTHORITY["EPSG","6326"]],
>> PRIMEM["Greenwich",0, AUTHORITY["EPSG","8901"]],
>> UNIT["degree",0.0174532925199433, AUTHORITY["EPSG","9108"]],
>> AXIS["Lat",NORTH], AXIS["Long",EAST], AUTHORITY["EPSG","4326"]]
>> Corner Coordinates: Upper Left ( 0.0, 0.0) Lower Left ( 0.0, 760.0)
>> Upper Right ( 1120.0, 0.0) Lower Right ( 1120.0, 760.0) Center (
>> 560.0, 380.0) Band 1 Block=1120x1 Type=Float32, ColorInterp=Undefined
>> Metadata: data[00]:Description=Ice Conc ---<--------------------cut
>> here---------------end--------------------->---

>> but readGDAL() apparently read the dimensions in the opposite order:

> No, exactly as the GDAL driver does, 760 rows and 1120 columns, left
> is 0, right is 1120, upper is 0, lower is 760.

> upper left (0,0) upper right (1120, 0)

> lower left (0,760) lower right (1120, 760)

> So either the GDAL driver is broken, or the data in the file is not in
> sync with its metadata.

> So far I get your figure by molesting the input metadata:

> ice <- readGDAL("HDF5:\"conc_200901011200.hdf\"://Data/data[00]",
> p4s=as.character(NA)) is.na(ice$band1) <- ice$band1 < 0 vice <-
> ice$band1 mice <- matrix(vice, ncol=760, byrow=TRUE)
> image(t(mice[1120:1,]), asp=1)

> As I said before, the input HDF5 file has a completely wrong
> description of its own projection, so my conclusion would be that it
> is so badly configured as not to be usable in a portable way, since
> both its geometry and projection are declared in error.

> Hope this helps,

> Roger



>> ---<--------------------cut
>> here---------------start------------------->---
R> summary(ice)
>> Object of class SpatialGridDataFrame Coordinates: min max x 0 1120 y
>> 0 760 Is projected: NA proj4string : [NA] Number of points: 2 Grid
>> attributes: cellcentre.offset cellsize cells.dim x 0.5 1 1120 y 0.5 1
>> 760 Data attributes: Min. 1st Qu.  Median Mean 3rd Qu.  Max.  -32800
>> -99 -99 -117 0 100 ---<--------------------cut
>> here---------------end--------------------->---

>> Does this make sense? and could this be the problem?  The data that
>> are read into the `ice' object do look ok via summary(ice), but the
>> way they're mapped onto the grid does not.


>> Cheers,



> -- Roger Bivand Economic Geography Section, Department of Economics,
> Norwegian School of Economics and Business Administration, Helleveien
> 30, N-5045 Bergen, Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
> e-mail: Roger.Bivand at nhh.no



Cheers,

-- 
Seb



From Roger.Bivand at nhh.no  Sun Jan 25 18:38:52 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sun, 25 Jan 2009 18:38:52 +0100 (CET)
Subject: [R-sig-Geo] readGDAL() and HDF5 files
In-Reply-To: <87wsckecip.fsf@patagonia.sebmags.homelinux.org>
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
	<871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
	<497A3273.1030003@utas.edu.au>
	<873af9lj2x.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901241136580.6867@reclus.nhh.no>
	<87wsckecip.fsf@patagonia.sebmags.homelinux.org>
Message-ID: <alpine.LRH.2.00.0901251832490.13021@reclus.nhh.no>

On Sat, 24 Jan 2009, Sebastian P. Luque wrote:

Hi,

If you have the cell centre offset for the lower left cell, then:

is.na(ice$band1) <- ice$band1 < 0
vice <- ice$band1
mice <- matrix(vice, ncol=760, byrow=TRUE)
mice1 <- t(mice[1120:1,])
grd <- GridTopology(c(-4941217, -4941217), c(10000,10000), c(760, 1120))
SG <- SpatialGrid(grd, proj4string=CRS("+init=epsg:3411"))
im <- list(x=sort(coordinatevalues(getGridTopology(SG))$s1),
  y=sort(coordinatevalues(getGridTopology(SG))$s2), z=mice1)
image(im, asp=1)
SGDF <- image2Grid(im, p4="+init=epsg:3411")
image(SGDF, axes=TRUE)


gets you there, but here is crucially dependent on knowing the offset 
(here taken as -90E, 31.08831N (value from netCDF description)). This is 
wrong, as:

SPixDF <- as(SGDF, "SpatialPixelsDataFrame")
SPDF <- as(SPixDF, "SpatialPointsDataFrame")
SPDF_ll <- spTransform(SPDF, CRS("+proj=longlat"))

then:

library(maptools)
xx <- GE_SpatialGrid(SPDF_ll)
png("ice.png", width=xx$width, height=xx$height, bg="transparent")
par(mar=c(0,0,0,0), xaxs="i", yaxs="i")
plot(SPDF_ll, cex=0.3, col="orange", xlim=xx$xlim, ylim=xx$ylim,
   setParUsrBB=TRUE)
dev.off()
kmlOverlay(xx, "ice.kml", "ice.png")

shows - it puts Greenland well West and a little North of its position 
when viewed in GE.

Getting there ...

Roger


> On Sat, 24 Jan 2009 12:56:13 +0100 (CET),
> Roger Bivand <Roger.Bivand at nhh.no> wrote:
>
>> On Fri, 23 Jan 2009, Sebastian P. Luque wrote:
>>> On Sat, 24 Jan 2009 08:11:15 +1100,
>>> Michael Sumner <mdsumner at utas.edu.au> wrote:
>
>>> Hi Sebastian, When you say the geographic coordinates are not a
>>>> regular grid - is it that the actual grid is Mercator but the NetCDF
>>>> file stores an X and Y vector separately for each unique longitude
>>>> and latitude? I've seen this many times, but never with enough
>>>> metadata to determine that without guessing. I've seen some
>>>> documents that refer to the source grid as being in Mercator, but
>>>> never any that mention explicitly the method used to generate the
>>>> NetCDF file from those.
>
>>>> If this is the case for your data, I've had success by figuring out
>>>> an offset/scale value that work sufficiently by assuming a Mercator
>>>> grid
>
>>>> Specifically this one but sometimes with an extra X offset to
>>>> overcome hemisphere shift.
>
>>>> CRSargs(CRS("+proj=merc"))
>
>>>> I don't have the details available today, but I can dig them up if
>>>> that sounds promising. Also, I'd be interested to hear any details
>>>> you have about the grids you are using, whether they use this
>>>> Mercator-kludge or not.
>
>>> Thanks for the feedback.
>
>>> You're right in that the geographic coordinates are not a regular
>>> grid, but separate data subsets in the NetCDF file, with the actual
>>> grid being in a polar stereographic projection (the one in my first
>>> post).  The actual coordinates of the grid are not available in any
>>> file (NetCDF nor HDF5), and neither these nor the geographical
>>> coordinates in the HDF5 files, but that doesn't matter in my case
>>> because I need to subset a smaller area, grid at an appropriate
>>> resolution using the geographical coordinates, and reproject to a
>>> different projection for my area.  After all, it's simple enough to
>>> access the geographical coordinates from any of the NetCDF files to
>>> map the grid onto such a coordinate system.
>
>>> Therefore, for working with these grids in R, I'd be happy if I could
>>> just load the grid correctly using the arbitrary grid coordinates
>>> that readGDAL() builds from the HDF5 file.  I haven't managed to read
>>> the NetCDF files into R (R segfaults), so things look better with
>>> HDF5 for working in R with these data.
>
>> Please do provide full version data for R, rgdal, GDAL, and the GDAL
>> drivers, including the HDF5 libraries. I did - please do the same: all
>> tests on Windows, OSGeo4W GDAL 1.5.4 with released drivers:
>
> I did provide most of this information in my first post, although I
> forgot to include info on non-R software, so here it is again:
>
> R> sessionInfo()
> R version 2.8.1 (2008-12-22)
> x86_64-pc-linux-gnu
>
> locale:
> LC_CTYPE=en_CA.UTF-8;LC_NUMERIC=C;LC_TIME=en_CA.UTF-8;LC_COLLATE=en_CA.UTF-8;LC_MONETARY=C;LC_MESSAGES=en_CA.UTF-8;LC_PAPER=en_CA.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_CA.UTF-8;LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] rgdal_0.6-5     sp_0.9-29       slmisc_0.7.0    lattice_0.17-20
>
> loaded via a namespace (and not attached):
> [1] grid_2.8.1
>
>
> and Debian sid libgdal1-1.5.2-3, which lags behind slightly the upstream
> version.  I'm also using Debian sid's libhdf5-serial-1.6.6-0 for the
> HDF5 libraries.  OSGeo4W is only for MS Windows IIUC.  So we may not be
> able to properly compare our results.
>
> For what it's worth, this is what I tried with one of the NetCDF files
> (using Debian sid's libnetcdf4 1:3.6.2-3.1, where ncdump-hdf is
> equivalent to the upstream ncdump facility):
>
> ---<--------------------cut here---------------start------------------->---
> $ ncdump-hdf -h ice_conc_nh_200901151200.nc
> netcdf ice_conc_nh_200901151200 {
> dimensions:
> 	time = 1 ;
> 	ni = 760 ;
> 	nj = 1120 ;
>
> variables:
> 	long time(time) ;
> 		time:long_name = "reference time of sea ice file" ;
> 		time:units = "seconds since 1981-01-01 00:00:00" ;
> 	float lat(nj, ni) ;
> 		lat:long_name = "latitude" ;
> 		lat:units = "degrees_north" ;
> 	float lon(nj, ni) ;
> 		lon:long_name = "longitude" ;
> 		lon:units = "degrees_east" ;
> 	char polar_stereographic ;
> 		polar_stereographic:grid_mapping_name = "polar_stereographic" ;
> 		polar_stereographic:straight_vertical_longitude_from_pole = -45.f ;
> 		polar_stereographic:latitude_of_projection_origin = 90.f ;
> 		polar_stereographic:standard_parallel = 70.f ;
> 		polar_stereographic:false_easting = -3850.f ;
> 		polar_stereographic:false_northing = 5850.f ;
> 		polar_stereographic:proj4_string = "+proj=stere +a=6378273 +b=6356889.44891 +lat_0=90 +lat_ts=70 +lon_0=-45" ;
> 	short ice_concentration(time, nj, ni) ;
> 		ice_concentration:long_name = "sea ice concentration" ;
> 		ice_concentration:standard_name = "ice_concentration" ;
> 		ice_concentration:units = "%" ;
> 		ice_concentration:coordinates = "lon lat" ;
> 		ice_concentration:grid_mapping = "polar_stereographic" ;
> 		ice_concentration:source = "EUMETSAT OSI SAF" ;
> 		ice_concentration:missing_value = -32767s ;
> 		ice_concentration:_FillValue = -32767s ;
> 		ice_concentration:valid_min = 0.f ;
> 		ice_concentration:valid_max = 100.f ;
> 		ice_concentration:scale_factor = 0.0099999998f ;
> 		ice_concentration:add_offset = 0.f ;
> 	byte confidence_level(time, nj, ni) ;
> 		confidence_level:long_name = "confidence level" ;
> 		confidence_level:units = "1" ;
> 		confidence_level:coordinates = "lon lat" ;
> 		confidence_level:grid_mapping = "polar_stereographic" ;
> 		confidence_level:missing_value = '\0' ;
> 		confidence_level:_FillValue = '\0' ;
> 		confidence_level:valid_min = '\1' ;
> 		confidence_level:valid_max = '\5' ;
> 		confidence_level:comment = "0 Unprocessed; 1 Erroneous; 2 Unreliable; 3 Acceptable; 4 Good; 5 Excellent" ;
> 	short quality_index(time, nj, ni) ;
> 		quality_index:long_name = "quality index" ;
> 		quality_index:units = "1" ;
> 		quality_index:coordinates = "lon lat" ;
> 		quality_index:grid_mapping = "polar_stereographic" ;
> 		quality_index:missing_value = 0s ;
> 		quality_index:_FillValue = 0s ;
> 		quality_index:comment = "Contains bitmap with quality flags, see Users Manual for details" ;
>
> // global attributes:
> 		:title = "Total Sea Ice Concentration from EUMETSAT OSI SAF" ;
> 		:conventions = "CF-1.0" ;
> 		:netcdf_version_id = "3.5.1 of Feb  7 2008 11:53:33 $" ;
> 		:creation_date = "2009-01-16" ;
> 		:product_version = "2.1" ;
> 		:software_version = "3.2" ;
> 		:reference = "OSI SAF Sea Ice Product Manual, Andersen S., Breivik L.A., Eastwood S., God?y ?., Lind M., Porcires M., Schyberg H., v3.5, January 2007" ;
> 		:comment = "For more information about the OSI SAF Sea Ice products, see http://saf.met.no" ;
> 		:sensor = "Multi sensor" ;
> 		:spatial_resolution = "10.0km" ;
> 		:area = "Northern Hemipshere" ;
> 		:southernmost_latitude = 31.08831f ;
> 		:northernmost_latitude = 89.934723f ;
> 		:westernmost_longitude = -180.f ;
> 		:easternmost_longitude = 179.92558f ;
> 		:start_date = "2009-01-15 UTC" ;
> 		:start_time = "00:00:00 UTC" ;
> 		:stop_date = "2009-01-15 UTC" ;
> 		:stop_time = "23:59:59 UTC" ;
> 		:field_type = "daily" ;
> 		:institution = "EUMETSAT OSI SAF" ;
> 		:institution_references = "http://www.osi-saf.org" ;
> 		:contact = "osisaf-manager at met.no" ;
> 		:operational_status = "operational" ;
> }
> $ gdalinfo ice_conc_nh_200901151200.nc
> Segmentation fault
> ---<--------------------cut here---------------end--------------------->---
>
> As can be seen, these files have more datasets.  Presumably the segfault
> I'm getting in R stems from the same problem with gdal above:
>
> ---<--------------------cut here---------------start------------------->---
> R> ncdata <- "ice_conc_nh_200901151200.nc"
> R> p4s <- NA
> R> ice <- readGDAL(ncdata, p4s=p4s)
>
> *** caught segfault ***
> address 0x1050, cause 'memory not mapped'
>
> Traceback:
> 1: .Call("RGDAL_OpenDataset", as.character(filename), TRUE, PACKAGE = "rgdal")
> 2: .local(.Object, ...)
> 3: initialize(value, ...)
> 4: initialize(value, ...)
> 5: new("GDALReadOnlyDataset", filename)
> 6: GDAL.open(fname)
> 7: readGDAL(ncdata, p4s = p4s)
>
> Possible actions:
> 1: abort (with core dump, if enabled)
> 2: normal R exit
> 3: exit R without saving workspace
> 4: exit R saving workspace
> ---<--------------------cut here---------------end--------------------->---
>
> although note that I don't know how to tell readGDAL to access the
> dataset that contains the actual grid I want (ice_concentration) for
> this file format.
>
> Anyway, based on your analysis below, it does seem as if the file header
> is not providing metadata that GDAL can actually understand.  Otherwise
> gdalinfo should not segfault like that.  I also get the same messed up
> image I get in R if I use gdaltranslate to see a TIFF image of the file.
>
> Thanks for looking into this.  I can live using your data "molesting"
> approach for now! :-)
>
>
> Cheers,
> Seb
>
>
>
>> http://download.osgeo.org/osgeo4w/osgeo4w-setup.exe
>
>> and unreleased Windows binary rgdal_0.6-6 from:
>
>> http://spatial.nhh.no/R/Devel/rgdal_0.6-6.zip
>
>> Then at least we are comparing like with like. Nothing should segfault
>> under any circumstances (though the GDAL HDF5 driver segfaults for me
>> when asking for non-existent data[01]). A fuller report on the NetCDF
>> case would be helpful.
>
>> My feeling at the moment is that the file is not self-documenting
>> itself in a portable way, because GDAL does read the data in an order
>> that isn't what the file header claims.
>
>>> The example I showed (and that Roger reproduced) builds a grid with
>>> the wrong dimensions.
>
>> The dimensions are what the file declares - I suspect that software
>> within the originator institution knows that they are reversed, and
>> does the same, but this isn't portable. I further suspect that the
>> 1120x1 block size is not helpful, and probably should be 760x1. See
>> below for analysis.
>
>>> This is what the header of the whole file (this is a new file, with
>>> the same structure as the one I showed) says (using HDF5 tools,
>>> http://hdf.ncsa.uiuc.edu/HDF5):
>
>>> ---<--------------------cut
>>> here---------------start------------------->--- $ h5dump -H
>>> ice_conc_nh_200901011200.hdf HDF5 "ice_conc_nh_200901011200.hdf" {
>>> GROUP "/" { GROUP "Data" { DATASET "data[00]" { DATATYPE
>>> H5T_IEEE_F32LE DATASPACE SIMPLE { ( 760, 1120 ) / ( 760, 1120 ) }
>>> ATTRIBUTE "Description" { DATATYPE H5T_STRING { STRSIZE 16; STRPAD
>>> H5T_STR_NULLTERM; CSET H5T_CSET_ASCII; CTYPE H5T_C_S1;
>>> }
>>> DATASPACE SIMPLE { ( 1 ) / ( 1 ) }
>>> }
>>> }
>>> }
>>> DATASET "Header" { DATATYPE H5T_COMPOUND { H5T_STRING { STRSIZE 32;
>>> STRPAD H5T_STR_NULLTERM; CSET H5T_CSET_ASCII; CTYPE H5T_C_S1; }
>>> "source"; H5T_STRING { STRSIZE 16; STRPAD H5T_STR_NULLTERM; CSET
>>> H5T_CSET_ASCII; CTYPE H5T_C_S1; } "product"; H5T_STRING { STRSIZE 16;
>>> STRPAD H5T_STR_NULLTERM; CSET H5T_CSET_ASCII; CTYPE H5T_C_S1; }
>>> "area"; H5T_STRING { STRSIZE 128; STRPAD H5T_STR_NULLTERM; CSET
>>> H5T_CSET_ASCII; CTYPE H5T_C_S1; } "projstr"; H5T_STD_U32LE "iw";
>>> H5T_STD_U32LE "ih"; H5T_STD_U16LE "z"; H5T_IEEE_F32LE "Ax";
>>> H5T_IEEE_F32LE "Ay"; H5T_IEEE_F32LE "Bx"; H5T_IEEE_F32LE "By";
>>> H5T_STD_U32LE "year"; H5T_STD_U16LE "month"; H5T_STD_U16LE "day";
>>> H5T_STD_U16LE "hour"; H5T_STD_U16LE "minute";
>>> }
>>> DATASPACE SIMPLE { ( 1 ) / ( 1 ) }
>>> }
>>> }
>>> }
>>> ---<--------------------cut
>>> here---------------end--------------------->---
>
>>> and the grid should have 1120 rows and 760 columns, as displayed by
>>> gdalinfo on the actual data:
>
>> No, see below, you are reversing axes in gdalinfo:
>
>
>>> ---<--------------------cut
>>> here---------------start------------------->--- $ gdalinfo
>>> HDF5:"ice_conc_nh_200901011200.hdf"://Data/data[00] Driver:
>>> HDF5Image/HDF5 Dataset Files: none associated Size is 1120, 760
>>> Coordinate System is: GEOGCS["WGS 84", DATUM["WGS_1984",
>>> SPHEROID["WGS 84",6378137,298.257223563, AUTHORITY["EPSG","7030"]],
>>> TOWGS84[0,0,0,0,0,0,0], AUTHORITY["EPSG","6326"]],
>>> PRIMEM["Greenwich",0, AUTHORITY["EPSG","8901"]],
>>> UNIT["degree",0.0174532925199433, AUTHORITY["EPSG","9108"]],
>>> AXIS["Lat",NORTH], AXIS["Long",EAST], AUTHORITY["EPSG","4326"]]
>>> Corner Coordinates: Upper Left ( 0.0, 0.0) Lower Left ( 0.0, 760.0)
>>> Upper Right ( 1120.0, 0.0) Lower Right ( 1120.0, 760.0) Center (
>>> 560.0, 380.0) Band 1 Block=1120x1 Type=Float32, ColorInterp=Undefined
>>> Metadata: data[00]:Description=Ice Conc ---<--------------------cut
>>> here---------------end--------------------->---
>
>>> but readGDAL() apparently read the dimensions in the opposite order:
>
>> No, exactly as the GDAL driver does, 760 rows and 1120 columns, left
>> is 0, right is 1120, upper is 0, lower is 760.
>
>> upper left (0,0) upper right (1120, 0)
>
>> lower left (0,760) lower right (1120, 760)
>
>> So either the GDAL driver is broken, or the data in the file is not in
>> sync with its metadata.
>
>> So far I get your figure by molesting the input metadata:
>
>> ice <- readGDAL("HDF5:\"conc_200901011200.hdf\"://Data/data[00]",
>> p4s=as.character(NA)) is.na(ice$band1) <- ice$band1 < 0 vice <-
>> ice$band1 mice <- matrix(vice, ncol=760, byrow=TRUE)
>> image(t(mice[1120:1,]), asp=1)
>
>> As I said before, the input HDF5 file has a completely wrong
>> description of its own projection, so my conclusion would be that it
>> is so badly configured as not to be usable in a portable way, since
>> both its geometry and projection are declared in error.
>
>> Hope this helps,
>
>> Roger
>
>
>
>>> ---<--------------------cut
>>> here---------------start------------------->---
> R> summary(ice)
>>> Object of class SpatialGridDataFrame Coordinates: min max x 0 1120 y
>>> 0 760 Is projected: NA proj4string : [NA] Number of points: 2 Grid
>>> attributes: cellcentre.offset cellsize cells.dim x 0.5 1 1120 y 0.5 1
>>> 760 Data attributes: Min. 1st Qu.  Median Mean 3rd Qu.  Max.  -32800
>>> -99 -99 -117 0 100 ---<--------------------cut
>>> here---------------end--------------------->---
>
>>> Does this make sense? and could this be the problem?  The data that
>>> are read into the `ice' object do look ok via summary(ice), but the
>>> way they're mapped onto the grid does not.
>
>
>>> Cheers,
>
>
>
>> -- Roger Bivand Economic Geography Section, Department of Economics,
>> Norwegian School of Economics and Business Administration, Helleveien
>> 30, N-5045 Bergen, Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
>> e-mail: Roger.Bivand at nhh.no
>
>
>
> Cheers,
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Roger.Bivand at nhh.no  Sun Jan 25 21:35:12 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sun, 25 Jan 2009 21:35:12 +0100 (CET)
Subject: [R-sig-Geo] readGDAL() and HDF5 files
In-Reply-To: <alpine.LRH.2.00.0901251832490.13021@reclus.nhh.no>
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
	<871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
	<497A3273.1030003@utas.edu.au>
	<873af9lj2x.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901241136580.6867@reclus.nhh.no>
	<87wsckecip.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901251832490.13021@reclus.nhh.no>
Message-ID: <alpine.LRH.2.00.0901252131130.13569@reclus.nhh.no>

On Sun, 25 Jan 2009, Roger Bivand wrote:

> On Sat, 24 Jan 2009, Sebastian P. Luque wrote:
>
> Hi,
>
> If you have the cell centre offset for the lower left cell, then:
>
> is.na(ice$band1) <- ice$band1 < 0
> vice <- ice$band1
> mice <- matrix(vice, ncol=760, byrow=TRUE)
> mice1 <- t(mice[1120:1,])
> grd <- GridTopology(c(-4941217, -4941217), c(10000,10000), c(760, 1120))

With:

grd <- GridTopology(c(-((760/2)*10000) + 5000, -((1120/2)*10000) + 5000),
   c(10000,10000), c(760, 1120))

that is assuming that the input grid is centred at the pole, and that the 
cell sizes are 10km by 10km, we get much closer, but the whole grid is 
shifted South. Once we establish the metadata by reverse engineering, 
setting up your workflow ought to be feasible.

Roger


> SG <- SpatialGrid(grd, proj4string=CRS("+init=epsg:3411"))
> im <- list(x=sort(coordinatevalues(getGridTopology(SG))$s1),
> y=sort(coordinatevalues(getGridTopology(SG))$s2), z=mice1)
> image(im, asp=1)
> SGDF <- image2Grid(im, p4="+init=epsg:3411")
> image(SGDF, axes=TRUE)
>
>
> gets you there, but here is crucially dependent on knowing the offset (here 
> taken as -90E, 31.08831N (value from netCDF description)). This is wrong, as:
>
> SPixDF <- as(SGDF, "SpatialPixelsDataFrame")
> SPDF <- as(SPixDF, "SpatialPointsDataFrame")
> SPDF_ll <- spTransform(SPDF, CRS("+proj=longlat"))
>
> then:
>
> library(maptools)
> xx <- GE_SpatialGrid(SPDF_ll)
> png("ice.png", width=xx$width, height=xx$height, bg="transparent")
> par(mar=c(0,0,0,0), xaxs="i", yaxs="i")
> plot(SPDF_ll, cex=0.3, col="orange", xlim=xx$xlim, ylim=xx$ylim,
>  setParUsrBB=TRUE)
> dev.off()
> kmlOverlay(xx, "ice.kml", "ice.png")
>
> shows - it puts Greenland well West and a little North of its position when 
> viewed in GE.
>
> Getting there ...
>
> Roger
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From spluque at gmail.com  Sun Jan 25 21:51:04 2009
From: spluque at gmail.com (Sebastian P. Luque)
Date: Sun, 25 Jan 2009 14:51:04 -0600
Subject: [R-sig-Geo] readGDAL() and HDF5 files
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
	<871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
	<497A3273.1030003@utas.edu.au>
	<873af9lj2x.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901241136580.6867@reclus.nhh.no>
	<87wsckecip.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901251832490.13021@reclus.nhh.no>
	<alpine.LRH.2.00.0901252131130.13569@reclus.nhh.no>
Message-ID: <87ocxvds93.fsf@patagonia.sebmags.homelinux.org>

On Sun, 25 Jan 2009 21:35:12 +0100 (CET),
Roger Bivand <Roger.Bivand at nhh.no> wrote:

> On Sun, 25 Jan 2009, Roger Bivand wrote:
>> On Sat, 24 Jan 2009, Sebastian P. Luque wrote:

> Hi,

>> If you have the cell centre offset for the lower left cell, then:

>> is.na(ice$band1) <- ice$band1 < 0 vice <- ice$band1 mice <-
>> matrix(vice, ncol=760, byrow=TRUE) mice1 <- t(mice[1120:1,]) grd <-
>> GridTopology(c(-4941217, -4941217), c(10000,10000), c(760, 1120))

> With:

> grd <- GridTopology(c(-((760/2)*10000) + 5000, -((1120/2)*10000) +
> 5000), c(10000,10000), c(760, 1120))

> that is assuming that the input grid is centred at the pole, and that
> the cell sizes are 10km by 10km, we get much closer, but the whole
> grid is shifted South. Once we establish the metadata by reverse
> engineering, setting up your workflow ought to be feasible.

Hi Roger,

Yes, that is correct, and I should've posted this to begin with, from
OSI-SAF's documents:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: OSI-SAF_nh_grid.png
Type: image/png
Size: 26705 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090125/cf6cb95b/attachment.png>
-------------- next part --------------

and:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: OSI-SAF_nh_hdf5.png
Type: image/png
Size: 44635 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090125/cf6cb95b/attachment-0001.png>
-------------- next part --------------

but I'm unable to access the Bx and By components in the HDF5 files.


Cheers,

-- 
Seb

From Roger.Bivand at nhh.no  Mon Jan 26 10:33:54 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 26 Jan 2009 10:33:54 +0100 (CET)
Subject: [R-sig-Geo] readGDAL() and HDF5 files
In-Reply-To: <87ocxvds93.fsf@patagonia.sebmags.homelinux.org>
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
	<871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
	<497A3273.1030003@utas.edu.au>
	<873af9lj2x.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901241136580.6867@reclus.nhh.no>
	<87wsckecip.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901251832490.13021@reclus.nhh.no>
	<alpine.LRH.2.00.0901252131130.13569@reclus.nhh.no>
	<87ocxvds93.fsf@patagonia.sebmags.homelinux.org>
Message-ID: <alpine.LRH.2.00.0901261013480.16095@reclus.nhh.no>

On Sun, 25 Jan 2009, Sebastian P. Luque wrote:

> On Sun, 25 Jan 2009 21:35:12 +0100 (CET),
> Roger Bivand <Roger.Bivand at nhh.no> wrote:
>
>> On Sun, 25 Jan 2009, Roger Bivand wrote:
>>> On Sat, 24 Jan 2009, Sebastian P. Luque wrote:
>
>> Hi,
>
>>> If you have the cell centre offset for the lower left cell, then:
>
>>> is.na(ice$band1) <- ice$band1 < 0 vice <- ice$band1 mice <-
>>> matrix(vice, ncol=760, byrow=TRUE) mice1 <- t(mice[1120:1,]) grd <-
>>> GridTopology(c(-4941217, -4941217), c(10000,10000), c(760, 1120))
>
>> With:
>
>> grd <- GridTopology(c(-((760/2)*10000) + 5000, -((1120/2)*10000) +
>> 5000), c(10000,10000), c(760, 1120))
>
>> that is assuming that the input grid is centred at the pole, and that
>> the cell sizes are 10km by 10km, we get much closer, but the whole
>> grid is shifted South. Once we establish the metadata by reverse
>> engineering, setting up your workflow ought to be feasible.
>
> Hi Roger,
>
> Yes, that is correct, and I should've posted this to begin with, from
> OSI-SAF's documents:

Hi,

Using the lower left geographical coordinate:

ll <- c(project(matrix(c(-80.7299, 33.9755), nrow=1), "+init=epsg:3411"))
grd <- GridTopology(ll, c(10000,10000), c(760, 1120))

and so on, I get:

http://spatial.nhh.no/misc/hudson_st.png

which isn't bad. Maybe we need (ll+5000) instead, but it's hard to tell. 
The assumption in project() is no datum shift but +ellps=WGS84, so that 
might need attention too.

Should we draw these problems to the data providers' attention (it is the 
Norwegian Met. Office, and there are R people there too)? Perhaps they 
have a FAQ?

Roger

>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From bibiko at eva.mpg.de  Mon Jan 26 11:49:14 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Mon, 26 Jan 2009 11:49:14 +0100
Subject: [R-sig-Geo] e00 to SpatialPolygons: how to set the correct
	projection
Message-ID: <53D25FF2-00AE-4679-B862-3C0274EDD5AB@eva.mpg.de>

Hi,

I was able to convert an e00 file to a SpatialPolygons object (thanks  
a lot to everybody who was involved to set up this functionality!) by  
using 'e00toavc' and 'pal2SpatialPolygons'.

But now I'm a bit lost in conversion. How to set the correct  
projection which is needed for 'pal2SpatialPolygons'?

My prj.adf file says:

Projection    LAMBERT
Zunits        NO
Units         METERS
Spheroid      CLARKE1866
Xshift        0.0000000000
Yshift        0.0000000000
Parameters
  25  0  0.000 /* 1st standard parallel
  47  0  0.000 /* 2nd standard parallel
  110  0  0.000 /* central meridian
  10  0  0.000 /* latitude of projection's origin
0.00000 /* false easting (meters)
0.00000 /* false northing (meters)

and I want to use the data together with Roger Bivand's "http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData 
" data whose proj4string is set to

"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"


I tried:
NMG <- pal2SpatialPolygons(arcs,pal, IDs=IDs, proj4string =  
CRS("+proj=longlat +ellps=clrk66"))

but it ended in:

Error in validityMethod(object) :
Geographical CRS given to non-conformant data


If I skip the proj4string in 'pal2SpatialPolygons' I get
NMG at bbox
         min     max
r1 -1037807 1141001
r2  3093775 4892464


By looking at this bbox and the actual area given in the e00 file I  
image that the bbox should be:
         min     max
r1  103.7807 114.1001
r2  30.93775 48.92464



Many thanks for any hint in advance!

Best,

--Hans

**********************************************************
Hans-Joerg Bibiko
Max Planck Institute for Evolutionary Anthropology
Department of Linguistics
Deutscher Platz 6     phone:   +49 (0) 341 3550 341
D-04103 Leipzig       fax:     +49 (0) 341 3550 333
Germany               e-mail:  bibiko at eva.mpg.de



From Roger.Bivand at nhh.no  Mon Jan 26 12:06:23 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 26 Jan 2009 12:06:23 +0100 (CET)
Subject: [R-sig-Geo] e00 to SpatialPolygons: how to set the correct
 projection
In-Reply-To: <53D25FF2-00AE-4679-B862-3C0274EDD5AB@eva.mpg.de>
References: <53D25FF2-00AE-4679-B862-3C0274EDD5AB@eva.mpg.de>
Message-ID: <alpine.LRH.2.00.0901261201460.16943@reclus.nhh.no>

On Mon, 26 Jan 2009, Hans-J?rg Bibiko wrote:

> Hi,
>
> I was able to convert an e00 file to a SpatialPolygons object (thanks a lot 
> to everybody who was involved to set up this functionality!) by using 
> 'e00toavc' and 'pal2SpatialPolygons'.
>
> But now I'm a bit lost in conversion. How to set the correct projection which 
> is needed for 'pal2SpatialPolygons'?
>
> My prj.adf file says:
>
> Projection    LAMBERT
> Zunits        NO
> Units         METERS
> Spheroid      CLARKE1866
> Xshift        0.0000000000
> Yshift        0.0000000000
> Parameters
> 25  0  0.000 /* 1st standard parallel
> 47  0  0.000 /* 2nd standard parallel
> 110  0  0.000 /* central meridian
> 10  0  0.000 /* latitude of projection's origin
> 0.00000 /* false easting (meters)
> 0.00000 /* false northing (meters)
>
> and I want to use the data together with Roger Bivand's 
> "http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData" data whose 
> proj4string is set to
>
> "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"
>
>
> I tried:
> NMG <- pal2SpatialPolygons(arcs,pal, IDs=IDs, proj4string = 
> CRS("+proj=longlat +ellps=clrk66"))

No. Your data are in a Lambert projection, probably lcc, but possibly 
laea, with the +lat_*= and +lon_0= arguments given. If 110 is 110E, you 
are somewhere in Asia, but knowing how muddled things get, it may be 110W, 
so -110, and North or Central America. If you have access to rgdal, try 
reading the Arc binary vector data directly, the driver may pick up the 
projection automatically.

Roger

>
> but it ended in:
>
> Error in validityMethod(object) :
> Geographical CRS given to non-conformant data
>
>
> If I skip the proj4string in 'pal2SpatialPolygons' I get
> NMG at bbox
>       min     max
> r1 -1037807 1141001
> r2  3093775 4892464
>
>
> By looking at this bbox and the actual area given in the e00 file I image 
> that the bbox should be:
>       min     max
> r1  103.7807 114.1001
> r2  30.93775 48.92464
>
>
>
> Many thanks for any hint in advance!
>
> Best,
>
> --Hans
>
> **********************************************************
> Hans-Joerg Bibiko
> Max Planck Institute for Evolutionary Anthropology
> Department of Linguistics
> Deutscher Platz 6     phone:   +49 (0) 341 3550 341
> D-04103 Leipzig       fax:     +49 (0) 341 3550 333
> Germany               e-mail:  bibiko at eva.mpg.de
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no

From p.hiemstra at geo.uu.nl  Mon Jan 26 12:06:22 2009
From: p.hiemstra at geo.uu.nl (Paul Hiemstra)
Date: Mon, 26 Jan 2009 12:06:22 +0100
Subject: [R-sig-Geo] e00 to SpatialPolygons: how to set the
	correct	projection
In-Reply-To: <53D25FF2-00AE-4679-B862-3C0274EDD5AB@eva.mpg.de>
References: <53D25FF2-00AE-4679-B862-3C0274EDD5AB@eva.mpg.de>
Message-ID: <497D992E.4090504@geo.uu.nl>

Hi!

Please checkout the spTransform() command which allows you to reproject 
your sp objects (it is located in the rgdal package). Small example:

library(gstat)
data(meuse)
coordinates(meuse) = ~x+y
# Set the current projection
proj4string(meuse) = CRS("+init=epsg:28992")
#set new projection
meuse_newcrs = spTransform(meuse, CRS("+proj=longlat +ellps=WGS84 
+datum=WGS84 +no_defs +towgs84=0,0,0"))

cheers and hth,
Paul

Hans-J?rg Bibiko wrote:
> Hi,
>
> I was able to convert an e00 file to a SpatialPolygons object (thanks 
> a lot to everybody who was involved to set up this functionality!) by 
> using 'e00toavc' and 'pal2SpatialPolygons'.
>
> But now I'm a bit lost in conversion. How to set the correct 
> projection which is needed for 'pal2SpatialPolygons'?
>
> My prj.adf file says:
>
> Projection    LAMBERT
> Zunits        NO
> Units         METERS
> Spheroid      CLARKE1866
> Xshift        0.0000000000
> Yshift        0.0000000000
> Parameters
>  25  0  0.000 /* 1st standard parallel
>  47  0  0.000 /* 2nd standard parallel
>  110  0  0.000 /* central meridian
>  10  0  0.000 /* latitude of projection's origin
> 0.00000 /* false easting (meters)
> 0.00000 /* false northing (meters)
>
> and I want to use the data together with Roger Bivand's 
> "http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData" data 
> whose proj4string is set to
>
> "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"
>
>
> I tried:
> NMG <- pal2SpatialPolygons(arcs,pal, IDs=IDs, proj4string = 
> CRS("+proj=longlat +ellps=clrk66"))
>
> but it ended in:
>
> Error in validityMethod(object) :
> Geographical CRS given to non-conformant data
>
>
> If I skip the proj4string in 'pal2SpatialPolygons' I get
> NMG at bbox
>         min     max
> r1 -1037807 1141001
> r2  3093775 4892464
>
>
> By looking at this bbox and the actual area given in the e00 file I 
> image that the bbox should be:
>         min     max
> r1  103.7807 114.1001
> r2  30.93775 48.92464
>
>
>
> Many thanks for any hint in advance!
>
> Best,
>
> --Hans
>
> **********************************************************
> Hans-Joerg Bibiko
> Max Planck Institute for Evolutionary Anthropology
> Department of Linguistics
> Deutscher Platz 6     phone:   +49 (0) 341 3550 341
> D-04103 Leipzig       fax:     +49 (0) 341 3550 333
> Germany               e-mail:  bibiko at eva.mpg.de
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


-- 
Drs. Paul Hiemstra
Department of Physical Geography
Faculty of Geosciences
University of Utrecht
Heidelberglaan 2
P.O. Box 80.115
3508 TC Utrecht
Phone: 	+31302535773
Fax:	+31302531145
http://intamap.geo.uu.nl/~paul



From bibiko at eva.mpg.de  Mon Jan 26 12:53:32 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Mon, 26 Jan 2009 12:53:32 +0100
Subject: [R-sig-Geo] e00 to SpatialPolygons: how to set the correct
	projection
In-Reply-To: <497D992E.4090504@geo.uu.nl>
References: <53D25FF2-00AE-4679-B862-3C0274EDD5AB@eva.mpg.de>
	<497D992E.4090504@geo.uu.nl>
Message-ID: <ED30E791-9AC0-4349-B44B-C66F64CB86F7@eva.mpg.de>


On 26.01.2009, at 12:06, Paul Hiemstra wrote:
> Please checkout the spTransform() command which allows you to  
> reproject your sp objects (it is located in the rgdal package).


On 26.01.2009, at 12:06, Roger Bivand wrote:
> No. Your data are in a Lambert projection, probably lcc, but  
> possibly laea, with the +lat_*= and +lon_0= arguments given. If 110  
> is 110E, you are somewhere in Asia, but knowing how muddled things  
> get, it may be 110W, so -110, and North or Central America. If you  
> have access to rgdal, try reading the Arc binary vector data  
> directly, the driver may pick up the projection automatically.



Thanks a lot for both hints! I got it ;)

I did this:

 > e00proj <- CRS(proj4string(readOGR(e00File, "ARC")))
 > e00proj
CRS arguments:
  +proj=lcc +lat_1=25 +lat_2=47 +lat_0=10 +lon_0=110 +x_0=0 +y_0=0  
+ellps=clrk66 +units=m +no_defs

 > NMG <- pal2SpatialPolygons(arcs, pal, IDs=IDs, proj4string = e00proj)
 > NMG <- spTransform(NMG, CRS("+proj=longlat +ellps=WGS84  
+datum=WGS84 +no_defs +towgs84=0,0,0"))


--Hans

**********************************************************
Hans-Joerg Bibiko
Max Planck Institute for Evolutionary Anthropology
Department of Linguistics
Deutscher Platz 6     phone:   +49 (0) 341 3550 341
D-04103 Leipzig       fax:     +49 (0) 341 3550 333
Germany               e-mail:  bibiko at eva.mpg.de



From Maxime.Pauwels at univ-lille1.fr  Mon Jan 26 13:22:07 2009
From: Maxime.Pauwels at univ-lille1.fr (Maxime Pauwels)
Date: Mon, 26 Jan 2009 13:22:07 +0100
Subject: [R-sig-Geo] contour lines on a plot
In-Reply-To: <1232739733.7289.2.camel@Virgilio-Gomez>
References: <4974B230.10604@univ-lille1.fr>	
	<1232385413.7298.55.camel@Virgilio-Gomez>
	<4974BA57.4090907@univ-lille1.fr>	
	<1232388325.7298.59.camel@Virgilio-Gomez>
	<4974EE58.2050507@ub.edu>	
	<1232404991.7716.11.camel@Virgilio-Gomez>
	<4975A485.7020009@univ-lille1.fr>
	<1232739733.7289.2.camel@Virgilio-Gomez>
Message-ID: <497DAAEF.9080005@univ-lille1.fr>

Dear Virgilio,

It doesn't help, it does! Many thanks!
Do you know if there is a way to label contour using contourLines(), or, 
alternatively, to specify the type of  line? Unfortunately, 
drawlabels=TRUE or lty=n don't work.

best regards,

Maxime


Virgilio Gomez Rubio a ?crit :
> Dear Maxime,
>
>   
>> Congratulations for the way you succeed in putting contourline at the 
>> good place, although I'm not sure I understood the solution.
>> I'm almost able to draw myplot... but not yet.
>> The problem is that I can not use contourlines on a dataframe. I attache 
>> my datafile to help you to see what it looks like.
>> I tried to use contour instead of contourLines but it didn't worked.
>>     
>
> The following linesw of code will get you some spatial interpolation using IDW (extension to ordinary kringing is very simple) and the contour lines you seek:
>
> #
> #
> #
>
> #Read data
> library(sp)
> library(gstat)
> d<-read.table(file="Str65popK15coordK.txt", header=TRUE)
> coordinates(d)<-~long+lat
> proj4string(d)<-CRS("+proj=longlat")
>
>
> #create ? grid to perform kriging
> x.range=c(-4.5,30)
> y.range=c(40,55)
> grd<-expand.grid(x=seq(from=x.range[1], to=x.range[2], by=1/6), 
>    y=seq(from=y.range[1], to=y.range[2], by=1/6))
> coordinates(grd)=~x+y
> gridded(grd)=TRUE
> proj4string(grd)<-CRS("+proj=longlat")
>
> #IDW
> g<-gstat(id="K1", formula=K1~1, data=d)
> p<-predict(g,  newdata=grd)
>
> #Get contour lines
> library(maptools)
> img<-as(p, "SpatialGridDataFrame")
> img1<-as.image.SpatialGridDataFrame(img["K1.pred"])
> CL<-contourLines(img1, levels=1:9/10)
> CLSL<-ContourLines2SLDF(CL)
>
> #Display results
> pts<-list("sp.points", d,pch=20, col="black", cex=1)
> lns<-list("sp.lines", CLSL )
> spplot(p,zcol="K1.pred",col.regions=gray(0:100/100), cuts=40, 
>    sp.layout=list(pts, lns), pretty=T)
>
>
> Hope this helps,
>
> Virgilio
>
>
>   


-- 
Maxime Pauwels
Researcher ID: http://www.researcherid.com/rid/A-1745-2009

Laboratoire de G?n?tique et Evolution des Populations V?g?tales
http://www.univ-lille1.fr/gepv
Tel  : +33 3 20 43 40 76
Fax  : +33 3 20 43 69 79
			
?Impose ta chance, serre ton bonheur et va vers ton risque. A te regarder, ils s?habitueront.?
Ren? Char



From spluque at gmail.com  Mon Jan 26 15:57:07 2009
From: spluque at gmail.com (Sebastian P. Luque)
Date: Mon, 26 Jan 2009 08:57:07 -0600
Subject: [R-sig-Geo] readGDAL() and HDF5 files
References: <874ozzt9zl.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901231047020.29831@reclus.nhh.no>
	<871vuuoxyc.fsf@patagonia.sebmags.homelinux.org>
	<497A3273.1030003@utas.edu.au>
	<873af9lj2x.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901241136580.6867@reclus.nhh.no>
	<87wsckecip.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901251832490.13021@reclus.nhh.no>
	<alpine.LRH.2.00.0901252131130.13569@reclus.nhh.no>
	<87ocxvds93.fsf@patagonia.sebmags.homelinux.org>
	<alpine.LRH.2.00.0901261013480.16095@reclus.nhh.no>
Message-ID: <87bptudsjg.fsf@patagonia.sebmags.homelinux.org>

On Mon, 26 Jan 2009 10:33:54 +0100 (CET),
Roger Bivand <Roger.Bivand at nhh.no> wrote:

> On Sun, 25 Jan 2009, Sebastian P. Luque wrote:
>> On Sun, 25 Jan 2009 21:35:12 +0100 (CET),
>> Roger Bivand <Roger.Bivand at nhh.no> wrote:

>> On Sun, 25 Jan 2009, Roger Bivand wrote:
>>> On Sat, 24 Jan 2009, Sebastian P. Luque wrote:

[...]

> Hi,

> Using the lower left geographical coordinate:

> ll <- c(project(matrix(c(-80.7299, 33.9755), nrow=1),
> "+init=epsg:3411")) grd <- GridTopology(ll, c(10000,10000), c(760,
> 1120))

> and so on, I get:

> http://spatial.nhh.no/misc/hudson_st.png

> which isn't bad. Maybe we need (ll+5000) instead, but it's hard to
> tell. The assumption in project() is no datum shift but +ellps=WGS84,
> so that might need attention too.

> Should we draw these problems to the data providers' attention (it is
> the Norwegian Met. Office, and there are R people there too)? Perhaps
> they have a FAQ?

Yes, in fact I sent them the relevant info over the weekend, to which
they replied today and will investigate.  And sure enough, they pointed
me to an R package they built that works with a custom HDF5 library for
their files:

http://saf.met.no/p/tools.html

The package hasn't been updated for 2 years, so they will see what needs
to change, based on our exchanges here.


Cheers,

-- 
Seb



From T.Hengl at uva.nl  Mon Jan 26 17:57:07 2009
From: T.Hengl at uva.nl (Tomislav Hengl)
Date: Mon, 26 Jan 2009 17:57:07 +0100
Subject: [R-sig-Geo] A small repository of publicly available Global maps
Message-ID: <E947955395CF48CDA527F2498CAD2295@pcibed193>


Hi all,

I have just finished preparing a small repository of publicly available Global maps on environment.
For more info see:

http://spatial-analyst.net/wiki/index.php?title=Global_datasets 

The maps can be downloaded directly from:

http://spatial-analyst.net/worldmaps/ 

I would be interested to find out if any of you are aware of a similar dataset that is not mentioned
in this article? (of course, I am only interested in the publicly available datasets)

If somebody knows a way how to make these maps even more accessible to the R-spatial community,
please let me know (e.g. to include them in the "maps" package).


Tom Hengl
http://home.medewerker.uva.nl/t.hengl/



From Roger.Bivand at nhh.no  Mon Jan 26 18:42:55 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 26 Jan 2009 18:42:55 +0100 (CET)
Subject: [R-sig-Geo] Need help in using spdep package for running
 spatial models
In-Reply-To: <9BD0FDD497B6464682342F906E32305404271EC4@MBX23.stu.nus.edu.sg>
References: <9BD0FDD497B6464682342F906E32305404271EC4@MBX23.stu.nus.edu.sg>
Message-ID: <alpine.LRH.2.00.0901261832410.20323@reclus.nhh.no>

On Wed, 21 Jan 2009, Giam Xingli wrote:

> 
> Hi everyone,
> 
> I am new to spatial modeling using R, and I will be grateful for any tip.
> 
> I have an ArcGIS shapefile database of ~800 regions (consisting of ~5000
> polygons) in geographic projection (lat-long). I have a response variable,
> Y, and 4 explanatory variables, X1, X2, X3 and X3. I hope to compare
> single-term GLMs (of X1, X2, X3 and X4 against the null model - on a normal
> distribution, controlling for spatial autocorrelation in all these models).
> 
> >From reading the vignette and spdep package pdf, I understand that the
> spdep package enables me to carry out the analyses. But I am not sure which
> functions I should use - hope someone can guide me.
> 
> Firstly, I intend to determine at which neighborhood distances, (and also
> whether neighborhood coding are weighted or binary) are spatial
> autocorrelation reduced to acceptable levels based on Moran's I.

One reason for you not getting replies so far is that you are mixing up 
two kinds of support: your observations have (multi-) polygon support, but 
you want to use distances between them. What is the distance between one 
collection of polygons and another, especially if members of the 
collections are mixed up? If you think this through, you may realise that 
your possibility of trying to use the "standard" ecological (I suppose) 
correlogram approach is very limited.

Further, AIC-fishing is just that; you lose the properties of the models 
you are trying to fit by "cherry-picking". You can do it, but please take 
account of the fact that it affects your tests of the significance of any 
coefficients. Using single term models (you say GLM, if your response is 
discrete, none of the functions you mention below are applicable), you are 
running the same risk, especially when the covariates covary with each 
other, don't they?

Think though the support question first. There is plenty that can be done, 
but you need to make decisions about how the data are structured and the 
model specified before getting into the detail of choosing functions.

Hope this helps,

Roger

> 
> Secondly, I hope to generate a neighbor list/matrix based on the
> above-mentioned values. Are there any functions that allow me to do that?
> (many of the regions have consist of more than 1 polygon).
> 
> Thirdly, using the neighbourhood list, run SAR (lagged, mixed and err) using
> "lagsarlm" and "errsarlm". Perform model selection as usual using AIC, wAIC
> and %DE.
>
> I would be really grateful, if anyone could comment on the suitability of my
> analytic framework, and point out certain functions I can use (especially
> for the first and second points).
> 
> Thanks for reading this lengthy post.
> 
> Best regards,
> Xingli
> 
> ------------------------------------
> Xingli Giam
> Research Visitor
> Research Institute of Climate Change and Sustainability
> School of Earth and Environmental Sciences
> The University of Adelaide
> Mobile: +61 (0) 425 150 966
> Email: xingli.giam at adelaide.edu.au
> Alt email: giam at nus.edu.sg
> 
> 
> and
> 
> M.Sc. Candidate
> Department of Biological Sciences
> National University of Singapore
> (on study leave till 30 June 2009)
> 
> 
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From bibiko at eva.mpg.de  Mon Jan 26 20:59:01 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Mon, 26 Jan 2009 20:59:01 +0100
Subject: [R-sig-Geo] Looking for best practice to share Rdata containing
	country/prov/county polygons
Message-ID: <754BBC2E-6472-40B0-9B6D-DAE741BA0A2B@eva.mpg.de>

Hi,

due to the fact that I'm just converting some free available data-sets  
to SpatialPolygonsList objects containing country/province/county  
polygons (each polygon can be identified by an unique name) I wonder  
if there is a recommendation/example how to store such data in a  
single R object similar to Roger Bivand's wrld_simpl in order to share  
these objects.

The structure should be organized in such a way that the user can  
choose e.g. to:
- show only the national boundary of a country
- show the national boundary plus province ones (admin level 1 - if  
available)
- show the national boundary plus province ones plus county ones  
(admin level
2 - if available)

- show any combination of selected polygons coming from different  
admin levels
- etc.

Should one make usage of several R objects?
How to set up a name attribute  
(COUNTRY:ADMIN_LEVEL_1_NAME:ADMIN_LEVEL_2_NAME)?
Or maybe, how to extend Roger Bivand's wrld resp. wrld_simpl database  
including a chance to name each single polygon representing an island?

Any comments or suggestions?

Kind regards,

--Hans



**********************************************************
Hans-Joerg Bibiko
Max Planck Institute for Evolutionary Anthropology
Department of Linguistics
Deutscher Platz 6     phone:   +49 (0) 341 3550 341
D-04103 Leipzig       fax:     +49 (0) 341 3550 333
Germany               e-mail:  bibiko at eva.mpg.de



From giam at nus.edu.sg  Tue Jan 27 09:27:31 2009
From: giam at nus.edu.sg (Giam Xingli)
Date: Tue, 27 Jan 2009 16:27:31 +0800
Subject: [R-sig-Geo] Specifying neighbourhood structure for Spatial
	Eigenvector Mapping (SEVM) using ME() in spdep
Message-ID: <9BD0FDD497B6464682342F906E32305404271EE3@MBX23.stu.nus.edu.sg>

An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090127/7880531e/attachment.html>

From xingli.giam at adelaide.edu.au  Tue Jan 27 09:38:42 2009
From: xingli.giam at adelaide.edu.au (Xingli Giam)
Date: Tue, 27 Jan 2009 19:08:42 +1030
Subject: [R-sig-Geo] Specifying neighbourhood structure for Spatial
	Eigenvector Mapping (SEVM) using ME() in spdep
Message-ID: <1233045522.497ec81215e21@webmail.adelaide.edu.au>

Dear people of the R-sig-Geo list,

I am very interested in the Spatial Eigenvector Mapping (SEVM) method in
analysing my spatial data as described in your papers (Griffith and Peres-Neto
2006, Dormann et al. 2007).

However I am rather new to spatial analysis and therefore have some questions
regarding the script provided in the appendix of Dormann et al. 2007.

Code
nb1.0 <- dnearneigh(coordinates(snouter_sp), 0, 1.0)

nb1.0_dists <- nbdists(nb1.0, coordinates(snouter_sp))

nb1.0_sims <- lapply(nb1.0_dists, function(x) (1-((x/4)^2)) )

ME.listw <- nb2listw(nb1.0, glist=nb1.0_sims, style="B")

sevm1 <- ME(snouter1.1 ~ rain + djungle, data=snouter.df, family=gaussian,

listw=ME.listw)

# modify the arguments "family" according to your error distribution

I hope someone who has experience in suing SEVM can give me a hand with some of
the questions I have.

Regarding the weights, is it imperative for me to use (1-((x/4t)^2)? Can we
just do an inverse weighting system like (1/x)? Can I also use weighted (C or
W) instead of binary (B) weighting in this line -ME.listw <- nb2listw(nb1.0,
glist=nb1.0_sims, style="B")?  Lastly, can I specify t, the threshold distance
instead of using a spanning tree algorithm?

Some background information about my data - it is in long-lat coordinates, and
I have calculated great circle distances.

And the code I was trying to use:

nb <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 0, 4000, longlat=T)
nb_dists <- nbdists(nb, as.matrix(dat$x_long, dat$y_lat))
nb_sims <- lapply(nb_dists, function(x) (1/x))
ME.listw <- nb2listw(nb, glist=nb_sims, style="W", zero.policy=T)

sevm1 <- ME(lg.sp1 ~ lg.area, data=dat, family=gaussian, listw=ME.listw)
lmlag1 <- lm(lg.sp1 ~ lg.area + fitted(sevm1), data=dat)
moran<- moran.test(residuals(lmlag1), listw=ME.listw, na.action=na.omit,
zero.policy=T)
moran


Thank you in advance for your help! Hope to hear from you soon!

Many thanks,
Xingli

-- 
Xingli Giam
Research Visitor
Research Institute of Climate Change and Sustainability
School of Earth and Environmental Sciences
The University of Adelaide
Mobile: +61 (0) 425 150 966
Email: xingli.giam at adelaide.edu.au
Alt email: giam at nus.edu.sg

and

M.Sc. Candidate
Department of Biological Sciences
National University of Singapore
(on study leave till 30 June 2009)



From pisicandru at hotmail.com  Tue Jan 27 17:21:46 2009
From: pisicandru at hotmail.com (Monica Pisica)
Date: Tue, 27 Jan 2009 16:21:46 +0000
Subject: [R-sig-Geo] reading *.grd files - revisited
Message-ID: <BAY104-W377E53BE1A4A57108638F3C3CB0@phx.gbl>


Hi,
 
I've read already the thread about how to read *.grd files in R. What i want to do is to re-save the file in a geotiff format so i can load it in ArcGIS. I tried readRGDAL and i got the following error:
 
x <- readRGDAL("test_grid.grd")
Error in .local(.Object, ....):
GDAL Error 4: "test_grid.grd' not recognized as a suported file format.

Next step was to do what Alexander Brenning suggested using RSAGA but after installing the library and trying the following command i got this error:
 
rsaga.get.usage("io_grid",3)
 
Error in setwd (env$workspace) : character argument expected
In addition: warning message:
In rsaga.env()
SAGA command line program 'saga.cmd.exe' not found in any of the paths
c:/PROGRA~2/R/R~28~1.1PA/library/RSAGA/saga_vc
.....
 
Following afterwards a list of directories in my computer. Do i need to install any other additional package and load it in order to use RSAGA???
 
I receive almost same error for the command 
rsaga.geoprocessor("io_grid",3, param = list(GRID = "temp.sgrd", FILE = "test_grid.grd")) 
 
I have installed R 2.8.1 patched and all packages are updated, on a Windows XP professional x64 machine 64 bit.
 
If anybody wants to give it a try you will find the file (probably around noon - it takes about 15 - 30 min to upload on the site) at ftp://stpfiles.er.usgs.gov/Monica/GRID/test_grid.grd
 
Thanks for all the help,
 
Monica
_________________________________________________________________


12009


From xingli.giam at adelaide.edu.au  Wed Jan 28 00:26:31 2009
From: xingli.giam at adelaide.edu.au (Xingli Giam)
Date: Wed, 28 Jan 2009 09:56:31 +1030
Subject: [R-sig-Geo] Eigenvalues for eigenvectors extracted using ME() of
	spdep
In-Reply-To: <1233045522.497ec81215e21@webmail.adelaide.edu.au>
References: <1233045522.497ec81215e21@webmail.adelaide.edu.au>
Message-ID: <1233098791.497f982794063@webmail.adelaide.edu.au>

Hi everyone,

I hope someone can point me to the right direction in printing the eigenvalues
of selected eigenvectors using ME() of spdep. I've communicated with Dr. Pedro
Peres-Neto and he has been really helpful in answering some of my questions
about SEVM. He warned that some combinations of threshold values and weighting
schemes may generate negative eigenvalues that may not be desirable. That is
why I'm asking this question.

Thanks in advance!

Best,
Xingli


-- 
Xingli Giam
Research Visitor
Research Institute of Climate Change and Sustainability
School of Earth and Environmental Sciences
The University of Adelaide
Mobile: +61 (0) 425 150 966
Email: xingli.giam at adelaide.edu.au
Alt email: giam at nus.edu.sg

and

M.Sc. Candidate
Department of Biological Sciences
National University of Singapore
(on study leave till 30 June 2009)



From Alexander.Herr at csiro.au  Wed Jan 28 02:10:11 2009
From: Alexander.Herr at csiro.au (Alexander.Herr at csiro.au)
Date: Wed, 28 Jan 2009 12:10:11 +1100
Subject: [R-sig-Geo] calculate raster values based on vector regions
In-Reply-To: <dc22b2570901212258m79e53e4er58c403b792309c4a@mail.gmail.com>
References: <mailman.7.1229770803.5728.r-sig-geo@stat.math.ethz.ch>
	<D6D8CB3DE7413A44BD15BF7D78C960C3010090BED7@EXNSW-MBX04.nexus.csiro.au>
	<dc22b2570812230827g4bb2e07cq64de18423954feed@mail.gmail.com>
	<D6D8CB3DE7413A44BD15BF7D78C960C3010090BEDC@EXNSW-MBX04.nexus.csiro.au>
	<dc22b2570812240652t149c30eeg1fd1f6b1845d95a5@mail.gmail.com>
	<D6D8CB3DE7413A44BD15BF7D78C960C30102532E61@EXNSW-MBX04.nexus.csiro.au>
	<dc22b2570901212157g79dfcd08u16236f5f6257e5a2@mail.gmail.com>
	<dc22b2570901212204r72b67e5s8da05ca690b45b60@mail.gmail.com>
	<dc22b2570901212208se95bb70n7696ffb27e3c58db@mail.gmail.com>
	<D6D8CB3DE7413A44BD15BF7D78C960C30102532E63@EXNSW-MBX04.nexus.csiro.au>
	<dc22b2570901212258m79e53e4er58c403b792309c4a@mail.gmail.com>
Message-ID: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E72@EXNSW-MBX04.nexus.csiro.au>

 
Hi List,

How would I go about assigning values to a raster based on polygon regions in R. Examples would be most appreciated.

I have (vector) regions assigned to a specific value. The raster has NAs and some pixels where these values are likely to occur on ground. I need to assign these values to the raster and can do this in ArcInfo through vectors and rasterizing but only to a limited raster size. And R is much more preferable anyway...

Any help appreciated.
Cheers
Herry  



From r.hijmans at gmail.com  Wed Jan 28 02:58:23 2009
From: r.hijmans at gmail.com (Robert Hijmans)
Date: Wed, 28 Jan 2009 09:58:23 +0800
Subject: [R-sig-Geo] reading *.grd files - revisited
In-Reply-To: <BAY104-W377E53BE1A4A57108638F3C3CB0@phx.gbl>
References: <BAY104-W377E53BE1A4A57108638F3C3CB0@phx.gbl>
Message-ID: <dc22b2570901271758j6df636a5tb211a22d0913250b@mail.gmail.com>

Dear Monica,

You probably refer to this thread:
https://stat.ethz.ch/pipermail/r-sig-geo/2008-October/004326.html
which is about Surfer (.grd) files. Unfortunately .grd is used for
many different formats, and your file is not a Surfer .grd file.

In fact it is a netCDF file. ( .cdf or .nc are more common extensions
for that format !)

I was able to read your file and plot the values like this (I use the
raster package, but you can adapt the last bit if you do not want
that):

# you probably need to install these two packages:
install.packages("ncdf")
install.packages("raster", repos="http://R-Forge.R-project.org")

require(ncdf)
require(raster)

f <- "d:/test_grid.grd"
nc <- open.ncdf(f)
xr <- get.var.ncdf(nc, nc$var[[1]])
yr <- get.var.ncdf(nc, nc$var[[2]])
res <- get.var.ncdf(nc, nc$var[[4]])
dims <- get.var.ncdf(nc, nc$var[[5]])
v <- as.vector(get.var.ncdf(nc, nc$var[[6]]))
close.ncdf(nc)

xm <- xr[1] - 0.5 * res[1]
xx <- xr[2] + 0.5 * res[1]
ym <- yr[1] - 0.5 * res[2]
yx <- yr[2] + 0.5 * res[2]

r <- newRaster(xmn=xm, xmx=xx, ymn=ym, ymx=yx, ncols=dims[1], nrows=dims[2])
r <- setValues(r, v)
plot(r)

# if you want an sp grid object
sp <- asSpGrid(r)


Robert

On Wed, Jan 28, 2009 at 12:21 AM, Monica Pisica <pisicandru at hotmail.com> wrote:
>
> Hi,
>
> I've read already the thread about how to read *.grd files in R. What i want to do is to re-save the file in a geotiff format so i can load it in ArcGIS. I tried readRGDAL and i got the following error:
>
> x <- readRGDAL("test_grid.grd")
> Error in .local(.Object, ....):
> GDAL Error 4: "test_grid.grd' not recognized as a suported file format.
>
> Next step was to do what Alexander Brenning suggested using RSAGA but after installing the library and trying the following command i got this error:
>
> rsaga.get.usage("io_grid",3)
>
> Error in setwd (env$workspace) : character argument expected
> In addition: warning message:
> In rsaga.env()
> SAGA command line program 'saga.cmd.exe' not found in any of the paths
> c:/PROGRA~2/R/R~28~1.1PA/library/RSAGA/saga_vc
> .....
>
> Following afterwards a list of directories in my computer. Do i need to install any other additional package and load it in order to use RSAGA???
>
> I receive almost same error for the command
> rsaga.geoprocessor("io_grid",3, param = list(GRID = "temp.sgrd", FILE = "test_grid.grd"))
>
> I have installed R 2.8.1 patched and all packages are updated, on a Windows XP professional x64 machine 64 bit.
>
> If anybody wants to give it a try you will find the file (probably around noon - it takes about 15 - 30 min to upload on the site) at ftp://stpfiles.er.usgs.gov/Monica/GRID/test_grid.grd
>
> Thanks for all the help,
>
> Monica
> _________________________________________________________________
>
>
> 12009
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>



From kamran.safi at ioz.ac.uk  Wed Jan 28 09:51:04 2009
From: kamran.safi at ioz.ac.uk (Kamran Safi)
Date: Wed, 28 Jan 2009 08:51:04 -0000
Subject: [R-sig-Geo] calculate raster values based on vector regions
References: <mailman.7.1229770803.5728.r-sig-geo@stat.math.ethz.ch><D6D8CB3DE7413A44BD15BF7D78C960C3010090BED7@EXNSW-MBX04.nexus.csiro.au><dc22b2570812230827g4bb2e07cq64de18423954feed@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C3010090BEDC@EXNSW-MBX04.nexus.csiro.au><dc22b2570812240652t149c30eeg1fd1f6b1845d95a5@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E61@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212157g79dfcd08u16236f5f6257e5a2@mail.gmail.com><dc22b2570901212204r72b67e5s8da05ca690b45b60@mail.gmail.com><dc22b2570901212208se95bb70n7696ffb27e3c58db@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E63@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212258m79e53e4er58c403b792309c4a@mail.gmail.com>
	<D6D8CB3DE7413A44BD15BF7D78C960C30102532E72@EXNSW-MBX04.nexus.csiro.au>
Message-ID: <41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98643@zsl26>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090128/cbe4c6ae/attachment.pl>

From Roger.Bivand at nhh.no  Wed Jan 28 09:54:00 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 28 Jan 2009 09:54:00 +0100 (CET)
Subject: [R-sig-Geo] Eigenvalues for eigenvectors extracted using ME()
 of spdep
In-Reply-To: <1233098791.497f982794063@webmail.adelaide.edu.au>
References: <1233045522.497ec81215e21@webmail.adelaide.edu.au>
	<1233098791.497f982794063@webmail.adelaide.edu.au>
Message-ID: <alpine.LRH.2.00.0901280947230.27214@reclus.nhh.no>

On Wed, 28 Jan 2009, Xingli Giam wrote:

> Hi everyone,
>
> I hope someone can point me to the right direction in printing the eigenvalues
> of selected eigenvectors using ME() of spdep. I've communicated with Dr. Pedro
> Peres-Neto and he has been really helpful in answering some of my questions
> about SEVM. He warned that some combinations of threshold values and weighting
> schemes may generate negative eigenvalues that may not be desirable. That is
> why I'm asking this question.

The eigenvalues are not (at present) available. If you need them now, do:

debug(ME)

run your ME(...) command, and step through until you see the line:

 	eV <- eigen(Cent %*% Wmat %*% Cent, EISPACK=TRUE)$vectors

Enter:
my_eigenvalues <<- eigen(Cent %*% Wmat %*% Cent, EISPACK=TRUE)$values

then use "c" to "continue" through the debugging. This should assign the 
eigenvalues of the same matrix to my_eigenvalues in your global 
environment. Remember to say undebug(ME) afterwards.

If you (or others) would find it useful, I can add an argument to return 
the eigenvalues as an attribute of the output object when requested.

Hope this helps,

Roger

>
> Thanks in advance!
>
> Best,
> Xingli
>
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From T.Hengl at uva.nl  Wed Jan 28 09:56:01 2009
From: T.Hengl at uva.nl (Tomislav Hengl)
Date: Wed, 28 Jan 2009 09:56:01 +0100
Subject: [R-sig-Geo] calculate raster values based on vector regions
In-Reply-To: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E72@EXNSW-MBX04.nexus.csiro.au>
References: <mailman.7.1229770803.5728.r-sig-geo@stat.math.ethz.ch><D6D8CB3DE7413A44BD15BF7D78C960C3010090BED7@EXNSW-MBX04.nexus.csiro.au><dc22b2570812230827g4bb2e07cq64de18423954feed@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C3010090BEDC@EXNSW-MBX04.nexus.csiro.au><dc22b2570812240652t149c30eeg1fd1f6b1845d95a5@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E61@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212157g79dfcd08u16236f5f6257e5a2@mail.gmail.com><dc22b2570901212204r72b67e5s8da05ca690b45b60@mail.gmail.com><dc22b2570901212208se95bb70n7696ffb27e3c58db@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E63@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212258m79e53e4er58c403b792309c4a@mail.gmail.com>
	<D6D8CB3DE7413A44BD15BF7D78C960C30102532E72@EXNSW-MBX04.nexus.csiro.au>
Message-ID: <21966083A4384141886B55DB3F394CD7@pcibed193>


Dear Herry,

If I understand what you problem, one solution is to use R+SAGA. You should first convert the
polygon map to the same grid, and then you can load it to R and do any type of aggregation:

> library(maptools)
> library(rgdal)
> library(RSAGA)
# load the gridded map:
> rastermap <- readGDAL("rastermap.asc")
# load the shapefile:
> rsaga.esri.to.sgrd(in.grids=" rastermap.asc", out.sgrds=" rastermap.sgrd", in.path=getwd())
# convert the polygon map to a raster map:
> cellsize <- rastermap at grid@cellsize[1]
> rsaga.geoprocessor(lib="grid_gridding", module=3, param=list(GRID="polygons.sgrd",
INPUT="polygons.shp", FIELD=1, LINE_TYPE=0, USER_CELL_SIZE=cellsize,
USER_X_EXTENT_MIN=rastermap at bbox[1,1]+cellsize, USER_X_EXTENT_MAX=rastermap at bbox[1,2]-cellsize,
USER_Y_EXTENT_MIN=rastermap at bbox[2,1]+cellsize, USER_Y_EXTENT_MAX=rastermap at bbox[2,2]-cellsize))
> rsaga.sgrd.to.esri(in.sgrds="polygons.sgrd", out.grids="polygons.asc", out.path=getwd(), prec=0)
> rastermap$polygons <- as.factor(readGDAL("polygons.asc"))
# summary statistics per polygon class:
> raster.polygons <- boxplot(band1 ~ polygons, rastermap @data,
col=rainbow(length(levels(negotingrid$SOIL))))
> str(raster.polygons)

You will of course need to adjust the "FIELD" position in the attribute table and the precision
"prec".

To obtain and use SAGA, check this article: 
http://spatial-analyst.net/wiki/index.php?title=Software 

cheers,

How is the weather now in Canberra? In Amsterdam is freezing brrr.

T. Hengl


> -----Original Message-----
> From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf
> Of Alexander.Herr at csiro.au
> Sent: Wednesday, January 28, 2009 2:10 AM
> To: r-sig-geo at stat.math.ethz.ch
> Subject: [R-sig-Geo] calculate raster values based on vector regions
> 
> 
> Hi List,
> 
> How would I go about assigning values to a raster based on polygon regions in R. Examples would be
> most appreciated.
> 
> I have (vector) regions assigned to a specific value. The raster has NAs and some pixels where
> these values are likely to occur on ground. I need to assign these values to the raster and can do
> this in ArcInfo through vectors and rasterizing but only to a limited raster size. And R is much
> more preferable anyway...
> 
> Any help appreciated.
> Cheers
> Herry
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo



From Alexander.Herr at csiro.au  Wed Jan 28 11:37:32 2009
From: Alexander.Herr at csiro.au (Alexander.Herr at csiro.au)
Date: Wed, 28 Jan 2009 21:37:32 +1100
Subject: [R-sig-Geo] calculate raster values based on vector regions
In-Reply-To: <21966083A4384141886B55DB3F394CD7@pcibed193>
References: <mailman.7.1229770803.5728.r-sig-geo@stat.math.ethz.ch><D6D8CB3DE7413A44BD15BF7D78C960C3010090BED7@EXNSW-MBX04.nexus.csiro.au><dc22b2570812230827g4bb2e07cq64de18423954feed@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C3010090BEDC@EXNSW-MBX04.nexus.csiro.au><dc22b2570812240652t149c30eeg1fd1f6b1845d95a5@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E61@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212157g79dfcd08u16236f5f6257e5a2@mail.gmail.com><dc22b2570901212204r72b67e5s8da05ca690b45b60@mail.gmail.com><dc22b2570901212208se95bb70n7696ffb27e3c58db@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E63@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212258m79e53e4er58c403b792309c4a@mail.gmail.com>
	<D6D8CB3DE7413A44BD15BF7D78C960C30102532E72@EXNSW-MBX04.nexus.csiro.au>,
	<21966083A4384141886B55DB3F394CD7@pcibed193>
Message-ID: <D6D8CB3DE7413A44BD15BF7D78C960C30102510510@EXNSW-MBX04.nexus.csiro.au>

Hi list,

I try to explain my problem a bit better.

1) Vector and raster have the same extent.

2) Vector data:
Several polygones with different attribute values
3) raster data:
A raster with points over the areas (and also NAs for areas where it is not possible to have a value from polygones). These points need to get the polygon attribute values assigned

Vector                    Raster                  after assiging polygon values to raster
-----------             ------------          ------------
|   3   |  1    |          | +na + + na |        |3na 3 1 na  |
|-----------|          | na na  na na|        |na na  na na|
|    7  | 5     |          |++na  na +  |        |7 7na na 5  |
-----------            -------------        -------------

+ denotes a raster value

Does this make more sense?

In gdal/fwtools is a function rgdal_rasterize, which could potentially do this, but I'd rather to all in R.

Cheers and thanks
Herry

________________________________________
From: Tomislav Hengl [T.Hengl at uva.nl]
Sent: Wednesday, January 28, 2009 7:56 PM
To: r-sig-geo at stat.math.ethz.ch
Cc: Herr, Alexander Herr - Herry (CSE, Gungahlin)
Subject: RE: [R-sig-Geo] calculate raster values based on vector regions

Dear Herry,

If I understand what you problem, one solution is to use R+SAGA. You should first convert the
polygon map to the same grid, and then you can load it to R and do any type of aggregation:

> library(maptools)
> library(rgdal)
> library(RSAGA)
# load the gridded map:
> rastermap <- readGDAL("rastermap.asc")
# load the shapefile:
> rsaga.esri.to.sgrd(in.grids=" rastermap.asc", out.sgrds=" rastermap.sgrd", in.path=getwd())
# convert the polygon map to a raster map:
> cellsize <- rastermap at grid@cellsize[1]
> rsaga.geoprocessor(lib="grid_gridding", module=3, param=list(GRID="polygons.sgrd",
INPUT="polygons.shp", FIELD=1, LINE_TYPE=0, USER_CELL_SIZE=cellsize,
USER_X_EXTENT_MIN=rastermap at bbox[1,1]+cellsize, USER_X_EXTENT_MAX=rastermap at bbox[1,2]-cellsize,
USER_Y_EXTENT_MIN=rastermap at bbox[2,1]+cellsize, USER_Y_EXTENT_MAX=rastermap at bbox[2,2]-cellsize))
> rsaga.sgrd.to.esri(in.sgrds="polygons.sgrd", out.grids="polygons.asc", out.path=getwd(), prec=0)
> rastermap$polygons <- as.factor(readGDAL("polygons.asc"))
# summary statistics per polygon class:
> raster.polygons <- boxplot(band1 ~ polygons, rastermap @data,
col=rainbow(length(levels(negotingrid$SOIL))))
> str(raster.polygons)

You will of course need to adjust the "FIELD" position in the attribute table and the precision
"prec".

To obtain and use SAGA, check this article:
http://spatial-analyst.net/wiki/index.php?title=Software

cheers,

How is the weather now in Canberra? In Amsterdam is freezing brrr.

T. Hengl


> -----Original Message-----
> From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf
> Of Alexander.Herr at csiro.au
> Sent: Wednesday, January 28, 2009 2:10 AM
> To: r-sig-geo at stat.math.ethz.ch
> Subject: [R-sig-Geo] calculate raster values based on vector regions
>
>
> Hi List,
>
> How would I go about assigning values to a raster based on polygon regions in R. Examples would be
> most appreciated.
>
> I have (vector) regions assigned to a specific value. The raster has NAs and some pixels where
> these values are likely to occur on ground. I need to assign these values to the raster and can do
> this in ArcInfo through vectors and rasterizing but only to a limited raster size. And R is much
> more preferable anyway...
>
> Any help appreciated.
> Cheers
> Herry
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From T.Hengl at uva.nl  Wed Jan 28 11:50:36 2009
From: T.Hengl at uva.nl (Tomislav Hengl)
Date: Wed, 28 Jan 2009 11:50:36 +0100
Subject: [R-sig-Geo] calculate raster values based on vector regions
In-Reply-To: <21966083A4384141886B55DB3F394CD7@pcibed193>
References: <mailman.7.1229770803.5728.r-sig-geo@stat.math.ethz.ch><D6D8CB3DE7413A44BD15BF7D78C960C3010090BED7@EXNSW-MBX04.nexus.csiro.au><dc22b2570812230827g4bb2e07cq64de18423954feed@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C3010090BEDC@EXNSW-MBX04.nexus.csiro.au><dc22b2570812240652t149c30eeg1fd1f6b1845d95a5@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E61@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212157g79dfcd08u16236f5f6257e5a2@mail.gmail.com><dc22b2570901212204r72b67e5s8da05ca690b45b60@mail.gmail.com><dc22b2570901212208se95bb70n7696ffb27e3c58db@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E63@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212258m79e53e4er58c403b792309c4a@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E72@EXNSW-MBX04.nexus.csiro.au>
	<21966083A4384141886B55DB3F394CD7@pcibed193>
Message-ID: <9AB493FD979441E39AE639FC9ABBC686@pcibed193>


My appologies. The previous script had few (5) typos:

> library(rgdal)
> library(RSAGA)
# load the gridded map:
> rastermap <- readGDAL("rastermap.asc")
> rsaga.esri.to.sgrd(in.grids=" rastermap.asc", out.sgrds=" rastermap.sgrd", in.path=getwd())
# convert the polygon map to a raster map:
> cellsize <- rastermap at grid@cellsize[1]
> rsaga.get.usage(lib="grid_gridding", module=3)
> rsaga.geoprocessor(lib="grid_gridding", module=3, param=list(GRID="polygons.sgrd",
INPUT="polygons.shp", FIELD=1, LINE_TYPE=0, USER_CELL_SIZE=cellsize,
USER_X_EXTENT_MIN=rastermap at bbox[1,1]+cellsize, USER_X_EXTENT_MAX=rastermap at bbox[1,2]-cellsize,
USER_Y_EXTENT_MIN=rastermap at bbox[2,1]+cellsize, USER_Y_EXTENT_MAX=rastermap at bbox[2,2]-cellsize))
> rsaga.sgrd.to.esri(in.sgrds="polygons.sgrd", out.grids="polygons.asc", out.path=getwd(), prec=0)
> rastermap$polygons <- as.factor(readGDAL("polygons.asc")$band1)
# summary statistics per polygon class:
> raster.polygons <- boxplot(band1 ~ polygons, rastermap at data, col=rainbow(length(levels(rastermap
$polygons))))
> str(raster.polygons)

HTH

Tom Hengl
http://spatial-analyst.net 


> -----Original Message-----
> From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf
> Of Tomislav Hengl
> Sent: Wednesday, January 28, 2009 9:56 AM
> To: r-sig-geo at stat.math.ethz.ch
> Cc: Alexander.Herr at csiro.au
> Subject: Re: [R-sig-Geo] calculate raster values based on vector regions
> 
> 
> Dear Herry,
> 
> If I understand what you problem, one solution is to use R+SAGA. You should first convert the
> polygon map to the same grid, and then you can load it to R and do any type of aggregation:
> 
> > library(maptools)
> > library(rgdal)
> > library(RSAGA)
> # load the gridded map:
> > rastermap <- readGDAL("rastermap.asc")
> # load the shapefile:
> > rsaga.esri.to.sgrd(in.grids=" rastermap.asc", out.sgrds=" rastermap.sgrd", in.path=getwd())
> # convert the polygon map to a raster map:
> > cellsize <- rastermap at grid@cellsize[1]
> > rsaga.geoprocessor(lib="grid_gridding", module=3, param=list(GRID="polygons.sgrd",
> INPUT="polygons.shp", FIELD=1, LINE_TYPE=0, USER_CELL_SIZE=cellsize,
> USER_X_EXTENT_MIN=rastermap at bbox[1,1]+cellsize, USER_X_EXTENT_MAX=rastermap at bbox[1,2]-cellsize,
> USER_Y_EXTENT_MIN=rastermap at bbox[2,1]+cellsize, USER_Y_EXTENT_MAX=rastermap at bbox[2,2]-cellsize))
> > rsaga.sgrd.to.esri(in.sgrds="polygons.sgrd", out.grids="polygons.asc", out.path=getwd(), prec=0)
> > rastermap$polygons <- as.factor(readGDAL("polygons.asc"))
> # summary statistics per polygon class:
> > raster.polygons <- boxplot(band1 ~ polygons, rastermap @data,
> col=rainbow(length(levels(negotingrid$SOIL))))
> > str(raster.polygons)
> 
> You will of course need to adjust the "FIELD" position in the attribute table and the precision
> "prec".
> 
> To obtain and use SAGA, check this article:
> http://spatial-analyst.net/wiki/index.php?title=Software
> 
> cheers,
> 
> How is the weather now in Canberra? In Amsterdam is freezing brrr.
> 
> T. Hengl
> 
> 
> > -----Original Message-----
> > From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf
> > Of Alexander.Herr at csiro.au
> > Sent: Wednesday, January 28, 2009 2:10 AM
> > To: r-sig-geo at stat.math.ethz.ch
> > Subject: [R-sig-Geo] calculate raster values based on vector regions
> >
> >
> > Hi List,
> >
> > How would I go about assigning values to a raster based on polygon regions in R. Examples would
> be
> > most appreciated.
> >
> > I have (vector) regions assigned to a specific value. The raster has NAs and some pixels where
> > these values are likely to occur on ground. I need to assign these values to the raster and can
> do
> > this in ArcInfo through vectors and rasterizing but only to a limited raster size. And R is much
> > more preferable anyway...
> >
> > Any help appreciated.
> > Cheers
> > Herry
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at stat.math.ethz.ch
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo



From kamran.safi at ioz.ac.uk  Wed Jan 28 12:03:54 2009
From: kamran.safi at ioz.ac.uk (Kamran Safi)
Date: Wed, 28 Jan 2009 11:03:54 -0000
Subject: [R-sig-Geo] calculate raster values based on vector regions
References: <mailman.7.1229770803.5728.r-sig-geo@stat.math.ethz.ch><D6D8CB3DE7413A44BD15BF7D78C960C3010090BED7@EXNSW-MBX04.nexus.csiro.au><dc22b2570812230827g4bb2e07cq64de18423954feed@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C3010090BEDC@EXNSW-MBX04.nexus.csiro.au><dc22b2570812240652t149c30eeg1fd1f6b1845d95a5@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E61@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212157g79dfcd08u16236f5f6257e5a2@mail.gmail.com><dc22b2570901212204r72b67e5s8da05ca690b45b60@mail.gmail.com><dc22b2570901212208se95bb70n7696ffb27e3c58db@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E63@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212258m79e53e4er58c403b792309c4a@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E72@EXNSW-MBX04.nexus.csiro.au>,
	<21966083A4384141886B55DB3F394CD7@pcibed193>
	<D6D8CB3DE7413A44BD15BF7D78C960C30102510510@EXNSW-MBX04.nexus.csiro.au>
Message-ID: <41E1ED29E5E8E34BBDD8B82CFA1A9D0405F98644@zsl26>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090128/4b620798/attachment.pl>

From pisicandru at hotmail.com  Wed Jan 28 15:09:45 2009
From: pisicandru at hotmail.com (Monica Pisica)
Date: Wed, 28 Jan 2009 14:09:45 +0000
Subject: [R-sig-Geo] reading *.grd files - revisited
In-Reply-To: <dc22b2570901271758j6df636a5tb211a22d0913250b@mail.gmail.com>
References: <BAY104-W377E53BE1A4A57108638F3C3CB0@phx.gbl>
	<dc22b2570901271758j6df636a5tb211a22d0913250b@mail.gmail.com>
Message-ID: <BAY104-W186AF83A06107670826B18C3C80@phx.gbl>


Hi Robert,
 
Thank you so much for your help. It works very nicely .... i wonder why the extension was grd .... nowhere on the site from where i downloaded the data it said it is a netCDF file .... 
 
Monica


> Date: Wed, 28 Jan 2009 09:58:23 +0800
> Subject: Re: [R-sig-Geo] reading *.grd files - revisited
> From: r.hijmans at gmail.com
> To: pisicandru at hotmail.com
> CC: r-sig-geo at stat.math.ethz.ch
> 
> Dear Monica,
> 
> You probably refer to this thread:
> https://stat.ethz.ch/pipermail/r-sig-geo/2008-October/004326.html
> which is about Surfer (.grd) files. Unfortunately .grd is used for
> many different formats, and your file is not a Surfer .grd file.
> 
> In fact it is a netCDF file. ( .cdf or .nc are more common extensions
> for that format !)
> 
> I was able to read your file and plot the values like this (I use the
> raster package, but you can adapt the last bit if you do not want
> that):
> 
> # you probably need to install these two packages:
> install.packages("ncdf")
> install.packages("raster", repos="http://R-Forge.R-project.org")
> 
> require(ncdf)
> require(raster)
> 
> f <- "d:/test_grid.grd"
> nc <- open.ncdf(f)
> xr <- get.var.ncdf(nc, nc$var[[1]])
> yr <- get.var.ncdf(nc, nc$var[[2]])
> res <- get.var.ncdf(nc, nc$var[[4]])
> dims <- get.var.ncdf(nc, nc$var[[5]])
> v <- as.vector(get.var.ncdf(nc, nc$var[[6]]))
> close.ncdf(nc)
> 
> xm <- xr[1] - 0.5 * res[1]
> xx <- xr[2] + 0.5 * res[1]
> ym <- yr[1] - 0.5 * res[2]
> yx <- yr[2] + 0.5 * res[2]
> 
> r <- newRaster(xmn=xm, xmx=xx, ymn=ym, ymx=yx, ncols=dims[1], nrows=dims[2])
> r <- setValues(r, v)
> plot(r)
> 
> # if you want an sp grid object
> sp <- asSpGrid(r)
> 
> 
> Robert
> 
> On Wed, Jan 28, 2009 at 12:21 AM, Monica Pisica  wrote:
>>
>> Hi,
>>
>> I've read already the thread about how to read *.grd files in R. What i want to do is to re-save the file in a geotiff format so i can load it in ArcGIS. I tried readRGDAL and i got the following error:
>>
>> x <- readRGDAL("test_grid.grd")
>> Error in .local(.Object, ....):
>> GDAL Error 4: "test_grid.grd' not recognized as a suported file format.
>>
>> Next step was to do what Alexander Brenning suggested using RSAGA but after installing the library and trying the following command i got this error:
>>
>> rsaga.get.usage("io_grid",3)
>>
>> Error in setwd (env$workspace) : character argument expected
>> In addition: warning message:
>> In rsaga.env()
>> SAGA command line program 'saga.cmd.exe' not found in any of the paths
>> c:/PROGRA~2/R/R~28~1.1PA/library/RSAGA/saga_vc
>> .....
>>
>> Following afterwards a list of directories in my computer. Do i need to install any other additional package and load it in order to use RSAGA???
>>
>> I receive almost same error for the command
>> rsaga.geoprocessor("io_grid",3, param = list(GRID = "temp.sgrd", FILE = "test_grid.grd"))
>>
>> I have installed R 2.8.1 patched and all packages are updated, on a Windows XP professional x64 machine 64 bit.
>>
>> If anybody wants to give it a try you will find the file (probably around noon - it takes about 15 - 30 min to upload on the site) at ftp://stpfiles.er.usgs.gov/Monica/GRID/test_grid.grd
>>
>> Thanks for all the help,
>>
>> Monica
>> _________________________________________________________________
>>
>>
>> 12009
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
_________________________________________________________________


owitworks_012009


From edzer.pebesma at uni-muenster.de  Wed Jan 28 16:37:38 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Wed, 28 Jan 2009 16:37:38 +0100
Subject: [R-sig-Geo] calculate raster values based on vector regions
In-Reply-To: <D6D8CB3DE7413A44BD15BF7D78C960C30102510510@EXNSW-MBX04.nexus.csiro.au>
References: <mailman.7.1229770803.5728.r-sig-geo@stat.math.ethz.ch><D6D8CB3DE7413A44BD15BF7D78C960C3010090BED7@EXNSW-MBX04.nexus.csiro.au><dc22b2570812230827g4bb2e07cq64de18423954feed@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C3010090BEDC@EXNSW-MBX04.nexus.csiro.au><dc22b2570812240652t149c30eeg1fd1f6b1845d95a5@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E61@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212157g79dfcd08u16236f5f6257e5a2@mail.gmail.com><dc22b2570901212204r72b67e5s8da05ca690b45b60@mail.gmail.com><dc22b2570901212208se95bb70n7696ffb27e3c58db@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E63@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212258m79e53e4er58c403b792309c4a@mail.gmail.com>	<D6D8CB3DE7413A44BD15BF7D78C960C30102532E72@EXNSW-MBX04.nexus.csiro.au>,
	<21966083A4384141886B55DB3F394CD7@pcibed193>
	<D6D8CB3DE7413A44BD15BF7D78C960C30102510510@EXNSW-MBX04.nexus.csiro.au>
Message-ID: <49807BC2.8070603@uni-muenster.de>

Alexander, below is a reproducible example that uses a polygon data set 
from package maptools. You should read your polygons e.g. through 
readOGR (package rgdal) and your grid through readGDAL.

If your grid comes from readGDAL, then 2 and 3 can be omitted, and 5 
simplifies to:

out$SID79 = nc$SID79[idx]

All in R. Hth,
--
Edzer

library(maptools)
# 1 read a SpatialPolygonsDataFrame
nc <- readShapePoly(system.file("shapes/sids.shp",
        package="maptools")[1], proj4string=CRS("+proj=longlat 
+datum=NAD27"))
# 2 sample points on a regular grid:
grd = spsample(nc, 5000, "regular", offset = c(.5,.5))
# 3 convert points into grid:
gridded(grd) = TRUE
# 4 find index of polygons on grid cell centres:
idx = overlay(grd, nc)
# 5 merge grid points with attributes from polygons:
out = SpatialPixelsDataFrame(grd, data.frame(SIDS79 = nc$SID79[idx]))
# 6 plot:
spplot(out, col.regions=bpy.colors())


Alexander.Herr at csiro.au wrote:
> Hi list,
>
> I try to explain my problem a bit better.
>
> 1) Vector and raster have the same extent.
>
> 2) Vector data:
> Several polygones with different attribute values
> 3) raster data:
> A raster with points over the areas (and also NAs for areas where it is not possible to have a value from polygones). These points need to get the polygon attribute values assigned
>
> Vector                    Raster                  after assiging polygon values to raster
> -----------             ------------          ------------
> |   3   |  1    |          | +na + + na |        |3na 3 1 na  |
> |-----------|          | na na  na na|        |na na  na na|
> |    7  | 5     |          |++na  na +  |        |7 7na na 5  |
> -----------            -------------        -------------
>
> + denotes a raster value
>
> Does this make more sense?
>
> In gdal/fwtools is a function rgdal_rasterize, which could potentially do this, but I'd rather to all in R.
>
> Cheers and thanks
> Herry
>
> ________________________________________
> From: Tomislav Hengl [T.Hengl at uva.nl]
> Sent: Wednesday, January 28, 2009 7:56 PM
> To: r-sig-geo at stat.math.ethz.ch
> Cc: Herr, Alexander Herr - Herry (CSE, Gungahlin)
> Subject: RE: [R-sig-Geo] calculate raster values based on vector regions
>
> Dear Herry,
>
> If I understand what you problem, one solution is to use R+SAGA. You should first convert the
> polygon map to the same grid, and then you can load it to R and do any type of aggregation:
>
>   
>> library(maptools)
>> library(rgdal)
>> library(RSAGA)
>>     
> # load the gridded map:
>   
>> rastermap <- readGDAL("rastermap.asc")
>>     
> # load the shapefile:
>   
>> rsaga.esri.to.sgrd(in.grids=" rastermap.asc", out.sgrds=" rastermap.sgrd", in.path=getwd())
>>     
> # convert the polygon map to a raster map:
>   
>> cellsize <- rastermap at grid@cellsize[1]
>> rsaga.geoprocessor(lib="grid_gridding", module=3, param=list(GRID="polygons.sgrd",
>>     
> INPUT="polygons.shp", FIELD=1, LINE_TYPE=0, USER_CELL_SIZE=cellsize,
> USER_X_EXTENT_MIN=rastermap at bbox[1,1]+cellsize, USER_X_EXTENT_MAX=rastermap at bbox[1,2]-cellsize,
> USER_Y_EXTENT_MIN=rastermap at bbox[2,1]+cellsize, USER_Y_EXTENT_MAX=rastermap at bbox[2,2]-cellsize))
>   
>> rsaga.sgrd.to.esri(in.sgrds="polygons.sgrd", out.grids="polygons.asc", out.path=getwd(), prec=0)
>> rastermap$polygons <- as.factor(readGDAL("polygons.asc"))
>>     
> # summary statistics per polygon class:
>   
>> raster.polygons <- boxplot(band1 ~ polygons, rastermap @data,
>>     
> col=rainbow(length(levels(negotingrid$SOIL))))
>   
>> str(raster.polygons)
>>     
>
> You will of course need to adjust the "FIELD" position in the attribute table and the precision
> "prec".
>
> To obtain and use SAGA, check this article:
> http://spatial-analyst.net/wiki/index.php?title=Software
>
> cheers,
>
> How is the weather now in Canberra? In Amsterdam is freezing brrr.
>
> T. Hengl
>
>
>   
>> -----Original Message-----
>> From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf
>> Of Alexander.Herr at csiro.au
>> Sent: Wednesday, January 28, 2009 2:10 AM
>> To: r-sig-geo at stat.math.ethz.ch
>> Subject: [R-sig-Geo] calculate raster values based on vector regions
>>
>>
>> Hi List,
>>
>> How would I go about assigning values to a raster based on polygon regions in R. Examples would be
>> most appreciated.
>>
>> I have (vector) regions assigned to a specific value. The raster has NAs and some pixels where
>> these values are likely to occur on ground. I need to assign these values to the raster and can do
>> this in ArcInfo through vectors and rasterizing but only to a limited raster size. And R is much
>> more preferable anyway...
>>
>> Any help appreciated.
>> Cheers
>> Herry
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>     
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From Alexander.Herr at csiro.au  Thu Jan 29 00:18:08 2009
From: Alexander.Herr at csiro.au (Alexander.Herr at csiro.au)
Date: Thu, 29 Jan 2009 10:18:08 +1100
Subject: [R-sig-Geo] calculate raster values based on vector regions
In-Reply-To: <49807BC2.8070603@uni-muenster.de>
References: <mailman.7.1229770803.5728.r-sig-geo@stat.math.ethz.ch><D6D8CB3DE7413A44BD15BF7D78C960C3010090BED7@EXNSW-MBX04.nexus.csiro.au><dc22b2570812230827g4bb2e07cq64de18423954feed@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C3010090BEDC@EXNSW-MBX04.nexus.csiro.au><dc22b2570812240652t149c30eeg1fd1f6b1845d95a5@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E61@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212157g79dfcd08u16236f5f6257e5a2@mail.gmail.com><dc22b2570901212204r72b67e5s8da05ca690b45b60@mail.gmail.com><dc22b2570901212208se95bb70n7696ffb27e3c58db@mail.gmail.com><D6D8CB3DE7413A44BD15BF7D78C960C30102532E63@EXNSW-MBX04.nexus.csiro.au><dc22b2570901212258m79e53e4er58c403b792309c4a@mail.gmail.com>
	<D6D8CB3DE7413A44BD15BF7D78C960C30102532E72@EXNSW-MBX04.nexus.csiro.au>,
	<21966083A4384141886B55DB3F394CD7@pcibed193>
	<D6D8CB3DE7413A44BD15BF7D78C960C30102510510@EXNSW-MBX04.nexus.csiro.au>
	<49807BC2.8070603@uni-muenster.de>
Message-ID: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E79@EXNSW-MBX04.nexus.csiro.au>

Thanks Edzer,

That would do it. Unfortunately I can't read the (ESRI) grid, it is too large:

raster1 has GDAL driver AIG 
and has 73772 rows and 80264 columns
Error in array(dim = as.integer(c(rev(output.dim), length(band)))) : 
  'dim' specifies too large an array 

I 'll have to cut into smaller tiles before processing, unless I can find a way of doing polygon overlay in package{raster} on rows

Cheers
Herry

-----Original Message-----
From: Edzer Pebesma [mailto:edzer.pebesma at uni-muenster.de] 
Sent: Thursday, January 29, 2009 2:38 AM
To: Herr, Alexander Herr - Herry (CSE, Gungahlin)
Cc: r-sig-geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] calculate raster values based on vector regions

Alexander, below is a reproducible example that uses a polygon data set 
from package maptools. You should read your polygons e.g. through 
readOGR (package rgdal) and your grid through readGDAL.

If your grid comes from readGDAL, then 2 and 3 can be omitted, and 5 
simplifies to:

out$SID79 = nc$SID79[idx]

All in R. Hth,
--
Edzer

library(maptools)
# 1 read a SpatialPolygonsDataFrame
nc <- readShapePoly(system.file("shapes/sids.shp",
        package="maptools")[1], proj4string=CRS("+proj=longlat 
+datum=NAD27"))
# 2 sample points on a regular grid:
grd = spsample(nc, 5000, "regular", offset = c(.5,.5))
# 3 convert points into grid:
gridded(grd) = TRUE
# 4 find index of polygons on grid cell centres:
idx = overlay(grd, nc)
# 5 merge grid points with attributes from polygons:
out = SpatialPixelsDataFrame(grd, data.frame(SIDS79 = nc$SID79[idx]))
# 6 plot:
spplot(out, col.regions=bpy.colors())


Alexander.Herr at csiro.au wrote:
> Hi list,
>
> I try to explain my problem a bit better.
>
> 1) Vector and raster have the same extent.
>
> 2) Vector data:
> Several polygones with different attribute values
> 3) raster data:
> A raster with points over the areas (and also NAs for areas where it is not possible to have a value from polygones). These points need to get the polygon attribute values assigned
>
> Vector                    Raster                  after assiging polygon values to raster
> -----------             ------------          ------------
> |   3   |  1    |          | +na + + na |        |3na 3 1 na  |
> |-----------|          | na na  na na|        |na na  na na|
> |    7  | 5     |          |++na  na +  |        |7 7na na 5  |
> -----------            -------------        -------------
>
> + denotes a raster value
>
> Does this make more sense?
>
> In gdal/fwtools is a function rgdal_rasterize, which could potentially do this, but I'd rather to all in R.
>
> Cheers and thanks
> Herry
>
> ________________________________________
> From: Tomislav Hengl [T.Hengl at uva.nl]
> Sent: Wednesday, January 28, 2009 7:56 PM
> To: r-sig-geo at stat.math.ethz.ch
> Cc: Herr, Alexander Herr - Herry (CSE, Gungahlin)
> Subject: RE: [R-sig-Geo] calculate raster values based on vector regions
>
> Dear Herry,
>
> If I understand what you problem, one solution is to use R+SAGA. You should first convert the
> polygon map to the same grid, and then you can load it to R and do any type of aggregation:
>
>   
>> library(maptools)
>> library(rgdal)
>> library(RSAGA)
>>     
> # load the gridded map:
>   
>> rastermap <- readGDAL("rastermap.asc")
>>     
> # load the shapefile:
>   
>> rsaga.esri.to.sgrd(in.grids=" rastermap.asc", out.sgrds=" rastermap.sgrd", in.path=getwd())
>>     
> # convert the polygon map to a raster map:
>   
>> cellsize <- rastermap at grid@cellsize[1]
>> rsaga.geoprocessor(lib="grid_gridding", module=3, param=list(GRID="polygons.sgrd",
>>     
> INPUT="polygons.shp", FIELD=1, LINE_TYPE=0, USER_CELL_SIZE=cellsize,
> USER_X_EXTENT_MIN=rastermap at bbox[1,1]+cellsize, USER_X_EXTENT_MAX=rastermap at bbox[1,2]-cellsize,
> USER_Y_EXTENT_MIN=rastermap at bbox[2,1]+cellsize, USER_Y_EXTENT_MAX=rastermap at bbox[2,2]-cellsize))
>   
>> rsaga.sgrd.to.esri(in.sgrds="polygons.sgrd", out.grids="polygons.asc", out.path=getwd(), prec=0)
>> rastermap$polygons <- as.factor(readGDAL("polygons.asc"))
>>     
> # summary statistics per polygon class:
>   
>> raster.polygons <- boxplot(band1 ~ polygons, rastermap @data,
>>     
> col=rainbow(length(levels(negotingrid$SOIL))))
>   
>> str(raster.polygons)
>>     
>
> You will of course need to adjust the "FIELD" position in the attribute table and the precision
> "prec".
>
> To obtain and use SAGA, check this article:
> http://spatial-analyst.net/wiki/index.php?title=Software
>
> cheers,
>
> How is the weather now in Canberra? In Amsterdam is freezing brrr.
>
> T. Hengl
>
>
>   
>> -----Original Message-----
>> From: r-sig-geo-bounces at stat.math.ethz.ch [mailto:r-sig-geo-bounces at stat.math.ethz.ch] On Behalf
>> Of Alexander.Herr at csiro.au
>> Sent: Wednesday, January 28, 2009 2:10 AM
>> To: r-sig-geo at stat.math.ethz.ch
>> Subject: [R-sig-Geo] calculate raster values based on vector regions
>>
>>
>> Hi List,
>>
>> How would I go about assigning values to a raster based on polygon regions in R. Examples would be
>> most appreciated.
>>
>> I have (vector) regions assigned to a specific value. The raster has NAs and some pixels where
>> these values are likely to occur on ground. I need to assign these values to the raster and can do
>> this in ArcInfo through vectors and rasterizing but only to a limited raster size. And R is much
>> more preferable anyway...
>>
>> Any help appreciated.
>> Cheers
>> Herry
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>     
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From Alexander.Herr at csiro.au  Thu Jan 29 01:44:53 2009
From: Alexander.Herr at csiro.au (Alexander.Herr at csiro.au)
Date: Thu, 29 Jan 2009 11:44:53 +1100
Subject: [R-sig-Geo] memory issue on R with Linux 64
Message-ID: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7C@EXNSW-MBX04.nexus.csiro.au>


Hi List,

I get an error using readGDAL{rgdal}: cannot allocate vector of size 3.1 Gb

I am using Linux 64bit (opensuse 11) with 4 gig swap and 4 gig Ram and R 2.8.0. 

The load monitor shows that most of Ram is used up and then when Swap use starts increasing, R returns the error.

Is there anything I should do within R to circumvent this?


Any help appreciated
Thanks
Herry


From yong.li at unimelb.edu.au  Thu Jan 29 04:27:16 2009
From: yong.li at unimelb.edu.au (Yong Li)
Date: Thu, 29 Jan 2009 14:27:16 +1100
Subject: [R-sig-Geo] How to evaluate cross-validaiton of interpolation?
Message-ID: <86DBA0678E017341B449A62F258E29561549B3@IS-EX-BEV3.unimelb.edu.au>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090129/ed72e4aa/attachment.pl>

From edzer.pebesma at uni-muenster.de  Thu Jan 29 08:00:43 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Thu, 29 Jan 2009 08:00:43 +0100
Subject: [R-sig-Geo] memory issue on R with Linux 64
In-Reply-To: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7C@EXNSW-MBX04.nexus.csiro.au>
References: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7C@EXNSW-MBX04.nexus.csiro.au>
Message-ID: <4981541B.4080908@uni-muenster.de>

Well, this doesn't come as a surprise; if it did for you then you didn't 
read the list archives well.

R has been designed for analysing statistical data, which usually 
doesn't outnumber billions of observations, and not for 
analysis/processing of large grids/imagery.

rgdal has infrastructure to let you go through huge grids by reading and 
writing only parts at a time; you can find pointers to this in the rgdal 
documentation, examples on the list. I don't know of functions that do 
this automatically for you; maybe the raster package on r-forge?

Another option is to buy more ram. I am using debian on a 32 Gb ram 
workstation; I was surprised (really) how little it costed. It saves me 
time.
--
Edzer

Alexander.Herr at csiro.au wrote:
> Hi List,
>
> I get an error using readGDAL{rgdal}: cannot allocate vector of size 3.1 Gb
>
> I am using Linux 64bit (opensuse 11) with 4 gig swap and 4 gig Ram and R 2.8.0. 
>
> The load monitor shows that most of Ram is used up and then when Swap use starts increasing, R returns the error.
>
> Is there anything I should do within R to circumvent this?
>
>
> Any help appreciated
> Thanks
> Herry
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From Roger.Bivand at nhh.no  Thu Jan 29 08:09:35 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 29 Jan 2009 08:09:35 +0100 (CET)
Subject: [R-sig-Geo] memory issue on R with Linux 64
In-Reply-To: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7C@EXNSW-MBX04.nexus.csiro.au>
References: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7C@EXNSW-MBX04.nexus.csiro.au>
Message-ID: <alpine.LRH.2.00.0901290753380.15975@reclus.nhh.no>

On Thu, 29 Jan 2009, Alexander.Herr at csiro.au wrote:

>
> Hi List,
>
> I get an error using readGDAL{rgdal}: cannot allocate vector of size 3.1 
> Gb

This is a tile of your 73K by 80K raster, right? One possibility is to use 
smaller tiles, another to get more memory (as Edzer wrote), a third to use 
lower level functions in rgdal to avoid duplication (and repeated gc()) - 
in readGDAL the data read by getRasterData() are copied, so at least 
doubling memory usage.

Do you need to read the raster? If this is the overlay problem, you should 
be able to use the output of GDALinfo for your raster to build a 
GridTopology and SpatialGrid, and overlay (tiles of) that on the 
SpatialPolygons (tiles of that because overlay() will generate cell centre 
coordinates and do point in polygon, so you're still stuck with too many 
coordinates). The next issue would be to copy out the polygon IDs, or the 
extracted values, as a raster - here the forthcoming raster package on 
R-Forge may be what you need.

Roger


>
> I am using Linux 64bit (opensuse 11) with 4 gig swap and 4 gig Ram and R 
> 2.8.0.
>
> The load monitor shows that most of Ram is used up and then when Swap 
> use starts increasing, R returns the error.
>
> Is there anything I should do within R to circumvent this?
>
>
> Any help appreciated
> Thanks
> Herry
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From r.hijmans at gmail.com  Thu Jan 29 09:58:02 2009
From: r.hijmans at gmail.com (Robert Hijmans)
Date: Thu, 29 Jan 2009 16:58:02 +0800
Subject: [R-sig-Geo] memory issue on R with Linux 64
In-Reply-To: <alpine.LRH.2.00.0901290753380.15975@reclus.nhh.no>
References: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7C@EXNSW-MBX04.nexus.csiro.au>
	<alpine.LRH.2.00.0901290753380.15975@reclus.nhh.no>
Message-ID: <dc22b2570901290058p4760a15ex745d2da8eb45b4a9@mail.gmail.com>

Herry,

This is how you can do it in package{raster}. (revision 209;  a build
should be available within 24 hours).

Following Edzer's example:

require(raster)
library(maptools)
# read a SpatialPolygonsDataFrame
nc <- readShapePoly(system.file("shapes/sids.shp",
      package="maptools")[1], proj4string=CRS("+proj=longlat +datum=NAD27"))
# create a new RasterLayer object from the polygon bounding box and
set row / cols.
rs <- rasterFromBbox(nc, nrows=54, ncols=176)
# transfer polygons to raster, use values of column 13 in the polygon dataframe
rs <- polygonsToRaster(nc, rs, field=13)
# plot, either directly
plot(rs)
plot(nc, add=T, border="blue")
# or via sp for a real map
x11()
spplot(asSpGrid(rs), col.regions=bpy.colors())

also see the example in ?polygonsToRaster

The polygonsToRaster function works for very large rasters (row by row
processing if you provide an output file name). I have only tested if
for a very limited number of very simple cases, so user beware...
The algorithm needs optimization for speed, so that might be a problem
for your very large grids. (particularly of your polygons are also
complex). It also needs some tweaking (and options) for deciding when
a polygon is in a grid cell. As is, the intention is that a polygon
has to overlap with the center of a cell to be considered inside.

Robert




On Thu, Jan 29, 2009 at 3:09 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> On Thu, 29 Jan 2009, Alexander.Herr at csiro.au wrote:
>
>>
>> Hi List,
>>
>> I get an error using readGDAL{rgdal}: cannot allocate vector of size 3.1
>> Gb
>
> This is a tile of your 73K by 80K raster, right? One possibility is to use
> smaller tiles, another to get more memory (as Edzer wrote), a third to use
> lower level functions in rgdal to avoid duplication (and repeated gc()) - in
> readGDAL the data read by getRasterData() are copied, so at least doubling
> memory usage.
>
> Do you need to read the raster? If this is the overlay problem, you should
> be able to use the output of GDALinfo for your raster to build a
> GridTopology and SpatialGrid, and overlay (tiles of) that on the
> SpatialPolygons (tiles of that because overlay() will generate cell centre
> coordinates and do point in polygon, so you're still stuck with too many
> coordinates). The next issue would be to copy out the polygon IDs, or the
> extracted values, as a raster - here the forthcoming raster package on
> R-Forge may be what you need.
>
> Roger
>
>
>>
>> I am using Linux 64bit (opensuse 11) with 4 gig swap and 4 gig Ram and R
>> 2.8.0.
>>
>> The load monitor shows that most of Ram is used up and then when Swap use
>> starts increasing, R returns the error.
>>
>> Is there anything I should do within R to circumvent this?
>>
>>
>> Any help appreciated
>> Thanks
>> Herry
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> --
> Roger Bivand
> Economic Geography Section, Department of Economics, Norwegian School of
> Economics and Business Administration, Helleveien 30, N-5045 Bergen,
> Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
> e-mail: Roger.Bivand at nhh.no
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>



From Roger.Bivand at nhh.no  Thu Jan 29 10:27:15 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 29 Jan 2009 10:27:15 +0100 (CET)
Subject: [R-sig-Geo] memory issue on R with Linux 64
In-Reply-To: <dc22b2570901290058p4760a15ex745d2da8eb45b4a9@mail.gmail.com>
References: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7C@EXNSW-MBX04.nexus.csiro.au>
	<alpine.LRH.2.00.0901290753380.15975@reclus.nhh.no>
	<dc22b2570901290058p4760a15ex745d2da8eb45b4a9@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901291025550.15975@reclus.nhh.no>

On Thu, 29 Jan 2009, Robert Hijmans wrote:

> Herry,
>
> This is how you can do it in package{raster}. (revision 209;  a build
> should be available within 24 hours).
>
> Following Edzer's example:
>
> require(raster)
> library(maptools)
> # read a SpatialPolygonsDataFrame
> nc <- readShapePoly(system.file("shapes/sids.shp",
>      package="maptools")[1], proj4string=CRS("+proj=longlat +datum=NAD27"))
> # create a new RasterLayer object from the polygon bounding box and
> set row / cols.
> rs <- rasterFromBbox(nc, nrows=54, ncols=176)
> # transfer polygons to raster, use values of column 13 in the polygon dataframe
> rs <- polygonsToRaster(nc, rs, field=13)
> # plot, either directly
> plot(rs)
> plot(nc, add=T, border="blue")
> # or via sp for a real map
> x11()
> spplot(asSpGrid(rs), col.regions=bpy.colors())
>
> also see the example in ?polygonsToRaster
>
> The polygonsToRaster function works for very large rasters (row by row
> processing if you provide an output file name). I have only tested if
> for a very limited number of very simple cases, so user beware...
> The algorithm needs optimization for speed, so that might be a problem
> for your very large grids. (particularly of your polygons are also
> complex). It also needs some tweaking (and options) for deciding when
> a polygon is in a grid cell. As is, the intention is that a polygon
> has to overlap with the center of a cell to be considered inside.

It would be very useful to compare the output of this procedure, which 
looks very promising, with Starspan:

http://starspan.casil.ucdavis.edu/doku/

to see which subpixel heuristics may be helpful.

Roger


>
> Robert
>
>
>
>
> On Thu, Jan 29, 2009 at 3:09 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>> On Thu, 29 Jan 2009, Alexander.Herr at csiro.au wrote:
>>
>>>
>>> Hi List,
>>>
>>> I get an error using readGDAL{rgdal}: cannot allocate vector of size 3.1
>>> Gb
>>
>> This is a tile of your 73K by 80K raster, right? One possibility is to use
>> smaller tiles, another to get more memory (as Edzer wrote), a third to use
>> lower level functions in rgdal to avoid duplication (and repeated gc()) - in
>> readGDAL the data read by getRasterData() are copied, so at least doubling
>> memory usage.
>>
>> Do you need to read the raster? If this is the overlay problem, you should
>> be able to use the output of GDALinfo for your raster to build a
>> GridTopology and SpatialGrid, and overlay (tiles of) that on the
>> SpatialPolygons (tiles of that because overlay() will generate cell centre
>> coordinates and do point in polygon, so you're still stuck with too many
>> coordinates). The next issue would be to copy out the polygon IDs, or the
>> extracted values, as a raster - here the forthcoming raster package on
>> R-Forge may be what you need.
>>
>> Roger
>>
>>
>>>
>>> I am using Linux 64bit (opensuse 11) with 4 gig swap and 4 gig Ram and R
>>> 2.8.0.
>>>
>>> The load monitor shows that most of Ram is used up and then when Swap use
>>> starts increasing, R returns the error.
>>>
>>> Is there anything I should do within R to circumvent this?
>>>
>>>
>>> Any help appreciated
>>> Thanks
>>> Herry
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>
>> --
>> Roger Bivand
>> Economic Geography Section, Department of Economics, Norwegian School of
>> Economics and Business Administration, Helleveien 30, N-5045 Bergen,
>> Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
>> e-mail: Roger.Bivand at nhh.no
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From xingli.giam at adelaide.edu.au  Thu Jan 29 11:19:01 2009
From: xingli.giam at adelaide.edu.au (Xingli Giam)
Date: Thu, 29 Jan 2009 20:49:01 +1030
Subject: [R-sig-Geo] Different Moran's I correlograms using correlog{ncf}
	and sp.correlogram{spdep}
In-Reply-To: <1233098791.497f982794063@webmail.adelaide.edu.au>
References: <1233045522.497ec81215e21@webmail.adelaide.edu.au>
	<1233098791.497f982794063@webmail.adelaide.edu.au>
Message-ID: <1233224341.498182953264d@webmail.adelaide.edu.au>

Hello List,

I have been bothered by this problem for the entire day, hope someone can give
me a hand here. Thanks in advance for reading! It could be really simple and
basic so hope you guys bear with it.

We often plot Moran's I spatial correlograms that contrast glm residuals and
spatial model residuals (after incorporating spatial autocorrelation (SAC) via
SEVM, autocov reg, etc) over lag distance classes.

After deciding the most appropriate neighbourhood distance (1600 km - mine's a
global dataset), I created a list of weights via nb2listw that is an inverse
function of distance (1/distance). I then performed SEVM using the list of
weights, using the brute force ME() algorithm to extract eigenvectors that
reduce SAC.

I plan to report the Moran's I value given from moran.test() on both my (non-
spatial) GLM and Spatial GLM to prove that the spatial model has reduced
autocorrelation.

In addition to that, I plan to show the correlograms of the model residuals
both non-spatial and spatial GLMs.

I would like to ask which function is a better choice for showing the
correlograms. Should I use correlog{ncf} or sp.correlogram{spdep}. From what I
know, calculating Moran's I require definition of a neighbourhood and a
specific weighting scheme. Does anyone know what is the default neighbourhood
and weighting scheme of correlog()? Is it - if I specify an increment of 100km,
then, all points within 0-100, and then 100-200, etc, are considered neighbours
with a binary weighting scheme for each distance class?

For sp.correlogram, can I specify the nb object defined by min:0km, max:100km,
and use a lag order of, for example 50, to plot the correlogram of my spatial
model (which has a neighbourhood distance of 1600 km)?

For both functions, it seems that there is no way to incorporate my inverse-
distance weighting scheme that I used in my spatial models. Is this of
practical concern if I intend to plot my correlograms?

Lastly I have a side question regarding correlograms. When we see distances of,
e.g., 100, 200, 300, etc (the increment or lag distance is 100), on the X-axis
of a spatial correlogram, does the point at 200 refer to correlations between
neighbours of distance 100-200km apart? Or does it include the first 100km as
well (i.e., correlations between neighbours of distance 0-200km apart)?

Sorry for the long post. Many thanks for reading, I really appreciate it. I
know some are really basic questions but I can't find any answers to my
questions on google or searching through the list.

Many thanks,
Xingli

-- 
Xingli Giam
Research Visitor
Research Institute of Climate Change and Sustainability
School of Earth and Environmental Sciences
The University of Adelaide
Mobile: +61 (0) 425 150 966
Email: xingli.giam at adelaide.edu.au
Alt email: giam at nus.edu.sg

and

M.Sc. Candidate
Department of Biological Sciences
National University of Singapore
(on study leave till 30 June 2009)


Quoting Xingli Giam <xingli.giam at adelaide.edu.au>:

> Hi everyone,
>
> I hope someone can point me to the right direction in printing the
> eigenvalues
> of selected eigenvectors using ME() of spdep. I've communicated with Dr.
> Pedro
> Peres-Neto and he has been really helpful in answering some of my questions
> about SEVM. He warned that some combinations of threshold values and
> weighting
> schemes may generate negative eigenvalues that may not be desirable. That is
> why I'm asking this question.
>
> Thanks in advance!
>
> Best,
> Xingli
>
>
> --
> Xingli Giam
> Research Visitor
> Research Institute of Climate Change and Sustainability
> School of Earth and Environmental Sciences
> The University of Adelaide
> Mobile: +61 (0) 425 150 966
> Email: xingli.giam at adelaide.edu.au
> Alt email: giam at nus.edu.sg
>
> and
>
> M.Sc. Candidate
> Department of Biological Sciences
> National University of Singapore
> (on study leave till 30 June 2009)
>
>



From xingli.giam at adelaide.edu.au  Thu Jan 29 11:20:36 2009
From: xingli.giam at adelaide.edu.au (Xingli Giam)
Date: Thu, 29 Jan 2009 20:50:36 +1030
Subject: [R-sig-Geo] Different Moran's I correlograms using correlog{ncf}
	and sp.correlogram{spdep}
Message-ID: <1233224436.498182f423322@webmail.adelaide.edu.au>

Hello List,

I have been bothered by this problem for the entire day, hope someone can give
me a hand here. Thanks in advance for reading! It could be really simple and
basic so hope you guys bear with it.

We often plot Moran's I spatial correlograms that contrast glm residuals and
spatial model residuals (after incorporating spatial autocorrelation (SAC) via
SEVM, autocov reg, etc) over lag distance classes.

After deciding the most appropriate neighbourhood distance (1600 km - mine's a
global dataset), I created a list of weights via nb2listw that is an inverse
function of distance (1/distance). I then performed SEVM using the list of
weights, using the brute force ME() algorithm to extract eigenvectors that
reduce SAC.

I plan to report the Moran's I value given from moran.test() on both my (non-
spatial) GLM and Spatial GLM to prove that the spatial model has reduced
autocorrelation.

In addition to that, I plan to show the correlograms of the model residuals
both non-spatial and spatial GLMs.

I would like to ask which function is a better choice for showing the
correlograms. Should I use correlog{ncf} or sp.correlogram{spdep}. From what I
know, calculating Moran's I require definition of a neighbourhood and a
specific weighting scheme. Does anyone know what is the default neighbourhood
and weighting scheme of correlog()? Is it - if I specify an increment of 100km,
then, all points within 0-100, and then 100-200, etc, are considered neighbours
with a binary weighting scheme for each distance class?

For sp.correlogram, can I specify the nb object defined by min:0km, max:100km,
and use a lag order of, for example 50, to plot the correlogram of my spatial
model (which has a neighbourhood distance of 1600 km)?

For both functions, it seems that there is no way to incorporate my inverse-
distance weighting scheme that I used in my spatial models. Is this of
practical concern if I intend to plot my correlograms?

Lastly I have a side question regarding correlograms. When we see distances of,
e.g., 100, 200, 300, etc (the increment or lag distance is 100), on the X-axis
of a spatial correlogram, does the point at 200 refer to correlations between
neighbours of distance 100-200km apart? Or does it include the first 100km as
well (i.e., correlations between neighbours of distance 0-200km apart)?

Sorry for the long post. Many thanks for reading, I really appreciate it. I
know some are really basic questions but I can't find any answers to my
questions on google or searching through the list.

Many thanks,
Xingli

-- 
Xingli Giam
Research Visitor
Research Institute of Climate Change and Sustainability
School of Earth and Environmental Sciences
The University of Adelaide
Mobile: +61 (0) 425 150 966
Email: xingli.giam at adelaide.edu.au
Alt email: giam at nus.edu.sg

and

M.Sc. Candidate
Department of Biological Sciences
National University of Singapore
(on study leave till 30 June 2009)


Quoting Xingli Giam <xingli.giam at adelaide.edu.au>:

> Hi everyone,
>
> I hope someone can point me to the right direction in printing the
> eigenvalues
> of selected eigenvectors using ME() of spdep. I've communicated with Dr.
> Pedro
> Peres-Neto and he has been really helpful in answering some of my questions
> about SEVM. He warned that some combinations of threshold values and
> weighting
> schemes may generate negative eigenvalues that may not be desirable. That is
> why I'm asking this question.
>
> Thanks in advance!
>
> Best,
> Xingli
>
>
> --
> Xingli Giam
> Research Visitor
> Research Institute of Climate Change and Sustainability
> School of Earth and Environmental Sciences
> The University of Adelaide
> Mobile: +61 (0) 425 150 966
> Email: xingli.giam at adelaide.edu.au
> Alt email: giam at nus.edu.sg
>
> and
>
> M.Sc. Candidate
> Department of Biological Sciences
> National University of Singapore
> (on study leave till 30 June 2009)
>
>

----- End forwarded message -----



From bibiko at eva.mpg.de  Thu Jan 29 12:39:32 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Thu, 29 Jan 2009 12:39:32 +0100
Subject: [R-sig-Geo] Problem with SpatialPolygons containing a hole
Message-ID: <0D27CA81-9CC7-4B39-B7A9-D72CCC55FB8C@eva.mpg.de>


Hi,

I'm just preparing a SpatialPolygonsDataFrame for ISO3 = "PSE" which  
is missing in TM_BORDERS data.

I have three polygons: p1 p2 p3 whereby p2 is a hole inside of p1.

Then I did this:

P1 <- Polygon(p1)
P2 <- Polygon(p2)
P3 <- Polygon(p3)
pse <- list(P1,P2,P3)
pseP <- checkPolygonsHoles(Polygons(pse, "PSE"))
pseSP <- SpatialPolygons(list(pseP), proj4string=CRS(proj4string(wrld)))

Fine. I can plot this correctly BUT if I execute

plot(pseSP, col="red")

then p2 (the hole) will be also filled with 'red' but as far as I  
understood it p2 shouldn't be filled.

What am I doing wrong?


Thanks for any hint in advance.

--Hans

PS I tried to set pO in SpatialPolygons but pseP has length one.

My pseSP object looks like:

 > str(pseSP)
Formal class 'SpatialPolygons' [package "sp"] with 4 slots
   ..@ polygons   :List of 1
   .. ..$ :Formal class 'Polygons' [package "sp"] with 5 slots
   .. .. .. ..@ Polygons :List of 3
   .. .. .. .. ..$ :Formal class 'Polygon' [package "sp"] with 5 slots
   .. .. .. .. .. .. ..@ labpt  : num [1:2] 35.3 31.8
   .. .. .. .. .. .. ..@ area   : num 0.000317
   .. .. .. .. .. .. ..@ hole   : logi TRUE
   .. .. .. .. .. .. ..@ ringDir: int -1
   .. .. .. .. .. .. ..@ coords : num [1:10, 1:2] 35.2 35.2 35.2 35.3  
35.3 ...
   .. .. .. .. ..$ :Formal class 'Polygon' [package "sp"] with 5 slots
   .. .. .. .. .. .. ..@ labpt  : num [1:2] 35.3 31.9
   .. .. .. .. .. .. ..@ area   : num 0.562
   .. .. .. .. .. .. ..@ hole   : logi FALSE
   .. .. .. .. .. .. ..@ ringDir: int 1
   .. .. .. .. .. .. ..@ coords : num [1:105, 1:2] 35.3 35.3 35.3 35.3  
35.3 ...
   .. .. .. .. ..$ :Formal class 'Polygon' [package "sp"] with 5 slots
   .. .. .. .. .. .. ..@ labpt  : num [1:2] 34.4 31.4
   .. .. .. .. .. .. ..@ area   : num 0.037
   .. .. .. .. .. .. ..@ hole   : logi FALSE
   .. .. .. .. .. .. ..@ ringDir: int 1
   .. .. .. .. .. .. ..@ coords : num [1:20, 1:2] 34.6 34.6 34.5 34.5  
34.5 ...
   .. .. .. ..@ plotOrder: int [1:3] 2 3 1
   .. .. .. ..@ labpt    : num [1:2] 35.3 31.9
   .. .. .. ..@ ID       : chr "PSE"
   .. .. .. ..@ area     : num 0.6
   ..@ plotOrder  : int 1
   ..@ bbox       : num [1:2, 1:2] 34.2 31.2 35.6 32.5
   .. ..- attr(*, "dimnames")=List of 2
   .. .. ..$ : chr [1:2] "r1" "r2"
   .. .. ..$ : chr [1:2] "min" "max"
   ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slots
   .. .. ..@ projargs: chr " +proj=longlat +ellps=WGS84 +datum=WGS84  
+no_defs +towgs84=0,0,0"



From Roger.Bivand at nhh.no  Thu Jan 29 12:56:15 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 29 Jan 2009 12:56:15 +0100 (CET)
Subject: [R-sig-Geo] Different Moran's I correlograms using
 correlog{ncf} and sp.correlogram{spdep}
In-Reply-To: <1233224436.498182f423322@webmail.adelaide.edu.au>
References: <1233224436.498182f423322@webmail.adelaide.edu.au>
Message-ID: <alpine.LRH.2.00.0901291230200.15975@reclus.nhh.no>

On Thu, 29 Jan 2009, Xingli Giam wrote:

> Hello List,
>
> I have been bothered by this problem for the entire day, hope someone 
> can give me a hand here. Thanks in advance for reading! It could be 
> really simple and basic so hope you guys bear with it.
>
> We often plot Moran's I spatial correlograms that contrast glm residuals 
> and spatial model residuals (after incorporating spatial autocorrelation 
> (SAC) via SEVM, autocov reg, etc) over lag distance classes.

A spatial correlogram is not a well-defined concept. One view is that the 
inter-pair distances should be binned, and the output computed for the 
pairs of observations in each bin - equivalent to defining widening rings 
of neighbours for each observation. There are issues that arise here when 
some observations have no neighbours in a given bin - should one adjust 
the values used to calculate E(I) and var(I)? This is in correlog() in 
ncf, and to a certain extent in pgirmess.

Another view is that the first order set of neighbours should be raised to 
higher orders irrespective of how the set was defined: i and j are first 
order neighbours, i and k are second order neighbours if j and k are first 
order neighbours. This isn't quite matrix powering, because if you are 
already a first order neighbour, you can't be a second order as well 
(discussed in detail in Cliff & Ord 1981, pp. 118-122). See also ?nblag to 
see what is going on. correlog() in pgirmess uses nclass.Sturges() to 
choose the number of bins, but does not fully protect against bins with 
no-neighbour observations.

>
> After deciding the most appropriate neighbourhood distance (1600 km - 
> mine's a global dataset), I created a list of weights via nb2listw that 
> is an inverse function of distance (1/distance). I then performed SEVM 
> using the list of weights, using the brute force ME() algorithm to 
> extract eigenvectors that reduce SAC.
>
> I plan to report the Moran's I value given from moran.test() on both my 
> (non- spatial) GLM and Spatial GLM to prove that the spatial model has 
> reduced autocorrelation.
>
> In addition to that, I plan to show the correlograms of the model 
> residuals both non-spatial and spatial GLMs.
>
> I would like to ask which function is a better choice for showing the 
> correlograms. Should I use correlog{ncf} or sp.correlogram{spdep}. From 
> what I know, calculating Moran's I require definition of a neighbourhood 
> and a specific weighting scheme. Does anyone know what is the default 
> neighbourhood and weighting scheme of correlog()? Is it - if I specify 
> an increment of 100km, then, all points within 0-100, and then 100-200, 
> etc, are considered neighbours with a binary weighting scheme for each 
> distance class?

The ncf correlog() uses many nxn matrices, and computes the bands by:

dkl <- ceiling(dmat/increment)

where dmat is a lower triangle distance matrix, increment is the band 
width, and dkl has the same form as dmat (it says which distance band the 
moran pairs in the lower triangle crossproduct matrix used belong to).

As you can see, the source code is the documentation here.

>
> For sp.correlogram, can I specify the nb object defined by min:0km, 
> max:100km, and use a lag order of, for example 50, to plot the 
> correlogram of my spatial model (which has a neighbourhood distance of 
> 1600 km)?
>
> For both functions, it seems that there is no way to incorporate my 
> inverse- distance weighting scheme that I used in my spatial models. Is 
> this of practical concern if I intend to plot my correlograms?
>
> Lastly I have a side question regarding correlograms. When we see 
> distances of, e.g., 100, 200, 300, etc (the increment or lag distance is 
> 100), on the X-axis of a spatial correlogram, does the point at 200 
> refer to correlations between neighbours of distance 100-200km apart? Or 
> does it include the first 100km as well (i.e., correlations between 
> neighbours of distance 0-200km apart)?

In general, the pairs of distances within that band (or lag order). But 
check the code to be sure.

Roger

>
> Sorry for the long post. Many thanks for reading, I really appreciate 
> it. I know some are really basic questions but I can't find any answers 
> to my questions on google or searching through the list.
>
> Many thanks,
> Xingli
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Roger.Bivand at nhh.no  Thu Jan 29 13:08:12 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 29 Jan 2009 13:08:12 +0100 (CET)
Subject: [R-sig-Geo] Problem with SpatialPolygons containing a hole
In-Reply-To: <0D27CA81-9CC7-4B39-B7A9-D72CCC55FB8C@eva.mpg.de>
References: <0D27CA81-9CC7-4B39-B7A9-D72CCC55FB8C@eva.mpg.de>
Message-ID: <alpine.LRH.2.00.0901291257250.15975@reclus.nhh.no>

On Thu, 29 Jan 2009, Hans-J?rg Bibiko wrote:

>
> Hi,
>
> I'm just preparing a SpatialPolygonsDataFrame for ISO3 = "PSE" which is 
> missing in TM_BORDERS data.
>
> I have three polygons: p1 p2 p3 whereby p2 is a hole inside of p1.
>
> Then I did this:
>
> P1 <- Polygon(p1)
> P2 <- Polygon(p2)
> P3 <- Polygon(p3)
> pse <- list(P1,P2,P3)
> pseP <- checkPolygonsHoles(Polygons(pse, "PSE"))
> pseSP <- SpatialPolygons(list(pseP), proj4string=CRS(proj4string(wrld)))
>
> Fine. I can plot this correctly BUT if I execute
>
> plot(pseSP, col="red")
>
> then p2 (the hole) will be also filled with 'red' but as far as I understood 
> it p2 shouldn't be filled.
>
> What am I doing wrong?

Set the pbg= argument to set the "bg" (background) to something other than 
"transparent" - if it is transparent, the previously plotted larger and 
encompassing polygon is still visible. I'm afraid that the documentation, 
which should be in ?"SpatialPolygons-class" where the plot method is 
described, is in the maptools package, in ?plot.polylist - this will be 
fixed.

Roger



>
>
> Thanks for any hint in advance.
>
> --Hans
>
> PS I tried to set pO in SpatialPolygons but pseP has length one.
>
> My pseSP object looks like:
>
>> str(pseSP)
> Formal class 'SpatialPolygons' [package "sp"] with 4 slots
> ..@ polygons   :List of 1
> .. ..$ :Formal class 'Polygons' [package "sp"] with 5 slots
> .. .. .. ..@ Polygons :List of 3
> .. .. .. .. ..$ :Formal class 'Polygon' [package "sp"] with 5 slots
> .. .. .. .. .. .. ..@ labpt  : num [1:2] 35.3 31.8
> .. .. .. .. .. .. ..@ area   : num 0.000317
> .. .. .. .. .. .. ..@ hole   : logi TRUE
> .. .. .. .. .. .. ..@ ringDir: int -1
> .. .. .. .. .. .. ..@ coords : num [1:10, 1:2] 35.2 35.2 35.2 35.3 35.3 ...
> .. .. .. .. ..$ :Formal class 'Polygon' [package "sp"] with 5 slots
> .. .. .. .. .. .. ..@ labpt  : num [1:2] 35.3 31.9
> .. .. .. .. .. .. ..@ area   : num 0.562
> .. .. .. .. .. .. ..@ hole   : logi FALSE
> .. .. .. .. .. .. ..@ ringDir: int 1
> .. .. .. .. .. .. ..@ coords : num [1:105, 1:2] 35.3 35.3 35.3 35.3 35.3 ...
> .. .. .. .. ..$ :Formal class 'Polygon' [package "sp"] with 5 slots
> .. .. .. .. .. .. ..@ labpt  : num [1:2] 34.4 31.4
> .. .. .. .. .. .. ..@ area   : num 0.037
> .. .. .. .. .. .. ..@ hole   : logi FALSE
> .. .. .. .. .. .. ..@ ringDir: int 1
> .. .. .. .. .. .. ..@ coords : num [1:20, 1:2] 34.6 34.6 34.5 34.5 34.5 ...
> .. .. .. ..@ plotOrder: int [1:3] 2 3 1
> .. .. .. ..@ labpt    : num [1:2] 35.3 31.9
> .. .. .. ..@ ID       : chr "PSE"
> .. .. .. ..@ area     : num 0.6
> ..@ plotOrder  : int 1
> ..@ bbox       : num [1:2, 1:2] 34.2 31.2 35.6 32.5
> .. ..- attr(*, "dimnames")=List of 2
> .. .. ..$ : chr [1:2] "r1" "r2"
> .. .. ..$ : chr [1:2] "min" "max"
> ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slots
> .. .. ..@ projargs: chr " +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs 
> +towgs84=0,0,0"
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no

From bibiko at eva.mpg.de  Thu Jan 29 13:55:16 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Thu, 29 Jan 2009 13:55:16 +0100
Subject: [R-sig-Geo] Problem with SpatialPolygons containing a hole
In-Reply-To: <alpine.LRH.2.00.0901291257250.15975@reclus.nhh.no>
References: <0D27CA81-9CC7-4B39-B7A9-D72CCC55FB8C@eva.mpg.de>
	<alpine.LRH.2.00.0901291257250.15975@reclus.nhh.no>
Message-ID: <E4FDEDE4-F4D3-4CB5-9A07-2BA124143280@eva.mpg.de>


On 29.01.2009, at 13:08, Roger Bivand wrote:

> Set the pbg= argument to set the "bg" (background) to something  
> other than "transparent" - if it is transparent, the previously  
> plotted larger and encompassing polygon is still visible. I'm afraid  
> that the documentation, which should be in ?"SpatialPolygons-class"  
> where the plot method is described, is in the maptools package, in ? 
> plot.polylist - this will be fixed.

Thanks.

plot(pseSP,col='red', pbg='white')

works. But this also implies that:
- one is not able to create a transparent hole(?)
- and one has to care about the correct plotting order or to set the  
correct pbg if that 'hole' belongs to another polygon

Cheers,
--Hans



From Roger.Bivand at nhh.no  Thu Jan 29 14:51:31 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 29 Jan 2009 14:51:31 +0100 (CET)
Subject: [R-sig-Geo] Problem with SpatialPolygons containing a hole
In-Reply-To: <E4FDEDE4-F4D3-4CB5-9A07-2BA124143280@eva.mpg.de>
References: <0D27CA81-9CC7-4B39-B7A9-D72CCC55FB8C@eva.mpg.de>
	<alpine.LRH.2.00.0901291257250.15975@reclus.nhh.no>
	<E4FDEDE4-F4D3-4CB5-9A07-2BA124143280@eva.mpg.de>
Message-ID: <alpine.LRH.2.00.0901291442420.20895@reclus.nhh.no>

On Thu, 29 Jan 2009, Hans-J?rg Bibiko wrote:

>
> On 29.01.2009, at 13:08, Roger Bivand wrote:
>
>> Set the pbg= argument to set the "bg" (background) to something other than 
>> "transparent" - if it is transparent, the previously plotted larger and 
>> encompassing polygon is still visible. I'm afraid that the documentation, 
>> which should be in ?"SpatialPolygons-class" where the plot method is 
>> described, is in the maptools package, in ?plot.polylist - this will be 
>> fixed.
>
> Thanks.
>
> plot(pseSP,col='red', pbg='white')
>
> works. But this also implies that:
> - one is not able to create a transparent hole(?)

No. By assumption, a hole is smaller than the enclosing polygon 
surrounding it. Both are "Polygon" objects in a "Polygons" object, and 
these are plotted from largest to smallest. So if a hole is transparent, 
you will see the polygon lying underneath and around it, so won't see the 
hole. "Polygon" objects are simply rings of coordinates, not topological 
structures.

> - and one has to care about the correct plotting order or to set the 
> correct pbg if that 'hole' belongs to another polygon

By assumption, "Polygon" objects that are holes should only be within 
another "Polygon" object belonging to the same "Polygons" object. It is 
possible that data in the wild do not follow this structure, though it is 
hard to think of a real case of a hole (say lake) belonging to one county, 
but lying in a different county.

Roger

>
> Cheers,
> --Hans
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no

From xingli.giam at adelaide.edu.au  Thu Jan 29 14:58:52 2009
From: xingli.giam at adelaide.edu.au (Xingli Giam)
Date: Fri, 30 Jan 2009 00:28:52 +1030
Subject: [R-sig-Geo] Different Moran's I correlograms using
	correlog{ncf} and sp.correlogram{spdep}
In-Reply-To: <alpine.LRH.2.00.0901291230200.15975@reclus.nhh.no>
References: <1233224436.498182f423322@webmail.adelaide.edu.au>
	<alpine.LRH.2.00.0901291230200.15975@reclus.nhh.no>
Message-ID: <1233237532.4981b61c8d1cf@webmail.adelaide.edu.au>

Dear Roger,

So what you trying to say about correlog{ncf} is that after the bands are
computed, all the correlations between data points whose distance are within
the bin are computed. So I suppose it is a binary kind of specification, if
pairwise distances are in the bin, the correlations will be computed and all
these correlations are considered equally in computing Moran's I.

So should the correlogram obtained by correlog{ncf} same as the one obtained by
sp.correlogram(spdep), when the neighbourhood upperlimit is same as the
increment level of the former.

E.g.,

#Correlogram from correlog{ncf}, where slm1600 is the chosen spatial model

correlog.200b <- correlog(dat$x_long, dat$y_lat, residuals(mod1), na.rm=T,
increment=200, resamp=99, latlon=T)

# Plotting the first 50 bins
plot(correlog.200b$correlation[1:50], type="b", pch=16, cex=1.5, lwd=1.5,
col="red", xlab="distance (10^2 km)", ylab="Moran's I", cex.lab=2,
cex.axis=1.5, ylim=c(-1,1)); abline(h=0)

#should be the same as

nb200 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 0, 200, longlat=T)
ME200.listw <- nb2listw(nb200, style="B", zero.policy=T)

correl<-sp.correlogram(nb200, residuals(mod1), order = 50, method = "I", style
= "W", randomisation = TRUE, zero.policy = TRUE, spChk=NULL)

plot(correl1600),

But the results of Moran's I are very different.

Here are the results:

For sp.correlogram(),
Spatial correlogram for residuals(mod1)
method: Moran's I
      estimate expectation    variance standard deviate Pr(I) two sided
1   0.06882699 -0.00123153  0.00021800           4.7449       2.086e-06 ***
2   0.03190221 -0.00127877  0.00027178           2.0127       0.0441461 *
3   0.02914748 -0.00133511  0.00028490           1.8059       0.0709262 .
4   0.04458328 -0.00137363  0.00029717           2.6659       0.0076772 **
5   0.05503366 -0.00139665  0.00031539           3.1775       0.0014854 **
6   0.02696152 -0.00143062  0.00032685           1.5704       0.1163121
7   0.06049141 -0.00144718  0.00036181           3.2563       0.0011289 **
8   0.02526273 -0.00146413  0.00037732           1.3759       0.1688468
9   0.02901564 -0.00147493  0.00039208           1.5399       0.1235966
10  0.06624244 -0.00148810  0.00039586           3.4042       0.0006637 ***
11  0.04189714 -0.00151057  0.00041899           2.1206       0.0339535 *
12 -0.00321915 -0.00154560  0.00045316          -0.0786       0.9373374
.........and so on

For correlog():
$correlation (just first 4 bins)
0.381911078  0.356233456  0.322664149  0.304275005

How should we reconcile the differences?

Many thanks,
Xingli




Quoting Roger Bivand <Roger.Bivand at nhh.no>:

> On Thu, 29 Jan 2009, Xingli Giam wrote:
>
> > Hello List,
> >
> > I have been bothered by this problem for the entire day, hope someone
> > can give me a hand here. Thanks in advance for reading! It could be
> > really simple and basic so hope you guys bear with it.
> >
> > We often plot Moran's I spatial correlograms that contrast glm residuals
> > and spatial model residuals (after incorporating spatial autocorrelation
> > (SAC) via SEVM, autocov reg, etc) over lag distance classes.
>
> A spatial correlogram is not a well-defined concept. One view is that the
> inter-pair distances should be binned, and the output computed for the
> pairs of observations in each bin - equivalent to defining widening rings
> of neighbours for each observation. There are issues that arise here when
> some observations have no neighbours in a given bin - should one adjust
> the values used to calculate E(I) and var(I)? This is in correlog() in
> ncf, and to a certain extent in pgirmess.
>
> Another view is that the first order set of neighbours should be raised to
> higher orders irrespective of how the set was defined: i and j are first
> order neighbours, i and k are second order neighbours if j and k are first
> order neighbours. This isn't quite matrix powering, because if you are
> already a first order neighbour, you can't be a second order as well
> (discussed in detail in Cliff & Ord 1981, pp. 118-122). See also ?nblag to
> see what is going on. correlog() in pgirmess uses nclass.Sturges() to
> choose the number of bins, but does not fully protect against bins with
> no-neighbour observations.
>
> >
> > After deciding the most appropriate neighbourhood distance (1600 km -
> > mine's a global dataset), I created a list of weights via nb2listw that
> > is an inverse function of distance (1/distance). I then performed SEVM
> > using the list of weights, using the brute force ME() algorithm to
> > extract eigenvectors that reduce SAC.
> >
> > I plan to report the Moran's I value given from moran.test() on both my
> > (non- spatial) GLM and Spatial GLM to prove that the spatial model has
> > reduced autocorrelation.
> >
> > In addition to that, I plan to show the correlograms of the model
> > residuals both non-spatial and spatial GLMs.
> >
> > I would like to ask which function is a better choice for showing the
> > correlograms. Should I use correlog{ncf} or sp.correlogram{spdep}. From
> > what I know, calculating Moran's I require definition of a neighbourhood
> > and a specific weighting scheme. Does anyone know what is the default
> > neighbourhood and weighting scheme of correlog()? Is it - if I specify
> > an increment of 100km, then, all points within 0-100, and then 100-200,
> > etc, are considered neighbours with a binary weighting scheme for each
> > distance class?
>
> The ncf correlog() uses many nxn matrices, and computes the bands by:
>
> dkl <- ceiling(dmat/increment)
>
> where dmat is a lower triangle distance matrix, increment is the band
> width, and dkl has the same form as dmat (it says which distance band the
> moran pairs in the lower triangle crossproduct matrix used belong to).
>
> As you can see, the source code is the documentation here.
>
> >
> > For sp.correlogram, can I specify the nb object defined by min:0km,
> > max:100km, and use a lag order of, for example 50, to plot the
> > correlogram of my spatial model (which has a neighbourhood distance of
> > 1600 km)?
> >
> > For both functions, it seems that there is no way to incorporate my
> > inverse- distance weighting scheme that I used in my spatial models. Is
> > this of practical concern if I intend to plot my correlograms?
> >
> > Lastly I have a side question regarding correlograms. When we see
> > distances of, e.g., 100, 200, 300, etc (the increment or lag distance is
> > 100), on the X-axis of a spatial correlogram, does the point at 200
> > refer to correlations between neighbours of distance 100-200km apart? Or
> > does it include the first 100km as well (i.e., correlations between
> > neighbours of distance 0-200km apart)?
>
> In general, the pairs of distances within that band (or lag order). But
> check the code to be sure.
>
> Roger
>
> >
> > Sorry for the long post. Many thanks for reading, I really appreciate
> > it. I know some are really basic questions but I can't find any answers
> > to my questions on google or searching through the list.
> >
> > Many thanks,
> > Xingli
> >
> >
>
> --
> Roger Bivand
> Economic Geography Section, Department of Economics, Norwegian School of
> Economics and Business Administration, Helleveien 30, N-5045 Bergen,
> Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
> e-mail: Roger.Bivand at nhh.no
>
>



From cybermails at gmail.com  Thu Jan 29 15:30:21 2009
From: cybermails at gmail.com (Kumudan)
Date: Thu, 29 Jan 2009 08:30:21 -0600
Subject: [R-sig-Geo] Neighborhood distance calculator
Message-ID: <d5081b140901290630k55eeef9bs387e3fdc43156a50@mail.gmail.com>

Hi all,

I am new to R, hence this question. I have a set of points with X and
Y coordinates. I would like to build an R code to calculate the
distances of points within a specified neighborhood (circular range)
for each point. I would like the code to be a function, so that I can
call the function, specifying parameters (data file, distance), from
another piece of code. Also, I would like the output to be as:

output = list(array)
.........code...........
........new code.....
return(output)

Something like this--
[[1496]]
[1] 1490 1491 1492 1493 1494 1495

The most important thing, however, is that I want to run the code for
100,000+ points. The current code I have calculates the neighborhood
distances for all the points with ever point, and then selects only
those points within the specified distance parameter. This code
crashes when I have over 40,000 points. Therefore, I need to figure
out a way to preclude the step where it calculates all of the paired
distances, and rather only those points within the specified distance
parameter. Please, see below for the existing code, and a sample data.
Thanks a lot for your time and effort.

Best,
Kumudan

Kumudan Grubh
EEB Graduate student
Iowa State University

-------------------------------------------------------------------------------------------------------------------------------------------------------
#--Code--
#transform coordinates in kilometers, and redefine origin
newx=(XCOORD-min(XCOORD))/1000
newy=(YCOORD-min(YCOORD))/1000
plot(newx,newy,pch=20,xlab="X coordinate (km)",ylab="Y coordinate (km)")

#set of new locations to be used from here on
tr.locs=cbind(newx,newy)

#the functions necessary for estimation are written in an external
program. All you need to do is to run this program one. To do this,
you could "source" this code
source("D:/...../Functions_distance.R")

#define distance-based neighborhood
nb.tr=dist.neighbors(tr.locs,2)
----------------------------------------------------------------------------------------------------------------------------------------------------------
#---Function_distance.R   <- Function to calculate distance of pairs
of neighbors
#start by defining neighbors
library(spatstat)#need this to compute distances between all points in a data

dist.neighbors=function(data,distance)
#distance is set by user
{
#data has the x and y on the first two columns. Could have more than
two columns, or exactly two columns, it doesn't matter.
#produces a "list" object with a vector of the neighbors for each location
#distance defines the range within which we define neighbors
nd=length(data[,1])
nbmat=list(array)
dist=pairdist(data[,1:2])
 for(i in 1:nd){
 nbmat[[i]]=0
       for(j in 1:nd) if((dist[i,j]<distance)&(i!=j)) nbmat[[i]]=c(nbmat[[i]],j)
       nbmat[[i]]=nbmat[[i]][nbmat[[i]]!=0]}
return(nbmat)
}
------------------------------------------------------------------------------------------------------------------------------------

Data
-----------------------------------------------------------------------------------
XCOORD  YCOORD
544312.87500000000      4851169.00000000000
542705.87500000000      4851165.00000000000
541068.87500000000      4851155.00000000000
537861.81250000000      4851123.00000000000
536246.81250000000      4851118.00000000000
539476.87500000000      4851116.00000000000
534612.81250000000      4851113.00000000000
533004.75000000000      4851095.00000000000
542714.87500000000      4850363.00000000000
543516.87500000000      4850360.00000000000
544319.93750000000      4850358.00000000000
541883.87500000000      4850353.00000000000
541053.87500000000      4850342.50000000000
540268.87500000000      4850326.50000000000
537866.81250000000      4850313.50000000000
538674.87500000000      4850311.50000000000
539483.87500000000      4850310.50000000000
537060.81250000000      4850310.00000000000
536255.81250000000      4850307.00000000000
535434.81250000000      4850306.00000000000
534614.81250000000      4850305.00000000000
533809.81250000000      4850297.00000000000
533004.81250000000      4850289.00000000000
542716.87500000000      4849553.50000000000
541074.87500000000      4849537.50000000000
539486.87500000000      4849508.50000000000
537867.87500000000      4849507.50000000000
536260.81250000000      4849503.50000000000
534622.81250000000      4849498.50000000000
533009.81250000000      4849483.00000000000
542718.93750000000      4848744.50000000000
543524.93750000000      4848743.50000000000
544331.93750000000      4848743.50000000000
541906.87500000000      4848738.50000000000
541095.87500000000      4848733.50000000000
540292.87500000000      4848720.50000000000
539489.87500000000      4848707.50000000000
538679.87500000000      4848704.50000000000
537869.87500000000      4848702.50000000000
536265.81250000000      4848701.50000000000
537067.87500000000      4848701.50000000000
535447.81250000000      4848697.50000000000
534630.81250000000      4848693.50000000000
533822.81250000000      4848684.50000000000
533014.81250000000      4848676.50000000000
532211.81250000000      4848663.50000000000
531409.81250000000      4848650.50000000000
542724.93750000000      4847938.50000000000
541102.87500000000      4847926.50000000000
539492.87500000000      4847906.50000000000
537874.87500000000      4847896.50000000000
536267.87500000000      4847894.50000000000
534634.81250000000      4847882.50000000000
533016.81250000000      4847869.50000000000
531414.81250000000      4847840.50000000000
544345.93750000000      4847135.50000000000
543538.93750000000      4847133.50000000000
542731.93750000000      4847132.50000000000
541920.93750000000      4847125.50000000000
541109.93750000000      4847119.50000000000
540302.87500000000      4847112.50000000000
539496.87500000000      4847105.50000000000
538688.87500000000      4847097.50000000000
537880.87500000000      4847090.50000000000
537075.87500000000      4847088.50000000000
536270.87500000000      4847087.50000000000
535454.87500000000      4847079.50000000000
534639.87500000000      4847071.50000000000
533829.81250000000      4847067.50000000000
533019.81250000000      4847063.50000000000
532219.81250000000      4847047.50000000000
531420.81250000000      4847031.50000000000
544350.93750000000      4846325.50000000000
542735.93750000000      4846319.50000000000
541112.93750000000      4846307.50000000000
539497.87500000000      4846294.50000000000
537882.87500000000      4846282.50000000000
536267.87500000000      4846277.50000000000
534638.87500000000      4846263.50000000000
533022.81250000000      4846253.50000000000
531424.81250000000      4846221.50000000000
544356.93750000000      4845516.50000000000
543547.93750000000      4845511.50000000000
542739.93750000000      4845507.50000000000
541927.93750000000      4845501.50000000000
541115.93750000000      4845495.50000000000
540307.93750000000      4845489.50000000000
539499.93750000000      4845483.50000000000
538692.93750000000      4845478.50000000000
537885.87500000000      4845474.50000000000
537075.87500000000      4845471.50000000000
536265.87500000000      4845468.50000000000
535451.87500000000      4845462.50000000000
534638.87500000000      4845456.50000000000
533831.87500000000      4845449.50000000000
533025.87500000000      4845443.50000000000
532226.81250000000      4845427.50000000000
531428.81250000000      4845412.50000000000
530621.81250000000      4845407.50000000000
529814.81250000000      4845402.50000000000
544356.93750000000      4844711.50000000000
542738.93750000000      4844704.50000000000
541123.93750000000      4844689.50000000000
539506.93750000000      4844675.50000000000
537893.93750000000      4844664.50000000000
536284.87500000000      4844654.50000000000
534641.87500000000      4844646.50000000000
533027.87500000000      4844634.50000000000
531423.87500000000      4844606.50000000000
529812.81250000000      4844600.50000000000
544357.93750000000      4843907.50000000000
543547.93750000000      4843904.50000000000
542737.93750000000      4843901.50000000000
541934.93750000000      4843892.50000000000
541132.93750000000      4843883.50000000000
540323.93750000000      4843875.50000000000
539514.93750000000      4843868.50000000000
538708.93750000000      4843861.50000000000
537902.93750000000      4843854.50000000000
537102.87500000000      4843847.50000000000
536303.87500000000      4843841.50000000000
535473.87500000000      4843838.50000000000
534644.87500000000      4843836.50000000000
533837.87500000000      4843830.50000000000
533030.87500000000      4843825.50000000000
532224.87500000000      4843813.50000000000
531419.87500000000      4843801.50000000000
530615.81250000000      4843800.50000000000
529811.81250000000      4843799.50000000000
544356.93750000000      4843106.50000000000
542737.93750000000      4843094.50000000000
541133.93750000000      4843075.50000000000
539515.93750000000      4843065.50000000000
537906.87500000000      4843047.50000000000
536303.87500000000      4843031.50000000000
534654.87500000000      4843025.50000000000
533033.87500000000      4843015.50000000000
531419.81250000000      4842993.50000000000
529808.81250000000      4842989.50000000000
544356.93750000000      4842305.50000000000
543547.93750000000      4842296.50000000000
542738.93750000000      4842287.50000000000
541936.93750000000      4842277.50000000000
541134.93750000000      4842268.50000000000
540325.93750000000      4842265.50000000000
539516.93750000000      4842262.50000000000
538713.87500000000      4842251.50000000000
537911.87500000000      4842240.50000000000
537107.87500000000      4842231.50000000000
536304.87500000000      4842222.50000000000
535484.87500000000      4842218.50000000000
534664.87500000000      4842214.50000000000
533850.87500000000      4842210.50000000000
533037.87500000000      4842206.50000000000
532228.81250000000      4842195.50000000000
531419.81250000000      4842185.50000000000
530612.81250000000      4842182.50000000000
529806.81250000000      4842179.50000000000
544356.93750000000      4841500.50000000000
542738.93750000000      4841483.50000000000
541132.93750000000      4841463.50000000000
539520.93750000000      4841454.50000000000
537913.87500000000      4841433.50000000000
536304.87500000000      4841418.50000000000
534667.87500000000      4841408.50000000000
533040.81250000000      4841393.50000000000
531425.81250000000      4841373.50000000000
529811.81250000000      4841367.50000000000
544356.93750000000      4840695.50000000000
543547.93750000000      4840687.50000000000
542739.93750000000      4840680.50000000000
541934.93750000000      4840669.50000000000
541130.93750000000      4840658.50000000000
540327.93750000000      4840652.50000000000
539525.87500000000      4840647.50000000000
538720.87500000000      4840637.50000000000
537915.87500000000      4840627.50000000000
537109.87500000000      4840621.50000000000
536304.87500000000      4840615.50000000000
535487.87500000000      4840609.50000000000
534670.87500000000      4840603.50000000000
533856.81250000000      4840591.50000000000
533043.81250000000      4840580.50000000000
532237.81250000000      4840571.50000000000
531431.81250000000      4840562.50000000000
530624.81250000000      4840559.50000000000
529817.81250000000      4840556.50000000000
544357.93750000000      4839892.50000000000
542743.93750000000      4839876.50000000000
541131.93750000000      4839852.50000000000
539528.87500000000      4839840.50000000000
537916.87500000000      4839821.50000000000
536303.87500000000      4839804.50000000000
534672.81250000000      4839794.50000000000
533050.81250000000      4839778.50000000000
531440.81250000000      4839759.50000000000
529825.81250000000      4839749.50000000000
544358.93750000000      4839089.50000000000
543552.93750000000      4839080.50000000000
542747.93750000000      4839072.50000000000
541940.87500000000      4839059.50000000000
541133.87500000000      4839046.50000000000
540332.87500000000      4839040.50000000000
539531.87500000000      4839034.50000000000
538724.87500000000      4839024.50000000000
537918.87500000000      4839015.50000000000
537110.87500000000      4839004.50000000000
536303.87500000000      4838994.50000000000
535489.81250000000      4838990.50000000000
534675.81250000000      4838986.50000000000
533866.81250000000      4838981.50000000000
533057.81250000000      4838976.50000000000
532253.81250000000      4838966.50000000000
531450.81250000000      4838957.50000000000
530642.81250000000      4838949.50000000000
529834.81250000000      4838942.50000000000
544359.93750000000      4838278.50000000000
542747.87500000000      4838263.50000000000
541137.87500000000      4838242.50000000000
539534.87500000000      4838228.50000000000
537918.87500000000      4838210.50000000000
536303.87500000000      4838187.50000000000
534680.81250000000      4838174.50000000000
533064.81250000000      4838165.50000000000
531457.81250000000      4838148.50000000000
529837.75000000000      4838137.50000000000
544360.93750000000      4837467.50000000000
543553.87500000000      4837460.50000000000
542747.87500000000      4837454.50000000000
541944.87500000000      4837446.50000000000
541142.87500000000      4837438.50000000000
540339.87500000000      4837430.50000000000
539537.87500000000      4837422.50000000000
538728.87500000000      4837413.50000000000
537919.87500000000      4837405.50000000000
537111.87500000000      4837392.50000000000
536303.81250000000      4837380.50000000000
535494.81250000000      4837371.50000000000
534685.81250000000      4837362.50000000000
533878.81250000000      4837358.50000000000
533071.81250000000      4837354.50000000000
532268.81250000000      4837347.50000000000
531465.81250000000      4837340.50000000000
530653.75000000000      4837336.50000000000
529841.75000000000      4837333.50000000000
544362.87500000000      4836662.50000000000
542744.87500000000      4836643.50000000000
541137.87500000000      4836632.50000000000
539532.87500000000      4836618.50000000000
537914.87500000000      4836595.50000000000
536301.81250000000      4836574.50000000000
534692.81250000000      4836553.50000000000
533075.81250000000      4836547.50000000000
531468.75000000000      4836535.50000000000
544365.87500000000      4835857.50000000000
544365.87500000000      4835857.50000000000
543553.87500000000      4835845.50000000000
542742.87500000000      4835833.50000000000
541937.87500000000      4835830.50000000000
541133.87500000000      4835827.50000000000
540330.87500000000      4835821.50000000000
539528.87500000000      4835815.50000000000
538718.87500000000      4835800.50000000000
537909.81250000000      4835785.50000000000
537104.81250000000      4835777.50000000000
536300.81250000000      4835769.50000000000
535499.81250000000      4835756.50000000000
534699.81250000000      4835744.50000000000
533889.81250000000      4835742.50000000000
533080.81250000000      4835740.50000000000
532275.75000000000      4835735.50000000000
531471.75000000000      4835731.50000000000
544370.87500000000      4835052.50000000000
542750.87500000000      4835025.50000000000
541144.87500000000      4835014.50000000000
539538.87500000000      4835004.50000000000
537922.81250000000      4834987.50000000000
536315.81250000000      4834974.50000000000
544376.87500000000      4834248.50000000000
543567.87500000000      4834232.50000000000
542759.87500000000      4834217.50000000000
541957.87500000000      4834209.50000000000
541156.87500000000      4834201.50000000000
540352.87500000000      4834197.50000000000
539549.87500000000      4834193.50000000000
538742.81250000000      4834191.50000000000
537936.81250000000      4834190.50000000000
537133.81250000000      4834185.50000000000
536331.81250000000      4834180.50000000000
544384.87500000000      4833445.50000000000
542774.87500000000      4833414.50000000000
541167.87500000000      4833395.50000000000
539561.81250000000      4833387.50000000000
537946.81250000000      4833385.50000000000
544392.87500000000      4832643.50000000000
543590.87500000000      4832627.50000000000
542789.87500000000      4832612.50000000000
541984.87500000000      4832600.50000000000
541179.87500000000      4832589.50000000000
540376.81250000000      4832585.50000000000
539573.81250000000      4832581.50000000000
537957.81250000000      4832580.50000000000
538765.81250000000      4832580.50000000000
544401.87500000000      4831836.50000000000
542796.87500000000      4831805.50000000000
544410.87500000000      4831029.50000000000
543607.81250000000      4831014.50000000000
542804.81250000000      4830999.50000000000
544426.81250000000      4829417.50000000000
544432.81250000000      4828612.50000000000
544439.81250000000      4827808.50000000000
544445.81250000000      4827000.50000000000
544451.81250000000      4826193.50000000000
581262.12500000000      4851357.00000000000
579658.12500000000      4851338.00000000000
574847.12500000000      4851324.00000000000
576447.12500000000      4851320.00000000000
573257.12500000000      4851317.00000000000
578046.12500000000      4851312.00000000000
570057.12500000000      4851309.00000000000
571656.12500000000      4851308.00000000000
568458.12500000000      4851294.00000000000
566851.12500000000      4851277.00000000000
565256.06250000000      4851271.00000000000
563617.06250000000      4851230.00000000000
555586.00000000000      4851224.00000000000
560412.06250000000      4851220.00000000000
562020.06250000000      4851220.00000000000
547498.93750000000      4851208.00000000000
558822.06250000000      4851206.00000000000
557185.06250000000      4851198.00000000000
553966.00000000000      4851194.00000000000
552367.00000000000      4851191.00000000000
550727.00000000000      4851184.00000000000
549115.93750000000      4851169.00000000000
545907.93750000000      4851158.00000000000
581275.12500000000      4850554.00000000000
582081.18750000000      4850551.00000000000
580473.12500000000      4850543.50000000000
579671.12500000000      4850534.00000000000
578866.12500000000      4850522.00000000000
574862.12500000000      4850519.00000000000
573268.12500000000      4850518.00000000000
574065.12500000000      4850518.00000000000
572473.12500000000      4850516.00000000000
575664.12500000000      4850516.00000000000
571679.12500000000      4850515.00000000000
570877.12500000000      4850513.00000000000
576466.12500000000      4850513.00000000000
570075.12500000000      4850512.00000000000
577263.12500000000      4850512.00000000000
578061.12500000000      4850511.00000000000
569274.12500000000      4850500.00000000000
565267.12500000000      4850489.00000000000
568473.12500000000      4850489.00000000000
566067.12500000000      4850485.00000000000
567670.12500000000      4850485.00000000000
566867.12500000000      4850482.00000000000
564447.06250000000      4850470.00000000000
563627.06250000000      4850451.00000000000
562825.06250000000      4850442.00000000000
562023.06250000000      4850434.00000000000
561219.06250000000      4850433.00000000000
560415.06250000000      4850432.00000000000
559616.06250000000      4850417.00000000000
555585.00000000000      4850415.00000000000
556381.06250000000      4850404.00000000000
558817.06250000000      4850403.00000000000
547497.93750000000      4850402.00000000000
554779.00000000000      4850399.00000000000
557997.06250000000      4850398.00000000000
557178.06250000000      4850394.00000000000
553974.00000000000      4850383.00000000000
548305.93750000000      4850382.00000000000
546706.93750000000      4850380.00000000000
553167.00000000000      4850379.00000000000
552361.00000000000      4850375.00000000000
551542.00000000000      4850371.00000000000
550723.00000000000      4850367.00000000000
549917.93750000000      4850365.00000000000
549113.93750000000      4850363.00000000000
544319.93750000000      4850358.00000000000
545117.93750000000      4850358.00000000000
545916.93750000000      4850358.00000000000
581285.18750000000      4849747.50000000000
579682.12500000000      4849730.50000000000
578075.12500000000      4849716.00000000000
571683.12500000000      4849713.00000000000
573270.12500000000      4849713.00000000000
574880.12500000000      4849712.00000000000
576482.12500000000      4849710.00000000000
570082.12500000000      4849703.00000000000
568476.12500000000      4849680.00000000000
566869.12500000000      4849678.00000000000
565265.12500000000      4849670.00000000000
563624.06250000000      4849641.00000000000
562014.06250000000      4849631.00000000000
560419.06250000000      4849626.00000000000
555591.00000000000      4849603.00000000000
558813.06250000000      4849600.00000000000
557189.06250000000      4849591.00000000000
547512.93750000000      4849587.00000000000
553980.00000000000      4849572.00000000000
552379.00000000000      4849566.00000000000
549146.93750000000      4849562.00000000000
550747.00000000000      4849559.00000000000
544325.93750000000      4849551.00000000000
545921.93750000000      4849547.00000000000
582098.18750000000      4848945.50000000000
581296.18750000000      4848941.50000000000
580495.18750000000      4848934.50000000000
579694.12500000000      4848927.50000000000
578891.12500000000      4848924.50000000000
578089.12500000000      4848921.50000000000
577294.12500000000      4848915.00000000000
571688.12500000000      4848912.00000000000
572480.12500000000      4848910.00000000000
573273.12500000000      4848908.00000000000
576499.12500000000      4848908.00000000000
574085.12500000000      4848907.00000000000
575698.12500000000      4848907.00000000000
574898.12500000000      4848906.00000000000
570888.12500000000      4848903.00000000000
570089.12500000000      4848895.00000000000
569284.12500000000      4848883.00000000000
566872.12500000000      4848875.00000000000
567675.12500000000      4848873.00000000000
568479.12500000000      4848872.00000000000
566067.12500000000      4848863.00000000000
565263.12500000000      4848851.00000000000
564442.12500000000      4848841.00000000000
563621.06250000000      4848832.00000000000
562813.06250000000      4848830.00000000000
562006.06250000000      4848829.00000000000
561214.06250000000      4848825.00000000000
560423.06250000000      4848821.00000000000
559616.06250000000      4848809.00000000000
558810.06250000000      4848798.00000000000
558005.06250000000      4848793.00000000000
555597.06250000000      4848792.00000000000
556399.06250000000      4848790.00000000000
557201.06250000000      4848789.00000000000
554791.00000000000      4848777.00000000000
547527.93750000000      4848773.00000000000
548353.93750000000      4848767.00000000000
549181.00000000000      4848762.00000000000
553986.00000000000      4848762.00000000000
553192.00000000000      4848760.00000000000
552398.00000000000      4848758.00000000000
549976.00000000000      4848757.00000000000
546727.93750000000      4848755.00000000000
551584.00000000000      4848755.00000000000
550771.00000000000      4848752.00000000000
544331.93750000000      4848743.50000000000
545129.93750000000      4848739.50000000000
545927.93750000000      4848736.50000000000
581304.18750000000      4848141.50000000000
579704.18750000000      4848128.50000000000
578099.12500000000      4848122.50000000000
576514.12500000000      4848111.50000000000
571691.12500000000      4848109.00000000000
574905.12500000000      4848106.00000000000
573278.12500000000      4848105.00000000000
570091.12500000000      4848091.00000000000
568484.12500000000      4848071.00000000000
566875.12500000000      4848065.00000000000
565260.12500000000      4848050.00000000000
563618.12500000000      4848033.00000000000
562005.06250000000      4848027.00000000000
560415.06250000000      4848025.00000000000
558817.06250000000      4847990.00000000000
555600.06250000000      4847988.00000000000
557207.06250000000      4847985.00000000000
547538.93750000000      4847963.50000000000
553994.00000000000      4847960.00000000000
549177.00000000000      4847951.00000000000
552398.00000000000      4847951.00000000000
550783.00000000000      4847949.00000000000
544338.93750000000      4847939.50000000000
545939.93750000000      4847935.50000000000
582117.18750000000      4847351.50000000000
581312.18750000000      4847341.50000000000
580513.18750000000      4847335.50000000000
579715.18750000000      4847330.50000000000
578912.18750000000      4847327.50000000000
578109.12500000000      4847324.50000000000
577319.12500000000      4847320.50000000000
576530.12500000000      4847316.50000000000
575721.12500000000      4847311.50000000000
574913.12500000000      4847306.50000000000
571694.12500000000      4847306.00000000000
572488.12500000000      4847304.00000000000
574098.12500000000      4847304.00000000000
573283.12500000000      4847302.00000000000
570893.12500000000      4847297.00000000000
570093.12500000000      4847288.00000000000
569291.12500000000      4847279.00000000000
568490.12500000000      4847271.00000000000
567684.12500000000      4847263.00000000000
566878.12500000000      4847255.00000000000
566068.12500000000      4847252.00000000000
565258.12500000000      4847250.00000000000
564436.12500000000      4847242.00000000000
563615.12500000000      4847234.00000000000
560408.06250000000      4847230.00000000000
562809.12500000000      4847229.00000000000
561206.06250000000      4847227.00000000000
562004.06250000000      4847225.00000000000
559616.06250000000      4847206.00000000000
555604.06250000000      4847184.00000000000
556409.06250000000      4847183.00000000000
558824.06250000000      4847183.00000000000
557214.06250000000      4847182.00000000000
558019.06250000000      4847182.00000000000
554803.06250000000      4847171.00000000000
554002.00000000000      4847158.00000000000
547551.00000000000      4847154.50000000000
553200.00000000000      4847151.00000000000
548362.00000000000      4847147.50000000000
550795.00000000000      4847146.00000000000
551596.00000000000      4847145.00000000000
552398.00000000000      4847145.00000000000
546751.93750000000      4847144.50000000000
549984.00000000000      4847142.50000000000
549173.00000000000      4847140.50000000000
544345.93750000000      4847135.50000000000
545148.93750000000      4847134.50000000000
545952.93750000000      4847134.50000000000
581323.18750000000      4846533.50000000000
579715.18750000000      4846521.50000000000
578112.18750000000      4846514.50000000000
576527.12500000000      4846510.50000000000
571699.12500000000      4846503.00000000000
574912.12500000000      4846502.50000000000
573294.12500000000      4846494.50000000000
570096.12500000000      4846484.00000000000
568496.12500000000      4846467.00000000000
566875.12500000000      4846448.00000000000
565251.12500000000      4846440.00000000000
563618.12500000000      4846427.00000000000
562012.06250000000      4846418.00000000000
560412.06250000000      4846401.00000000000
558834.06250000000      4846375.00000000000
557234.06250000000      4846372.00000000000
555632.06250000000      4846365.00000000000
554011.06250000000      4846350.00000000000
547566.00000000000      4846343.50000000000
552409.00000000000      4846342.00000000000
550802.00000000000      4846334.50000000000
549183.00000000000      4846333.50000000000
545957.93750000000      4846332.50000000000
582140.18750000000      4845730.50000000000
581335.18750000000      4845725.50000000000
580525.18750000000      4845719.50000000000
579716.18750000000      4845713.50000000000
578916.18750000000      4845708.50000000000
576525.12500000000      4845705.50000000000
577320.18750000000      4845704.50000000000
578116.18750000000      4845704.50000000000
575718.12500000000      4845701.50000000000
571704.12500000000      4845699.50000000000
574912.12500000000      4845698.50000000000
572504.12500000000      4845693.50000000000
574108.12500000000      4845692.50000000000
570901.12500000000      4845689.50000000000
573305.12500000000      4845687.50000000000
570099.12500000000      4845681.00000000000
569300.12500000000      4845672.00000000000
568502.12500000000      4845664.00000000000
567687.12500000000      4845653.00000000000
566873.12500000000      4845642.00000000000
566059.12500000000      4845636.00000000000
565245.12500000000      4845630.00000000000
564433.12500000000      4845625.00000000000
563622.12500000000      4845621.00000000000
562821.12500000000      4845616.00000000000
562021.12500000000      4845611.00000000000
561218.06250000000      4845591.00000000000
560416.06250000000      4845572.00000000000
559630.06250000000      4845569.00000000000
558844.06250000000      4845567.00000000000
558049.06250000000      4845564.00000000000
557255.06250000000      4845562.00000000000
556457.06250000000      4845554.00000000000
555660.06250000000      4845547.00000000000
554840.06250000000      4845544.00000000000
554021.06250000000      4845541.50000000000
553221.00000000000      4845539.50000000000
552421.00000000000      4845538.50000000000
547582.00000000000      4845532.50000000000
546773.00000000000      4845531.50000000000
551615.00000000000      4845531.50000000000
545964.00000000000      4845530.50000000000
548388.00000000000      4845529.50000000000
549194.00000000000      4845527.50000000000
550001.00000000000      4845525.50000000000
550809.00000000000      4845524.50000000000
545159.93750000000      4845523.50000000000
544356.93750000000      4845516.50000000000
581346.18750000000      4844925.50000000000
576526.18750000000      4844915.50000000000
579720.18750000000      4844914.50000000000
578115.18750000000      4844909.50000000000
574928.12500000000      4844898.50000000000
571709.12500000000      4844888.50000000000
573319.12500000000      4844886.50000000000
570102.12500000000      4844857.50000000000
568503.12500000000      4844856.50000000000
566896.12500000000      4844830.00000000000
562012.12500000000      4844826.00000000000
565276.12500000000      4844819.00000000000
563629.12500000000      4844816.00000000000
560396.06250000000      4844803.00000000000
558820.06250000000      4844781.00000000000
557234.06250000000      4844754.00000000000
555650.06250000000      4844752.50000000000
554026.06250000000      4844749.50000000000
545963.00000000000      4844748.50000000000
552433.00000000000      4844746.50000000000
547587.00000000000      4844733.50000000000
549203.00000000000      4844717.50000000000
550818.00000000000      4844702.50000000000
582163.18750000000      4844137.50000000000
576528.12500000000      4844126.50000000000
581357.18750000000      4844125.50000000000
577321.18750000000      4844120.50000000000
580540.18750000000      4844120.50000000000
578115.18750000000      4844115.50000000000
578919.18750000000      4844115.50000000000
579724.18750000000      4844115.50000000000
575736.12500000000      4844112.50000000000
574945.12500000000      4844099.50000000000
574139.12500000000      4844092.50000000000
573333.12500000000      4844086.50000000000
572523.12500000000      4844082.50000000000
571714.12500000000      4844078.50000000000
570910.12500000000      4844056.50000000000
568504.12500000000      4844049.50000000000
569305.12500000000      4844042.50000000000
562003.12500000000      4844041.00000000000
561189.06250000000      4844038.00000000000
570106.12500000000      4844035.50000000000
560376.06250000000      4844035.00000000000
567712.12500000000      4844033.50000000000
562820.12500000000      4844026.00000000000
566920.12500000000      4844018.50000000000
559586.06250000000      4844015.00000000000
566114.12500000000      4844013.00000000000
563637.12500000000      4844012.00000000000
564472.12500000000      4844010.00000000000
565308.12500000000      4844008.00000000000
558796.06250000000      4843996.00000000000
558004.06250000000      4843971.00000000000
545962.00000000000      4843967.50000000000
555640.06250000000      4843958.50000000000
554032.06250000000      4843957.50000000000
554836.06250000000      4843957.50000000000
553239.06250000000      4843955.50000000000
552446.00000000000      4843954.50000000000
556426.06250000000      4843952.50000000000
546777.00000000000      4843950.50000000000
557213.06250000000      4843946.50000000000
545160.00000000000      4843937.50000000000
547592.00000000000      4843934.50000000000
548402.00000000000      4843921.50000000000
551636.00000000000      4843917.50000000000
549213.00000000000      4843908.50000000000
544357.93750000000      4843907.50000000000
550020.00000000000      4843894.50000000000
550827.00000000000      4843881.50000000000
581372.18750000000      4843321.50000000000
576554.12500000000      4843318.50000000000
578144.12500000000      4843307.50000000000
579753.12500000000      4843307.50000000000
574958.12500000000      4843303.50000000000
573341.12500000000      4843282.50000000000
571723.12500000000      4843267.50000000000
568510.12500000000      4843239.50000000000
562005.06250000000      4843235.00000000000
570114.12500000000      4843231.50000000000
560386.06250000000      4843228.00000000000
566916.12500000000      4843211.50000000000
563643.06250000000      4843210.00000000000
565305.12500000000      4843205.00000000000
558784.06250000000      4843194.00000000000
545978.00000000000      4843161.50000000000
555639.06250000000      4843157.50000000000
552444.00000000000      4843149.50000000000
554037.00000000000      4843147.50000000000
557208.06250000000      4843137.50000000000
547616.00000000000      4843134.50000000000
549224.00000000000      4843111.50000000000
550848.00000000000      4843084.50000000000
581387.12500000000      4842517.50000000000
576581.12500000000      4842511.50000000000
575776.12500000000      4842509.50000000000
574971.12500000000      4842508.50000000000
580584.12500000000      4842508.50000000000
577377.12500000000      4842505.50000000000
579782.12500000000      4842500.50000000000
578174.12500000000      4842499.50000000000
578978.12500000000      4842499.50000000000
574160.12500000000      4842493.50000000000
573349.12500000000      4842479.50000000000
572540.12500000000      4842468.50000000000
571732.12500000000      4842457.50000000000
570927.12500000000      4842442.50000000000
568516.12500000000      4842430.50000000000
562007.06250000000      4842430.00000000000
569319.12500000000      4842429.50000000000
570122.12500000000      4842428.50000000000
561202.06250000000      4842425.00000000000
560397.06250000000      4842421.00000000000
562828.06250000000      4842419.00000000000
567714.12500000000      4842417.50000000000
563649.06250000000      4842408.00000000000
559584.06250000000      4842407.00000000000
564476.06250000000      4842405.00000000000
566913.06250000000      4842404.50000000000
566108.06250000000      4842403.50000000000
565303.06250000000      4842402.50000000000
558772.06250000000      4842393.00000000000
557987.06250000000      4842360.50000000000
555639.06250000000      4842356.50000000000
545993.93750000000      4842355.50000000000
554841.00000000000      4842347.50000000000
552442.00000000000      4842345.50000000000
546817.00000000000      4842344.50000000000
556421.06250000000      4842342.50000000000
553242.00000000000      4842341.50000000000
554043.00000000000      4842338.50000000000
547641.00000000000      4842334.50000000000
545174.93750000000      4842330.50000000000
557203.06250000000      4842329.50000000000
548438.00000000000      4842324.50000000000
551655.00000000000      4842316.50000000000
549235.00000000000      4842315.50000000000
544356.93750000000      4842305.50000000000
550052.00000000000      4842301.50000000000
550869.00000000000      4842287.50000000000
581398.12500000000      4841720.50000000000
576589.12500000000      4841709.50000000000
579794.12500000000      4841702.50000000000
574973.12500000000      4841701.50000000000
578196.12500000000      4841697.50000000000
573357.12500000000      4841672.50000000000
571748.12500000000      4841652.50000000000
568517.06250000000      4841624.50000000000
570131.06250000000      4841624.50000000000
562021.06250000000      4841618.00000000000
560402.06250000000      4841610.00000000000
563673.06250000000      4841604.00000000000
566917.06250000000      4841595.50000000000
565297.06250000000      4841593.50000000000
558787.06250000000      4841588.00000000000
555644.00000000000      4841557.50000000000
554047.00000000000      4841548.50000000000
546000.93750000000      4841545.50000000000
552442.00000000000      4841544.50000000000
557225.06250000000      4841542.50000000000
547637.93750000000      4841530.50000000000
549244.00000000000      4841505.50000000000
544356.93750000000      4841500.50000000000
550860.00000000000      4841487.50000000000
581409.12500000000      4840923.50000000000
580607.12500000000      4840914.50000000000
576597.12500000000      4840907.50000000000
579806.12500000000      4840905.50000000000
577408.12500000000      4840901.50000000000
575786.12500000000      4840900.50000000000
579012.12500000000      4840900.50000000000
578219.12500000000      4840895.50000000000
574976.12500000000      4840894.50000000000
574171.12500000000      4840879.50000000000
573366.12500000000      4840865.50000000000
572565.06250000000      4840856.50000000000
571764.06250000000      4840847.50000000000
570952.06250000000      4840834.50000000000
570140.06250000000      4840821.50000000000
569329.06250000000      4840819.50000000000
568519.06250000000      4840818.50000000000
562035.06250000000      4840806.00000000000
562866.06250000000      4840803.00000000000
567720.06250000000      4840802.50000000000
561221.06250000000      4840802.00000000000
563697.06250000000      4840800.50000000000
560407.06250000000      4840799.00000000000
564494.06250000000      4840792.50000000000
559604.06250000000      4840791.00000000000
566921.06250000000      4840787.50000000000
566106.06250000000      4840786.50000000000
565292.06250000000      4840785.50000000000
558802.06250000000      4840782.50000000000
558024.00000000000      4840769.50000000000
554051.00000000000      4840758.50000000000
554850.00000000000      4840758.50000000000
555650.00000000000      4840758.50000000000
556448.00000000000      4840757.50000000000
557247.00000000000      4840756.50000000000
553247.00000000000      4840750.50000000000
552443.00000000000      4840743.50000000000
546007.93750000000      4840735.50000000000
546820.93750000000      4840731.50000000000
547634.93750000000      4840727.50000000000
545181.93750000000      4840715.50000000000
551647.00000000000      4840715.50000000000
548443.93750000000      4840711.50000000000
549254.00000000000      4840696.50000000000
544356.93750000000      4840695.50000000000
550052.00000000000      4840692.50000000000
550851.00000000000      4840688.50000000000
581421.12500000000      4840125.50000000000
576605.12500000000      4840110.50000000000
579812.12500000000      4840104.50000000000
578218.12500000000      4840095.50000000000
574986.06250000000      4840081.50000000000
573369.06250000000      4840065.50000000000
571770.06250000000      4840047.50000000000
570151.06250000000      4840026.50000000000
568532.06250000000      4840011.50000000000
562045.06250000000      4840002.00000000000
560424.06250000000      4839997.00000000000
563702.06250000000      4839992.50000000000
566925.06250000000      4839982.50000000000
558824.00000000000      4839981.50000000000
565306.06250000000      4839976.50000000000
557250.00000000000      4839959.50000000000
554044.00000000000      4839949.50000000000
555645.00000000000      4839947.50000000000
552435.00000000000      4839938.50000000000
546011.93750000000      4839931.50000000000
547633.93750000000      4839915.50000000000
549246.93750000000      4839900.50000000000
544357.93750000000      4839892.50000000000
550840.00000000000      4839889.50000000000
581434.12500000000      4839328.50000000000
580626.12500000000      4839316.50000000000
576613.06250000000      4839314.50000000000
577415.06250000000      4839304.50000000000
579819.12500000000      4839304.50000000000
579018.06250000000      4839299.50000000000
578218.06250000000      4839295.50000000000
575805.06250000000      4839291.50000000000
574997.06250000000      4839269.50000000000
574185.06250000000      4839267.50000000000
573373.06250000000      4839265.50000000000
572575.06250000000      4839256.50000000000
571777.06250000000      4839247.50000000000
570970.06250000000      4839239.50000000000
570163.06250000000      4839231.50000000000
569354.06250000000      4839218.50000000000
568546.06250000000      4839205.50000000000
562055.06250000000      4839197.50000000000
561248.00000000000      4839195.50000000000
560441.00000000000      4839195.00000000000
562881.06250000000      4839191.50000000000
567738.06250000000      4839191.50000000000
559643.00000000000      4839187.50000000000
563707.06250000000      4839185.50000000000
558846.00000000000      4839181.50000000000
566930.06250000000      4839177.50000000000
564513.06250000000      4839176.50000000000
566125.06250000000      4839172.50000000000
558050.00000000000      4839171.50000000000
565320.06250000000      4839167.50000000000
557254.00000000000      4839162.50000000000
556447.00000000000      4839149.50000000000
554038.00000000000      4839141.50000000000
554839.00000000000      4839139.50000000000
553232.00000000000      4839137.50000000000
555641.00000000000      4839137.50000000000
552427.00000000000      4839133.50000000000
546015.93750000000      4839128.50000000000
546823.93750000000      4839115.50000000000
551628.00000000000      4839112.50000000000
545186.93750000000      4839108.50000000000
549240.93750000000      4839105.50000000000
548436.93750000000      4839104.50000000000
547632.93750000000      4839103.50000000000
550034.93750000000      4839098.50000000000
550829.93750000000      4839091.50000000000
544358.93750000000      4839089.50000000000
581441.06250000000      4838524.50000000000
576619.06250000000      4838498.50000000000
579823.06250000000      4838498.50000000000
578221.06250000000      4838493.50000000000
575001.06250000000      4838471.50000000000
573380.06250000000      4838463.50000000000
571779.06250000000      4838449.50000000000
570172.06250000000      4838418.50000000000
568563.06250000000      4838402.50000000000
562071.00000000000      4838384.50000000000
563719.00000000000      4838382.50000000000
560457.00000000000      4838380.50000000000
566952.06250000000      4838375.50000000000
558857.00000000000      4838370.50000000000
565342.06250000000      4838356.50000000000
557260.00000000000      4838353.50000000000
554040.00000000000      4838333.50000000000
555656.00000000000      4838332.50000000000
552428.93750000000      4838320.50000000000
546008.93750000000      4838311.50000000000
547626.93750000000      4838295.50000000000
549236.93750000000      4838294.50000000000
550824.93750000000      4838290.50000000000
544359.93750000000      4838278.50000000000
581449.06250000000      4837721.50000000000
580638.06250000000      4837706.50000000000
578224.06250000000      4837692.50000000000
579025.06250000000      4837692.50000000000
579827.06250000000      4837692.50000000000
577424.06250000000      4837687.50000000000
576625.06250000000      4837682.50000000000
575815.06250000000      4837678.50000000000
575006.06250000000      4837674.50000000000
574196.06250000000      4837668.50000000000
573387.06250000000      4837662.50000000000
572584.06250000000      4837656.50000000000
571782.06250000000      4837651.50000000000
570981.06250000000      4837628.50000000000
570181.06250000000      4837606.50000000000
569380.06250000000      4837602.50000000000
568580.06250000000      4837599.50000000000
567777.00000000000      4837586.50000000000
563731.00000000000      4837579.50000000000
562909.00000000000      4837575.50000000000
566975.00000000000      4837574.50000000000
562088.00000000000      4837572.50000000000
561281.00000000000      4837569.50000000000
560474.00000000000      4837567.50000000000
559671.00000000000      4837563.50000000000
564548.00000000000      4837562.50000000000
566170.00000000000      4837560.50000000000
558868.00000000000      4837559.50000000000
558067.00000000000      4837551.50000000000
565365.00000000000      4837546.50000000000
557266.00000000000      4837544.50000000000
556469.00000000000      4837536.50000000000
555672.00000000000      4837528.50000000000
554857.00000000000      4837526.50000000000
554041.93750000000      4837525.50000000000
553236.93750000000      4837516.50000000000
552431.93750000000      4837508.50000000000
551625.93750000000      4837498.50000000000
546002.93750000000      4837494.50000000000
546811.93750000000      4837491.50000000000
550819.93750000000      4837489.50000000000
547620.93750000000      4837488.50000000000
550026.93750000000      4837486.50000000000
548426.93750000000      4837485.50000000000
549233.93750000000      4837483.50000000000
545181.93750000000      4837480.50000000000
544360.93750000000      4837467.50000000000
581448.06250000000      4836922.50000000000
579835.06250000000      4836895.50000000000
578223.06250000000      4836888.50000000000
576630.06250000000      4836881.50000000000
575004.06250000000      4836873.50000000000
573398.06250000000      4836858.50000000000
571790.06250000000      4836850.50000000000
570187.00000000000      4836823.50000000000
568582.00000000000      4836801.50000000000
563734.00000000000      4836780.50000000000
566960.00000000000      4836778.50000000000
562117.00000000000      4836769.50000000000
560503.00000000000      4836759.50000000000
565353.00000000000      4836758.50000000000
558891.00000000000      4836751.50000000000
557286.00000000000      4836736.50000000000
555682.93750000000      4836724.50000000000
554045.93750000000      4836716.50000000000
552432.93750000000      4836704.50000000000
550821.93750000000      4836689.50000000000
547610.93750000000      4836679.50000000000
549224.93750000000      4836678.50000000000
545997.93750000000      4836676.50000000000
581447.06250000000      4836123.50000000000
580645.06250000000      4836111.50000000000
579843.06250000000      4836099.50000000000
579032.06250000000      4836092.50000000000
578222.06250000000      4836085.50000000000
577429.06250000000      4836083.50000000000
576636.06250000000      4836081.50000000000
575819.06250000000      4836076.50000000000
575003.06250000000      4836072.50000000000
574206.00000000000      4836063.50000000000
573409.00000000000      4836054.50000000000
572603.00000000000      4836052.50000000000
571798.00000000000      4836050.50000000000
570995.00000000000      4836045.50000000000
570193.00000000000      4836041.50000000000
569389.00000000000      4836022.50000000000
568585.00000000000      4836004.50000000000
567765.00000000000      4835993.50000000000
566946.00000000000      4835982.50000000000
563737.00000000000      4835981.50000000000
564539.00000000000      4835976.50000000000
566144.00000000000      4835976.50000000000
562942.00000000000      4835973.50000000000
565342.00000000000      4835971.50000000000
562147.00000000000      4835966.50000000000
561340.00000000000      4835958.50000000000
560533.00000000000      4835951.50000000000
559724.00000000000      4835947.50000000000
558915.00000000000      4835943.50000000000
558111.00000000000      4835936.50000000000
557306.93750000000      4835929.50000000000
556499.93750000000      4835925.50000000000
555693.93750000000      4835921.50000000000
554871.93750000000      4835914.50000000000
554049.93750000000      4835907.50000000000
553241.93750000000      4835903.50000000000
552434.93750000000      4835900.50000000000
551628.93750000000      4835895.50000000000
550823.93750000000      4835890.50000000000
550019.93750000000      4835882.50000000000
549215.93750000000      4835874.50000000000
548408.93750000000      4835872.50000000000
547601.93750000000      4835870.50000000000
546796.87500000000      4835864.50000000000
545992.87500000000      4835859.50000000000
545178.87500000000      4835858.50000000000
544365.87500000000      4835857.50000000000
544365.87500000000      4835857.50000000000
581447.06250000000      4835324.50000000000
579842.06250000000      4835300.50000000000
578220.00000000000      4835292.50000000000
576633.00000000000      4835275.50000000000
575012.00000000000      4835267.50000000000
573413.00000000000      4835257.50000000000
571812.00000000000      4835246.50000000000
570202.00000000000      4835244.50000000000
568597.00000000000      4835212.50000000000
566971.00000000000      4835186.50000000000
565357.00000000000      4835176.50000000000
563749.00000000000      4835173.50000000000
562148.00000000000      4835143.50000000000
558920.93750000000      4835137.50000000000
557310.93750000000      4835132.50000000000
560542.00000000000      4835125.50000000000
555701.93750000000      4835118.50000000000
552442.93750000000      4835112.50000000000
554061.93750000000      4835106.50000000000
550832.93750000000      4835101.50000000000
549221.93750000000      4835089.50000000000
547605.87500000000      4835083.50000000000
545994.87500000000      4835073.50000000000
581447.06250000000      4834526.50000000000
580644.00000000000      4834514.50000000000
579842.00000000000      4834502.50000000000
579030.00000000000      4834501.50000000000
578219.00000000000      4834500.50000000000
577424.00000000000      4834484.50000000000
576630.00000000000      4834469.50000000000
575826.00000000000      4834466.50000000000
575022.00000000000      4834463.50000000000
574219.00000000000      4834461.50000000000
573417.00000000000      4834460.50000000000
572621.00000000000      4834451.50000000000
570211.00000000000      4834448.50000000000
571018.00000000000      4834445.50000000000
571826.00000000000      4834443.50000000000
569410.00000000000      4834434.50000000000
568610.00000000000      4834420.50000000000
567803.00000000000      4834405.50000000000
566997.00000000000      4834391.50000000000
566185.00000000000      4834386.50000000000
565373.00000000000      4834382.50000000000
564567.00000000000      4834374.50000000000
563762.00000000000      4834366.50000000000
562956.00000000000      4834343.50000000000
557315.93750000000      4834336.50000000000
558121.93750000000      4834333.50000000000
558927.93750000000      4834331.50000000000
556512.93750000000      4834326.50000000000
552451.93750000000      4834324.50000000000
562150.00000000000      4834321.50000000000
551646.93750000000      4834318.50000000000
555710.93750000000      4834316.50000000000
553262.93750000000      4834315.50000000000
559739.93750000000      4834315.50000000000
550842.93750000000      4834312.50000000000
554892.93750000000      4834311.50000000000
561350.93750000000      4834310.50000000000
550034.93750000000      4834308.50000000000
554074.93750000000      4834306.50000000000
549227.87500000000      4834305.50000000000
548418.87500000000      4834300.50000000000
560551.93750000000      4834299.50000000000
547609.87500000000      4834296.50000000000
546802.87500000000      4834291.50000000000
545996.87500000000      4834287.50000000000
545186.87500000000      4834267.50000000000
544376.87500000000      4834248.50000000000
581457.00000000000      4833732.50000000000
579853.00000000000      4833711.50000000000
578226.00000000000      4833700.50000000000
576636.00000000000      4833667.50000000000
575031.00000000000      4833663.50000000000
573422.00000000000      4833657.50000000000
571827.00000000000      4833650.50000000000
570217.00000000000      4833637.50000000000
568611.00000000000      4833622.50000000000
567003.00000000000      4833596.50000000000
565384.00000000000      4833583.50000000000
563763.93750000000      4833556.50000000000
557330.93750000000      4833529.50000000000
558945.93750000000      4833524.50000000000
552465.93750000000      4833518.50000000000
562156.93750000000      4833514.50000000000
555725.93750000000      4833513.50000000000
550854.87500000000      4833506.50000000000
554079.93750000000      4833505.50000000000
549239.87500000000      4833499.50000000000
560562.93750000000      4833496.50000000000
547621.87500000000      4833489.50000000000
546007.87500000000      4833483.50000000000
581467.00000000000      4832939.50000000000
580666.00000000000      4832930.50000000000
579865.00000000000      4832921.50000000000
579049.00000000000      4832911.50000000000
578233.00000000000      4832901.50000000000
577437.00000000000      4832883.50000000000
576642.00000000000      4832866.50000000000
575841.00000000000      4832865.50000000000
575041.00000000000      4832864.50000000000
574234.00000000000      4832859.50000000000
571828.00000000000      4832858.50000000000
572628.00000000000      4832856.50000000000
573428.00000000000      4832854.50000000000
571026.00000000000      4832842.50000000000
570224.00000000000      4832826.50000000000
569418.00000000000      4832825.50000000000
568612.93750000000      4832824.50000000000
567810.93750000000      4832813.50000000000
567008.93750000000      4832802.50000000000
566201.93750000000      4832793.50000000000
565394.93750000000      4832784.50000000000
564580.93750000000      4832765.50000000000
563766.93750000000      4832747.50000000000
562964.93750000000      4832727.50000000000
557345.93750000000      4832722.50000000000
558154.93750000000      4832719.50000000000
558964.93750000000      4832717.50000000000
556542.93750000000      4832716.50000000000
552479.87500000000      4832712.50000000000
555740.93750000000      4832711.50000000000
553282.93750000000      4832708.50000000000
554912.93750000000      4832708.50000000000
562163.93750000000      4832707.50000000000
551672.87500000000      4832706.50000000000
554085.93750000000      4832705.50000000000
559769.93750000000      4832705.50000000000
550866.87500000000      4832701.50000000000
561368.93750000000      4832700.50000000000
550058.87500000000      4832697.50000000000
549251.87500000000      4832693.50000000000
560574.93750000000      4832693.50000000000
548442.87500000000      4832687.50000000000
547633.87500000000      4832682.50000000000
546825.87500000000      4832681.50000000000
546018.87500000000      4832680.50000000000
545205.87500000000      4832661.50000000000
544392.87500000000      4832643.50000000000
581476.00000000000      4832138.50000000000
579873.00000000000      4832116.50000000000
578245.00000000000      4832101.50000000000
576648.00000000000      4832074.50000000000
575038.00000000000      4832061.50000000000
573441.00000000000      4832052.50000000000
571835.93750000000      4832043.50000000000
570233.93750000000      4832033.50000000000
568621.93750000000      4832028.50000000000
567014.93750000000      4832006.50000000000
565406.93750000000      4831986.50000000000
563776.93750000000      4831957.50000000000
557360.93750000000      4831920.50000000000
558973.93750000000      4831916.50000000000
555755.93750000000      4831910.50000000000
552481.87500000000      4831909.50000000000
562171.93750000000      4831909.50000000000
554087.87500000000      4831898.50000000000
550861.87500000000      4831895.50000000000
549252.87500000000      4831890.50000000000
560583.93750000000      4831890.50000000000
547638.87500000000      4831877.50000000000
546023.87500000000      4831876.50000000000
544401.87500000000      4831836.50000000000
581486.00000000000      4831338.50000000000
580683.00000000000      4831325.50000000000
579881.00000000000      4831312.50000000000
579069.00000000000      4831306.50000000000
578258.00000000000      4831301.50000000000
577455.93750000000      4831292.50000000000
576653.93750000000      4831283.50000000000
575844.93750000000      4831271.50000000000
575035.93750000000      4831259.50000000000
574244.93750000000      4831255.50000000000
573453.93750000000      4831251.50000000000
570243.93750000000      4831240.50000000000
572648.93750000000      4831239.50000000000
569436.93750000000      4831236.50000000000
571043.93750000000      4831234.50000000000
568630.93750000000      4831232.50000000000
571843.93750000000      4831228.50000000000
567825.93750000000      4831221.50000000000
567020.93750000000      4831210.50000000000
566219.93750000000      4831199.50000000000
565418.93750000000      4831188.50000000000
564602.93750000000      4831178.50000000000
563786.93750000000      4831168.50000000000
562983.93750000000      4831140.50000000000
557375.93750000000      4831118.50000000000
558179.93750000000      4831116.50000000000
558983.93750000000      4831115.50000000000
556572.87500000000      4831113.50000000000
562180.93750000000      4831112.50000000000
555770.87500000000      4831109.50000000000
552483.87500000000      4831106.50000000000
559787.93750000000      4831101.50000000000
554930.87500000000      4831100.50000000000
561386.93750000000      4831099.50000000000
553286.87500000000      4831098.50000000000
551670.87500000000      4831097.50000000000
554090.87500000000      4831091.50000000000
550857.87500000000      4831089.50000000000
550055.87500000000      4831088.50000000000
549253.87500000000      4831087.50000000000
560592.93750000000      4831087.50000000000
548448.87500000000      4831080.50000000000
547644.87500000000      4831073.50000000000
546028.87500000000      4831072.50000000000
546836.87500000000      4831072.50000000000
545219.87500000000      4831050.50000000000
544410.87500000000      4831029.50000000000
581499.00000000000      4830538.50000000000
579882.93750000000      4830520.50000000000
578263.93750000000      4830494.50000000000
576656.93750000000      4830485.50000000000
575042.93750000000      4830457.50000000000
573458.93750000000      4830452.50000000000
571849.93750000000      4830437.50000000000
570253.93750000000      4830435.50000000000
568641.93750000000      4830425.50000000000
567027.93750000000      4830403.50000000000
565418.93750000000      4830379.50000000000
563795.93750000000      4830365.50000000000
562196.93750000000      4830319.50000000000
557389.87500000000      4830316.50000000000
558993.93750000000      4830314.50000000000
555783.87500000000      4830310.50000000000
560601.93750000000      4830307.50000000000
552489.87500000000      4830301.50000000000
554100.87500000000      4830297.50000000000
550872.87500000000      4830287.50000000000
549268.87500000000      4830279.50000000000
546043.87500000000      4830263.50000000000
547657.87500000000      4830262.50000000000
544418.81250000000      4830223.50000000000
581511.93750000000      4829738.50000000000
580698.93750000000      4829733.50000000000
579885.93750000000      4829728.50000000000
579077.93750000000      4829708.50000000000
576659.93750000000      4829688.50000000000
577464.93750000000      4829688.50000000000
578270.93750000000      4829688.50000000000
575854.93750000000      4829672.50000000000
575050.93750000000      4829656.50000000000
574257.93750000000      4829654.50000000000
573464.93750000000      4829653.50000000000
572659.93750000000      4829649.50000000000
571855.93750000000      4829646.50000000000
571059.93750000000      4829638.50000000000
570263.93750000000      4829630.50000000000
569457.93750000000      4829624.50000000000
568652.93750000000      4829618.50000000000
567843.93750000000      4829607.50000000000
567035.93750000000      4829597.50000000000
566226.93750000000      4829584.50000000000
565418.93750000000      4829571.50000000000
564611.93750000000      4829567.50000000000
563804.93750000000      4829563.50000000000
563008.93750000000      4829545.50000000000
560611.87500000000      4829528.50000000000
561411.93750000000      4829527.50000000000
562212.93750000000      4829527.50000000000
559807.87500000000      4829521.50000000000
557403.87500000000      4829515.50000000000
558203.87500000000      4829514.50000000000
559004.87500000000      4829514.50000000000
556599.87500000000      4829513.50000000000
555796.87500000000      4829512.50000000000
554953.87500000000      4829507.50000000000
554111.87500000000      4829503.50000000000
553303.87500000000      4829499.50000000000
552496.87500000000      4829496.50000000000
551691.87500000000      4829491.50000000000
550887.87500000000      4829486.50000000000
550085.87500000000      4829478.50000000000
549283.87500000000      4829471.50000000000
548476.87500000000      4829461.50000000000
546059.81250000000      4829455.50000000000
546864.81250000000      4829453.50000000000
547670.87500000000      4829451.50000000000
545242.81250000000      4829436.50000000000
544426.81250000000      4829417.50000000000
581522.93750000000      4828937.50000000000
579898.93750000000      4828926.50000000000
578283.93750000000      4828894.50000000000
576673.93750000000      4828887.50000000000
575063.93750000000      4828860.50000000000
573478.93750000000      4828856.50000000000
571872.93750000000      4828837.50000000000
570274.93750000000      4828820.50000000000
568659.93750000000      4828817.50000000000
567048.93750000000      4828792.50000000000
565432.87500000000      4828770.50000000000
563809.87500000000      4828762.50000000000
562218.87500000000      4828728.50000000000
560620.87500000000      4828723.50000000000
559008.87500000000      4828715.50000000000
557405.87500000000      4828710.50000000000
555793.87500000000      4828708.50000000000
554113.87500000000      4828700.50000000000
552504.87500000000      4828692.50000000000
550893.87500000000      4828679.50000000000
549288.87500000000      4828664.50000000000
546057.81250000000      4828647.50000000000
547675.81250000000      4828646.50000000000
581534.93750000000      4828137.50000000000
580723.93750000000      4828131.50000000000
579912.93750000000      4828125.50000000000
579104.93750000000      4828113.50000000000
578296.93750000000      4828101.50000000000
577491.93750000000      4828094.50000000000
576687.93750000000      4828087.50000000000
575882.93750000000      4828075.50000000000
575077.93750000000      4828064.50000000000
574284.93750000000      4828062.50000000000
573492.93750000000      4828060.50000000000
572690.93750000000      4828044.50000000000
571889.93750000000      4828029.50000000000
571087.93750000000      4828020.50000000000
568667.87500000000      4828016.50000000000
569476.87500000000      4828013.50000000000
570285.87500000000      4828011.50000000000
567864.87500000000      4828002.50000000000
567061.87500000000      4827988.50000000000
566254.87500000000      4827979.50000000000
565447.87500000000      4827970.50000000000
564631.87500000000      4827965.50000000000
563815.87500000000      4827961.50000000000
563019.87500000000      4827945.50000000000
562224.87500000000      4827929.50000000000
561427.87500000000      4827924.50000000000
560630.87500000000      4827919.50000000000
559821.87500000000      4827917.50000000000
559013.87500000000      4827916.50000000000
558210.87500000000      4827911.50000000000
557407.87500000000      4827906.50000000000
555790.87500000000      4827905.50000000000
556598.87500000000      4827905.50000000000
554953.87500000000      4827901.50000000000
554116.87500000000      4827897.50000000000
553314.87500000000      4827892.50000000000
552513.87500000000      4827888.50000000000
551706.87500000000      4827880.50000000000
550899.87500000000      4827872.50000000000
550096.81250000000      4827864.50000000000
549293.81250000000      4827857.50000000000
548486.81250000000      4827849.50000000000
547680.81250000000      4827842.50000000000
546868.81250000000      4827840.50000000000
546056.81250000000      4827839.50000000000
545247.81250000000      4827823.50000000000
544439.81250000000      4827808.50000000000
581547.93750000000      4827342.50000000000
579928.93750000000      4827326.50000000000
578311.93750000000      4827303.50000000000
576700.93750000000      4827288.50000000000
575097.87500000000      4827262.50000000000
573503.87500000000      4827255.50000000000
571901.87500000000      4827229.50000000000
570293.87500000000      4827212.50000000000
568683.87500000000      4827208.50000000000
567078.87500000000      4827184.50000000000
565470.87500000000      4827164.50000000000
563834.87500000000      4827155.50000000000
562230.87500000000      4827134.50000000000
560626.87500000000      4827118.50000000000
559019.87500000000      4827109.50000000000
557407.87500000000      4827100.50000000000
555792.87500000000      4827098.50000000000
554127.87500000000      4827090.50000000000
552523.81250000000      4827076.50000000000
550906.81250000000      4827065.50000000000
549302.81250000000      4827052.50000000000
547691.81250000000      4827037.50000000000
546074.81250000000      4827034.50000000000
581561.93750000000      4826547.50000000000
580752.87500000000      4826537.50000000000
579944.87500000000      4826527.50000000000
579135.87500000000      4826516.50000000000
578327.87500000000      4826506.50000000000
577520.87500000000      4826498.50000000000
576714.87500000000      4826490.50000000000
575915.87500000000      4826475.50000000000
575117.87500000000      4826460.50000000000
574316.87500000000      4826455.50000000000
573515.87500000000      4826450.50000000000
572714.87500000000      4826439.50000000000
571913.87500000000      4826429.50000000000
571107.87500000000      4826421.50000000000
570301.87500000000      4826413.50000000000
569500.87500000000      4826406.50000000000
568699.87500000000      4826400.50000000000
567897.87500000000      4826390.50000000000
567096.87500000000      4826381.50000000000
566295.87500000000      4826370.50000000000
565494.87500000000      4826359.50000000000
564673.87500000000      4826354.50000000000
563853.87500000000      4826350.50000000000
563044.87500000000      4826344.50000000000
562236.87500000000      4826339.50000000000
561429.87500000000      4826328.50000000000
560623.87500000000      4826317.50000000000
559824.87500000000      4826310.50000000000
559026.87500000000      4826303.50000000000
558217.87500000000      4826299.50000000000
557408.87500000000      4826295.50000000000
556601.87500000000      4826293.50000000000
555794.87500000000      4826291.50000000000
554966.81250000000      4826287.50000000000
554138.81250000000      4826284.50000000000
553335.81250000000      4826274.50000000000
552533.81250000000      4826265.50000000000
551723.81250000000      4826261.50000000000
550913.81250000000      4826258.50000000000
550112.81250000000      4826253.50000000000
549311.81250000000      4826248.50000000000
548506.81250000000      4826240.50000000000
547702.81250000000      4826232.50000000000
546897.81250000000      4826230.50000000000
546092.81250000000      4826229.50000000000
545271.81250000000      4826211.50000000000
544451.81250000000      4826193.50000000000
581563.87500000000      4825740.50000000000
579949.87500000000      4825722.50000000000
578340.87500000000      4825707.50000000000
576725.87500000000      4825683.50000000000
575118.87500000000      4825665.50000000000
573522.87500000000      4825647.50000000000
571918.87500000000      4825633.50000000000
570310.87500000000      4825621.50000000000
568704.87500000000      4825603.50000000000
567101.87500000000      4825596.50000000000
565496.87500000000      4825581.50000000000
563853.87500000000      4825546.50000000000
562244.87500000000      4825530.50000000000
560635.87500000000      4825522.50000000000
559024.87500000000      4825504.50000000000
557409.81250000000      4825499.50000000000
555792.81250000000      4825488.50000000000
554144.81250000000      4825480.50000000000
552537.81250000000      4825455.50000000000
549324.81250000000      4825451.50000000000
546093.81250000000      4825424.50000000000
547705.81250000000      4825420.50000000000
581566.87500000000      4824933.50000000000
580760.87500000000      4824925.50000000000
579954.87500000000      4824918.50000000000
579153.87500000000      4824913.50000000000
578353.87500000000      4824909.50000000000
577544.87500000000      4824892.50000000000
576736.87500000000      4824876.50000000000
575928.87500000000      4824873.50000000000
575120.87500000000      4824870.50000000000
574325.87500000000      4824857.50000000000
573530.87500000000      4824844.50000000000
572726.87500000000      4824840.50000000000
571923.87500000000      4824837.50000000000
571121.87500000000      4824833.50000000000
570319.87500000000      4824829.50000000000
569514.87500000000      4824818.50000000000
567106.87500000000      4824812.50000000000
567907.87500000000      4824809.50000000000
566302.87500000000      4824808.50000000000
568709.87500000000      4824807.50000000000
565499.87500000000      4824804.50000000000
564676.87500000000      4824773.50000000000
563854.87500000000      4824743.50000000000
563053.87500000000      4824732.50000000000
560648.87500000000      4824727.50000000000
561450.87500000000      4824724.50000000000
562252.87500000000      4824721.50000000000
559835.81250000000      4824716.50000000000
559023.81250000000      4824705.50000000000
557410.81250000000      4824704.50000000000
558216.81250000000      4824704.50000000000
556600.81250000000      4824694.50000000000
555791.81250000000      4824685.50000000000
554971.81250000000      4824681.50000000000
554151.81250000000      4824677.50000000000
553346.81250000000      4824661.50000000000
549337.81250000000      4824655.50000000000
552541.81250000000      4824645.50000000000
548522.81250000000      4824632.50000000000
546095.81250000000      4824619.50000000000
546901.81250000000      4824614.50000000000
547708.81250000000      4824609.50000000000
581576.87500000000      4824131.50000000000
579957.87500000000      4824114.50000000000
578352.87500000000      4824104.50000000000
576744.87500000000      4824073.50000000000
575129.87500000000      4824064.50000000000
573538.87500000000      4824041.50000000000
571927.87500000000      4824036.50000000000
570323.87500000000      4824023.50000000000
567100.87500000000      4824009.50000000000
568715.87500000000      4824005.50000000000
565496.81250000000      4823998.50000000000
563861.81250000000      4823935.50000000000
562256.81250000000      4823919.50000000000
560644.81250000000      4823918.50000000000
557409.81250000000      4823902.50000000000
559026.81250000000      4823899.50000000000
581587.87500000000      4823329.50000000000
580774.87500000000      4823319.50000000000
579961.87500000000      4823310.50000000000
579156.87500000000      4823305.50000000000
578351.87500000000      4823300.50000000000
577552.87500000000      4823285.50000000000
576753.87500000000      4823271.50000000000
575945.87500000000      4823265.50000000000
575138.87500000000      4823259.50000000000
574342.87500000000      4823249.50000000000
573546.81250000000      4823239.50000000000
572738.81250000000      4823237.50000000000
571931.81250000000      4823235.50000000000
571129.81250000000      4823226.50000000000
570328.81250000000      4823217.50000000000
569525.81250000000      4823210.50000000000
567095.81250000000      4823206.50000000000
567908.81250000000      4823204.50000000000
568722.81250000000      4823203.50000000000
566294.81250000000      4823199.50000000000
565494.81250000000      4823193.50000000000
564681.81250000000      4823160.50000000000
563869.81250000000      4823128.50000000000
563065.81250000000      4823122.50000000000
562261.81250000000      4823117.50000000000
561451.81250000000      4823113.50000000000
560641.81250000000      4823110.50000000000
559835.81250000000      4823102.50000000000
557408.81250000000      4823100.50000000000
558218.81250000000      4823097.50000000000
559029.81250000000      4823094.50000000000
581599.87500000000      4822531.50000000000
579966.81250000000      4822508.50000000000
578357.81250000000      4822497.50000000000
576757.81250000000      4822472.50000000000
575151.81250000000      4822458.50000000000
573555.81250000000      4822437.50000000000
571940.81250000000      4822435.50000000000
570333.81250000000      4822405.50000000000
567103.81250000000      4822399.50000000000
568721.81250000000      4822397.50000000000
565494.81250000000      4822384.50000000000
563871.81250000000      4822326.50000000000
562260.81250000000      4822314.50000000000
560641.81250000000      4822307.50000000000
557409.81250000000      4822292.50000000000
559029.81250000000      4822291.50000000000
581612.81250000000      4821734.50000000000
580792.81250000000      4821720.50000000000
579972.81250000000      4821707.50000000000
579167.81250000000      4821701.50000000000
578363.81250000000      4821695.50000000000
577562.81250000000      4821684.50000000000
576761.81250000000      4821674.50000000000
575962.81250000000      4821666.50000000000
575164.81250000000      4821658.50000000000
574364.81250000000      4821646.50000000000
571949.81250000000      4821636.50000000000
572756.81250000000      4821635.50000000000
573564.81250000000      4821635.50000000000
571143.81250000000      4821614.50000000000
567111.81250000000      4821593.50000000000
570338.81250000000      4821593.50000000000
567916.81250000000      4821592.50000000000
569529.81250000000      4821592.50000000000
568721.81250000000      4821591.50000000000
566303.81250000000      4821584.50000000000
565495.81250000000      4821575.50000000000
564684.81250000000      4821549.50000000000
563874.81250000000      4821524.50000000000
563067.81250000000      4821518.50000000000
562260.81250000000      4821512.50000000000
561451.81250000000      4821508.50000000000
560642.81250000000      4821505.50000000000
559835.81250000000      4821497.50000000000
559029.81250000000      4821489.50000000000
558219.81250000000      4821487.50000000000
557410.81250000000      4821485.50000000000
581628.81250000000      4820934.50000000000
579995.81250000000      4820910.50000000000
578376.81250000000      4820896.50000000000
576775.81250000000      4820870.50000000000
575176.81250000000      4820855.50000000000
573573.81250000000      4820831.50000000000
571955.81250000000      4820830.50000000000
570349.81250000000      4820789.50000000000
568733.81250000000      4820786.50000000000
567126.81250000000      4820784.50000000000
565506.81250000000      4820769.50000000000
563880.81250000000      4820718.50000000000
562265.81250000000      4820706.50000000000
560652.81250000000      4820695.50000000000
559031.81250000000      4820684.50000000000
557419.81250000000      4820678.50000000000
581644.81250000000      4820135.50000000000
580831.81250000000      4820124.50000000000
580018.81250000000      4820114.50000000000
579204.81250000000      4820105.50000000000
578390.81250000000      4820097.50000000000
577590.81250000000      4820082.50000000000
576790.81250000000      4820067.50000000000
575989.81250000000      4820059.50000000000
575188.81250000000      4820052.50000000000
574385.81250000000      4820040.50000000000
573583.81250000000      4820028.50000000000
572772.81250000000      4820026.50000000000
571962.81250000000      4820024.50000000000
571161.81250000000      4820004.50000000000
570360.81250000000      4819985.50000000000
569552.81250000000      4819983.50000000000
568745.81250000000      4819982.50000000000
567943.81250000000      4819979.50000000000
567142.81250000000      4819976.50000000000
566330.81250000000      4819970.50000000000
565518.81250000000      4819964.50000000000
564702.81250000000      4819938.50000000000
563887.81250000000      4819912.50000000000
563078.81250000000      4819906.50000000000
562270.81250000000      4819901.50000000000
561466.81250000000      4819893.50000000000
560662.81250000000      4819885.50000000000
559848.81250000000      4819882.50000000000
559034.75000000000      4819879.50000000000
558231.75000000000      4819875.50000000000
557428.75000000000      4819871.50000000000
556614.75000000000      4819859.50000000000
555801.75000000000      4819847.50000000000
581652.81250000000      4819334.50000000000
580028.81250000000      4819304.50000000000
578404.81250000000      4819290.50000000000
576798.81250000000      4819265.50000000000
575195.81250000000      4819242.50000000000
573587.81250000000      4819219.50000000000
571973.81250000000      4819218.50000000000
570368.81250000000      4819184.50000000000
568756.75000000000      4819178.50000000000
567145.75000000000      4819172.50000000000
565527.75000000000      4819153.50000000000
563890.75000000000      4819110.50000000000
562271.75000000000      4819099.50000000000
560666.75000000000      4819082.50000000000
559042.75000000000      4819075.50000000000
557432.75000000000      4819066.50000000000
555813.75000000000      4819045.50000000000
581660.81250000000      4818533.50000000000
580849.75000000000      4818514.50000000000
580039.75000000000      4818495.50000000000
579229.75000000000      4818489.50000000000
578419.75000000000      4818484.50000000000
577613.75000000000      4818474.50000000000
576807.75000000000      4818464.50000000000
576005.75000000000      4818448.50000000000
575203.75000000000      4818432.50000000000
574397.75000000000      4818421.50000000000
571985.75000000000      4818413.50000000000
572788.75000000000      4818412.50000000000
573592.75000000000      4818411.50000000000
571180.75000000000      4818398.50000000000
570376.75000000000      4818383.50000000000
569572.75000000000      4818378.50000000000
568768.75000000000      4818374.50000000000
567958.75000000000      4818371.50000000000
567149.75000000000      4818369.50000000000
566343.75000000000      4818356.50000000000
565537.75000000000      4818343.50000000000
564715.75000000000      4818326.50000000000
563893.75000000000      4818309.50000000000
563083.75000000000      4818303.50000000000
562273.75000000000      4818298.50000000000
561471.75000000000      4818289.50000000000
560670.75000000000      4818280.50000000000
559860.75000000000      4818276.50000000000
559050.75000000000      4818272.50000000000
558243.75000000000      4818267.50000000000
557437.75000000000      4818262.50000000000
556631.75000000000      4818253.50000000000
555825.75000000000      4818244.50000000000
581674.75000000000      4817720.50000000000
580064.75000000000      4817689.50000000000
578436.75000000000      4817674.50000000000
576822.75000000000      4817660.50000000000
575215.75000000000      4817639.50000000000
573597.75000000000      4817611.50000000000
571988.75000000000      4817608.50000000000
570382.75000000000      4817583.50000000000
568764.75000000000      4817572.50000000000
567151.75000000000      4817561.50000000000
565541.75000000000      4817533.50000000000
563902.75000000000      4817508.50000000000
562285.75000000000      4817496.50000000000
560678.75000000000      4817479.50000000000
559056.75000000000      4817467.50000000000
557445.75000000000      4817453.50000000000
555831.75000000000      4817436.50000000000
581689.75000000000      4816907.50000000000
580089.75000000000      4816884.50000000000
579271.75000000000      4816874.50000000000
578453.75000000000      4816864.50000000000
577645.75000000000      4816860.50000000000
576838.75000000000      4816856.50000000000
575228.75000000000      4816846.50000000000
570389.75000000000      4816784.50000000000
565545.75000000000      4816724.50000000000
563911.75000000000      4816707.50000000000
562297.75000000000      4816695.50000000000
560687.75000000000      4816678.50000000000
559875.75000000000      4816670.50000000000
559063.75000000000      4816662.50000000000
557453.75000000000      4816645.50000000000
556645.75000000000      4816637.50000000000
555838.75000000000      4816629.50000000000



From Wayne.W.Jones at shell.com  Thu Jan 29 16:09:09 2009
From: Wayne.W.Jones at shell.com (Wayne.W.Jones at shell.com)
Date: Thu, 29 Jan 2009 16:09:09 +0100
Subject: [R-sig-Geo] Neighborhood distance calculator
In-Reply-To: <d5081b140901290630k55eeef9bs387e3fdc43156a50@mail.gmail.com>
Message-ID: <8E3590214E4380489D2F8BF129B939F329D63D@amsdc1-s-03371.europe.shell.com>


Hi Kumudan, 

Calculating pairwise distances increases with the square of the number of data points!

Have you thought about calculating the neighbourhood of points using dealuney triangulation?

For example: 

library(tripack)
x<-rnorm(100); 
y=rnorm(100)
tritest.tr<-tri.mesh(x,y)
plot(tritest.tr)
neighbours(tritest.tr)




-----Original Message-----
From: r-sig-geo-bounces at stat.math.ethz.ch
[mailto:r-sig-geo-bounces at stat.math.ethz.ch]On Behalf Of Kumudan
Sent: 29 January 2009 14:30
To: r-sig-geo at stat.math.ethz.ch
Subject: [R-sig-Geo] Neighborhood distance calculator


Hi all,

I am new to R, hence this question. I have a set of points with X and
Y coordinates. I would like to build an R code to calculate the
distances of points within a specified neighborhood (circular range)
for each point. I would like the code to be a function, so that I can
call the function, specifying parameters (data file, distance), from
another piece of code. Also, I would like the output to be as:

output = list(array)
.........code...........
........new code.....
return(output)

Something like this--
[[1496]]
[1] 1490 1491 1492 1493 1494 1495

The most important thing, however, is that I want to run the code for
100,000+ points. The current code I have calculates the neighborhood
distances for all the points with ever point, and then selects only
those points within the specified distance parameter. This code
crashes when I have over 40,000 points. Therefore, I need to figure
out a way to preclude the step where it calculates all of the paired
distances, and rather only those points within the specified distance
parameter. Please, see below for the existing code, and a sample data.
Thanks a lot for your time and effort.

Best,
Kumudan

Kumudan Grubh
EEB Graduate student
Iowa State University

-------------------------------------------------------------------------------------------------------------------------------------------------------
#--Code--
#transform coordinates in kilometers, and redefine origin
newx=(XCOORD-min(XCOORD))/1000
newy=(YCOORD-min(YCOORD))/1000
plot(newx,newy,pch=20,xlab="X coordinate (km)",ylab="Y coordinate (km)")

#set of new locations to be used from here on
tr.locs=cbind(newx,newy)

#the functions necessary for estimation are written in an external
program. All you need to do is to run this program one. To do this,
you could "source" this code
source("D:/...../Functions_distance.R")

#define distance-based neighborhood
nb.tr=dist.neighbors(tr.locs,2)
----------------------------------------------------------------------------------------------------------------------------------------------------------
#---Function_distance.R   <- Function to calculate distance of pairs
of neighbors
#start by defining neighbors
library(spatstat)#need this to compute distances between all points in a data

dist.neighbors=function(data,distance)
#distance is set by user
{
#data has the x and y on the first two columns. Could have more than
two columns, or exactly two columns, it doesn't matter.
#produces a "list" object with a vector of the neighbors for each location
#distance defines the range within which we define neighbors
nd=length(data[,1])
nbmat=list(array)
dist=pairdist(data[,1:2])
 for(i in 1:nd){
 nbmat[[i]]=0
       for(j in 1:nd) if((dist[i,j]<distance)&(i!=j)) nbmat[[i]]=c(nbmat[[i]],j)
       nbmat[[i]]=nbmat[[i]][nbmat[[i]]!=0]}
return(nbmat)
}
------------------------------------------------------------------------------------------------------------------------------------

Data
-----------------------------------------------------------------------------------
XCOORD  YCOORD
544312.87500000000      4851169.00000000000
542705.87500000000      4851165.00000000000
541068.87500000000      4851155.00000000000
537861.81250000000      4851123.00000000000
536246.81250000000      4851118.00000000000
539476.87500000000      4851116.00000000000
534612.81250000000      4851113.00000000000
533004.75000000000      4851095.00000000000
542714.87500000000      4850363.00000000000
543516.87500000000      4850360.00000000000
544319.93750000000      4850358.00000000000
541883.87500000000      4850353.00000000000
541053.87500000000      4850342.50000000000
540268.87500000000      4850326.50000000000
537866.81250000000      4850313.50000000000
538674.87500000000      4850311.50000000000
539483.87500000000      4850310.50000000000
537060.81250000000      4850310.00000000000
536255.81250000000      4850307.00000000000
535434.81250000000      4850306.00000000000
534614.81250000000      4850305.00000000000
533809.81250000000      4850297.00000000000
533004.81250000000      4850289.00000000000
542716.87500000000      4849553.50000000000
541074.87500000000      4849537.50000000000
539486.87500000000      4849508.50000000000
537867.87500000000      4849507.50000000000
536260.81250000000      4849503.50000000000
534622.81250000000      4849498.50000000000
533009.81250000000      4849483.00000000000
542718.93750000000      4848744.50000000000
543524.93750000000      4848743.50000000000
544331.93750000000      4848743.50000000000
541906.87500000000      4848738.50000000000
541095.87500000000      4848733.50000000000
540292.87500000000      4848720.50000000000
539489.87500000000      4848707.50000000000
538679.87500000000      4848704.50000000000
537869.87500000000      4848702.50000000000
536265.81250000000      4848701.50000000000
537067.87500000000      4848701.50000000000
535447.81250000000      4848697.50000000000
534630.81250000000      4848693.50000000000
533822.81250000000      4848684.50000000000
533014.81250000000      4848676.50000000000
532211.81250000000      4848663.50000000000
531409.81250000000      4848650.50000000000
542724.93750000000      4847938.50000000000
541102.87500000000      4847926.50000000000
539492.87500000000      4847906.50000000000
537874.87500000000      4847896.50000000000
536267.87500000000      4847894.50000000000
534634.81250000000      4847882.50000000000
533016.81250000000      4847869.50000000000
531414.81250000000      4847840.50000000000
544345.93750000000      4847135.50000000000
543538.93750000000      4847133.50000000000
542731.93750000000      4847132.50000000000
541920.93750000000      4847125.50000000000
541109.93750000000      4847119.50000000000
540302.87500000000      4847112.50000000000
539496.87500000000      4847105.50000000000
538688.87500000000      4847097.50000000000
537880.87500000000      4847090.50000000000
537075.87500000000      4847088.50000000000
536270.87500000000      4847087.50000000000
535454.87500000000      4847079.50000000000
534639.87500000000      4847071.50000000000
533829.81250000000      4847067.50000000000
533019.81250000000      4847063.50000000000
532219.81250000000      4847047.50000000000
531420.81250000000      4847031.50000000000
544350.93750000000      4846325.50000000000
542735.93750000000      4846319.50000000000
541112.93750000000      4846307.50000000000
539497.87500000000      4846294.50000000000
537882.87500000000      4846282.50000000000
536267.87500000000      4846277.50000000000
534638.87500000000      4846263.50000000000
533022.81250000000      4846253.50000000000
531424.81250000000      4846221.50000000000
544356.93750000000      4845516.50000000000
543547.93750000000      4845511.50000000000
542739.93750000000      4845507.50000000000
541927.93750000000      4845501.50000000000
541115.93750000000      4845495.50000000000
540307.93750000000      4845489.50000000000
539499.93750000000      4845483.50000000000
538692.93750000000      4845478.50000000000
537885.87500000000      4845474.50000000000
537075.87500000000      4845471.50000000000
536265.87500000000      4845468.50000000000
535451.87500000000      4845462.50000000000
534638.87500000000      4845456.50000000000
533831.87500000000      4845449.50000000000
533025.87500000000      4845443.50000000000
532226.81250000000      4845427.50000000000
531428.81250000000      4845412.50000000000
530621.81250000000      4845407.50000000000
529814.81250000000      4845402.50000000000
544356.93750000000      4844711.50000000000
542738.93750000000      4844704.50000000000
541123.93750000000      4844689.50000000000
539506.93750000000      4844675.50000000000
537893.93750000000      4844664.50000000000
536284.87500000000      4844654.50000000000
534641.87500000000      4844646.50000000000
533027.87500000000      4844634.50000000000
531423.87500000000      4844606.50000000000
529812.81250000000      4844600.50000000000
544357.93750000000      4843907.50000000000
543547.93750000000      4843904.50000000000
542737.93750000000      4843901.50000000000
541934.93750000000      4843892.50000000000
541132.93750000000      4843883.50000000000
540323.93750000000      4843875.50000000000
539514.93750000000      4843868.50000000000
538708.93750000000      4843861.50000000000
537902.93750000000      4843854.50000000000
537102.87500000000      4843847.50000000000
536303.87500000000      4843841.50000000000
535473.87500000000      4843838.50000000000
534644.87500000000      4843836.50000000000
533837.87500000000      4843830.50000000000
533030.87500000000      4843825.50000000000
532224.87500000000      4843813.50000000000
531419.87500000000      4843801.50000000000
530615.81250000000      4843800.50000000000
529811.81250000000      4843799.50000000000
544356.93750000000      4843106.50000000000
542737.93750000000      4843094.50000000000
541133.93750000000      4843075.50000000000
539515.93750000000      4843065.50000000000
537906.87500000000      4843047.50000000000
536303.87500000000      4843031.50000000000
534654.87500000000      4843025.50000000000
533033.87500000000      4843015.50000000000
531419.81250000000      4842993.50000000000
529808.81250000000      4842989.50000000000
544356.93750000000      4842305.50000000000
543547.93750000000      4842296.50000000000
542738.93750000000      4842287.50000000000
541936.93750000000      4842277.50000000000
541134.93750000000      4842268.50000000000
540325.93750000000      4842265.50000000000
539516.93750000000      4842262.50000000000
538713.87500000000      4842251.50000000000
537911.87500000000      4842240.50000000000
537107.87500000000      4842231.50000000000
536304.87500000000      4842222.50000000000
535484.87500000000      4842218.50000000000
534664.87500000000      4842214.50000000000
533850.87500000000      4842210.50000000000
533037.87500000000      4842206.50000000000
532228.81250000000      4842195.50000000000
531419.81250000000      4842185.50000000000
530612.81250000000      4842182.50000000000
529806.81250000000      4842179.50000000000
544356.93750000000      4841500.50000000000
542738.93750000000      4841483.50000000000
541132.93750000000      4841463.50000000000
539520.93750000000      4841454.50000000000
537913.87500000000      4841433.50000000000
536304.87500000000      4841418.50000000000
534667.87500000000      4841408.50000000000
533040.81250000000      4841393.50000000000
531425.81250000000      4841373.50000000000
529811.81250000000      4841367.50000000000
544356.93750000000      4840695.50000000000
543547.93750000000      4840687.50000000000
542739.93750000000      4840680.50000000000
541934.93750000000      4840669.50000000000
541130.93750000000      4840658.50000000000
540327.93750000000      4840652.50000000000
539525.87500000000      4840647.50000000000
538720.87500000000      4840637.50000000000
537915.87500000000      4840627.50000000000
537109.87500000000      4840621.50000000000
536304.87500000000      4840615.50000000000
535487.87500000000      4840609.50000000000
534670.87500000000      4840603.50000000000
533856.81250000000      4840591.50000000000
533043.81250000000      4840580.50000000000
532237.81250000000      4840571.50000000000
531431.81250000000      4840562.50000000000
530624.81250000000      4840559.50000000000
529817.81250000000      4840556.50000000000
544357.93750000000      4839892.50000000000
542743.93750000000      4839876.50000000000
541131.93750000000      4839852.50000000000
539528.87500000000      4839840.50000000000
537916.87500000000      4839821.50000000000
536303.87500000000      4839804.50000000000
534672.81250000000      4839794.50000000000
533050.81250000000      4839778.50000000000
531440.81250000000      4839759.50000000000
529825.81250000000      4839749.50000000000
544358.93750000000      4839089.50000000000
543552.93750000000      4839080.50000000000
542747.93750000000      4839072.50000000000
541940.87500000000      4839059.50000000000
541133.87500000000      4839046.50000000000
540332.87500000000      4839040.50000000000
539531.87500000000      4839034.50000000000
538724.87500000000      4839024.50000000000
537918.87500000000      4839015.50000000000
537110.87500000000      4839004.50000000000
536303.87500000000      4838994.50000000000
535489.81250000000      4838990.50000000000
534675.81250000000      4838986.50000000000
533866.81250000000      4838981.50000000000
533057.81250000000      4838976.50000000000
532253.81250000000      4838966.50000000000
531450.81250000000      4838957.50000000000
530642.81250000000      4838949.50000000000
529834.81250000000      4838942.50000000000
544359.93750000000      4838278.50000000000
542747.87500000000      4838263.50000000000
541137.87500000000      4838242.50000000000
539534.87500000000      4838228.50000000000
537918.87500000000      4838210.50000000000
536303.87500000000      4838187.50000000000
534680.81250000000      4838174.50000000000
533064.81250000000      4838165.50000000000
531457.81250000000      4838148.50000000000
529837.75000000000      4838137.50000000000
544360.93750000000      4837467.50000000000
543553.87500000000      4837460.50000000000
542747.87500000000      4837454.50000000000
541944.87500000000      4837446.50000000000
541142.87500000000      4837438.50000000000
540339.87500000000      4837430.50000000000
539537.87500000000      4837422.50000000000
538728.87500000000      4837413.50000000000
537919.87500000000      4837405.50000000000
537111.87500000000      4837392.50000000000
536303.81250000000      4837380.50000000000
535494.81250000000      4837371.50000000000
534685.81250000000      4837362.50000000000
533878.81250000000      4837358.50000000000
533071.81250000000      4837354.50000000000
532268.81250000000      4837347.50000000000
531465.81250000000      4837340.50000000000
530653.75000000000      4837336.50000000000
529841.75000000000      4837333.50000000000
544362.87500000000      4836662.50000000000
542744.87500000000      4836643.50000000000
541137.87500000000      4836632.50000000000
539532.87500000000      4836618.50000000000
537914.87500000000      4836595.50000000000
536301.81250000000      4836574.50000000000
534692.81250000000      4836553.50000000000
533075.81250000000      4836547.50000000000
531468.75000000000      4836535.50000000000
544365.87500000000      4835857.50000000000
544365.87500000000      4835857.50000000000
543553.87500000000      4835845.50000000000
542742.87500000000      4835833.50000000000
541937.87500000000      4835830.50000000000
541133.87500000000      4835827.50000000000
540330.87500000000      4835821.50000000000
539528.87500000000      4835815.50000000000
538718.87500000000      4835800.50000000000
537909.81250000000      4835785.50000000000
537104.81250000000      4835777.50000000000
536300.81250000000      4835769.50000000000
535499.81250000000      4835756.50000000000
534699.81250000000      4835744.50000000000
533889.81250000000      4835742.50000000000
533080.81250000000      4835740.50000000000
532275.75000000000      4835735.50000000000
531471.75000000000      4835731.50000000000
544370.87500000000      4835052.50000000000
542750.87500000000      4835025.50000000000
541144.87500000000      4835014.50000000000
539538.87500000000      4835004.50000000000
537922.81250000000      4834987.50000000000
536315.81250000000      4834974.50000000000
544376.87500000000      4834248.50000000000
543567.87500000000      4834232.50000000000
542759.87500000000      4834217.50000000000
541957.87500000000      4834209.50000000000
541156.87500000000      4834201.50000000000
540352.87500000000      4834197.50000000000
539549.87500000000      4834193.50000000000
538742.81250000000      4834191.50000000000
537936.81250000000      4834190.50000000000
537133.81250000000      4834185.50000000000
536331.81250000000      4834180.50000000000
544384.87500000000      4833445.50000000000
542774.87500000000      4833414.50000000000
541167.87500000000      4833395.50000000000
539561.81250000000      4833387.50000000000
537946.81250000000      4833385.50000000000
544392.87500000000      4832643.50000000000
543590.87500000000      4832627.50000000000
542789.87500000000      4832612.50000000000
541984.87500000000      4832600.50000000000
541179.87500000000      4832589.50000000000
540376.81250000000      4832585.50000000000
539573.81250000000      4832581.50000000000
537957.81250000000      4832580.50000000000
538765.81250000000      4832580.50000000000
544401.87500000000      4831836.50000000000
542796.87500000000      4831805.50000000000
544410.87500000000      4831029.50000000000
543607.81250000000      4831014.50000000000
542804.81250000000      4830999.50000000000
544426.81250000000      4829417.50000000000
544432.81250000000      4828612.50000000000
544439.81250000000      4827808.50000000000
544445.81250000000      4827000.50000000000
544451.81250000000      4826193.50000000000
581262.12500000000      4851357.00000000000
579658.12500000000      4851338.00000000000
574847.12500000000      4851324.00000000000
576447.12500000000      4851320.00000000000
573257.12500000000      4851317.00000000000
578046.12500000000      4851312.00000000000
570057.12500000000      4851309.00000000000
571656.12500000000      4851308.00000000000
568458.12500000000      4851294.00000000000
566851.12500000000      4851277.00000000000
565256.06250000000      4851271.00000000000
563617.06250000000      4851230.00000000000
555586.00000000000      4851224.00000000000
560412.06250000000      4851220.00000000000
562020.06250000000      4851220.00000000000
547498.93750000000      4851208.00000000000
558822.06250000000      4851206.00000000000
557185.06250000000      4851198.00000000000
553966.00000000000      4851194.00000000000
552367.00000000000      4851191.00000000000
550727.00000000000      4851184.00000000000
549115.93750000000      4851169.00000000000
545907.93750000000      4851158.00000000000
581275.12500000000      4850554.00000000000
582081.18750000000      4850551.00000000000
580473.12500000000      4850543.50000000000
579671.12500000000      4850534.00000000000
578866.12500000000      4850522.00000000000
574862.12500000000      4850519.00000000000
573268.12500000000      4850518.00000000000
574065.12500000000      4850518.00000000000
572473.12500000000      4850516.00000000000
575664.12500000000      4850516.00000000000
571679.12500000000      4850515.00000000000
570877.12500000000      4850513.00000000000
576466.12500000000      4850513.00000000000
570075.12500000000      4850512.00000000000
577263.12500000000      4850512.00000000000
578061.12500000000      4850511.00000000000
569274.12500000000      4850500.00000000000
565267.12500000000      4850489.00000000000
568473.12500000000      4850489.00000000000
566067.12500000000      4850485.00000000000
567670.12500000000      4850485.00000000000
566867.12500000000      4850482.00000000000
564447.06250000000      4850470.00000000000
563627.06250000000      4850451.00000000000
562825.06250000000      4850442.00000000000
562023.06250000000      4850434.00000000000
561219.06250000000      4850433.00000000000
560415.06250000000      4850432.00000000000
559616.06250000000      4850417.00000000000
555585.00000000000      4850415.00000000000
556381.06250000000      4850404.00000000000
558817.06250000000      4850403.00000000000
547497.93750000000      4850402.00000000000
554779.00000000000      4850399.00000000000
557997.06250000000      4850398.00000000000
557178.06250000000      4850394.00000000000
553974.00000000000      4850383.00000000000
548305.93750000000      4850382.00000000000
546706.93750000000      4850380.00000000000
553167.00000000000      4850379.00000000000
552361.00000000000      4850375.00000000000
551542.00000000000      4850371.00000000000
550723.00000000000      4850367.00000000000
549917.93750000000      4850365.00000000000
549113.93750000000      4850363.00000000000
544319.93750000000      4850358.00000000000
545117.93750000000      4850358.00000000000
545916.93750000000      4850358.00000000000
581285.18750000000      4849747.50000000000
579682.12500000000      4849730.50000000000
578075.12500000000      4849716.00000000000
571683.12500000000      4849713.00000000000
573270.12500000000      4849713.00000000000
574880.12500000000      4849712.00000000000
576482.12500000000      4849710.00000000000
570082.12500000000      4849703.00000000000
568476.12500000000      4849680.00000000000
566869.12500000000      4849678.00000000000
565265.12500000000      4849670.00000000000
563624.06250000000      4849641.00000000000
562014.06250000000      4849631.00000000000
560419.06250000000      4849626.00000000000
555591.00000000000      4849603.00000000000
558813.06250000000      4849600.00000000000
557189.06250000000      4849591.00000000000
547512.93750000000      4849587.00000000000
553980.00000000000      4849572.00000000000
552379.00000000000      4849566.00000000000
549146.93750000000      4849562.00000000000
550747.00000000000      4849559.00000000000
544325.93750000000      4849551.00000000000
545921.93750000000      4849547.00000000000
582098.18750000000      4848945.50000000000
581296.18750000000      4848941.50000000000
580495.18750000000      4848934.50000000000
579694.12500000000      4848927.50000000000
578891.12500000000      4848924.50000000000
578089.12500000000      4848921.50000000000
577294.12500000000      4848915.00000000000
571688.12500000000      4848912.00000000000
572480.12500000000      4848910.00000000000
573273.12500000000      4848908.00000000000
576499.12500000000      4848908.00000000000
574085.12500000000      4848907.00000000000
575698.12500000000      4848907.00000000000
574898.12500000000      4848906.00000000000
570888.12500000000      4848903.00000000000
570089.12500000000      4848895.00000000000
569284.12500000000      4848883.00000000000
566872.12500000000      4848875.00000000000
567675.12500000000      4848873.00000000000
568479.12500000000      4848872.00000000000
566067.12500000000      4848863.00000000000
565263.12500000000      4848851.00000000000
564442.12500000000      4848841.00000000000
563621.06250000000      4848832.00000000000
562813.06250000000      4848830.00000000000
562006.06250000000      4848829.00000000000
561214.06250000000      4848825.00000000000
560423.06250000000      4848821.00000000000
559616.06250000000      4848809.00000000000
558810.06250000000      4848798.00000000000
558005.06250000000      4848793.00000000000
555597.06250000000      4848792.00000000000
556399.06250000000      4848790.00000000000
557201.06250000000      4848789.00000000000
554791.00000000000      4848777.00000000000
547527.93750000000      4848773.00000000000
548353.93750000000      4848767.00000000000
549181.00000000000      4848762.00000000000
553986.00000000000      4848762.00000000000
553192.00000000000      4848760.00000000000
552398.00000000000      4848758.00000000000
549976.00000000000      4848757.00000000000
546727.93750000000      4848755.00000000000
551584.00000000000      4848755.00000000000
550771.00000000000      4848752.00000000000
544331.93750000000      4848743.50000000000
545129.93750000000      4848739.50000000000
545927.93750000000      4848736.50000000000
581304.18750000000      4848141.50000000000
579704.18750000000      4848128.50000000000
578099.12500000000      4848122.50000000000
576514.12500000000      4848111.50000000000
571691.12500000000      4848109.00000000000
574905.12500000000      4848106.00000000000
573278.12500000000      4848105.00000000000
570091.12500000000      4848091.00000000000
568484.12500000000      4848071.00000000000
566875.12500000000      4848065.00000000000
565260.12500000000      4848050.00000000000
563618.12500000000      4848033.00000000000
562005.06250000000      4848027.00000000000
560415.06250000000      4848025.00000000000
558817.06250000000      4847990.00000000000
555600.06250000000      4847988.00000000000
557207.06250000000      4847985.00000000000
547538.93750000000      4847963.50000000000
553994.00000000000      4847960.00000000000
549177.00000000000      4847951.00000000000
552398.00000000000      4847951.00000000000
550783.00000000000      4847949.00000000000
544338.93750000000      4847939.50000000000
545939.93750000000      4847935.50000000000
582117.18750000000      4847351.50000000000
581312.18750000000      4847341.50000000000
580513.18750000000      4847335.50000000000
579715.18750000000      4847330.50000000000
578912.18750000000      4847327.50000000000
578109.12500000000      4847324.50000000000
577319.12500000000      4847320.50000000000
576530.12500000000      4847316.50000000000
575721.12500000000      4847311.50000000000
574913.12500000000      4847306.50000000000
571694.12500000000      4847306.00000000000
572488.12500000000      4847304.00000000000
574098.12500000000      4847304.00000000000
573283.12500000000      4847302.00000000000
570893.12500000000      4847297.00000000000
570093.12500000000      4847288.00000000000
569291.12500000000      4847279.00000000000
568490.12500000000      4847271.00000000000
567684.12500000000      4847263.00000000000
566878.12500000000      4847255.00000000000
566068.12500000000      4847252.00000000000
565258.12500000000      4847250.00000000000
564436.12500000000      4847242.00000000000
563615.12500000000      4847234.00000000000
560408.06250000000      4847230.00000000000
562809.12500000000      4847229.00000000000
561206.06250000000      4847227.00000000000
562004.06250000000      4847225.00000000000
559616.06250000000      4847206.00000000000
555604.06250000000      4847184.00000000000
556409.06250000000      4847183.00000000000
558824.06250000000      4847183.00000000000
557214.06250000000      4847182.00000000000
558019.06250000000      4847182.00000000000
554803.06250000000      4847171.00000000000
554002.00000000000      4847158.00000000000
547551.00000000000      4847154.50000000000
553200.00000000000      4847151.00000000000
548362.00000000000      4847147.50000000000
550795.00000000000      4847146.00000000000
551596.00000000000      4847145.00000000000
552398.00000000000      4847145.00000000000
546751.93750000000      4847144.50000000000
549984.00000000000      4847142.50000000000
549173.00000000000      4847140.50000000000
544345.93750000000      4847135.50000000000
545148.93750000000      4847134.50000000000
545952.93750000000      4847134.50000000000
581323.18750000000      4846533.50000000000
579715.18750000000      4846521.50000000000
578112.18750000000      4846514.50000000000
576527.12500000000      4846510.50000000000
571699.12500000000      4846503.00000000000
574912.12500000000      4846502.50000000000
573294.12500000000      4846494.50000000000
570096.12500000000      4846484.00000000000
568496.12500000000      4846467.00000000000
566875.12500000000      4846448.00000000000
565251.12500000000      4846440.00000000000
563618.12500000000      4846427.00000000000
562012.06250000000      4846418.00000000000
560412.06250000000      4846401.00000000000
558834.06250000000      4846375.00000000000
557234.06250000000      4846372.00000000000
555632.06250000000      4846365.00000000000
554011.06250000000      4846350.00000000000
547566.00000000000      4846343.50000000000
552409.00000000000      4846342.00000000000
550802.00000000000      4846334.50000000000
549183.00000000000      4846333.50000000000
545957.93750000000      4846332.50000000000
582140.18750000000      4845730.50000000000
581335.18750000000      4845725.50000000000
580525.18750000000      4845719.50000000000
579716.18750000000      4845713.50000000000
578916.18750000000      4845708.50000000000
576525.12500000000      4845705.50000000000
577320.18750000000      4845704.50000000000
578116.18750000000      4845704.50000000000
575718.12500000000      4845701.50000000000
571704.12500000000      4845699.50000000000
574912.12500000000      4845698.50000000000
572504.12500000000      4845693.50000000000
574108.12500000000      4845692.50000000000
570901.12500000000      4845689.50000000000
573305.12500000000      4845687.50000000000
570099.12500000000      4845681.00000000000
569300.12500000000      4845672.00000000000
568502.12500000000      4845664.00000000000
567687.12500000000      4845653.00000000000
566873.12500000000      4845642.00000000000
566059.12500000000      4845636.00000000000
565245.12500000000      4845630.00000000000
564433.12500000000      4845625.00000000000
563622.12500000000      4845621.00000000000
562821.12500000000      4845616.00000000000
562021.12500000000      4845611.00000000000
561218.06250000000      4845591.00000000000
560416.06250000000      4845572.00000000000
559630.06250000000      4845569.00000000000
558844.06250000000      4845567.00000000000
558049.06250000000      4845564.00000000000
557255.06250000000      4845562.00000000000
556457.06250000000      4845554.00000000000
555660.06250000000      4845547.00000000000
554840.06250000000      4845544.00000000000
554021.06250000000      4845541.50000000000
553221.00000000000      4845539.50000000000
552421.00000000000      4845538.50000000000
547582.00000000000      4845532.50000000000
546773.00000000000      4845531.50000000000
551615.00000000000      4845531.50000000000
545964.00000000000      4845530.50000000000
548388.00000000000      4845529.50000000000
549194.00000000000      4845527.50000000000
550001.00000000000      4845525.50000000000
550809.00000000000      4845524.50000000000
545159.93750000000      4845523.50000000000
544356.93750000000      4845516.50000000000
581346.18750000000      4844925.50000000000
576526.18750000000      4844915.50000000000
579720.18750000000      4844914.50000000000
578115.18750000000      4844909.50000000000
574928.12500000000      4844898.50000000000
571709.12500000000      4844888.50000000000
573319.12500000000      4844886.50000000000
570102.12500000000      4844857.50000000000
568503.12500000000      4844856.50000000000
566896.12500000000      4844830.00000000000
562012.12500000000      4844826.00000000000
565276.12500000000      4844819.00000000000
563629.12500000000      4844816.00000000000
560396.06250000000      4844803.00000000000
558820.06250000000      4844781.00000000000
557234.06250000000      4844754.00000000000
555650.06250000000      4844752.50000000000
554026.06250000000      4844749.50000000000
545963.00000000000      4844748.50000000000
552433.00000000000      4844746.50000000000
547587.00000000000      4844733.50000000000
549203.00000000000      4844717.50000000000
550818.00000000000      4844702.50000000000
582163.18750000000      4844137.50000000000
576528.12500000000      4844126.50000000000
581357.18750000000      4844125.50000000000
577321.18750000000      4844120.50000000000
580540.18750000000      4844120.50000000000
578115.18750000000      4844115.50000000000
578919.18750000000      4844115.50000000000
579724.18750000000      4844115.50000000000
575736.12500000000      4844112.50000000000
574945.12500000000      4844099.50000000000
574139.12500000000      4844092.50000000000
573333.12500000000      4844086.50000000000
572523.12500000000      4844082.50000000000
571714.12500000000      4844078.50000000000
570910.12500000000      4844056.50000000000
568504.12500000000      4844049.50000000000
569305.12500000000      4844042.50000000000
562003.12500000000      4844041.00000000000
561189.06250000000      4844038.00000000000
570106.12500000000      4844035.50000000000
560376.06250000000      4844035.00000000000
567712.12500000000      4844033.50000000000
562820.12500000000      4844026.00000000000
566920.12500000000      4844018.50000000000
559586.06250000000      4844015.00000000000
566114.12500000000      4844013.00000000000
563637.12500000000      4844012.00000000000
564472.12500000000      4844010.00000000000
565308.12500000000      4844008.00000000000
558796.06250000000      4843996.00000000000
558004.06250000000      4843971.00000000000
545962.00000000000      4843967.50000000000
555640.06250000000      4843958.50000000000
554032.06250000000      4843957.50000000000
554836.06250000000      4843957.50000000000
553239.06250000000      4843955.50000000000
552446.00000000000      4843954.50000000000
556426.06250000000      4843952.50000000000
546777.00000000000      4843950.50000000000
557213.06250000000      4843946.50000000000
545160.00000000000      4843937.50000000000
547592.00000000000      4843934.50000000000
548402.00000000000      4843921.50000000000
551636.00000000000      4843917.50000000000
549213.00000000000      4843908.50000000000
544357.93750000000      4843907.50000000000
550020.00000000000      4843894.50000000000
550827.00000000000      4843881.50000000000
581372.18750000000      4843321.50000000000
576554.12500000000      4843318.50000000000
578144.12500000000      4843307.50000000000
579753.12500000000      4843307.50000000000
574958.12500000000      4843303.50000000000
573341.12500000000      4843282.50000000000
571723.12500000000      4843267.50000000000
568510.12500000000      4843239.50000000000
562005.06250000000      4843235.00000000000
570114.12500000000      4843231.50000000000
560386.06250000000      4843228.00000000000
566916.12500000000      4843211.50000000000
563643.06250000000      4843210.00000000000
565305.12500000000      4843205.00000000000
558784.06250000000      4843194.00000000000
545978.00000000000      4843161.50000000000
555639.06250000000      4843157.50000000000
552444.00000000000      4843149.50000000000
554037.00000000000      4843147.50000000000
557208.06250000000      4843137.50000000000
547616.00000000000      4843134.50000000000
549224.00000000000      4843111.50000000000
550848.00000000000      4843084.50000000000
581387.12500000000      4842517.50000000000
576581.12500000000      4842511.50000000000
575776.12500000000      4842509.50000000000
574971.12500000000      4842508.50000000000
580584.12500000000      4842508.50000000000
577377.12500000000      4842505.50000000000
579782.12500000000      4842500.50000000000
578174.12500000000      4842499.50000000000
578978.12500000000      4842499.50000000000
574160.12500000000      4842493.50000000000
573349.12500000000      4842479.50000000000
572540.12500000000      4842468.50000000000
571732.12500000000      4842457.50000000000
570927.12500000000      4842442.50000000000
568516.12500000000      4842430.50000000000
562007.06250000000      4842430.00000000000
569319.12500000000      4842429.50000000000
570122.12500000000      4842428.50000000000
561202.06250000000      4842425.00000000000
560397.06250000000      4842421.00000000000
562828.06250000000      4842419.00000000000
567714.12500000000      4842417.50000000000
563649.06250000000      4842408.00000000000
559584.06250000000      4842407.00000000000
564476.06250000000      4842405.00000000000
566913.06250000000      4842404.50000000000
566108.06250000000      4842403.50000000000
565303.06250000000      4842402.50000000000
558772.06250000000      4842393.00000000000
557987.06250000000      4842360.50000000000
555639.06250000000      4842356.50000000000
545993.93750000000      4842355.50000000000
554841.00000000000      4842347.50000000000
552442.00000000000      4842345.50000000000
546817.00000000000      4842344.50000000000
556421.06250000000      4842342.50000000000
553242.00000000000      4842341.50000000000
554043.00000000000      4842338.50000000000
547641.00000000000      4842334.50000000000
545174.93750000000      4842330.50000000000
557203.06250000000      4842329.50000000000
548438.00000000000      4842324.50000000000
551655.00000000000      4842316.50000000000
549235.00000000000      4842315.50000000000
544356.93750000000      4842305.50000000000
550052.00000000000      4842301.50000000000
550869.00000000000      4842287.50000000000
581398.12500000000      4841720.50000000000
576589.12500000000      4841709.50000000000
579794.12500000000      4841702.50000000000
574973.12500000000      4841701.50000000000
578196.12500000000      4841697.50000000000
573357.12500000000      4841672.50000000000
571748.12500000000      4841652.50000000000
568517.06250000000      4841624.50000000000
570131.06250000000      4841624.50000000000
562021.06250000000      4841618.00000000000
560402.06250000000      4841610.00000000000
563673.06250000000      4841604.00000000000
566917.06250000000      4841595.50000000000
565297.06250000000      4841593.50000000000
558787.06250000000      4841588.00000000000
555644.00000000000      4841557.50000000000
554047.00000000000      4841548.50000000000
546000.93750000000      4841545.50000000000
552442.00000000000      4841544.50000000000
557225.06250000000      4841542.50000000000
547637.93750000000      4841530.50000000000
549244.00000000000      4841505.50000000000
544356.93750000000      4841500.50000000000
550860.00000000000      4841487.50000000000
581409.12500000000      4840923.50000000000
580607.12500000000      4840914.50000000000
576597.12500000000      4840907.50000000000
579806.12500000000      4840905.50000000000
577408.12500000000      4840901.50000000000
575786.12500000000      4840900.50000000000
579012.12500000000      4840900.50000000000
578219.12500000000      4840895.50000000000
574976.12500000000      4840894.50000000000
574171.12500000000      4840879.50000000000
573366.12500000000      4840865.50000000000
572565.06250000000      4840856.50000000000
571764.06250000000      4840847.50000000000
570952.06250000000      4840834.50000000000
570140.06250000000      4840821.50000000000
569329.06250000000      4840819.50000000000
568519.06250000000      4840818.50000000000
562035.06250000000      4840806.00000000000
562866.06250000000      4840803.00000000000
567720.06250000000      4840802.50000000000
561221.06250000000      4840802.00000000000
563697.06250000000      4840800.50000000000
560407.06250000000      4840799.00000000000
564494.06250000000      4840792.50000000000
559604.06250000000      4840791.00000000000
566921.06250000000      4840787.50000000000
566106.06250000000      4840786.50000000000
565292.06250000000      4840785.50000000000
558802.06250000000      4840782.50000000000
558024.00000000000      4840769.50000000000
554051.00000000000      4840758.50000000000
554850.00000000000      4840758.50000000000
555650.00000000000      4840758.50000000000
556448.00000000000      4840757.50000000000
557247.00000000000      4840756.50000000000
553247.00000000000      4840750.50000000000
552443.00000000000      4840743.50000000000
546007.93750000000      4840735.50000000000
546820.93750000000      4840731.50000000000
547634.93750000000      4840727.50000000000
545181.93750000000      4840715.50000000000
551647.00000000000      4840715.50000000000
548443.93750000000      4840711.50000000000
549254.00000000000      4840696.50000000000
544356.93750000000      4840695.50000000000
550052.00000000000      4840692.50000000000
550851.00000000000      4840688.50000000000
581421.12500000000      4840125.50000000000
576605.12500000000      4840110.50000000000
579812.12500000000      4840104.50000000000
578218.12500000000      4840095.50000000000
574986.06250000000      4840081.50000000000
573369.06250000000      4840065.50000000000
571770.06250000000      4840047.50000000000
570151.06250000000      4840026.50000000000
568532.06250000000      4840011.50000000000
562045.06250000000      4840002.00000000000
560424.06250000000      4839997.00000000000
563702.06250000000      4839992.50000000000
566925.06250000000      4839982.50000000000
558824.00000000000      4839981.50000000000
565306.06250000000      4839976.50000000000
557250.00000000000      4839959.50000000000
554044.00000000000      4839949.50000000000
555645.00000000000      4839947.50000000000
552435.00000000000      4839938.50000000000
546011.93750000000      4839931.50000000000
547633.93750000000      4839915.50000000000
549246.93750000000      4839900.50000000000
544357.93750000000      4839892.50000000000
550840.00000000000      4839889.50000000000
581434.12500000000      4839328.50000000000
580626.12500000000      4839316.50000000000
576613.06250000000      4839314.50000000000
577415.06250000000      4839304.50000000000
579819.12500000000      4839304.50000000000
579018.06250000000      4839299.50000000000
578218.06250000000      4839295.50000000000
575805.06250000000      4839291.50000000000
574997.06250000000      4839269.50000000000
574185.06250000000      4839267.50000000000
573373.06250000000      4839265.50000000000
572575.06250000000      4839256.50000000000
571777.06250000000      4839247.50000000000
570970.06250000000      4839239.50000000000
570163.06250000000      4839231.50000000000
569354.06250000000      4839218.50000000000
568546.06250000000      4839205.50000000000
562055.06250000000      4839197.50000000000
561248.00000000000      4839195.50000000000
560441.00000000000      4839195.00000000000
562881.06250000000      4839191.50000000000
567738.06250000000      4839191.50000000000
559643.00000000000      4839187.50000000000
563707.06250000000      4839185.50000000000
558846.00000000000      4839181.50000000000
566930.06250000000      4839177.50000000000
564513.06250000000      4839176.50000000000
566125.06250000000      4839172.50000000000
558050.00000000000      4839171.50000000000
565320.06250000000      4839167.50000000000
557254.00000000000      4839162.50000000000
556447.00000000000      4839149.50000000000
554038.00000000000      4839141.50000000000
554839.00000000000      4839139.50000000000
553232.00000000000      4839137.50000000000
555641.00000000000      4839137.50000000000
552427.00000000000      4839133.50000000000
546015.93750000000      4839128.50000000000
546823.93750000000      4839115.50000000000
551628.00000000000      4839112.50000000000
545186.93750000000      4839108.50000000000
549240.93750000000      4839105.50000000000
548436.93750000000      4839104.50000000000
547632.93750000000      4839103.50000000000
550034.93750000000      4839098.50000000000
550829.93750000000      4839091.50000000000
544358.93750000000      4839089.50000000000
581441.06250000000      4838524.50000000000
576619.06250000000      4838498.50000000000
579823.06250000000      4838498.50000000000
578221.06250000000      4838493.50000000000
575001.06250000000      4838471.50000000000
573380.06250000000      4838463.50000000000
571779.06250000000      4838449.50000000000
570172.06250000000      4838418.50000000000
568563.06250000000      4838402.50000000000
562071.00000000000      4838384.50000000000
563719.00000000000      4838382.50000000000
560457.00000000000      4838380.50000000000
566952.06250000000      4838375.50000000000
558857.00000000000      4838370.50000000000
565342.06250000000      4838356.50000000000
557260.00000000000      4838353.50000000000
554040.00000000000      4838333.50000000000
555656.00000000000      4838332.50000000000
552428.93750000000      4838320.50000000000
546008.93750000000      4838311.50000000000
547626.93750000000      4838295.50000000000
549236.93750000000      4838294.50000000000
550824.93750000000      4838290.50000000000
544359.93750000000      4838278.50000000000
581449.06250000000      4837721.50000000000
580638.06250000000      4837706.50000000000
578224.06250000000      4837692.50000000000
579025.06250000000      4837692.50000000000
579827.06250000000      4837692.50000000000
577424.06250000000      4837687.50000000000
576625.06250000000      4837682.50000000000
575815.06250000000      4837678.50000000000
575006.06250000000      4837674.50000000000
574196.06250000000      4837668.50000000000
573387.06250000000      4837662.50000000000
572584.06250000000      4837656.50000000000
571782.06250000000      4837651.50000000000
570981.06250000000      4837628.50000000000
570181.06250000000      4837606.50000000000
569380.06250000000      4837602.50000000000
568580.06250000000      4837599.50000000000
567777.00000000000      4837586.50000000000
563731.00000000000      4837579.50000000000
562909.00000000000      4837575.50000000000
566975.00000000000      4837574.50000000000
562088.00000000000      4837572.50000000000
561281.00000000000      4837569.50000000000
560474.00000000000      4837567.50000000000
559671.00000000000      4837563.50000000000
564548.00000000000      4837562.50000000000
566170.00000000000      4837560.50000000000
558868.00000000000      4837559.50000000000
558067.00000000000      4837551.50000000000
565365.00000000000      4837546.50000000000
557266.00000000000      4837544.50000000000
556469.00000000000      4837536.50000000000
555672.00000000000      4837528.50000000000
554857.00000000000      4837526.50000000000
554041.93750000000      4837525.50000000000
553236.93750000000      4837516.50000000000
552431.93750000000      4837508.50000000000
551625.93750000000      4837498.50000000000
546002.93750000000      4837494.50000000000
546811.93750000000      4837491.50000000000
550819.93750000000      4837489.50000000000
547620.93750000000      4837488.50000000000
550026.93750000000      4837486.50000000000
548426.93750000000      4837485.50000000000
549233.93750000000      4837483.50000000000
545181.93750000000      4837480.50000000000
544360.93750000000      4837467.50000000000
581448.06250000000      4836922.50000000000
579835.06250000000      4836895.50000000000
578223.06250000000      4836888.50000000000
576630.06250000000      4836881.50000000000
575004.06250000000      4836873.50000000000
573398.06250000000      4836858.50000000000
571790.06250000000      4836850.50000000000
570187.00000000000      4836823.50000000000
568582.00000000000      4836801.50000000000
563734.00000000000      4836780.50000000000
566960.00000000000      4836778.50000000000
562117.00000000000      4836769.50000000000
560503.00000000000      4836759.50000000000
565353.00000000000      4836758.50000000000
558891.00000000000      4836751.50000000000
557286.00000000000      4836736.50000000000
555682.93750000000      4836724.50000000000
554045.93750000000      4836716.50000000000
552432.93750000000      4836704.50000000000
550821.93750000000      4836689.50000000000
547610.93750000000      4836679.50000000000
549224.93750000000      4836678.50000000000
545997.93750000000      4836676.50000000000
581447.06250000000      4836123.50000000000
580645.06250000000      4836111.50000000000
579843.06250000000      4836099.50000000000
579032.06250000000      4836092.50000000000
578222.06250000000      4836085.50000000000
577429.06250000000      4836083.50000000000
576636.06250000000      4836081.50000000000
575819.06250000000      4836076.50000000000
575003.06250000000      4836072.50000000000
574206.00000000000      4836063.50000000000
573409.00000000000      4836054.50000000000
572603.00000000000      4836052.50000000000
571798.00000000000      4836050.50000000000
570995.00000000000      4836045.50000000000
570193.00000000000      4836041.50000000000
569389.00000000000      4836022.50000000000
568585.00000000000      4836004.50000000000
567765.00000000000      4835993.50000000000
566946.00000000000      4835982.50000000000
563737.00000000000      4835981.50000000000
564539.00000000000      4835976.50000000000
566144.00000000000      4835976.50000000000
562942.00000000000      4835973.50000000000
565342.00000000000      4835971.50000000000
562147.00000000000      4835966.50000000000
561340.00000000000      4835958.50000000000
560533.00000000000      4835951.50000000000
559724.00000000000      4835947.50000000000
558915.00000000000      4835943.50000000000
558111.00000000000      4835936.50000000000
557306.93750000000      4835929.50000000000
556499.93750000000      4835925.50000000000
555693.93750000000      4835921.50000000000
554871.93750000000      4835914.50000000000
554049.93750000000      4835907.50000000000
553241.93750000000      4835903.50000000000
552434.93750000000      4835900.50000000000
551628.93750000000      4835895.50000000000
550823.93750000000      4835890.50000000000
550019.93750000000      4835882.50000000000
549215.93750000000      4835874.50000000000
548408.93750000000      4835872.50000000000
547601.93750000000      4835870.50000000000
546796.87500000000      4835864.50000000000
545992.87500000000      4835859.50000000000
545178.87500000000      4835858.50000000000
544365.87500000000      4835857.50000000000
544365.87500000000      4835857.50000000000
581447.06250000000      4835324.50000000000
579842.06250000000      4835300.50000000000
578220.00000000000      4835292.50000000000
576633.00000000000      4835275.50000000000
575012.00000000000      4835267.50000000000
573413.00000000000      4835257.50000000000
571812.00000000000      4835246.50000000000
570202.00000000000      4835244.50000000000
568597.00000000000      4835212.50000000000
566971.00000000000      4835186.50000000000
565357.00000000000      4835176.50000000000
563749.00000000000      4835173.50000000000
562148.00000000000      4835143.50000000000
558920.93750000000      4835137.50000000000
557310.93750000000      4835132.50000000000
560542.00000000000      4835125.50000000000
555701.93750000000      4835118.50000000000
552442.93750000000      4835112.50000000000
554061.93750000000      4835106.50000000000
550832.93750000000      4835101.50000000000
549221.93750000000      4835089.50000000000
547605.87500000000      4835083.50000000000
545994.87500000000      4835073.50000000000
581447.06250000000      4834526.50000000000
580644.00000000000      4834514.50000000000
579842.00000000000      4834502.50000000000
579030.00000000000      4834501.50000000000
578219.00000000000      4834500.50000000000
577424.00000000000      4834484.50000000000
576630.00000000000      4834469.50000000000
575826.00000000000      4834466.50000000000
575022.00000000000      4834463.50000000000
574219.00000000000      4834461.50000000000
573417.00000000000      4834460.50000000000
572621.00000000000      4834451.50000000000
570211.00000000000      4834448.50000000000
571018.00000000000      4834445.50000000000
571826.00000000000      4834443.50000000000
569410.00000000000      4834434.50000000000
568610.00000000000      4834420.50000000000
567803.00000000000      4834405.50000000000
566997.00000000000      4834391.50000000000
566185.00000000000      4834386.50000000000
565373.00000000000      4834382.50000000000
564567.00000000000      4834374.50000000000
563762.00000000000      4834366.50000000000
562956.00000000000      4834343.50000000000
557315.93750000000      4834336.50000000000
558121.93750000000      4834333.50000000000
558927.93750000000      4834331.50000000000
556512.93750000000      4834326.50000000000
552451.93750000000      4834324.50000000000
562150.00000000000      4834321.50000000000
551646.93750000000      4834318.50000000000
555710.93750000000      4834316.50000000000
553262.93750000000      4834315.50000000000
559739.93750000000      4834315.50000000000
550842.93750000000      4834312.50000000000
554892.93750000000      4834311.50000000000
561350.93750000000      4834310.50000000000
550034.93750000000      4834308.50000000000
554074.93750000000      4834306.50000000000
549227.87500000000      4834305.50000000000
548418.87500000000      4834300.50000000000
560551.93750000000      4834299.50000000000
547609.87500000000      4834296.50000000000
546802.87500000000      4834291.50000000000
545996.87500000000      4834287.50000000000
545186.87500000000      4834267.50000000000
544376.87500000000      4834248.50000000000
581457.00000000000      4833732.50000000000
579853.00000000000      4833711.50000000000
578226.00000000000      4833700.50000000000
576636.00000000000      4833667.50000000000
575031.00000000000      4833663.50000000000
573422.00000000000      4833657.50000000000
571827.00000000000      4833650.50000000000
570217.00000000000      4833637.50000000000
568611.00000000000      4833622.50000000000
567003.00000000000      4833596.50000000000
565384.00000000000      4833583.50000000000
563763.93750000000      4833556.50000000000
557330.93750000000      4833529.50000000000
558945.93750000000      4833524.50000000000
552465.93750000000      4833518.50000000000
562156.93750000000      4833514.50000000000
555725.93750000000      4833513.50000000000
550854.87500000000      4833506.50000000000
554079.93750000000      4833505.50000000000
549239.87500000000      4833499.50000000000
560562.93750000000      4833496.50000000000
547621.87500000000      4833489.50000000000
546007.87500000000      4833483.50000000000
581467.00000000000      4832939.50000000000
580666.00000000000      4832930.50000000000
579865.00000000000      4832921.50000000000
579049.00000000000      4832911.50000000000
578233.00000000000      4832901.50000000000
577437.00000000000      4832883.50000000000
576642.00000000000      4832866.50000000000
575841.00000000000      4832865.50000000000
575041.00000000000      4832864.50000000000
574234.00000000000      4832859.50000000000
571828.00000000000      4832858.50000000000
572628.00000000000      4832856.50000000000
573428.00000000000      4832854.50000000000
571026.00000000000      4832842.50000000000
570224.00000000000      4832826.50000000000
569418.00000000000      4832825.50000000000
568612.93750000000      4832824.50000000000
567810.93750000000      4832813.50000000000
567008.93750000000      4832802.50000000000
566201.93750000000      4832793.50000000000
565394.93750000000      4832784.50000000000
564580.93750000000      4832765.50000000000
563766.93750000000      4832747.50000000000
562964.93750000000      4832727.50000000000
557345.93750000000      4832722.50000000000
558154.93750000000      4832719.50000000000
558964.93750000000      4832717.50000000000
556542.93750000000      4832716.50000000000
552479.87500000000      4832712.50000000000
555740.93750000000      4832711.50000000000
553282.93750000000      4832708.50000000000
554912.93750000000      4832708.50000000000
562163.93750000000      4832707.50000000000
551672.87500000000      4832706.50000000000
554085.93750000000      4832705.50000000000
559769.93750000000      4832705.50000000000
550866.87500000000      4832701.50000000000
561368.93750000000      4832700.50000000000
550058.87500000000      4832697.50000000000
549251.87500000000      4832693.50000000000
560574.93750000000      4832693.50000000000
548442.87500000000      4832687.50000000000
547633.87500000000      4832682.50000000000
546825.87500000000      4832681.50000000000
546018.87500000000      4832680.50000000000
545205.87500000000      4832661.50000000000
544392.87500000000      4832643.50000000000
581476.00000000000      4832138.50000000000
579873.00000000000      4832116.50000000000
578245.00000000000      4832101.50000000000
576648.00000000000      4832074.50000000000
575038.00000000000      4832061.50000000000
573441.00000000000      4832052.50000000000
571835.93750000000      4832043.50000000000
570233.93750000000      4832033.50000000000
568621.93750000000      4832028.50000000000
567014.93750000000      4832006.50000000000
565406.93750000000      4831986.50000000000
563776.93750000000      4831957.50000000000
557360.93750000000      4831920.50000000000
558973.93750000000      4831916.50000000000
555755.93750000000      4831910.50000000000
552481.87500000000      4831909.50000000000
562171.93750000000      4831909.50000000000
554087.87500000000      4831898.50000000000
550861.87500000000      4831895.50000000000
549252.87500000000      4831890.50000000000
560583.93750000000      4831890.50000000000
547638.87500000000      4831877.50000000000
546023.87500000000      4831876.50000000000
544401.87500000000      4831836.50000000000
581486.00000000000      4831338.50000000000
580683.00000000000      4831325.50000000000
579881.00000000000      4831312.50000000000
579069.00000000000      4831306.50000000000
578258.00000000000      4831301.50000000000
577455.93750000000      4831292.50000000000
576653.93750000000      4831283.50000000000
575844.93750000000      4831271.50000000000
575035.93750000000      4831259.50000000000
574244.93750000000      4831255.50000000000
573453.93750000000      4831251.50000000000
570243.93750000000      4831240.50000000000
572648.93750000000      4831239.50000000000
569436.93750000000      4831236.50000000000
571043.93750000000      4831234.50000000000
568630.93750000000      4831232.50000000000
571843.93750000000      4831228.50000000000
567825.93750000000      4831221.50000000000
567020.93750000000      4831210.50000000000
566219.93750000000      4831199.50000000000
565418.93750000000      4831188.50000000000
564602.93750000000      4831178.50000000000
563786.93750000000      4831168.50000000000
562983.93750000000      4831140.50000000000
557375.93750000000      4831118.50000000000
558179.93750000000      4831116.50000000000
558983.93750000000      4831115.50000000000
556572.87500000000      4831113.50000000000
562180.93750000000      4831112.50000000000
555770.87500000000      4831109.50000000000
552483.87500000000      4831106.50000000000
559787.93750000000      4831101.50000000000
554930.87500000000      4831100.50000000000
561386.93750000000      4831099.50000000000
553286.87500000000      4831098.50000000000
551670.87500000000      4831097.50000000000
554090.87500000000      4831091.50000000000
550857.87500000000      4831089.50000000000
550055.87500000000      4831088.50000000000
549253.87500000000      4831087.50000000000
560592.93750000000      4831087.50000000000
548448.87500000000      4831080.50000000000
547644.87500000000      4831073.50000000000
546028.87500000000      4831072.50000000000
546836.87500000000      4831072.50000000000
545219.87500000000      4831050.50000000000
544410.87500000000      4831029.50000000000
581499.00000000000      4830538.50000000000
579882.93750000000      4830520.50000000000
578263.93750000000      4830494.50000000000
576656.93750000000      4830485.50000000000
575042.93750000000      4830457.50000000000
573458.93750000000      4830452.50000000000
571849.93750000000      4830437.50000000000
570253.93750000000      4830435.50000000000
568641.93750000000      4830425.50000000000
567027.93750000000      4830403.50000000000
565418.93750000000      4830379.50000000000
563795.93750000000      4830365.50000000000
562196.93750000000      4830319.50000000000
557389.87500000000      4830316.50000000000
558993.93750000000      4830314.50000000000
555783.87500000000      4830310.50000000000
560601.93750000000      4830307.50000000000
552489.87500000000      4830301.50000000000
554100.87500000000      4830297.50000000000
550872.87500000000      4830287.50000000000
549268.87500000000      4830279.50000000000
546043.87500000000      4830263.50000000000
547657.87500000000      4830262.50000000000
544418.81250000000      4830223.50000000000
581511.93750000000      4829738.50000000000
580698.93750000000      4829733.50000000000
579885.93750000000      4829728.50000000000
579077.93750000000      4829708.50000000000
576659.93750000000      4829688.50000000000
577464.93750000000      4829688.50000000000
578270.93750000000      4829688.50000000000
575854.93750000000      4829672.50000000000
575050.93750000000      4829656.50000000000
574257.93750000000      4829654.50000000000
573464.93750000000      4829653.50000000000
572659.93750000000      4829649.50000000000
571855.93750000000      4829646.50000000000
571059.93750000000      4829638.50000000000
570263.93750000000      4829630.50000000000
569457.93750000000      4829624.50000000000
568652.93750000000      4829618.50000000000
567843.93750000000      4829607.50000000000
567035.93750000000      4829597.50000000000
566226.93750000000      4829584.50000000000
565418.93750000000      4829571.50000000000
564611.93750000000      4829567.50000000000
563804.93750000000      4829563.50000000000
563008.93750000000      4829545.50000000000
560611.87500000000      4829528.50000000000
561411.93750000000      4829527.50000000000
562212.93750000000      4829527.50000000000
559807.87500000000      4829521.50000000000
557403.87500000000      4829515.50000000000
558203.87500000000      4829514.50000000000
559004.87500000000      4829514.50000000000
556599.87500000000      4829513.50000000000
555796.87500000000      4829512.50000000000
554953.87500000000      4829507.50000000000
554111.87500000000      4829503.50000000000
553303.87500000000      4829499.50000000000
552496.87500000000      4829496.50000000000
551691.87500000000      4829491.50000000000
550887.87500000000      4829486.50000000000
550085.87500000000      4829478.50000000000
549283.87500000000      4829471.50000000000
548476.87500000000      4829461.50000000000
546059.81250000000      4829455.50000000000
546864.81250000000      4829453.50000000000
547670.87500000000      4829451.50000000000
545242.81250000000      4829436.50000000000
544426.81250000000      4829417.50000000000
581522.93750000000      4828937.50000000000
579898.93750000000      4828926.50000000000
578283.93750000000      4828894.50000000000
576673.93750000000      4828887.50000000000
575063.93750000000      4828860.50000000000
573478.93750000000      4828856.50000000000
571872.93750000000      4828837.50000000000
570274.93750000000      4828820.50000000000
568659.93750000000      4828817.50000000000
567048.93750000000      4828792.50000000000
565432.87500000000      4828770.50000000000
563809.87500000000      4828762.50000000000
562218.87500000000      4828728.50000000000
560620.87500000000      4828723.50000000000
559008.87500000000      4828715.50000000000
557405.87500000000      4828710.50000000000
555793.87500000000      4828708.50000000000
554113.87500000000      4828700.50000000000
552504.87500000000      4828692.50000000000
550893.87500000000      4828679.50000000000
549288.87500000000      4828664.50000000000
546057.81250000000      4828647.50000000000
547675.81250000000      4828646.50000000000
581534.93750000000      4828137.50000000000
580723.93750000000      4828131.50000000000
579912.93750000000      4828125.50000000000
579104.93750000000      4828113.50000000000
578296.93750000000      4828101.50000000000
577491.93750000000      4828094.50000000000
576687.93750000000      4828087.50000000000
575882.93750000000      4828075.50000000000
575077.93750000000      4828064.50000000000
574284.93750000000      4828062.50000000000
573492.93750000000      4828060.50000000000
572690.93750000000      4828044.50000000000
571889.93750000000      4828029.50000000000
571087.93750000000      4828020.50000000000
568667.87500000000      4828016.50000000000
569476.87500000000      4828013.50000000000
570285.87500000000      4828011.50000000000
567864.87500000000      4828002.50000000000
567061.87500000000      4827988.50000000000
566254.87500000000      4827979.50000000000
565447.87500000000      4827970.50000000000
564631.87500000000      4827965.50000000000
563815.87500000000      4827961.50000000000
563019.87500000000      4827945.50000000000
562224.87500000000      4827929.50000000000
561427.87500000000      4827924.50000000000
560630.87500000000      4827919.50000000000
559821.87500000000      4827917.50000000000
559013.87500000000      4827916.50000000000
558210.87500000000      4827911.50000000000
557407.87500000000      4827906.50000000000
555790.87500000000      4827905.50000000000
556598.87500000000      4827905.50000000000
554953.87500000000      4827901.50000000000
554116.87500000000      4827897.50000000000
553314.87500000000      4827892.50000000000
552513.87500000000      4827888.50000000000
551706.87500000000      4827880.50000000000
550899.87500000000      4827872.50000000000
550096.81250000000      4827864.50000000000
549293.81250000000      4827857.50000000000
548486.81250000000      4827849.50000000000
547680.81250000000      4827842.50000000000
546868.81250000000      4827840.50000000000
546056.81250000000      4827839.50000000000
545247.81250000000      4827823.50000000000
544439.81250000000      4827808.50000000000
581547.93750000000      4827342.50000000000
579928.93750000000      4827326.50000000000
578311.93750000000      4827303.50000000000
576700.93750000000      4827288.50000000000
575097.87500000000      4827262.50000000000
573503.87500000000      4827255.50000000000
571901.87500000000      4827229.50000000000
570293.87500000000      4827212.50000000000
568683.87500000000      4827208.50000000000
567078.87500000000      4827184.50000000000
565470.87500000000      4827164.50000000000
563834.87500000000      4827155.50000000000
562230.87500000000      4827134.50000000000
560626.87500000000      4827118.50000000000
559019.87500000000      4827109.50000000000
557407.87500000000      4827100.50000000000
555792.87500000000      4827098.50000000000
554127.87500000000      4827090.50000000000
552523.81250000000      4827076.50000000000
550906.81250000000      4827065.50000000000
549302.81250000000      4827052.50000000000
547691.81250000000      4827037.50000000000
546074.81250000000      4827034.50000000000
581561.93750000000      4826547.50000000000
580752.87500000000      4826537.50000000000
579944.87500000000      4826527.50000000000
579135.87500000000      4826516.50000000000
578327.87500000000      4826506.50000000000
577520.87500000000      4826498.50000000000
576714.87500000000      4826490.50000000000
575915.87500000000      4826475.50000000000
575117.87500000000      4826460.50000000000
574316.87500000000      4826455.50000000000
573515.87500000000      4826450.50000000000
572714.87500000000      4826439.50000000000
571913.87500000000      4826429.50000000000
571107.87500000000      4826421.50000000000
570301.87500000000      4826413.50000000000
569500.87500000000      4826406.50000000000
568699.87500000000      4826400.50000000000
567897.87500000000      4826390.50000000000
567096.87500000000      4826381.50000000000
566295.87500000000      4826370.50000000000
565494.87500000000      4826359.50000000000
564673.87500000000      4826354.50000000000
563853.87500000000      4826350.50000000000
563044.87500000000      4826344.50000000000
562236.87500000000      4826339.50000000000
561429.87500000000      4826328.50000000000
560623.87500000000      4826317.50000000000
559824.87500000000      4826310.50000000000
559026.87500000000      4826303.50000000000
558217.87500000000      4826299.50000000000
557408.87500000000      4826295.50000000000
556601.87500000000      4826293.50000000000
555794.87500000000      4826291.50000000000
554966.81250000000      4826287.50000000000
554138.81250000000      4826284.50000000000
553335.81250000000      4826274.50000000000
552533.81250000000      4826265.50000000000
551723.81250000000      4826261.50000000000
550913.81250000000      4826258.50000000000
550112.81250000000      4826253.50000000000
549311.81250000000      4826248.50000000000
548506.81250000000      4826240.50000000000
547702.81250000000      4826232.50000000000
546897.81250000000      4826230.50000000000
546092.81250000000      4826229.50000000000
545271.81250000000      4826211.50000000000
544451.81250000000      4826193.50000000000
581563.87500000000      4825740.50000000000
579949.87500000000      4825722.50000000000
578340.87500000000      4825707.50000000000
576725.87500000000      4825683.50000000000
575118.87500000000      4825665.50000000000
573522.87500000000      4825647.50000000000
571918.87500000000      4825633.50000000000
570310.87500000000      4825621.50000000000
568704.87500000000      4825603.50000000000
567101.87500000000      4825596.50000000000
565496.87500000000      4825581.50000000000
563853.87500000000      4825546.50000000000
562244.87500000000      4825530.50000000000
560635.87500000000      4825522.50000000000
559024.87500000000      4825504.50000000000
557409.81250000000      4825499.50000000000
555792.81250000000      4825488.50000000000
554144.81250000000      4825480.50000000000
552537.81250000000      4825455.50000000000
549324.81250000000      4825451.50000000000
546093.81250000000      4825424.50000000000
547705.81250000000      4825420.50000000000
581566.87500000000      4824933.50000000000
580760.87500000000      4824925.50000000000
579954.87500000000      4824918.50000000000
579153.87500000000      4824913.50000000000
578353.87500000000      4824909.50000000000
577544.87500000000      4824892.50000000000
576736.87500000000      4824876.50000000000
575928.87500000000      4824873.50000000000
575120.87500000000      4824870.50000000000
574325.87500000000      4824857.50000000000
573530.87500000000      4824844.50000000000
572726.87500000000      4824840.50000000000
571923.87500000000      4824837.50000000000
571121.87500000000      4824833.50000000000
570319.87500000000      4824829.50000000000
569514.87500000000      4824818.50000000000
567106.87500000000      4824812.50000000000
567907.87500000000      4824809.50000000000
566302.87500000000      4824808.50000000000
568709.87500000000      4824807.50000000000
565499.87500000000      4824804.50000000000
564676.87500000000      4824773.50000000000
563854.87500000000      4824743.50000000000
563053.87500000000      4824732.50000000000
560648.87500000000      4824727.50000000000
561450.87500000000      4824724.50000000000
562252.87500000000      4824721.50000000000
559835.81250000000      4824716.50000000000
559023.81250000000      4824705.50000000000
557410.81250000000      4824704.50000000000
558216.81250000000      4824704.50000000000
556600.81250000000      4824694.50000000000
555791.81250000000      4824685.50000000000
554971.81250000000      4824681.50000000000
554151.81250000000      4824677.50000000000
553346.81250000000      4824661.50000000000
549337.81250000000      4824655.50000000000
552541.81250000000      4824645.50000000000
548522.81250000000      4824632.50000000000
546095.81250000000      4824619.50000000000
546901.81250000000      4824614.50000000000
547708.81250000000      4824609.50000000000
581576.87500000000      4824131.50000000000
579957.87500000000      4824114.50000000000
578352.87500000000      4824104.50000000000
576744.87500000000      4824073.50000000000
575129.87500000000      4824064.50000000000
573538.87500000000      4824041.50000000000
571927.87500000000      4824036.50000000000
570323.87500000000      4824023.50000000000
567100.87500000000      4824009.50000000000
568715.87500000000      4824005.50000000000
565496.81250000000      4823998.50000000000
563861.81250000000      4823935.50000000000
562256.81250000000      4823919.50000000000
560644.81250000000      4823918.50000000000
557409.81250000000      4823902.50000000000
559026.81250000000      4823899.50000000000
581587.87500000000      4823329.50000000000
580774.87500000000      4823319.50000000000
579961.87500000000      4823310.50000000000
579156.87500000000      4823305.50000000000
578351.87500000000      4823300.50000000000
577552.87500000000      4823285.50000000000
576753.87500000000      4823271.50000000000
575945.87500000000      4823265.50000000000
575138.87500000000      4823259.50000000000
574342.87500000000      4823249.50000000000
573546.81250000000      4823239.50000000000
572738.81250000000      4823237.50000000000
571931.81250000000      4823235.50000000000
571129.81250000000      4823226.50000000000
570328.81250000000      4823217.50000000000
569525.81250000000      4823210.50000000000
567095.81250000000      4823206.50000000000
567908.81250000000      4823204.50000000000
568722.81250000000      4823203.50000000000
566294.81250000000      4823199.50000000000
565494.81250000000      4823193.50000000000
564681.81250000000      4823160.50000000000
563869.81250000000      4823128.50000000000
563065.81250000000      4823122.50000000000
562261.81250000000      4823117.50000000000
561451.81250000000      4823113.50000000000
560641.81250000000      4823110.50000000000
559835.81250000000      4823102.50000000000
557408.81250000000      4823100.50000000000
558218.81250000000      4823097.50000000000
559029.81250000000      4823094.50000000000
581599.87500000000      4822531.50000000000
579966.81250000000      4822508.50000000000
578357.81250000000      4822497.50000000000
576757.81250000000      4822472.50000000000
575151.81250000000      4822458.50000000000
573555.81250000000      4822437.50000000000
571940.81250000000      4822435.50000000000
570333.81250000000      4822405.50000000000
567103.81250000000      4822399.50000000000
568721.81250000000      4822397.50000000000
565494.81250000000      4822384.50000000000
563871.81250000000      4822326.50000000000
562260.81250000000      4822314.50000000000
560641.81250000000      4822307.50000000000
557409.81250000000      4822292.50000000000
559029.81250000000      4822291.50000000000
581612.81250000000      4821734.50000000000
580792.81250000000      4821720.50000000000
579972.81250000000      4821707.50000000000
579167.81250000000      4821701.50000000000
578363.81250000000      4821695.50000000000
577562.81250000000      4821684.50000000000
576761.81250000000      4821674.50000000000
575962.81250000000      4821666.50000000000
575164.81250000000      4821658.50000000000
574364.81250000000      4821646.50000000000
571949.81250000000      4821636.50000000000
572756.81250000000      4821635.50000000000
573564.81250000000      4821635.50000000000
571143.81250000000      4821614.50000000000
567111.81250000000      4821593.50000000000
570338.81250000000      4821593.50000000000
567916.81250000000      4821592.50000000000
569529.81250000000      4821592.50000000000
568721.81250000000      4821591.50000000000
566303.81250000000      4821584.50000000000
565495.81250000000      4821575.50000000000
564684.81250000000      4821549.50000000000
563874.81250000000      4821524.50000000000
563067.81250000000      4821518.50000000000
562260.81250000000      4821512.50000000000
561451.81250000000      4821508.50000000000
560642.81250000000      4821505.50000000000
559835.81250000000      4821497.50000000000
559029.81250000000      4821489.50000000000
558219.81250000000      4821487.50000000000
557410.81250000000      4821485.50000000000
581628.81250000000      4820934.50000000000
579995.81250000000      4820910.50000000000
578376.81250000000      4820896.50000000000
576775.81250000000      4820870.50000000000
575176.81250000000      4820855.50000000000
573573.81250000000      4820831.50000000000
571955.81250000000      4820830.50000000000
570349.81250000000      4820789.50000000000
568733.81250000000      4820786.50000000000
567126.81250000000      4820784.50000000000
565506.81250000000      4820769.50000000000
563880.81250000000      4820718.50000000000
562265.81250000000      4820706.50000000000
560652.81250000000      4820695.50000000000
559031.81250000000      4820684.50000000000
557419.81250000000      4820678.50000000000
581644.81250000000      4820135.50000000000
580831.81250000000      4820124.50000000000
580018.81250000000      4820114.50000000000
579204.81250000000      4820105.50000000000
578390.81250000000      4820097.50000000000
577590.81250000000      4820082.50000000000
576790.81250000000      4820067.50000000000
575989.81250000000      4820059.50000000000
575188.81250000000      4820052.50000000000
574385.81250000000      4820040.50000000000
573583.81250000000      4820028.50000000000
572772.81250000000      4820026.50000000000
571962.81250000000      4820024.50000000000
571161.81250000000      4820004.50000000000
570360.81250000000      4819985.50000000000
569552.81250000000      4819983.50000000000
568745.81250000000      4819982.50000000000
567943.81250000000      4819979.50000000000
567142.81250000000      4819976.50000000000
566330.81250000000      4819970.50000000000
565518.81250000000      4819964.50000000000
564702.81250000000      4819938.50000000000
563887.81250000000      4819912.50000000000
563078.81250000000      4819906.50000000000
562270.81250000000      4819901.50000000000
561466.81250000000      4819893.50000000000
560662.81250000000      4819885.50000000000
559848.81250000000      4819882.50000000000
559034.75000000000      4819879.50000000000
558231.75000000000      4819875.50000000000
557428.75000000000      4819871.50000000000
556614.75000000000      4819859.50000000000
555801.75000000000      4819847.50000000000
581652.81250000000      4819334.50000000000
580028.81250000000      4819304.50000000000
578404.81250000000      4819290.50000000000
576798.81250000000      4819265.50000000000
575195.81250000000      4819242.50000000000
573587.81250000000      4819219.50000000000
571973.81250000000      4819218.50000000000
570368.81250000000      4819184.50000000000
568756.75000000000      4819178.50000000000
567145.75000000000      4819172.50000000000
565527.75000000000      4819153.50000000000
563890.75000000000      4819110.50000000000
562271.75000000000      4819099.50000000000
560666.75000000000      4819082.50000000000
559042.75000000000      4819075.50000000000
557432.75000000000      4819066.50000000000
555813.75000000000      4819045.50000000000
581660.81250000000      4818533.50000000000
580849.75000000000      4818514.50000000000
580039.75000000000      4818495.50000000000
579229.75000000000      4818489.50000000000
578419.75000000000      4818484.50000000000
577613.75000000000      4818474.50000000000
576807.75000000000      4818464.50000000000
576005.75000000000      4818448.50000000000
575203.75000000000      4818432.50000000000
574397.75000000000      4818421.50000000000
571985.75000000000      4818413.50000000000
572788.75000000000      4818412.50000000000
573592.75000000000      4818411.50000000000
571180.75000000000      4818398.50000000000
570376.75000000000      4818383.50000000000
569572.75000000000      4818378.50000000000
568768.75000000000      4818374.50000000000
567958.75000000000      4818371.50000000000
567149.75000000000      4818369.50000000000
566343.75000000000      4818356.50000000000
565537.75000000000      4818343.50000000000
564715.75000000000      4818326.50000000000
563893.75000000000      4818309.50000000000
563083.75000000000      4818303.50000000000
562273.75000000000      4818298.50000000000
561471.75000000000      4818289.50000000000
560670.75000000000      4818280.50000000000
559860.75000000000      4818276.50000000000
559050.75000000000      4818272.50000000000
558243.75000000000      4818267.50000000000
557437.75000000000      4818262.50000000000
556631.75000000000      4818253.50000000000
555825.75000000000      4818244.50000000000
581674.75000000000      4817720.50000000000
580064.75000000000      4817689.50000000000
578436.75000000000      4817674.50000000000
576822.75000000000      4817660.50000000000
575215.75000000000      4817639.50000000000
573597.75000000000      4817611.50000000000
571988.75000000000      4817608.50000000000
570382.75000000000      4817583.50000000000
568764.75000000000      4817572.50000000000
567151.75000000000      4817561.50000000000
565541.75000000000      4817533.50000000000
563902.75000000000      4817508.50000000000
562285.75000000000      4817496.50000000000
560678.75000000000      4817479.50000000000
559056.75000000000      4817467.50000000000
557445.75000000000      4817453.50000000000
555831.75000000000      4817436.50000000000
581689.75000000000      4816907.50000000000
580089.75000000000      4816884.50000000000
579271.75000000000      4816874.50000000000
578453.75000000000      4816864.50000000000
577645.75000000000      4816860.50000000000
576838.75000000000      4816856.50000000000
575228.75000000000      4816846.50000000000
570389.75000000000      4816784.50000000000
565545.75000000000      4816724.50000000000
563911.75000000000      4816707.50000000000
562297.75000000000      4816695.50000000000
560687.75000000000      4816678.50000000000
559875.75000000000      4816670.50000000000
559063.75000000000      4816662.50000000000
557453.75000000000      4816645.50000000000
556645.75000000000      4816637.50000000000
555838.75000000000      4816629.50000000000

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at stat.math.ethz.ch
https://stat.ethz.ch/mailman/listinfo/r-sig-geo



From Roger.Bivand at nhh.no  Thu Jan 29 16:17:13 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 29 Jan 2009 16:17:13 +0100 (CET)
Subject: [R-sig-Geo] Different Moran's I correlograms using
 correlog{ncf} and sp.correlogram{spdep}
In-Reply-To: <1233237532.4981b61c8d1cf@webmail.adelaide.edu.au>
References: <1233224436.498182f423322@webmail.adelaide.edu.au>
	<alpine.LRH.2.00.0901291230200.15975@reclus.nhh.no>
	<1233237532.4981b61c8d1cf@webmail.adelaide.edu.au>
Message-ID: <alpine.LRH.2.00.0901291610180.20895@reclus.nhh.no>

On Fri, 30 Jan 2009, Xingli Giam wrote:

> Dear Roger,
>
> So what you trying to say about correlog{ncf} is that after the bands 
> are computed, all the correlations between data points whose distance 
> are within the bin are computed. So I suppose it is a binary kind of 
> specification, if pairwise distances are in the bin, the correlations 
> will be computed and all these correlations are considered equally in 
> computing Moran's I.
>
> So should the correlogram obtained by correlog{ncf} same as the one 
> obtained by sp.correlogram(spdep), when the neighbourhood upperlimit is 
> same as the increment level of the former.

No, because correlog{ncf} bins the distances, but sp.correlogram{spdep} 
adds higher order lags - here the second lag of i (with first order 
neighbours j) is the set of all points k that are neighbours of points j 
and neither i nor in j. It depends on graph edge counts, not distance as 
such. They aren't comparable, really. If you want to do it by hand, check 
the distances reported by correlog() (they may not be what you think), 
take the bin boundaries, plug them into multiple calls to dnearneigh(), 
and go from there.

Roger

>
> E.g.,
>
> #Correlogram from correlog{ncf}, where slm1600 is the chosen spatial model
>
> correlog.200b <- correlog(dat$x_long, dat$y_lat, residuals(mod1), na.rm=T,
> increment=200, resamp=99, latlon=T)
>
> # Plotting the first 50 bins
> plot(correlog.200b$correlation[1:50], type="b", pch=16, cex=1.5, lwd=1.5,
> col="red", xlab="distance (10^2 km)", ylab="Moran's I", cex.lab=2,
> cex.axis=1.5, ylim=c(-1,1)); abline(h=0)
>
> #should be the same as
>
> nb200 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 0, 200, longlat=T)
> ME200.listw <- nb2listw(nb200, style="B", zero.policy=T)
>
> correl<-sp.correlogram(nb200, residuals(mod1), order = 50, method = "I", style
> = "W", randomisation = TRUE, zero.policy = TRUE, spChk=NULL)
>
> plot(correl1600),
>
> But the results of Moran's I are very different.
>
> Here are the results:
>
> For sp.correlogram(),
> Spatial correlogram for residuals(mod1)
> method: Moran's I
>      estimate expectation    variance standard deviate Pr(I) two sided
> 1   0.06882699 -0.00123153  0.00021800           4.7449       2.086e-06 ***
> 2   0.03190221 -0.00127877  0.00027178           2.0127       0.0441461 *
> 3   0.02914748 -0.00133511  0.00028490           1.8059       0.0709262 .
> 4   0.04458328 -0.00137363  0.00029717           2.6659       0.0076772 **
> 5   0.05503366 -0.00139665  0.00031539           3.1775       0.0014854 **
> 6   0.02696152 -0.00143062  0.00032685           1.5704       0.1163121
> 7   0.06049141 -0.00144718  0.00036181           3.2563       0.0011289 **
> 8   0.02526273 -0.00146413  0.00037732           1.3759       0.1688468
> 9   0.02901564 -0.00147493  0.00039208           1.5399       0.1235966
> 10  0.06624244 -0.00148810  0.00039586           3.4042       0.0006637 ***
> 11  0.04189714 -0.00151057  0.00041899           2.1206       0.0339535 *
> 12 -0.00321915 -0.00154560  0.00045316          -0.0786       0.9373374
> .........and so on
>
> For correlog():
> $correlation (just first 4 bins)
> 0.381911078  0.356233456  0.322664149  0.304275005
>
> How should we reconcile the differences?
>
> Many thanks,
> Xingli
>
>
>
>
> Quoting Roger Bivand <Roger.Bivand at nhh.no>:
>
>> On Thu, 29 Jan 2009, Xingli Giam wrote:
>>
>>> Hello List,
>>>
>>> I have been bothered by this problem for the entire day, hope someone
>>> can give me a hand here. Thanks in advance for reading! It could be
>>> really simple and basic so hope you guys bear with it.
>>>
>>> We often plot Moran's I spatial correlograms that contrast glm residuals
>>> and spatial model residuals (after incorporating spatial autocorrelation
>>> (SAC) via SEVM, autocov reg, etc) over lag distance classes.
>>
>> A spatial correlogram is not a well-defined concept. One view is that the
>> inter-pair distances should be binned, and the output computed for the
>> pairs of observations in each bin - equivalent to defining widening rings
>> of neighbours for each observation. There are issues that arise here when
>> some observations have no neighbours in a given bin - should one adjust
>> the values used to calculate E(I) and var(I)? This is in correlog() in
>> ncf, and to a certain extent in pgirmess.
>>
>> Another view is that the first order set of neighbours should be raised to
>> higher orders irrespective of how the set was defined: i and j are first
>> order neighbours, i and k are second order neighbours if j and k are first
>> order neighbours. This isn't quite matrix powering, because if you are
>> already a first order neighbour, you can't be a second order as well
>> (discussed in detail in Cliff & Ord 1981, pp. 118-122). See also ?nblag to
>> see what is going on. correlog() in pgirmess uses nclass.Sturges() to
>> choose the number of bins, but does not fully protect against bins with
>> no-neighbour observations.
>>
>>>
>>> After deciding the most appropriate neighbourhood distance (1600 km -
>>> mine's a global dataset), I created a list of weights via nb2listw that
>>> is an inverse function of distance (1/distance). I then performed SEVM
>>> using the list of weights, using the brute force ME() algorithm to
>>> extract eigenvectors that reduce SAC.
>>>
>>> I plan to report the Moran's I value given from moran.test() on both my
>>> (non- spatial) GLM and Spatial GLM to prove that the spatial model has
>>> reduced autocorrelation.
>>>
>>> In addition to that, I plan to show the correlograms of the model
>>> residuals both non-spatial and spatial GLMs.
>>>
>>> I would like to ask which function is a better choice for showing the
>>> correlograms. Should I use correlog{ncf} or sp.correlogram{spdep}. From
>>> what I know, calculating Moran's I require definition of a neighbourhood
>>> and a specific weighting scheme. Does anyone know what is the default
>>> neighbourhood and weighting scheme of correlog()? Is it - if I specify
>>> an increment of 100km, then, all points within 0-100, and then 100-200,
>>> etc, are considered neighbours with a binary weighting scheme for each
>>> distance class?
>>
>> The ncf correlog() uses many nxn matrices, and computes the bands by:
>>
>> dkl <- ceiling(dmat/increment)
>>
>> where dmat is a lower triangle distance matrix, increment is the band
>> width, and dkl has the same form as dmat (it says which distance band the
>> moran pairs in the lower triangle crossproduct matrix used belong to).
>>
>> As you can see, the source code is the documentation here.
>>
>>>
>>> For sp.correlogram, can I specify the nb object defined by min:0km,
>>> max:100km, and use a lag order of, for example 50, to plot the
>>> correlogram of my spatial model (which has a neighbourhood distance of
>>> 1600 km)?
>>>
>>> For both functions, it seems that there is no way to incorporate my
>>> inverse- distance weighting scheme that I used in my spatial models. Is
>>> this of practical concern if I intend to plot my correlograms?
>>>
>>> Lastly I have a side question regarding correlograms. When we see
>>> distances of, e.g., 100, 200, 300, etc (the increment or lag distance is
>>> 100), on the X-axis of a spatial correlogram, does the point at 200
>>> refer to correlations between neighbours of distance 100-200km apart? Or
>>> does it include the first 100km as well (i.e., correlations between
>>> neighbours of distance 0-200km apart)?
>>
>> In general, the pairs of distances within that band (or lag order). But
>> check the code to be sure.
>>
>> Roger
>>
>>>
>>> Sorry for the long post. Many thanks for reading, I really appreciate
>>> it. I know some are really basic questions but I can't find any answers
>>> to my questions on google or searching through the list.
>>>
>>> Many thanks,
>>> Xingli
>>>
>>>
>>
>> --
>> Roger Bivand
>> Economic Geography Section, Department of Economics, Norwegian School of
>> Economics and Business Administration, Helleveien 30, N-5045 Bergen,
>> Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
>> e-mail: Roger.Bivand at nhh.no
>>
>>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Roger.Bivand at nhh.no  Thu Jan 29 16:21:46 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 29 Jan 2009 16:21:46 +0100 (CET)
Subject: [R-sig-Geo] Neighborhood distance calculator
In-Reply-To: <d5081b140901290630k55eeef9bs387e3fdc43156a50@mail.gmail.com>
References: <d5081b140901290630k55eeef9bs387e3fdc43156a50@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901291617250.20895@reclus.nhh.no>

On Thu, 29 Jan 2009, Kumudan wrote:

> Hi all,
>
> I am new to R, hence this question. I have a set of points with X and
> Y coordinates. I would like to build an R code to calculate the
> distances of points within a specified neighborhood (circular range)
> for each point. I would like the code to be a function, so that I can
> call the function, specifying parameters (data file, distance), from
> another piece of code. Also, I would like the output to be as:
>
> output = list(array)
> .........code...........
> ........new code.....
> return(output)
>
> Something like this--
> [[1496]]
> [1] 1490 1491 1492 1493 1494 1495
>
> The most important thing, however, is that I want to run the code for
> 100,000+ points. The current code I have calculates the neighborhood
> distances for all the points with ever point, and then selects only
> those points within the specified distance parameter. This code
> crashes when I have over 40,000 points. Therefore, I need to figure
> out a way to preclude the step where it calculates all of the paired
> distances, and rather only those points within the specified distance
> parameter. Please, see below for the existing code, and a sample data.
> Thanks a lot for your time and effort.

By crash, you mean stops because you have run out of memory, right?

Try dnearneigh() and nbdists() in spdep, they should work OK.

Roger

PS. Please don't attach large data sets to messages to the list, sending 
85K to 1000+ addressees is environmentally unfriendly (big carbon 
footprint) I believe.

>
> Best,
> Kumudan
>
> Kumudan Grubh
> EEB Graduate student
> Iowa State University
>
> -------------------------------------------------------------------------------------------------------------------------------------------------------
> #--Code--
> #transform coordinates in kilometers, and redefine origin
> newx=(XCOORD-min(XCOORD))/1000
> newy=(YCOORD-min(YCOORD))/1000
> plot(newx,newy,pch=20,xlab="X coordinate (km)",ylab="Y coordinate (km)")
>
> #set of new locations to be used from here on
> tr.locs=cbind(newx,newy)
>
> #the functions necessary for estimation are written in an external
> program. All you need to do is to run this program one. To do this,
> you could "source" this code
> source("D:/...../Functions_distance.R")
>
> #define distance-based neighborhood
> nb.tr=dist.neighbors(tr.locs,2)
> ----------------------------------------------------------------------------------------------------------------------------------------------------------
> #---Function_distance.R   <- Function to calculate distance of pairs
> of neighbors
> #start by defining neighbors
> library(spatstat)#need this to compute distances between all points in a data
>
> dist.neighbors=function(data,distance)
> #distance is set by user
> {
> #data has the x and y on the first two columns. Could have more than
> two columns, or exactly two columns, it doesn't matter.
> #produces a "list" object with a vector of the neighbors for each location
> #distance defines the range within which we define neighbors
> nd=length(data[,1])
> nbmat=list(array)
> dist=pairdist(data[,1:2])
> for(i in 1:nd){
> nbmat[[i]]=0
>       for(j in 1:nd) if((dist[i,j]<distance)&(i!=j)) nbmat[[i]]=c(nbmat[[i]],j)
>       nbmat[[i]]=nbmat[[i]][nbmat[[i]]!=0]}
> return(nbmat)
> }
> ------------------------------------------------------------------------------------------------------------------------------------
>
> Data
> -----------------------------------------------------------------------------------
> XCOORD  YCOORD
> 544312.87500000000      4851169.00000000000
> 542705.87500000000      4851165.00000000000
> 541068.87500000000      4851155.00000000000
> 537861.81250000000      4851123.00000000000
> 536246.81250000000      4851118.00000000000
> 539476.87500000000      4851116.00000000000
> 534612.81250000000      4851113.00000000000
> 533004.75000000000      4851095.00000000000
> 542714.87500000000      4850363.00000000000
> 543516.87500000000      4850360.00000000000
> 544319.93750000000      4850358.00000000000
> 541883.87500000000      4850353.00000000000
> 541053.87500000000      4850342.50000000000
> 540268.87500000000      4850326.50000000000
> 537866.81250000000      4850313.50000000000
> 538674.87500000000      4850311.50000000000
> 539483.87500000000      4850310.50000000000
> 537060.81250000000      4850310.00000000000
> 536255.81250000000      4850307.00000000000
> 535434.81250000000      4850306.00000000000
> 534614.81250000000      4850305.00000000000
> 533809.81250000000      4850297.00000000000
> 533004.81250000000      4850289.00000000000
> 542716.87500000000      4849553.50000000000
> 541074.87500000000      4849537.50000000000
> 539486.87500000000      4849508.50000000000
> 537867.87500000000      4849507.50000000000
> 536260.81250000000      4849503.50000000000
> 534622.81250000000      4849498.50000000000
> 533009.81250000000      4849483.00000000000
> 542718.93750000000      4848744.50000000000
> 543524.93750000000      4848743.50000000000
> 544331.93750000000      4848743.50000000000
> 541906.87500000000      4848738.50000000000
> 541095.87500000000      4848733.50000000000
> 540292.87500000000      4848720.50000000000
> 539489.87500000000      4848707.50000000000
> 538679.87500000000      4848704.50000000000
> 537869.87500000000      4848702.50000000000
> 536265.81250000000      4848701.50000000000
> 537067.87500000000      4848701.50000000000
> 535447.81250000000      4848697.50000000000
> 534630.81250000000      4848693.50000000000
> 533822.81250000000      4848684.50000000000
> 533014.81250000000      4848676.50000000000
> 532211.81250000000      4848663.50000000000
> 531409.81250000000      4848650.50000000000
> 542724.93750000000      4847938.50000000000
> 541102.87500000000      4847926.50000000000
> 539492.87500000000      4847906.50000000000
> 537874.87500000000      4847896.50000000000
> 536267.87500000000      4847894.50000000000
> 534634.81250000000      4847882.50000000000
> 533016.81250000000      4847869.50000000000
> 531414.81250000000      4847840.50000000000
> 544345.93750000000      4847135.50000000000
> 543538.93750000000      4847133.50000000000
> 542731.93750000000      4847132.50000000000
> 541920.93750000000      4847125.50000000000
> 541109.93750000000      4847119.50000000000
> 540302.87500000000      4847112.50000000000
> 539496.87500000000      4847105.50000000000
> 538688.87500000000      4847097.50000000000
> 537880.87500000000      4847090.50000000000
> 537075.87500000000      4847088.50000000000
> 536270.87500000000      4847087.50000000000
> 535454.87500000000      4847079.50000000000
> 534639.87500000000      4847071.50000000000
> 533829.81250000000      4847067.50000000000
> 533019.81250000000      4847063.50000000000
> 532219.81250000000      4847047.50000000000
> 531420.81250000000      4847031.50000000000
> 544350.93750000000      4846325.50000000000
> 542735.93750000000      4846319.50000000000
> 541112.93750000000      4846307.50000000000
> 539497.87500000000      4846294.50000000000
> 537882.87500000000      4846282.50000000000
> 536267.87500000000      4846277.50000000000
> 534638.87500000000      4846263.50000000000
> 533022.81250000000      4846253.50000000000
> 531424.81250000000      4846221.50000000000
> 544356.93750000000      4845516.50000000000
> 543547.93750000000      4845511.50000000000
> 542739.93750000000      4845507.50000000000
> 541927.93750000000      4845501.50000000000
> 541115.93750000000      4845495.50000000000
> 540307.93750000000      4845489.50000000000
> 539499.93750000000      4845483.50000000000
> 538692.93750000000      4845478.50000000000
> 537885.87500000000      4845474.50000000000
> 537075.87500000000      4845471.50000000000
> 536265.87500000000      4845468.50000000000
> 535451.87500000000      4845462.50000000000
> 534638.87500000000      4845456.50000000000
> 533831.87500000000      4845449.50000000000
> 533025.87500000000      4845443.50000000000
> 532226.81250000000      4845427.50000000000
> 531428.81250000000      4845412.50000000000
> 530621.81250000000      4845407.50000000000
> 529814.81250000000      4845402.50000000000
> 544356.93750000000      4844711.50000000000
> 542738.93750000000      4844704.50000000000
> 541123.93750000000      4844689.50000000000
> 539506.93750000000      4844675.50000000000
> 537893.93750000000      4844664.50000000000
> 536284.87500000000      4844654.50000000000
> 534641.87500000000      4844646.50000000000
> 533027.87500000000      4844634.50000000000
> 531423.87500000000      4844606.50000000000
> 529812.81250000000      4844600.50000000000
> 544357.93750000000      4843907.50000000000
> 543547.93750000000      4843904.50000000000
> 542737.93750000000      4843901.50000000000
> 541934.93750000000      4843892.50000000000
> 541132.93750000000      4843883.50000000000
> 540323.93750000000      4843875.50000000000
> 539514.93750000000      4843868.50000000000
> 538708.93750000000      4843861.50000000000
> 537902.93750000000      4843854.50000000000
> 537102.87500000000      4843847.50000000000
> 536303.87500000000      4843841.50000000000
> 535473.87500000000      4843838.50000000000
> 534644.87500000000      4843836.50000000000
> 533837.87500000000      4843830.50000000000
> 533030.87500000000      4843825.50000000000
> 532224.87500000000      4843813.50000000000
> 531419.87500000000      4843801.50000000000
> 530615.81250000000      4843800.50000000000
> 529811.81250000000      4843799.50000000000
> 544356.93750000000      4843106.50000000000
> 542737.93750000000      4843094.50000000000
> 541133.93750000000      4843075.50000000000
> 539515.93750000000      4843065.50000000000
> 537906.87500000000      4843047.50000000000
> 536303.87500000000      4843031.50000000000
> 534654.87500000000      4843025.50000000000
> 533033.87500000000      4843015.50000000000
> 531419.81250000000      4842993.50000000000
> 529808.81250000000      4842989.50000000000
> 544356.93750000000      4842305.50000000000
> 543547.93750000000      4842296.50000000000
> 542738.93750000000      4842287.50000000000
> 541936.93750000000      4842277.50000000000
> 541134.93750000000      4842268.50000000000
> 540325.93750000000      4842265.50000000000
> 539516.93750000000      4842262.50000000000
> 538713.87500000000      4842251.50000000000
> 537911.87500000000      4842240.50000000000
> 537107.87500000000      4842231.50000000000
> 536304.87500000000      4842222.50000000000
> 535484.87500000000      4842218.50000000000
> 534664.87500000000      4842214.50000000000
> 533850.87500000000      4842210.50000000000
> 533037.87500000000      4842206.50000000000
> 532228.81250000000      4842195.50000000000
> 531419.81250000000      4842185.50000000000
> 530612.81250000000      4842182.50000000000
> 529806.81250000000      4842179.50000000000
> 544356.93750000000      4841500.50000000000
> 542738.93750000000      4841483.50000000000
> 541132.93750000000      4841463.50000000000
> 539520.93750000000      4841454.50000000000
> 537913.87500000000      4841433.50000000000
> 536304.87500000000      4841418.50000000000
> 534667.87500000000      4841408.50000000000
> 533040.81250000000      4841393.50000000000
> 531425.81250000000      4841373.50000000000
> 529811.81250000000      4841367.50000000000
> 544356.93750000000      4840695.50000000000
> 543547.93750000000      4840687.50000000000
> 542739.93750000000      4840680.50000000000
> 541934.93750000000      4840669.50000000000
> 541130.93750000000      4840658.50000000000
> 540327.93750000000      4840652.50000000000
> 539525.87500000000      4840647.50000000000
> 538720.87500000000      4840637.50000000000
> 537915.87500000000      4840627.50000000000
> 537109.87500000000      4840621.50000000000
> 536304.87500000000      4840615.50000000000
> 535487.87500000000      4840609.50000000000
> 534670.87500000000      4840603.50000000000
> 533856.81250000000      4840591.50000000000
> 533043.81250000000      4840580.50000000000
> 532237.81250000000      4840571.50000000000
> 531431.81250000000      4840562.50000000000
> 530624.81250000000      4840559.50000000000
> 529817.81250000000      4840556.50000000000
> 544357.93750000000      4839892.50000000000
> 542743.93750000000      4839876.50000000000
> 541131.93750000000      4839852.50000000000
> 539528.87500000000      4839840.50000000000
> 537916.87500000000      4839821.50000000000
> 536303.87500000000      4839804.50000000000
> 534672.81250000000      4839794.50000000000
> 533050.81250000000      4839778.50000000000
> 531440.81250000000      4839759.50000000000
> 529825.81250000000      4839749.50000000000
> 544358.93750000000      4839089.50000000000
> 543552.93750000000      4839080.50000000000
> 542747.93750000000      4839072.50000000000
> 541940.87500000000      4839059.50000000000
> 541133.87500000000      4839046.50000000000
> 540332.87500000000      4839040.50000000000
> 539531.87500000000      4839034.50000000000
> 538724.87500000000      4839024.50000000000
> 537918.87500000000      4839015.50000000000
> 537110.87500000000      4839004.50000000000
> 536303.87500000000      4838994.50000000000
> 535489.81250000000      4838990.50000000000
> 534675.81250000000      4838986.50000000000
> 533866.81250000000      4838981.50000000000
> 533057.81250000000      4838976.50000000000
> 532253.81250000000      4838966.50000000000
> 531450.81250000000      4838957.50000000000
> 530642.81250000000      4838949.50000000000
> 529834.81250000000      4838942.50000000000
> 544359.93750000000      4838278.50000000000
> 542747.87500000000      4838263.50000000000
> 541137.87500000000      4838242.50000000000
> 539534.87500000000      4838228.50000000000
> 537918.87500000000      4838210.50000000000
> 536303.87500000000      4838187.50000000000
> 534680.81250000000      4838174.50000000000
> 533064.81250000000      4838165.50000000000
> 531457.81250000000      4838148.50000000000
> 529837.75000000000      4838137.50000000000
> 544360.93750000000      4837467.50000000000
> 543553.87500000000      4837460.50000000000
> 542747.87500000000      4837454.50000000000
> 541944.87500000000      4837446.50000000000
> 541142.87500000000      4837438.50000000000
> 540339.87500000000      4837430.50000000000
> 539537.87500000000      4837422.50000000000
> 538728.87500000000      4837413.50000000000
> 537919.87500000000      4837405.50000000000
> 537111.87500000000      4837392.50000000000
> 536303.81250000000      4837380.50000000000
> 535494.81250000000      4837371.50000000000
> 534685.81250000000      4837362.50000000000
> 533878.81250000000      4837358.50000000000
> 533071.81250000000      4837354.50000000000
> 532268.81250000000      4837347.50000000000
> 531465.81250000000      4837340.50000000000
> 530653.75000000000      4837336.50000000000
> 529841.75000000000      4837333.50000000000
> 544362.87500000000      4836662.50000000000
> 542744.87500000000      4836643.50000000000
> 541137.87500000000      4836632.50000000000
> 539532.87500000000      4836618.50000000000
> 537914.87500000000      4836595.50000000000
> 536301.81250000000      4836574.50000000000
> 534692.81250000000      4836553.50000000000
> 533075.81250000000      4836547.50000000000
> 531468.75000000000      4836535.50000000000
> 544365.87500000000      4835857.50000000000
> 544365.87500000000      4835857.50000000000
> 543553.87500000000      4835845.50000000000
> 542742.87500000000      4835833.50000000000
> 541937.87500000000      4835830.50000000000
> 541133.87500000000      4835827.50000000000
> 540330.87500000000      4835821.50000000000
> 539528.87500000000      4835815.50000000000
> 538718.87500000000      4835800.50000000000
> 537909.81250000000      4835785.50000000000
> 537104.81250000000      4835777.50000000000
> 536300.81250000000      4835769.50000000000
> 535499.81250000000      4835756.50000000000
> 534699.81250000000      4835744.50000000000
> 533889.81250000000      4835742.50000000000
> 533080.81250000000      4835740.50000000000
> 532275.75000000000      4835735.50000000000
> 531471.75000000000      4835731.50000000000
> 544370.87500000000      4835052.50000000000
> 542750.87500000000      4835025.50000000000
> 541144.87500000000      4835014.50000000000
> 539538.87500000000      4835004.50000000000
> 537922.81250000000      4834987.50000000000
> 536315.81250000000      4834974.50000000000
> 544376.87500000000      4834248.50000000000
> 543567.87500000000      4834232.50000000000
> 542759.87500000000      4834217.50000000000
> 541957.87500000000      4834209.50000000000
> 541156.87500000000      4834201.50000000000
> 540352.87500000000      4834197.50000000000
> 539549.87500000000      4834193.50000000000
> 538742.81250000000      4834191.50000000000
> 537936.81250000000      4834190.50000000000
> 537133.81250000000      4834185.50000000000
> 536331.81250000000      4834180.50000000000
> 544384.87500000000      4833445.50000000000
> 542774.87500000000      4833414.50000000000
> 541167.87500000000      4833395.50000000000
> 539561.81250000000      4833387.50000000000
> 537946.81250000000      4833385.50000000000
> 544392.87500000000      4832643.50000000000
> 543590.87500000000      4832627.50000000000
> 542789.87500000000      4832612.50000000000
> 541984.87500000000      4832600.50000000000
> 541179.87500000000      4832589.50000000000
> 540376.81250000000      4832585.50000000000
> 539573.81250000000      4832581.50000000000
> 537957.81250000000      4832580.50000000000
> 538765.81250000000      4832580.50000000000
> 544401.87500000000      4831836.50000000000
> 542796.87500000000      4831805.50000000000
> 544410.87500000000      4831029.50000000000
> 543607.81250000000      4831014.50000000000
> 542804.81250000000      4830999.50000000000
> 544426.81250000000      4829417.50000000000
> 544432.81250000000      4828612.50000000000
> 544439.81250000000      4827808.50000000000
> 544445.81250000000      4827000.50000000000
> 544451.81250000000      4826193.50000000000
> 581262.12500000000      4851357.00000000000
> 579658.12500000000      4851338.00000000000
> 574847.12500000000      4851324.00000000000
> 576447.12500000000      4851320.00000000000
> 573257.12500000000      4851317.00000000000
> 578046.12500000000      4851312.00000000000
> 570057.12500000000      4851309.00000000000
> 571656.12500000000      4851308.00000000000
> 568458.12500000000      4851294.00000000000
> 566851.12500000000      4851277.00000000000
> 565256.06250000000      4851271.00000000000
> 563617.06250000000      4851230.00000000000
> 555586.00000000000      4851224.00000000000
> 560412.06250000000      4851220.00000000000
> 562020.06250000000      4851220.00000000000
> 547498.93750000000      4851208.00000000000
> 558822.06250000000      4851206.00000000000
> 557185.06250000000      4851198.00000000000
> 553966.00000000000      4851194.00000000000
> 552367.00000000000      4851191.00000000000
> 550727.00000000000      4851184.00000000000
> 549115.93750000000      4851169.00000000000
> 545907.93750000000      4851158.00000000000
> 581275.12500000000      4850554.00000000000
> 582081.18750000000      4850551.00000000000
> 580473.12500000000      4850543.50000000000
> 579671.12500000000      4850534.00000000000
> 578866.12500000000      4850522.00000000000
> 574862.12500000000      4850519.00000000000
> 573268.12500000000      4850518.00000000000
> 574065.12500000000      4850518.00000000000
> 572473.12500000000      4850516.00000000000
> 575664.12500000000      4850516.00000000000
> 571679.12500000000      4850515.00000000000
> 570877.12500000000      4850513.00000000000
> 576466.12500000000      4850513.00000000000
> 570075.12500000000      4850512.00000000000
> 577263.12500000000      4850512.00000000000
> 578061.12500000000      4850511.00000000000
> 569274.12500000000      4850500.00000000000
> 565267.12500000000      4850489.00000000000
> 568473.12500000000      4850489.00000000000
> 566067.12500000000      4850485.00000000000
> 567670.12500000000      4850485.00000000000
> 566867.12500000000      4850482.00000000000
> 564447.06250000000      4850470.00000000000
> 563627.06250000000      4850451.00000000000
> 562825.06250000000      4850442.00000000000
> 562023.06250000000      4850434.00000000000
> 561219.06250000000      4850433.00000000000
> 560415.06250000000      4850432.00000000000
> 559616.06250000000      4850417.00000000000
> 555585.00000000000      4850415.00000000000
> 556381.06250000000      4850404.00000000000
> 558817.06250000000      4850403.00000000000
> 547497.93750000000      4850402.00000000000
> 554779.00000000000      4850399.00000000000
> 557997.06250000000      4850398.00000000000
> 557178.06250000000      4850394.00000000000
> 553974.00000000000      4850383.00000000000
> 548305.93750000000      4850382.00000000000
> 546706.93750000000      4850380.00000000000
> 553167.00000000000      4850379.00000000000
> 552361.00000000000      4850375.00000000000
> 551542.00000000000      4850371.00000000000
> 550723.00000000000      4850367.00000000000
> 549917.93750000000      4850365.00000000000
> 549113.93750000000      4850363.00000000000
> 544319.93750000000      4850358.00000000000
> 545117.93750000000      4850358.00000000000
> 545916.93750000000      4850358.00000000000
> 581285.18750000000      4849747.50000000000
> 579682.12500000000      4849730.50000000000
> 578075.12500000000      4849716.00000000000
> 571683.12500000000      4849713.00000000000
> 573270.12500000000      4849713.00000000000
> 574880.12500000000      4849712.00000000000
> 576482.12500000000      4849710.00000000000
> 570082.12500000000      4849703.00000000000
> 568476.12500000000      4849680.00000000000
> 566869.12500000000      4849678.00000000000
> 565265.12500000000      4849670.00000000000
> 563624.06250000000      4849641.00000000000
> 562014.06250000000      4849631.00000000000
> 560419.06250000000      4849626.00000000000
> 555591.00000000000      4849603.00000000000
> 558813.06250000000      4849600.00000000000
> 557189.06250000000      4849591.00000000000
> 547512.93750000000      4849587.00000000000
> 553980.00000000000      4849572.00000000000
> 552379.00000000000      4849566.00000000000
> 549146.93750000000      4849562.00000000000
> 550747.00000000000      4849559.00000000000
> 544325.93750000000      4849551.00000000000
> 545921.93750000000      4849547.00000000000
> 582098.18750000000      4848945.50000000000
> 581296.18750000000      4848941.50000000000
> 580495.18750000000      4848934.50000000000
> 579694.12500000000      4848927.50000000000
> 578891.12500000000      4848924.50000000000
> 578089.12500000000      4848921.50000000000
> 577294.12500000000      4848915.00000000000
> 571688.12500000000      4848912.00000000000
> 572480.12500000000      4848910.00000000000
> 573273.12500000000      4848908.00000000000
> 576499.12500000000      4848908.00000000000
> 574085.12500000000      4848907.00000000000
> 575698.12500000000      4848907.00000000000
> 574898.12500000000      4848906.00000000000
> 570888.12500000000      4848903.00000000000
> 570089.12500000000      4848895.00000000000
> 569284.12500000000      4848883.00000000000
> 566872.12500000000      4848875.00000000000
> 567675.12500000000      4848873.00000000000
> 568479.12500000000      4848872.00000000000
> 566067.12500000000      4848863.00000000000
> 565263.12500000000      4848851.00000000000
> 564442.12500000000      4848841.00000000000
> 563621.06250000000      4848832.00000000000
> 562813.06250000000      4848830.00000000000
> 562006.06250000000      4848829.00000000000
> 561214.06250000000      4848825.00000000000
> 560423.06250000000      4848821.00000000000
> 559616.06250000000      4848809.00000000000
> 558810.06250000000      4848798.00000000000
> 558005.06250000000      4848793.00000000000
> 555597.06250000000      4848792.00000000000
> 556399.06250000000      4848790.00000000000
> 557201.06250000000      4848789.00000000000
> 554791.00000000000      4848777.00000000000
> 547527.93750000000      4848773.00000000000
> 548353.93750000000      4848767.00000000000
> 549181.00000000000      4848762.00000000000
> 553986.00000000000      4848762.00000000000
> 553192.00000000000      4848760.00000000000
> 552398.00000000000      4848758.00000000000
> 549976.00000000000      4848757.00000000000
> 546727.93750000000      4848755.00000000000
> 551584.00000000000      4848755.00000000000
> 550771.00000000000      4848752.00000000000
> 544331.93750000000      4848743.50000000000
> 545129.93750000000      4848739.50000000000
> 545927.93750000000      4848736.50000000000
> 581304.18750000000      4848141.50000000000
> 579704.18750000000      4848128.50000000000
> 578099.12500000000      4848122.50000000000
> 576514.12500000000      4848111.50000000000
> 571691.12500000000      4848109.00000000000
> 574905.12500000000      4848106.00000000000
> 573278.12500000000      4848105.00000000000
> 570091.12500000000      4848091.00000000000
> 568484.12500000000      4848071.00000000000
> 566875.12500000000      4848065.00000000000
> 565260.12500000000      4848050.00000000000
> 563618.12500000000      4848033.00000000000
> 562005.06250000000      4848027.00000000000
> 560415.06250000000      4848025.00000000000
> 558817.06250000000      4847990.00000000000
> 555600.06250000000      4847988.00000000000
> 557207.06250000000      4847985.00000000000
> 547538.93750000000      4847963.50000000000
> 553994.00000000000      4847960.00000000000
> 549177.00000000000      4847951.00000000000
> 552398.00000000000      4847951.00000000000
> 550783.00000000000      4847949.00000000000
> 544338.93750000000      4847939.50000000000
> 545939.93750000000      4847935.50000000000
> 582117.18750000000      4847351.50000000000
> 581312.18750000000      4847341.50000000000
> 580513.18750000000      4847335.50000000000
> 579715.18750000000      4847330.50000000000
> 578912.18750000000      4847327.50000000000
> 578109.12500000000      4847324.50000000000
> 577319.12500000000      4847320.50000000000
> 576530.12500000000      4847316.50000000000
> 575721.12500000000      4847311.50000000000
> 574913.12500000000      4847306.50000000000
> 571694.12500000000      4847306.00000000000
> 572488.12500000000      4847304.00000000000
> 574098.12500000000      4847304.00000000000
> 573283.12500000000      4847302.00000000000
> 570893.12500000000      4847297.00000000000
> 570093.12500000000      4847288.00000000000
> 569291.12500000000      4847279.00000000000
> 568490.12500000000      4847271.00000000000
> 567684.12500000000      4847263.00000000000
> 566878.12500000000      4847255.00000000000
> 566068.12500000000      4847252.00000000000
> 565258.12500000000      4847250.00000000000
> 564436.12500000000      4847242.00000000000
> 563615.12500000000      4847234.00000000000
> 560408.06250000000      4847230.00000000000
> 562809.12500000000      4847229.00000000000
> 561206.06250000000      4847227.00000000000
> 562004.06250000000      4847225.00000000000
> 559616.06250000000      4847206.00000000000
> 555604.06250000000      4847184.00000000000
> 556409.06250000000      4847183.00000000000
> 558824.06250000000      4847183.00000000000
> 557214.06250000000      4847182.00000000000
> 558019.06250000000      4847182.00000000000
> 554803.06250000000      4847171.00000000000
> 554002.00000000000      4847158.00000000000
> 547551.00000000000      4847154.50000000000
> 553200.00000000000      4847151.00000000000
> 548362.00000000000      4847147.50000000000
> 550795.00000000000      4847146.00000000000
> 551596.00000000000      4847145.00000000000
> 552398.00000000000      4847145.00000000000
> 546751.93750000000      4847144.50000000000
> 549984.00000000000      4847142.50000000000
> 549173.00000000000      4847140.50000000000
> 544345.93750000000      4847135.50000000000
> 545148.93750000000      4847134.50000000000
> 545952.93750000000      4847134.50000000000
> 581323.18750000000      4846533.50000000000
> 579715.18750000000      4846521.50000000000
> 578112.18750000000      4846514.50000000000
> 576527.12500000000      4846510.50000000000
> 571699.12500000000      4846503.00000000000
> 574912.12500000000      4846502.50000000000
> 573294.12500000000      4846494.50000000000
> 570096.12500000000      4846484.00000000000
> 568496.12500000000      4846467.00000000000
> 566875.12500000000      4846448.00000000000
> 565251.12500000000      4846440.00000000000
> 563618.12500000000      4846427.00000000000
> 562012.06250000000      4846418.00000000000
> 560412.06250000000      4846401.00000000000
> 558834.06250000000      4846375.00000000000
> 557234.06250000000      4846372.00000000000
> 555632.06250000000      4846365.00000000000
> 554011.06250000000      4846350.00000000000
> 547566.00000000000      4846343.50000000000
> 552409.00000000000      4846342.00000000000
> 550802.00000000000      4846334.50000000000
> 549183.00000000000      4846333.50000000000
> 545957.93750000000      4846332.50000000000
> 582140.18750000000      4845730.50000000000
> 581335.18750000000      4845725.50000000000
> 580525.18750000000      4845719.50000000000
> 579716.18750000000      4845713.50000000000
> 578916.18750000000      4845708.50000000000
> 576525.12500000000      4845705.50000000000
> 577320.18750000000      4845704.50000000000
> 578116.18750000000      4845704.50000000000
> 575718.12500000000      4845701.50000000000
> 571704.12500000000      4845699.50000000000
> 574912.12500000000      4845698.50000000000
> 572504.12500000000      4845693.50000000000
> 574108.12500000000      4845692.50000000000
> 570901.12500000000      4845689.50000000000
> 573305.12500000000      4845687.50000000000
> 570099.12500000000      4845681.00000000000
> 569300.12500000000      4845672.00000000000
> 568502.12500000000      4845664.00000000000
> 567687.12500000000      4845653.00000000000
> 566873.12500000000      4845642.00000000000
> 566059.12500000000      4845636.00000000000
> 565245.12500000000      4845630.00000000000
> 564433.12500000000      4845625.00000000000
> 563622.12500000000      4845621.00000000000
> 562821.12500000000      4845616.00000000000
> 562021.12500000000      4845611.00000000000
> 561218.06250000000      4845591.00000000000
> 560416.06250000000      4845572.00000000000
> 559630.06250000000      4845569.00000000000
> 558844.06250000000      4845567.00000000000
> 558049.06250000000      4845564.00000000000
> 557255.06250000000      4845562.00000000000
> 556457.06250000000      4845554.00000000000
> 555660.06250000000      4845547.00000000000
> 554840.06250000000      4845544.00000000000
> 554021.06250000000      4845541.50000000000
> 553221.00000000000      4845539.50000000000
> 552421.00000000000      4845538.50000000000
> 547582.00000000000      4845532.50000000000
> 546773.00000000000      4845531.50000000000
> 551615.00000000000      4845531.50000000000
> 545964.00000000000      4845530.50000000000
> 548388.00000000000      4845529.50000000000
> 549194.00000000000      4845527.50000000000
> 550001.00000000000      4845525.50000000000
> 550809.00000000000      4845524.50000000000
> 545159.93750000000      4845523.50000000000
> 544356.93750000000      4845516.50000000000
> 581346.18750000000      4844925.50000000000
> 576526.18750000000      4844915.50000000000
> 579720.18750000000      4844914.50000000000
> 578115.18750000000      4844909.50000000000
> 574928.12500000000      4844898.50000000000
> 571709.12500000000      4844888.50000000000
> 573319.12500000000      4844886.50000000000
> 570102.12500000000      4844857.50000000000
> 568503.12500000000      4844856.50000000000
> 566896.12500000000      4844830.00000000000
> 562012.12500000000      4844826.00000000000
> 565276.12500000000      4844819.00000000000
> 563629.12500000000      4844816.00000000000
> 560396.06250000000      4844803.00000000000
> 558820.06250000000      4844781.00000000000
> 557234.06250000000      4844754.00000000000
> 555650.06250000000      4844752.50000000000
> 554026.06250000000      4844749.50000000000
> 545963.00000000000      4844748.50000000000
> 552433.00000000000      4844746.50000000000
> 547587.00000000000      4844733.50000000000
> 549203.00000000000      4844717.50000000000
> 550818.00000000000      4844702.50000000000
> 582163.18750000000      4844137.50000000000
> 576528.12500000000      4844126.50000000000
> 581357.18750000000      4844125.50000000000
> 577321.18750000000      4844120.50000000000
> 580540.18750000000      4844120.50000000000
> 578115.18750000000      4844115.50000000000
> 578919.18750000000      4844115.50000000000
> 579724.18750000000      4844115.50000000000
> 575736.12500000000      4844112.50000000000
> 574945.12500000000      4844099.50000000000
> 574139.12500000000      4844092.50000000000
> 573333.12500000000      4844086.50000000000
> 572523.12500000000      4844082.50000000000
> 571714.12500000000      4844078.50000000000
> 570910.12500000000      4844056.50000000000
> 568504.12500000000      4844049.50000000000
> 569305.12500000000      4844042.50000000000
> 562003.12500000000      4844041.00000000000
> 561189.06250000000      4844038.00000000000
> 570106.12500000000      4844035.50000000000
> 560376.06250000000      4844035.00000000000
> 567712.12500000000      4844033.50000000000
> 562820.12500000000      4844026.00000000000
> 566920.12500000000      4844018.50000000000
> 559586.06250000000      4844015.00000000000
> 566114.12500000000      4844013.00000000000
> 563637.12500000000      4844012.00000000000
> 564472.12500000000      4844010.00000000000
> 565308.12500000000      4844008.00000000000
> 558796.06250000000      4843996.00000000000
> 558004.06250000000      4843971.00000000000
> 545962.00000000000      4843967.50000000000
> 555640.06250000000      4843958.50000000000
> 554032.06250000000      4843957.50000000000
> 554836.06250000000      4843957.50000000000
> 553239.06250000000      4843955.50000000000
> 552446.00000000000      4843954.50000000000
> 556426.06250000000      4843952.50000000000
> 546777.00000000000      4843950.50000000000
> 557213.06250000000      4843946.50000000000
> 545160.00000000000      4843937.50000000000
> 547592.00000000000      4843934.50000000000
> 548402.00000000000      4843921.50000000000
> 551636.00000000000      4843917.50000000000
> 549213.00000000000      4843908.50000000000
> 544357.93750000000      4843907.50000000000
> 550020.00000000000      4843894.50000000000
> 550827.00000000000      4843881.50000000000
> 581372.18750000000      4843321.50000000000
> 576554.12500000000      4843318.50000000000
> 578144.12500000000      4843307.50000000000
> 579753.12500000000      4843307.50000000000
> 574958.12500000000      4843303.50000000000
> 573341.12500000000      4843282.50000000000
> 571723.12500000000      4843267.50000000000
> 568510.12500000000      4843239.50000000000
> 562005.06250000000      4843235.00000000000
> 570114.12500000000      4843231.50000000000
> 560386.06250000000      4843228.00000000000
> 566916.12500000000      4843211.50000000000
> 563643.06250000000      4843210.00000000000
> 565305.12500000000      4843205.00000000000
> 558784.06250000000      4843194.00000000000
> 545978.00000000000      4843161.50000000000
> 555639.06250000000      4843157.50000000000
> 552444.00000000000      4843149.50000000000
> 554037.00000000000      4843147.50000000000
> 557208.06250000000      4843137.50000000000
> 547616.00000000000      4843134.50000000000
> 549224.00000000000      4843111.50000000000
> 550848.00000000000      4843084.50000000000
> 581387.12500000000      4842517.50000000000
> 576581.12500000000      4842511.50000000000
> 575776.12500000000      4842509.50000000000
> 574971.12500000000      4842508.50000000000
> 580584.12500000000      4842508.50000000000
> 577377.12500000000      4842505.50000000000
> 579782.12500000000      4842500.50000000000
> 578174.12500000000      4842499.50000000000
> 578978.12500000000      4842499.50000000000
> 574160.12500000000      4842493.50000000000
> 573349.12500000000      4842479.50000000000
> 572540.12500000000      4842468.50000000000
> 571732.12500000000      4842457.50000000000
> 570927.12500000000      4842442.50000000000
> 568516.12500000000      4842430.50000000000
> 562007.06250000000      4842430.00000000000
> 569319.12500000000      4842429.50000000000
> 570122.12500000000      4842428.50000000000
> 561202.06250000000      4842425.00000000000
> 560397.06250000000      4842421.00000000000
> 562828.06250000000      4842419.00000000000
> 567714.12500000000      4842417.50000000000
> 563649.06250000000      4842408.00000000000
> 559584.06250000000      4842407.00000000000
> 564476.06250000000      4842405.00000000000
> 566913.06250000000      4842404.50000000000
> 566108.06250000000      4842403.50000000000
> 565303.06250000000      4842402.50000000000
> 558772.06250000000      4842393.00000000000
> 557987.06250000000      4842360.50000000000
> 555639.06250000000      4842356.50000000000
> 545993.93750000000      4842355.50000000000
> 554841.00000000000      4842347.50000000000
> 552442.00000000000      4842345.50000000000
> 546817.00000000000      4842344.50000000000
> 556421.06250000000      4842342.50000000000
> 553242.00000000000      4842341.50000000000
> 554043.00000000000      4842338.50000000000
> 547641.00000000000      4842334.50000000000
> 545174.93750000000      4842330.50000000000
> 557203.06250000000      4842329.50000000000
> 548438.00000000000      4842324.50000000000
> 551655.00000000000      4842316.50000000000
> 549235.00000000000      4842315.50000000000
> 544356.93750000000      4842305.50000000000
> 550052.00000000000      4842301.50000000000
> 550869.00000000000      4842287.50000000000
> 581398.12500000000      4841720.50000000000
> 576589.12500000000      4841709.50000000000
> 579794.12500000000      4841702.50000000000
> 574973.12500000000      4841701.50000000000
> 578196.12500000000      4841697.50000000000
> 573357.12500000000      4841672.50000000000
> 571748.12500000000      4841652.50000000000
> 568517.06250000000      4841624.50000000000
> 570131.06250000000      4841624.50000000000
> 562021.06250000000      4841618.00000000000
> 560402.06250000000      4841610.00000000000
> 563673.06250000000      4841604.00000000000
> 566917.06250000000      4841595.50000000000
> 565297.06250000000      4841593.50000000000
> 558787.06250000000      4841588.00000000000
> 555644.00000000000      4841557.50000000000
> 554047.00000000000      4841548.50000000000
> 546000.93750000000      4841545.50000000000
> 552442.00000000000      4841544.50000000000
> 557225.06250000000      4841542.50000000000
> 547637.93750000000      4841530.50000000000
> 549244.00000000000      4841505.50000000000
> 544356.93750000000      4841500.50000000000
> 550860.00000000000      4841487.50000000000
> 581409.12500000000      4840923.50000000000
> 580607.12500000000      4840914.50000000000
> 576597.12500000000      4840907.50000000000
> 579806.12500000000      4840905.50000000000
> 577408.12500000000      4840901.50000000000
> 575786.12500000000      4840900.50000000000
> 579012.12500000000      4840900.50000000000
> 578219.12500000000      4840895.50000000000
> 574976.12500000000      4840894.50000000000
> 574171.12500000000      4840879.50000000000
> 573366.12500000000      4840865.50000000000
> 572565.06250000000      4840856.50000000000
> 571764.06250000000      4840847.50000000000
> 570952.06250000000      4840834.50000000000
> 570140.06250000000      4840821.50000000000
> 569329.06250000000      4840819.50000000000
> 568519.06250000000      4840818.50000000000
> 562035.06250000000      4840806.00000000000
> 562866.06250000000      4840803.00000000000
> 567720.06250000000      4840802.50000000000
> 561221.06250000000      4840802.00000000000
> 563697.06250000000      4840800.50000000000
> 560407.06250000000      4840799.00000000000
> 564494.06250000000      4840792.50000000000
> 559604.06250000000      4840791.00000000000
> 566921.06250000000      4840787.50000000000
> 566106.06250000000      4840786.50000000000
> 565292.06250000000      4840785.50000000000
> 558802.06250000000      4840782.50000000000
> 558024.00000000000      4840769.50000000000
> 554051.00000000000      4840758.50000000000
> 554850.00000000000      4840758.50000000000
> 555650.00000000000      4840758.50000000000
> 556448.00000000000      4840757.50000000000
> 557247.00000000000      4840756.50000000000
> 553247.00000000000      4840750.50000000000
> 552443.00000000000      4840743.50000000000
> 546007.93750000000      4840735.50000000000
> 546820.93750000000      4840731.50000000000
> 547634.93750000000      4840727.50000000000
> 545181.93750000000      4840715.50000000000
> 551647.00000000000      4840715.50000000000
> 548443.93750000000      4840711.50000000000
> 549254.00000000000      4840696.50000000000
> 544356.93750000000      4840695.50000000000
> 550052.00000000000      4840692.50000000000
> 550851.00000000000      4840688.50000000000
> 581421.12500000000      4840125.50000000000
> 576605.12500000000      4840110.50000000000
> 579812.12500000000      4840104.50000000000
> 578218.12500000000      4840095.50000000000
> 574986.06250000000      4840081.50000000000
> 573369.06250000000      4840065.50000000000
> 571770.06250000000      4840047.50000000000
> 570151.06250000000      4840026.50000000000
> 568532.06250000000      4840011.50000000000
> 562045.06250000000      4840002.00000000000
> 560424.06250000000      4839997.00000000000
> 563702.06250000000      4839992.50000000000
> 566925.06250000000      4839982.50000000000
> 558824.00000000000      4839981.50000000000
> 565306.06250000000      4839976.50000000000
> 557250.00000000000      4839959.50000000000
> 554044.00000000000      4839949.50000000000
> 555645.00000000000      4839947.50000000000
> 552435.00000000000      4839938.50000000000
> 546011.93750000000      4839931.50000000000
> 547633.93750000000      4839915.50000000000
> 549246.93750000000      4839900.50000000000
> 544357.93750000000      4839892.50000000000
> 550840.00000000000      4839889.50000000000
> 581434.12500000000      4839328.50000000000
> 580626.12500000000      4839316.50000000000
> 576613.06250000000      4839314.50000000000
> 577415.06250000000      4839304.50000000000
> 579819.12500000000      4839304.50000000000
> 579018.06250000000      4839299.50000000000
> 578218.06250000000      4839295.50000000000
> 575805.06250000000      4839291.50000000000
> 574997.06250000000      4839269.50000000000
> 574185.06250000000      4839267.50000000000
> 573373.06250000000      4839265.50000000000
> 572575.06250000000      4839256.50000000000
> 571777.06250000000      4839247.50000000000
> 570970.06250000000      4839239.50000000000
> 570163.06250000000      4839231.50000000000
> 569354.06250000000      4839218.50000000000
> 568546.06250000000      4839205.50000000000
> 562055.06250000000      4839197.50000000000
> 561248.00000000000      4839195.50000000000
> 560441.00000000000      4839195.00000000000
> 562881.06250000000      4839191.50000000000
> 567738.06250000000      4839191.50000000000
> 559643.00000000000      4839187.50000000000
> 563707.06250000000      4839185.50000000000
> 558846.00000000000      4839181.50000000000
> 566930.06250000000      4839177.50000000000
> 564513.06250000000      4839176.50000000000
> 566125.06250000000      4839172.50000000000
> 558050.00000000000      4839171.50000000000
> 565320.06250000000      4839167.50000000000
> 557254.00000000000      4839162.50000000000
> 556447.00000000000      4839149.50000000000
> 554038.00000000000      4839141.50000000000
> 554839.00000000000      4839139.50000000000
> 553232.00000000000      4839137.50000000000
> 555641.00000000000      4839137.50000000000
> 552427.00000000000      4839133.50000000000
> 546015.93750000000      4839128.50000000000
> 546823.93750000000      4839115.50000000000
> 551628.00000000000      4839112.50000000000
> 545186.93750000000      4839108.50000000000
> 549240.93750000000      4839105.50000000000
> 548436.93750000000      4839104.50000000000
> 547632.93750000000      4839103.50000000000
> 550034.93750000000      4839098.50000000000
> 550829.93750000000      4839091.50000000000
> 544358.93750000000      4839089.50000000000
> 581441.06250000000      4838524.50000000000
> 576619.06250000000      4838498.50000000000
> 579823.06250000000      4838498.50000000000
> 578221.06250000000      4838493.50000000000
> 575001.06250000000      4838471.50000000000
> 573380.06250000000      4838463.50000000000
> 571779.06250000000      4838449.50000000000
> 570172.06250000000      4838418.50000000000
> 568563.06250000000      4838402.50000000000
> 562071.00000000000      4838384.50000000000
> 563719.00000000000      4838382.50000000000
> 560457.00000000000      4838380.50000000000
> 566952.06250000000      4838375.50000000000
> 558857.00000000000      4838370.50000000000
> 565342.06250000000      4838356.50000000000
> 557260.00000000000      4838353.50000000000
> 554040.00000000000      4838333.50000000000
> 555656.00000000000      4838332.50000000000
> 552428.93750000000      4838320.50000000000
> 546008.93750000000      4838311.50000000000
> 547626.93750000000      4838295.50000000000
> 549236.93750000000      4838294.50000000000
> 550824.93750000000      4838290.50000000000
> 544359.93750000000      4838278.50000000000
> 581449.06250000000      4837721.50000000000
> 580638.06250000000      4837706.50000000000
> 578224.06250000000      4837692.50000000000
> 579025.06250000000      4837692.50000000000
> 579827.06250000000      4837692.50000000000
> 577424.06250000000      4837687.50000000000
> 576625.06250000000      4837682.50000000000
> 575815.06250000000      4837678.50000000000
> 575006.06250000000      4837674.50000000000
> 574196.06250000000      4837668.50000000000
> 573387.06250000000      4837662.50000000000
> 572584.06250000000      4837656.50000000000
> 571782.06250000000      4837651.50000000000
> 570981.06250000000      4837628.50000000000
> 570181.06250000000      4837606.50000000000
> 569380.06250000000      4837602.50000000000
> 568580.06250000000      4837599.50000000000
> 567777.00000000000      4837586.50000000000
> 563731.00000000000      4837579.50000000000
> 562909.00000000000      4837575.50000000000
> 566975.00000000000      4837574.50000000000
> 562088.00000000000      4837572.50000000000
> 561281.00000000000      4837569.50000000000
> 560474.00000000000      4837567.50000000000
> 559671.00000000000      4837563.50000000000
> 564548.00000000000      4837562.50000000000
> 566170.00000000000      4837560.50000000000
> 558868.00000000000      4837559.50000000000
> 558067.00000000000      4837551.50000000000
> 565365.00000000000      4837546.50000000000
> 557266.00000000000      4837544.50000000000
> 556469.00000000000      4837536.50000000000
> 555672.00000000000      4837528.50000000000
> 554857.00000000000      4837526.50000000000
> 554041.93750000000      4837525.50000000000
> 553236.93750000000      4837516.50000000000
> 552431.93750000000      4837508.50000000000
> 551625.93750000000      4837498.50000000000
> 546002.93750000000      4837494.50000000000
> 546811.93750000000      4837491.50000000000
> 550819.93750000000      4837489.50000000000
> 547620.93750000000      4837488.50000000000
> 550026.93750000000      4837486.50000000000
> 548426.93750000000      4837485.50000000000
> 549233.93750000000      4837483.50000000000
> 545181.93750000000      4837480.50000000000
> 544360.93750000000      4837467.50000000000
> 581448.06250000000      4836922.50000000000
> 579835.06250000000      4836895.50000000000
> 578223.06250000000      4836888.50000000000
> 576630.06250000000      4836881.50000000000
> 575004.06250000000      4836873.50000000000
> 573398.06250000000      4836858.50000000000
> 571790.06250000000      4836850.50000000000
> 570187.00000000000      4836823.50000000000
> 568582.00000000000      4836801.50000000000
> 563734.00000000000      4836780.50000000000
> 566960.00000000000      4836778.50000000000
> 562117.00000000000      4836769.50000000000
> 560503.00000000000      4836759.50000000000
> 565353.00000000000      4836758.50000000000
> 558891.00000000000      4836751.50000000000
> 557286.00000000000      4836736.50000000000
> 555682.93750000000      4836724.50000000000
> 554045.93750000000      4836716.50000000000
> 552432.93750000000      4836704.50000000000
> 550821.93750000000      4836689.50000000000
> 547610.93750000000      4836679.50000000000
> 549224.93750000000      4836678.50000000000
> 545997.93750000000      4836676.50000000000
> 581447.06250000000      4836123.50000000000
> 580645.06250000000      4836111.50000000000
> 579843.06250000000      4836099.50000000000
> 579032.06250000000      4836092.50000000000
> 578222.06250000000      4836085.50000000000
> 577429.06250000000      4836083.50000000000
> 576636.06250000000      4836081.50000000000
> 575819.06250000000      4836076.50000000000
> 575003.06250000000      4836072.50000000000
> 574206.00000000000      4836063.50000000000
> 573409.00000000000      4836054.50000000000
> 572603.00000000000      4836052.50000000000
> 571798.00000000000      4836050.50000000000
> 570995.00000000000      4836045.50000000000
> 570193.00000000000      4836041.50000000000
> 569389.00000000000      4836022.50000000000
> 568585.00000000000      4836004.50000000000
> 567765.00000000000      4835993.50000000000
> 566946.00000000000      4835982.50000000000
> 563737.00000000000      4835981.50000000000
> 564539.00000000000      4835976.50000000000
> 566144.00000000000      4835976.50000000000
> 562942.00000000000      4835973.50000000000
> 565342.00000000000      4835971.50000000000
> 562147.00000000000      4835966.50000000000
> 561340.00000000000      4835958.50000000000
> 560533.00000000000      4835951.50000000000
> 559724.00000000000      4835947.50000000000
> 558915.00000000000      4835943.50000000000
> 558111.00000000000      4835936.50000000000
> 557306.93750000000      4835929.50000000000
> 556499.93750000000      4835925.50000000000
> 555693.93750000000      4835921.50000000000
> 554871.93750000000      4835914.50000000000
> 554049.93750000000      4835907.50000000000
> 553241.93750000000      4835903.50000000000
> 552434.93750000000      4835900.50000000000
> 551628.93750000000      4835895.50000000000
> 550823.93750000000      4835890.50000000000
> 550019.93750000000      4835882.50000000000
> 549215.93750000000      4835874.50000000000
> 548408.93750000000      4835872.50000000000
> 547601.93750000000      4835870.50000000000
> 546796.87500000000      4835864.50000000000
> 545992.87500000000      4835859.50000000000
> 545178.87500000000      4835858.50000000000
> 544365.87500000000      4835857.50000000000
> 544365.87500000000      4835857.50000000000
> 581447.06250000000      4835324.50000000000
> 579842.06250000000      4835300.50000000000
> 578220.00000000000      4835292.50000000000
> 576633.00000000000      4835275.50000000000
> 575012.00000000000      4835267.50000000000
> 573413.00000000000      4835257.50000000000
> 571812.00000000000      4835246.50000000000
> 570202.00000000000      4835244.50000000000
> 568597.00000000000      4835212.50000000000
> 566971.00000000000      4835186.50000000000
> 565357.00000000000      4835176.50000000000
> 563749.00000000000      4835173.50000000000
> 562148.00000000000      4835143.50000000000
> 558920.93750000000      4835137.50000000000
> 557310.93750000000      4835132.50000000000
> 560542.00000000000      4835125.50000000000
> 555701.93750000000      4835118.50000000000
> 552442.93750000000      4835112.50000000000
> 554061.93750000000      4835106.50000000000
> 550832.93750000000      4835101.50000000000
> 549221.93750000000      4835089.50000000000
> 547605.87500000000      4835083.50000000000
> 545994.87500000000      4835073.50000000000
> 581447.06250000000      4834526.50000000000
> 580644.00000000000      4834514.50000000000
> 579842.00000000000      4834502.50000000000
> 579030.00000000000      4834501.50000000000
> 578219.00000000000      4834500.50000000000
> 577424.00000000000      4834484.50000000000
> 576630.00000000000      4834469.50000000000
> 575826.00000000000      4834466.50000000000
> 575022.00000000000      4834463.50000000000
> 574219.00000000000      4834461.50000000000
> 573417.00000000000      4834460.50000000000
> 572621.00000000000      4834451.50000000000
> 570211.00000000000      4834448.50000000000
> 571018.00000000000      4834445.50000000000
> 571826.00000000000      4834443.50000000000
> 569410.00000000000      4834434.50000000000
> 568610.00000000000      4834420.50000000000
> 567803.00000000000      4834405.50000000000
> 566997.00000000000      4834391.50000000000
> 566185.00000000000      4834386.50000000000
> 565373.00000000000      4834382.50000000000
> 564567.00000000000      4834374.50000000000
> 563762.00000000000      4834366.50000000000
> 562956.00000000000      4834343.50000000000
> 557315.93750000000      4834336.50000000000
> 558121.93750000000      4834333.50000000000
> 558927.93750000000      4834331.50000000000
> 556512.93750000000      4834326.50000000000
> 552451.93750000000      4834324.50000000000
> 562150.00000000000      4834321.50000000000
> 551646.93750000000      4834318.50000000000
> 555710.93750000000      4834316.50000000000
> 553262.93750000000      4834315.50000000000
> 559739.93750000000      4834315.50000000000
> 550842.93750000000      4834312.50000000000
> 554892.93750000000      4834311.50000000000
> 561350.93750000000      4834310.50000000000
> 550034.93750000000      4834308.50000000000
> 554074.93750000000      4834306.50000000000
> 549227.87500000000      4834305.50000000000
> 548418.87500000000      4834300.50000000000
> 560551.93750000000      4834299.50000000000
> 547609.87500000000      4834296.50000000000
> 546802.87500000000      4834291.50000000000
> 545996.87500000000      4834287.50000000000
> 545186.87500000000      4834267.50000000000
> 544376.87500000000      4834248.50000000000
> 581457.00000000000      4833732.50000000000
> 579853.00000000000      4833711.50000000000
> 578226.00000000000      4833700.50000000000
> 576636.00000000000      4833667.50000000000
> 575031.00000000000      4833663.50000000000
> 573422.00000000000      4833657.50000000000
> 571827.00000000000      4833650.50000000000
> 570217.00000000000      4833637.50000000000
> 568611.00000000000      4833622.50000000000
> 567003.00000000000      4833596.50000000000
> 565384.00000000000      4833583.50000000000
> 563763.93750000000      4833556.50000000000
> 557330.93750000000      4833529.50000000000
> 558945.93750000000      4833524.50000000000
> 552465.93750000000      4833518.50000000000
> 562156.93750000000      4833514.50000000000
> 555725.93750000000      4833513.50000000000
> 550854.87500000000      4833506.50000000000
> 554079.93750000000      4833505.50000000000
> 549239.87500000000      4833499.50000000000
> 560562.93750000000      4833496.50000000000
> 547621.87500000000      4833489.50000000000
> 546007.87500000000      4833483.50000000000
> 581467.00000000000      4832939.50000000000
> 580666.00000000000      4832930.50000000000
> 579865.00000000000      4832921.50000000000
> 579049.00000000000      4832911.50000000000
> 578233.00000000000      4832901.50000000000
> 577437.00000000000      4832883.50000000000
> 576642.00000000000      4832866.50000000000
> 575841.00000000000      4832865.50000000000
> 575041.00000000000      4832864.50000000000
> 574234.00000000000      4832859.50000000000
> 571828.00000000000      4832858.50000000000
> 572628.00000000000      4832856.50000000000
> 573428.00000000000      4832854.50000000000
> 571026.00000000000      4832842.50000000000
> 570224.00000000000      4832826.50000000000
> 569418.00000000000      4832825.50000000000
> 568612.93750000000      4832824.50000000000
> 567810.93750000000      4832813.50000000000
> 567008.93750000000      4832802.50000000000
> 566201.93750000000      4832793.50000000000
> 565394.93750000000      4832784.50000000000
> 564580.93750000000      4832765.50000000000
> 563766.93750000000      4832747.50000000000
> 562964.93750000000      4832727.50000000000
> 557345.93750000000      4832722.50000000000
> 558154.93750000000      4832719.50000000000
> 558964.93750000000      4832717.50000000000
> 556542.93750000000      4832716.50000000000
> 552479.87500000000      4832712.50000000000
> 555740.93750000000      4832711.50000000000
> 553282.93750000000      4832708.50000000000
> 554912.93750000000      4832708.50000000000
> 562163.93750000000      4832707.50000000000
> 551672.87500000000      4832706.50000000000
> 554085.93750000000      4832705.50000000000
> 559769.93750000000      4832705.50000000000
> 550866.87500000000      4832701.50000000000
> 561368.93750000000      4832700.50000000000
> 550058.87500000000      4832697.50000000000
> 549251.87500000000      4832693.50000000000
> 560574.93750000000      4832693.50000000000
> 548442.87500000000      4832687.50000000000
> 547633.87500000000      4832682.50000000000
> 546825.87500000000      4832681.50000000000
> 546018.87500000000      4832680.50000000000
> 545205.87500000000      4832661.50000000000
> 544392.87500000000      4832643.50000000000
> 581476.00000000000      4832138.50000000000
> 579873.00000000000      4832116.50000000000
> 578245.00000000000      4832101.50000000000
> 576648.00000000000      4832074.50000000000
> 575038.00000000000      4832061.50000000000
> 573441.00000000000      4832052.50000000000
> 571835.93750000000      4832043.50000000000
> 570233.93750000000      4832033.50000000000
> 568621.93750000000      4832028.50000000000
> 567014.93750000000      4832006.50000000000
> 565406.93750000000      4831986.50000000000
> 563776.93750000000      4831957.50000000000
> 557360.93750000000      4831920.50000000000
> 558973.93750000000      4831916.50000000000
> 555755.93750000000      4831910.50000000000
> 552481.87500000000      4831909.50000000000
> 562171.93750000000      4831909.50000000000
> 554087.87500000000      4831898.50000000000
> 550861.87500000000      4831895.50000000000
> 549252.87500000000      4831890.50000000000
> 560583.93750000000      4831890.50000000000
> 547638.87500000000      4831877.50000000000
> 546023.87500000000      4831876.50000000000
> 544401.87500000000      4831836.50000000000
> 581486.00000000000      4831338.50000000000
> 580683.00000000000      4831325.50000000000
> 579881.00000000000      4831312.50000000000
> 579069.00000000000      4831306.50000000000
> 578258.00000000000      4831301.50000000000
> 577455.93750000000      4831292.50000000000
> 576653.93750000000      4831283.50000000000
> 575844.93750000000      4831271.50000000000
> 575035.93750000000      4831259.50000000000
> 574244.93750000000      4831255.50000000000
> 573453.93750000000      4831251.50000000000
> 570243.93750000000      4831240.50000000000
> 572648.93750000000      4831239.50000000000
> 569436.93750000000      4831236.50000000000
> 571043.93750000000      4831234.50000000000
> 568630.93750000000      4831232.50000000000
> 571843.93750000000      4831228.50000000000
> 567825.93750000000      4831221.50000000000
> 567020.93750000000      4831210.50000000000
> 566219.93750000000      4831199.50000000000
> 565418.93750000000      4831188.50000000000
> 564602.93750000000      4831178.50000000000
> 563786.93750000000      4831168.50000000000
> 562983.93750000000      4831140.50000000000
> 557375.93750000000      4831118.50000000000
> 558179.93750000000      4831116.50000000000
> 558983.93750000000      4831115.50000000000
> 556572.87500000000      4831113.50000000000
> 562180.93750000000      4831112.50000000000
> 555770.87500000000      4831109.50000000000
> 552483.87500000000      4831106.50000000000
> 559787.93750000000      4831101.50000000000
> 554930.87500000000      4831100.50000000000
> 561386.93750000000      4831099.50000000000
> 553286.87500000000      4831098.50000000000
> 551670.87500000000      4831097.50000000000
> 554090.87500000000      4831091.50000000000
> 550857.87500000000      4831089.50000000000
> 550055.87500000000      4831088.50000000000
> 549253.87500000000      4831087.50000000000
> 560592.93750000000      4831087.50000000000
> 548448.87500000000      4831080.50000000000
> 547644.87500000000      4831073.50000000000
> 546028.87500000000      4831072.50000000000
> 546836.87500000000      4831072.50000000000
> 545219.87500000000      4831050.50000000000
> 544410.87500000000      4831029.50000000000
> 581499.00000000000      4830538.50000000000
> 579882.93750000000      4830520.50000000000
> 578263.93750000000      4830494.50000000000
> 576656.93750000000      4830485.50000000000
> 575042.93750000000      4830457.50000000000
> 573458.93750000000      4830452.50000000000
> 571849.93750000000      4830437.50000000000
> 570253.93750000000      4830435.50000000000
> 568641.93750000000      4830425.50000000000
> 567027.93750000000      4830403.50000000000
> 565418.93750000000      4830379.50000000000
> 563795.93750000000      4830365.50000000000
> 562196.93750000000      4830319.50000000000
> 557389.87500000000      4830316.50000000000
> 558993.93750000000      4830314.50000000000
> 555783.87500000000      4830310.50000000000
> 560601.93750000000      4830307.50000000000
> 552489.87500000000      4830301.50000000000
> 554100.87500000000      4830297.50000000000
> 550872.87500000000      4830287.50000000000
> 549268.87500000000      4830279.50000000000
> 546043.87500000000      4830263.50000000000
> 547657.87500000000      4830262.50000000000
> 544418.81250000000      4830223.50000000000
> 581511.93750000000      4829738.50000000000
> 580698.93750000000      4829733.50000000000
> 579885.93750000000      4829728.50000000000
> 579077.93750000000      4829708.50000000000
> 576659.93750000000      4829688.50000000000
> 577464.93750000000      4829688.50000000000
> 578270.93750000000      4829688.50000000000
> 575854.93750000000      4829672.50000000000
> 575050.93750000000      4829656.50000000000
> 574257.93750000000      4829654.50000000000
> 573464.93750000000      4829653.50000000000
> 572659.93750000000      4829649.50000000000
> 571855.93750000000      4829646.50000000000
> 571059.93750000000      4829638.50000000000
> 570263.93750000000      4829630.50000000000
> 569457.93750000000      4829624.50000000000
> 568652.93750000000      4829618.50000000000
> 567843.93750000000      4829607.50000000000
> 567035.93750000000      4829597.50000000000
> 566226.93750000000      4829584.50000000000
> 565418.93750000000      4829571.50000000000
> 564611.93750000000      4829567.50000000000
> 563804.93750000000      4829563.50000000000
> 563008.93750000000      4829545.50000000000
> 560611.87500000000      4829528.50000000000
> 561411.93750000000      4829527.50000000000
> 562212.93750000000      4829527.50000000000
> 559807.87500000000      4829521.50000000000
> 557403.87500000000      4829515.50000000000
> 558203.87500000000      4829514.50000000000
> 559004.87500000000      4829514.50000000000
> 556599.87500000000      4829513.50000000000
> 555796.87500000000      4829512.50000000000
> 554953.87500000000      4829507.50000000000
> 554111.87500000000      4829503.50000000000
> 553303.87500000000      4829499.50000000000
> 552496.87500000000      4829496.50000000000
> 551691.87500000000      4829491.50000000000
> 550887.87500000000      4829486.50000000000
> 550085.87500000000      4829478.50000000000
> 549283.87500000000      4829471.50000000000
> 548476.87500000000      4829461.50000000000
> 546059.81250000000      4829455.50000000000
> 546864.81250000000      4829453.50000000000
> 547670.87500000000      4829451.50000000000
> 545242.81250000000      4829436.50000000000
> 544426.81250000000      4829417.50000000000
> 581522.93750000000      4828937.50000000000
> 579898.93750000000      4828926.50000000000
> 578283.93750000000      4828894.50000000000
> 576673.93750000000      4828887.50000000000
> 575063.93750000000      4828860.50000000000
> 573478.93750000000      4828856.50000000000
> 571872.93750000000      4828837.50000000000
> 570274.93750000000      4828820.50000000000
> 568659.93750000000      4828817.50000000000
> 567048.93750000000      4828792.50000000000
> 565432.87500000000      4828770.50000000000
> 563809.87500000000      4828762.50000000000
> 562218.87500000000      4828728.50000000000
> 560620.87500000000      4828723.50000000000
> 559008.87500000000      4828715.50000000000
> 557405.87500000000      4828710.50000000000
> 555793.87500000000      4828708.50000000000
> 554113.87500000000      4828700.50000000000
> 552504.87500000000      4828692.50000000000
> 550893.87500000000      4828679.50000000000
> 549288.87500000000      4828664.50000000000
> 546057.81250000000      4828647.50000000000
> 547675.81250000000      4828646.50000000000
> 581534.93750000000      4828137.50000000000
> 580723.93750000000      4828131.50000000000
> 579912.93750000000      4828125.50000000000
> 579104.93750000000      4828113.50000000000
> 578296.93750000000      4828101.50000000000
> 577491.93750000000      4828094.50000000000
> 576687.93750000000      4828087.50000000000
> 575882.93750000000      4828075.50000000000
> 575077.93750000000      4828064.50000000000
> 574284.93750000000      4828062.50000000000
> 573492.93750000000      4828060.50000000000
> 572690.93750000000      4828044.50000000000
> 571889.93750000000      4828029.50000000000
> 571087.93750000000      4828020.50000000000
> 568667.87500000000      4828016.50000000000
> 569476.87500000000      4828013.50000000000
> 570285.87500000000      4828011.50000000000
> 567864.87500000000      4828002.50000000000
> 567061.87500000000      4827988.50000000000
> 566254.87500000000      4827979.50000000000
> 565447.87500000000      4827970.50000000000
> 564631.87500000000      4827965.50000000000
> 563815.87500000000      4827961.50000000000
> 563019.87500000000      4827945.50000000000
> 562224.87500000000      4827929.50000000000
> 561427.87500000000      4827924.50000000000
> 560630.87500000000      4827919.50000000000
> 559821.87500000000      4827917.50000000000
> 559013.87500000000      4827916.50000000000
> 558210.87500000000      4827911.50000000000
> 557407.87500000000      4827906.50000000000
> 555790.87500000000      4827905.50000000000
> 556598.87500000000      4827905.50000000000
> 554953.87500000000      4827901.50000000000
> 554116.87500000000      4827897.50000000000
> 553314.87500000000      4827892.50000000000
> 552513.87500000000      4827888.50000000000
> 551706.87500000000      4827880.50000000000
> 550899.87500000000      4827872.50000000000
> 550096.81250000000      4827864.50000000000
> 549293.81250000000      4827857.50000000000
> 548486.81250000000      4827849.50000000000
> 547680.81250000000      4827842.50000000000
> 546868.81250000000      4827840.50000000000
> 546056.81250000000      4827839.50000000000
> 545247.81250000000      4827823.50000000000
> 544439.81250000000      4827808.50000000000
> 581547.93750000000      4827342.50000000000
> 579928.93750000000      4827326.50000000000
> 578311.93750000000      4827303.50000000000
> 576700.93750000000      4827288.50000000000
> 575097.87500000000      4827262.50000000000
> 573503.87500000000      4827255.50000000000
> 571901.87500000000      4827229.50000000000
> 570293.87500000000      4827212.50000000000
> 568683.87500000000      4827208.50000000000
> 567078.87500000000      4827184.50000000000
> 565470.87500000000      4827164.50000000000
> 563834.87500000000      4827155.50000000000
> 562230.87500000000      4827134.50000000000
> 560626.87500000000      4827118.50000000000
> 559019.87500000000      4827109.50000000000
> 557407.87500000000      4827100.50000000000
> 555792.87500000000      4827098.50000000000
> 554127.87500000000      4827090.50000000000
> 552523.81250000000      4827076.50000000000
> 550906.81250000000      4827065.50000000000
> 549302.81250000000      4827052.50000000000
> 547691.81250000000      4827037.50000000000
> 546074.81250000000      4827034.50000000000
> 581561.93750000000      4826547.50000000000
> 580752.87500000000      4826537.50000000000
> 579944.87500000000      4826527.50000000000
> 579135.87500000000      4826516.50000000000
> 578327.87500000000      4826506.50000000000
> 577520.87500000000      4826498.50000000000
> 576714.87500000000      4826490.50000000000
> 575915.87500000000      4826475.50000000000
> 575117.87500000000      4826460.50000000000
> 574316.87500000000      4826455.50000000000
> 573515.87500000000      4826450.50000000000
> 572714.87500000000      4826439.50000000000
> 571913.87500000000      4826429.50000000000
> 571107.87500000000      4826421.50000000000
> 570301.87500000000      4826413.50000000000
> 569500.87500000000      4826406.50000000000
> 568699.87500000000      4826400.50000000000
> 567897.87500000000      4826390.50000000000
> 567096.87500000000      4826381.50000000000
> 566295.87500000000      4826370.50000000000
> 565494.87500000000      4826359.50000000000
> 564673.87500000000      4826354.50000000000
> 563853.87500000000      4826350.50000000000
> 563044.87500000000      4826344.50000000000
> 562236.87500000000      4826339.50000000000
> 561429.87500000000      4826328.50000000000
> 560623.87500000000      4826317.50000000000
> 559824.87500000000      4826310.50000000000
> 559026.87500000000      4826303.50000000000
> 558217.87500000000      4826299.50000000000
> 557408.87500000000      4826295.50000000000
> 556601.87500000000      4826293.50000000000
> 555794.87500000000      4826291.50000000000
> 554966.81250000000      4826287.50000000000
> 554138.81250000000      4826284.50000000000
> 553335.81250000000      4826274.50000000000
> 552533.81250000000      4826265.50000000000
> 551723.81250000000      4826261.50000000000
> 550913.81250000000      4826258.50000000000
> 550112.81250000000      4826253.50000000000
> 549311.81250000000      4826248.50000000000
> 548506.81250000000      4826240.50000000000
> 547702.81250000000      4826232.50000000000
> 546897.81250000000      4826230.50000000000
> 546092.81250000000      4826229.50000000000
> 545271.81250000000      4826211.50000000000
> 544451.81250000000      4826193.50000000000
> 581563.87500000000      4825740.50000000000
> 579949.87500000000      4825722.50000000000
> 578340.87500000000      4825707.50000000000
> 576725.87500000000      4825683.50000000000
> 575118.87500000000      4825665.50000000000
> 573522.87500000000      4825647.50000000000
> 571918.87500000000      4825633.50000000000
> 570310.87500000000      4825621.50000000000
> 568704.87500000000      4825603.50000000000
> 567101.87500000000      4825596.50000000000
> 565496.87500000000      4825581.50000000000
> 563853.87500000000      4825546.50000000000
> 562244.87500000000      4825530.50000000000
> 560635.87500000000      4825522.50000000000
> 559024.87500000000      4825504.50000000000
> 557409.81250000000      4825499.50000000000
> 555792.81250000000      4825488.50000000000
> 554144.81250000000      4825480.50000000000
> 552537.81250000000      4825455.50000000000
> 549324.81250000000      4825451.50000000000
> 546093.81250000000      4825424.50000000000
> 547705.81250000000      4825420.50000000000
> 581566.87500000000      4824933.50000000000
> 580760.87500000000      4824925.50000000000
> 579954.87500000000      4824918.50000000000
> 579153.87500000000      4824913.50000000000
> 578353.87500000000      4824909.50000000000
> 577544.87500000000      4824892.50000000000
> 576736.87500000000      4824876.50000000000
> 575928.87500000000      4824873.50000000000
> 575120.87500000000      4824870.50000000000
> 574325.87500000000      4824857.50000000000
> 573530.87500000000      4824844.50000000000
> 572726.87500000000      4824840.50000000000
> 571923.87500000000      4824837.50000000000
> 571121.87500000000      4824833.50000000000
> 570319.87500000000      4824829.50000000000
> 569514.87500000000      4824818.50000000000
> 567106.87500000000      4824812.50000000000
> 567907.87500000000      4824809.50000000000
> 566302.87500000000      4824808.50000000000
> 568709.87500000000      4824807.50000000000
> 565499.87500000000      4824804.50000000000
> 564676.87500000000      4824773.50000000000
> 563854.87500000000      4824743.50000000000
> 563053.87500000000      4824732.50000000000
> 560648.87500000000      4824727.50000000000
> 561450.87500000000      4824724.50000000000
> 562252.87500000000      4824721.50000000000
> 559835.81250000000      4824716.50000000000
> 559023.81250000000      4824705.50000000000
> 557410.81250000000      4824704.50000000000
> 558216.81250000000      4824704.50000000000
> 556600.81250000000      4824694.50000000000
> 555791.81250000000      4824685.50000000000
> 554971.81250000000      4824681.50000000000
> 554151.81250000000      4824677.50000000000
> 553346.81250000000      4824661.50000000000
> 549337.81250000000      4824655.50000000000
> 552541.81250000000      4824645.50000000000
> 548522.81250000000      4824632.50000000000
> 546095.81250000000      4824619.50000000000
> 546901.81250000000      4824614.50000000000
> 547708.81250000000      4824609.50000000000
> 581576.87500000000      4824131.50000000000
> 579957.87500000000      4824114.50000000000
> 578352.87500000000      4824104.50000000000
> 576744.87500000000      4824073.50000000000
> 575129.87500000000      4824064.50000000000
> 573538.87500000000      4824041.50000000000
> 571927.87500000000      4824036.50000000000
> 570323.87500000000      4824023.50000000000
> 567100.87500000000      4824009.50000000000
> 568715.87500000000      4824005.50000000000
> 565496.81250000000      4823998.50000000000
> 563861.81250000000      4823935.50000000000
> 562256.81250000000      4823919.50000000000
> 560644.81250000000      4823918.50000000000
> 557409.81250000000      4823902.50000000000
> 559026.81250000000      4823899.50000000000
> 581587.87500000000      4823329.50000000000
> 580774.87500000000      4823319.50000000000
> 579961.87500000000      4823310.50000000000
> 579156.87500000000      4823305.50000000000
> 578351.87500000000      4823300.50000000000
> 577552.87500000000      4823285.50000000000
> 576753.87500000000      4823271.50000000000
> 575945.87500000000      4823265.50000000000
> 575138.87500000000      4823259.50000000000
> 574342.87500000000      4823249.50000000000
> 573546.81250000000      4823239.50000000000
> 572738.81250000000      4823237.50000000000
> 571931.81250000000      4823235.50000000000
> 571129.81250000000      4823226.50000000000
> 570328.81250000000      4823217.50000000000
> 569525.81250000000      4823210.50000000000
> 567095.81250000000      4823206.50000000000
> 567908.81250000000      4823204.50000000000
> 568722.81250000000      4823203.50000000000
> 566294.81250000000      4823199.50000000000
> 565494.81250000000      4823193.50000000000
> 564681.81250000000      4823160.50000000000
> 563869.81250000000      4823128.50000000000
> 563065.81250000000      4823122.50000000000
> 562261.81250000000      4823117.50000000000
> 561451.81250000000      4823113.50000000000
> 560641.81250000000      4823110.50000000000
> 559835.81250000000      4823102.50000000000
> 557408.81250000000      4823100.50000000000
> 558218.81250000000      4823097.50000000000
> 559029.81250000000      4823094.50000000000
> 581599.87500000000      4822531.50000000000
> 579966.81250000000      4822508.50000000000
> 578357.81250000000      4822497.50000000000
> 576757.81250000000      4822472.50000000000
> 575151.81250000000      4822458.50000000000
> 573555.81250000000      4822437.50000000000
> 571940.81250000000      4822435.50000000000
> 570333.81250000000      4822405.50000000000
> 567103.81250000000      4822399.50000000000
> 568721.81250000000      4822397.50000000000
> 565494.81250000000      4822384.50000000000
> 563871.81250000000      4822326.50000000000
> 562260.81250000000      4822314.50000000000
> 560641.81250000000      4822307.50000000000
> 557409.81250000000      4822292.50000000000
> 559029.81250000000      4822291.50000000000
> 581612.81250000000      4821734.50000000000
> 580792.81250000000      4821720.50000000000
> 579972.81250000000      4821707.50000000000
> 579167.81250000000      4821701.50000000000
> 578363.81250000000      4821695.50000000000
> 577562.81250000000      4821684.50000000000
> 576761.81250000000      4821674.50000000000
> 575962.81250000000      4821666.50000000000
> 575164.81250000000      4821658.50000000000
> 574364.81250000000      4821646.50000000000
> 571949.81250000000      4821636.50000000000
> 572756.81250000000      4821635.50000000000
> 573564.81250000000      4821635.50000000000
> 571143.81250000000      4821614.50000000000
> 567111.81250000000      4821593.50000000000
> 570338.81250000000      4821593.50000000000
> 567916.81250000000      4821592.50000000000
> 569529.81250000000      4821592.50000000000
> 568721.81250000000      4821591.50000000000
> 566303.81250000000      4821584.50000000000
> 565495.81250000000      4821575.50000000000
> 564684.81250000000      4821549.50000000000
> 563874.81250000000      4821524.50000000000
> 563067.81250000000      4821518.50000000000
> 562260.81250000000      4821512.50000000000
> 561451.81250000000      4821508.50000000000
> 560642.81250000000      4821505.50000000000
> 559835.81250000000      4821497.50000000000
> 559029.81250000000      4821489.50000000000
> 558219.81250000000      4821487.50000000000
> 557410.81250000000      4821485.50000000000
> 581628.81250000000      4820934.50000000000
> 579995.81250000000      4820910.50000000000
> 578376.81250000000      4820896.50000000000
> 576775.81250000000      4820870.50000000000
> 575176.81250000000      4820855.50000000000
> 573573.81250000000      4820831.50000000000
> 571955.81250000000      4820830.50000000000
> 570349.81250000000      4820789.50000000000
> 568733.81250000000      4820786.50000000000
> 567126.81250000000      4820784.50000000000
> 565506.81250000000      4820769.50000000000
> 563880.81250000000      4820718.50000000000
> 562265.81250000000      4820706.50000000000
> 560652.81250000000      4820695.50000000000
> 559031.81250000000      4820684.50000000000
> 557419.81250000000      4820678.50000000000
> 581644.81250000000      4820135.50000000000
> 580831.81250000000      4820124.50000000000
> 580018.81250000000      4820114.50000000000
> 579204.81250000000      4820105.50000000000
> 578390.81250000000      4820097.50000000000
> 577590.81250000000      4820082.50000000000
> 576790.81250000000      4820067.50000000000
> 575989.81250000000      4820059.50000000000
> 575188.81250000000      4820052.50000000000
> 574385.81250000000      4820040.50000000000
> 573583.81250000000      4820028.50000000000
> 572772.81250000000      4820026.50000000000
> 571962.81250000000      4820024.50000000000
> 571161.81250000000      4820004.50000000000
> 570360.81250000000      4819985.50000000000
> 569552.81250000000      4819983.50000000000
> 568745.81250000000      4819982.50000000000
> 567943.81250000000      4819979.50000000000
> 567142.81250000000      4819976.50000000000
> 566330.81250000000      4819970.50000000000
> 565518.81250000000      4819964.50000000000
> 564702.81250000000      4819938.50000000000
> 563887.81250000000      4819912.50000000000
> 563078.81250000000      4819906.50000000000
> 562270.81250000000      4819901.50000000000
> 561466.81250000000      4819893.50000000000
> 560662.81250000000      4819885.50000000000
> 559848.81250000000      4819882.50000000000
> 559034.75000000000      4819879.50000000000
> 558231.75000000000      4819875.50000000000
> 557428.75000000000      4819871.50000000000
> 556614.75000000000      4819859.50000000000
> 555801.75000000000      4819847.50000000000
> 581652.81250000000      4819334.50000000000
> 580028.81250000000      4819304.50000000000
> 578404.81250000000      4819290.50000000000
> 576798.81250000000      4819265.50000000000
> 575195.81250000000      4819242.50000000000
> 573587.81250000000      4819219.50000000000
> 571973.81250000000      4819218.50000000000
> 570368.81250000000      4819184.50000000000
> 568756.75000000000      4819178.50000000000
> 567145.75000000000      4819172.50000000000
> 565527.75000000000      4819153.50000000000
> 563890.75000000000      4819110.50000000000
> 562271.75000000000      4819099.50000000000
> 560666.75000000000      4819082.50000000000
> 559042.75000000000      4819075.50000000000
> 557432.75000000000      4819066.50000000000
> 555813.75000000000      4819045.50000000000
> 581660.81250000000      4818533.50000000000
> 580849.75000000000      4818514.50000000000
> 580039.75000000000      4818495.50000000000
> 579229.75000000000      4818489.50000000000
> 578419.75000000000      4818484.50000000000
> 577613.75000000000      4818474.50000000000
> 576807.75000000000      4818464.50000000000
> 576005.75000000000      4818448.50000000000
> 575203.75000000000      4818432.50000000000
> 574397.75000000000      4818421.50000000000
> 571985.75000000000      4818413.50000000000
> 572788.75000000000      4818412.50000000000
> 573592.75000000000      4818411.50000000000
> 571180.75000000000      4818398.50000000000
> 570376.75000000000      4818383.50000000000
> 569572.75000000000      4818378.50000000000
> 568768.75000000000      4818374.50000000000
> 567958.75000000000      4818371.50000000000
> 567149.75000000000      4818369.50000000000
> 566343.75000000000      4818356.50000000000
> 565537.75000000000      4818343.50000000000
> 564715.75000000000      4818326.50000000000
> 563893.75000000000      4818309.50000000000
> 563083.75000000000      4818303.50000000000
> 562273.75000000000      4818298.50000000000
> 561471.75000000000      4818289.50000000000
> 560670.75000000000      4818280.50000000000
> 559860.75000000000      4818276.50000000000
> 559050.75000000000      4818272.50000000000
> 558243.75000000000      4818267.50000000000
> 557437.75000000000      4818262.50000000000
> 556631.75000000000      4818253.50000000000
> 555825.75000000000      4818244.50000000000
> 581674.75000000000      4817720.50000000000
> 580064.75000000000      4817689.50000000000
> 578436.75000000000      4817674.50000000000
> 576822.75000000000      4817660.50000000000
> 575215.75000000000      4817639.50000000000
> 573597.75000000000      4817611.50000000000
> 571988.75000000000      4817608.50000000000
> 570382.75000000000      4817583.50000000000
> 568764.75000000000      4817572.50000000000
> 567151.75000000000      4817561.50000000000
> 565541.75000000000      4817533.50000000000
> 563902.75000000000      4817508.50000000000
> 562285.75000000000      4817496.50000000000
> 560678.75000000000      4817479.50000000000
> 559056.75000000000      4817467.50000000000
> 557445.75000000000      4817453.50000000000
> 555831.75000000000      4817436.50000000000
> 581689.75000000000      4816907.50000000000
> 580089.75000000000      4816884.50000000000
> 579271.75000000000      4816874.50000000000
> 578453.75000000000      4816864.50000000000
> 577645.75000000000      4816860.50000000000
> 576838.75000000000      4816856.50000000000
> 575228.75000000000      4816846.50000000000
> 570389.75000000000      4816784.50000000000
> 565545.75000000000      4816724.50000000000
> 563911.75000000000      4816707.50000000000
> 562297.75000000000      4816695.50000000000
> 560687.75000000000      4816678.50000000000
> 559875.75000000000      4816670.50000000000
> 559063.75000000000      4816662.50000000000
> 557453.75000000000      4816645.50000000000
> 556645.75000000000      4816637.50000000000
> 555838.75000000000      4816629.50000000000
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From jonathan.s.callahan at gmail.com  Thu Jan 29 16:49:36 2009
From: jonathan.s.callahan at gmail.com (Jonathan Callahan)
Date: Thu, 29 Jan 2009 07:49:36 -0800
Subject: [R-sig-Geo] Even simpler TM_WORLD_BORDERS_SIMPLE
Message-ID: <f68da330901290749p24e2c9can80bdf8adfb7fa9d3@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090129/7700d1cf/attachment.pl>

From Virgilio.Gomez at uclm.es  Thu Jan 29 19:51:39 2009
From: Virgilio.Gomez at uclm.es (Virgilio Gomez Rubio)
Date: Thu, 29 Jan 2009 19:51:39 +0100
Subject: [R-sig-Geo] contour lines on a plot
In-Reply-To: <497DAAEF.9080005@univ-lille1.fr>
References: <4974B230.10604@univ-lille1.fr>
	<1232385413.7298.55.camel@Virgilio-Gomez>
	<4974BA57.4090907@univ-lille1.fr>
	<1232388325.7298.59.camel@Virgilio-Gomez>  <4974EE58.2050507@ub.edu>
	<1232404991.7716.11.camel@Virgilio-Gomez>
	<4975A485.7020009@univ-lille1.fr>
	<1232739733.7289.2.camel@Virgilio-Gomez>
	<497DAAEF.9080005@univ-lille1.fr>
Message-ID: <1233255099.15800.5.camel@Virgilio-Gomez>

Maxime,

> It doesn't help, it does! Many thanks!
> Do you know if there is a way to label contour using contourLines(), or, 
> alternatively, to specify the type of  line? Unfortunately, 
> drawlabels=TRUE or lty=n don't work.

For that, you can check the example here:

http://www.asdar-book.org/code.php?chapter=6&figure=9

Particularly, at the top lines like

lyt05 <- list("sp.lines", cl05a, lwd=2, lty=2, col="grey95")

Cheers,

Virgilio



From bibiko at eva.mpg.de  Thu Jan 29 22:15:44 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Thu, 29 Jan 2009 22:15:44 +0100
Subject: [R-sig-Geo] Even simpler TM_WORLD_BORDERS_SIMPLE
In-Reply-To: <f68da330901290749p24e2c9can80bdf8adfb7fa9d3@mail.gmail.com>
References: <f68da330901290749p24e2c9can80bdf8adfb7fa9d3@mail.gmail.com>
Message-ID: <A16918B0-6091-4ADA-8A21-5A1F9C014F81@eva.mpg.de>

On 29.01.2009, at 16:49, Jonathan Callahan wrote:
> Is anyone aware of an even more simplified version of the data that  
> went
> into creating TM_WORLD_BORDERS_SIMPL-0.2.RData so that we might have
> TM_WORLD_BORDERS_LOWRES.RData for use cases like my own.

A very quick solution would be to filter out all irrelevant small  
polygons (islands).
[to reduce the number of polygon points would lead to very unshaped  
boundaries, I mean]

What is an irrelevant polygon? My first approach is if a country  
consists of more than 2 polygons then draw only those which are  
greater than a given area let's say 0.1 .

To achieve that without recreating the entire SpatialPolygonsDataFrame  
one could simply change the plotOrder of each PolygonsList and save it.

Like that quick&dirty script:

library("maptools")
load(url("http://spatial.nhh.no/R/etc/ 
TM_WORLD_BORDERS_SIMPL-0.2.RData"))
wrld_simpl <- wrld_simpl[wrld_simpl$NAME != "Antarctica",]
for (i in (1:length(wrld_simpl at polygons))) {
   polyCnt <- length(wrld_simpl at polygons[[i]]@Polygons)
   if(polyCnt > 2) {
     pO <- sapply(wrld_simpl at polygons[[i]]@Polygons, function(x)  
{slot(x,'area')>0.1})
     new_pO <- pO[ wrld_simpl at polygons[[i]]@plotOrder ]
     wrld_simpl at polygons[[i]]@plotOrder <-  
wrld_simpl at polygons[[i]]@plotOrder[ new_pO ]
   }
}
save(wrld_simpl,'SIMPLEMAP.Rdata')



--Hans



From j.burke at earthlink.net  Thu Jan 29 22:52:03 2009
From: j.burke at earthlink.net (Jim Burke)
Date: Thu, 29 Jan 2009 15:52:03 -0600
Subject: [R-sig-Geo] Even simpler TM_WORLD_BORDERS_SIMPLE (AND SP???)
In-Reply-To: <A16918B0-6091-4ADA-8A21-5A1F9C014F81@eva.mpg.de>
References: <f68da330901290749p24e2c9can80bdf8adfb7fa9d3@mail.gmail.com>
	<A16918B0-6091-4ADA-8A21-5A1F9C014F81@eva.mpg.de>
Message-ID: <49822503.5050406@earthlink.net>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090129/c9e8f70b/attachment.pl>

From j.burke at earthlink.net  Thu Jan 29 23:15:06 2009
From: j.burke at earthlink.net (Jim Burke)
Date: Thu, 29 Jan 2009 16:15:06 -0600
Subject: [R-sig-Geo] Even simpler TM_WORLD_BORDERS_SIMPLE (AND SP???)
In-Reply-To: <49822503.5050406@earthlink.net>
References: <f68da330901290749p24e2c9can80bdf8adfb7fa9d3@mail.gmail.com>	<A16918B0-6091-4ADA-8A21-5A1F9C014F81@eva.mpg.de>
	<49822503.5050406@earthlink.net>
Message-ID: <49822A6A.9060001@earthlink.net>

OK I am on decaf coffee now. I reinstalled R and
all is well now.

Now Hans, below is what I get when I run your code.
Is this expected? Quick and certainly DIRTY.

 > library("maptools")
Loading required package: foreign
 > load(url("http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData"))
 > wrld_simpl <- wrld_simpl[wrld_simpl$NAME != "Antarctica",]
Warning message:
closing unused connection 3 
(gzcon(http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData))
 > for (i in (1:length(wrld_simpl at polygons))) {
+ polyCnt <- length(wrld_simpl at polygons[[i]]@Polygons)
+ if(polyCnt > 2) {
+ pO <- sapply(wrld_simpl at polygons[[i]]@Polygons, function(x) 
{slot(x,'area')>0.1})
+ new_pO <- pO[ wrld_simpl at polygons[[i]]@plotOrder ]
+ wrld_simpl at polygons[[i]]@plotOrder <- 
wrld_simpl at polygons[[i]]@plotOrder[ new_pO ]
+ }
+ }
 > save(wrld_simpl,'SIMPLEMAP.Rdata')
Error in save(wrld_simpl, "SIMPLEMAP.Rdata") :
object ?SIMPLEMAP.Rdata? not found




Thanks,
Jim Burke

Jim Burke wrote:
> Thanks Hans,
>
> Its been a day or so since I have used R graphics.
> Now sp seems to lack grid. I cannot run my tried and
> true graphics workspace at all.
>
> Are you folks having any trouble? What am I doing
> wrong?
>
> Below
> 1. try to load library sp. No go.
> 2. download sp from Berkeley (US1). Different errors
>
>  > library(sp)
> Error : package 'grid' does not have a name space
> Error: package/namespace load failed for 'sp'
>  > chooseCRANmirror()
>  > utils:::menuInstallPkgs()
> trying URL 
> 'http://cran.cnr.Berkeley.edu/bin/windows/contrib/2.8/sp_0.9-29.zip'
> Content type 'application/zip' length 845890 bytes (826 Kb)
> opened URL
> downloaded 826 Kb
>
> package 'sp' successfully unpacked and MD5 sums checked
>
> The downloaded packages are in
>         C:\Documents and Settings\Jim Burke\Local 
> Settings\Temp\RtmpqCMAZS\downloaded_packages
> updating HTML package descriptions
> Warning message:
> dependency 'grid' is not available
>  >
>
> Thanks,
> Jim Burke
>
>
>
> Hans-J?rg Bibiko wrote:
>   
>> On 29.01.2009, at 16:49, Jonathan Callahan wrote:
>>     
>>> Is anyone aware of an even more simplified version of the data that went
>>> into creating TM_WORLD_BORDERS_SIMPL-0.2.RData so that we might have
>>> TM_WORLD_BORDERS_LOWRES.RData for use cases like my own.
>>>       
>> A very quick solution would be to filter out all irrelevant small 
>> polygons (islands).
>> [to reduce the number of polygon points would lead to very unshaped 
>> boundaries, I mean]
>>
>> What is an irrelevant polygon? My first approach is if a country 
>> consists of more than 2 polygons then draw only those which are 
>> greater than a given area let's say 0.1 .
>>
>> To achieve that without recreating the entire SpatialPolygonsDataFrame 
>> one could simply change the plotOrder of each PolygonsList and save it.
>>
>> Like that quick&dirty script:
>>
>> library("maptools")
>> load(url("http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData"))
>> wrld_simpl <- wrld_simpl[wrld_simpl$NAME != "Antarctica",]
>> for (i in (1:length(wrld_simpl at polygons))) {
>>   polyCnt <- length(wrld_simpl at polygons[[i]]@Polygons)
>>   if(polyCnt > 2) {
>>     pO <- sapply(wrld_simpl at polygons[[i]]@Polygons, function(x) 
>> {slot(x,'area')>0.1})
>>     new_pO <- pO[ wrld_simpl at polygons[[i]]@plotOrder ]
>>     wrld_simpl at polygons[[i]]@plotOrder <- 
>> wrld_simpl at polygons[[i]]@plotOrder[ new_pO ]
>>   }
>> }
>> save(wrld_simpl,'SIMPLEMAP.Rdata')
>>
>>
>>
>> --Hans
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>>
>>     
>
>
> 	[[alternative HTML version deleted]]
>
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>



From Alexander.Herr at csiro.au  Thu Jan 29 23:21:37 2009
From: Alexander.Herr at csiro.au (Alexander.Herr at csiro.au)
Date: Fri, 30 Jan 2009 09:21:37 +1100
Subject: [R-sig-Geo] memory issue on R with Linux 64
In-Reply-To: <4981541B.4080908@uni-muenster.de>
References: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7C@EXNSW-MBX04.nexus.csiro.au>
	<4981541B.4080908@uni-muenster.de>
Message-ID: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7F@EXNSW-MBX04.nexus.csiro.au>

 
Hi Edzer,

I didn't expect R to do magic (although it does it better than most prgs). What surprised me was that under Linux there was no use of swap space - I hoped memory handling would be including swap space. 

Cheers
Herry


-----Original Message-----
From: Edzer Pebesma [mailto:edzer.pebesma at uni-muenster.de] 
Sent: Thursday, January 29, 2009 6:01 PM
To: Herr, Alexander Herr - Herry (CSE, Gungahlin)
Cc: r-sig-geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] memory issue on R with Linux 64

Well, this doesn't come as a surprise; if it did for you then you didn't read the list archives well.

R has been designed for analysing statistical data, which usually doesn't outnumber billions of observations, and not for analysis/processing of large grids/imagery.

rgdal has infrastructure to let you go through huge grids by reading and writing only parts at a time; you can find pointers to this in the rgdal documentation, examples on the list. I don't know of functions that do this automatically for you; maybe the raster package on r-forge?

Another option is to buy more ram. I am using debian on a 32 Gb ram workstation; I was surprised (really) how little it costed. It saves me time.
--
Edzer

Alexander.Herr at csiro.au wrote:
> Hi List,
>
> I get an error using readGDAL{rgdal}: cannot allocate vector of size 
> 3.1 Gb
>
> I am using Linux 64bit (opensuse 11) with 4 gig swap and 4 gig Ram and R 2.8.0. 
>
> The load monitor shows that most of Ram is used up and then when Swap use starts increasing, R returns the error.
>
> Is there anything I should do within R to circumvent this?
>
>
> Any help appreciated
> Thanks
> Herry
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>   

--
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251 8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From Alexander.Herr at csiro.au  Fri Jan 30 00:09:34 2009
From: Alexander.Herr at csiro.au (Alexander.Herr at csiro.au)
Date: Fri, 30 Jan 2009 10:09:34 +1100
Subject: [R-sig-Geo] memory issue on R with Linux 64
In-Reply-To: <dc22b2570901290058p4760a15ex745d2da8eb45b4a9@mail.gmail.com>
References: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E7C@EXNSW-MBX04.nexus.csiro.au>
	<alpine.LRH.2.00.0901290753380.15975@reclus.nhh.no>
	<dc22b2570901290058p4760a15ex745d2da8eb45b4a9@mail.gmail.com>
Message-ID: <D6D8CB3DE7413A44BD15BF7D78C960C30102532E80@EXNSW-MBX04.nexus.csiro.au>

Thanks Robert,

PolygonsToRaster may be a way, but I only want to transfer onto the raster where the raster is not NA (ie a subset of the polygon area). So what I would need is a why to exclude all polygon parts where the raster is NA.

In theory I could do the whole transfer and than stamp out all pixels of the new raster where the original raster has NA or I could delete the polygons where raster has NA prior to transfer. However, it would be easier to do the transfer in one step. 

Cheers
Herry 



Dr Alexander Herr - Herry
CSIRO, Sustainable Ecosystems
Gungahlin Homestead
Bellenden Street
GPO Box 284
Crace, ACT 2601
 
Phone/www 
(02) 6242 1542; 6242 1705(fax)
0408679811 (mob)

home: www.csiro.au/people/Alexander.Herr
Webadmin ABS: http://ausbats.org.au
Sustainable Ecosystems: www.cse.csiro.au
--------------------------------------------


-----Original Message-----
From: Robert Hijmans [mailto:r.hijmans at gmail.com] 
Sent: Thursday, January 29, 2009 7:58 PM
To: Herr, Alexander Herr - Herry (CSE, Gungahlin)
Cc: r-sig-geo at stat.math.ethz.ch
Subject: Re: [R-sig-Geo] memory issue on R with Linux 64

Herry,

This is how you can do it in package{raster}. (revision 209;  a build should be available within 24 hours).

Following Edzer's example:

require(raster)
library(maptools)
# read a SpatialPolygonsDataFrame
nc <- readShapePoly(system.file("shapes/sids.shp",
      package="maptools")[1], proj4string=CRS("+proj=longlat +datum=NAD27")) # create a new RasterLayer object from the polygon bounding box and set row / cols.
rs <- rasterFromBbox(nc, nrows=54, ncols=176) # transfer polygons to raster, use values of column 13 in the polygon dataframe rs <- polygonsToRaster(nc, rs, field=13) # plot, either directly
plot(rs)
plot(nc, add=T, border="blue")
# or via sp for a real map
x11()
spplot(asSpGrid(rs), col.regions=bpy.colors())

also see the example in ?polygonsToRaster

The polygonsToRaster function works for very large rasters (row by row processing if you provide an output file name). I have only tested if for a very limited number of very simple cases, so user beware...
The algorithm needs optimization for speed, so that might be a problem for your very large grids. (particularly of your polygons are also complex). It also needs some tweaking (and options) for deciding when a polygon is in a grid cell. As is, the intention is that a polygon has to overlap with the center of a cell to be considered inside.

Robert




On Thu, Jan 29, 2009 at 3:09 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> On Thu, 29 Jan 2009, Alexander.Herr at csiro.au wrote:
>
>>
>> Hi List,
>>
>> I get an error using readGDAL{rgdal}: cannot allocate vector of size 
>> 3.1 Gb
>
> This is a tile of your 73K by 80K raster, right? One possibility is to 
> use smaller tiles, another to get more memory (as Edzer wrote), a 
> third to use lower level functions in rgdal to avoid duplication (and 
> repeated gc()) - in readGDAL the data read by getRasterData() are 
> copied, so at least doubling memory usage.
>
> Do you need to read the raster? If this is the overlay problem, you 
> should be able to use the output of GDALinfo for your raster to build 
> a GridTopology and SpatialGrid, and overlay (tiles of) that on the 
> SpatialPolygons (tiles of that because overlay() will generate cell 
> centre coordinates and do point in polygon, so you're still stuck with 
> too many coordinates). The next issue would be to copy out the polygon 
> IDs, or the extracted values, as a raster - here the forthcoming 
> raster package on R-Forge may be what you need.
>
> Roger
>
>
>>
>> I am using Linux 64bit (opensuse 11) with 4 gig swap and 4 gig Ram 
>> and R 2.8.0.
>>
>> The load monitor shows that most of Ram is used up and then when Swap 
>> use starts increasing, R returns the error.
>>
>> Is there anything I should do within R to circumvent this?
>>
>>
>> Any help appreciated
>> Thanks
>> Herry
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> --
> Roger Bivand
> Economic Geography Section, Department of Economics, Norwegian School 
> of Economics and Business Administration, Helleveien 30, N-5045 
> Bergen, Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
> e-mail: Roger.Bivand at nhh.no
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>



From srinivasraghav at gmail.com  Fri Jan 30 06:09:26 2009
From: srinivasraghav at gmail.com (srinivasa raghavan)
Date: Fri, 30 Jan 2009 10:39:26 +0530
Subject: [R-sig-Geo] plotting Football field ball pattern data
Message-ID: <e45b69190901292109n5dcc0fccwd1dede3b1846b35a@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090130/3e0282c1/attachment.pl>

From edzer.pebesma at uni-muenster.de  Fri Jan 30 07:47:05 2009
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Fri, 30 Jan 2009 07:47:05 +0100
Subject: [R-sig-Geo] Even simpler TM_WORLD_BORDERS_SIMPLE (AND SP???)
In-Reply-To: <49822A6A.9060001@earthlink.net>
References: <f68da330901290749p24e2c9can80bdf8adfb7fa9d3@mail.gmail.com>	<A16918B0-6091-4ADA-8A21-5A1F9C014F81@eva.mpg.de>	<49822503.5050406@earthlink.net>
	<49822A6A.9060001@earthlink.net>
Message-ID: <4982A269.1050809@uni-muenster.de>



Jim Burke wrote:
> OK I am on decaf coffee now. I reinstalled R and
> all is well now.
>
> Now Hans, below is what I get when I run your code.
> Is this expected? Quick and certainly DIRTY.
>
> > library("maptools")
> Loading required package: foreign
> > 
> load(url("http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData"))
> > wrld_simpl <- wrld_simpl[wrld_simpl$NAME != "Antarctica",]
> Warning message:
> closing unused connection 3 
> (gzcon(http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData))
> > for (i in (1:length(wrld_simpl at polygons))) {
> + polyCnt <- length(wrld_simpl at polygons[[i]]@Polygons)
> + if(polyCnt > 2) {
> + pO <- sapply(wrld_simpl at polygons[[i]]@Polygons, function(x) 
> {slot(x,'area')>0.1})
> + new_pO <- pO[ wrld_simpl at polygons[[i]]@plotOrder ]
> + wrld_simpl at polygons[[i]]@plotOrder <- 
> wrld_simpl at polygons[[i]]@plotOrder[ new_pO ]
> + }
> + }
> > save(wrld_simpl,'SIMPLEMAP.Rdata')
> Error in save(wrld_simpl, "SIMPLEMAP.Rdata") :
> object ?SIMPLEMAP.Rdata? not found
How about taking a look at the help pages of the save command?
--
Edzer
>
>
>
>
> Thanks,
> Jim Burke
>
> Jim Burke wrote:
>> Thanks Hans,
>>
>> Its been a day or so since I have used R graphics.
>> Now sp seems to lack grid. I cannot run my tried and
>> true graphics workspace at all.
>>
>> Are you folks having any trouble? What am I doing
>> wrong?
>>
>> Below
>> 1. try to load library sp. No go.
>> 2. download sp from Berkeley (US1). Different errors
>>
>>  > library(sp)
>> Error : package 'grid' does not have a name space
>> Error: package/namespace load failed for 'sp'
>>  > chooseCRANmirror()
>>  > utils:::menuInstallPkgs()
>> trying URL 
>> 'http://cran.cnr.Berkeley.edu/bin/windows/contrib/2.8/sp_0.9-29.zip'
>> Content type 'application/zip' length 845890 bytes (826 Kb)
>> opened URL
>> downloaded 826 Kb
>>
>> package 'sp' successfully unpacked and MD5 sums checked
>>
>> The downloaded packages are in
>>         C:\Documents and Settings\Jim Burke\Local 
>> Settings\Temp\RtmpqCMAZS\downloaded_packages
>> updating HTML package descriptions
>> Warning message:
>> dependency 'grid' is not available
>>  >
>>
>> Thanks,
>> Jim Burke
>>
>>
>>
>> Hans-J?rg Bibiko wrote:
>>  
>>> On 29.01.2009, at 16:49, Jonathan Callahan wrote:
>>>    
>>>> Is anyone aware of an even more simplified version of the data that 
>>>> went
>>>> into creating TM_WORLD_BORDERS_SIMPL-0.2.RData so that we might have
>>>> TM_WORLD_BORDERS_LOWRES.RData for use cases like my own.
>>>>       
>>> A very quick solution would be to filter out all irrelevant small 
>>> polygons (islands).
>>> [to reduce the number of polygon points would lead to very unshaped 
>>> boundaries, I mean]
>>>
>>> What is an irrelevant polygon? My first approach is if a country 
>>> consists of more than 2 polygons then draw only those which are 
>>> greater than a given area let's say 0.1 .
>>>
>>> To achieve that without recreating the entire 
>>> SpatialPolygonsDataFrame one could simply change the plotOrder of 
>>> each PolygonsList and save it.
>>>
>>> Like that quick&dirty script:
>>>
>>> library("maptools")
>>> load(url("http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData")) 
>>>
>>> wrld_simpl <- wrld_simpl[wrld_simpl$NAME != "Antarctica",]
>>> for (i in (1:length(wrld_simpl at polygons))) {
>>>   polyCnt <- length(wrld_simpl at polygons[[i]]@Polygons)
>>>   if(polyCnt > 2) {
>>>     pO <- sapply(wrld_simpl at polygons[[i]]@Polygons, function(x) 
>>> {slot(x,'area')>0.1})
>>>     new_pO <- pO[ wrld_simpl at polygons[[i]]@plotOrder ]
>>>     wrld_simpl at polygons[[i]]@plotOrder <- 
>>> wrld_simpl at polygons[[i]]@plotOrder[ new_pO ]
>>>   }
>>> }
>>> save(wrld_simpl,'SIMPLEMAP.Rdata')
>>>
>>>
>>>
>>> --Hans
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at stat.math.ethz.ch
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>>
>>>     
>>
>>
>>     [[alternative HTML version deleted]]
>>
>>   
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi), University of M?nster
Weseler Stra?e 253, 48151 M?nster, Germany. Phone: +49 251
8333081, Fax: +49 251 8339763 http://ifgi.uni-muenster.de/
http://www.springer.com/978-0-387-78170-9 e.pebesma at wwu.de



From xingli.giam at adelaide.edu.au  Fri Jan 30 08:42:47 2009
From: xingli.giam at adelaide.edu.au (Xingli Giam)
Date: Fri, 30 Jan 2009 18:12:47 +1030
Subject: [R-sig-Geo] How to extract just the Moran's I values using
	moran.test{spdep}?
Message-ID: <1233301367.4982af77dc1e9@webmail.adelaide.edu.au>

Hello List,

I hope to extract the Moran's I values using moran.test{spdep} to manually plot
a correlogram. However calling the value $estimate produces not just the
Moran's I, but also its expectation and variance under method assumption. Is
there a way I can extract just the Moran's I so that I can place it in a
dataframe against the binned distance classes to plot a correlogram?

Many thanks!
Xingli



From miguel.gil.biraud at ieee.org  Fri Jan 30 08:43:07 2009
From: miguel.gil.biraud at ieee.org (Miguel Eduardo Gil Biraud)
Date: Fri, 30 Jan 2009 08:43:07 +0100
Subject: [R-sig-Geo] plotting Football field ball pattern data
In-Reply-To: <e45b69190901292109n5dcc0fccwd1dede3b1846b35a@mail.gmail.com>
References: <e45b69190901292109n5dcc0fccwd1dede3b1846b35a@mail.gmail.com>
Message-ID: <bba7081f0901292343p78c14a51r5c82ed83587b5684@mail.gmail.com>

Hi,

I was going to post a similar question as I am also a fresh new user of R.

In my case I have between 10 million and 20 million latitude,
longitude pairs and want to get an image in which each pixel has a
color that is a function of the amount of positions that would fall
into the spatial bin corresponding to the pixel size. I understand
that this would be akin to a 2D histogram of my data and resemble a
density plot.

The way I started doing that was importing the table with read.table()
and then converting it to a PPP object providing the adequate bounds.
The first problem I face is that when I try to put all the points into
the PPP object I get a memory failure.

To keep experimenting I lowered the number of points I import and
played around with the density function available in spatstat but
while I can see its uses when you have few points, in my case the
patters would get diluded very fast even for small values of sigma and
I am afraid it would not represent the data faithfully.

On the other hand the function quadratcount returns very fast results
for a high number of partitions in the X and Y axis and I could
certainly use the results it provides, if it wouldn't be for the fact
that when I try to plot it, I get the grid and the point count inside
each cell. Is there any way to convert the output of gridcount into a
colored plot in the same spirit of the one you get when you do a
plot(density())?

Hope it wasn't too confusing. As you can see I've tried to take a jab
at it on my own, but it is proving more complicated than I expected!
:)

Cheers,
Miguel

On Fri, Jan 30, 2009 at 06:09, srinivasa raghavan
<srinivasraghav at gmail.com> wrote:
> Hi r-sig-geo team,
>
> I am a new user of R 2.8.1 in windows 2003. I have a data set of football
> ball pattern data. The data is for multiple matches. The variables are :
>
> match: The code number of the match.
> period: First half or second half denotted by 1 or 2.
> pitchX:  The x co-ordinate of the field.
> pitchy: The y-co-ordinate of the field.
> seconds: The time point.
>
> I am interested to draw the football graph/diagram and then plot the above
> data.
>
> Can any one let me know the right functions/packages which can help me in
> this regard.
>
> thanks in advance.
>
> warm regards,
> srinivas
> statistical analyst.
>
>        [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>



-- 
http://franchu.net



From bibiko at eva.mpg.de  Fri Jan 30 08:45:28 2009
From: bibiko at eva.mpg.de (=?WINDOWS-1252?Q?Hans-J=F6rg_Bibiko?=)
Date: Fri, 30 Jan 2009 08:45:28 +0100
Subject: [R-sig-Geo] Even simpler TM_WORLD_BORDERS_SIMPLE (AND SP???)
In-Reply-To: <4982A269.1050809@uni-muenster.de>
References: <f68da330901290749p24e2c9can80bdf8adfb7fa9d3@mail.gmail.com>	<A16918B0-6091-4ADA-8A21-5A1F9C014F81@eva.mpg.de>	<49822503.5050406@earthlink.net>
	<49822A6A.9060001@earthlink.net> <4982A269.1050809@uni-muenster.de>
Message-ID: <286F2BDD-8CD9-4484-A756-40F724AEB7D9@eva.mpg.de>


On 30.01.2009, at 07:47, Edzer Pebesma wrote:

> Jim Burke wrote:
>> OK I am on decaf coffee now. I reinstalled R and
>> all is well now.
>>
>> Now Hans, below is what I get when I run your code.
>> Is this expected? Quick and certainly DIRTY.
>>
>> > library("maptools")
>> Loading required package: foreign
>> > load(url("http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData 
>> "))
>> > wrld_simpl <- wrld_simpl[wrld_simpl$NAME != "Antarctica",]
>> Warning message:
>> closing unused connection 3 (gzcon(http://spatial.nhh.no/R/etc/TM_WORLD_BORDERS_SIMPL-0.2.RData) 
>> )
>> > for (i in (1:length(wrld_simpl at polygons))) {
>> + polyCnt <- length(wrld_simpl at polygons[[i]]@Polygons)
>> + if(polyCnt > 2) {
>> + pO <- sapply(wrld_simpl at polygons[[i]]@Polygons, function(x)  
>> {slot(x,'area')>0.1})
>> + new_pO <- pO[ wrld_simpl at polygons[[i]]@plotOrder ]
>> + wrld_simpl at polygons[[i]]@plotOrder <-  
>> wrld_simpl at polygons[[i]]@plotOrder[ new_pO ]
>> + }
>> + }
>> > save(wrld_simpl,'SIMPLEMAP.Rdata')
>> Error in save(wrld_simpl, "SIMPLEMAP.Rdata") :
>> object ?SIMPLEMAP.Rdata? not found
> How about taking a look at the help pages of the save command?

Jim, did you look at the help page?

I simply forgot to name an argument:

save(wrld_simpl,file='SIMPLEMAP.Rdata')

--Hans



From Roger.Bivand at nhh.no  Fri Jan 30 09:26:51 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 30 Jan 2009 09:26:51 +0100 (CET)
Subject: [R-sig-Geo] How to extract just the Moran's I values using
 moran.test{spdep}?
In-Reply-To: <1233301367.4982af77dc1e9@webmail.adelaide.edu.au>
References: <1233301367.4982af77dc1e9@webmail.adelaide.edu.au>
Message-ID: <alpine.LRH.2.00.0901300924490.23814@reclus.nhh.no>

On Fri, 30 Jan 2009, Xingli Giam wrote:

> Hello List,
>
> I hope to extract the Moran's I values using moran.test{spdep} to manually plot
> a correlogram. However calling the value $estimate produces not just the
> Moran's I, but also its expectation and variance under method assumption. Is
> there a way I can extract just the Moran's I so that I can place it in a
> dataframe against the binned distance classes to plot a correlogram?

Maybe res$estimate[1]? See also str(res) to display the "str"ucture of 
objects.

Roger

>
> Many thanks!
> Xingli
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From Roger.Bivand at nhh.no  Fri Jan 30 09:36:26 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 30 Jan 2009 09:36:26 +0100 (CET)
Subject: [R-sig-Geo] plotting Football field ball pattern data
In-Reply-To: <e45b69190901292109n5dcc0fccwd1dede3b1846b35a@mail.gmail.com>
References: <e45b69190901292109n5dcc0fccwd1dede3b1846b35a@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901300929470.23814@reclus.nhh.no>

On Fri, 30 Jan 2009, srinivasa raghavan wrote:

> Hi r-sig-geo team,
>
> I am a new user of R 2.8.1 in windows 2003. I have a data set of football
> ball pattern data. The data is for multiple matches. The variables are :
>
> match: The code number of the match.
> period: First half or second half denotted by 1 or 2.
> pitchX:  The x co-ordinate of the field.
> pitchy: The y-co-ordinate of the field.
> seconds: The time point.
>
> I am interested to draw the football graph/diagram and then plot the above
> data.

What is a "football graph/diagram"? Is it a line joining the (x,y) in time 
sequence? Simplifying by choosing one period in one match:

o <- order(seconds)
plot(pitchX[o], pitchY[o], type="l", asp=1)

should do that, but I don't know whether this is what you need? If you 
need more detail on the trajectory, see the trip package (which is for 
animal tracking data, not dissimilar in principle).

Roger

>
> Can any one let me know the right functions/packages which can help me in
> this regard.
>
> thanks in advance.
>
> warm regards,
> srinivas
> statistical analyst.
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From dray at biomserv.univ-lyon1.fr  Fri Jan 30 09:37:23 2009
From: dray at biomserv.univ-lyon1.fr (=?ISO-8859-1?Q?St=E9phane_Dray?=)
Date: Fri, 30 Jan 2009 09:37:23 +0100
Subject: [R-sig-Geo] plotting Football field ball pattern data
In-Reply-To: <alpine.LRH.2.00.0901300929470.23814@reclus.nhh.no>
References: <e45b69190901292109n5dcc0fccwd1dede3b1846b35a@mail.gmail.com>
	<alpine.LRH.2.00.0901300929470.23814@reclus.nhh.no>
Message-ID: <4982BC43.1080603@biomserv.univ-lyon1.fr>

There are also some functions in the adehabitat package to 
plot/manage/analyze trajectories. You can have a look at the following 
paper:

http://www.science-direct.com/science?_ob=ArticleURL&_udi=B7W63-4V28T4D-1&_user=10&_coverDate=12%2F02%2F2008&_rdoc=3&_fmt=high&_orig=browse&_srch=doc-info(%23toc%2328539%239999%23999999999%2399999%23FLA%23display%23Articles)&_cdi=28539&_sort=d&_docanchor=&view=c&_ct=5&_acct=C000050221&_version=1&_urlVersion=0&_userid=10&md5=398a2266e820dc3f827e9e4d76d4bc80

Cheers,


Roger Bivand wrote:
> On Fri, 30 Jan 2009, srinivasa raghavan wrote:
>
>> Hi r-sig-geo team,
>>
>> I am a new user of R 2.8.1 in windows 2003. I have a data set of 
>> football
>> ball pattern data. The data is for multiple matches. The variables are :
>>
>> match: The code number of the match.
>> period: First half or second half denotted by 1 or 2.
>> pitchX:  The x co-ordinate of the field.
>> pitchy: The y-co-ordinate of the field.
>> seconds: The time point.
>>
>> I am interested to draw the football graph/diagram and then plot the 
>> above
>> data.
>
> What is a "football graph/diagram"? Is it a line joining the (x,y) in 
> time sequence? Simplifying by choosing one period in one match:
>
> o <- order(seconds)
> plot(pitchX[o], pitchY[o], type="l", asp=1)
>
> should do that, but I don't know whether this is what you need? If you 
> need more detail on the trajectory, see the trip package (which is for 
> animal tracking data, not dissimilar in principle).
>
> Roger
>
>>
>> Can any one let me know the right functions/packages which can help 
>> me in
>> this regard.
>>
>> thanks in advance.
>>
>> warm regards,
>> srinivas
>> statistical analyst.
>>
>>     [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>

-- 
St?phane DRAY (dray at biomserv.univ-lyon1.fr )
Laboratoire BBE-CNRS-UMR-5558, Univ. C. Bernard - Lyon I
43, Bd du 11 Novembre 1918, 69622 Villeurbanne Cedex, France
Tel: 33 4 72 43 27 57       Fax: 33 4 72 43 13 88
http://biomserv.univ-lyon1.fr/~dray/



From Roger.Bivand at nhh.no  Fri Jan 30 09:46:24 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 30 Jan 2009 09:46:24 +0100 (CET)
Subject: [R-sig-Geo] plotting Football field ball pattern data
In-Reply-To: <bba7081f0901292343p78c14a51r5c82ed83587b5684@mail.gmail.com>
References: <e45b69190901292109n5dcc0fccwd1dede3b1846b35a@mail.gmail.com>
	<bba7081f0901292343p78c14a51r5c82ed83587b5684@mail.gmail.com>
Message-ID: <alpine.LRH.2.00.0901300936370.23814@reclus.nhh.no>

On Fri, 30 Jan 2009, Miguel Eduardo Gil Biraud wrote:

> Hi,
>
> I was going to post a similar question as I am also a fresh new user of R.
>

This isn't the same question, so the threads are crossed now ...

> In my case I have between 10 million and 20 million latitude,
> longitude pairs and want to get an image in which each pixel has a
> color that is a function of the amount of positions that would fall
> into the spatial bin corresponding to the pixel size. I understand
> that this would be akin to a 2D histogram of my data and resemble a
> density plot.
>
> The way I started doing that was importing the table with read.table()
> and then converting it to a PPP object providing the adequate bounds.
> The first problem I face is that when I try to put all the points into
> the PPP object I get a memory failure.
>
> To keep experimenting I lowered the number of points I import and
> played around with the density function available in spatstat but
> while I can see its uses when you have few points, in my case the
> patters would get diluded very fast even for small values of sigma and
> I am afraid it would not represent the data faithfully.
>
> On the other hand the function quadratcount returns very fast results
> for a high number of partitions in the X and Y axis and I could
> certainly use the results it provides, if it wouldn't be for the fact
> that when I try to plot it, I get the grid and the point count inside
> each cell. Is there any way to convert the output of gridcount into a
> colored plot in the same spirit of the one you get when you do a
> plot(density())?
>
> Hope it wasn't too confusing. As you can see I've tried to take a jab
> at it on my own, but it is proving more complicated than I expected!
> :)

If you simplify, you'll see that all you are trying to do is count points 
in grid cells. While a quadrat count looks natural, that function is 
actually used to show why quadrat counts as a method of point pattern 
analysis are inadequate. My guess is that you should look at the overlay() 
method for SpatialPoints and SpatialGrid objects in the sp package, which 
will return a vector showing which grid cell each point belongs to. From 
there, you can use other functions, for example table(), to tally, then 
construct a SpatialGridDataFrame.

At your choice, GE_SpatialGrid() in maptools and image() will let you 
display your output in Google Earth if you choose, image() or spplot() for 
regular R graphics, or write it out and read into a GIS or paint program 
with writeGDAL() in rgdal.

Roger


>
> Cheers,
> Miguel
>
> On Fri, Jan 30, 2009 at 06:09, srinivasa raghavan
> <srinivasraghav at gmail.com> wrote:
>> Hi r-sig-geo team,
>>
>> I am a new user of R 2.8.1 in windows 2003. I have a data set of football
>> ball pattern data. The data is for multiple matches. The variables are :
>>
>> match: The code number of the match.
>> period: First half or second half denotted by 1 or 2.
>> pitchX:  The x co-ordinate of the field.
>> pitchy: The y-co-ordinate of the field.
>> seconds: The time point.
>>
>> I am interested to draw the football graph/diagram and then plot the above
>> data.
>>
>> Can any one let me know the right functions/packages which can help me in
>> this regard.
>>
>> thanks in advance.
>>
>> warm regards,
>> srinivas
>> statistical analyst.
>>
>>        [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
>
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From b.rowlingson at lancaster.ac.uk  Fri Jan 30 09:58:48 2009
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Fri, 30 Jan 2009 08:58:48 +0000
Subject: [R-sig-Geo] plotting Football field ball pattern data
In-Reply-To: <alpine.LRH.2.00.0901300929470.23814@reclus.nhh.no>
References: <e45b69190901292109n5dcc0fccwd1dede3b1846b35a@mail.gmail.com>
	<alpine.LRH.2.00.0901300929470.23814@reclus.nhh.no>
Message-ID: <d8ad40b50901300058u1e018bf6h4412dc3e904b1cb3@mail.gmail.com>

2009/1/30 Roger Bivand <Roger.Bivand at nhh.no>:

> What is a "football graph/diagram"?

 A related question is 'What is football?'. This is an international
list, so someone from the USA would play a very different football to
a European, but a similar game to Rugby football, which is similar
again to Gaelic football, none of which are very like Aussie rules
football.

 Is there an R expert system package that can ask questions like "Is
the ball round?" "Are the games 10 seconds of action followed by 5
minute discussions?" and end up deciding what kind of football it is?

 I suspect Srinivasa means soccer (round ball, game of two halves,
mainly kicking).

 Dunno if this has any bearing on the analysis though!

Barry



From r.hijmans at gmail.com  Fri Jan 30 10:27:35 2009
From: r.hijmans at gmail.com (Robert Hijmans)
Date: Fri, 30 Jan 2009 17:27:35 +0800
Subject: [R-sig-Geo] plotting Football field ball pattern data
In-Reply-To: <bba7081f0901292343p78c14a51r5c82ed83587b5684@mail.gmail.com>
References: <e45b69190901292109n5dcc0fccwd1dede3b1846b35a@mail.gmail.com>
	<bba7081f0901292343p78c14a51r5c82ed83587b5684@mail.gmail.com>
Message-ID: <dc22b2570901300127q5b39b2dfr47d38e31704a591f@mail.gmail.com>

Miguel,

I am not entirely sure about what you need, but this might do it:

#install.packages("raster", repos="http://R-Forge.R-project.org")
require(raster)
# create a new raster. use additional arguments so that it matches
your data (extreme x and y )
r <- newRaster(ncols=36, nrows=18)

# I simulate 1000 points, 3 times (simulating not being able to load
all points, but perhaps you can, in this case)
n <- 1000
for (i in 1:3) {
	x <- runif(n)* 360 - 180
	y <- runif(n)* 180 - 90
	xy <- cbind(x, y)
	vals <- rep(1, n)
	r <- pointsToRaster(r, xy, vals)
	r[is.na(r)] <- 0
	if (i == 1) { rs <- r } else { rs <- rs + r }
}
# the plot you do not want:
plot(rs)
# is this the plot you do want?
x11()
plot(density(values(rs)))



Robert

On Fri, Jan 30, 2009 at 3:43 PM, Miguel Eduardo Gil Biraud
<miguel.gil.biraud at ieee.org> wrote:
> Hi,
>
> I was going to post a similar question as I am also a fresh new user of R.
>
> In my case I have between 10 million and 20 million latitude,
> longitude pairs and want to get an image in which each pixel has a
> color that is a function of the amount of positions that would fall
> into the spatial bin corresponding to the pixel size. I understand
> that this would be akin to a 2D histogram of my data and resemble a
> density plot.
>
> The way I started doing that was importing the table with read.table()
> and then converting it to a PPP object providing the adequate bounds.
> The first problem I face is that when I try to put all the points into
> the PPP object I get a memory failure.
>
> To keep experimenting I lowered the number of points I import and
> played around with the density function available in spatstat but
> while I can see its uses when you have few points, in my case the
> patters would get diluded very fast even for small values of sigma and
> I am afraid it would not represent the data faithfully.
>
> On the other hand the function quadratcount returns very fast results
> for a high number of partitions in the X and Y axis and I could
> certainly use the results it provides, if it wouldn't be for the fact
> that when I try to plot it, I get the grid and the point count inside
> each cell. Is there any way to convert the output of gridcount into a
> colored plot in the same spirit of the one you get when you do a
> plot(density())?
>
> Hope it wasn't too confusing. As you can see I've tried to take a jab
> at it on my own, but it is proving more complicated than I expected!
> :)
>
> Cheers,
> Miguel
>
> On Fri, Jan 30, 2009 at 06:09, srinivasa raghavan
> <srinivasraghav at gmail.com> wrote:
>> Hi r-sig-geo team,
>>
>> I am a new user of R 2.8.1 in windows 2003. I have a data set of football
>> ball pattern data. The data is for multiple matches. The variables are :
>>
>> match: The code number of the match.
>> period: First half or second half denotted by 1 or 2.
>> pitchX:  The x co-ordinate of the field.
>> pitchy: The y-co-ordinate of the field.
>> seconds: The time point.
>>
>> I am interested to draw the football graph/diagram and then plot the above
>> data.
>>
>> Can any one let me know the right functions/packages which can help me in
>> this regard.
>>
>> thanks in advance.
>>
>> warm regards,
>> srinivas
>> statistical analyst.
>>
>>        [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
>
>
> --
> http://franchu.net
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>



From bibiko at eva.mpg.de  Fri Jan 30 16:42:32 2009
From: bibiko at eva.mpg.de (=?ISO-8859-1?Q?Hans-J=F6rg_Bibiko?=)
Date: Fri, 30 Jan 2009 16:42:32 +0100
Subject: [R-sig-Geo] seamless maps
In-Reply-To: <DCE876F4-50BE-43B0-8007-DC685DC228C3@eva.mpg.de>
References: <65D1551E-9986-46B6-994E-98B17A6E789D@eva.mpg.de>
	<6d4aad460901080523o73f0955fx6d63bf1a420d0b4f@mail.gmail.com>
	<alpine.LRH.2.00.0901081428010.7928@reclus.nhh.no>
	<DCE876F4-50BE-43B0-8007-DC685DC228C3@eva.mpg.de>
Message-ID: <A059C56A-54F7-466D-8DD4-AE1C6EF087CD@eva.mpg.de>

Hi,

one simple possibility to draw seamless maps based on e.g.  
TM_WORLD_BORDERS_SIMPL-0.2 is to draw each polygon in question twice  
meaning first the 'normal' polygon and afterwards the transformed  
polygon by simply adding 360 to each x-value (for maps with lon from  
-180 to 540).

The following frugal example illustrates it:
< 
------------------------------------------------------------------------>
library("maptools")
load(url("http://spatial.nhh.no/R/etc/ 
TM_WORLD_BORDERS_SIMPL-0.2.RData"))

wrld_simpl <- wrld_simpl[wrld_simpl$NAME != "Antarctica",]

# Aruba is only a dummy to init the plot plus axes
plot(wrld_simpl[wrld_simpl$NAME=="Aruba",],
   xlim=c(130, 240), # which viewport
   ylim=c(-20, 90),  # should be displayed
   asp=1,
   axes=T, pbg='white')


nirvana <- sapply(wrld_simpl at polygons,
   function(x) sapply(x at Polygons,
     function(y) {
       # draw the normal polygon
       polygon(y at coords,
         col=colors()[which(wrld_simpl$ISO3==x at ID)*2+1],
         border=NA
       );
       # draw the transformed polygon (lon + 360deg)
       polygon(y at coords + rep(c(360, 0), each=dim(y at coords)[1]),
        col=colors()[which(wrld_simpl$ISO3==x at ID)*2+1],
        border=NA
       )
     }
   ))

#polygon's col setting is only for demonstration!
< 
------------------------------------------------------------------------>

or try to set the viewport to:
xlim=c(100, 435)
ylim=c(-90, 90)


etc.

--Hans



From greenberg at ucdavis.edu  Fri Jan 30 17:17:54 2009
From: greenberg at ucdavis.edu (Jonathan Greenberg)
Date: Fri, 30 Jan 2009 08:17:54 -0800
Subject: [R-sig-Geo] Vector to raster conversion...
Message-ID: <49832832.5050406@ucdavis.edu>

Question:

    If I have a polygon shapefile, and I want to rasterize each polygon 
given a certain grid cell resolution, is there a way to do this 
completely within R?  I'm considering porting our vector<->raster bridge 
"starspan" (http://starspan.casil.ucdavis.edu/doku/doku.php) to R code, 
but this is a critical portion of the algorithm.  If the answer is "yes" 
-- does that answer include "weird" polygons like donuts?

--j

-- 

Jonathan A. Greenberg, PhD
Postdoctoral Scholar
Center for Spatial Technologies and Remote Sensing (CSTARS)
University of California, Davis
One Shields Avenue
The Barn, Room 250N
Davis, CA 95616
Cell: 415-794-5043
AIM: jgrn307, MSN: jgrn307 at hotmail.com, Gchat: jgrn307



From Roger.Bivand at nhh.no  Fri Jan 30 17:43:05 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 30 Jan 2009 17:43:05 +0100 (CET)
Subject: [R-sig-Geo] Vector to raster conversion...
In-Reply-To: <49832832.5050406@ucdavis.edu>
References: <49832832.5050406@ucdavis.edu>
Message-ID: <alpine.LRH.2.00.0901301728120.25553@reclus.nhh.no>

On Fri, 30 Jan 2009, Jonathan Greenberg wrote:

> Question:
>
>   If I have a polygon shapefile, and I want to rasterize each polygon given 
> a certain grid cell resolution, is there a way to do this completely within 
> R?  I'm considering porting our vector<->raster bridge "starspan" 
> (http://starspan.casil.ucdavis.edu/doku/doku.php) to R code, but this is a 
> critical portion of the algorithm.  If the answer is "yes" -- does that 
> answer include "weird" polygons like donuts?

Jonathan,

In principle, the overlay() method in the sp package for "SpatialPolygon" 
and "SpatialPoints" objects, specifically the:

sp:::pointsInSpatialPolygons

function is where to start. The underlying assumption is that raster cell 
support can be cast to cell centre point support. This function first 
finds candidate polygons by testing polygon bounding boxes, then hands off 
to:

sp:::pointsInPolys2

which calls:

sp:::pointsInPolygons

Here you can see that hole handling at the per-ring stage is attempted, 
but does depend on the imported rings declaring their hole status 
correctly. It is possible to use checkPolygonsHoles() in maptools, but 
this takes time.

Hope this helps, porting starspans would be very welcome - I guess users 
at the moment use it loose-coupled by reading and writing files.

The overlay methods are open to optimisation (you'll see that bits of 
sp:::pointsInSpatialPolygons moves heavier-lifting out to C).

Roger

>
> --j
>
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From kjetil1001 at gmail.com  Fri Jan 30 17:45:37 2009
From: kjetil1001 at gmail.com (Kjetil Halvorsen)
Date: Fri, 30 Jan 2009 13:45:37 -0300
Subject: [R-sig-Geo] Problem with SpatialPolygons containing a hole
In-Reply-To: <alpine.LRH.2.00.0901291442420.20895@reclus.nhh.no>
References: <0D27CA81-9CC7-4B39-B7A9-D72CCC55FB8C@eva.mpg.de>
	<alpine.LRH.2.00.0901291257250.15975@reclus.nhh.no>
	<E4FDEDE4-F4D3-4CB5-9A07-2BA124143280@eva.mpg.de>
	<alpine.LRH.2.00.0901291442420.20895@reclus.nhh.no>
Message-ID: <1f6d6c820901300845t70bdd367k520f74414b202180@mail.gmail.com>

On Thu, Jan 29, 2009 at 10:51, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> On Thu, 29 Jan 2009, Hans-J?rg Bibiko wrote:
>
>>
>> On 29.01.2009, at 13:08, Roger Bivand wrote:
>>
>>> Set the pbg= argument to set the "bg" (background) to something other
>>> than "transparent" - if it is transparent, the previously plotted larger and
>>> encompassing polygon is still visible. I'm afraid that the documentation,
>>> which should be in ?"SpatialPolygons-class" where the plot method is
>>> described, is in the maptools package, in ?plot.polylist - this will be
>>> fixed.
>>
>> Thanks.
>>
>> plot(pseSP,col='red', pbg='white')
>>
>> works. But this also implies that:
>> - one is not able to create a transparent hole(?)
>
> No. By assumption, a hole is smaller than the enclosing polygon surrounding
> it. Both are "Polygon" objects in a "Polygons" object, and these are plotted
> from largest to smallest. So if a hole is transparent, you will see the
> polygon lying underneath and around it, so won't see the hole. "Polygon"
> objects are simply rings of coordinates, not topological structures.
>
>> - and one has to care about the correct plotting order or to set the
>> correct pbg if that 'hole' belongs to another polygon
>
> By assumption, "Polygon" objects that are holes should only be within
> another "Polygon" object belonging to the same "Polygons" object. It is
> possible that data in the wild do not follow this structure, though it is
> hard to think of a real case of a hole (say lake) belonging to one county,
> but lying in a different county.

That surely goes in Bolivia. Everything goes in Bolivia.

Kjetil


>
> Roger
>
>>
>> Cheers,
>> --Hans
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at stat.math.ethz.ch
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
> --
> Roger Bivand
> Economic Geography Section, Department of Economics, Norwegian School of
> Economics and Business Administration, Helleveien 30, N-5045 Bergen,
> Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
> e-mail: Roger.Bivand at nhh.no
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>



-- 
"Mathematics is not the rigid and rigidity-producing schema that the
layman thinks it is; rather, in it we find ourselves at that meeting
point of constraint and freedom that is the very essence of human
nature."
                                     - Hermann Weyl



From richard.feldman at mail.mcgill.ca  Fri Jan 30 19:12:16 2009
From: richard.feldman at mail.mcgill.ca (Richard Feldman)
Date: Fri, 30 Jan 2009 13:12:16 -0500
Subject: [R-sig-Geo] Kriging in gstat - error: cannot allocation vector of
	size
Message-ID: <49834300.1080000@mail.mcgill.ca>

Hello all,

I have been using gstat to krige temperature data with elevation as 
external drift.

feb01.meantemp.krig<-krige(MEANTEMP~elevation, locations= 
feb01.meantemp, newdata=elevation, model=feb01.meantemp.r)

I keep encountering the warning message:

Error: cannot allocate vector of size 20.7 Mb
In addition: Warning messages:
1: In as.list.data.frame(X) :
   Reached total allocation of 1535Mb: see help(memory.size)

I have been kriging separate datasets for each day of the year. Usually 
I can successfully krige 10 days or so before I run into these memory 
problems. I then have to close R and begin again.

To alleviate the problem, I reduced the surface onto which I am kriging. 
Right now it is a 1300km x 600km rectangle comprised of 250m x 250m grid 
cells. I am using about 80 weather stations for the interpolation. Is my 
grid really too big? I ask this because for the grids I do successfully 
interpolate I then use writeAsciigrid in Maptools and I run into the 
same problem: reached total allocation of 1535 Mb. But I'm not even 
interpolating here...just exporting the result as an Ascii grid. I find 
it hard to believe that my interpolation is out of the ordinary compared 
to what other gstat users do...or perhaps I should not be using a 
Windows computer with 2.00Gb of RAM?

Any ideas?

Thank you very much,

Richard
-- 
Richard Feldman, PhD Candidate
Dept. of Biological Sciences, McGill University
W3/5 Stewart Biology Building
1205 Docteur Penfield
Montreal, QC H3A 1B1
514-212-3466
richard.feldman at mail.mcgill.ca



From andersonfaye7 at gmail.com  Sat Jan 31 02:01:43 2009
From: andersonfaye7 at gmail.com (Faye Anderson)
Date: Fri, 30 Jan 2009 19:01:43 -0600
Subject: [R-sig-Geo]  anisotropy
Message-ID: <e06a91f30901301701k17ae7576labf132b6ad5dde19@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090130/5f26d2c6/attachment.pl>

From xingli.giam at adelaide.edu.au  Sat Jan 31 06:05:36 2009
From: xingli.giam at adelaide.edu.au (Xingli Giam)
Date: Sat, 31 Jan 2009 15:35:36 +1030
Subject: [R-sig-Geo] Different Moran's I for same model residuals in
	different runs using moran.mc{spdep}
Message-ID: <1233378336.4983dc20a89d9@webmail.adelaide.edu.au>

Hello List,

I am using moran.mc{spdep} to extract values of Moran's I for a simple GLM
model residuals of binned distances.

However, everytime I run moran.mc() in a new session, Moran's I values are
different. So when I manually plot a correlogram (model residuals Moran's I vs
distance classes), the correlogram looks different every session, although I am
using the same data.

Is this normal? Or is there anything wrong with my code or neighbour weight
lists? When I try removing the glist, and just use (ME0_200.listw <- nb2listw
(nb0_200, style="W", zero.policy=T), I continue to get different Moran's I
values every time I run it.

Here's my code:
## neighbourhood bins for correlogram (0-5000km, in 200 km increments)
nb0_200 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 0, 200, longlat=T)
nb0_200_dists <- nbdists(nb0_200, as.matrix(dat$x_long, dat$y_lat))
nb0_200_sims <- lapply(nb0_200_dists, function(x) (1/x))
ME0_200.listw <- nb2listw(nb0_200, glist=nb0_200_sims, style="W", zero.policy=T)

nb200_400 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 200, 400, longlat=T)
nb200_400_dists <- nbdists(nb200_400, as.matrix(dat$x_long, dat$y_lat))
nb200_400_sims <- lapply(nb200_400_dists, function(x) (1/x))
ME200_400.listw <- nb2listw(nb200_400, glist=nb200_400_sims, style="W",
zero.policy=T)

...

nb4800_5000 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 4800, 5000,
longlat=T)
nb4800_5000_dists <- nbdists(nb4800_5000, as.matrix(dat$x_long, dat$y_lat))
nb4800_5000_sims <- lapply(nb4800_5000_dists, function(x) (1/x))
ME4800_5000.listw <- nb2listw(nb4800_5000, glist=nb4800_5000_sims, style="W",
zero.policy=T)

# Check for spatial autocorrelation using permutation tests for Moran's I
(Monte Carlo sim of 10000 runs)
n1<- moran.mc(residuals(mod1), nsim=9999, listw=ME0_200.listw,
na.action=na.omit, zero.policy=T)
n2<- moran.mc(residuals(mod1), nsim=9999, listw=ME200_400.listw,
na.action=na.omit, zero.policy=T)
...

n25<- moran.mc(residuals(mod1), nsim=9999, listw=ME4800_5000.listw,
na.action=na.omit, zero.policy=T)

# plot correlogram of glm residuals
n.vec <- c(n1$statistic, n2$statistic, n3$statistic, n4$statistic, n5
$statistic, n6$statistic,
n7$statistic, n8$statistic, n9$statistic, n10$statistic, n11$statistic, n12
$statistic,
n13$statistic, n14$statistic, n15$statistic, n16$statistic, n17$statistic, n18
$statistic,
n19$statistic, n20$statistic, n21$statistic, n22$statistic, n23$statistic, n24
$statistic,
n25$statistic)

plot(n.vec, type="b", col="red", ylim=c(-0.5,0.5))

Many thanks,
Xingli



From Roger.Bivand at nhh.no  Sat Jan 31 11:24:44 2009
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sat, 31 Jan 2009 11:24:44 +0100 (CET)
Subject: [R-sig-Geo] Different Moran's I for same model residuals in
 different runs using moran.mc{spdep}
In-Reply-To: <1233378336.4983dc20a89d9@webmail.adelaide.edu.au>
References: <1233378336.4983dc20a89d9@webmail.adelaide.edu.au>
Message-ID: <alpine.LRH.2.00.0901311112260.28688@reclus.nhh.no>

On Sat, 31 Jan 2009, Xingli Giam wrote:

> Hello List,
>
> I am using moran.mc{spdep} to extract values of Moran's I for a simple GLM
> model residuals of binned distances.
>
> However, everytime I run moran.mc() in a new session, Moran's I values 
> are different. So when I manually plot a correlogram (model residuals 
> Moran's I vs distance classes), the correlogram looks different every 
> session, although I am using the same data.

Unless you set the seed to the random number generator for the Monte Carlo 
procedure (set.seed()), each run will get a different stream of numbers, 
hence give possibly somewhat different results, won't it? However, the 
"statistic" component of the returned object that you are extracting is 
the same as that returned by moran.test(), and will not change for the 
same input data and spatial weights.

Please take a longer coffee break (or your prefered beverage), think 
through what you are trying to do, read the relevant literature, make some 
simple examples, and you'll find that you've resolved most of your 
concerns. You are trying to do too much, too fast (deadline?), without 
grasping the essence. If you simplify, you'll see how to do things.

Have you looked at correlog() in pgirmess, which effectively does what you 
"seem" to be trying to do - I pointed this out in a reply several days 
ago?

Roger

PS. Using moran.mc() or moran.test() on residuals is in any case 
inappropriate, you probably ought to be using lm.morantest() on the lm() 
or glm() output object (glm() not well founded in the literature).

>
> Is this normal? Or is there anything wrong with my code or neighbour weight
> lists? When I try removing the glist, and just use (ME0_200.listw <- nb2listw
> (nb0_200, style="W", zero.policy=T), I continue to get different Moran's I
> values every time I run it.
>
> Here's my code:
> ## neighbourhood bins for correlogram (0-5000km, in 200 km increments)
> nb0_200 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 0, 200, longlat=T)
> nb0_200_dists <- nbdists(nb0_200, as.matrix(dat$x_long, dat$y_lat))
> nb0_200_sims <- lapply(nb0_200_dists, function(x) (1/x))
> ME0_200.listw <- nb2listw(nb0_200, glist=nb0_200_sims, style="W", zero.policy=T)
>
> nb200_400 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 200, 400, longlat=T)
> nb200_400_dists <- nbdists(nb200_400, as.matrix(dat$x_long, dat$y_lat))
> nb200_400_sims <- lapply(nb200_400_dists, function(x) (1/x))
> ME200_400.listw <- nb2listw(nb200_400, glist=nb200_400_sims, style="W",
> zero.policy=T)
>
> ...
>
> nb4800_5000 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 4800, 5000,
> longlat=T)
> nb4800_5000_dists <- nbdists(nb4800_5000, as.matrix(dat$x_long, dat$y_lat))
> nb4800_5000_sims <- lapply(nb4800_5000_dists, function(x) (1/x))
> ME4800_5000.listw <- nb2listw(nb4800_5000, glist=nb4800_5000_sims, style="W",
> zero.policy=T)
>
> # Check for spatial autocorrelation using permutation tests for Moran's I
> (Monte Carlo sim of 10000 runs)
> n1<- moran.mc(residuals(mod1), nsim=9999, listw=ME0_200.listw,
> na.action=na.omit, zero.policy=T)
> n2<- moran.mc(residuals(mod1), nsim=9999, listw=ME200_400.listw,
> na.action=na.omit, zero.policy=T)
> ...
>
> n25<- moran.mc(residuals(mod1), nsim=9999, listw=ME4800_5000.listw,
> na.action=na.omit, zero.policy=T)
>
> # plot correlogram of glm residuals
> n.vec <- c(n1$statistic, n2$statistic, n3$statistic, n4$statistic, n5
> $statistic, n6$statistic,
> n7$statistic, n8$statistic, n9$statistic, n10$statistic, n11$statistic, n12
> $statistic,
> n13$statistic, n14$statistic, n15$statistic, n16$statistic, n17$statistic, n18
> $statistic,
> n19$statistic, n20$statistic, n21$statistic, n22$statistic, n23$statistic, n24
> $statistic,
> n25$statistic)
>
> plot(n.vec, type="b", col="red", ylim=c(-0.5,0.5))
>
> Many thanks,
> Xingli
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Helleveien 30, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no



From xingli.giam at adelaide.edu.au  Sat Jan 31 13:30:17 2009
From: xingli.giam at adelaide.edu.au (Xingli Giam)
Date: Sat, 31 Jan 2009 23:00:17 +1030
Subject: [R-sig-Geo] Different Moran's I for same model residuals in
	different runs using moran.mc{spdep}
Message-ID: <1233405017.49844459c6d22@webmail.adelaide.edu.au>

Thanks Roger for the reply and advice.

Rest assured I am taking my time with this. I have been spending the last week
looking at all the relevant examples, and running through the code given in the
helpfiles, as well as your spdep vignette. I am also using my own data as
examples to learn more about the different functions.

I realised my code for dnearneigh() is wrong! I used as.matrix instead of cbind
to create the matrix of long-lat coordinates!

That resulted in my weight lists object being inconsistent! I used cbind, and
different sessions returned the same Moran's I statistic (used lm.morantest on
your advice) on my same data and weights!

Thank goodness for the list! I am learning alot everyday!

Many thanks,
Xingli
(P.S. Thanks for the correlog{pgirmess} tip!)


Quoting Roger Bivand <Roger.Bivand at nhh.no>:

> On Sat, 31 Jan 2009, Xingli Giam wrote:
>
> > Hello List,
> >
> > I am using moran.mc{spdep} to extract values of Moran's I for a simple GLM
> > model residuals of binned distances.
> >
> > However, everytime I run moran.mc() in a new session, Moran's I values
> > are different. So when I manually plot a correlogram (model residuals
> > Moran's I vs distance classes), the correlogram looks different every
> > session, although I am using the same data.
>
> Unless you set the seed to the random number generator for the Monte Carlo
> procedure (set.seed()), each run will get a different stream of numbers,
> hence give possibly somewhat different results, won't it? However, the
> "statistic" component of the returned object that you are extracting is
> the same as that returned by moran.test(), and will not change for the
> same input data and spatial weights.
>
> Please take a longer coffee break (or your prefered beverage), think
> through what you are trying to do, read the relevant literature, make some
> simple examples, and you'll find that you've resolved most of your
> concerns. You are trying to do too much, too fast (deadline?), without
> grasping the essence. If you simplify, you'll see how to do things.
>
> Have you looked at correlog() in pgirmess, which effectively does what you
> "seem" to be trying to do - I pointed this out in a reply several days
> ago?
>
> Roger
>
> PS. Using moran.mc() or moran.test() on residuals is in any case
> inappropriate, you probably ought to be using lm.morantest() on the lm()
> or glm() output object (glm() not well founded in the literature).
>
> >
> > Is this normal? Or is there anything wrong with my code or neighbour weight
> > lists? When I try removing the glist, and just use (ME0_200.listw <-
> nb2listw
> > (nb0_200, style="W", zero.policy=T), I continue to get different Moran's I
> > values every time I run it.
> >
> > Here's my code:
> > ## neighbourhood bins for correlogram (0-5000km, in 200 km increments)
> > nb0_200 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 0, 200, longlat=T)
> > nb0_200_dists <- nbdists(nb0_200, as.matrix(dat$x_long, dat$y_lat))
> > nb0_200_sims <- lapply(nb0_200_dists, function(x) (1/x))
> > ME0_200.listw <- nb2listw(nb0_200, glist=nb0_200_sims, style="W",
> zero.policy=T)
> >
> > nb200_400 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 200, 400,
> longlat=T)
> > nb200_400_dists <- nbdists(nb200_400, as.matrix(dat$x_long, dat$y_lat))
> > nb200_400_sims <- lapply(nb200_400_dists, function(x) (1/x))
> > ME200_400.listw <- nb2listw(nb200_400, glist=nb200_400_sims, style="W",
> > zero.policy=T)
> >
> > ...
> >
> > nb4800_5000 <- dnearneigh(as.matrix(dat$x_long, dat$y_lat), 4800, 5000,
> > longlat=T)
> > nb4800_5000_dists <- nbdists(nb4800_5000, as.matrix(dat$x_long, dat$y_lat))
> > nb4800_5000_sims <- lapply(nb4800_5000_dists, function(x) (1/x))
> > ME4800_5000.listw <- nb2listw(nb4800_5000, glist=nb4800_5000_sims,
> style="W",
> > zero.policy=T)
> >
> > # Check for spatial autocorrelation using permutation tests for Moran's I
> > (Monte Carlo sim of 10000 runs)
> > n1<- moran.mc(residuals(mod1), nsim=9999, listw=ME0_200.listw,
> > na.action=na.omit, zero.policy=T)
> > n2<- moran.mc(residuals(mod1), nsim=9999, listw=ME200_400.listw,
> > na.action=na.omit, zero.policy=T)
> > ...
> >
> > n25<- moran.mc(residuals(mod1), nsim=9999, listw=ME4800_5000.listw,
> > na.action=na.omit, zero.policy=T)
> >
> > # plot correlogram of glm residuals
> > n.vec <- c(n1$statistic, n2$statistic, n3$statistic, n4$statistic, n5
> > $statistic, n6$statistic,
> > n7$statistic, n8$statistic, n9$statistic, n10$statistic, n11$statistic, n12
> > $statistic,
> > n13$statistic, n14$statistic, n15$statistic, n16$statistic, n17$statistic,
> n18
> > $statistic,
> > n19$statistic, n20$statistic, n21$statistic, n22$statistic, n23$statistic,
> n24
> > $statistic,
> > n25$statistic)
> >
> > plot(n.vec, type="b", col="red", ylim=c(-0.5,0.5))
> >
> > Many thanks,
> > Xingli
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at stat.math.ethz.ch
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
>
> --
> Roger Bivand
> Economic Geography Section, Department of Economics, Norwegian School of
> Economics and Business Administration, Helleveien 30, N-5045 Bergen,
> Norway. voice: +47 55 95 93 55; fax +47 55 95 95 43
> e-mail: Roger.Bivand at nhh.no
>
>



From jmscrosby at googlemail.com  Sat Jan 31 14:40:07 2009
From: jmscrosby at googlemail.com (James Crosby)
Date: Sat, 31 Jan 2009 13:40:07 +0000
Subject: [R-sig-Geo] Scale shapefile for Lattice Cloud Plot
Message-ID: <e9aed9490901310540u2448d344q7c1b60cc86f62055@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20090131/f73eb43d/attachment.pl>

