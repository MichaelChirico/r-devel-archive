From er|nm@hodge@@ @end|ng |rom gm@||@com  Tue Nov  2 20:38:57 2021
From: er|nm@hodge@@ @end|ng |rom gm@||@com (Erin Hodgess)
Date: Tue, 2 Nov 2021 13:38:57 -0600
Subject: [R-sig-Geo] Deprecated packages
Message-ID: <CACxE24niy6_u1UM7adhWW-cPD_vxd2rd7TBJLoQvhH=6xf5G4Q@mail.gmail.com>

Hello there!

Are both maptools and automap going away, please?

Also, is anyone putting together a sort of substitution list for old
packages going to new packages, please?  Just wondering.  I was thinking
about it if no one else is.

Thanks,
Erin

-- 
Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From edzer@pebe@m@ @end|ng |rom un|-muen@ter@de  Tue Nov  2 22:53:44 2021
From: edzer@pebe@m@ @end|ng |rom un|-muen@ter@de (Edzer Pebesma)
Date: Tue, 2 Nov 2021 22:53:44 +0100
Subject: [R-sig-Geo] Deprecated packages
In-Reply-To: <CACxE24niy6_u1UM7adhWW-cPD_vxd2rd7TBJLoQvhH=6xf5G4Q@mail.gmail.com>
References: <CACxE24niy6_u1UM7adhWW-cPD_vxd2rd7TBJLoQvhH=6xf5G4Q@mail.gmail.com>
Message-ID: <ae4f80fb-5b9c-37f8-f70e-e3fc0e38b536@uni-muenster.de>

Hi Erin, I am also thinking about it.

With Roger's retirement, rgdal, rgeos and maptools will effectively go 
away, by the end of 2023. We are working on contingency plans and 
instructions for package maintainers, and will share on this list as 
soon as there is something to share.

For automap, I have no clue; it hasn't been updated for a long time but 
doesn't depend on one of these three.

On 02/11/2021 20:38, Erin Hodgess wrote:
> Hello there!
> 
> Are both maptools and automap going away, please?
> 
> Also, is anyone putting together a sort of substitution list for old
> packages going to new packages, please?  Just wondering.  I was thinking
> about it if no one else is.
> 
> Thanks,
> Erin
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081


From er|nm@hodge@@ @end|ng |rom gm@||@com  Wed Nov  3 03:33:53 2021
From: er|nm@hodge@@ @end|ng |rom gm@||@com (Erin Hodgess)
Date: Tue, 2 Nov 2021 20:33:53 -0600
Subject: [R-sig-Geo] Deprecated packages
In-Reply-To: <ae4f80fb-5b9c-37f8-f70e-e3fc0e38b536@uni-muenster.de>
References: <CACxE24niy6_u1UM7adhWW-cPD_vxd2rd7TBJLoQvhH=6xf5G4Q@mail.gmail.com>
 <ae4f80fb-5b9c-37f8-f70e-e3fc0e38b536@uni-muenster.de>
Message-ID: <CACxE24kVmoYLQeCoru1B5Mymr8+C-5ZXoGJCiGj82Cf4BTL5QQ@mail.gmail.com>

Thanks so much.

If you need some back up, please let me know.

Erin


On Tue, Nov 2, 2021 at 3:53 PM Edzer Pebesma <edzer.pebesma at uni-muenster.de>
wrote:

> Hi Erin, I am also thinking about it.
>
> With Roger's retirement, rgdal, rgeos and maptools will effectively go
> away, by the end of 2023. We are working on contingency plans and
> instructions for package maintainers, and will share on this list as
> soon as there is something to share.
>
> For automap, I have no clue; it hasn't been updated for a long time but
> doesn't depend on one of these three.
>
> On 02/11/2021 20:38, Erin Hodgess wrote:
> > Hello there!
> >
> > Are both maptools and automap going away, please?
> >
> > Also, is anyone putting together a sort of substitution list for old
> > packages going to new packages, please?  Just wondering.  I was thinking
> > about it if no one else is.
> >
> > Thanks,
> > Erin
> >
>
> --
> Edzer Pebesma
> Institute for Geoinformatics
> Heisenbergstrasse 2, 48151 Muenster, Germany
> Phone: +49 251 8333081
>
-- 
Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From p@u|o@||ore@@m@|| @end|ng |rom gm@||@com  Tue Nov  9 18:39:49 2021
From: p@u|o@||ore@@m@|| @end|ng |rom gm@||@com (Paulo Flores Ribeiro)
Date: Tue, 9 Nov 2021 17:39:49 +0000
Subject: [R-sig-Geo] Identify specific pixel neighbours
Message-ID: <e998438f-f454-6398-9051-ba5c35bdeb00@gmail.com>

I would like to create a raster from an existing one, where each pixel 
in the new raster is set to 1 if the corresponding pixel in the existing 
map is in the direct neighbourhood (8 neighbouring pixels) of at least 1 
pixel with a particular value, or 0 if otherwise (e.g., create a raster 
that identifies all "agricultural" pixels that are neighbours of "urban" 
pixels). How to do this in the most computationally efficient way?
Thanks in advance, PauloFR


From @trev|@@n| @end|ng |rom |u@v@|t  Wed Nov 10 07:32:48 2021
From: @trev|@@n| @end|ng |rom |u@v@|t (Sebastiano Trevisani)
Date: Wed, 10 Nov 2021 07:32:48 +0100
Subject: [R-sig-Geo] Identify specific pixel neighbours
In-Reply-To: <e998438f-f454-6398-9051-ba5c35bdeb00@gmail.com>
References: <e998438f-f454-6398-9051-ba5c35bdeb00@gmail.com>
Message-ID: <CAC8_bdHViDOjrNkyx6rZJL+rze5WqkAt4sGGBuTfwE3GVyoVSQ@mail.gmail.com>

Hi Paulo,

you could use a focal analysis approach using the "terra" package. You
could build for each category (e.g., "urban", "forest", etc)
a raster with an indicator coding (1 and 0) and then apply simple kernel
(weight matrix, as below) doing the summation of the neighboring pixels.

1 1 1
1 NA 1
1 1 1

If the resulting pixel (at the center of the kernel) is >0 means that one
of the neighboring pixels is of the considered category.

But maybe there are specialized packages doing directly this.

Sincerely,

Sebastiano


*      Sebastiano Trevisani, Ph.D.*
*            Associate Professor*
*Applied and Environmental Geology*


*  https://orcid.org/0000-0001-8436-7798
<https://orcid.org/0000-0001-8436-7798>*
*IUAV University of Venice: www.iuav.it <http://www.iuav.it/>*

*Address: Dorsoduro 2206,  Venice 30123, Italy Tel:    +39. 041. 257
1299Mail:    strevisani at iuav.it <strevisani at iuav.it> *
*"Le opinioni espresse sono riferibili esclusivamente all'autore e non *
* riflettono in alcun modo una posizione ufficiale dello IUAV "*
*"The views expressed are purely those of the writer and may not in
any circumstances be regarded as stating an official position of the IUAV."*


On Tue, Nov 9, 2021 at 6:40 PM Paulo Flores Ribeiro <
paulo.flores.mail at gmail.com> wrote:

> I would like to create a raster from an existing one, where each pixel
> in the new raster is set to 1 if the corresponding pixel in the existing
> map is in the direct neighbourhood (8 neighbouring pixels) of at least 1
> pixel with a particular value, or 0 if otherwise (e.g., create a raster
> that identifies all "agricultural" pixels that are neighbours of "urban"
> pixels). How to do this in the most computationally efficient way?
> Thanks in advance, PauloFR
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From p@u|o@||ore@@m@|| @end|ng |rom gm@||@com  Wed Nov 10 16:14:45 2021
From: p@u|o@||ore@@m@|| @end|ng |rom gm@||@com (Paulo Flores Ribeiro)
Date: Wed, 10 Nov 2021 15:14:45 +0000
Subject: [R-sig-Geo] Identify specific pixel neighbours
In-Reply-To: <CAC8_bdHViDOjrNkyx6rZJL+rze5WqkAt4sGGBuTfwE3GVyoVSQ@mail.gmail.com>
References: <e998438f-f454-6398-9051-ba5c35bdeb00@gmail.com>
 <CAC8_bdHViDOjrNkyx6rZJL+rze5WqkAt4sGGBuTfwE3GVyoVSQ@mail.gmail.com>
Message-ID: <772982dc-43d0-69b9-a0ef-0c2389e88c95@gmail.com>

Thank you, Sebastiano. That worked for me.

Cheers, PauloFR


?s 06:32 de 10/11/2021, Sebastiano Trevisani escreveu:
> Hi Paulo,
>
> you could use a focal analysis approach using the "terra" package. You 
> could build for each category (e.g., "urban", "forest", etc)
> a raster with an indicator coding (1 and 0) and then apply simple 
> kernel (weight matrix, as below) doing the summation of the 
> neighboring pixels.
>
> 1 1 1
> 1 NA 1
> 1 1 1
>
> If the resulting pixel (at the center of the kernel) is >0 means that 
> one of the neighboring pixels is of the considered category.
>
> But maybe there are specialized packages doing directly this.
>
> Sincerely,
>
> Sebastiano
>
>
> /*Sebastiano Trevisani, Ph.D.*/
> /*? ? ? Associate Professor*/
> /*Applied and Environmental Geology*/
> /*
> //
> _https://orcid.org/0000-0001-8436-7798_
>
> */
> /*
> /IUAV University of Venice: //
> /*
> /www.iuav.it <http://www.iuav.it/>/
> */
> /
> *//
> Address: Dorsoduro 2206,? Venice 30123, Italy
> /Tel: +39. 041. 257 1299/
> /Mail: strevisani at iuav.it/
>
> /
> /"Le opinioni espresse sono riferibili esclusivamente all'autore e non //
> /?riflettono in alcun modo una posizione ufficiale dello IUAV "/
> /
> /
> /"The views expressed are purely those of the writer and may not in any //
> /circumstances be regarded as stating an official position of the IUAV."/
> /
> /
>
>
> On Tue, Nov 9, 2021 at 6:40 PM Paulo Flores Ribeiro 
> <paulo.flores.mail at gmail.com> wrote:
>
>     I would like to create a raster from an existing one, where each
>     pixel
>     in the new raster is set to 1 if the corresponding pixel in the
>     existing
>     map is in the direct neighbourhood (8 neighbouring pixels) of at
>     least 1
>     pixel with a particular value, or 0 if otherwise (e.g., create a
>     raster
>     that identifies all "agricultural" pixels that are neighbours of
>     "urban"
>     pixels). How to do this in the most computationally efficient way?
>     Thanks in advance, PauloFR
>
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
	[[alternative HTML version deleted]]


From p@u|o@||ore@@m@|| @end|ng |rom gm@||@com  Fri Nov 12 14:09:29 2021
From: p@u|o@||ore@@m@|| @end|ng |rom gm@||@com (Paulo Flores Ribeiro)
Date: Fri, 12 Nov 2021 13:09:29 +0000
Subject: [R-sig-Geo] using mapview to plot raster with integer values
Message-ID: <4d22b251-a294-f37e-8007-19bf6b58e7f7@gmail.com>

I'm trying to plot a raster where pixels can only assume integer values 
1, 2 or 3, identifying 3 land use classes. The map does fine when 
plotted with the base r function: plot(rastername). However, I would 
like to use mapview (or another package for interactive maps) but it 
creates pixels with non-integer values on transition boundaries between 
classes (eg between classes 1 and 2 it creates a transition zone with 
some pixels assuming non-integer values 1.2033, 1.4221, 1.7119, etc.). 
Any way to avoid this? Thanks in advance, PauloFR


From t|m@@ppe|h@n@ @end|ng |rom gm@||@com  Fri Nov 12 14:36:37 2021
From: t|m@@ppe|h@n@ @end|ng |rom gm@||@com (Tim Salabim)
Date: Fri, 12 Nov 2021 14:36:37 +0100
Subject: [R-sig-Geo] using mapview to plot raster with integer values
In-Reply-To: <4d22b251-a294-f37e-8007-19bf6b58e7f7@gmail.com>
References: <4d22b251-a294-f37e-8007-19bf6b58e7f7@gmail.com>
Message-ID: <CAMbH+HjRUYMYWhomEB343a73+MOvcq6p0ZSoVnhwda7ODHVQZg@mail.gmail.com>

Hi Paolo,
I am assuming the raster is being warped/projected upon rendering. By
default we use 'bilinear' resampling.

2 possible solutions:

1) set the method for projecting with mapview(rst, method = "ngb") for
nearest-neighbor resampling
2) set mapview(rst, native.crs = TRUE) so that the raster does not get
projected and hence not resampled (though you'll lose the background
maps).

HTH
Tim

On Fri, Nov 12, 2021 at 2:10 PM Paulo Flores Ribeiro
<paulo.flores.mail at gmail.com> wrote:
>
> I'm trying to plot a raster where pixels can only assume integer values
> 1, 2 or 3, identifying 3 land use classes. The map does fine when
> plotted with the base r function: plot(rastername). However, I would
> like to use mapview (or another package for interactive maps) but it
> creates pixels with non-integer values on transition boundaries between
> classes (eg between classes 1 and 2 it creates a transition zone with
> some pixels assuming non-integer values 1.2033, 1.4221, 1.7119, etc.).
> Any way to avoid this? Thanks in advance, PauloFR
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From p@u|o@||ore@@m@|| @end|ng |rom gm@||@com  Fri Nov 12 14:43:42 2021
From: p@u|o@||ore@@m@|| @end|ng |rom gm@||@com (Paulo Flores Ribeiro)
Date: Fri, 12 Nov 2021 13:43:42 +0000
Subject: [R-sig-Geo] using mapview to plot raster with integer values
In-Reply-To: <CAMbH+HjRUYMYWhomEB343a73+MOvcq6p0ZSoVnhwda7ODHVQZg@mail.gmail.com>
References: <4d22b251-a294-f37e-8007-19bf6b58e7f7@gmail.com>
 <CAMbH+HjRUYMYWhomEB343a73+MOvcq6p0ZSoVnhwda7ODHVQZg@mail.gmail.com>
Message-ID: <e8545e4b-06ee-445f-7a40-9ee8cd54f426@gmail.com>

Your first solution solved it perfectly!
Thanks,
PauloFR

?s 13:36 de 12/11/2021, Tim Salabim escreveu:
> Hi Paolo,
> I am assuming the raster is being warped/projected upon rendering. By
> default we use 'bilinear' resampling.
>
> 2 possible solutions:
>
> 1) set the method for projecting with mapview(rst, method = "ngb") for
> nearest-neighbor resampling
> 2) set mapview(rst, native.crs = TRUE) so that the raster does not get
> projected and hence not resampled (though you'll lose the background
> maps).
>
> HTH
> Tim
>
> On Fri, Nov 12, 2021 at 2:10 PM Paulo Flores Ribeiro
> <paulo.flores.mail at gmail.com> wrote:
>> I'm trying to plot a raster where pixels can only assume integer values
>> 1, 2 or 3, identifying 3 land use classes. The map does fine when
>> plotted with the base r function: plot(rastername). However, I would
>> like to use mapview (or another package for interactive maps) but it
>> creates pixels with non-integer values on transition boundaries between
>> classes (eg between classes 1 and 2 it creates a transition zone with
>> some pixels assuming non-integer values 1.2033, 1.4221, 1.7119, etc.).
>> Any way to avoid this? Thanks in advance, PauloFR
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From dexter@|ocke @end|ng |rom gm@||@com  Fri Nov 12 23:23:02 2021
From: dexter@|ocke @end|ng |rom gm@||@com (Dexter Locke)
Date: Fri, 12 Nov 2021 17:23:02 -0500
Subject: [R-sig-Geo] self-intersecting polygons
Message-ID: <CAA=SVwEd0XW-th9KfQMYJzidzGLd7PfAh8kKL4D06Gy+CBOXdw@mail.gmail.com>

Dear list,

I have a set of 15 and 30 minute drive-time polygons created
from mapboxapi::mb_isochrone. Ultimately I want to erase the smaller
polygons from the larger so that the polygons are non-overlapping,
concentric rings.

The whole dataset includes ~1600 polygons for each drive-time spread out
over the 50 US states plus Washington DC and Puerto Rico. 13 of them have
apparent geometry errors, but the example below includes just 4 polygons
with one self intersection in Hawaii.

script (also below) and data available here:
http://dexterlocke.com/wp-content/uploads/2021/11/reprex_files.zip (I
couldn't figure out how to get the script to load data into R from a URL)

library(sf)
library(tidyverse)

# read in data
(small <- st_read(paste0(getwd(), '/data/reprex_files/small_polys.shp')))
(large <- st_read(paste0(getwd(), '/data/reprex_files/large_polys.shp')))

# look on basemap (optional)
mapview::mapview(small, color = 'black') + mapview::mapview(large, color =
'red')

# create function to erase holes to make 'donuts'
# https://github.com/r-spatial/sf/issues/346
st_erase <- function(x, y) st_difference(x, st_union(st_combine(y)))

# apply the erasing function
donut <- large %>% st_erase(., small) # fails

# 1st option explored, turn off spherical geometry as suggested here:
# https://github.com/r-spatial/sf/issues/1762

# here
https://gis.stackexchange.com/questions/404385/r-sf-some-edges-are-crossing-in-a-multipolygon-how-to-make-it-valid-when-using/404454

# and here
#
https://stackoverflow.com/questions/68478179/how-to-resolve-spherical-geometry-failures-when-joining-spatial-data/68481205#68481205

sf_use_s2(FALSE)

donut <- large %>% st_erase(., small) # results in errors..

# are the polygons valid? Yes
small %>% st_is_valid()
large %>% st_is_valid()

# 2nd option explored, more intensive geometry cleaning, as suggested here:
#
https://stackoverflow.com/questions/68478179/how-to-resolve-spherical-geometry-failures-when-joining-spatial-data/68481205#68481205
and elsewhere
small$geometry <- small$geometry %>%
  s2::s2_rebuild() %>%
  sf::st_as_sfc()

large$geometry <- large$geometry %>%
  s2::s2_rebuild() %>%
  sf::st_as_sfc()

# re-attempt
donut <- large %>% st_erase(., small) # results in errors

# 3rd option explored, zero-distance buffer to help reset geometries
small <- small %>% st_buffer(., 0)
large <- large %>% st_buffer(., 0)

# re-attempt
donut <- large %>% st_erase(., small) # more self-intersection errors

# 4th option explored, reproject before buffering
# suggested here:
https://gis.stackexchange.com/questions/404385/r-sf-some-edges-are-crossing-in-a-multipolygon-how-to-make-it-valid-when-using/404388#404388
small <- small %>% st_transform(crs = 5070) %>% st_buffer(0) %>%
st_transform(crs = 4269)
large <- large %>% st_transform(crs = 5070) %>% st_buffer(0) %>%
st_transform(crs = 4269)

# re-attempt
donut <- large %>% st_erase(., small) # more self-intersection errors

# 5th option
small_s2 <- small %>%
  s2::s2_rebuild(.,
                 options = s2::s2_options(edge_type = "undirected",
                 duplicate_edges = FALSE,
                 split_crossing_edges = TRUE,
                 validate = TRUE)) %>%
  st_as_sf()

large_s2 <- large %>%
  s2::s2_rebuild(.,
                 options = s2::s2_options(edge_type = "undirected",
                 duplicate_edges = FALSE,
                 split_crossing_edges = TRUE,
                 validate = TRUE)) %>%
  st_as_sf()

# re-attempt
donut <- large_s2 %>% st_erase(., small_s2) # more self-intersection errors


# 6th option explored using rgeos and sp, as suggested here:
#
https://gis.stackexchange.com/questions/163445/getting-topologyexception-input-geom-1-is-invalid-which-is-due-to-self-intersec/163480#163480

# same problems..

# so where is the double-vertex?
large %>%
  filter(id == 1017) %>% # based on zooming and panning around via mapview
  st_cast('POINT') %>%
  mutate(geom_text = as.character(geometry)) %>%
  group_by(geom_text) %>%
  count() %>%
  arrange(desc(n))

# as indicated from some errors and from query directly above
bad_point <- tibble(row = 1, x = -155.056700377001,  y = 19.5963974859705)
%>%
  st_as_sf(., coords = c('x', 'y')) %>%
  st_set_crs(4269)

# take a look
large %>% mapview::mapview() + mapview::mapview(bad_point, color = 'red')

# Ok, so there are two vertices there.. how can I remove the duplicates and
get on with the rest of the analyses?

Thank you, Dexter

	[[alternative HTML version deleted]]


From g@b|k|m01 @end|ng |rom gm@||@com  Sat Nov 13 08:54:43 2021
From: g@b|k|m01 @end|ng |rom gm@||@com (Gabriel Cotlier)
Date: Sat, 13 Nov 2021 09:54:43 +0200
Subject: [R-sig-Geo] Question on hierarchical data format 5 .h5 file format
Message-ID: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>

Hello,

I would like to be able to visualize / plot a specific data layer within
the structure a hierarchical data file format .h5  in R. I could observe
the structure as follows :

library(rhdf5)
r= h5ls(file.choose())
r

and also in this way identify the Group and Name of the data to be plotted,
however I've tried I could not access the data itself, nor plot it as a
raster layer with its corresponding geographic coordinates.
I would like to be able to select such data, plot it as a raster layer and
if possible save it as GeoTIFF file format to be further processed with the
raster package as a common raster layer.

If any small guidance example, reprex, of this procedure is possible
it would be appreciated.

Thanks a lot in advance
Kind regards,
Gabriel Cotlier
-- 
Gabriel Cotlier, PhD
Haifa Research Center for Theoretical Physics and Astrophysics (HCTPA)
University of Haifa
Israel

	[[alternative HTML version deleted]]


From md@umner @end|ng |rom gm@||@com  Sat Nov 13 11:14:08 2021
From: md@umner @end|ng |rom gm@||@com (Michael Sumner)
Date: Sat, 13 Nov 2021 21:14:08 +1100
Subject: [R-sig-Geo] 
 Question on hierarchical data format 5 .h5 file format
In-Reply-To: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>
References: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>
Message-ID: <CAAcGz99vZP_o08kxVZWoE_CNQ6aza3+xx33obmtK-j54P-jJrQ@mail.gmail.com>

try terra::rast() or stars::read_stars() on the file, both use gdal to
interrogate and read. What you get depends on the structure of the files,
variables interpreted as subdatasets. stars is more general but sees
variables as 2D arrays with bands, terra calls these bands layers.

Alternatively try raster::raster() or RNetCDF or tidync which might be more
straightforward than rhdf5 but all are quite different to each other and to
the gdal view.

hth

On Sat, 13 Nov 2021, 18:56 Gabriel Cotlier, <gabiklm01 at gmail.com> wrote:

> Hello,
>
> I would like to be able to visualize / plot a specific data layer within
> the structure a hierarchical data file format .h5  in R. I could observe
> the structure as follows :
>
> library(rhdf5)
> r= h5ls(file.choose())
> r
>
> and also in this way identify the Group and Name of the data to be plotted,
> however I've tried I could not access the data itself, nor plot it as a
> raster layer with its corresponding geographic coordinates.
> I would like to be able to select such data, plot it as a raster layer and
> if possible save it as GeoTIFF file format to be further processed with the
> raster package as a common raster layer.
>
> If any small guidance example, reprex, of this procedure is possible
> it would be appreciated.
>
> Thanks a lot in advance
> Kind regards,
> Gabriel Cotlier
> --
> Gabriel Cotlier, PhD
> Haifa Research Center for Theoretical Physics and Astrophysics (HCTPA)
> University of Haifa
> Israel
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From g@b|k|m01 @end|ng |rom gm@||@com  Sat Nov 13 11:22:23 2021
From: g@b|k|m01 @end|ng |rom gm@||@com (Gabriel Cotlier)
Date: Sat, 13 Nov 2021 12:22:23 +0200
Subject: [R-sig-Geo] 
 Question on hierarchical data format 5 .h5 file format
In-Reply-To: <CAAcGz99vZP_o08kxVZWoE_CNQ6aza3+xx33obmtK-j54P-jJrQ@mail.gmail.com>
References: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>
 <CAAcGz99vZP_o08kxVZWoE_CNQ6aza3+xx33obmtK-j54P-jJrQ@mail.gmail.com>
Message-ID: <CAAKwTDFea2HAesd=a2cnmnd6iP2xnE+vqkrj6OEYgr2KDgB-vQ@mail.gmail.com>

Dear Michael Summer,
Thanks a lot for your swift reply.
I will give a try to the procedure you mentioned.
Kind regards,
Gabriel


On Sat, Nov 13, 2021 at 12:14 PM Michael Sumner <mdsumner at gmail.com> wrote:

> try terra::rast() or stars::read_stars() on the file, both use gdal to
> interrogate and read. What you get depends on the structure of the files,
> variables interpreted as subdatasets. stars is more general but sees
> variables as 2D arrays with bands, terra calls these bands layers.
>
> Alternatively try raster::raster() or RNetCDF or tidync which might be
> more straightforward than rhdf5 but all are quite different to each other
> and to the gdal view.
>
> hth
>
> On Sat, 13 Nov 2021, 18:56 Gabriel Cotlier, <gabiklm01 at gmail.com> wrote:
>
>> Hello,
>>
>> I would like to be able to visualize / plot a specific data layer within
>> the structure a hierarchical data file format .h5  in R. I could observe
>> the structure as follows :
>>
>> library(rhdf5)
>> r= h5ls(file.choose())
>> r
>>
>> and also in this way identify the Group and Name of the data to be
>> plotted,
>> however I've tried I could not access the data itself, nor plot it as a
>> raster layer with its corresponding geographic coordinates.
>> I would like to be able to select such data, plot it as a raster layer and
>> if possible save it as GeoTIFF file format to be further processed with
>> the
>> raster package as a common raster layer.
>>
>> If any small guidance example, reprex, of this procedure is possible
>> it would be appreciated.
>>
>> Thanks a lot in advance
>> Kind regards,
>> Gabriel Cotlier
>> --
>> Gabriel Cotlier, PhD
>> Haifa Research Center for Theoretical Physics and Astrophysics (HCTPA)
>> University of Haifa
>> Israel
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>

	[[alternative HTML version deleted]]


From g@b|k|m01 @end|ng |rom gm@||@com  Sun Nov 14 10:47:47 2021
From: g@b|k|m01 @end|ng |rom gm@||@com (Gabriel Cotlier)
Date: Sun, 14 Nov 2021 11:47:47 +0200
Subject: [R-sig-Geo] 
 Question on hierarchical data format 5 .h5 file format
In-Reply-To: <CAAKwTDFea2HAesd=a2cnmnd6iP2xnE+vqkrj6OEYgr2KDgB-vQ@mail.gmail.com>
References: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>
 <CAAcGz99vZP_o08kxVZWoE_CNQ6aza3+xx33obmtK-j54P-jJrQ@mail.gmail.com>
 <CAAKwTDFea2HAesd=a2cnmnd6iP2xnE+vqkrj6OEYgr2KDgB-vQ@mail.gmail.com>
Message-ID: <CAAKwTDH3okmY0FhFy7nHWnmXaoZ_9esRMAjoA=mUiZBi5xXHbA@mail.gmail.com>

Dear Michael,

Following your advice I have tired :

library(terra)
library(raster)
library(dplyr)

r = terra::rast(file.choose())
plot(r$LST)
r_lst = r$LST
r_lst %>% raster()
plot(r_lst)

Then I effectively get a raster layer format from the raster package as I
wanted, but looking at the plot and the raster layer information--see
bellow-- the scene appears to need both latitude and longitude for correct
geolocation, how can I do this procedure?

> r_lst %>% raster()
class      : RasterLayer
dimensions : 5632, 5400, 30412800  (nrow, ncol, ncell)
resolution : 1, 1  (x, y)
extent     : 0, 5400, 0, 5632  (xmin, xmax, ymin, ymax)
crs        : NA
source     : LST
names      : LST
values     : 0, 65535  (min, max)

The extent and the resolution are not the correct ones.
Maybe in the same .h5  is all the data for georeferencing it although I
could not see how to get to it and apply it to the layer.
There is also another file with complementary data related to geolocation
but how can I query it, and get the data for geolocation and apply it to
the raster layer?.
The objective is to save it as a GeoTIFF file to be opened in QGIS with
correct geolocation.

What do you suggest for converting the .h5 file to a georeferenced Raster
Layer in GeoTIFF format ?

Thanks a lot.
Kind regards,
Gabriel

On Sat, Nov 13, 2021 at 12:22 PM Gabriel Cotlier <gabiklm01 at gmail.com>
wrote:

> Dear Michael Summer,
> Thanks a lot for your swift reply.
> I will give a try to the procedure you mentioned.
> Kind regards,
> Gabriel
>
>
> On Sat, Nov 13, 2021 at 12:14 PM Michael Sumner <mdsumner at gmail.com>
> wrote:
>
>> try terra::rast() or stars::read_stars() on the file, both use gdal to
>> interrogate and read. What you get depends on the structure of the files,
>> variables interpreted as subdatasets. stars is more general but sees
>> variables as 2D arrays with bands, terra calls these bands layers.
>>
>> Alternatively try raster::raster() or RNetCDF or tidync which might be
>> more straightforward than rhdf5 but all are quite different to each other
>> and to the gdal view.
>>
>> hth
>>
>> On Sat, 13 Nov 2021, 18:56 Gabriel Cotlier, <gabiklm01 at gmail.com> wrote:
>>
>>> Hello,
>>>
>>> I would like to be able to visualize / plot a specific data layer within
>>> the structure a hierarchical data file format .h5  in R. I could observe
>>> the structure as follows :
>>>
>>> library(rhdf5)
>>> r= h5ls(file.choose())
>>> r
>>>
>>> and also in this way identify the Group and Name of the data to be
>>> plotted,
>>> however I've tried I could not access the data itself, nor plot it as a
>>> raster layer with its corresponding geographic coordinates.
>>> I would like to be able to select such data, plot it as a raster layer
>>> and
>>> if possible save it as GeoTIFF file format to be further processed with
>>> the
>>> raster package as a common raster layer.
>>>
>>> If any small guidance example, reprex, of this procedure is possible
>>> it would be appreciated.
>>>
>>> Thanks a lot in advance
>>> Kind regards,
>>> Gabriel Cotlier
>>> --
>>> Gabriel Cotlier, PhD
>>> Haifa Research Center for Theoretical Physics and Astrophysics (HCTPA)
>>> University of Haifa
>>> Israel
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>

	[[alternative HTML version deleted]]


From edzer@pebe@m@ @end|ng |rom un|-muen@ter@de  Sun Nov 14 11:00:43 2021
From: edzer@pebe@m@ @end|ng |rom un|-muen@ter@de (Edzer Pebesma)
Date: Sun, 14 Nov 2021 11:00:43 +0100
Subject: [R-sig-Geo] 
 Question on hierarchical data format 5 .h5 file format
In-Reply-To: <CAAKwTDH3okmY0FhFy7nHWnmXaoZ_9esRMAjoA=mUiZBi5xXHbA@mail.gmail.com>
References: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>
 <CAAcGz99vZP_o08kxVZWoE_CNQ6aza3+xx33obmtK-j54P-jJrQ@mail.gmail.com>
 <CAAKwTDFea2HAesd=a2cnmnd6iP2xnE+vqkrj6OEYgr2KDgB-vQ@mail.gmail.com>
 <CAAKwTDH3okmY0FhFy7nHWnmXaoZ_9esRMAjoA=mUiZBi5xXHbA@mail.gmail.com>
Message-ID: <46da87ef-b298-d5c8-c705-7e421a53b8bf@uni-muenster.de>

This might be because the grid is not regular but possibly curvilinear, 
having two raster layers with the lon & lat values for each pixel. Can 
you share a sample data set?

On 14/11/2021 10:47, Gabriel Cotlier wrote:
> Dear Michael,
> 
> Following your advice I have tired :
> 
> library(terra)
> library(raster)
> library(dplyr)
> 
> r = terra::rast(file.choose())
> plot(r$LST)
> r_lst = r$LST
> r_lst %>% raster()
> plot(r_lst)
> 
> Then I effectively get a raster layer format from the raster package as I
> wanted, but looking at the plot and the raster layer information--see
> bellow-- the scene appears to need both latitude and longitude for correct
> geolocation, how can I do this procedure?
> 
>> r_lst %>% raster()
> class      : RasterLayer
> dimensions : 5632, 5400, 30412800  (nrow, ncol, ncell)
> resolution : 1, 1  (x, y)
> extent     : 0, 5400, 0, 5632  (xmin, xmax, ymin, ymax)
> crs        : NA
> source     : LST
> names      : LST
> values     : 0, 65535  (min, max)
> 
> The extent and the resolution are not the correct ones.
> Maybe in the same .h5  is all the data for georeferencing it although I
> could not see how to get to it and apply it to the layer.
> There is also another file with complementary data related to geolocation
> but how can I query it, and get the data for geolocation and apply it to
> the raster layer?.
> The objective is to save it as a GeoTIFF file to be opened in QGIS with
> correct geolocation.
> 
> What do you suggest for converting the .h5 file to a georeferenced Raster
> Layer in GeoTIFF format ?
> 
> Thanks a lot.
> Kind regards,
> Gabriel
> 
> On Sat, Nov 13, 2021 at 12:22 PM Gabriel Cotlier <gabiklm01 at gmail.com>
> wrote:
> 
>> Dear Michael Summer,
>> Thanks a lot for your swift reply.
>> I will give a try to the procedure you mentioned.
>> Kind regards,
>> Gabriel
>>
>>
>> On Sat, Nov 13, 2021 at 12:14 PM Michael Sumner <mdsumner at gmail.com>
>> wrote:
>>
>>> try terra::rast() or stars::read_stars() on the file, both use gdal to
>>> interrogate and read. What you get depends on the structure of the files,
>>> variables interpreted as subdatasets. stars is more general but sees
>>> variables as 2D arrays with bands, terra calls these bands layers.
>>>
>>> Alternatively try raster::raster() or RNetCDF or tidync which might be
>>> more straightforward than rhdf5 but all are quite different to each other
>>> and to the gdal view.
>>>
>>> hth
>>>
>>> On Sat, 13 Nov 2021, 18:56 Gabriel Cotlier, <gabiklm01 at gmail.com> wrote:
>>>
>>>> Hello,
>>>>
>>>> I would like to be able to visualize / plot a specific data layer within
>>>> the structure a hierarchical data file format .h5  in R. I could observe
>>>> the structure as follows :
>>>>
>>>> library(rhdf5)
>>>> r= h5ls(file.choose())
>>>> r
>>>>
>>>> and also in this way identify the Group and Name of the data to be
>>>> plotted,
>>>> however I've tried I could not access the data itself, nor plot it as a
>>>> raster layer with its corresponding geographic coordinates.
>>>> I would like to be able to select such data, plot it as a raster layer
>>>> and
>>>> if possible save it as GeoTIFF file format to be further processed with
>>>> the
>>>> raster package as a common raster layer.
>>>>
>>>> If any small guidance example, reprex, of this procedure is possible
>>>> it would be appreciated.
>>>>
>>>> Thanks a lot in advance
>>>> Kind regards,
>>>> Gabriel Cotlier
>>>> --
>>>> Gabriel Cotlier, PhD
>>>> Haifa Research Center for Theoretical Physics and Astrophysics (HCTPA)
>>>> University of Haifa
>>>> Israel
>>>>
>>>>          [[alternative HTML version deleted]]
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>
>>>
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081


From edzer@pebe@m@ @end|ng |rom un|-muen@ter@de  Sun Nov 14 13:59:04 2021
From: edzer@pebe@m@ @end|ng |rom un|-muen@ter@de (Edzer Pebesma)
Date: Sun, 14 Nov 2021 13:59:04 +0100
Subject: [R-sig-Geo] 
 Question on hierarchical data format 5 .h5 file format
In-Reply-To: <46da87ef-b298-d5c8-c705-7e421a53b8bf@uni-muenster.de>
References: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>
 <CAAcGz99vZP_o08kxVZWoE_CNQ6aza3+xx33obmtK-j54P-jJrQ@mail.gmail.com>
 <CAAKwTDFea2HAesd=a2cnmnd6iP2xnE+vqkrj6OEYgr2KDgB-vQ@mail.gmail.com>
 <CAAKwTDH3okmY0FhFy7nHWnmXaoZ_9esRMAjoA=mUiZBi5xXHbA@mail.gmail.com>
 <46da87ef-b298-d5c8-c705-7e421a53b8bf@uni-muenster.de>
Message-ID: <a57e0f35-eb5c-c960-93a6-d5db285efb23@uni-muenster.de>

Gabriel shared the data with me (off-list, 1Gb) and it contains two hdf5 
datasets, one containing the raster of the longitude and latitude, the 
other rasters with the attributres (LST) but no coordinates. I could get 
a (rough: factor 50 downsampling) plot with stars using:

library(stars) 

lat = 
read_stars("HDF5:ECOSTRESS_L1B_GEO_11712_012_20200730T061029_0601_01.h5://Geolocation/latitude")
lon = 
read_stars("HDF5:ECOSTRESS_L1B_GEO_11712_012_20200730T061029_0601_01.h5://Geolocation/longitude")

var = 
"HDF5:ECOSTRESS_L2_LSTE_11712_012_20200730T061029_0601_01.h5://SDS/LST" 

lst = read_stars(var, curvilinear = list(x = lon, y = lat)) 

plot(lst, downsample = 50, axes = TRUE, reset = FALSE)

library(rnaturalearth)
ne = ne_countries(returnclass = "sf") 

plot(st_geometry(ne), add = TRUE, border = 'yellow')
# california border seems to make sense


but I'm not sure how to make a regular raster (in some CRS) out of this 
for exporting to GeoTIFF.

On 14/11/2021 11:00, Edzer Pebesma wrote:
> This might be because the grid is not regular but possibly curvilinear, 
> having two raster layers with the lon & lat values for each pixel. Can 
> you share a sample data set?
> 
> On 14/11/2021 10:47, Gabriel Cotlier wrote:
>> Dear Michael,
>>
>> Following your advice I have tired :
>>
>> library(terra)
>> library(raster)
>> library(dplyr)
>>
>> r = terra::rast(file.choose())
>> plot(r$LST)
>> r_lst = r$LST
>> r_lst %>% raster()
>> plot(r_lst)
>>
>> Then I effectively get a raster layer format from the raster package as I
>> wanted, but looking at the plot and the raster layer information--see
>> bellow-- the scene appears to need both latitude and longitude for 
>> correct
>> geolocation, how can I do this procedure?
>>
>>> r_lst %>% raster()
>> class????? : RasterLayer
>> dimensions : 5632, 5400, 30412800? (nrow, ncol, ncell)
>> resolution : 1, 1? (x, y)
>> extent???? : 0, 5400, 0, 5632? (xmin, xmax, ymin, ymax)
>> crs??????? : NA
>> source???? : LST
>> names????? : LST
>> values???? : 0, 65535? (min, max)
>>
>> The extent and the resolution are not the correct ones.
>> Maybe in the same .h5? is all the data for georeferencing it although I
>> could not see how to get to it and apply it to the layer.
>> There is also another file with complementary data related to geolocation
>> but how can I query it, and get the data for geolocation and apply it to
>> the raster layer?.
>> The objective is to save it as a GeoTIFF file to be opened in QGIS with
>> correct geolocation.
>>
>> What do you suggest for converting the .h5 file to a georeferenced Raster
>> Layer in GeoTIFF format ?
>>
>> Thanks a lot.
>> Kind regards,
>> Gabriel
>>
>> On Sat, Nov 13, 2021 at 12:22 PM Gabriel Cotlier <gabiklm01 at gmail.com>
>> wrote:
>>
>>> Dear Michael Summer,
>>> Thanks a lot for your swift reply.
>>> I will give a try to the procedure you mentioned.
>>> Kind regards,
>>> Gabriel
>>>
>>>
>>> On Sat, Nov 13, 2021 at 12:14 PM Michael Sumner <mdsumner at gmail.com>
>>> wrote:
>>>
>>>> try terra::rast() or stars::read_stars() on the file, both use gdal to
>>>> interrogate and read. What you get depends on the structure of the 
>>>> files,
>>>> variables interpreted as subdatasets. stars is more general but sees
>>>> variables as 2D arrays with bands, terra calls these bands layers.
>>>>
>>>> Alternatively try raster::raster() or RNetCDF or tidync which might be
>>>> more straightforward than rhdf5 but all are quite different to each 
>>>> other
>>>> and to the gdal view.
>>>>
>>>> hth
>>>>
>>>> On Sat, 13 Nov 2021, 18:56 Gabriel Cotlier, <gabiklm01 at gmail.com> 
>>>> wrote:
>>>>
>>>>> Hello,
>>>>>
>>>>> I would like to be able to visualize / plot a specific data layer 
>>>>> within
>>>>> the structure a hierarchical data file format .h5? in R. I could 
>>>>> observe
>>>>> the structure as follows :
>>>>>
>>>>> library(rhdf5)
>>>>> r= h5ls(file.choose())
>>>>> r
>>>>>
>>>>> and also in this way identify the Group and Name of the data to be
>>>>> plotted,
>>>>> however I've tried I could not access the data itself, nor plot it 
>>>>> as a
>>>>> raster layer with its corresponding geographic coordinates.
>>>>> I would like to be able to select such data, plot it as a raster layer
>>>>> and
>>>>> if possible save it as GeoTIFF file format to be further processed 
>>>>> with
>>>>> the
>>>>> raster package as a common raster layer.
>>>>>
>>>>> If any small guidance example, reprex, of this procedure is possible
>>>>> it would be appreciated.
>>>>>
>>>>> Thanks a lot in advance
>>>>> Kind regards,
>>>>> Gabriel Cotlier
>>>>> -- 
>>>>> Gabriel Cotlier, PhD
>>>>> Haifa Research Center for Theoretical Physics and Astrophysics (HCTPA)
>>>>> University of Haifa
>>>>> Israel
>>>>>
>>>>> ???????? [[alternative HTML version deleted]]
>>>>>
>>>>> _______________________________________________
>>>>> R-sig-Geo mailing list
>>>>> R-sig-Geo at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>
>>>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081


From g@b|k|m01 @end|ng |rom gm@||@com  Sun Nov 14 14:11:26 2021
From: g@b|k|m01 @end|ng |rom gm@||@com (Gabriel Cotlier)
Date: Sun, 14 Nov 2021 15:11:26 +0200
Subject: [R-sig-Geo] 
 Question on hierarchical data format 5 .h5 file format
In-Reply-To: <a57e0f35-eb5c-c960-93a6-d5db285efb23@uni-muenster.de>
References: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>
 <CAAcGz99vZP_o08kxVZWoE_CNQ6aza3+xx33obmtK-j54P-jJrQ@mail.gmail.com>
 <CAAKwTDFea2HAesd=a2cnmnd6iP2xnE+vqkrj6OEYgr2KDgB-vQ@mail.gmail.com>
 <CAAKwTDH3okmY0FhFy7nHWnmXaoZ_9esRMAjoA=mUiZBi5xXHbA@mail.gmail.com>
 <46da87ef-b298-d5c8-c705-7e421a53b8bf@uni-muenster.de>
 <a57e0f35-eb5c-c960-93a6-d5db285efb23@uni-muenster.de>
Message-ID: <CAAKwTDF3Wr2byT4QHzog2reBE7yE9sGkjc=zV+=6pncBzLueng@mail.gmail.com>

Hello Edzer,
Thanks a lot.
The scaling factor to convert to LST is 0.02
Regards,
Gabriel

On Sun, Nov 14, 2021 at 2:59 PM Edzer Pebesma <edzer.pebesma at uni-muenster.de>
wrote:

> Gabriel shared the data with me (off-list, 1Gb) and it contains two hdf5
> datasets, one containing the raster of the longitude and latitude, the
> other rasters with the attributres (LST) but no coordinates. I could get
> a (rough: factor 50 downsampling) plot with stars using:
>
> library(stars)
>
> lat =
>
> read_stars("HDF5:ECOSTRESS_L1B_GEO_11712_012_20200730T061029_0601_01.h5://Geolocation/latitude")
> lon =
>
> read_stars("HDF5:ECOSTRESS_L1B_GEO_11712_012_20200730T061029_0601_01.h5://Geolocation/longitude")
>
> var =
> "HDF5:ECOSTRESS_L2_LSTE_11712_012_20200730T061029_0601_01.h5://SDS/LST"
>
> lst = read_stars(var, curvilinear = list(x = lon, y = lat))
>
> plot(lst, downsample = 50, axes = TRUE, reset = FALSE)
>
> library(rnaturalearth)
> ne = ne_countries(returnclass = "sf")
>
> plot(st_geometry(ne), add = TRUE, border = 'yellow')
> # california border seems to make sense
>
>
> but I'm not sure how to make a regular raster (in some CRS) out of this
> for exporting to GeoTIFF.
>
> On 14/11/2021 11:00, Edzer Pebesma wrote:
> > This might be because the grid is not regular but possibly curvilinear,
> > having two raster layers with the lon & lat values for each pixel. Can
> > you share a sample data set?
> >
> > On 14/11/2021 10:47, Gabriel Cotlier wrote:
> >> Dear Michael,
> >>
> >> Following your advice I have tired :
> >>
> >> library(terra)
> >> library(raster)
> >> library(dplyr)
> >>
> >> r = terra::rast(file.choose())
> >> plot(r$LST)
> >> r_lst = r$LST
> >> r_lst %>% raster()
> >> plot(r_lst)
> >>
> >> Then I effectively get a raster layer format from the raster package as
> I
> >> wanted, but looking at the plot and the raster layer information--see
> >> bellow-- the scene appears to need both latitude and longitude for
> >> correct
> >> geolocation, how can I do this procedure?
> >>
> >>> r_lst %>% raster()
> >> class      : RasterLayer
> >> dimensions : 5632, 5400, 30412800  (nrow, ncol, ncell)
> >> resolution : 1, 1  (x, y)
> >> extent     : 0, 5400, 0, 5632  (xmin, xmax, ymin, ymax)
> >> crs        : NA
> >> source     : LST
> >> names      : LST
> >> values     : 0, 65535  (min, max)
> >>
> >> The extent and the resolution are not the correct ones.
> >> Maybe in the same .h5  is all the data for georeferencing it although I
> >> could not see how to get to it and apply it to the layer.
> >> There is also another file with complementary data related to
> geolocation
> >> but how can I query it, and get the data for geolocation and apply it to
> >> the raster layer?.
> >> The objective is to save it as a GeoTIFF file to be opened in QGIS with
> >> correct geolocation.
> >>
> >> What do you suggest for converting the .h5 file to a georeferenced
> Raster
> >> Layer in GeoTIFF format ?
> >>
> >> Thanks a lot.
> >> Kind regards,
> >> Gabriel
> >>
> >> On Sat, Nov 13, 2021 at 12:22 PM Gabriel Cotlier <gabiklm01 at gmail.com>
> >> wrote:
> >>
> >>> Dear Michael Summer,
> >>> Thanks a lot for your swift reply.
> >>> I will give a try to the procedure you mentioned.
> >>> Kind regards,
> >>> Gabriel
> >>>
> >>>
> >>> On Sat, Nov 13, 2021 at 12:14 PM Michael Sumner <mdsumner at gmail.com>
> >>> wrote:
> >>>
> >>>> try terra::rast() or stars::read_stars() on the file, both use gdal to
> >>>> interrogate and read. What you get depends on the structure of the
> >>>> files,
> >>>> variables interpreted as subdatasets. stars is more general but sees
> >>>> variables as 2D arrays with bands, terra calls these bands layers.
> >>>>
> >>>> Alternatively try raster::raster() or RNetCDF or tidync which might be
> >>>> more straightforward than rhdf5 but all are quite different to each
> >>>> other
> >>>> and to the gdal view.
> >>>>
> >>>> hth
> >>>>
> >>>> On Sat, 13 Nov 2021, 18:56 Gabriel Cotlier, <gabiklm01 at gmail.com>
> >>>> wrote:
> >>>>
> >>>>> Hello,
> >>>>>
> >>>>> I would like to be able to visualize / plot a specific data layer
> >>>>> within
> >>>>> the structure a hierarchical data file format .h5  in R. I could
> >>>>> observe
> >>>>> the structure as follows :
> >>>>>
> >>>>> library(rhdf5)
> >>>>> r= h5ls(file.choose())
> >>>>> r
> >>>>>
> >>>>> and also in this way identify the Group and Name of the data to be
> >>>>> plotted,
> >>>>> however I've tried I could not access the data itself, nor plot it
> >>>>> as a
> >>>>> raster layer with its corresponding geographic coordinates.
> >>>>> I would like to be able to select such data, plot it as a raster
> layer
> >>>>> and
> >>>>> if possible save it as GeoTIFF file format to be further processed
> >>>>> with
> >>>>> the
> >>>>> raster package as a common raster layer.
> >>>>>
> >>>>> If any small guidance example, reprex, of this procedure is possible
> >>>>> it would be appreciated.
> >>>>>
> >>>>> Thanks a lot in advance
> >>>>> Kind regards,
> >>>>> Gabriel Cotlier
> >>>>> --
> >>>>> Gabriel Cotlier, PhD
> >>>>> Haifa Research Center for Theoretical Physics and Astrophysics
> (HCTPA)
> >>>>> University of Haifa
> >>>>> Israel
> >>>>>
> >>>>>          [[alternative HTML version deleted]]
> >>>>>
> >>>>> _______________________________________________
> >>>>> R-sig-Geo mailing list
> >>>>> R-sig-Geo at r-project.org
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>>>>
> >>>>
> >>
> >>     [[alternative HTML version deleted]]
> >>
> >> _______________________________________________
> >> R-sig-Geo mailing list
> >> R-sig-Geo at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>
> >
>
> --
> Edzer Pebesma
> Institute for Geoinformatics
> Heisenbergstrasse 2, 48151 Muenster, Germany
> Phone: +49 251 8333081
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From edzer@pebe@m@ @end|ng |rom un|-muen@ter@de  Sun Nov 14 14:13:02 2021
From: edzer@pebe@m@ @end|ng |rom un|-muen@ter@de (Edzer Pebesma)
Date: Sun, 14 Nov 2021 14:13:02 +0100
Subject: [R-sig-Geo] 
 Question on hierarchical data format 5 .h5 file format
In-Reply-To: <a57e0f35-eb5c-c960-93a6-d5db285efb23@uni-muenster.de>
References: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>
 <CAAcGz99vZP_o08kxVZWoE_CNQ6aza3+xx33obmtK-j54P-jJrQ@mail.gmail.com>
 <CAAKwTDFea2HAesd=a2cnmnd6iP2xnE+vqkrj6OEYgr2KDgB-vQ@mail.gmail.com>
 <CAAKwTDH3okmY0FhFy7nHWnmXaoZ_9esRMAjoA=mUiZBi5xXHbA@mail.gmail.com>
 <46da87ef-b298-d5c8-c705-7e421a53b8bf@uni-muenster.de>
 <a57e0f35-eb5c-c960-93a6-d5db285efb23@uni-muenster.de>
Message-ID: <466d2660-0229-f053-cf84-87b2cc63b21a@uni-muenster.de>


On 14/11/2021 13:59, Edzer Pebesma wrote:
> Gabriel shared the data with me (off-list, 1Gb) and it contains two hdf5 
> datasets, one containing the raster of the longitude and latitude, the 
> other rasters with the attributres (LST) but no coordinates. I could get 
> a (rough: factor 50 downsampling) plot with stars using:
> 
> library(stars)
> lat = 
> read_stars("HDF5:ECOSTRESS_L1B_GEO_11712_012_20200730T061029_0601_01.h5://Geolocation/latitude") 
> 
> lon = 
> read_stars("HDF5:ECOSTRESS_L1B_GEO_11712_012_20200730T061029_0601_01.h5://Geolocation/longitude") 
> 
> 
> var = 
> "HDF5:ECOSTRESS_L2_LSTE_11712_012_20200730T061029_0601_01.h5://SDS/LST"
> lst = read_stars(var, curvilinear = list(x = lon, y = lat))
> plot(lst, downsample = 50, axes = TRUE, reset = FALSE)
> 
> library(rnaturalearth)
> ne = ne_countries(returnclass = "sf")
> plot(st_geometry(ne), add = TRUE, border = 'yellow')
> # california border seems to make sense
> 
> 
> but I'm not sure how to make a regular raster (in some CRS) out of this 
> for exporting to GeoTIFF.

This might be useful: https://github.com/r-spatial/stars/issues/386
but converting to polygons will be incredibly slow and memory hungry.


> 
> On 14/11/2021 11:00, Edzer Pebesma wrote:
>> This might be because the grid is not regular but possibly 
>> curvilinear, having two raster layers with the lon & lat values for 
>> each pixel. Can you share a sample data set?
>>
>> On 14/11/2021 10:47, Gabriel Cotlier wrote:
>>> Dear Michael,
>>>
>>> Following your advice I have tired :
>>>
>>> library(terra)
>>> library(raster)
>>> library(dplyr)
>>>
>>> r = terra::rast(file.choose())
>>> plot(r$LST)
>>> r_lst = r$LST
>>> r_lst %>% raster()
>>> plot(r_lst)
>>>
>>> Then I effectively get a raster layer format from the raster package 
>>> as I
>>> wanted, but looking at the plot and the raster layer information--see
>>> bellow-- the scene appears to need both latitude and longitude for 
>>> correct
>>> geolocation, how can I do this procedure?
>>>
>>>> r_lst %>% raster()
>>> class????? : RasterLayer
>>> dimensions : 5632, 5400, 30412800? (nrow, ncol, ncell)
>>> resolution : 1, 1? (x, y)
>>> extent???? : 0, 5400, 0, 5632? (xmin, xmax, ymin, ymax)
>>> crs??????? : NA
>>> source???? : LST
>>> names????? : LST
>>> values???? : 0, 65535? (min, max)
>>>
>>> The extent and the resolution are not the correct ones.
>>> Maybe in the same .h5? is all the data for georeferencing it although I
>>> could not see how to get to it and apply it to the layer.
>>> There is also another file with complementary data related to 
>>> geolocation
>>> but how can I query it, and get the data for geolocation and apply it to
>>> the raster layer?.
>>> The objective is to save it as a GeoTIFF file to be opened in QGIS with
>>> correct geolocation.
>>>
>>> What do you suggest for converting the .h5 file to a georeferenced 
>>> Raster
>>> Layer in GeoTIFF format ?
>>>
>>> Thanks a lot.
>>> Kind regards,
>>> Gabriel
>>>
>>> On Sat, Nov 13, 2021 at 12:22 PM Gabriel Cotlier <gabiklm01 at gmail.com>
>>> wrote:
>>>
>>>> Dear Michael Summer,
>>>> Thanks a lot for your swift reply.
>>>> I will give a try to the procedure you mentioned.
>>>> Kind regards,
>>>> Gabriel
>>>>
>>>>
>>>> On Sat, Nov 13, 2021 at 12:14 PM Michael Sumner <mdsumner at gmail.com>
>>>> wrote:
>>>>
>>>>> try terra::rast() or stars::read_stars() on the file, both use gdal to
>>>>> interrogate and read. What you get depends on the structure of the 
>>>>> files,
>>>>> variables interpreted as subdatasets. stars is more general but sees
>>>>> variables as 2D arrays with bands, terra calls these bands layers.
>>>>>
>>>>> Alternatively try raster::raster() or RNetCDF or tidync which might be
>>>>> more straightforward than rhdf5 but all are quite different to each 
>>>>> other
>>>>> and to the gdal view.
>>>>>
>>>>> hth
>>>>>
>>>>> On Sat, 13 Nov 2021, 18:56 Gabriel Cotlier, <gabiklm01 at gmail.com> 
>>>>> wrote:
>>>>>
>>>>>> Hello,
>>>>>>
>>>>>> I would like to be able to visualize / plot a specific data layer 
>>>>>> within
>>>>>> the structure a hierarchical data file format .h5? in R. I could 
>>>>>> observe
>>>>>> the structure as follows :
>>>>>>
>>>>>> library(rhdf5)
>>>>>> r= h5ls(file.choose())
>>>>>> r
>>>>>>
>>>>>> and also in this way identify the Group and Name of the data to be
>>>>>> plotted,
>>>>>> however I've tried I could not access the data itself, nor plot it 
>>>>>> as a
>>>>>> raster layer with its corresponding geographic coordinates.
>>>>>> I would like to be able to select such data, plot it as a raster 
>>>>>> layer
>>>>>> and
>>>>>> if possible save it as GeoTIFF file format to be further processed 
>>>>>> with
>>>>>> the
>>>>>> raster package as a common raster layer.
>>>>>>
>>>>>> If any small guidance example, reprex, of this procedure is possible
>>>>>> it would be appreciated.
>>>>>>
>>>>>> Thanks a lot in advance
>>>>>> Kind regards,
>>>>>> Gabriel Cotlier
>>>>>> -- 
>>>>>> Gabriel Cotlier, PhD
>>>>>> Haifa Research Center for Theoretical Physics and Astrophysics 
>>>>>> (HCTPA)
>>>>>> University of Haifa
>>>>>> Israel
>>>>>>
>>>>>> ???????? [[alternative HTML version deleted]]
>>>>>>
>>>>>> _______________________________________________
>>>>>> R-sig-Geo mailing list
>>>>>> R-sig-Geo at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>>
>>>>>
>>>
>>> ????[[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081


From md@umner @end|ng |rom gm@||@com  Sun Nov 14 22:26:04 2021
From: md@umner @end|ng |rom gm@||@com (Michael Sumner)
Date: Mon, 15 Nov 2021 08:26:04 +1100
Subject: [R-sig-Geo] 
 Question on hierarchical data format 5 .h5 file format
In-Reply-To: <466d2660-0229-f053-cf84-87b2cc63b21a@uni-muenster.de>
References: <CAAKwTDEzD4aJcbADt2jE5nryAmMtKAO46u+Po1C4w8twdCBZ_A@mail.gmail.com>
 <CAAcGz99vZP_o08kxVZWoE_CNQ6aza3+xx33obmtK-j54P-jJrQ@mail.gmail.com>
 <CAAKwTDFea2HAesd=a2cnmnd6iP2xnE+vqkrj6OEYgr2KDgB-vQ@mail.gmail.com>
 <CAAKwTDH3okmY0FhFy7nHWnmXaoZ_9esRMAjoA=mUiZBi5xXHbA@mail.gmail.com>
 <46da87ef-b298-d5c8-c705-7e421a53b8bf@uni-muenster.de>
 <a57e0f35-eb5c-c960-93a6-d5db285efb23@uni-muenster.de>
 <466d2660-0229-f053-cf84-87b2cc63b21a@uni-muenster.de>
Message-ID: <CAAcGz98mOZxC5Jfw9MMtwZiD_fJsheZGm6-S-hDKLTq1RhMbcg@mail.gmail.com>

see if gdal understands the coordinate arrays already, you can just churn
it through the warper, otherwise construct a vrt that specifies them, which
is a bit obscure how you do it admittedly - but this is a gdal not an R
topic.

Best



On Mon, 15 Nov 2021, 00:22 Edzer Pebesma, <edzer.pebesma at uni-muenster.de>
wrote:

>
> On 14/11/2021 13:59, Edzer Pebesma wrote:
> > Gabriel shared the data with me (off-list, 1Gb) and it contains two hdf5
> > datasets, one containing the raster of the longitude and latitude, the
> > other rasters with the attributres (LST) but no coordinates. I could get
> > a (rough: factor 50 downsampling) plot with stars using:
> >
> > library(stars)
> > lat =
> >
> read_stars("HDF5:ECOSTRESS_L1B_GEO_11712_012_20200730T061029_0601_01.h5://Geolocation/latitude")
>
> >
> > lon =
> >
> read_stars("HDF5:ECOSTRESS_L1B_GEO_11712_012_20200730T061029_0601_01.h5://Geolocation/longitude")
>
> >
> >
> > var =
> > "HDF5:ECOSTRESS_L2_LSTE_11712_012_20200730T061029_0601_01.h5://SDS/LST"
> > lst = read_stars(var, curvilinear = list(x = lon, y = lat))
> > plot(lst, downsample = 50, axes = TRUE, reset = FALSE)
> >
> > library(rnaturalearth)
> > ne = ne_countries(returnclass = "sf")
> > plot(st_geometry(ne), add = TRUE, border = 'yellow')
> > # california border seems to make sense
> >
> >
> > but I'm not sure how to make a regular raster (in some CRS) out of this
> > for exporting to GeoTIFF.
>
> This might be useful: https://github.com/r-spatial/stars/issues/386
> but converting to polygons will be incredibly slow and memory hungry.
>
>
> >
> > On 14/11/2021 11:00, Edzer Pebesma wrote:
> >> This might be because the grid is not regular but possibly
> >> curvilinear, having two raster layers with the lon & lat values for
> >> each pixel. Can you share a sample data set?
> >>
> >> On 14/11/2021 10:47, Gabriel Cotlier wrote:
> >>> Dear Michael,
> >>>
> >>> Following your advice I have tired :
> >>>
> >>> library(terra)
> >>> library(raster)
> >>> library(dplyr)
> >>>
> >>> r = terra::rast(file.choose())
> >>> plot(r$LST)
> >>> r_lst = r$LST
> >>> r_lst %>% raster()
> >>> plot(r_lst)
> >>>
> >>> Then I effectively get a raster layer format from the raster package
> >>> as I
> >>> wanted, but looking at the plot and the raster layer information--see
> >>> bellow-- the scene appears to need both latitude and longitude for
> >>> correct
> >>> geolocation, how can I do this procedure?
> >>>
> >>>> r_lst %>% raster()
> >>> class      : RasterLayer
> >>> dimensions : 5632, 5400, 30412800  (nrow, ncol, ncell)
> >>> resolution : 1, 1  (x, y)
> >>> extent     : 0, 5400, 0, 5632  (xmin, xmax, ymin, ymax)
> >>> crs        : NA
> >>> source     : LST
> >>> names      : LST
> >>> values     : 0, 65535  (min, max)
> >>>
> >>> The extent and the resolution are not the correct ones.
> >>> Maybe in the same .h5  is all the data for georeferencing it although I
> >>> could not see how to get to it and apply it to the layer.
> >>> There is also another file with complementary data related to
> >>> geolocation
> >>> but how can I query it, and get the data for geolocation and apply it
> to
> >>> the raster layer?.
> >>> The objective is to save it as a GeoTIFF file to be opened in QGIS with
> >>> correct geolocation.
> >>>
> >>> What do you suggest for converting the .h5 file to a georeferenced
> >>> Raster
> >>> Layer in GeoTIFF format ?
> >>>
> >>> Thanks a lot.
> >>> Kind regards,
> >>> Gabriel
> >>>
> >>> On Sat, Nov 13, 2021 at 12:22 PM Gabriel Cotlier <gabiklm01 at gmail.com>
> >>> wrote:
> >>>
> >>>> Dear Michael Summer,
> >>>> Thanks a lot for your swift reply.
> >>>> I will give a try to the procedure you mentioned.
> >>>> Kind regards,
> >>>> Gabriel
> >>>>
> >>>>
> >>>> On Sat, Nov 13, 2021 at 12:14 PM Michael Sumner <mdsumner at gmail.com>
> >>>> wrote:
> >>>>
> >>>>> try terra::rast() or stars::read_stars() on the file, both use gdal
> to
> >>>>> interrogate and read. What you get depends on the structure of the
> >>>>> files,
> >>>>> variables interpreted as subdatasets. stars is more general but sees
> >>>>> variables as 2D arrays with bands, terra calls these bands layers.
> >>>>>
> >>>>> Alternatively try raster::raster() or RNetCDF or tidync which might
> be
> >>>>> more straightforward than rhdf5 but all are quite different to each
> >>>>> other
> >>>>> and to the gdal view.
> >>>>>
> >>>>> hth
> >>>>>
> >>>>> On Sat, 13 Nov 2021, 18:56 Gabriel Cotlier, <gabiklm01 at gmail.com>
> >>>>> wrote:
> >>>>>
> >>>>>> Hello,
> >>>>>>
> >>>>>> I would like to be able to visualize / plot a specific data layer
> >>>>>> within
> >>>>>> the structure a hierarchical data file format .h5  in R. I could
> >>>>>> observe
> >>>>>> the structure as follows :
> >>>>>>
> >>>>>> library(rhdf5)
> >>>>>> r= h5ls(file.choose())
> >>>>>> r
> >>>>>>
> >>>>>> and also in this way identify the Group and Name of the data to be
> >>>>>> plotted,
> >>>>>> however I've tried I could not access the data itself, nor plot it
> >>>>>> as a
> >>>>>> raster layer with its corresponding geographic coordinates.
> >>>>>> I would like to be able to select such data, plot it as a raster
> >>>>>> layer
> >>>>>> and
> >>>>>> if possible save it as GeoTIFF file format to be further processed
> >>>>>> with
> >>>>>> the
> >>>>>> raster package as a common raster layer.
> >>>>>>
> >>>>>> If any small guidance example, reprex, of this procedure is possible
> >>>>>> it would be appreciated.
> >>>>>>
> >>>>>> Thanks a lot in advance
> >>>>>> Kind regards,
> >>>>>> Gabriel Cotlier
> >>>>>> --
> >>>>>> Gabriel Cotlier, PhD
> >>>>>> Haifa Research Center for Theoretical Physics and Astrophysics
> >>>>>> (HCTPA)
> >>>>>> University of Haifa
> >>>>>> Israel
> >>>>>>
> >>>>>>          [[alternative HTML version deleted]]
> >>>>>>
> >>>>>> _______________________________________________
> >>>>>> R-sig-Geo mailing list
> >>>>>> R-sig-Geo at r-project.org
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>>>>>
> >>>>>
> >>>
> >>>     [[alternative HTML version deleted]]
> >>>
> >>> _______________________________________________
> >>> R-sig-Geo mailing list
> >>> R-sig-Geo at r-project.org
> >>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>>
> >>
> >
>
> --
> Edzer Pebesma
> Institute for Geoinformatics
> Heisenbergstrasse 2, 48151 Muenster, Germany
> Phone: +49 251 8333081
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From j|n||68 @end|ng |rom gm@||@com  Mon Nov 15 01:54:52 2021
From: j|n||68 @end|ng |rom gm@||@com (Jin Li)
Date: Mon, 15 Nov 2021 11:54:52 +1100
Subject: [R-sig-Geo] Release of a new package steprf: Stepwise Predictive
 Variable Selection for Random Forest
Message-ID: <CAGu_3Z+1L0c5V1CBLhf=us+=s7L83X5-forttB8bb7O4y4oG+Q@mail.gmail.com>

Hi All,

A new package `steprf` is now available on CRAN.  It introduces several
novel predictive variable selection methods for random forest (RF). They
are based on various variable  importance methods and predictive accuracy
in stepwise algorithms. Their performance can be seen in the references
cited in the description of the package.

Cheers,

-- 
Jin
------------------------------------------
Jin Li, PhD
Founder, Data2action, Australia
https://www.researchgate.net/profile/Jin_Li32
https://scholar.google.com/citations?user=Jeot53EAAAAJ&hl=en

	[[alternative HTML version deleted]]


From g@@@uu| @end|ng |rom gm@||@com  Tue Nov 16 02:44:17 2021
From: g@@@uu| @end|ng |rom gm@||@com (ani jaya)
Date: Tue, 16 Nov 2021 10:44:17 +0900
Subject: [R-sig-Geo] simple topography in r
Message-ID: <CAHXS41z4h+93Dz7GjCP8C6odPtq5ODJMxQ9ERZ4jZDo337iVWg@mail.gmail.com>

Dear r-sig-geo,

I need to plot a spatial map that shows a topography/elevation. It is
just to show a basic information so I do not need a high-resolution
map. I already googled and most of them use ggplot. Is there a
straightforward way to do this in base r? Any lead is appreciated.
Thank you so much.

Best regards,
Ani

#area of interest
library("maps")
map('world', xlim = c(100, 160), ylim = c(-45, -5),
    lwd=0.5, col = "grey95", fill = T, interior = T)
map.axes()


From b|@|ev||@t @end|ng |rom gm@||@com  Tue Nov 16 11:36:18 2021
From: b|@|ev||@t @end|ng |rom gm@||@com (=?UTF-8?Q?Bede-Fazekas_=c3=81kos?=)
Date: Tue, 16 Nov 2021 11:36:18 +0100
Subject: [R-sig-Geo] simple topography in r
In-Reply-To: <CAHXS41z4h+93Dz7GjCP8C6odPtq5ODJMxQ9ERZ4jZDo337iVWg@mail.gmail.com>
References: <CAHXS41z4h+93Dz7GjCP8C6odPtq5ODJMxQ9ERZ4jZDo337iVWg@mail.gmail.com>
Message-ID: <5cc2c5a1-72d3-71f7-2d3a-0b3d79901a53@gmail.com>

Dear Ani,
Package 'raster' has a function called getData(), which can download 
SRTM tiles. Then you can simply plot() them.
Or you can use package 'elevatr'.
But I'm sure there are many other alternative solutions.
HTH,
?kos Bede-Fazekas
Centre for Ecological Research, Hungary


2021.11.16. 2:44 keltez?ssel, ani jaya ?rta:
> Dear r-sig-geo,
>
> I need to plot a spatial map that shows a topography/elevation. It is
> just to show a basic information so I do not need a high-resolution
> map. I already googled and most of them use ggplot. Is there a
> straightforward way to do this in base r? Any lead is appreciated.
> Thank you so much.
>
> Best regards,
> Ani
>
> #area of interest
> library("maps")
> map('world', xlim = c(100, 160), ylim = c(-45, -5),
>      lwd=0.5, col = "grey95", fill = T, interior = T)
> map.axes()
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From g@@@uu| @end|ng |rom gm@||@com  Wed Nov 17 02:47:17 2021
From: g@@@uu| @end|ng |rom gm@||@com (ani jaya)
Date: Wed, 17 Nov 2021 10:47:17 +0900
Subject: [R-sig-Geo] simple topography in r
In-Reply-To: <5cc2c5a1-72d3-71f7-2d3a-0b3d79901a53@gmail.com>
References: <CAHXS41z4h+93Dz7GjCP8C6odPtq5ODJMxQ9ERZ4jZDo337iVWg@mail.gmail.com>
 <5cc2c5a1-72d3-71f7-2d3a-0b3d79901a53@gmail.com>
Message-ID: <CAHXS41yFmjyurCbm6jP7nqAgsaxbPf2iHbZs9DaTqR3+3kaZFQ@mail.gmail.com>

Hello Mr. Akos,

Thank you for your suggestion and yes I am following this page to use
the getData() function,

https://www.gis-blog.com/r-raster-data-acquisition/

and I did plot what I want. Thank you.

library(raster)
dem<-getData("alt", country="AUS")
aus <- getData('GADM' , country="AUS", level=0)
plot(dem)
plot(aus, add=T)

On Tue, Nov 16, 2021 at 7:36 PM Bede-Fazekas ?kos <bfalevlist at gmail.com> wrote:
>
> Dear Ani,
> Package 'raster' has a function called getData(), which can download
> SRTM tiles. Then you can simply plot() them.
> Or you can use package 'elevatr'.
> But I'm sure there are many other alternative solutions.
> HTH,
> ?kos Bede-Fazekas
> Centre for Ecological Research, Hungary
>
>
> 2021.11.16. 2:44 keltez?ssel, ani jaya ?rta:
> > Dear r-sig-geo,
> >
> > I need to plot a spatial map that shows a topography/elevation. It is
> > just to show a basic information so I do not need a high-resolution
> > map. I already googled and most of them use ggplot. Is there a
> > straightforward way to do this in base r? Any lead is appreciated.
> > Thank you so much.
> >
> > Best regards,
> > Ani
> >
> > #area of interest
> > library("maps")
> > map('world', xlim = c(100, 160), ylim = c(-45, -5),
> >      lwd=0.5, col = "grey95", fill = T, interior = T)
> > map.axes()
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From btupper @end|ng |rom b|ge|ow@org  Mon Nov 22 20:10:36 2021
From: btupper @end|ng |rom b|ge|ow@org (Ben Tupper)
Date: Mon, 22 Nov 2021 14:10:36 -0500
Subject: [R-sig-Geo] Migrating from proj strings to WKT/EPSG
Message-ID: <CALrbzg01FAP0swrPXH9_J_-cyvc3A-Pqt_qvyk9gKO8sHVN9TA@mail.gmail.com>

Hello,

I have a spatial mesh that provides the following CRS.

proj <- "proj=tmerc +datum=NAD83 +lon_0=-70d10 lat_0=42d50
k=.9999666666666667 x_0=900000 y_0=0"

To use this with the sf package it must be formed as Well Known Text
or a EPSG code. In this particular case there is no EPSG code in the
registry.

My current workflow so I can use this data in sf is to leverage
showWKT() from the rgdal package to cast the proj string to WKT. The
following message is printed when the packages is loaded.

> Please note that rgdal will be retired by the end of 2023, plan transition to sf/stars/terra functions using GDAL and PROJ at your earliest convenience.


rgdal::showWKT(proj) |> sf::st_crs(wkt)

#> Coordinate Reference System:
#>   User input:
PROJCS["unknown",GEOGCS["unknown",DATUM["North_American_Datum_1983",SPHEROID["GRS
1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6269"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",42.8333333333333],PARAMETER["central_meridian",-70.1666666666667],PARAMETER["scale_factor",0.999966666666667],PARAMETER["false_easting",900000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH]]
#>   wkt:
#> PROJCRS["unknown",
#>     BASEGEOGCRS["unknown",
#>         DATUM["North American Datum 1983",
#>             ELLIPSOID["GRS 1980",6378137,298.257222101,
#>                 LENGTHUNIT["metre",1]],
#>             ID["EPSG",6269]],
#>         PRIMEM["Greenwich",0,
#>             ANGLEUNIT["degree",0.0174532925199433],
#>             ID["EPSG",8901]]],
#>     CONVERSION["unnamed",
#>         METHOD["Transverse Mercator",
#>             ID["EPSG",9807]],
#>         PARAMETER["Latitude of natural origin",42.8333333333333,
#>             ANGLEUNIT["degree",0.0174532925199433],
#>             ID["EPSG",8801]],
#>         PARAMETER["Longitude of natural origin",-70.1666666666667,
#>             ANGLEUNIT["degree",0.0174532925199433],
#>             ID["EPSG",8802]],
#>         PARAMETER["Scale factor at natural origin",0.999966666666667,
#>             SCALEUNIT["unity",1],
#>             ID["EPSG",8805]],
#>         PARAMETER["False easting",900000,
#>             LENGTHUNIT["metre",1],
#>             ID["EPSG",8806]],
#>         PARAMETER["False northing",0,
#>             LENGTHUNIT["metre",1],
#>             ID["EPSG",8807]]],
#>     CS[Cartesian,2],
#>         AXIS["easting",east,
#>             ORDER[1],
#>             LENGTHUNIT["metre",1,
#>                 ID["EPSG",9001]]],
#>         AXIS["northing",north,
#>             ORDER[2],
#>             LENGTHUNIT["metre",1,
#>                 ID["EPSG",9001]]]]

In the spirit of not leaving things to the last minute (that's never
happened before!), what are the current options for converting proj
strings to WKT that don?t use rgdal?

Cheers and thanks,
Ben

--
Ben Tupper (he/him)
Bigelow Laboratory for Ocean Science
East Boothbay, Maine
http://www.bigelow.org/
https://eco.bigelow.org


From d|ego@hern@ngomezherrero @end|ng |rom gm@||@com  Mon Nov 22 20:51:02 2021
From: d|ego@hern@ngomezherrero @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_Hernang=C3=B3mez_Herrero?=)
Date: Mon, 22 Nov 2021 20:51:02 +0100
Subject: [R-sig-Geo] Migrating from proj strings to WKT/EPSG
In-Reply-To: <CALrbzg01FAP0swrPXH9_J_-cyvc3A-Pqt_qvyk9gKO8sHVN9TA@mail.gmail.com>
References: <CALrbzg01FAP0swrPXH9_J_-cyvc3A-Pqt_qvyk9gKO8sHVN9TA@mail.gmail.com>
Message-ID: <CAA-ibaxvesU77FJrQ9f2hzq-U5QqRvsLYqp2_7e3OQgOQFkhQw@mail.gmail.com>

Hi Ben:

I don't know if this is relevant for your question, but you can use
proj4strings with sf::st_crs() without using rgdal:

``` r
proj <- "+proj=tmerc +datum=NAD83 +lon_0=-70d10 lat_0=42d50
k=.9999666666666667 x_0=900000 y_0=0"
sf::st_crs(proj)

#> Coordinate Reference System:
#>   User input: +proj=tmerc +datum=NAD83 +lon_0=-70d10 lat_0=42d50
k=.9999666666666667 x_0=900000 y_0=0
#>   wkt:
#> PROJCRS["unknown",
#>     BASEGEOGCRS["unknown",
#>         DATUM["North American Datum 1983",
#>             ELLIPSOID["GRS 1980",6378137,298.257222101,
#>                 LENGTHUNIT["metre",1]],
#>             ID["EPSG",6269]],
#>         PRIMEM["Greenwich",0,
#>             ANGLEUNIT["degree",0.0174532925199433],
#>             ID["EPSG",8901]]],
#>     CONVERSION["unknown",
#>         METHOD["Transverse Mercator",
#>             ID["EPSG",9807]],
#>         PARAMETER["Latitude of natural origin",42.8333333333333,
#>             ANGLEUNIT["degree",0.0174532925199433],
#>             ID["EPSG",8801]],
#>         PARAMETER["Longitude of natural origin",-70.1666666666667,
#>             ANGLEUNIT["degree",0.0174532925199433],
#>             ID["EPSG",8802]],
#>         PARAMETER["Scale factor at natural origin",0.999966666666667,
#>             SCALEUNIT["unity",1],
#>             ID["EPSG",8805]],
#>         PARAMETER["False easting",900000,
#>             LENGTHUNIT["metre",1],
#>             ID["EPSG",8806]],
#>         PARAMETER["False northing",0,
#>             LENGTHUNIT["metre",1],
#>             ID["EPSG",8807]]],
#>     CS[Cartesian,2],
#>         AXIS["(E)",east,
#>             ORDER[1],
#>             LENGTHUNIT["metre",1,
#>                 ID["EPSG",9001]]],
#>         AXIS["(N)",north,
#>             ORDER[2],
#>             LENGTHUNIT["metre",1,
#>                 ID["EPSG",9001]]]]
```


El lun, 22 nov 2021 a las 20:11, Ben Tupper (<btupper at bigelow.org>)
escribi?:

> Hello,
>
> I have a spatial mesh that provides the following CRS.
>
> proj <- "proj=tmerc +datum=NAD83 +lon_0=-70d10 lat_0=42d50
> k=.9999666666666667 x_0=900000 y_0=0"
>
> To use this with the sf package it must be formed as Well Known Text
> or a EPSG code. In this particular case there is no EPSG code in the
> registry.
>
> My current workflow so I can use this data in sf is to leverage
> showWKT() from the rgdal package to cast the proj string to WKT. The
> following message is printed when the packages is loaded.
>
> > Please note that rgdal will be retired by the end of 2023, plan
> transition to sf/stars/terra functions using GDAL and PROJ at your earliest
> convenience.
>
>
> rgdal::showWKT(proj) |> sf::st_crs(wkt)
>
> #> Coordinate Reference System:
> #>   User input:
>
> PROJCS["unknown",GEOGCS["unknown",DATUM["North_American_Datum_1983",SPHEROID["GRS
>
> 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6269"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",42.8333333333333],PARAMETER["central_meridian",-70.1666666666667],PARAMETER["scale_factor",0.999966666666667],PARAMETER["false_easting",900000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH]]
> #>   wkt:
> #> PROJCRS["unknown",
> #>     BASEGEOGCRS["unknown",
> #>         DATUM["North American Datum 1983",
> #>             ELLIPSOID["GRS 1980",6378137,298.257222101,
> #>                 LENGTHUNIT["metre",1]],
> #>             ID["EPSG",6269]],
> #>         PRIMEM["Greenwich",0,
> #>             ANGLEUNIT["degree",0.0174532925199433],
> #>             ID["EPSG",8901]]],
> #>     CONVERSION["unnamed",
> #>         METHOD["Transverse Mercator",
> #>             ID["EPSG",9807]],
> #>         PARAMETER["Latitude of natural origin",42.8333333333333,
> #>             ANGLEUNIT["degree",0.0174532925199433],
> #>             ID["EPSG",8801]],
> #>         PARAMETER["Longitude of natural origin",-70.1666666666667,
> #>             ANGLEUNIT["degree",0.0174532925199433],
> #>             ID["EPSG",8802]],
> #>         PARAMETER["Scale factor at natural origin",0.999966666666667,
> #>             SCALEUNIT["unity",1],
> #>             ID["EPSG",8805]],
> #>         PARAMETER["False easting",900000,
> #>             LENGTHUNIT["metre",1],
> #>             ID["EPSG",8806]],
> #>         PARAMETER["False northing",0,
> #>             LENGTHUNIT["metre",1],
> #>             ID["EPSG",8807]]],
> #>     CS[Cartesian,2],
> #>         AXIS["easting",east,
> #>             ORDER[1],
> #>             LENGTHUNIT["metre",1,
> #>                 ID["EPSG",9001]]],
> #>         AXIS["northing",north,
> #>             ORDER[2],
> #>             LENGTHUNIT["metre",1,
> #>                 ID["EPSG",9001]]]]
>
> In the spirit of not leaving things to the last minute (that's never
> happened before!), what are the current options for converting proj
> strings to WKT that don?t use rgdal?
>
> Cheers and thanks,
> Ben
>
> --
> Ben Tupper (he/him)
> Bigelow Laboratory for Ocean Science
> East Boothbay, Maine
> http://www.bigelow.org/
> https://eco.bigelow.org
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


-- 



Have a nice day!

	[[alternative HTML version deleted]]


From btupper @end|ng |rom b|ge|ow@org  Mon Nov 22 22:51:12 2021
From: btupper @end|ng |rom b|ge|ow@org (Ben Tupper)
Date: Mon, 22 Nov 2021 16:51:12 -0500
Subject: [R-sig-Geo] Migrating from proj strings to WKT/EPSG
In-Reply-To: <CAA-ibaxvesU77FJrQ9f2hzq-U5QqRvsLYqp2_7e3OQgOQFkhQw@mail.gmail.com>
References: <CALrbzg01FAP0swrPXH9_J_-cyvc3A-Pqt_qvyk9gKO8sHVN9TA@mail.gmail.com>
 <CAA-ibaxvesU77FJrQ9f2hzq-U5QqRvsLYqp2_7e3OQgOQFkhQw@mail.gmail.com>
Message-ID: <CALrbzg0qY6RM4dBZjC17FuF_05uuzM+sZKmPGovhZ8pFwCP80Q@mail.gmail.com>

Doh!  Forehead slap!  How the heck did I overlook that simple
solution.  Thank you!

On Mon, Nov 22, 2021 at 2:51 PM Diego Hernang?mez Herrero
<diego.hernangomezherrero at gmail.com> wrote:
>
> Hi Ben:
>
> I don't know if this is relevant for your question, but you can use proj4strings with sf::st_crs() without using rgdal:
>
> ``` r
> proj <- "+proj=tmerc +datum=NAD83 +lon_0=-70d10 lat_0=42d50 k=.9999666666666667 x_0=900000 y_0=0"
> sf::st_crs(proj)
>
> #> Coordinate Reference System:
> #>   User input: +proj=tmerc +datum=NAD83 +lon_0=-70d10 lat_0=42d50 k=.9999666666666667 x_0=900000 y_0=0
> #>   wkt:
> #> PROJCRS["unknown",
> #>     BASEGEOGCRS["unknown",
> #>         DATUM["North American Datum 1983",
> #>             ELLIPSOID["GRS 1980",6378137,298.257222101,
> #>                 LENGTHUNIT["metre",1]],
> #>             ID["EPSG",6269]],
> #>         PRIMEM["Greenwich",0,
> #>             ANGLEUNIT["degree",0.0174532925199433],
> #>             ID["EPSG",8901]]],
> #>     CONVERSION["unknown",
> #>         METHOD["Transverse Mercator",
> #>             ID["EPSG",9807]],
> #>         PARAMETER["Latitude of natural origin",42.8333333333333,
> #>             ANGLEUNIT["degree",0.0174532925199433],
> #>             ID["EPSG",8801]],
> #>         PARAMETER["Longitude of natural origin",-70.1666666666667,
> #>             ANGLEUNIT["degree",0.0174532925199433],
> #>             ID["EPSG",8802]],
> #>         PARAMETER["Scale factor at natural origin",0.999966666666667,
> #>             SCALEUNIT["unity",1],
> #>             ID["EPSG",8805]],
> #>         PARAMETER["False easting",900000,
> #>             LENGTHUNIT["metre",1],
> #>             ID["EPSG",8806]],
> #>         PARAMETER["False northing",0,
> #>             LENGTHUNIT["metre",1],
> #>             ID["EPSG",8807]]],
> #>     CS[Cartesian,2],
> #>         AXIS["(E)",east,
> #>             ORDER[1],
> #>             LENGTHUNIT["metre",1,
> #>                 ID["EPSG",9001]]],
> #>         AXIS["(N)",north,
> #>             ORDER[2],
> #>             LENGTHUNIT["metre",1,
> #>                 ID["EPSG",9001]]]]
> ```
>
>
> El lun, 22 nov 2021 a las 20:11, Ben Tupper (<btupper at bigelow.org>) escribi?:
>>
>> Hello,
>>
>> I have a spatial mesh that provides the following CRS.
>>
>> proj <- "proj=tmerc +datum=NAD83 +lon_0=-70d10 lat_0=42d50
>> k=.9999666666666667 x_0=900000 y_0=0"
>>
>> To use this with the sf package it must be formed as Well Known Text
>> or a EPSG code. In this particular case there is no EPSG code in the
>> registry.
>>
>> My current workflow so I can use this data in sf is to leverage
>> showWKT() from the rgdal package to cast the proj string to WKT. The
>> following message is printed when the packages is loaded.
>>
>> > Please note that rgdal will be retired by the end of 2023, plan transition to sf/stars/terra functions using GDAL and PROJ at your earliest convenience.
>>
>>
>> rgdal::showWKT(proj) |> sf::st_crs(wkt)
>>
>> #> Coordinate Reference System:
>> #>   User input:
>> PROJCS["unknown",GEOGCS["unknown",DATUM["North_American_Datum_1983",SPHEROID["GRS
>> 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6269"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",42.8333333333333],PARAMETER["central_meridian",-70.1666666666667],PARAMETER["scale_factor",0.999966666666667],PARAMETER["false_easting",900000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH]]
>> #>   wkt:
>> #> PROJCRS["unknown",
>> #>     BASEGEOGCRS["unknown",
>> #>         DATUM["North American Datum 1983",
>> #>             ELLIPSOID["GRS 1980",6378137,298.257222101,
>> #>                 LENGTHUNIT["metre",1]],
>> #>             ID["EPSG",6269]],
>> #>         PRIMEM["Greenwich",0,
>> #>             ANGLEUNIT["degree",0.0174532925199433],
>> #>             ID["EPSG",8901]]],
>> #>     CONVERSION["unnamed",
>> #>         METHOD["Transverse Mercator",
>> #>             ID["EPSG",9807]],
>> #>         PARAMETER["Latitude of natural origin",42.8333333333333,
>> #>             ANGLEUNIT["degree",0.0174532925199433],
>> #>             ID["EPSG",8801]],
>> #>         PARAMETER["Longitude of natural origin",-70.1666666666667,
>> #>             ANGLEUNIT["degree",0.0174532925199433],
>> #>             ID["EPSG",8802]],
>> #>         PARAMETER["Scale factor at natural origin",0.999966666666667,
>> #>             SCALEUNIT["unity",1],
>> #>             ID["EPSG",8805]],
>> #>         PARAMETER["False easting",900000,
>> #>             LENGTHUNIT["metre",1],
>> #>             ID["EPSG",8806]],
>> #>         PARAMETER["False northing",0,
>> #>             LENGTHUNIT["metre",1],
>> #>             ID["EPSG",8807]]],
>> #>     CS[Cartesian,2],
>> #>         AXIS["easting",east,
>> #>             ORDER[1],
>> #>             LENGTHUNIT["metre",1,
>> #>                 ID["EPSG",9001]]],
>> #>         AXIS["northing",north,
>> #>             ORDER[2],
>> #>             LENGTHUNIT["metre",1,
>> #>                 ID["EPSG",9001]]]]
>>
>> In the spirit of not leaving things to the last minute (that's never
>> happened before!), what are the current options for converting proj
>> strings to WKT that don?t use rgdal?
>>
>> Cheers and thanks,
>> Ben
>>
>> --
>> Ben Tupper (he/him)
>> Bigelow Laboratory for Ocean Science
>> East Boothbay, Maine
>> http://www.bigelow.org/
>> https://eco.bigelow.org
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
>
> --
>
>
>
> Have a nice day!



-- 
Ben Tupper (he/him)
Bigelow Laboratory for Ocean Science
East Boothbay, Maine
http://www.bigelow.org/
https://eco.bigelow.org


From th|erry@onke||nx @end|ng |rom |nbo@be  Tue Nov 23 11:32:35 2021
From: th|erry@onke||nx @end|ng |rom |nbo@be (Thierry Onkelinx)
Date: Tue, 23 Nov 2021 11:32:35 +0100
Subject: [R-sig-Geo] Store sf as 'line-by-line' GeoJSON
Message-ID: <CAJuCY5wBn52CMLPwG=TzT59HU76TRnK4x2kt-ov5iqQTv7DTzg@mail.gmail.com>

Dear all,

I'm looking for a way to store an sf object or geopackage as a
'line-by-line' GeoJSON. The definition of the GeoJSON is listed at
https://learn.maproulette.org/documentation/line-by-line-geojson/

I tried st_write(driver = "GeoJSONSeq", config_options = c(RS = "YES"))
This writes every feature on a single line. However, it doesn't store them
as a FeatureCollection.

Suggestions are welcome.

Best regards,

ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>

	[[alternative HTML version deleted]]


From p@u|o@||ore@@m@|| @end|ng |rom gm@||@com  Tue Nov 23 16:02:33 2021
From: p@u|o@||ore@@m@|| @end|ng |rom gm@||@com (Paulo Flores Ribeiro)
Date: Tue, 23 Nov 2021 15:02:33 +0000
Subject: [R-sig-Geo] fuzzy kappa
Message-ID: <18a7ef40-f9ad-78d5-c0ad-8cf097b316b0@gmail.com>

According to Hagen?Zanker (2009: 
https://doi.org/10.1080/13658810802570317), ?The Fuzzy Kappa statistic 
expresses the agreement between two categorical raster maps. The 
statistic goes beyond cell?by?cell comparison and gives partial credit 
to cells based on the categories found in the neighborhood.?

Does anyone know of a package/function to compute such a Fuzzy Kappa 
statistic in R?

Thanks in advance,

PauloFR


From @ch|n|||n @end|ng |rom rg@u-m@h@@ru  Tue Nov 23 17:47:17 2021
From: @ch|n|||n @end|ng |rom rg@u-m@h@@ru (=?utf-8?B?0JDQvdC00YDQtdC5INCn0LjQvdC40LvQuNC9?=)
Date: Tue, 23 Nov 2021 19:47:17 +0300
Subject: [R-sig-Geo] fuzzy kappa
In-Reply-To: <18a7ef40-f9ad-78d5-c0ad-8cf097b316b0@gmail.com>
References: <18a7ef40-f9ad-78d5-c0ad-8cf097b316b0@gmail.com>
Message-ID: <2734101637685557@mail.yandex.ru>

An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20211123/99cdf501/attachment.html>

From hugo@gco@t@ @end|ng |rom gm@||@com  Wed Nov 24 11:23:39 2021
From: hugo@gco@t@ @end|ng |rom gm@||@com (Hugo Costa)
Date: Wed, 24 Nov 2021 10:23:39 +0000
Subject: [R-sig-Geo] fuzzy kappa
In-Reply-To: <2734101637685557@mail.yandex.ru>
References: <18a7ef40-f9ad-78d5-c0ad-8cf097b316b0@gmail.com>
 <2734101637685557@mail.yandex.ru>
Message-ID: <CADvFi5p2R+YuY9crw+66sU0nkXtBRdLi_yNzabn1mZDBjP_LcA@mail.gmail.com>

Just wondering if fussy kappa is the same as weighted Kappa. If yes, you
can try package psych (I used it years ago).
Hugo

?????? ??????? <achinilin at rgau-msha.ru> escreveu no dia ter?a, 23/11/2021
?(s) 16:47:

> Well, I could be wrong, but I suspect, that you can try "goofcat" function
> from "ithir" package.
> Link to pkg - https://bitbucket.org/brendo1001/ithir/src/master/.
>
> Andrey
>
> 23.11.2021, 18:03, "Paulo Flores Ribeiro" <paulo.flores.mail at gmail.com>:
>
> According to Hagen?Zanker (2009:
> https://doi.org/10.1080/13658810802570317), ?The Fuzzy Kappa statistic
> expresses the agreement between two categorical raster maps. The
> statistic goes beyond cell?by?cell comparison and gives partial credit
> to cells based on the categories found in the neighborhood.?
>
> Does anyone know of a package/function to compute such a Fuzzy Kappa
> statistic in R?
>
> Thanks in advance,
>
> PauloFR
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
>
> --
> ? ?????????,
> ?????? ???????
>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From p@u|o@||ore@@m@|| @end|ng |rom gm@||@com  Wed Nov 24 12:09:31 2021
From: p@u|o@||ore@@m@|| @end|ng |rom gm@||@com (Paulo Flores Ribeiro)
Date: Wed, 24 Nov 2021 11:09:31 +0000
Subject: [R-sig-Geo] fuzzy kappa
In-Reply-To: <2734101637685557@mail.yandex.ru>
References: <18a7ef40-f9ad-78d5-c0ad-8cf097b316b0@gmail.com>
 <2734101637685557@mail.yandex.ru>
Message-ID: <f31703af-0ea3-7e5c-1f1d-3e038ba5412f@gmail.com>

Thank you Andrey,
I peeked at the goofcat and saw that it has a function to calculate 
kappa, but it seems to be just "normal" kappa (in the sense of Cohen's 
Kappa) and not Fuzzy Kappa.
Thanks anyway,
PauloFR


?s 16:47 de 23/11/2021, ?????? ??????? escreveu:
> Well, I could be wrong, but I suspect, that you can try "goofcat" 
> function from "ithir" package.
> Link to pkg - https://bitbucket.org/brendo1001/ithir/src/master/.
> Andrey
> 23.11.2021, 18:03, "Paulo Flores Ribeiro" <paulo.flores.mail at gmail.com>:
>
>     According to Hagen?Zanker (2009:
>     https://doi.org/10.1080/13658810802570317), ?The Fuzzy Kappa statistic
>     expresses the agreement between two categorical raster maps. The
>     statistic goes beyond cell?by?cell comparison and gives partial credit
>     to cells based on the categories found in the neighborhood.?
>
>     Does anyone know of a package/function to compute such a Fuzzy Kappa
>     statistic in R?
>
>     Thanks in advance,
>
>     PauloFR
>
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
> -- 
> ? ?????????,
> ?????? ???????
	[[alternative HTML version deleted]]


From d@v|d@h|ne @end|ng |rom |@nd@ndw@ter@com@@u  Wed Nov 24 13:03:32 2021
From: d@v|d@h|ne @end|ng |rom |@nd@ndw@ter@com@@u (David Hine (L WM))
Date: Wed, 24 Nov 2021 22:03:32 +1000
Subject: [R-sig-Geo] fuzzy kappa
In-Reply-To: <f31703af-0ea3-7e5c-1f1d-3e038ba5412f@gmail.com>
References: <18a7ef40-f9ad-78d5-c0ad-8cf097b316b0@gmail.com>
 <2734101637685557@mail.yandex.ru>
 <f31703af-0ea3-7e5c-1f1d-3e038ba5412f@gmail.com>
Message-ID: <7c750f20-7557-4c6a-9cb0-3a5067f88d7e@landandwater.com.au>

Hi Andrey and Paulo
I reached out to the author of ithir package for his current advice. He may respond here if time permits.
cheers
David

?Sent from TypeApp ?

On 24 Nov. 2021, 21:10, at 21:10, Paulo Flores Ribeiro <paulo.flores.mail at gmail.com> wrote:
>Thank you Andrey,
>I peeked at the goofcat and saw that it has a function to calculate
>kappa, but it seems to be just "normal" kappa (in the sense of Cohen's
>Kappa) and not Fuzzy Kappa.
>Thanks anyway,
>PauloFR
>
>
>?s 16:47 de 23/11/2021, ?????? ??????? escreveu:
>> Well, I could be wrong, but I suspect, that you can try "goofcat"
>> function from "ithir" package.
>> Link to pkg - https://bitbucket.org/brendo1001/ithir/src/master/.
>> Andrey
>> 23.11.2021, 18:03, "Paulo Flores Ribeiro"
><paulo.flores.mail at gmail.com>:
>>
>>     According to Hagen?Zanker (2009:
>>     https://doi.org/10.1080/13658810802570317), ?The Fuzzy Kappa
>statistic
>>     expresses the agreement between two categorical raster maps. The
>>     statistic goes beyond cell?by?cell comparison and gives partial
>credit
>>     to cells based on the categories found in the neighborhood.?
>>
>>     Does anyone know of a package/function to compute such a Fuzzy
>Kappa
>>     statistic in R?
>>
>>     Thanks in advance,
>>
>>     PauloFR
>>
>>     _______________________________________________
>>     R-sig-Geo mailing list
>>     R-sig-Geo at r-project.org
>>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>> --
>> ? ?????????,
>> ?????? ???????
>	[[alternative HTML version deleted]]
>
>_______________________________________________
>R-sig-Geo mailing list
>R-sig-Geo at r-project.org
>https://stat.ethz.ch/mailman/listinfo/r-sig-geo

	[[alternative HTML version deleted]]


From p@u|o@||ore@@m@|| @end|ng |rom gm@||@com  Wed Nov 24 17:31:56 2021
From: p@u|o@||ore@@m@|| @end|ng |rom gm@||@com (Paulo Flores Ribeiro)
Date: Wed, 24 Nov 2021 16:31:56 +0000
Subject: [R-sig-Geo] fuzzy kappa
In-Reply-To: <CADvFi5p2R+YuY9crw+66sU0nkXtBRdLi_yNzabn1mZDBjP_LcA@mail.gmail.com>
References: <18a7ef40-f9ad-78d5-c0ad-8cf097b316b0@gmail.com>
 <2734101637685557@mail.yandex.ru>
 <CADvFi5p2R+YuY9crw+66sU0nkXtBRdLi_yNzabn1mZDBjP_LcA@mail.gmail.com>
Message-ID: <f394da70-bab8-eb15-f348-70f53105e075@gmail.com>

Hi Hugo,
Many thanks for the reply. I don't think it's the same. If I'm not 
mistaken, the "weighted" of Cohen's Kappa in the psych package works on 
the confusion matrix of classifications, assigning different weights to 
values ??further away from the diagonal. Fuzzy kappa has another 
purpose. A classic example (which I read elsewhere) to show the 
potential usefulness of fuzzy kappa is the comparison of two rasters 
with the appearance of a chessboard: if the two boards are aligned, the 
match is perfect; if one of them is rotated 90 degrees, the mismatch is 
total but, however, the mosaic pattern remains exactly the same! Fuzzy 
kappa aims to get around these issues by providing an assessment of the 
mosaic pattern that is closer to a human perspective, rather than a 
purely "mathematical" pixel-to-pixel correspondence assessment.
I've seen articles where the authors claim to have adopted this "fuzzy 
kappa" approach to assess the accuracy of predictions in land use change 
models (which is my case), and I was hoping there would be a 
package/function to accomplish this in R. I'll be very surprised if it 
doesn't exist, as R got me used to finding "answer for everything" in it ;)
Cheers,
PauloFR


?s 10:23 de 24/11/2021, Hugo Costa escreveu:
> Just wondering if fussy kappa is the same as weighted Kappa. If yes, 
> you can try package psych (I used it years ago).
> Hugo
>
> ?????? ??????? <achinilin at rgau-msha.ru> escreveu no dia ter?a, 
> 23/11/2021 ?(s) 16:47:
>
>     Well, I could be wrong, but I suspect, that you can try "goofcat"
>     function from "ithir" package.
>     Link to pkg - https://bitbucket.org/brendo1001/ithir/src/master/.
>     Andrey
>     23.11.2021, 18:03, "Paulo Flores Ribeiro"
>     <paulo.flores.mail at gmail.com>:
>
>         According to Hagen?Zanker (2009:
>         https://doi.org/10.1080/13658810802570317), ?The Fuzzy Kappa
>         statistic
>         expresses the agreement between two categorical raster maps. The
>         statistic goes beyond cell?by?cell comparison and gives
>         partial credit
>         to cells based on the categories found in the neighborhood.?
>
>         Does anyone know of a package/function to compute such a Fuzzy
>         Kappa
>         statistic in R?
>
>         Thanks in advance,
>
>         PauloFR
>
>         _______________________________________________
>         R-sig-Geo mailing list
>         R-sig-Geo at r-project.org
>         https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>     -- 
>     ? ?????????,
>     ?????? ???????
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
	[[alternative HTML version deleted]]


From p@u|o@||ore@@m@|| @end|ng |rom gm@||@com  Wed Nov 24 17:38:35 2021
From: p@u|o@||ore@@m@|| @end|ng |rom gm@||@com (Paulo Flores Ribeiro)
Date: Wed, 24 Nov 2021 16:38:35 +0000
Subject: [R-sig-Geo] fuzzy kappa
In-Reply-To: <7c750f20-7557-4c6a-9cb0-3a5067f88d7e@landandwater.com.au>
References: <18a7ef40-f9ad-78d5-c0ad-8cf097b316b0@gmail.com>
 <2734101637685557@mail.yandex.ru>
 <f31703af-0ea3-7e5c-1f1d-3e038ba5412f@gmail.com>
 <7c750f20-7557-4c6a-9cb0-3a5067f88d7e@landandwater.com.au>
Message-ID: <c3226b53-ec30-cdab-fe06-d848316b98ff@gmail.com>

Thank you, David. We look forward to receiving a response from the 
package developer.
Cheers,
PauloFR

?s 12:03 de 24/11/2021, David Hine (L WM) escreveu:
> Hi Andrey and Paulo
> I reached out to the author of ithir package for his current advice. 
> He may respond here if time permits.
> cheers
> David
>
> Sent from TypeApp <http://www.typeapp.com/r>
> On 24 Nov. 2021, at 21:10, Paulo Flores Ribeiro 
> <paulo.flores.mail at gmail.com> wrote:
>
>     Thank you Andrey,
>     I peeked at the goofcat and saw that it has a function to calculate
>     kappa, but it seems to be just "normal" kappa (in the sense of Cohen's
>     Kappa) and not Fuzzy Kappa.
>     Thanks anyway,
>     PauloFR
>
>
>     ?s 16:47 de 23/11/2021, ?????? ??????? escreveu:
>
>         Well, I could be wrong, but I suspect, that you can try
>         "goofcat" function from "ithir" package. Link to pkg -
>         https://bitbucket.org/brendo1001/ithir/src/master/. Andrey
>         23.11.2021, 18:03, "Paulo Flores Ribeiro"
>         <paulo.flores.mail at gmail.com>: According to Hagen?Zanker
>         (2009: https://doi.org/10.1080/13658810802570317), ?The Fuzzy
>         Kappa statistic expresses the agreement between two
>         categorical raster maps. The statistic goes beyond
>         cell?by?cell comparison and gives partial credit to cells
>         based on the categories found in the neighborhood.? Does
>         anyone know of a package/function to compute such a Fuzzy
>         Kappa statistic in R? Thanks in advance, PauloFR
>         ------------------------------------------------------------------------
>         R-sig-Geo mailing list R-sig-Geo at r-project.org
>         https://stat.ethz.ch/mailman/listinfo/r-sig-geo -- ?
>         ?????????, ?????? ??????? 
>
>       [[alternative HTML version deleted]]
>
>     ------------------------------------------------------------------------
>
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
	[[alternative HTML version deleted]]


