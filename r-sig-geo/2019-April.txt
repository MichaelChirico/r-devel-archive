From r@i@1290 m@iii@g oii @im@com  Wed Apr  3 18:18:02 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Wed, 3 Apr 2019 16:18:02 +0000 (UTC)
Subject: [R-sig-Geo] Creating shades around a cluster of line plots
References: <1784034004.349351.1554308282767.ref@mail.yahoo.com>
Message-ID: <1784034004.349351.1554308282767@mail.yahoo.com>

Hi there,
I am currently working with a line plot that would contain a large number of separate plots (which does make it difficult to read). What I would like to do instead is to somehow create a light-colored shade that captures the range of individual line plots. Would that be possible? This is what I have for my plot:
plot(get,Hope2, type="l",col="red", lwd="3", xlab="Cumulative CO2 emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="One-day maximum precipitation for South Sudan for CanESM2 scenarios")
lines(get2.teratons, Hope3, type="l", lwd="3", col="red")
lines(get3.teratons, Hope4, type="l", lwd="3", col="red")
lines(get4.teratons, Hope5, type="l", lwd="3", col="red")
So, this gives 4 separate red lines on the same plot (I am likely going to place up to 10 lines, so you can imagine how cluttered that would look without shading them in the background!). Now, let's say that I wanted to create a light red shade that runs from the upper to lower red curves. How should I go about doing that? The first line corresponds to the upper line, and the last line is the lower line.
Thanks,

	[[alternative HTML version deleted]]


From m|che|emo|ten|95 @end|ng |rom gm@||@com  Thu Apr  4 01:47:15 2019
From: m|che|emo|ten|95 @end|ng |rom gm@||@com (Michele Molteni)
Date: Thu, 4 Apr 2019 01:47:15 +0200
Subject: [R-sig-Geo] Match coordinates with NUTS3 regions
Message-ID: <CAJFJO3-QeXpwFhZ8dn50ULXN-qsOMPJyj5Ws3tjOqbZU3OC=2A@mail.gmail.com>

Hi everyone,

I have a .dta file with coordinates (WGS 84) and I would like to match them
to NUTS3 regions. I followed indications from a previous post but I get no
match even though the coordinates fall within NUTS3 bboxes. Could you
please be so kind to help me understand what I am doing wrong? This is what
I have so far:

> library(rgdal)
>
> ## Download Administrative Level data from EuroStat
>
> temp <- tempfile(fileext = ".zip")
> download.file("
https://ec.europa.eu/eurostat/cache/GISCO/distribution/v2/nuts/download/ref-nuts-2013-60m.shp.zip",
temp)
trying URL '
https://ec.europa.eu/eurostat/cache/GISCO/distribution/v2/nuts/download/ref-nuts-2013-60m.shp.zip
'
Content type 'application/zip' length 2330060 bytes (2.2 MB)
downloaded 2.2 MB
>
> unzip(temp)
>
> ##Read data after having unzipped it
> EU_NUTS <- readOGR(dsn = "C:/Users/User/Documents/TED_project/Replicating
paper/Shapefile", layer="NUTS_RG_60M_2013_4326_LEVL_3")
OGR data source with driver: ESRI Shapefile
Source: "C:\Users\User\Documents\TED_project\Replicating paper\Shapefile",
layer: "NUTS_RG_60M_2013_4326_LEVL_3"
with 1480 features
It has 5 fields
>
> ##Consider only EU29 countries (1361 NUTS3)
> EU_NUTS29 <- EU_NUTS[which(EU_NUTS at data$CNTR_CODE %in% c('BE', 'BG',
'CZ', 'DK', 'DE', 'EE', 'IE', 'EL', 'ES', 'FR', 'HR', 'IT', 'CY', 'LV',
'LT', 'LU', 'HU', 'MT', 'NL', 'AT', 'PL', 'PT', 'RO', 'SI', 'SK', 'FI',
'SE', 'UK', 'NO')), ]
>
> ##Import data contaning lat and lon and consider first 2500 observations
> awards_with_coordinates_first2500 <- read_dta("~/TED_project/Replicating
paper/awards_with_coordinates_first2500.dta")
> awards_with_coordinates_first2500 <- awards_with_coordinates_first2
500[(1:2500),]
>
> ## Here is the projection for map_nuts data
> proj4string(EU_NUTS29)
[1] "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
>
> ##Transform g_lat and g_lon in numeric
> awards_with_coordinates_first2500$g_lat <- as.numeric(as.character(awards
_with_coordinates_first2500$g_lat))
> awards_with_coordinates_first2500$g_lon <- as.numeric(as.character(awards
_with_coordinates_first2500$g_lon))
>
> ## Make a spatial points dataframe from point_data
> ## Assuming the projection to be longlat on the WGS84 datum
> ## First define the coordinates
> coordinates(awards_with_coordinates_first2500) <- ~g_lat + g_lon
>
> ## Then the projection
> proj4string(awards_with_coordinates_first2500) <- CRS("+proj=longlat
+datum=WGS84")
>
> ## Now transform the projection of awards_with_coordinates_first2500 to
that of EU_NUTS29
> awards_with_coordinates_first2500 <- spTransform(awards_with_coordinates_first2500,
proj4string(EU_NUTS29))
>
> ## Use the over() function to get the regions for the points
> over(awards_with_coordinates_first2500,EU_NUTS29,by.id=)
    NUTS_ID LEVL_CODE CNTR_CODE NUTS_NAME  FID
1      <NA>        NA      <NA>      <NA> <NA>
2      <NA>        NA      <NA>      <NA> <NA>

200    <NA>        NA      <NA>      <NA> <NA>
 [ reached 'max' / getOption("max.print") -- omitted 2300 rows ]
>
> bbox(awards_with_coordinates_first2500)
            min      max
g_lat 34.794891 51.46780
g_lon -3.018564 33.63785
> bbox(EU_NUTS29)
      min    max
x -61.806 55.826
y -21.350 71.127
> ##The points seem to be all in Africa
> plot(EU_NUTS29)
> plot(awards_with_coordinates_first2500, add = TRUE, col = "red", pch = 19)

Thanks in advance.

Cheers,
Michele.

	[[alternative HTML version deleted]]


From b|@|ev||@t @end|ng |rom gm@||@com  Thu Apr  4 07:53:34 2019
From: b|@|ev||@t @end|ng |rom gm@||@com (=?UTF-8?Q?Bede-Fazekas_=c3=81kos?=)
Date: Thu, 4 Apr 2019 07:53:34 +0200
Subject: [R-sig-Geo] Match coordinates with NUTS3 regions
In-Reply-To: <CAJFJO3-QeXpwFhZ8dn50ULXN-qsOMPJyj5Ws3tjOqbZU3OC=2A@mail.gmail.com>
References: <CAJFJO3-QeXpwFhZ8dn50ULXN-qsOMPJyj5Ws3tjOqbZU3OC=2A@mail.gmail.com>
Message-ID: <1c70c978-4eeb-958a-7c8a-2ac0e3f5990f@gmail.com>

Dear Michele,
be sure that the order of the coordinates is? the same for the two objects.
proj4string(EU_NUTS29) is starting with "+proj=longlat" (long, then 
lat), while coordinates(awards_with_coordinates_first2500) is "~g_lat + 
g_lon" (lat, then lon).
HTH,
?kos Bede-Fazekas
Hungarian Academy of Sciences

2019.04.04. 1:47 keltez?ssel, Michele Molteni ?rta:
> Hi everyone,
>
> I have a .dta file with coordinates (WGS 84) and I would like to match them
> to NUTS3 regions. I followed indications from a previous post but I get no
> match even though the coordinates fall within NUTS3 bboxes. Could you
> please be so kind to help me understand what I am doing wrong? This is what
> I have so far:
>
>> library(rgdal)
>>
>> ## Download Administrative Level data from EuroStat
>>
>> temp <- tempfile(fileext = ".zip")
>> download.file("
> https://ec.europa.eu/eurostat/cache/GISCO/distribution/v2/nuts/download/ref-nuts-2013-60m.shp.zip",
> temp)
> trying URL '
> https://ec.europa.eu/eurostat/cache/GISCO/distribution/v2/nuts/download/ref-nuts-2013-60m.shp.zip
> '
> Content type 'application/zip' length 2330060 bytes (2.2 MB)
> downloaded 2.2 MB
>> unzip(temp)
>>
>> ##Read data after having unzipped it
>> EU_NUTS <- readOGR(dsn = "C:/Users/User/Documents/TED_project/Replicating
> paper/Shapefile", layer="NUTS_RG_60M_2013_4326_LEVL_3")
> OGR data source with driver: ESRI Shapefile
> Source: "C:\Users\User\Documents\TED_project\Replicating paper\Shapefile",
> layer: "NUTS_RG_60M_2013_4326_LEVL_3"
> with 1480 features
> It has 5 fields
>> ##Consider only EU29 countries (1361 NUTS3)
>> EU_NUTS29 <- EU_NUTS[which(EU_NUTS at data$CNTR_CODE %in% c('BE', 'BG',
> 'CZ', 'DK', 'DE', 'EE', 'IE', 'EL', 'ES', 'FR', 'HR', 'IT', 'CY', 'LV',
> 'LT', 'LU', 'HU', 'MT', 'NL', 'AT', 'PL', 'PT', 'RO', 'SI', 'SK', 'FI',
> 'SE', 'UK', 'NO')), ]
>> ##Import data contaning lat and lon and consider first 2500 observations
>> awards_with_coordinates_first2500 <- read_dta("~/TED_project/Replicating
> paper/awards_with_coordinates_first2500.dta")
>> awards_with_coordinates_first2500 <- awards_with_coordinates_first2
> 500[(1:2500),]
>> ## Here is the projection for map_nuts data
>> proj4string(EU_NUTS29)
> [1] "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
>> ##Transform g_lat and g_lon in numeric
>> awards_with_coordinates_first2500$g_lat <- as.numeric(as.character(awards
> _with_coordinates_first2500$g_lat))
>> awards_with_coordinates_first2500$g_lon <- as.numeric(as.character(awards
> _with_coordinates_first2500$g_lon))
>> ## Make a spatial points dataframe from point_data
>> ## Assuming the projection to be longlat on the WGS84 datum
>> ## First define the coordinates
>> coordinates(awards_with_coordinates_first2500) <- ~g_lat + g_lon
>>
>> ## Then the projection
>> proj4string(awards_with_coordinates_first2500) <- CRS("+proj=longlat
> +datum=WGS84")
>> ## Now transform the projection of awards_with_coordinates_first2500 to
> that of EU_NUTS29
>> awards_with_coordinates_first2500 <- spTransform(awards_with_coordinates_first2500,
> proj4string(EU_NUTS29))
>> ## Use the over() function to get the regions for the points
>> over(awards_with_coordinates_first2500,EU_NUTS29,by.id=)
>      NUTS_ID LEVL_CODE CNTR_CODE NUTS_NAME  FID
> 1      <NA>        NA      <NA>      <NA> <NA>
> 2      <NA>        NA      <NA>      <NA> <NA>
>
> 200    <NA>        NA      <NA>      <NA> <NA>
>   [ reached 'max' / getOption("max.print") -- omitted 2300 rows ]
>> bbox(awards_with_coordinates_first2500)
>              min      max
> g_lat 34.794891 51.46780
> g_lon -3.018564 33.63785
>> bbox(EU_NUTS29)
>        min    max
> x -61.806 55.826
> y -21.350 71.127
>> ##The points seem to be all in Africa
>> plot(EU_NUTS29)
>> plot(awards_with_coordinates_first2500, add = TRUE, col = "red", pch = 19)
> Thanks in advance.
>
> Cheers,
> Michele.
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


From m@|k@r@ @end|ng |rom y@ndex@com  Thu Apr  4 16:45:36 2019
From: m@|k@r@ @end|ng |rom y@ndex@com (Fatih Kara)
Date: Thu, 04 Apr 2019 15:45:36 +0100
Subject: [R-sig-Geo] Mosaic
Message-ID: <16360921554389136@myt4-bf1cdac1d2eb.qloud-c.yandex.net>

Hi,
I am working with time series Landsat data and creating mosaic images.
What would you offer me to create seamless, color balanced, and smooth mosaic images from multiple Landsat 8 images?

Thanks,

-- 
Fatih Kara


From m@rt|n@hu|eny| @end|ng |rom v|@d@@gov@@k  Fri Apr  5 15:11:34 2019
From: m@rt|n@hu|eny| @end|ng |rom v|@d@@gov@@k (=?iso-8859-2?Q?Hul=E9nyi_Martin?=)
Date: Fri, 5 Apr 2019 13:11:34 +0000
Subject: [R-sig-Geo] Common Factors test in R
Message-ID: <14f79b72dd9e463da38564e1ee782e28@UVEX2.uvsr.sk>

Hello,
I would like to perform a common factor test, conducted using likelihood ratio test on spatial error model and spatial durbin model (both in panel format).
I have not found a command in R, that would help me to conduct the test. Hence, I am trying to perform the test manuallly using the splm package and data available in the splm and plm packages.
Here is my code:
library(splm)
library(plm)

data(Produc, package="plm")
data(usaww)

Produc <- pdata.frame(Produc, index = c("state", "year"))

usaww<- mat2listw(usaww, style="W")

Produc$slagUnemp <- slag(Produc$unemp, listw = usaww)

durbin <- spml(gsp~unemp + slagUnemp,
                data=Produc, listw=usaww,  effect = "twoways", model="within", lag=TRUE, spatial.error = "none", quiet = FALSE)
spem  <- spml(gsp ~ unemp,
                data=Produc, listw=usaww,  effect = "twoways", model="within", lag=FALSE, spatial.error = "b", quiet = FALSE)
Is it correct to take the last value of the function from the console output to compute the likelihood ratio?
Meaning, in this example, to calculate 2*(function(non-nested) - function(nested)) = 2*(10261.79 - 10255.74) = 12.1?
If it is correct, how can I compute the significance values?
If it is not correct, is there a better way to compute this?

Autorom tejto spr?vy elektronickej po?ty je Martin Hul?nyi. T?to spr?va je ur?en? v?lu?ne jej adres?tovi. Inform?cie a ?daje, ktor? s? v nej uveden?, alebo ktor? s? obsiahnut? v jej prilo?en?ch s?boroch, m?u by? inform?ciami alebo ?dajmi chr?nen?mi pod?a platn?ch pr?vnych predpisov v Slovenskej republike. V pr?pade, ak nie ste ur?en? ako prij?mate? tejto spr?vy alebo jeho opr?vnen? z?stupca, upozor?ujeme V?s, ?e inform?cie a ?daje v nej uveden? nie ste opr?vnen? sprac?va?, ani ich spr?stupni? alebo poskytn?? tretej osobe alebo ich zverejni?. Ak ste nedopatren?m prijali alebo zachytili tuto spr?vu elektronickej po?ty, dovo?ujeme si V?s po?iada?, aby ste ju zaslali sp? na elektronick? adresu jej odosielate?a, a aby ste ju n?sledne zmazali zo svojho po??ta?a a z Va?ej schr?nky elektronickej po?ty. Odosielate? tejto spr?vy nenesie zodpovednos? za ?kody sp?soben? nespr?vnym pou?it?m tejto spr?vy elektronickej po?ty a jej pr?loh.

The author of this e-mail message is Martin Hul?nyi. This message is intended solely for the recipient. The information and data contained therein or contained in its enclosed files may be information or data protected under applicable laws in the Slovak Republic. If you are not designated as the recipient of this message or its authorized representative, we would like to inform you that the information and data contained therein are not authorized to process or make them available to third parties or to disclose them. If you have received or downloaded this e-mail message accidentally, we ask you to send it back to the e-mail address of the sender and then delete it from your computer and from your e-mail. The sender of this message is not responsible for damages caused by incorrect use of this e-mail message and its attachments.
[eco.jpg]       Pred vytla?en?m tohto mailu zv?te pros?m vplyv na ?ivotn? prostredie. ?akujeme.
Please consider the environment before printing this e-mail. Thanks

	[[alternative HTML version deleted]]


From r@i@1290 m@iii@g oii @im@com  Fri Apr  5 17:21:37 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Fri, 5 Apr 2019 15:21:37 +0000 (UTC)
Subject: [R-sig-Geo] Creating a color shade between upper and lower bounds
 of a line plot in R
References: <1912274760.197056.1554477697270.ref@mail.yahoo.com>
Message-ID: <1912274760.197056.1554477697270@mail.yahoo.com>

Hello there,
I have many line plots on a single graph and would like to somehow create a shaded area between them so that it looks neater and easier to interpret. Something like this:
http://jvoigts.scripts.mit.edu/blog/assets/plot_shaded_pretty.png

I heard that the function "geom_ribbon" was ideal to do this, but is it possible to incorporate this in the basic "plot" command? If so, how?
This is currently what I have done with the basic plotting, which works fine:
plot(get, Hope2, type = "l",col = "green", lwd = "3", xlab="Cumulative CO2 emissions (TtC)", ylab = "One-day maximum precipitation (mm/day)", main = "One-day maximum precipitation for Random Area for CanESM2 scenarios")lines(IPSL, Hope6, type = "l", lwd = "3", col = "green")
lines(MIROC, Hope7, type = "l", lwd = "3", col = "green")
lines(subsetprime, Hope8, type = "l", lwd = "3", col = "green")
lines(MPI, Hope9, type =" l", lwd = "3", col = "green")
So, in this plot, I have 5 green line plots in one. The idea would be shade these in green, from the lower to upper bounds. Is this possible?
Any assistance would be extremely valuable!

	[[alternative HTML version deleted]]


From dc@r|@on @end|ng |rom t@mu@edu  Fri Apr  5 17:53:34 2019
From: dc@r|@on @end|ng |rom t@mu@edu (David L Carlson)
Date: Fri, 5 Apr 2019 15:53:34 +0000
Subject: [R-sig-Geo] 
 Creating a color shade between upper and lower bounds
 of a line plot in R
In-Reply-To: <1912274760.197056.1554477697270@mail.yahoo.com>
References: <1912274760.197056.1554477697270.ref@mail.yahoo.com>
 <1912274760.197056.1554477697270@mail.yahoo.com>
Message-ID: <48d57ff484864d2980230413db33fd3a@tamu.edu>

You can use the polygon() function (?polygon). Here's a simple reproducible example:

x <- 1:25
y1 <- sqrt(x)
y2 <- x/6
plot(x, y1, typ="l", ylim=c(0, 5))
lines(x, y2)
polygon(c(x, rev(x)) , c(y1, rev(y2)), col="green")
lines(x, y2+.5)

If there are lines hidden by the shading, plot them after the polygon or add an alpha value to the fill color you are using, e.g. 

greena <- rgb(0, 255/255, 0, .5)
polygon(c(x, rev(x)) , c(y1, rev(y2)), col=greena)

----------------------------------------
David L Carlson
Department of Anthropology
Texas A&M University
College Station, TX 77843-4352

-----Original Message-----
From: R-sig-Geo <r-sig-geo-bounces at r-project.org> On Behalf Of rain1290--- via R-sig-Geo
Sent: Friday, April 5, 2019 10:22 AM
To: r-sig-geo at r-project.org
Subject: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R

Hello there,
I have many line plots on a single graph and would like to somehow create a shaded area between them so that it looks neater and easier to interpret. Something like this:
http://jvoigts.scripts.mit.edu/blog/assets/plot_shaded_pretty.png

I heard that the function "geom_ribbon" was ideal to do this, but is it possible to incorporate this in the basic "plot" command? If so, how?
This is currently what I have done with the basic plotting, which works fine:
plot(get, Hope2, type = "l",col = "green", lwd = "3", xlab="Cumulative CO2 emissions (TtC)", ylab = "One-day maximum precipitation (mm/day)", main = "One-day maximum precipitation for Random Area for CanESM2 scenarios")lines(IPSL, Hope6, type = "l", lwd = "3", col = "green")
lines(MIROC, Hope7, type = "l", lwd = "3", col = "green")
lines(subsetprime, Hope8, type = "l", lwd = "3", col = "green")
lines(MPI, Hope9, type =" l", lwd = "3", col = "green")
So, in this plot, I have 5 green line plots in one. The idea would be shade these in green, from the lower to upper bounds. Is this possible?
Any assistance would be extremely valuable!

	[[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From r@i@1290 m@iii@g oii @im@com  Fri Apr  5 18:26:03 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Fri, 5 Apr 2019 16:26:03 +0000 (UTC)
Subject: [R-sig-Geo] 
 Creating a color shade between upper and lower bounds
 of a line plot in R
In-Reply-To: <48d57ff484864d2980230413db33fd3a@tamu.edu>
References: <1912274760.197056.1554477697270.ref@mail.yahoo.com>
 <1912274760.197056.1554477697270@mail.yahoo.com>
 <48d57ff484864d2980230413db33fd3a@tamu.edu>
Message-ID: <946889847.239817.1554481563824@mail.yahoo.com>

Hi David,

Okay, I just gave this a try and was able to generate a shaded area using my existing code. But just to make sure that I am using this correctly, I did this using the following
plot(get, Hope2, type = "l",col = "green", lwd = "3", xlab="Cumulative CO2 emissions (TtC)", ylab = "One-day maximum precipitation (mm/day)", main = "One-day maximum precipitation for Random Area for CanESM2 scenarios")lines(IPSL, Hope6, type = "l", lwd = "3", col = "green")
lines(MIROC, Hope7, type = "l", lwd = "3", col = "green")
lines(subsetprime, Hope8, type = "l", lwd = "3", col = "green")
lines(MPI, Hope9, type =" l", lwd = "3", col = "green")
polygon(c(get,rev(get)), c(Hope2,rev(Hope9)),col="green") ? #this is what I just tried


The polygon line that I just added there - am I telling R to shade everything from Hope2 to Hope9?
In this case, I have different x and y values for each "lines". Do I need to specify the polygon function each time I use the "lines" function in order to capture "all" of the green curves?
Thanks, again,
-----Original Message-----
From: David L Carlson <dcarlson at tamu.edu>
To: rain1290 at aim.com <rain1290 at aim.com>; r-sig-geo at r-project.org <r-sig-geo at r-project.org>
Sent: Fri, Apr 5, 2019 11:53 am
Subject: RE: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R

You can use the polygon() function (?polygon). Here's a simple reproducible example:

x <- 1:25
y1 <- sqrt(x)
y2 <- x/6
plot(x, y1, typ="l", ylim=c(0, 5))
lines(x, y2)
polygon(c(x, rev(x)) , c(y1, rev(y2)), col="green")
lines(x, y2+.5)

If there are lines hidden by the shading, plot them after the polygon or add an alpha value to the fill color you are using, e.g. 

greena <- rgb(0, 255/255, 0, .5)
polygon(c(x, rev(x)) , c(y1, rev(y2)), col=greena)

----------------------------------------
David L Carlson
Department of Anthropology
Texas A&M University
College Station, TX 77843-4352

-----Original Message-----
From: R-sig-Geo <r-sig-geo-bounces at r-project.org> On Behalf Of rain1290--- via R-sig-Geo
Sent: Friday, April 5, 2019 10:22 AM
To: r-sig-geo at r-project.org
Subject: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R

Hello there,
I have many line plots on a single graph and would like to somehow create a shaded area between them so that it looks neater and easier to interpret. Something like this:
http://jvoigts.scripts.mit.edu/blog/assets/plot_shaded_pretty.png

I heard that the function "geom_ribbon" was ideal to do this, but is it possible to incorporate this in the basic "plot" command? If so, how?
This is currently what I have done with the basic plotting, which works fine:
plot(get, Hope2, type = "l",col = "green", lwd = "3", xlab="Cumulative CO2 emissions (TtC)", ylab = "One-day maximum precipitation (mm/day)", main = "One-day maximum precipitation for Random Area for CanESM2 scenarios")lines(IPSL, Hope6, type = "l", lwd = "3", col = "green")
lines(MIROC, Hope7, type = "l", lwd = "3", col = "green")
lines(subsetprime, Hope8, type = "l", lwd = "3", col = "green")
lines(MPI, Hope9, type =" l", lwd = "3", col = "green")
So, in this plot, I have 5 green line plots in one. The idea would be shade these in green, from the lower to upper bounds. Is this possible?
Any assistance would be extremely valuable!

??? [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo
	[[alternative HTML version deleted]]


From dc@r|@on @end|ng |rom t@mu@edu  Fri Apr  5 18:59:02 2019
From: dc@r|@on @end|ng |rom t@mu@edu (David L Carlson)
Date: Fri, 5 Apr 2019 16:59:02 +0000
Subject: [R-sig-Geo] 
 Creating a color shade between upper and lower bounds
 of a line plot in R
In-Reply-To: <946889847.239817.1554481563824@mail.yahoo.com>
References: <1912274760.197056.1554477697270.ref@mail.yahoo.com>
 <1912274760.197056.1554477697270@mail.yahoo.com>
 <48d57ff484864d2980230413db33fd3a@tamu.edu>
 <946889847.239817.1554481563824@mail.yahoo.com>
Message-ID: <ef441f1c94304325bb5e82a3550ff33f@tamu.edu>

The two lines can have different x coordinates. We are defining the boundaries of the polygon by tracing clockwise or counterclockwise around it, e.g. In this example we follow the top line from beginning to end and then follow the bottom line from end back to beginning. The function automatically connects the beginning and end points to define the polygon and then shades it. The x values do not need to be the same for the two lines, e.g. 

lines(x1, y1)
lines(x2, y2)
polygon(c(x1, rev(x2)), c(y1, rev(y1)))

Things are a bit trickier if you want the polygon to start and end at the edge of the plot window. You can get the coordinates of the plot window boundaries with the following:

par("usr")
# [1]  0.04 25.96 -0.20  5.20

This gives the left lower corner (.04, -.02) and the upper right corner (25.96, 5.20). We only need the x values: .04 on the left and 25.96 on the right. We insert x-coordinates into the polygon, but we have to compute the y-axis values at .04 and 25.96 using the formulae you are using to define those lines.

x <- 1:25
y1 <- sqrt(x)
y2 <- x/6
y3 <- y2 + .5
plot(x, y1, typ="l", ylim=c(0, 5))
lines(x, y2)
lines(x, y3)
greena <- rgb(0, 255/255, 0, .5)

edge <- par("usr")
polygon(c(edge[1], x, 25.96, 25.96, rev(x), edge[1]) , 
     c(sqrt(edge[1]), y1, sqrt(edge[2]), edge[2]/6, rev(y2), edge[1]/6),
     col=greena)

----------------------------------------
David L Carlson
Department of Anthropology
Texas A&M University
College Station, TX 77843-4352


From: rain1290 at aim.com <rain1290 at aim.com> 
Sent: Friday, April 5, 2019 11:26 AM
To: David L Carlson <dcarlson at tamu.edu>; r-sig-geo at r-project.org
Subject: Re: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R

Hi David,
Okay, I just gave this a try and was able to generate a shaded area using my existing code. But just to make sure that I am using this correctly, I did this using the following

plot(get, Hope2, type = "l",col = "green", lwd = "3", xlab="Cumulative CO2 emissions (TtC)", ylab = "One-day maximum precipitation (mm/day)", main = "One-day maximum precipitation for Random Area for CanESM2 scenarios")lines(IPSL, Hope6, type = "l", lwd = "3", col = "green")
lines(MIROC, Hope7, type = "l", lwd = "3", col = "green")
lines(subsetprime, Hope8, type = "l", lwd = "3", col = "green")
lines(MPI, Hope9, type =" l", lwd = "3", col = "green")
polygon(c(get,rev(get)), c(Hope2,rev(Hope9)),col="green") ? #this is what I just tried



The polygon line that I just added there - am I telling R to shade everything from Hope2 to Hope9?

In this case, I have different x and y values for each "lines". Do I need to specify the polygon function each time I use the "lines" function in order to capture "all" of the green curves?

Thanks, again,

-----Original Message-----
From: David L Carlson <mailto:dcarlson at tamu.edu>
To: mailto:rain1290 at aim.com <mailto:rain1290 at aim.com>; mailto:r-sig-geo at r-project.org <mailto:r-sig-geo at r-project.org>
Sent: Fri, Apr 5, 2019 11:53 am
Subject: RE: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R
You can use the polygon() function (?polygon). Here's a simple reproducible example:

x <- 1:25
y1 <- sqrt(x)
y2 <- x/6
plot(x, y1, typ="l", ylim=c(0, 5))
lines(x, y2)
polygon(c(x, rev(x)) , c(y1, rev(y2)), col="green")
lines(x, y2+.5)

If there are lines hidden by the shading, plot them after the polygon or add an alpha value to the fill color you are using, e.g. 

greena <- rgb(0, 255/255, 0, .5)
polygon(c(x, rev(x)) , c(y1, rev(y2)), col=greena)

----------------------------------------
David L Carlson
Department of Anthropology
Texas A&M University
College Station, TX 77843-4352

-----Original Message-----
From: R-sig-Geo <mailto:r-sig-geo-bounces at r-project.org> On Behalf Of rain1290--- via R-sig-Geo
Sent: Friday, April 5, 2019 10:22 AM
To: mailto:r-sig-geo at r-project.org
Subject: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R

Hello there,
I have many line plots on a single graph and would like to somehow create a shaded area between them so that it looks neater and easier to interpret. Something like this:
http://jvoigts.scripts.mit.edu/blog/assets/plot_shaded_pretty.png

I heard that the function "geom_ribbon" was ideal to do this, but is it possible to incorporate this in the basic "plot" command? If so, how?
This is currently what I have done with the basic plotting, which works fine:
plot(get, Hope2, type = "l",col = "green", lwd = "3", xlab="Cumulative CO2 emissions (TtC)", ylab = "One-day maximum precipitation (mm/day)", main = "One-day maximum precipitation for Random Area for CanESM2 scenarios")lines(IPSL, Hope6, type = "l", lwd = "3", col = "green")
lines(MIROC, Hope7, type = "l", lwd = "3", col = "green")
lines(subsetprime, Hope8, type = "l", lwd = "3", col = "green")
lines(MPI, Hope9, type =" l", lwd = "3", col = "green")
So, in this plot, I have 5 green line plots in one. The idea would be shade these in green, from the lower to upper bounds. Is this possible?
Any assistance would be extremely valuable!

??? [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
mailto:R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo

From r@i@1290 m@iii@g oii @im@com  Fri Apr  5 19:40:12 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Fri, 5 Apr 2019 17:40:12 +0000 (UTC)
Subject: [R-sig-Geo] 
 Creating a color shade between upper and lower bounds
 of a line plot in R
References: <1155492182.266613.1554486012861.ref@mail.yahoo.com>
Message-ID: <1155492182.266613.1554486012861@mail.yahoo.com>

Ah, I see.

But let's say I had 10 lines on the same plot and wanted to shade green between them. Would this still work, or it only works for 2 lines?
Also, for the "rev" function in there, I noticed that it does not actually "reverse" anything, but is it necessary?
Thanks, again.?
-----Original Message-----
From: David L Carlson <dcarlson at tamu.edu>
To: rain1290 at aim.com <rain1290 at aim.com>; r-sig-geo at r-project.org <r-sig-geo at r-project.org>
Sent: Fri, Apr 5, 2019 12:59 pm
Subject: RE: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R

The two lines can have different x coordinates. We are defining the boundaries of the polygon by tracing clockwise or counterclockwise around it, e.g. In this example we follow the top line from beginning to end and then follow the bottom line from end back to beginning. The function automatically connects the beginning and end points to define the polygon and then shades it. The x values do not need to be the same for the two lines, e.g. 

lines(x1, y1)
lines(x2, y2)
polygon(c(x1, rev(x2)), c(y1, rev(y1)))

Things are a bit trickier if you want the polygon to start and end at the edge of the plot window. You can get the coordinates of the plot window boundaries with the following:

par("usr")
# [1]? 0.04 25.96 -0.20? 5.20

This gives the left lower corner (.04, -.02) and the upper right corner (25.96, 5.20). We only need the x values: .04 on the left and 25.96 on the right. We insert x-coordinates into the polygon, but we have to compute the y-axis values at .04 and 25.96 using the formulae you are using to define those lines.

x <- 1:25
y1 <- sqrt(x)
y2 <- x/6
y3 <- y2 + .5
plot(x, y1, typ="l", ylim=c(0, 5))
lines(x, y2)
lines(x, y3)
greena <- rgb(0, 255/255, 0, .5)

edge <- par("usr")
polygon(c(edge[1], x, 25.96, 25.96, rev(x), edge[1]) , 
? ? c(sqrt(edge[1]), y1, sqrt(edge[2]), edge[2]/6, rev(y2), edge[1]/6),
? ? col=greena)

----------------------------------------
David L Carlson
Department of Anthropology
Texas A&M University
College Station, TX 77843-4352


From: rain1290 at aim.com <rain1290 at aim.com> 
Sent: Friday, April 5, 2019 11:26 AM
To: David L Carlson <dcarlson at tamu.edu>; r-sig-geo at r-project.org
Subject: Re: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R

Hi David,
Okay, I just gave this a try and was able to generate a shaded area using my existing code. But just to make sure that I am using this correctly, I did this using the following

plot(get, Hope2, type = "l",col = "green", lwd = "3", xlab="Cumulative CO2 emissions (TtC)", ylab = "One-day maximum precipitation (mm/day)", main = "One-day maximum precipitation for Random Area for CanESM2 scenarios")lines(IPSL, Hope6, type = "l", lwd = "3", col = "green")
lines(MIROC, Hope7, type = "l", lwd = "3", col = "green")
lines(subsetprime, Hope8, type = "l", lwd = "3", col = "green")
lines(MPI, Hope9, type =" l", lwd = "3", col = "green")
polygon(c(get,rev(get)), c(Hope2,rev(Hope9)),col="green") ? #this is what I just tried



The polygon line that I just added there - am I telling R to shade everything from Hope2 to Hope9?

In this case, I have different x and y values for each "lines". Do I need to specify the polygon function each time I use the "lines" function in order to capture "all" of the green curves?

Thanks, again,

-----Original Message-----
From: David L Carlson <mailto:dcarlson at tamu.edu>
To: mailto:rain1290 at aim.com <mailto:rain1290 at aim.com>; mailto:r-sig-geo at r-project.org <mailto:r-sig-geo at r-project.org>
Sent: Fri, Apr 5, 2019 11:53 am
Subject: RE: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R
You can use the polygon() function (?polygon). Here's a simple reproducible example:

x <- 1:25
y1 <- sqrt(x)
y2 <- x/6
plot(x, y1, typ="l", ylim=c(0, 5))
lines(x, y2)
polygon(c(x, rev(x)) , c(y1, rev(y2)), col="green")
lines(x, y2+.5)

If there are lines hidden by the shading, plot them after the polygon or add an alpha value to the fill color you are using, e.g. 

greena <- rgb(0, 255/255, 0, .5)
polygon(c(x, rev(x)) , c(y1, rev(y2)), col=greena)

----------------------------------------
David L Carlson
Department of Anthropology
Texas A&M University
College Station, TX 77843-4352

-----Original Message-----
From: R-sig-Geo <mailto:r-sig-geo-bounces at r-project.org> On Behalf Of rain1290--- via R-sig-Geo
Sent: Friday, April 5, 2019 10:22 AM
To: mailto:r-sig-geo at r-project.org
Subject: [R-sig-Geo] Creating a color shade between upper and lower bounds of a line plot in R

Hello there,
I have many line plots on a single graph and would like to somehow create a shaded area between them so that it looks neater and easier to interpret. Something like this:
http://jvoigts.scripts.mit.edu/blog/assets/plot_shaded_pretty.png

I heard that the function "geom_ribbon" was ideal to do this, but is it possible to incorporate this in the basic "plot" command? If so, how?
This is currently what I have done with the basic plotting, which works fine:
plot(get, Hope2, type = "l",col = "green", lwd = "3", xlab="Cumulative CO2 emissions (TtC)", ylab = "One-day maximum precipitation (mm/day)", main = "One-day maximum precipitation for Random Area for CanESM2 scenarios")lines(IPSL, Hope6, type = "l", lwd = "3", col = "green")
lines(MIROC, Hope7, type = "l", lwd = "3", col = "green")
lines(subsetprime, Hope8, type = "l", lwd = "3", col = "green")
lines(MPI, Hope9, type =" l", lwd = "3", col = "green")
So, in this plot, I have 5 green line plots in one. The idea would be shade these in green, from the lower to upper bounds. Is this possible?
Any assistance would be extremely valuable!

??? [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
mailto:R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Fri Apr  5 21:35:26 2019
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 5 Apr 2019 21:35:26 +0200
Subject: [R-sig-Geo] Common Factors test in R
In-Reply-To: <14f79b72dd9e463da38564e1ee782e28@UVEX2.uvsr.sk>
References: <14f79b72dd9e463da38564e1ee782e28@UVEX2.uvsr.sk>
Message-ID: <alpine.LFD.2.21.1904052127330.861@reclus.nhh.no>

On Fri, 5 Apr 2019, Hul?nyi Martin wrote:

> Hello,
> I would like to perform a common factor test, conducted using likelihood 
> ratio test on spatial error model and spatial durbin model (both in 
> panel format).
> I have not found a command in R, that would help me to conduct the test. 
> Hence, I am trying to perform the test manuallly using the splm package 
> and data available in the splm and plm packages.

> Here is my code:
> library(splm)
> library(plm)
>
> data(Produc, package="plm")
> data(usaww)
>
> Produc <- pdata.frame(Produc, index = c("state", "year"))
>
> usaww<- mat2listw(usaww, style="W")
>
> Produc$slagUnemp <- slag(Produc$unemp, listw = usaww)
>
> durbin <- spml(gsp~unemp + slagUnemp,
>                data=Produc, listw=usaww,  effect = "twoways",
>                 model="within", lag=TRUE, spatial.error = "none",
>                  quiet = FALSE)
> spem  <- spml(gsp ~ unemp,
>                data=Produc, listw=usaww,  effect = "twoways",
>                model="within", lag=FALSE, spatial.error = "b",
>                quiet = FALSE)
> Is it correct to take the last value of the function from the console 
> output to compute the likelihood ratio?

Without checking whether the likelihoods are compatible (here probably 
are), you will not see whether the fitting functions concentrate them, 
possibly differently. Here both are lag=TRUE but one has 
spatial.error="none", the other "b", so without reading the code, you 
can't tell. It would be a good idea if these models had logLik() methods, 
because then lmtest::lrtest() should work. It then handles the degrees of 
freedom accounting between the models.

Hope this helps,

Roger

> Meaning, in this example, to calculate 2*(function(non-nested) - 
> function(nested)) = 2*(10261.79 - 10255.74) = 12.1?
> If it is correct, how can I compute the significance values?
> If it is not correct, is there a better way to compute this?
>
> Autorom tejto spr???vy elektronickej po???ty je Martin Hul???nyi. T???to spr???va je ur???en??? v???lu???ne jej adres???tovi. Inform???cie a ???daje, ktor??? s??? v nej uveden???, alebo ktor??? s??? obsiahnut??? v jej prilo???en???ch s???boroch, m???u by??? inform???ciami alebo ???dajmi chr???nen???mi pod???a platn???ch pr???vnych predpisov v Slovenskej republike. V pr???pade, ak nie ste ur???en??? ako prij???mate??? tejto spr???vy alebo jeho opr???vnen??? z???stupca, upozor???ujeme V???s, ???e inform???cie a ???daje v nej uveden??? nie ste opr???vnen??? sprac???va???, ani ich spr???stupni??? alebo poskytn?????? tretej osobe alebo ich zverejni???. Ak ste nedopatren???m prijali alebo zachytili tuto spr???vu elektronickej po???ty, dovo???ujeme si V???s po???iada???, aby ste ju zaslali sp??? na elektronick??? adresu jej odosielate???a, a aby ste ju n???sledne zmazali zo svojho po??????ta???a a z Va???ej schr???nky elektronickej po???ty. Odosielate??? tejto spr???vy nenesie zodpovednos??? za ???kody sp???soben??? nespr???vnym pou???it???m tejto spr???vy elektronickej po???ty a jej pr???loh.
>
> The author of this e-mail message is Martin Hul???nyi. This message is intended solely for the recipient. The information and data contained therein or contained in its enclosed files may be information or data protected under applicable laws in the Slovak Republic. If you are not designated as the recipient of this message or its authorized representative, we would like to inform you that the information and data contained therein are not authorized to process or make them available to third parties or to disclose them. If you have received or downloaded this e-mail message accidentally, we ask you to send it back to the e-mail address of the sender and then delete it from your computer and from your e-mail. The sender of this message is not responsible for damages caused by incorrect use of this e-mail message and its attachments.
> [eco.jpg]       Pred vytla???en???m tohto mailu zv???te pros???m vplyv na ???ivotn??? prostredie. ???akujeme.
> Please consider the environment before printing this e-mail. Thanks
>
> 	[[alternative HTML version deleted]]
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From Roger@B|v@nd @end|ng |rom nhh@no  Fri Apr  5 22:06:34 2019
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 5 Apr 2019 22:06:34 +0200
Subject: [R-sig-Geo] spdep: model fitting functions moving to new package
 spatialreg
Message-ID: <alpine.LFD.2.21.1904052142150.861@reclus.nhh.no>

I am sorry to have to disturb users of the spdep package who have used it 
to fit spatial regression models.

The package has become large and hard to maintain. Functions to create and 
handle spatial neighbours, and to test for spatial autocorrelation remain 
in spdep. Functions to fit spatial regression models are now in the new 
package spatialreg (1.1-3 on CRAN). They are _also_ in spdep 1.1-2 now on 
its way to CRAN.

If you use spdep as you have done until now, the versions of the functions 
in spdep will be used if you have not installed spatialreg, and you will 
see warnings that the spdep functions are deprecated. If you have 
installed spatialreg, you will see warnings too, but the estimation will 
be done using the spatialreg namespace internally. If you install 
spatialreg, and attach spdep followed by spatialreg, you will see that the 
spdep model fitting functions are masked by their equivalents in 
spatialreg.

During May, I expect to make the spdep versions of the model fitting 
functions defunct, gradually removing the masking problem. Most use of 
spdep by packages importing its namespace or attaching it only use 
functions creating and handling neighbour objects. The division of 
functionalities will benefit that majority of packages, because spdep will 
load faster and draw in fewer packages on which it depends. However, 
improving workflows for users of those packages means that users of model 
fitting functions will need to use spdep for neighbour objects and in 
addition spatialreg for model estimation and evaluation.

This split was discussed on github:

https://github.com/r-spatial/spdep/issues/31

and twitter: https://twitter.com/RogerBivand/status/1105023658341351424

Please take up issues on github:

https://github.com/r-spatial/spdep/issues
https://github.com/r-spatial/spatialreg/issues

on this list or by direct email.

I hope that this reconfiguration will improve the software going forward.

Grateful for feedback,

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From |eon@rdom@erv|no @end|ng |rom gm@||@com  Sat Apr  6 01:31:49 2019
From: |eon@rdom@erv|no @end|ng |rom gm@||@com (Leonardo Matheus Servino)
Date: Fri, 5 Apr 2019 20:31:49 -0300
Subject: [R-sig-Geo] Monte Carlo Simulation
Message-ID: <CA+TKu0TcxVSn=QXRFY_78ik4B9FNbbF7RWk23aBa389uYNAXrA@mail.gmail.com>

Hello, group.

I would like to make a monte carlo simulation in the residuals of a gls
model, to verify the spatial autocorrelation. Is it possible?

Thanks

	[[alternative HTML version deleted]]


From oz|@@hounkp@t|n @end|ng |rom gm@||@com  Sun Apr  7 17:52:55 2019
From: oz|@@hounkp@t|n @end|ng |rom gm@||@com (Hounkpatin Ozias)
Date: Sun, 7 Apr 2019 17:52:55 +0200
Subject: [R-sig-Geo] Getting averaged variable importance from bootstrap
 with the cubist models
Message-ID: <CA+O_1X1=OmWjaj0JnXNW5kcP4CHVkGY11TEP_RO3ZOZeWDmcuA@mail.gmail.com>

Dear All,

I am using a Bootstrapping approach with the Cubist model. It is possible
to get the variable importance (percentages  in variable usage in the
models) after running the models. For each run of the model based on the
random sampling, the variable importance is
different. A robust estimate may be determined by taking the average of all
the percentages of usage for each specific variable involved in the models.
For this purpose, I have (1) saved each model to disk,  (2) read back in R
each model, (2) got the variable importance
 for each model, (3) got a final table with all the models and the
percentages allocated by each model for the variables. the final table I am
expecting should like the table below. It is possible to do  it manually by
calling in each model but the workload is too high when you have 100 number
of bootstraps.

Here below a reproducible example with dataset from the ithir package. I
have limited the bootstrap to 3 for quick run. Also below I have shown how
I could get the table focusing on one model at a time.

Is there anyway to have all the models called in a loop, and extract the
variable importance for each model and arrange them finally
to get the table instead of doing it for each model separately ? I am
actually running the models 100 times.

I will appreciate any help.

Expected table-------------------------------------------------------
Variables VImp cubist.type
MRVBF 62.5 Vimp.cubist1
AACN 72.5 Vimp.cubist1
NDVI 41 Vimp.cubist1
Mid_Slope_Positon 24.5 Vimp.cubist1
Landsat_Band1 24 Vimp.cubist1
Terrain_Ruggedness_Index 44.5 Vimp.cubist1
TWI 42 Vimp.cubist1
Hillshading 41.5 Vimp.cubist1
Slope 41.5 Vimp.cubist1
Light_insolation 16 Vimp.cubist1
Elevation 11.5 Vimp.cubist1
MRVBF 81.5 Vimp.cubist2
Elevation 48.5 Vimp.cubist2
NDVI 62.5 Vimp.cubist2
Mid_Slope_Positon 43 Vimp.cubist2
TWI 54.5 Vimp.cubist2
AACN 41.5 Vimp.cubist2
Landsat_Band1 38.5 Vimp.cubist2
Hillshading 37.5 Vimp.cubist2
Terrain_Ruggedness_Index 27 Vimp.cubist2
Slope 21 Vimp.cubist2
Light_insolation 20.5 Vimp.cubist2
MRVBF 78 Vimp.cubist3
Hillshading 62 Vimp.cubist3
TWI 57 Vimp.cubist3
Terrain_Ruggedness_Index 55.5 Vimp.cubist3
AACN 55 Vimp.cubist3
Light_insolation 38.5 Vimp.cubist3
NDVI 50.5 Vimp.cubist3
Slope 49 Vimp.cubist3
Landsat_Band1 47.5 Vimp.cubist3
Mid_Slope_Positon 45.5 Vimp.cubist3
Elevation 31.5 Vimp.cubist3


## REPRODUCIBLE EXAMPLE

rm(list = ls())

library(Cubist)
library(ithir) # install.packages("ithir", repos="
http://R-Forge.R-project.org <http://r-forge.r-project.org/>")
library(caret)

#Set a working directory
setwd("")

# Point data
data(HV_subsoilpH)

# subset data for modeling
set.seed(123)
training <- sample(nrow(HV_subsoilpH), 0.7 * nrow(HV_subsoilpH))
cDat <- HV_subsoilpH[training, ]
vDat <- HV_subsoilpH[-training, ]

#Create folder to store models
dir.create("models", recursive = TRUE)

# Number of bootstraps
nbag <- 3

# Fit cubist models for each bootstrap
for (i in 1:nbag) {
  trainingREP <- sample.int(nrow(cDat), 1.0 * nrow(cDat),replace = TRUE)
  fit_cubist <- cubist(x = cDat[trainingREP,
                                c("Terrain_Ruggedness_Index",
                                  "AACN", "Landsat_Band1", "Elevation",
"Hillshading",
                                  "Light_insolation", "Mid_Slope_Positon",
"MRVBF", "NDVI",
                                  "TWI", "Slope")],
                       y = cDat$pH60_100cm[trainingREP],
cubistControl(rules = 5,
                                       extrapolation = 5), committees = 3)

  modelFile <-paste(getwd(), "./models/",sep = "", "bootMod_", i,".rds")
  saveRDS(object = fit_cubist, file = modelFile)
}


# List all files in directory
c.models <- list.files(path = paste(getwd(),"./models",
                      sep = ""), pattern = "\\.rds$", full.names = TRUE)

#Reads the models
fit_cubist<-  readRDS(c.models[i])
varImp(fit_cubist) # But it only give variable importance for the final
model

#Alternatively, I can call the model one by one and apply varImp
#Call models one by one
fit_cubist1<-  readRDS("./models/bootMod_1.rds")
fit_cubist2<-  readRDS("./models/bootMod_2.rds")
fit_cubist3<-  readRDS("./models/bootMod_3.rds")

#Apply varImp on each model
VImp1<-varImp(fit_cubist1)
VImp2<-varImp(fit_cubist2)
VImp3<-varImp(fit_cubist3)

#Get a data frame for each variable importance
cub.VImp1<-as.data.frame(VImp1[1])
names(cub.VImp1)[1]<-"VImp"
cub.VImp2<-as.data.frame(VImp2[1])
names(cub.VImp2)[1]<-"VImp"
cub.VImp3<-as.data.frame(VImp3[1])
names(cub.VImp3)[1]<-"VImp"

#Create a column for each variable importance related to each model
cub.VImp1$cubist.type<-"Vimp.cubist1"
cub.VImp2$cubist.type<-"Vimp.cubist2"
cub.VImp3$cubist.type<-"Vimp.cubist3"

#Join the row names to each dataframe
cub.VImp1<-setNames(cbind(rownames(cub.VImp1),
cub.VImp1),c("Variables","VImp","cubist.model"))
cub.VImp2<-setNames(cbind(rownames(cub.VImp2),
cub.VImp2),c("Variables","VImp","cubist.model"))
cub.VImp3<-setNames(cbind(rownames(cub.VImp3),
cub.VImp3),c("Variables","VImp","cubist.model"))

#Bind all the models df together by rows
All.VarImp<-bind_rows(cub.VImp1,cub.VImp2,cub.VImp3)

#Get the average of variable importance for each variable
mean.VarImp <- ddply(All.VarImp, .(Variables), summarise,
               mean = mean(VImp),
               sd   = sd( VImp))
mean.VarImp


Ozias Hounkpatin

Post doc



Sveriges lantbruksuniversitet

Swedish University of Agricultural Sciences



Dept. of Soil and Environment

PO Box 1234, SE-123 45 Uppsala

Visiting address: Lennart Hjems v?g 9

Phone: +46 18 67 12 51, Mobile: +46 72 207 85 62

ozias.hounkpatin at slu.se , www.slu.se

Hounkpatin Ozias <oziashounkpatin at gmail.com>
17:41 (10 minutes ago)
to R-sig-geo
ReplyForward
<https://drive.google.com/u/0/settings/storage?hl=en-GB>
<https://www.google.com/intl/en-GB/policies/terms/>
<https://www.google.com/intl/en-GB/policies/privacy/>
<https://www.google.com/gmail/about/policy/>

	[[alternative HTML version deleted]]


From r@turner @end|ng |rom @uck|@nd@@c@nz  Mon Apr  8 04:08:49 2019
From: r@turner @end|ng |rom @uck|@nd@@c@nz (Rolf Turner)
Date: Mon, 8 Apr 2019 14:08:49 +1200
Subject: [R-sig-Geo] [FORGED] Getting averaged variable importance from
 bootstrap with the cubist models
In-Reply-To: <CA+O_1X1=OmWjaj0JnXNW5kcP4CHVkGY11TEP_RO3ZOZeWDmcuA@mail.gmail.com>
References: <CA+O_1X1=OmWjaj0JnXNW5kcP4CHVkGY11TEP_RO3ZOZeWDmcuA@mail.gmail.com>
Message-ID: <0a1590d6-b37e-2b39-e1d7-f5850a98a986@auckland.ac.nz>

On 8/04/19 3:52 AM, Hounkpatin Ozias wrote:

<SNIP>

> rm(list = ls())

<SNIP>

NOOOOOOOOOOOOOOOOOO!!!!  Don't do this to other people!!!  As (I think 
it was) Jenny Bryan said at the NZSA Conference in December 2017:  "If 
you do this I will come to your office and set fire to your computer!!!"

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276


From rom@n@|u@tr|k @end|ng |rom gm@||@com  Mon Apr  8 09:51:47 2019
From: rom@n@|u@tr|k @end|ng |rom gm@||@com (=?UTF-8?Q?Roman_Lu=C5=A1trik?=)
Date: Mon, 8 Apr 2019 09:51:47 +0200
Subject: [R-sig-Geo] [FORGED] Getting averaged variable importance from
 bootstrap with the cubist models
In-Reply-To: <0a1590d6-b37e-2b39-e1d7-f5850a98a986@auckland.ac.nz>
References: <CA+O_1X1=OmWjaj0JnXNW5kcP4CHVkGY11TEP_RO3ZOZeWDmcuA@mail.gmail.com>
 <0a1590d6-b37e-2b39-e1d7-f5850a98a986@auckland.ac.nz>
Message-ID: <CAHT1vpgDRFm_iVUqYi7yggjW7MrxbW7egdcTDNdgvqLj8DHsDg@mail.gmail.com>

Running reproducible examples in clear sessions should be something that is
not very hard to do, far far away from (semi)production environment.
Also, people might not stand idly while their work computer is being
damaged in a fire-hazardous way.

Cheers,
Roman

On Mon, Apr 8, 2019 at 4:09 AM Rolf Turner <r.turner at auckland.ac.nz> wrote:

> On 8/04/19 3:52 AM, Hounkpatin Ozias wrote:
>
> <SNIP>
>
> > rm(list = ls())
>
> <SNIP>
>
> NOOOOOOOOOOOOOOOOOO!!!!  Don't do this to other people!!!  As (I think
> it was) Jenny Bryan said at the NZSA Conference in December 2017:  "If
> you do this I will come to your office and set fire to your computer!!!"
>
> cheers,
>
> Rolf Turner
>
> --
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Phone: +64-9-373-7599 ext. 88276
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


-- 
In God we trust, all others bring data.

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Mon Apr  8 09:55:53 2019
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Mon, 8 Apr 2019 09:55:53 +0200
Subject: [R-sig-Geo] Monte Carlo Simulation
In-Reply-To: <CA+TKu0TcxVSn=QXRFY_78ik4B9FNbbF7RWk23aBa389uYNAXrA@mail.gmail.com>
References: <CA+TKu0TcxVSn=QXRFY_78ik4B9FNbbF7RWk23aBa389uYNAXrA@mail.gmail.com>
Message-ID: <alpine.LFD.2.21.1904080948240.29766@reclus.nhh.no>

On Sat, 6 Apr 2019, Leonardo Matheus Servino wrote:

> Hello, group.
>
> I would like to make a monte carlo simulation in the residuals of a gls
> model, to verify the spatial autocorrelation. Is it possible?

Could you please be more specific, perhaps adding a toy example? Have you 
looked at ?lme4::mcmcsamp for an explanation of some issues? Could you 
rather fit a variogram model random effect in the correlation argument and 
see whether it is worth retaining? Simulating from dependent data is not 
without problems.

Roger

>
> Thanks
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From oz|@@hounkp@t|n @end|ng |rom gm@||@com  Mon Apr  8 10:23:56 2019
From: oz|@@hounkp@t|n @end|ng |rom gm@||@com (Hounkpatin Ozias)
Date: Mon, 8 Apr 2019 10:23:56 +0200
Subject: [R-sig-Geo] [FORGED] Getting averaged variable importance from
 bootstrap with the cubist models
In-Reply-To: <CA+O_1X3k+s6X6-jcB8v85abYQYOPzEp54OcrC5Krf21h-vMfjw@mail.gmail.com>
References: <CA+O_1X1=OmWjaj0JnXNW5kcP4CHVkGY11TEP_RO3ZOZeWDmcuA@mail.gmail.com>
 <0a1590d6-b37e-2b39-e1d7-f5850a98a986@auckland.ac.nz>
 <CAHT1vpgDRFm_iVUqYi7yggjW7MrxbW7egdcTDNdgvqLj8DHsDg@mail.gmail.com>
 <CA+O_1X3k+s6X6-jcB8v85abYQYOPzEp54OcrC5Krf21h-vMfjw@mail.gmail.com>
Message-ID: <CA+O_1X27_=ZCZE6hN_8tQRXEkN8X04EpJQQbuRE2CN2Sp7V-8A@mail.gmail.com>

I am sorry for sections of the code that could adversely affect (e.g.
rm(list = ls())) your computers. Still learning in R. I agree that the code
could have been better presented and will work on it .
Best,
Ozias

On Mon, 8 Apr 2019 at 09:52, Roman Lu?trik <roman.lustrik at gmail.com> wrote:

> Running reproducible examples in clear sessions should be something that is
> not very hard to do, far far away from (semi)production environment.
> Also, people might not stand idly while their work computer is being
> damaged in a fire-hazardous way.
>
> Cheers,
> Roman
>
> On Mon, Apr 8, 2019 at 4:09 AM Rolf Turner <r.turner at auckland.ac.nz>
> wrote:
>
> > On 8/04/19 3:52 AM, Hounkpatin Ozias wrote:
> >
> > <SNIP>
> >
> > > rm(list = ls())
> >
> > <SNIP>
> >
> > NOOOOOOOOOOOOOOOOOO!!!!  Don't do this to other people!!!  As (I think
> > it was) Jenny Bryan said at the NZSA Conference in December 2017:  "If
> > you do this I will come to your office and set fire to your computer!!!"
> >
> > cheers,
> >
> > Rolf Turner
> >
> > --
> > Honorary Research Fellow
> > Department of Statistics
> > University of Auckland
> > Phone: +64-9-373-7599 ext. 88276
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
>
>
> --
> In God we trust, all others bring data.
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From m@rt|n@hu|eny| @end|ng |rom v|@d@@gov@@k  Mon Apr  8 16:18:22 2019
From: m@rt|n@hu|eny| @end|ng |rom v|@d@@gov@@k (=?utf-8?B?SHVsw6lueWkgTWFydGlu?=)
Date: Mon, 8 Apr 2019 14:18:22 +0000
Subject: [R-sig-Geo] Common Factors test in R
In-Reply-To: <alpine.LFD.2.21.1904052127330.861@reclus.nhh.no>
References: <14f79b72dd9e463da38564e1ee782e28@UVEX2.uvsr.sk>
 <alpine.LFD.2.21.1904052127330.861@reclus.nhh.no>
Message-ID: <3777c527a09041669c0192d408ea856a@UVEX2.uvsr.sk>

Thank you very much.


I tried it with lrtest, but i got the following error:
> lrtest(durbin1, spem)
Error in UseMethod("logLik") :
  no applicable method for 'logLik' applied to an object of class "splm"
As you said, it might have been caused by the fact that panel spatial error model does not produce log likelihood.

Would you say that using slmtest to compare the two models is better?


Best regards,

Martin

-----Original Message-----
From: Roger Bivand [mailto:Roger.Bivand at nhh.no]
Sent: Friday, April 5, 2019 9:35 PM
To: Hul?nyi Martin <martin.hulenyi at vlada.gov.sk>
Cc: r-sig-geo at r-project.org
Subject: Re: [R-sig-Geo] Common Factors test in R

On Fri, 5 Apr 2019, Hul?nyi Martin wrote:

> Hello,
> I would like to perform a common factor test, conducted using
> likelihood ratio test on spatial error model and spatial durbin model
> (both in panel format).
> I have not found a command in R, that would help me to conduct the test.
> Hence, I am trying to perform the test manuallly using the splm
> package and data available in the splm and plm packages.

> Here is my code:
> library(splm)
> library(plm)
>
> data(Produc, package="plm")
> data(usaww)
>
> Produc <- pdata.frame(Produc, index = c("state", "year"))
>
> usaww<- mat2listw(usaww, style="W")
>
> Produc$slagUnemp <- slag(Produc$unemp, listw = usaww)
>
> durbin <- spml(gsp~unemp + slagUnemp,
>                data=Produc, listw=usaww,  effect = "twoways",
>                 model="within", lag=TRUE, spatial.error = "none",
>                  quiet = FALSE)
> spem  <- spml(gsp ~ unemp,
>                data=Produc, listw=usaww,  effect = "twoways",
>                model="within", lag=FALSE, spatial.error = "b",
>                quiet = FALSE)
> Is it correct to take the last value of the function from the console
> output to compute the likelihood ratio?

Without checking whether the likelihoods are compatible (here probably are), you will not see whether the fitting functions concentrate them, possibly differently. Here both are lag=TRUE but one has spatial.error="none", the other "b", so without reading the code, you can't tell. It would be a good idea if these models had logLik() methods, because then lmtest::lrtest() should work. It then handles the degrees of freedom accounting between the models.

Hope this helps,

Roger

> Meaning, in this example, to calculate 2*(function(non-nested) -
> function(nested)) = 2*(10261.79 - 10255.74) = 12.1?
> If it is correct, how can I compute the significance values?
> If it is not correct, is there a better way to compute this?
>
> Autorom tejto spr???vy elektronickej po???ty je Martin Hul???nyi. T???to spr???va je ur???en??? v???lu???ne jej adres???tovi. Inform???cie a ???daje, ktor??? s??? v nej uveden???, alebo ktor??? s??? obsiahnut??? v jej prilo???en???ch s???boroch, m???u by??? inform???ciami alebo ???dajmi chr???nen???mi pod???a platn???ch pr???vnych predpisov v Slovenskej republike. V pr???pade, ak nie ste ur???en??? ako prij???mate??? tejto spr???vy alebo jeho opr???vnen??? z???stupca, upozor???ujeme V???s, ???e inform???cie a ???daje v nej uveden??? nie ste opr???vnen??? sprac???va???, ani ich spr???stupni??? alebo poskytn?????? tretej osobe alebo ich zverejni???. Ak ste nedopatren???m prijali alebo zachytili tuto spr???vu elektronickej po???ty, dovo???ujeme si V???s po???iada???, aby ste ju zaslali sp??? na elektronick??? adresu jej odosielate???a, a aby ste ju n???sledne zmazali zo svojho po??????ta???a a z Va???ej schr???nky elektronickej po???ty. Odosielate??? tejto spr???vy nenesie zodpovednos??? za ???kody sp???soben??? nespr???vnym pou???it???m tejto spr???vy elektronickej po???ty a jej pr???loh.
>
> The author of this e-mail message is Martin Hul???nyi. This message is intended solely for the recipient. The information and data contained therein or contained in its enclosed files may be information or data protected under applicable laws in the Slovak Republic. If you are not designated as the recipient of this message or its authorized representative, we would like to inform you that the information and data contained therein are not authorized to process or make them available to third parties or to disclose them. If you have received or downloaded this e-mail message accidentally, we ask you to send it back to the e-mail address of the sender and then delete it from your computer and from your e-mail. The sender of this message is not responsible for damages caused by incorrect use of this e-mail message and its attachments.
> [eco.jpg]       Pred vytla???en???m tohto mailu zv???te pros???m vplyv na ???ivotn??? prostredie. ???akujeme.
> Please consider the environment before printing this e-mail. Thanks
>
> [[alternative HTML version deleted]]
>
>

--
Roger Bivand
Department of Economics, Norwegian School of Economics, Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
Autorom tejto spr?vy elektronickej po?ty je Martin Hul?nyi. T?to spr?va je ur?en? v?lu?ne jej adres?tovi. Inform?cie a ?daje, ktor? s? v nej uveden?, alebo ktor? s? obsiahnut? v jej prilo?en?ch s?boroch, m??u by? inform?ciami alebo ?dajmi chr?nen?mi pod?a platn?ch pr?vnych predpisov v Slovenskej republike. V pr?pade, ak nie ste ur?en? ako prij?mate? tejto spr?vy alebo jeho opr?vnen? z?stupca, upozor?ujeme V?s, ?e inform?cie a ?daje v nej uveden? nie ste opr?vnen? sprac?va?, ani ich spr?stupni? alebo poskytn?? tretej osobe alebo ich zverejni?. Ak ste nedopatren?m prijali alebo zachytili tuto spr?vu elektronickej po?ty, dovo?ujeme si V?s po?iada?, aby ste ju zaslali sp?? na elektronick? adresu jej odosielate?a, a aby ste ju n?sledne zmazali zo svojho po??ta?a a z Va?ej schr?nky elektronickej po?ty. Odosielate? tejto spr?vy nenesie zodpovednos? za ?kody sp?soben? nespr?vnym pou?it?m tejto spr?vy elektronickej po?ty a jej pr?loh.

The author of this e-mail message is Martin Hul?nyi. This message is intended solely for the recipient. The information and data contained therein or contained in its enclosed files may be information or data protected under applicable laws in the Slovak Republic. If you are not designated as the recipient of this message or its authorized representative, we would like to inform you that the information and data contained therein are not authorized to process or make them available to third parties or to disclose them. If you have received or downloaded this e-mail message accidentally, we ask you to send it back to the e-mail address of the sender and then delete it from your computer and from your e-mail. The sender of this message is not responsible for damages caused by incorrect use of this e-mail message and its attachments.
[eco.jpg]       Pred vytla?en?m tohto mailu zv??te pros?m vplyv na ?ivotn? prostredie. ?akujeme.
Please consider the environment before printing this e-mail. Thanks

From Roger@B|v@nd @end|ng |rom nhh@no  Tue Apr  9 12:43:04 2019
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Tue, 9 Apr 2019 12:43:04 +0200
Subject: [R-sig-Geo] Common Factors test in R
In-Reply-To: <3777c527a09041669c0192d408ea856a@UVEX2.uvsr.sk>
References: <14f79b72dd9e463da38564e1ee782e28@UVEX2.uvsr.sk>
 <alpine.LFD.2.21.1904052127330.861@reclus.nhh.no>
 <3777c527a09041669c0192d408ea856a@UVEX2.uvsr.sk>
Message-ID: <alpine.LFD.2.21.1904091207280.12168@reclus.nhh.no>

On Mon, 8 Apr 2019, Hul?nyi Martin wrote:

> Thank you very much.
>
>
> I tried it with lrtest, but i got the following error:
>> lrtest(durbin1, spem)
> Error in UseMethod("logLik") :
>  no applicable method for 'logLik' applied to an object of class "splm"
> As you said, it might have been caused by the fact that panel spatial 
> error model does not produce log likelihood.

No, you need to attract the attention of the package maintainer, and 
either contribute the missing method (spml is maximum likelihood based, so 
does have the value internally, it is simply neither returned, nor made 
accessible by a logLik() method), or hope that the maintainer might do so. 
The package lives on R-Forge at

https://r-forge.r-project.org/projects/splm/

so you can check out the package with anonymous SVN:

svn checkout svn://svn.r-forge.r-project.org/svnroot/splm/

make the changes, build and install locally, check the results, and take 
svn diff diffs to send back to the maintainer. That is after all how open 
source software works. You could start in R/spreml.R, checking to see 
where the optimized objective function values go and where they are 
returned if they are.

In your case:

> spem$logLik
NULL
> durbin$logLik
[1] -8678.189

Even without working on the code:

debug(spml)
debug(splm:::spfeml)
debug(sperrorlm)

lets you see what is going on to some extent (for spem). In the spem case, 
opt$objective is assigned to LL, but not returned by sperrorlm() in 
R/likelihoodsFE.R line 466/467. Had it been, writing logLik() methods 
would be easier, although seeing which model is nested in which given all 
the variants is hard.

Further, Durbin impacts are not (yet) available, I think.


>
> Would you say that using slmtest to compare the two models is better?
>

No, it doesn't compare two spatial models, but tests aspatial panel models 
for many kinds of mis-specification if I understand correctly.

Hope this helps,

Roger

>
> Best regards,
>
> Martin
>
> -----Original Message-----
> From: Roger Bivand [mailto:Roger.Bivand at nhh.no]
> Sent: Friday, April 5, 2019 9:35 PM
> To: Hul?nyi Martin <martin.hulenyi at vlada.gov.sk>
> Cc: r-sig-geo at r-project.org
> Subject: Re: [R-sig-Geo] Common Factors test in R
>
> On Fri, 5 Apr 2019, Hul?nyi Martin wrote:
>
>> Hello,
>> I would like to perform a common factor test, conducted using
>> likelihood ratio test on spatial error model and spatial durbin model
>> (both in panel format).
>> I have not found a command in R, that would help me to conduct the test.
>> Hence, I am trying to perform the test manuallly using the splm
>> package and data available in the splm and plm packages.
>
>> Here is my code:
>> library(splm)
>> library(plm)
>>
>> data(Produc, package="plm")
>> data(usaww)
>>
>> Produc <- pdata.frame(Produc, index = c("state", "year"))
>>
>> usaww<- mat2listw(usaww, style="W")
>>
>> Produc$slagUnemp <- slag(Produc$unemp, listw = usaww)
>>
>> durbin <- spml(gsp~unemp + slagUnemp,
>>                data=Produc, listw=usaww,  effect = "twoways",
>>                 model="within", lag=TRUE, spatial.error = "none",
>>                  quiet = FALSE)
>> spem  <- spml(gsp ~ unemp,
>>                data=Produc, listw=usaww,  effect = "twoways",
>>                model="within", lag=FALSE, spatial.error = "b",
>>                quiet = FALSE)
>> Is it correct to take the last value of the function from the console
>> output to compute the likelihood ratio?
>
> Without checking whether the likelihoods are compatible (here probably are), you will not see whether the fitting functions concentrate them, possibly differently. Here both are lag=TRUE but one has spatial.error="none", the other "b", so without reading the code, you can't tell. It would be a good idea if these models had logLik() methods, because then lmtest::lrtest() should work. It then handles the degrees of freedom accounting between the models.
>
> Hope this helps,
>
> Roger
>
>> Meaning, in this example, to calculate 2*(function(non-nested) -
>> function(nested)) = 2*(10261.79 - 10255.74) = 12.1?
>> If it is correct, how can I compute the significance values?
>> If it is not correct, is there a better way to compute this?
>>
>> Autorom tejto spr???vy elektronickej po???ty je Martin Hul???nyi. T???to spr???va je ur???en??? v???lu???ne jej adres???tovi. Inform???cie a ???daje, ktor??? s??? v nej uveden???, alebo ktor??? s??? obsiahnut??? v jej prilo???en???ch s???boroch, m???u by??? inform???ciami alebo ???dajmi chr???nen???mi pod???a platn???ch pr???vnych predpisov v Slovenskej republike. V pr???pade, ak nie ste ur???en??? ako prij???mate??? tejto spr???vy alebo jeho opr???vnen??? z???stupca, upozor???ujeme V???s, ???e inform???cie a ???daje v nej uveden??? nie ste opr???vnen??? sprac???va???, ani ich spr???stupni??? alebo poskytn?????? tretej osobe alebo ich zverejni???. Ak ste nedopatren???m prijali alebo zachytili tuto spr???vu elektronickej po???ty, dovo???ujeme si V???s po???iada???, aby ste ju zaslali sp??? na elektronick??? adresu jej odosielate???a, a aby ste ju n???sledne zmazali zo svojho po??????ta???a a z Va???ej schr???nky elektronickej po???ty. Odosielate??? tejto spr???vy nenesie zodpovednos??? za ???kody sp???soben??? nespr???vnym pou???it???m tejto spr???vy elektronickej po???ty a jej pr???loh.
>>
>> The author of this e-mail message is Martin Hul???nyi. This message is intended solely for the recipient. The information and data contained therein or contained in its enclosed files may be information or data protected under applicable laws in the Slovak Republic. If you are not designated as the recipient of this message or its authorized representative, we would like to inform you that the information and data contained therein are not authorized to process or make them available to third parties or to disclose them. If you have received or downloaded this e-mail message accidentally, we ask you to send it back to the e-mail address of the sender and then delete it from your computer and from your e-mail. The sender of this message is not responsible for damages caused by incorrect use of this e-mail message and its attachments.
>> [eco.jpg]       Pred vytla???en???m tohto mailu zv???te pros???m vplyv na ???ivotn??? prostredie. ???akujeme.
>> Please consider the environment before printing this e-mail. Thanks
>>
>> [[alternative HTML version deleted]]
>>
>>
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics, Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> Autorom tejto spr?vy elektronickej po?ty je Martin Hul?nyi. T?to spr?va je ur?en? v?lu?ne jej adres?tovi. Inform?cie a ?daje, ktor? s? v nej uveden?, alebo ktor? s? obsiahnut? v jej prilo?en?ch s?boroch, m??u by? inform?ciami alebo ?dajmi chr?nen?mi pod?a platn?ch pr?vnych predpisov v Slovenskej republike. V pr?pade, ak nie ste ur?en? ako prij?mate? tejto spr?vy alebo jeho opr?vnen? z?stupca, upozor?ujeme V?s, ?e inform?cie a ?daje v nej uveden? nie ste opr?vnen? sprac?va?, ani ich spr?stupni? alebo poskytn?? tretej osobe alebo ich zverejni?. Ak ste nedopatren?m prijali alebo zachytili tuto spr?vu elektronickej po?ty, dovo?ujeme si V?s po?iada?, aby ste ju zaslali sp?? na elektronick? adresu jej odosielate?a, a aby ste ju n?sledne zmazali zo svojho po??ta?a a z Va?ej schr?nky elektronickej po?ty. Odosielate? tejto spr?vy nenesie zodpovednos? za ?kody sp?soben? nespr?vnym pou?it?m tejto spr?vy elektronickej po?ty a jej pr?loh.
>
> The author of this e-mail message is Martin Hul?nyi. This message is intended solely for the recipient. The information and data contained therein or contained in its enclosed files may be information or data protected under applicable laws in the Slovak Republic. If you are not designated as the recipient of this message or its authorized representative, we would like to inform you that the information and data contained therein are not authorized to process or make them available to third parties or to disclose them. If you have received or downloaded this e-mail message accidentally, we ask you to send it back to the e-mail address of the sender and then delete it from your computer and from your e-mail. The sender of this message is not responsible for damages caused by incorrect use of this e-mail message and its attachments.
> [eco.jpg]       Pred vytla?en?m tohto mailu zv??te pros?m vplyv na ?ivotn? prostredie. ?akujeme.
> Please consider the environment before printing this e-mail. Thanks
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From M|ngke@L| @end|ng |rom unb@c@  Tue Apr  9 16:55:22 2019
From: M|ngke@L| @end|ng |rom unb@c@ (Mingke Li)
Date: Tue, 9 Apr 2019 14:55:22 +0000
Subject: [R-sig-Geo] Simultaneous autoregressive model with temporal
 dimension
Message-ID: <QB1PR01MB3619C65E0145679E24ECEC81872D0@QB1PR01MB3619.CANPRD01.PROD.OUTLOOK.COM>

Dear list,


I?m currently working with the simultaneous autoregressive mixed models by ?lagsarlm? function in the package ?spdep?. I have 5 years? data in 5 separate datasets, and the locations of the sample points (and also the sample size) don't vary from year to year; each sample point has different observed values in different years. Based on the 5 datasets, now I have 5 models, with the common set of predictors but different values (coefficients) from year to year.


My question is, how can I get a ?generalized? simultaneous autoregressive model for all years? In other words, can I extend my current model to a mixed model like GLMM by introducing the year as a random effect, as implemented in ?lme4::glmer?? How should I add in the temporal dimension in the simultaneous autoregressive model?


Any thoughts or advice are welcome. Thank you in advance.


Erin


	[[alternative HTML version deleted]]


From r@i@1290 m@iii@g oii @im@com  Tue Apr  9 17:57:51 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Tue, 9 Apr 2019 15:57:51 +0000 (UTC)
Subject: [R-sig-Geo] Creating a mean line plot
References: <1511223384.565549.1554825471529.ref@mail.yahoo.com>
Message-ID: <1511223384.565549.1554825471529@mail.yahoo.com>

Hi there,
I am trying to create a mean line plot that shows the mean of a series of separate line plots that correspond to two climate models. Let's first try getting the mean of two line plots. To create the separate line plots, here is what I did to set up the x and y axis variables:

####Getting cumulative emissions data for x-axis: 1-dimensional ####

#For CanESM model#

ncfname <- "cumulative_emissions_1pctCO2.nc"
Model1 <- nc_open(ncfname)
get <- ncvar_get(Model1, "cum_co2_emi-CanESM2") ? ? #units of terratones of carbon (TtC) for x-axis (140 values)
#For IPSL LR Model#
#Getting cumulative emissions data for x-axis?IPSL LR 1pctCO2?IPSL <- ncvar_get(Model1, "cum_co2_emi-IPSL-CM5A-LR") ? ? #units of terratones of carbon (TtC) for x-axis (140 values)

############################################################################################################

#####Getting precipitation data for y-axis - these are 3-dimensional####

#For CanESM2 model#
Model2 <- brick("MaxPrecCCCMACanESM21pctCO2.nc", var="onedaymax")


#For IPSL LR Model#
Model10 <- brick("MaxPrecIPSLIPSL-CM5A-LR1pctCO2.nc", var="onedaymax")
#############################################################################################################
To create plots for a specific location:
lonlat <- cbind(103,3) ? ? ? ?? #specifies a specific longitude and latitude
Hope2 <- extract(Model2,lonlat) ? ?? #CanESM2
Hope6 <- extract(Model10,lonlat) ? #start IPSL CM5A LR
plot(get,Hope2, type="l",col="green", lwd="3", xlab="Cumulative CO2 emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="One-day maximum precipitation for random location for 1pctCO2 scenario")
lines(IPSL, Hope6, type="l", lwd="3", col="green")
#############################################################################################################
So, the idea would be to create a plot that shows the mean of these two plots. Given what I showed above, how should I go about creating the mean of these two green line plots? Would you have to get the mean of the x-values, and then obtain the mean of the y-values, and then plot these?
Thanks, and any help would be greatly appreciated!
	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Tue Apr  9 19:30:53 2019
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Tue, 9 Apr 2019 19:30:53 +0200
Subject: [R-sig-Geo] Simultaneous autoregressive model with temporal
 dimension
In-Reply-To: <QB1PR01MB3619C65E0145679E24ECEC81872D0@QB1PR01MB3619.CANPRD01.PROD.OUTLOOK.COM>
References: <QB1PR01MB3619C65E0145679E24ECEC81872D0@QB1PR01MB3619.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <alpine.LFD.2.21.1904091928090.29801@reclus.nhh.no>

On Tue, 9 Apr 2019, Mingke Li wrote:

> Dear list,
>
>
> I???m currently working with the simultaneous autoregressive mixed 
> models by ???lagsarlm??? function in the package ???spdep???. I have 5 
> years??? data in 5 separate datasets, and the locations of the sample 
> points (and also the sample size) don't vary from year to year; each 
> sample point has different observed values in different years. Based on 
> the 5 datasets, now I have 5 models, with the common set of predictors 
> but different values (coefficients) from year to year.
>
>
> My question is, how can I get a ???generalized??? simultaneous 
> autoregressive model for all years? In other words, can I extend my 
> current model to a mixed model like GLMM by introducing the year as a 
> random effect, as implemented in ???lme4::glmer???? How should I add in 
> the temporal dimension in the simultaneous autoregressive model?
>

Please try the splm package; it is based on the plm package approach, but 
includes spatial panel models. As far as I am aware, few of the mixed 
models support an mrf spatially structured random effect that is not ICAR.

Hope this helps,

Roger

>
> Any thoughts or advice are welcome. Thank you in advance.
>
>
> Erin
>
>
> 	[[alternative HTML version deleted]]
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From M|ngke@L| @end|ng |rom unb@c@  Tue Apr  9 21:46:17 2019
From: M|ngke@L| @end|ng |rom unb@c@ (Mingke Li)
Date: Tue, 9 Apr 2019 19:46:17 +0000
Subject: [R-sig-Geo] Simultaneous autoregressive model with temporal
 dimension
In-Reply-To: <alpine.LFD.2.21.1904091928090.29801@reclus.nhh.no>
References: <QB1PR01MB3619C65E0145679E24ECEC81872D0@QB1PR01MB3619.CANPRD01.PROD.OUTLOOK.COM>,
 <alpine.LFD.2.21.1904091928090.29801@reclus.nhh.no>
Message-ID: <QB1PR01MB3619EF61CF8CB78850CBF8EF872D0@QB1PR01MB3619.CANPRD01.PROD.OUTLOOK.COM>

Thank you Roger. I'll look into the package.

Erin
________________________________
From: Roger Bivand <Roger.Bivand at nhh.no>
Sent: April 9, 2019 2:30 PM
To: Mingke Li
Cc: R-sig-geo Mailing List
Subject: Re: [R-sig-Geo] Simultaneous autoregressive model with temporal dimension

?CAUTION: This email comes from outside of UNB. Do not open any links or attachments unless you recognize the sender and know the content is safe.

On Tue, 9 Apr 2019, Mingke Li wrote:

> Dear list,
>
>
> I???m currently working with the simultaneous autoregressive mixed
> models by ???lagsarlm??? function in the package ???spdep???. I have 5
> years??? data in 5 separate datasets, and the locations of the sample
> points (and also the sample size) don't vary from year to year; each
> sample point has different observed values in different years. Based on
> the 5 datasets, now I have 5 models, with the common set of predictors
> but different values (coefficients) from year to year.
>
>
> My question is, how can I get a ???generalized??? simultaneous
> autoregressive model for all years? In other words, can I extend my
> current model to a mixed model like GLMM by introducing the year as a
> random effect, as implemented in ???lme4::glmer???? How should I add in
> the temporal dimension in the simultaneous autoregressive model?
>

Please try the splm package; it is based on the plm package approach, but
includes spatial panel models. As far as I am aware, few of the mixed
models support an mrf spatially structured random effect that is not ICAR.

Hope this helps,

Roger

>
> Any thoughts or advice are welcome. Thank you in advance.
>
>
> Erin
>
>
>       [[alternative HTML version deleted]]
>
>

--
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

	[[alternative HTML version deleted]]


From j@||o@|ub|nd@ @end|ng |rom gm@||@com  Tue Apr  9 23:07:48 2019
From: j@||o@|ub|nd@ @end|ng |rom gm@||@com (Jailos Lubinda)
Date: Tue, 9 Apr 2019 22:07:48 +0100
Subject: [R-sig-Geo] Simultaneous autoregressive model with temporal
 dimension
In-Reply-To: <QB1PR01MB3619C65E0145679E24ECEC81872D0@QB1PR01MB3619.CANPRD01.PROD.OUTLOOK.COM>
References: <QB1PR01MB3619C65E0145679E24ECEC81872D0@QB1PR01MB3619.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <e77d69b4-e48a-38c8-81da-db8f2aed7c52@gmail.com>

Hi Erin,

You might want to try CARBayesST package as well which has a couple of 
autoregressive models it supports too.

Good luck

Jailos

On 09/04/2019 15:55, Mingke Li wrote:
> Dear list,
>
>
> I?m currently working with the simultaneous autoregressive mixed models by ?lagsarlm? function in the package ?spdep?. I have 5 years? data in 5 separate datasets, and the locations of the sample points (and also the sample size) don't vary from year to year; each sample point has different observed values in different years. Based on the 5 datasets, now I have 5 models, with the common set of predictors but different values (coefficients) from year to year.
>
>
> My question is, how can I get a ?generalized? simultaneous autoregressive model for all years? In other words, can I extend my current model to a mixed model like GLMM by introducing the year as a random effect, as implemented in ?lme4::glmer?? How should I add in the temporal dimension in the simultaneous autoregressive model?
>
>
> Any thoughts or advice are welcome. Thank you in advance.
>
>
> Erin
>
>
> 	[[alternative HTML version deleted]]
>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

	[[alternative HTML version deleted]]


From m@rt|n@hu|eny| @end|ng |rom v|@d@@gov@@k  Wed Apr 10 15:30:18 2019
From: m@rt|n@hu|eny| @end|ng |rom v|@d@@gov@@k (=?iso-8859-2?Q?Hul=E9nyi_Martin?=)
Date: Wed, 10 Apr 2019 13:30:18 +0000
Subject: [R-sig-Geo] Common Factors test in R
In-Reply-To: <alpine.LFD.2.21.1904091207280.12168@reclus.nhh.no>
References: <14f79b72dd9e463da38564e1ee782e28@UVEX2.uvsr.sk>
 <alpine.LFD.2.21.1904052127330.861@reclus.nhh.no>
 <3777c527a09041669c0192d408ea856a@UVEX2.uvsr.sk>
 <alpine.LFD.2.21.1904091207280.12168@reclus.nhh.no>
Message-ID: <440511b5b15d4b8a8250effcedaa1828@UVEX2.uvsr.sk>

Thank you very much :)

-----Original Message-----
From: Roger Bivand [mailto:Roger.Bivand at nhh.no]
Sent: Tuesday, April 9, 2019 12:43 PM
To: Hul?nyi Martin <martin.hulenyi at vlada.gov.sk>
Cc: r-sig-geo at r-project.org
Subject: RE: [R-sig-Geo] Common Factors test in R

On Mon, 8 Apr 2019, Hul?nyi Martin wrote:

> Thank you very much.
>
>
> I tried it with lrtest, but i got the following error:
>> lrtest(durbin1, spem)
> Error in UseMethod("logLik") :
>  no applicable method for 'logLik' applied to an object of class "splm"
> As you said, it might have been caused by the fact that panel spatial
> error model does not produce log likelihood.

No, you need to attract the attention of the package maintainer, and either contribute the missing method (spml is maximum likelihood based, so does have the value internally, it is simply neither returned, nor made accessible by a logLik() method), or hope that the maintainer might do so.
The package lives on R-Forge at

https://r-forge.r-project.org/projects/splm/

so you can check out the package with anonymous SVN:

svn checkout svn://svn.r-forge.r-project.org/svnroot/splm/

make the changes, build and install locally, check the results, and take svn diff diffs to send back to the maintainer. That is after all how open source software works. You could start in R/spreml.R, checking to see where the optimized objective function values go and where they are returned if they are.

In your case:

> spem$logLik
NULL
> durbin$logLik
[1] -8678.189

Even without working on the code:

debug(spml)
debug(splm:::spfeml)
debug(sperrorlm)

lets you see what is going on to some extent (for spem). In the spem case, opt$objective is assigned to LL, but not returned by sperrorlm() in R/likelihoodsFE.R line 466/467. Had it been, writing logLik() methods would be easier, although seeing which model is nested in which given all the variants is hard.

Further, Durbin impacts are not (yet) available, I think.


>
> Would you say that using slmtest to compare the two models is better?
>

No, it doesn't compare two spatial models, but tests aspatial panel models for many kinds of mis-specification if I understand correctly.

Hope this helps,

Roger

>
> Best regards,
>
> Martin
>
> -----Original Message-----
> From: Roger Bivand [mailto:Roger.Bivand at nhh.no]
> Sent: Friday, April 5, 2019 9:35 PM
> To: Hul?nyi Martin <martin.hulenyi at vlada.gov.sk>
> Cc: r-sig-geo at r-project.org
> Subject: Re: [R-sig-Geo] Common Factors test in R
>
> On Fri, 5 Apr 2019, Hul?nyi Martin wrote:
>
>> Hello,
>> I would like to perform a common factor test, conducted using
>> likelihood ratio test on spatial error model and spatial durbin model
>> (both in panel format).
>> I have not found a command in R, that would help me to conduct the test.
>> Hence, I am trying to perform the test manuallly using the splm
>> package and data available in the splm and plm packages.
>
>> Here is my code:
>> library(splm)
>> library(plm)
>>
>> data(Produc, package="plm")
>> data(usaww)
>>
>> Produc <- pdata.frame(Produc, index = c("state", "year"))
>>
>> usaww<- mat2listw(usaww, style="W")
>>
>> Produc$slagUnemp <- slag(Produc$unemp, listw = usaww)
>>
>> durbin <- spml(gsp~unemp + slagUnemp,
>>                data=Produc, listw=usaww,  effect = "twoways",
>>                 model="within", lag=TRUE, spatial.error = "none",
>>                  quiet = FALSE)
>> spem  <- spml(gsp ~ unemp,
>>                data=Produc, listw=usaww,  effect = "twoways",
>>                model="within", lag=FALSE, spatial.error = "b",
>>                quiet = FALSE)
>> Is it correct to take the last value of the function from the console
>> output to compute the likelihood ratio?
>
> Without checking whether the likelihoods are compatible (here probably are), you will not see whether the fitting functions concentrate them, possibly differently. Here both are lag=TRUE but one has spatial.error="none", the other "b", so without reading the code, you can't tell. It would be a good idea if these models had logLik() methods, because then lmtest::lrtest() should work. It then handles the degrees of freedom accounting between the models.
>
> Hope this helps,
>
> Roger
>
>> Meaning, in this example, to calculate 2*(function(non-nested) -
>> function(nested)) = 2*(10261.79 - 10255.74) = 12.1?
>> If it is correct, how can I compute the significance values?
>> If it is not correct, is there a better way to compute this?
>>
>> Autorom tejto spr???vy elektronickej po???ty je Martin Hul???nyi. T???to spr???va je ur???en??? v???lu???ne jej adres???tovi. Inform???cie a ???daje, ktor??? s??? v nej uveden???, alebo ktor??? s??? obsiahnut??? v jej prilo???en???ch s???boroch, m???u by??? inform???ciami alebo ???dajmi chr???nen???mi pod???a platn???ch pr???vnych predpisov v Slovenskej republike. V pr???pade, ak nie ste ur???en??? ako prij???mate??? tejto spr???vy alebo jeho opr???vnen??? z???stupca, upozor???ujeme V???s, ???e inform???cie a ???daje v nej uveden??? nie ste opr???vnen??? sprac???va???, ani ich spr???stupni??? alebo poskytn?????? tretej osobe alebo ich zverejni???. Ak ste nedopatren???m prijali alebo zachytili tuto spr???vu elektronickej po???ty, dovo???ujeme si V???s po???iada???, aby ste ju zaslali sp??? na elektronick??? adresu jej odosielate???a, a aby ste ju n???sledne zmazali zo svojho po??????ta???a a z Va???ej schr???nky elektronickej po???ty. Odosielate??? tejto spr???vy nenesie zodpovednos??? za ???kody sp???soben??? nespr???vnym pou???it???m tejto spr???vy elektronickej po???ty a jej pr???loh.
>>
>> The author of this e-mail message is Martin Hul???nyi. This message is intended solely for the recipient. The information and data contained therein or contained in its enclosed files may be information or data protected under applicable laws in the Slovak Republic. If you are not designated as the recipient of this message or its authorized representative, we would like to inform you that the information and data contained therein are not authorized to process or make them available to third parties or to disclose them. If you have received or downloaded this e-mail message accidentally, we ask you to send it back to the e-mail address of the sender and then delete it from your computer and from your e-mail. The sender of this message is not responsible for damages caused by incorrect use of this e-mail message and its attachments.
>> [eco.jpg]       Pred vytla???en???m tohto mailu zv???te pros???m vplyv na ???ivotn??? prostredie. ???akujeme.
>> Please consider the environment before printing this e-mail. Thanks
>>
>> [[alternative HTML version deleted]]
>>
>>
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics, Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> Autorom tejto spr?vy elektronickej po?ty je Martin Hul?nyi. T?to spr?va je ur?en? v?lu?ne jej adres?tovi. Inform?cie a ?daje, ktor? s? v nej uveden?, alebo ktor? s? obsiahnut? v jej prilo?en?ch s?boroch, m??u by? inform?ciami alebo ?dajmi chr?nen?mi pod?a platn?ch pr?vnych predpisov v Slovenskej republike. V pr?pade, ak nie ste ur?en? ako prij?mate? tejto spr?vy alebo jeho opr?vnen? z?stupca, upozor?ujeme V?s, ?e inform?cie a ?daje v nej uveden? nie ste opr?vnen? sprac?va?, ani ich spr?stupni? alebo poskytn?? tretej osobe alebo ich zverejni?. Ak ste nedopatren?m prijali alebo zachytili tuto spr?vu elektronickej po?ty, dovo?ujeme si V?s po?iada?, aby ste ju zaslali sp?? na elektronick? adresu jej odosielate?a, a aby ste ju n?sledne zmazali zo svojho po??ta?a a z Va?ej schr?nky elektronickej po?ty. Odosielate? tejto spr?vy nenesie zodpovednos? za ?kody sp?soben? nespr?vnym pou?it?m tejto spr?vy elektronickej po?ty a jej pr?loh.
>
> The author of this e-mail message is Martin Hul?nyi. This message is intended solely for the recipient. The information and data contained therein or contained in its enclosed files may be information or data protected under applicable laws in the Slovak Republic. If you are not designated as the recipient of this message or its authorized representative, we would like to inform you that the information and data contained therein are not authorized to process or make them available to third parties or to disclose them. If you have received or downloaded this e-mail message accidentally, we ask you to send it back to the e-mail address of the sender and then delete it from your computer and from your e-mail. The sender of this message is not responsible for damages caused by incorrect use of this e-mail message and its attachments.
> [eco.jpg]       Pred vytla?en?m tohto mailu zv??te pros?m vplyv na ?ivotn? prostredie. ?akujeme.
> Please consider the environment before printing this e-mail. Thanks
>

--
Roger Bivand
Department of Economics, Norwegian School of Economics, Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
Autorom tejto spr?vy elektronickej po?ty je Martin Hul?nyi. T?to spr?va je ur?en? v?lu?ne jej adres?tovi. Inform?cie a ?daje, ktor? s? v nej uveden?, alebo ktor? s? obsiahnut? v jej prilo?en?ch s?boroch, m??u by? inform?ciami alebo ?dajmi chr?nen?mi pod?a platn?ch pr?vnych predpisov v Slovenskej republike. V pr?pade, ak nie ste ur?en? ako prij?mate? tejto spr?vy alebo jeho opr?vnen? z?stupca, upozor?ujeme V?s, ?e inform?cie a ?daje v nej uveden? nie ste opr?vnen? sprac?va?, ani ich spr?stupni? alebo poskytn?? tretej osobe alebo ich zverejni?. Ak ste nedopatren?m prijali alebo zachytili tuto spr?vu elektronickej po?ty, dovo?ujeme si V?s po?iada?, aby ste ju zaslali sp?? na elektronick? adresu jej odosielate?a, a aby ste ju n?sledne zmazali zo svojho po??ta?a a z Va?ej schr?nky elektronickej po?ty. Odosielate? tejto spr?vy nenesie zodpovednos? za ?kody sp?soben? nespr?vnym pou?it?m tejto spr?vy elektronickej po?ty a jej pr?loh.

The author of this e-mail message is Martin Hul?nyi. This message is intended solely for the recipient. The information and data contained therein or contained in its enclosed files may be information or data protected under applicable laws in the Slovak Republic. If you are not designated as the recipient of this message or its authorized representative, we would like to inform you that the information and data contained therein are not authorized to process or make them available to third parties or to disclose them. If you have received or downloaded this e-mail message accidentally, we ask you to send it back to the e-mail address of the sender and then delete it from your computer and from your e-mail. The sender of this message is not responsible for damages caused by incorrect use of this e-mail message and its attachments.


From th|_ve|o@o @end|ng |rom y@hoo@com@br  Thu Apr 11 02:41:57 2019
From: th|_ve|o@o @end|ng |rom y@hoo@com@br (Thiago V. dos Santos)
Date: Thu, 11 Apr 2019 00:41:57 +0000 (UTC)
Subject: [R-sig-Geo] Mosaic
In-Reply-To: <16360921554389136@myt4-bf1cdac1d2eb.qloud-c.yandex.net>
References: <16360921554389136@myt4-bf1cdac1d2eb.qloud-c.yandex.net>
Message-ID: <451672336.1569783.1554943317828@mail.yahoo.com>

Take a look at the "mosaic" function of the raster package.
Greetings,?-- Thiago V. dos Santos
Postdoctoral Research FellowDepartment of Climate and Space Science and EngineeringUniversity of Michigan 

    On Thursday, April 4, 2019, 10:46:05 AM EDT, Fatih Kara <msfkara at yandex.com> wrote:  
 
 Hi,
I am working with time series Landsat data and creating mosaic images.
What would you offer me to create seamless, color balanced, and smooth mosaic images from multiple Landsat 8 images?

Thanks,

-- 
Fatih Kara

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo
  
	[[alternative HTML version deleted]]


From |eder|co@de||@nn@ @end|ng |rom po||to@|t  Thu Apr 11 14:48:41 2019
From: |eder|co@de||@nn@ @end|ng |rom po||to@|t (Federico Dell'Anna)
Date: Thu, 11 Apr 2019 14:48:41 +0200
Subject: [R-sig-Geo] spreml function
Message-ID: <0F3AC75F-0EEC-4164-8C64-F4A4BDA0737D@polito.it>

Dear,
I have a problem with ?spreml? function in R.
I have a dataset of 26000 observation, like points.
I have imported the shp file in R, and .gal file calculated previously in GEODA.
When i run spreml, an error comes:
Error in as.vector(x) : no method for coercing this S4 class to a vector
below the function:
mapsart <- spreml(fm, data = map, w = maplistw, errors="sr", lag=TRUE, method="BFGS?)


Can you help me to solve this problem?

Regards

Federico



	[[alternative HTML version deleted]]


From m@rt@@m@ru||no @end|ng |rom gm@||@com  Thu Apr 11 16:37:06 2019
From: m@rt@@m@ru||no @end|ng |rom gm@||@com (Marta Rufino)
Date: Thu, 11 Apr 2019 15:37:06 +0100
Subject: [R-sig-Geo] tpk files
Message-ID: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>

Hi,

I would like to open (and use) a 'tpk' file from arcgis in r.
For example:
https://esri.maps.arcgis.com/home/item.html?id=24885cd6bd9544f5a8e15d0bf40f67d6

I tried raster and sf package, but no luck.

Any ideia if we can do this in r?

Thank you very much in advance,

Best wishes,
M.

	[[alternative HTML version deleted]]


From b@row||ng@on @end|ng |rom gm@||@com  Thu Apr 11 17:41:07 2019
From: b@row||ng@on @end|ng |rom gm@||@com (Barry Rowlingson)
Date: Thu, 11 Apr 2019 16:41:07 +0100
Subject: [R-sig-Geo] tpk files
In-Reply-To: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
Message-ID: <CANVKczOj16Reww3dpEdH64KzxSddOiNLJgWk-kHiVC5Dv0qUzw@mail.gmail.com>

What did you try? The instructions at the top say:

"Download 3.3GB tile package and rename extension from .tpk to .zip.
Extract to get EMU.gpkg"

If that's a valid GeoPackage then `sf` should be able to read it. Not sure
what might be in the geopackage though, "tile package" sounds like rasters,
but GeoPackages are generally vector...

I'll try in five minutes when all 3.3Gb have downloaded....

On Thu, Apr 11, 2019 at 3:37 PM Marta Rufino <marta.m.rufino at gmail.com>
wrote:

> Hi,
>
> I would like to open (and use) a 'tpk' file from arcgis in r.
> For example:
>
> https://esri.maps.arcgis.com/home/item.html?id=24885cd6bd9544f5a8e15d0bf40f67d6
>
> I tried raster and sf package, but no luck.
>
> Any ideia if we can do this in r?
>
> Thank you very much in advance,
>
> Best wishes,
> M.
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From SW@|br|dge @end|ng |rom e@r|@com  Thu Apr 11 17:52:32 2019
From: SW@|br|dge @end|ng |rom e@r|@com (Shaun Walbridge)
Date: Thu, 11 Apr 2019 15:52:32 +0000
Subject: [R-sig-Geo] tpk files
In-Reply-To: <CANVKczOj16Reww3dpEdH64KzxSddOiNLJgWk-kHiVC5Dv0qUzw@mail.gmail.com>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
 <CANVKczOj16Reww3dpEdH64KzxSddOiNLJgWk-kHiVC5Dv0qUzw@mail.gmail.com>
Message-ID: <9ADA9B60-6006-4783-A8EF-B03605F90255@esri.com>

I think the issue is, most GDAL installations don't have the Geopackage raster driver [1] installed by default, which lists "Needs libsqlite3 (and any or all of PNG, JPEG, WEBP drivers)" for it to be available. At least on my Homebrew installation of GDAL, this driver wasn't built out of the box. If you rebuild GDAL with this additional driver, or find a prebuilt binary which has it, it should be able to open. A simple test is if `gdalinfo EMU.gpkg` returns information about the dataset outside of R.

1. https://urldefense.proofpoint.com/v2/url?u=https-3A__www.gdal.org_drv-5Fgeopackage-5Fraster.html&d=DwIGaQ&c=n6-cguzQvX_tUIrZOS_4Og&r=fCPRb7QX-vd5bnO9gIJHCiX852SVUtyYX--xtCKtpfk&m=p5ULiF5de1gKZBP-IzWbMO9Pe5LFzv9uaZ5VJYnWw1Y&s=d6xaKGlN0jpd8mBdjKXAhzst7N3Bgo43BvJlLnDSngk&e=

?On 4/11/19, 11:41 AM, "Barry Rowlingson" <b.rowlingson at gmail.com> wrote:

    What did you try? The instructions at the top say:
    
    "Download 3.3GB tile package and rename extension from .tpk to .zip.
    Extract to get EMU.gpkg"
    
    If that's a valid GeoPackage then `sf` should be able to read it. Not sure
    what might be in the geopackage though, "tile package" sounds like rasters,
    but GeoPackages are generally vector...
    
    I'll try in five minutes when all 3.3Gb have downloaded....
    
    On Thu, Apr 11, 2019 at 3:37 PM Marta Rufino <marta.m.rufino at gmail.com>
    wrote:
    
    > Hi,
    >
    > I would like to open (and use) a 'tpk' file from arcgis in r.
    > For example:
    >
    > https://esri.maps.arcgis.com/home/item.html?id=24885cd6bd9544f5a8e15d0bf40f67d6
    >
    > I tried raster and sf package, but no luck.
    >
    > Any ideia if we can do this in r?
    >
    > Thank you very much in advance,
    >
    > Best wishes,
    > M.
    >
    >         [[alternative HTML version deleted]]
    >
    > _______________________________________________
    > R-sig-Geo mailing list
    > R-sig-Geo at r-project.org
    > https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dgeo&d=DwICAg&c=n6-cguzQvX_tUIrZOS_4Og&r=YFaRLkcUCdDkLrpTbNOUV9J1CwYBCTMwgm5tdQkRSm4&m=nytIIxO936Ls0xrd3zZkBd1WNjQB3DwlOK88GErq19M&s=uahwJjXmsZFnUVQXvkICr3EfAbNjOuaXl6iwziIexTM&e=
    >
    
    	[[alternative HTML version deleted]]
    
    _______________________________________________
    R-sig-Geo mailing list
    R-sig-Geo at r-project.org
    https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dgeo&d=DwICAg&c=n6-cguzQvX_tUIrZOS_4Og&r=YFaRLkcUCdDkLrpTbNOUV9J1CwYBCTMwgm5tdQkRSm4&m=nytIIxO936Ls0xrd3zZkBd1WNjQB3DwlOK88GErq19M&s=uahwJjXmsZFnUVQXvkICr3EfAbNjOuaXl6iwziIexTM&e=
    



From m@rt@@m@ru||no @end|ng |rom gm@||@com  Thu Apr 11 17:57:18 2019
From: m@rt@@m@ru||no @end|ng |rom gm@||@com (Marta Rufino)
Date: Thu, 11 Apr 2019 16:57:18 +0100
Subject: [R-sig-Geo] tpk files
In-Reply-To: <CANVKczNikJ8N2qb8+Uina6XvbOymde7NQGPbVxeCj58PqKQ3Mw@mail.gmail.com>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
 <CANVKczNikJ8N2qb8+Uina6XvbOymde7NQGPbVxeCj58PqKQ3Mw@mail.gmail.com>
Message-ID: <CAKSASLCPFYjc_WNpvsE3BUwJkxJ0mG2VuFnnVFrrL-p+73=H=Q@mail.gmail.com>

Hi Barry,

Thank you so much for your quik reply!
Yep, I tried that... after downloading, changing the name and decompressing
(it becomes 27GB), then I was not able to read it with r.
I will try again then.

Cheers,
M.

PS: now, it is giving me an error:

Error in CPL_read_ogr(dsn, layer, query, as.character(options), quiet,  :
  std::bad_alloc
In addition: Warning message:
In CPL_read_ogr(dsn, layer, query, as.character(options), quiet,  :
  GDAL Error 1: In GetNextRawFeature(): sqlite3_step() : disk I/O error
>

Barry Rowlingson <b.rowlingson at lancaster.ac.uk> escreveu no dia quinta,
11/04/2019 ?(s) 16:39:

> What did you try? The instructions at the top say:
>
> "Download 3.3GB tile package and rename extension from .tpk to .zip.
> Extract to get EMU.gpkg"
>
> If that's a valid GeoPackage then `sf` should be able to read it. Not sure
> what might be in the geopackage though, "tile package" sounds like rasters,
> but GeoPackages are generally vector...
>
> I'll try in five minutes when all 3.3Gb have downloaded....
>
> Barry
>
>
>
>
> On Thu, Apr 11, 2019 at 3:37 PM Marta Rufino <marta.m.rufino at gmail.com>
> wrote:
>
>> Hi,
>>
>> I would like to open (and use) a 'tpk' file from arcgis in r.
>> For example:
>>
>> https://esri.maps.arcgis.com/home/item.html?id=24885cd6bd9544f5a8e15d0bf40f67d6
>>
>> I tried raster and sf package, but no luck.
>>
>> Any ideia if we can do this in r?
>>
>> Thank you very much in advance,
>>
>> Best wishes,
>> M.
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>

-- 
Marta M. Rufino (auxiliary researcher)

*____________________________________________________*MARE - Marine and
Environmental Sciences Centre
Faculty of Sciences, University of Lisbon
Campo Grande, 1749-016 Lisboa,
Portugal
Tel: + 351 21 750 00 00, extension: 22576

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Thu Apr 11 18:44:29 2019
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Thu, 11 Apr 2019 16:44:29 +0000
Subject: [R-sig-Geo] tpk files
In-Reply-To: <CAKSASLCPFYjc_WNpvsE3BUwJkxJ0mG2VuFnnVFrrL-p+73=H=Q@mail.gmail.com>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
 <CANVKczNikJ8N2qb8+Uina6XvbOymde7NQGPbVxeCj58PqKQ3Mw@mail.gmail.com>,
 <CAKSASLCPFYjc_WNpvsE3BUwJkxJ0mG2VuFnnVFrrL-p+73=H=Q@mail.gmail.com>
Message-ID: <CF511784783D0B52.e2054a8a-f497-4761-9841-266797efac89@mail.outlook.com>

Briefly, could you use the proxy interface in stars and subset without reading the whole object? I'm not able to check now, but if the data are raster layers, perhaps temporal, stars may be helpful.

Roger

Roger Bivand
Norwegian School of Economics
Bergen, Norway



Fra: Marta Rufino
Sendt: torsdag 11. april, 17.58
Emne: Re: [R-sig-Geo] tpk files
Til: Barry Rowlingson
Kopi: r-sig-geo


Hi Barry, Thank you so much for your quik reply! Yep, I tried that... after downloading, changing the name and decompressing (it becomes 27GB), then I was not able to read it with r. I will try again then. Cheers, M. PS: now, it is giving me an error: Error in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, : std::bad_alloc In addition: Warning message: In CPL_read_ogr(dsn, layer, query, as.character(options), quiet, : GDAL Error 1: In GetNextRawFeature(): sqlite3_step() : disk I/O error > Barry Rowlingson escreveu no dia quinta, 11/04/2019 ?(s) 16:39: > What did you try? The instructions at the top say: > > "Download 3.3GB tile package and rename extension from .tpk to .zip. > Extract to get EMU.gpkg" > > If that's a valid GeoPackage then `sf` should be able to read it. Not sure > what might be in the geopackage though, "tile package" sounds like rasters, > but GeoPackages are generally vector... > > I'll try in five minutes when all 3.3Gb have downloaded.... > > Barry > > > > > On Thu, Apr 11, 2019 at 3:37 PM Marta Rufino > wrote: > >> Hi, >> >> I would like to open (and use) a 'tpk' file from arcgis in r. >> For example: >> >> https://esri.maps.arcgis.com/home/item.html?id=24885cd6bd9544f5a8e15d0bf40f67d6 >> >> I tried raster and sf package, but no luck. >> >> Any ideia if we can do this in r? >> >> Thank you very much in advance, >> >> Best wishes, >> M. >> >> [[alternative HTML version deleted]] >> >> _______________________________________________ >> R-sig-Geo mailing list >> R-sig-Geo at r-project.org >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo >> > -- Marta M. Rufino (auxiliary researcher) *____________________________________________________*MARE - Marine and Environmental Sciences Centre Faculty of Sciences, University of Lisbon Campo Grande, 1749-016 Lisboa, Portugal Tel: + 351 21 750 00 00, extension: 22576 [[alternative HTML version deleted]] _______________________________________________ R-sig-Geo mailing list R-sig-Geo at r-project.org https://stat.ethz.ch/mailman/listinfo/r-sig-geo


	[[alternative HTML version deleted]]


From edzer@pebe@m@ @end|ng |rom un|-muen@ter@de  Thu Apr 11 22:56:49 2019
From: edzer@pebe@m@ @end|ng |rom un|-muen@ter@de (Edzer Pebesma)
Date: Thu, 11 Apr 2019 22:56:49 +0200
Subject: [R-sig-Geo] tpk files
In-Reply-To: <9ADA9B60-6006-4783-A8EF-B03605F90255@esri.com>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
 <CANVKczOj16Reww3dpEdH64KzxSddOiNLJgWk-kHiVC5Dv0qUzw@mail.gmail.com>
 <9ADA9B60-6006-4783-A8EF-B03605F90255@esri.com>
Message-ID: <6b996840-f760-8d17-306d-4f1417229f6c@uni-muenster.de>

It's a 30 Gb 3D point file:

$ ogrinfo EMU.gpkg
INFO: Open of `EMU.gpkg'
      using driver `GPKG' successful.
1: EMU_Master (3D Point)

@Shaun: homebrew seems to be supported neither by apple, nor by CRAN, so
you are a bit on your own there. Have you tried the CRAN binary packages
using GDAL?

In any case, the windows binary does (should) support gpkg, see
https://github.com/rwinlib/gdal2

Trying to read this file into R with sf::st_read will require a lot of
RAM, or some strategy to read in parts only.

On 4/11/19 5:52 PM, Shaun Walbridge wrote:
> I think the issue is, most GDAL installations don't have the Geopackage raster driver [1] installed by default, which lists "Needs libsqlite3 (and any or all of PNG, JPEG, WEBP drivers)" for it to be available. At least on my Homebrew installation of GDAL, this driver wasn't built out of the box. If you rebuild GDAL with this additional driver, or find a prebuilt binary which has it, it should be able to open. A simple test is if `gdalinfo EMU.gpkg` returns information about the dataset outside of R.
> 
> 1. https://urldefense.proofpoint.com/v2/url?u=https-3A__www.gdal.org_drv-5Fgeopackage-5Fraster.html&d=DwIGaQ&c=n6-cguzQvX_tUIrZOS_4Og&r=fCPRb7QX-vd5bnO9gIJHCiX852SVUtyYX--xtCKtpfk&m=p5ULiF5de1gKZBP-IzWbMO9Pe5LFzv9uaZ5VJYnWw1Y&s=d6xaKGlN0jpd8mBdjKXAhzst7N3Bgo43BvJlLnDSngk&e=
> 
> ?On 4/11/19, 11:41 AM, "Barry Rowlingson" <b.rowlingson at gmail.com> wrote:
> 
>     What did you try? The instructions at the top say:
>     
>     "Download 3.3GB tile package and rename extension from .tpk to .zip.
>     Extract to get EMU.gpkg"
>     
>     If that's a valid GeoPackage then `sf` should be able to read it. Not sure
>     what might be in the geopackage though, "tile package" sounds like rasters,
>     but GeoPackages are generally vector...
>     
>     I'll try in five minutes when all 3.3Gb have downloaded....
>     
>     On Thu, Apr 11, 2019 at 3:37 PM Marta Rufino <marta.m.rufino at gmail.com>
>     wrote:
>     
>     > Hi,
>     >
>     > I would like to open (and use) a 'tpk' file from arcgis in r.
>     > For example:
>     >
>     > https://esri.maps.arcgis.com/home/item.html?id=24885cd6bd9544f5a8e15d0bf40f67d6
>     >
>     > I tried raster and sf package, but no luck.
>     >
>     > Any ideia if we can do this in r?
>     >
>     > Thank you very much in advance,
>     >
>     > Best wishes,
>     > M.
>     >
>     >         [[alternative HTML version deleted]]
>     >
>     > _______________________________________________
>     > R-sig-Geo mailing list
>     > R-sig-Geo at r-project.org
>     > https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dgeo&d=DwICAg&c=n6-cguzQvX_tUIrZOS_4Og&r=YFaRLkcUCdDkLrpTbNOUV9J1CwYBCTMwgm5tdQkRSm4&m=nytIIxO936Ls0xrd3zZkBd1WNjQB3DwlOK88GErq19M&s=uahwJjXmsZFnUVQXvkICr3EfAbNjOuaXl6iwziIexTM&e=
>     >
>     
>     	[[alternative HTML version deleted]]
>     
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org
>     https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dgeo&d=DwICAg&c=n6-cguzQvX_tUIrZOS_4Og&r=YFaRLkcUCdDkLrpTbNOUV9J1CwYBCTMwgm5tdQkRSm4&m=nytIIxO936Ls0xrd3zZkBd1WNjQB3DwlOK88GErq19M&s=uahwJjXmsZFnUVQXvkICr3EfAbNjOuaXl6iwziIexTM&e=
>     
> 
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pEpkey.asc
Type: application/pgp-keys
Size: 2472 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20190411/c4d0ff05/attachment.bin>

From r@i@1290 m@iii@g oii @im@com  Thu Apr 11 23:57:38 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Thu, 11 Apr 2019 21:57:38 +0000 (UTC)
Subject: [R-sig-Geo] Creating a mean line plot
References: <958032223.2037452.1555019858964.ref@mail.yahoo.com>
Message-ID: <958032223.2037452.1555019858964@mail.yahoo.com>

Hi there,
I am trying to create a mean line plot that shows the mean of a series of separate line plots that correspond to two climate models. Let's first try getting the mean of two line plots. To create the separate line plots, here is what I did to set up the x and y axis variables:

####Getting cumulative emissions data for x-axis: 1-dimensional ####

#For CanESM model#

ncfname <- "cumulative_emissions_1pctCO2.nc"
Model1 <- nc_open(ncfname)
get <- ncvar_get(Model1, "cum_co2_emi-CanESM2") ? ? #units of terratones of carbon (TtC) for x-axis (140 values)
#For IPSL LR Model#
#Getting cumulative emissions data for x-axis?IPSL LR 1pctCO2?IPSL <- ncvar_get(Model1, "cum_co2_emi-IPSL-CM5A-LR") ? ? #units of terratones of carbon (TtC) for x-axis (140 values)

############################################################################################################

#####Getting precipitation data for y-axis - these are 3-dimensional####

#For CanESM2 model#
Model2 <- brick("MaxPrecCCCMACanESM21pctCO2.nc", var="onedaymax")


#For IPSL LR Model#
Model10 <- brick("MaxPrecIPSLIPSL-CM5A-LR1pctCO2.nc", var="onedaymax")
#############################################################################################################
To create plots for a specific location:
lonlat <- cbind(103,3) ? ? ? ?? #specifies a specific longitude and latitude
Hope2 <- extract(Model2,lonlat) ? ?? #CanESM2
Hope6 <- extract(Model10,lonlat) ? #start IPSL CM5A LR
plot(get,Hope2, type="l",col="green", lwd="3", xlab="Cumulative CO2 emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="One-day maximum precipitation for random location for 1pctCO2 scenario")
lines(IPSL, Hope6, type="l", lwd="3", col="green")
#############################################################################################################
So, the idea would be to create a plot that shows the mean of these two plots. Given what I showed above, how should I go about creating the mean of these two green line plots? Would you have to get the mean of the x-values, and then obtain the mean of the y-values, and then plot these?
Thanks, and any help would be greatly appreciated!
	[[alternative HTML version deleted]]


From b@row||ng@on @end|ng |rom gm@||@com  Fri Apr 12 00:48:23 2019
From: b@row||ng@on @end|ng |rom gm@||@com (Barry Rowlingson)
Date: Thu, 11 Apr 2019 23:48:23 +0100
Subject: [R-sig-Geo] tpk files
In-Reply-To: <6b996840-f760-8d17-306d-4f1417229f6c@uni-muenster.de>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
 <CANVKczOj16Reww3dpEdH64KzxSddOiNLJgWk-kHiVC5Dv0qUzw@mail.gmail.com>
 <9ADA9B60-6006-4783-A8EF-B03605F90255@esri.com>
 <6b996840-f760-8d17-306d-4f1417229f6c@uni-muenster.de>
Message-ID: <CANVKczMms7Pv4Xv=PNLcZFQQ1Zi6Knky5NgyA9gk9Lb9Fb9kmA@mail.gmail.com>

QGIS could "read" it pretty smartly, only loading in the bits in the
current view extent, and doing the loading in a separate thread so the GUI
was still active.

Marta has told me that she only needs the surface layer points - the X Y
and Z coordinates are duplicated as attributes so I think a selection of
Z=0 (or something) might make a small enough subset to read into R
directly. This might be doable via the `query` option of `st_read`, or
failing that a "select" in SQLite3 and dumping the results to a CSV file.
There seems to be hundreds of data points at each location so taking the
surface points only could thin it out considerably. It may still take some
time but if its a one-off...

Barry


On Thu, Apr 11, 2019 at 9:57 PM Edzer Pebesma <edzer.pebesma at uni-muenster.de>
wrote:

> It's a 30 Gb 3D point file:
>
> $ ogrinfo EMU.gpkg
> INFO: Open of `EMU.gpkg'
>       using driver `GPKG' successful.
> 1: EMU_Master (3D Point)
>
> @Shaun: homebrew seems to be supported neither by apple, nor by CRAN, so
> you are a bit on your own there. Have you tried the CRAN binary packages
> using GDAL?
>
> In any case, the windows binary does (should) support gpkg, see
> https://github.com/rwinlib/gdal2
>
> Trying to read this file into R with sf::st_read will require a lot of
> RAM, or some strategy to read in parts only.
>
> On 4/11/19 5:52 PM, Shaun Walbridge wrote:
> > I think the issue is, most GDAL installations don't have the Geopackage
> raster driver [1] installed by default, which lists "Needs libsqlite3 (and
> any or all of PNG, JPEG, WEBP drivers)" for it to be available. At least on
> my Homebrew installation of GDAL, this driver wasn't built out of the box.
> If you rebuild GDAL with this additional driver, or find a prebuilt binary
> which has it, it should be able to open. A simple test is if `gdalinfo
> EMU.gpkg` returns information about the dataset outside of R.
> >
> > 1.
> https://urldefense.proofpoint.com/v2/url?u=https-3A__www.gdal.org_drv-5Fgeopackage-5Fraster.html&d=DwIGaQ&c=n6-cguzQvX_tUIrZOS_4Og&r=fCPRb7QX-vd5bnO9gIJHCiX852SVUtyYX--xtCKtpfk&m=p5ULiF5de1gKZBP-IzWbMO9Pe5LFzv9uaZ5VJYnWw1Y&s=d6xaKGlN0jpd8mBdjKXAhzst7N3Bgo43BvJlLnDSngk&e=
> >
> > ?On 4/11/19, 11:41 AM, "Barry Rowlingson" <b.rowlingson at gmail.com>
> wrote:
> >
> >     What did you try? The instructions at the top say:
> >
> >     "Download 3.3GB tile package and rename extension from .tpk to .zip.
> >     Extract to get EMU.gpkg"
> >
> >     If that's a valid GeoPackage then `sf` should be able to read it.
> Not sure
> >     what might be in the geopackage though, "tile package" sounds like
> rasters,
> >     but GeoPackages are generally vector...
> >
> >     I'll try in five minutes when all 3.3Gb have downloaded....
> >
> >     On Thu, Apr 11, 2019 at 3:37 PM Marta Rufino <
> marta.m.rufino at gmail.com>
> >     wrote:
> >
> >     > Hi,
> >     >
> >     > I would like to open (and use) a 'tpk' file from arcgis in r.
> >     > For example:
> >     >
> >     >
> https://esri.maps.arcgis.com/home/item.html?id=24885cd6bd9544f5a8e15d0bf40f67d6
> >     >
> >     > I tried raster and sf package, but no luck.
> >     >
> >     > Any ideia if we can do this in r?
> >     >
> >     > Thank you very much in advance,
> >     >
> >     > Best wishes,
> >     > M.
> >     >
> >     >         [[alternative HTML version deleted]]
> >     >
> >     > _______________________________________________
> >     > R-sig-Geo mailing list
> >     > R-sig-Geo at r-project.org
> >     >
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dgeo&d=DwICAg&c=n6-cguzQvX_tUIrZOS_4Og&r=YFaRLkcUCdDkLrpTbNOUV9J1CwYBCTMwgm5tdQkRSm4&m=nytIIxO936Ls0xrd3zZkBd1WNjQB3DwlOK88GErq19M&s=uahwJjXmsZFnUVQXvkICr3EfAbNjOuaXl6iwziIexTM&e=
> >     >
> >
> >       [[alternative HTML version deleted]]
> >
> >     _______________________________________________
> >     R-sig-Geo mailing list
> >     R-sig-Geo at r-project.org
> >
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dgeo&d=DwICAg&c=n6-cguzQvX_tUIrZOS_4Og&r=YFaRLkcUCdDkLrpTbNOUV9J1CwYBCTMwgm5tdQkRSm4&m=nytIIxO936Ls0xrd3zZkBd1WNjQB3DwlOK88GErq19M&s=uahwJjXmsZFnUVQXvkICr3EfAbNjOuaXl6iwziIexTM&e=
> >
> >
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
>
> --
> Edzer Pebesma
> Institute for Geoinformatics
> Heisenbergstrasse 2, 48151 Muenster, Germany
> Phone: +49 251 8333081
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From edzer@pebe@m@ @end|ng |rom un|-muen@ter@de  Fri Apr 12 10:13:45 2019
From: edzer@pebe@m@ @end|ng |rom un|-muen@ter@de (Edzer Pebesma)
Date: Fri, 12 Apr 2019 10:13:45 +0200
Subject: [R-sig-Geo] tpk files
In-Reply-To: <CANVKczMms7Pv4Xv=PNLcZFQQ1Zi6Knky5NgyA9gk9Lb9Fb9kmA@mail.gmail.com>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
 <CANVKczOj16Reww3dpEdH64KzxSddOiNLJgWk-kHiVC5Dv0qUzw@mail.gmail.com>
 <9ADA9B60-6006-4783-A8EF-B03605F90255@esri.com>
 <6b996840-f760-8d17-306d-4f1417229f6c@uni-muenster.de>
 <CANVKczMms7Pv4Xv=PNLcZFQQ1Zi6Knky5NgyA9gk9Lb9Fb9kmA@mail.gmail.com>
Message-ID: <da847552-3f8f-7b4b-3628-036abeb91642@uni-muenster.de>

Thanks; not sure this is what is intended, but it seemed to work:

> library(sf)
Linking to GEOS 3.7.0, GDAL 2.4.0, PROJ 5.2.0
> r = st_read("EMU.gpkg", query =
    "select * from EMU_Master where depth_lvl = 1")
Reading layer `EMU_Master' from data source
`/home/edzer/Downloads/EMU.gpkg' using driver `GPKG'
Simple feature collection with 677109 features and 33 fields
geometry type:  POINT
dimension:      XYZ
bbox:           xmin: -179.875 ymin: -78.375 xmax: 179.875 ymax: 89.875
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
> object.size(r)
438817848 bytes


On 4/12/19 12:48 AM, Barry Rowlingson wrote:
> QGIS could "read" it pretty smartly, only loading in the bits in the
> current view extent, and doing the loading in a separate thread so the
> GUI was still active.
> 
> Marta has told me that she only needs the surface layer points - the X Y
> and Z coordinates are duplicated as attributes so I think a selection of
> Z=0 (or something) might make a small enough subset to read into R
> directly. This might be doable via the `query` option of `st_read`, or
> failing that a "select" in SQLite3 and dumping the results to a CSV
> file. There seems to be hundreds of data points at each location so
> taking the surface points only could thin it out considerably. It may
> still take some time but if its a one-off...
> 
> Barry
> 
> 
> On Thu, Apr 11, 2019 at 9:57 PM Edzer Pebesma
> <edzer.pebesma at uni-muenster.de <mailto:edzer.pebesma at uni-muenster.de>>
> wrote:
> 
>     It's a 30 Gb 3D point file:
> 
>     $ ogrinfo EMU.gpkg
>     INFO: Open of `EMU.gpkg'
>     ? ? ? using driver `GPKG' successful.
>     1: EMU_Master (3D Point)
> 
>     @Shaun: homebrew seems to be supported neither by apple, nor by CRAN, so
>     you are a bit on your own there. Have you tried the CRAN binary packages
>     using GDAL?
> 
>     In any case, the windows binary does (should) support gpkg, see
>     https://github.com/rwinlib/gdal2
> 
>     Trying to read this file into R with sf::st_read will require a lot of
>     RAM, or some strategy to read in parts only.
> 
>     On 4/11/19 5:52 PM, Shaun Walbridge wrote:
>     > I think the issue is, most GDAL installations don't have the
>     Geopackage raster driver [1] installed by default, which lists
>     "Needs libsqlite3 (and any or all of PNG, JPEG, WEBP drivers)" for
>     it to be available. At least on my Homebrew installation of GDAL,
>     this driver wasn't built out of the box. If you rebuild GDAL with
>     this additional driver, or find a prebuilt binary which has it, it
>     should be able to open. A simple test is if `gdalinfo EMU.gpkg`
>     returns information about the dataset outside of R.
>     >
>     > 1.
>     https://urldefense.proofpoint.com/v2/url?u=https-3A__www.gdal.org_drv-5Fgeopackage-5Fraster.html&d=DwIGaQ&c=n6-cguzQvX_tUIrZOS_4Og&r=fCPRb7QX-vd5bnO9gIJHCiX852SVUtyYX--xtCKtpfk&m=p5ULiF5de1gKZBP-IzWbMO9Pe5LFzv9uaZ5VJYnWw1Y&s=d6xaKGlN0jpd8mBdjKXAhzst7N3Bgo43BvJlLnDSngk&e=
>     >
>     > ?On 4/11/19, 11:41 AM, "Barry Rowlingson" <b.rowlingson at gmail.com
>     <mailto:b.rowlingson at gmail.com>> wrote:
>     >
>     >? ? ?What did you try? The instructions at the top say:
>     >? ? ?
>     >? ? ?"Download 3.3GB tile package and rename extension from .tpk to
>     .zip.
>     >? ? ?Extract to get EMU.gpkg"
>     >? ? ?
>     >? ? ?If that's a valid GeoPackage then `sf` should be able to read
>     it. Not sure
>     >? ? ?what might be in the geopackage though, "tile package" sounds
>     like rasters,
>     >? ? ?but GeoPackages are generally vector...
>     >? ? ?
>     >? ? ?I'll try in five minutes when all 3.3Gb have downloaded....
>     >? ? ?
>     >? ? ?On Thu, Apr 11, 2019 at 3:37 PM Marta Rufino
>     <marta.m.rufino at gmail.com <mailto:marta.m.rufino at gmail.com>>
>     >? ? ?wrote:
>     >? ? ?
>     >? ? ?> Hi,
>     >? ? ?>
>     >? ? ?> I would like to open (and use) a 'tpk' file from arcgis in r.
>     >? ? ?> For example:
>     >? ? ?>
>     >? ? ?>
>     https://esri.maps.arcgis.com/home/item.html?id=24885cd6bd9544f5a8e15d0bf40f67d6
>     >? ? ?>
>     >? ? ?> I tried raster and sf package, but no luck.
>     >? ? ?>
>     >? ? ?> Any ideia if we can do this in r?
>     >? ? ?>
>     >? ? ?> Thank you very much in advance,
>     >? ? ?>
>     >? ? ?> Best wishes,
>     >? ? ?> M.
>     >? ? ?>
>     >? ? ?>? ? ? ? ?[[alternative HTML version deleted]]
>     >? ? ?>
>     >? ? ?> _______________________________________________
>     >? ? ?> R-sig-Geo mailing list
>     >? ? ?> R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     >? ? ?>
>     https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dgeo&d=DwICAg&c=n6-cguzQvX_tUIrZOS_4Og&r=YFaRLkcUCdDkLrpTbNOUV9J1CwYBCTMwgm5tdQkRSm4&m=nytIIxO936Ls0xrd3zZkBd1WNjQB3DwlOK88GErq19M&s=uahwJjXmsZFnUVQXvkICr3EfAbNjOuaXl6iwziIexTM&e=
>     >? ? ?>
>     >? ? ?
>     >? ? ? ?[[alternative HTML version deleted]]
>     >? ? ?
>     >? ? ?_______________________________________________
>     >? ? ?R-sig-Geo mailing list
>     >? ? ?R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     >? ?
>     ?https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dsig-2Dgeo&d=DwICAg&c=n6-cguzQvX_tUIrZOS_4Og&r=YFaRLkcUCdDkLrpTbNOUV9J1CwYBCTMwgm5tdQkRSm4&m=nytIIxO936Ls0xrd3zZkBd1WNjQB3DwlOK88GErq19M&s=uahwJjXmsZFnUVQXvkICr3EfAbNjOuaXl6iwziIexTM&e=
>     >? ? ?
>     >
>     >
>     > _______________________________________________
>     > R-sig-Geo mailing list
>     > R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>     >
> 
>     -- 
>     Edzer Pebesma
>     Institute for Geoinformatics
>     Heisenbergstrasse 2, 48151 Muenster, Germany
>     Phone: +49 251 8333081
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pEpkey.asc
Type: application/pgp-keys
Size: 2472 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20190412/f40f9f2b/attachment.bin>

From m@th|eu@r@jer|@on @end|ng |rom gm@||@com  Fri Apr 12 14:15:03 2019
From: m@th|eu@r@jer|@on @end|ng |rom gm@||@com (Mathieu Rajerison)
Date: Fri, 12 Apr 2019 14:15:03 +0200
Subject: [R-sig-Geo] "g.list" in rgrass7 returns an integer and not a char.
 vector
Message-ID: <CAGfc75=F9Y0un5qh0Yx_+Kk+UgnhxiMzxDKi==gLyadwp1Fd0g@mail.gmail.com>

Hi List,

I try to get the list of rasters which are in my working environment but
the result of execGRASS("g.list") is an integer, not a character vector

Why is that ?

> execGRASS("g.list", type="raster", pattern="global*") %>% class()
global_glob_rad_day1
global_glob_rad_day2
global_glob_rad_day3
[1] "integer"

How to get a list of my rasters as a character ?

Thaks in advance for any guidance,

Mathieu

here is my sessionInfo() :
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows >= 8 x64 (build 9200)

Matrix products: default

locale:
[1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252
LC_MONETARY=French_France.1252 LC_NUMERIC=C
[5] LC_TIME=French_France.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
 [1] bindrcpp_0.2.2     rgrass7_0.1-12     XML_3.98-1.16
gdalUtils_2.0.1.14 forcats_0.3.0      stringr_1.3.1      dplyr_0.7.6
 [8] purrr_0.2.5        readr_1.1.1        tidyr_0.8.1        tibble_1.4.2
     ggplot2_3.0.0      tidyverse_1.2.1    raster_2.6-7
[15] sp_1.3-1           sf_0.6-3

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.17      lubridate_1.7.4   lattice_0.20-35   class_7.3-14
  assertthat_0.2.0  psych_1.8.4       foreach_1.4.4
 [8] R6_2.2.2          cellranger_1.1.0  plyr_1.8.4        e1071_1.6-8
 httr_1.3.1        pillar_1.2.3      rlang_0.2.1
[15] lazyeval_0.2.1    readxl_1.1.0      rstudioapi_0.7    R.utils_2.6.0
 R.oo_1.22.0       rgdal_1.3-3       foreign_0.8-70
[22] munsell_0.5.0     broom_0.4.5       compiler_3.5.1    modelr_0.1.2
  pkgconfig_2.0.1   mnormt_1.5-5      tidyselect_0.2.4
[29] codetools_0.2-15  crayon_1.3.4      withr_2.1.2
 R.methodsS3_1.7.1 grid_3.5.1        nlme_3.1-137      spData_0.2.9.0
[36] jsonlite_1.5      gtable_0.2.0      DBI_1.0.0         magrittr_1.5
  units_0.6-0       scales_0.5.0      cli_1.0.0
[43] stringi_1.1.7     reshape2_1.4.3    xml2_1.2.0
iterators_1.0.10  tools_3.5.1       glue_1.2.0        hms_0.4.2
[50] parallel_3.5.1    yaml_2.1.19       colorspace_1.3-2  classInt_0.2-3
  rvest_0.3.2       bindr_0.1.1       haven_1.1.2

	[[alternative HTML version deleted]]


From t@v|b@r @end|ng |rom gm@||@com  Fri Apr 12 15:04:54 2019
From: t@v|b@r @end|ng |rom gm@||@com (Micha Silver)
Date: Fri, 12 Apr 2019 16:04:54 +0300
Subject: [R-sig-Geo] 
 "g.list" in rgrass7 returns an integer and not a char. vector
In-Reply-To: <CAGfc75=F9Y0un5qh0Yx_+Kk+UgnhxiMzxDKi==gLyadwp1Fd0g@mail.gmail.com>
References: <CAGfc75=F9Y0un5qh0Yx_+Kk+UgnhxiMzxDKi==gLyadwp1Fd0g@mail.gmail.com>
Message-ID: <755c6034-4d09-7028-87e1-c30aa108797c@gmail.com>

An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20190412/43ec43a8/attachment.html>

From m@th|eu@r@jer|@on @end|ng |rom gm@||@com  Fri Apr 12 15:23:38 2019
From: m@th|eu@r@jer|@on @end|ng |rom gm@||@com (Mathieu Rajerison)
Date: Fri, 12 Apr 2019 15:23:38 +0200
Subject: [R-sig-Geo] 
 "g.list" in rgrass7 returns an integer and not a char. vector
In-Reply-To: <755c6034-4d09-7028-87e1-c30aa108797c@gmail.com>
References: <CAGfc75=F9Y0un5qh0Yx_+Kk+UgnhxiMzxDKi==gLyadwp1Fd0g@mail.gmail.com>
 <755c6034-4d09-7028-87e1-c30aa108797c@gmail.com>
Message-ID: <CAGfc75msKSvqBFKwLQbmFGBEMe1CothBnyrVjFL0a7ApjaV1Xw@mail.gmail.com>

Thanks a lot !

Le ven. 12 avr. 2019 ? 15:05, Micha Silver <tsvibar at gmail.com> a ?crit :

>
> On 12/04/2019 15:15, Mathieu Rajerison wrote:
>
> Hi List,
>
> I try to get the list of rasters which are in my working environment but
> the result of execGRASS("g.list") is an integer, not a character vector
>
> Why is that ?
>
>
> execGRASS("g.list", type="raster", pattern="global*") %>% class()
>
> global_glob_rad_day1
> global_glob_rad_day2
> global_glob_rad_day3
> [1] "integer"
>
> How to get a list of my rasters as a character ?
>
>
> Adding intern=TRUE to the execGRASS command works for me:
>
>
> > execGRASS("g.list", type="rast", pattern="meron*", intern=TRUE) %>% class
> [1] "character"
>
>
> --
> Micha Silver
> Ben Gurion Univ.
> Sde Boker, Remote Sensing Lab
> cell: +972-523-665918
>
>

	[[alternative HTML version deleted]]


From r@i@1290 m@iii@g oii @im@com  Fri Apr 12 18:39:42 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Fri, 12 Apr 2019 16:39:42 +0000 (UTC)
Subject: [R-sig-Geo] [R] Creating a mean line plot
In-Reply-To: <CAGgJW766s7r3NxpScyhJfkRF6tdAutnOzDEHEUrfVY8rE76dxA@mail.gmail.com>
References: <958032223.2037452.1555019858964.ref@mail.yahoo.com>
 <958032223.2037452.1555019858964@mail.yahoo.com>
 <CAGgJW766s7r3NxpScyhJfkRF6tdAutnOzDEHEUrfVY8rE76dxA@mail.gmail.com>
Message-ID: <683389861.330190.1555087182209@mail.yahoo.com>

Hi Eric,

Ah, I apologize, and thank you for your response!?
I just figured out a way to average my x-values, so at least that is solved. I will still include the data for the two variables (1-dimensional) of interest that I was trying to average, just to show what was done:
get2.teratons #(90 values)
get5.teratons #(90 values)
Here is what get2.teratons looks like (same idea for get5.teratons):
? ? >print(get2.teratons)
??? [1] 0.4558545 0.4651129 0.4747509 0.4848242 0.4950900 0.5056109 0.5159335? 
??? 0.5262532 0.5372275 0.5481839 0.5586787 0.5694379 0.5802970
??? [14] 0.5909211 0.6015753 0.6124256 0.6237733 0.6353634 0.6467227 0.6582857 
??? 0.6702509 0.6817027 0.6935311 0.7060161 0.7182312 0.7301909
??? [27] 0.7422574 0.7544744 0.7665907 0.7786409 0.7907518 0.8032732 0.8158733 
??? 0.8284363 0.8413905 0.8545881 0.8674711 0.8797701 0.8927392
??? [40] 0.9059937 0.9189707 0.9317215 0.9438155 0.9558035 0.9673665 0.9784927 
??? 0.9900898 1.0020388 1.0132683 1.0240023 1.0347708 1.0456077
??? [53] 1.0570347 1.0682903 1.0793535 1.0901511 1.1001753 1.1101276 1.1199142 
??? 1.1293237 1.1384669 1.1470002 1.1547341 1.1622488 1.1697549
??? [66] 1.1777542 1.1857587 1.1930233 1.1999645 1.2067172 1.2132979 1.2199317?? 
??? 1.2265673 1.2328599 1.2390689 1.2446050 1.2495579 1.2546455
??? [79] 1.2599212 1.2648733 1.2700068 1.2753889 1.2807509 1.2856922 1.2905927 
??? 1.2953338 1.3000484 1.3045992 1.3091128 1.3144190?
The following worked in terms of averaging all of the elements of get2.teratons and get5.teratons:
rowMeans(cbind(get2.teratons,get5.teratons))
However, I am trying to do something similar for the values on my y-axis. So, for now, here are the two variables (3-dimensional) that I would like to average:
? ? subset? 
??? subset5
Using the print function for "subset" (same idea for subset5):? ??>print(subset)
??? class?????? : RasterStack 
??? dimensions? : 64, 128, 8192, 90? (nrow, ncol, ncell, nlayers)
??? resolution? : 2.8125, 2.789327? (x, y)
??? extent????? : -181.4062, 178.5938, -89.25846, 89.25846? (xmin, xmax, ymin,? 
??? ymax)
??? coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
??? names?????? : X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14,? 
??? X15, ... ? ??>dim(subset)
??? [1]? 64 128? 90>dim(subset5)
??? [1]? 64 128? 90
I tried `mean(subset,subset5)`, which works, BUT it combines the 90 layers into 1 layer. I want keep the number of layers at 90, but simply average each of the grid cell values of "subset" and "subset5" for each layer. So, for instance, I want to average the values of each grid cell of layer 1 of "subset" with the values of each grid cell of layer 1 of "subset5", and then average those values of layer 2 of "subset" with those values of layer 2 of "subset5"......all the way to layer 90. That way, I have 90 averages across all grid cells.
Here is what the data looks like for "subset":
>dput(head(subset,5))
??? structure(c(11.5447145886719, 11.2479725852609, 10.0223480723798, 
??? 11.4909216295928, 12.5930442474782, 15.0295264553279, 14.6107862703502, 
??? 13.3623332250863, 10.4473929153755, 13.262210553512, 13.3166334126145, 
??? 13.7211008928716, 10.594900790602, 11.7217378690839, 10.8397546224296, 
??? 14.2727348953485, 13.6185416020453, 12.7485566306859, 11.7246472276747, 
??? 10.6815265025944, 13.1605062168092, 12.9131189547479, 12.6493454910815, 
??? 11.6938022430986, 11.4522186107934, 8.84930260945112, 11.5785481408238, 
??? 12.9859233275056, 13.6702361516654, 11.863912967965, 11.6624090820551, 
??? 12.1465771459043, 12.9789240192622, 13.5916746687144, 15.0383287109435, 
??? 7.89674604311585, 8.14079332631081, 7.05628590658307, 6.99759456329048, 
??? 8.06435288395733, 8.00622920505702, 7.35754533670843, 6.57949370797724, 
??? 6.26998774241656, 6.10911303665489, 10.1576759945601, 9.83650996349752, 
??? 10.6277788057923, 10.3647025069222, 9.38627037685364, 28.411143925041, 
??? 27.3436004295945, 25.7670222781599, 24.1854049265385, 22.7183715440333, 
??? 10.8529561199248, 11.1584928352386, 11.4545458462089, 11.7570801638067, 
??? 11.6314635146409, 13.7268429156393, 12.4547378160059, 12.8433785866946, 
??? 10.282119596377, 9.66278391424567, 6.39572446234524, 8.4569685626775, 
??? 12.253624945879, 12.4784250743687, 13.6823802720755, 8.65540341474116, 
??? 8.34308553021401, 8.30261853989214, 7.9798299819231, 7.96007991302758, 
??? 13.3976918645203, 15.2056947816163, 15.3097502421588, 18.0296610575169, 
??? 17.918016621843, 14.121591579169, 14.3091559410095, 14.7470911033452, 
??? 15.414851764217, 15.8059203531593, 22.9126498103142, 21.5608592145145, 
??? 19.7303873486817, 17.5689237657934, 15.4688697773963, 10.2526041911915, 
??? 10.4463449679315, 9.85705149360001, 9.5394266070798, 9.17961853556335, 
??? 14.064371259883, 12.626935634762, 12.1540617663413, 10.9235350973904, 
??? 9.32216013316065, 12.3676003888249, 12.9718807060272, 14.5685050170869, 
??? 13.8497828040272, 14.0683455392718, 8.09576804749668, 8.54510050266981, 
??? 8.02388715092093, 8.6679536383599, 9.38348234631121, 11.6279292851686, 
??? 11.5998465567827, 11.6469369269907, 11.6286710835993, 10.8152111526579, 
??? 17.4072104506195, 18.9169261604548, 19.5168524980545, 19.0377978142351, 
??? 19.5594304706901, 9.74474258255213, 10.2144323755056, 10.9722976572812, 
??? 11.5369332488626, 12.0274581480771, 14.007618650794, 14.0536692459136, 
??? 14.4861201290041, 14.133819937706, 13.045089924708, 19.9330265633762, 
??? 20.3158976510167, 21.4452845044434, 19.9475897010416, 20.3566399868578, 
??? 15.703826257959, 14.8260951507837, 14.6203982178122, 14.0476305037737, 
??? 13.2086589932442, 6.5044054761529, 6.51829722337425, 6.59741191193461, 
??? 6.57343484926969, 7.07112564705312, 8.42645864468068, 9.15604883339256, 
??? 10.8542435802519, 8.57339131180197, 7.89698304142803, 10.6029914226383, 
??? 9.90388663485646, 8.46301421988755, 12.9162973724306, 9.06370310112834, 
??? 9.92726711556315, 11.5754703059793, 8.74886247329414, 8.99941809475422, 
??? 9.90840594749898, 11.1468604300171, 11.1322306562215, 10.49438144546, 
??? 9.50155213940889, 8.31737467087805, 5.76932597905397, 6.14411209244281, 
??? 7.39980584476143, 8.47632132936269, 8.00714262295514, 8.64454926922917, 
??? 7.79559868387878, 7.14818593114614, 7.42282171268016, 9.04718739911914, 
??? 12.0141573250294, 11.0411503817886, 11.7892528418452, 11.2668004352599, 
??? 10.5345542309806, 14.2355003859848, 12.4114783946425, 13.1144292186946, 
??? 14.3049817532301, 14.7282858844846, 9.90791183430701, 10.4058899218217, 
??? 12.0624131988734, 13.2521220948547, 13.9345653355122, 12.5256763771176, 
??? 12.3285478446633, 11.9927407242358, 11.6441268939525, 11.6448875516653, 
??? 30.5602320469916, 30.6964941322803, 27.3358505219221, 27.5474566966295, 
??? 24.3847575969994, 15.1250814087689, 15.0272130500525, 14.9795342702419, 
??? 14.2658210825175, 13.437497522682, 10.7001833617687, 10.0823557935655, 
??? 10.1298170629889, 9.99525294173509, 10.6919908896089, 9.04134479351342, 
??? 9.57930330187082, 9.58402880933136, 8.82056106347591, 9.06912200152874, 
??? 11.0435656271875, 12.827942892909, 14.6962288767099, 15.984565531835, 
??? 16.3673574104905, 17.7882182411849, 17.1887206379324, 16.4347139652818, 
??? 15.4833788517863, 14.3649869598448, 10.0324214436114, 10.9937381464988, 
??? 10.7803415972739, 10.64134365879, 10.3700830601156, 10.7242427766323, 
??? 10.1225153775886, 9.59254063200206, 9.67734202276915, 9.9705743137747, 
??? 6.15209711249918, 7.6417050557211, 9.55170588567853, 12.123644258827, 
??? 14.6793850231916, 13.8236853294075, 14.3564789090306, 13.6828002054244, 
??? 13.0476749036461, 12.3909330926836, 12.5938401091844, 12.5098232645541, 
??? 12.4792913440615, 10.5595408938825, 10.0890464382246, 9.20089432038367, 
??? 8.92592284362763, 8.59467086847872, 9.42603517323732, 10.0353622343391, 
??? 11.7311725392938, 12.4379832297564, 12.9343897104263, 12.9055073484778, 
??? 10.8944955747575, 13.6480727232993, 13.5285727679729, 13.1794585380703, 
??? 12.8222310449928, 12.3997843824327, 12.7413347829133, 14.3273916095495, 
??? 17.3931313678622, 18.2263168506324, 18.5841742437333, 6.59096706658602, 
??? 6.43405092414469, 6.25825286842883, 6.41100551001728, 6.47397979628295, 
??? 10.5375754879788, 11.7441980168223, 12.6210678834468, 13.6038213036954, 
??? 14.3639346119016, 14.6688716020435, 14.1826340463012, 15.2044224087149, 
??? 15.5630568042397, 15.0458208750933, 10.0154311163351, 9.7418615128845, 
??? 11.8866622913629, 10.4000290855765, 9.74880487192422, 12.071524746716, 
??? 11.5644979756325, 11.0723461490124, 10.6282578315586, 10.2157085202634, 
??? 14.5142644643784, 12.1188929770142, 12.3748247511685, 12.4087903182954, 
??? 11.9534945581108, 9.04913682024926, 10.3765605948865, 11.6044067312032, 
??? 11.8693192955106, 11.4852412138134, 9.60276927798986, 8.47671863157302, 
??? 6.53922976925969, 6.61022553686053, 6.93009907845408, 13.2296028546989, 
??? 13.0423339549452, 13.0597360432148, 12.6910961698741, 12.4157820828259, 
??? 10.1926731644198, 8.71818219311535, 7.08254557102919, 8.77621911931783, 
??? 10.0059285527095, 12.931788386777, 12.2630294412374, 11.4822425879538, 
??? 10.4378029704094, 9.7940765786916, 13.0133786704391, 11.9061049539596, 
??? 12.0638377033174, 12.3013137839735, 12.9490484017879, 13.2149957120419, 
??? 13.1087802350521, 12.6286820042878, 12.2278920840472, 11.8682594038546, 
??? 10.9492189250886, 12.2341319918633, 12.9464382771403, 12.5120461452752, 
??? 12.5263502821326, 12.6686599105597, 12.7322974149138, 12.1948833111674, 
??? 12.1215357910842, 11.9392029941082, 15.2677292469889, 16.3731585256755, 
??? 17.8960581310093, 18.6334447469562, 19.5818214677274, 8.80653981585056, 
??? 9.830889897421, 9.35642933472991, 8.49255602806807, 9.19627505354583, 
??? 9.56638909410685, 10.4608207242563, 11.0053240321577, 12.0839668437839, 
??? 12.6748947892338, 10.9087632503361, 11.0474556684494, 9.86553691327572, 
??? 11.7183218244463, 12.5948534812778, 9.51134513597935, 7.67265690956265, 
??? 8.47005187533796, 8.948102616705, 9.48919930960983, 8.92916852608323, 
??? 9.19180226046592, 9.93818349670619, 10.3347131051123, 9.19244724791497, 
??? 16.0914938896894, 16.6821955237538, 17.9938221350312, 19.0754321403801, 
??? 19.048942392692, 8.59134346246719, 8.39548541698605, 8.17942153662443, 
??? 8.02843223791569, 8.9953287737444, 7.97593365423381, 7.71139136049896, 
??? 7.85907462704927, 8.38070099707693, 9.28482818417251, 11.3056178670377, 
??? 11.601750086993, 11.2711317837238, 10.8186058234423, 10.7581429649144, 
??? 15.6826636288315, 16.9076268095523, 15.4331855010241, 15.1698420289904, 
??? 14.4226460717618, 11.3487603608519, 10.932231741026, 10.3945284616202, 
??? 9.96728525497019, 9.48596934322268, 10.508708213456, 10.0394641282037, 
??? 10.5090778553858, 10.1252990076318, 9.86525025218725, 21.985590364784, 
??? 22.3454732447863, 22.693102620542, 22.8635905310512, 23.2176823541522, 
??? 18.6908649746329, 16.1407203879207, 14.8633007425815, 13.0084274802357, 
??? 10.3990704054013, 6.98735397309065, 6.87530469149351, 8.9313744334504, 
??? 7.93048026971519, 8.05362006649375, 7.19595712143928, 6.09859018586576, 
??? 7.31170470826328, 8.58990701381117, 8.4448722191155, 10.6643167790025, 
??? 10.839969618246, 10.5106293456629, 10.4457534151152, 11.2185546196997, 
??? 12.6707960385829, 12.9902018699795, 12.9533659201115, 12.501154281199, 
??? 12.3501065187156, 25.9615670889616, 28.099115844816, 30.2258117124438, 
??? 32.2391155175865, 34.1092220507562, 13.0570391658694, 14.2825467512012, 
??? 11.1714780796319, 9.62660552468151, 13.1034480873495, 12.0462608523667, 
??? 12.1476030908525, 12.087664520368, 12.486698012799, 12.6554797869176, 
??? 12.9096878226846, 13.7426960282028, 15.2569429948926, 17.1046711038798, 
??? 17.0782153028995, 8.75586932525039, 8.82860643323511, 8.69223182089627, 
??? 9.15108947083354, 9.4462743261829, 8.55356580577791, 8.69411900639534, 
??? 8.9102350641042, 9.00506707839668, 8.75238287262619, 12.8364848904312, 
??? 14.6456281654537, 13.9498212374747, 14.5683591719717, 14.3893217202276, 
??? 15.1805742178112, 16.7262759525329, 17.7521643228829, 18.5243777465075, 
??? 18.8792126253247, 7.70680792629719, 7.47225251980126, 7.72799758706242, 
??? 7.68415729980916, 7.50800217501819, 9.68811193015426, 10.5253741610795, 
??? 10.922572016716, 10.9020531177521, 10.406608460471, 22.1927281469107, 
??? 21.7946967110038, 22.5350291468203, 22.0015277154744, 23.2784972526133, 
??? 25.1319196075201, 24.1645314730704, 23.0207713320851, 14.8746414575726, 
??? 12.5255933962762, 19.3960575386882, 19.3368871696293, 19.8454126249999, 
??? 19.8410699609667, 19.8172997217625, 12.1799279004335, 11.8857935070992, 
??? 11.4909932948649, 11.3612791523337, 10.8840802218765, 11.1973982769996, 
??? 11.6429010406137, 11.2867686431855, 11.5507948212326, 11.7122428491712, 
??? 13.8513946440071, 14.9497504346073, 14.425096521154, 13.2822252810001, 
??? 12.4311964027584, 18.864199379459, 17.5528808031231, 17.7616731729358, 
??? 17.1655979007483, 16.6251927148551, 29.3679255992174, 28.4771841019392, 
??? 27.9151875525713, 26.65377818048, 25.2528126351535, 10.6545137241483, 
??? 10.91169398278, 11.0310669522732, 11.1646522767842, 11.2674177624285, 
??? 13.7821182142943, 14.1553220339119, 15.0969068985432, 15.9642276819795, 
??? 16.6291657369584, 9.4556876225397, 9.84383365139365, 11.0380863770843, 
??? 10.6556000187993, 11.1149505246431, 8.38961955159903, 9.4479993218556, 
??? 10.1951210992411, 10.6412279885262, 10.8386783860624, 8.28430177643895, 
??? 8.50012865848839, 8.0173090333119, 8.15484160557389, 8.07647814508528, 
??? 10.3200965328142, 10.4913098970428, 10.3476996067911, 10.6061836704612, 
??? 12.1657092589885, 10.3872286621481, 9.38602960668504, 9.82730537652969, 
??? 9.79454554617405, 9.12395850755274, 12.1763132046908, 12.7074157353491, 
??? 12.6221365761012, 13.4234247263521, 15.5103187076747, 9.88674920517951, 
??? 9.41792191006243, 8.58000149019063, 7.98727499786764, 7.34257609583437, 
??? 13.8378750532866, 14.5356948953122, 14.5302697084844, 14.6059796679765, 
??? 14.1489790286869, 14.9558734148741, 15.146628767252, 15.4630133416504, 
??? 15.5585858970881, 15.4571908526123, 11.8359496816993, 11.2020426895469, 
??? 11.4698356948793, 11.8119870778173, 13.0321650300175, 17.7426278125495, 
??? 18.6734465416521, 18.8405636698008, 18.8715255819261, 18.9619445241988, 
??? 8.8628712343052, 8.674994437024, 9.01558804325759, 9.04601749498397, 
??? 8.85597188025713, 7.58305897470564, 7.92995095252991, 8.35649385116994, 
??? 9.23873609863222, 9.14969765581191, 12.9726023878902, 12.2728526126593, 
??? 13.0261426325887, 12.6654123421758, 11.5908016450703, 13.0077322013676, 
??? 12.6599280629307, 11.9994106236845, 10.1917257998139, 9.89739338401705, 
??? 10.7914459425956, 11.8336362764239, 11.7934257723391, 11.2242249771953, 
??? 11.4056261256337, 7.95377462636679, 7.26088020019233, 7.43080170359462, 
??? 7.50569254159927, 7.62218066956848, 11.2671461887658, 10.8180299866945, 
??? 9.43983325269073, 9.29652785416692, 10.826626047492, 14.3595944624394, 
??? 13.2217460777611, 12.7365244086832, 12.05212357454, 12.3027219437063, 
??? 13.1963438820094, 12.8045422956347, 13.7076315935701, 14.145736489445, 
??? 14.4983648322523, 14.3930621445179, 13.7241447810084, 13.0053710192442, 
??? 12.2289746068418, 11.4307265728712, 22.3180065862834, 17.3237380106002, 
??? 12.7182623371482, 13.0704908631742, 15.2839343994856, 11.1243085004389, 
??? 10.2472041500732, 10.5197993572801, 11.790946405381, 10.6045705731958, 
??? 15.1506495662034, 17.2426456119865, 18.0581725202501, 17.5418430939317, 
??? 16.011631116271, 16.6771751828492, 14.9888406973332, 14.0024574939162, 
??? 12.2754199896008, 10.462130815722, 14.700809167698, 14.7662508767098, 
??? 14.6368321962655, 13.8920741155744, 13.6426123324782, 7.52487180288881, 
??? 6.8714844295755, 7.11258086375892, 7.18187426682562, 7.26737848017365, 
??? 8.01721725147218, 9.51534896157682, 9.49199174065143, 9.66430208645761, 
??? 9.95999739971012, 12.6632636412978, 12.3405989259481, 12.1739520225674, 
??? 11.8746338412166, 11.4930238109082, 17.375064175576, 16.5855303872377, 
??? 14.6908791270107, 12.4465051107109, 10.6631374452263, 9.17110545560718, 
??? 8.15483720507473, 8.49230268504471, 9.13922635372728, 9.57141006365418, 
??? 16.033780714497, 17.3399481922388, 16.4341507013887, 15.3515323530883, 
??? 14.7840439807624, 18.8009101431817, 19.3318882025778, 20.5749990418553, 
??? 21.8101386912167, 21.9960610382259, 18.0659588892013, 17.8131891880184, 
??? 17.4943805672228, 17.3403216060251, 16.8955769855529, 12.620489532128, 
??? 12.2214950155467, 11.8860110174865, 11.3811555784196, 10.8314753975719, 
??? 13.4036011062562, 11.5633060690016, 11.6371187847108, 12.5311543699354, 
??? 13.4179203305393, 8.22134572081268, 7.50831649638712, 7.27005901280791, 
??? 7.60287002194673, 7.99200239125639, 7.90263516828418, 8.68863912764937, 
??? 10.4649641085416, 14.8291767574847, 13.2854715920985, 14.6683146245778, 
??? 15.3950218576938, 16.1753460299224, 18.3709637727588, 18.7799926847219, 
??? 9.85975402873009, 11.3263857085258, 14.0980262774974, 14.9891349021345, 
??? 15.565140126273, 17.7682626061141, 17.6397152245045, 18.1632375810295, 
??? 18.5020068660378, 18.6178280040622, 13.9469483401626, 13.3572864811867, 
??? 13.7237298768014, 15.0745737366378, 13.0753238685429, 7.80682750046253, 
??? 8.02811540197581, 8.54396957438439, 8.93615526147187, 9.23284823074937, 
??? 11.9208830874413, 11.34336409159, 9.64633170515299, 9.77506830822676, 
??? 9.60444209631532, 13.3866403251886, 13.6259520426393, 11.5198655985296, 
??? 10.6700826901942, 9.85463059041649, 16.529045579955, 14.2629016656429, 
??? 12.7639583777636, 13.6573225725442, 15.0617569684982, 9.50025964993984, 
??? 9.68771148473024, 9.27095026709139, 9.30016769561917, 9.69172285404056, 
??? 7.99956496339291, 7.4167326791212, 7.22712711431086, 8.56165643781424, 
??? 9.04990502167493, 16.1096038296819, 15.6424694694579, 16.1224633455276, 
??? 15.2468092739582, 15.2601830195636, 14.6924834232777, 15.2172856964171, 
??? 15.6576700508595, 15.8558295574039, 15.6930990982801, 10.0672576809302, 
??? 10.4989007581025, 10.7346505858004, 10.9321122989058, 10.1002658251673, 
??? 7.57602006196976, 8.28179977834225, 9.00425424333662, 8.75011347234249, 
??? 9.78429929818958, 8.22318575810641, 7.62580542359501, 7.52632019575685, 
??? 7.3945076437667, 8.00606575794518, 9.82791453134269, 10.3108039358631, 
??? 10.8194808941334, 11.0586643684655, 12.7866649534553, 16.4375944063067, 
??? 16.122004436329, 15.8343450631946, 15.183718688786, 14.59901179187, 
??? 13.086870778352, 13.8396339956671, 13.0286106839776, 12.6303931698203, 
??? 11.8594408035278, 12.4039673712105, 9.90002802573144, 9.60356576833874, 
??? 11.081666406244, 11.0487984493375, 15.9987502265722, 14.9749074596912, 
??? 13.8462209142745, 12.3910789377987, 11.7417626548558, 10.7962236274034, 
??? 11.77659323439, 11.0980827827007, 10.4603781597689, 10.4605271480978, 
??? 12.797769298777, 11.2864379771054, 9.58062659483403, 9.57864196971059, 
??? 9.7400170750916, 15.1035780552775, 15.3101249132305, 15.6179285142571, 
??? 14.4825984723866, 11.6881796624511, 11.791490809992, 11.2104086671025, 
??? 8.8539243908599, 8.34417999722064, 8.39954141993076, 9.41099112387747, 
??? 8.93235134426504, 9.60718737915158, 9.41101815551519, 9.83936337288469, 
??? 13.6638214811683, 14.4527215976268, 14.7365185897797, 13.2517122197896, 
??? 11.0009524505585, 9.60110148880631, 8.54964307509363, 8.75000974629074, 
??? 8.88564947526902, 7.84255138132721, 11.6202082950622, 12.075385870412, 
??? 12.8382677212358, 14.9491381365806, 20.0978868640959, 8.93126882147044, 
??? 9.09663643687963, 9.05409744009376, 8.98246862925589, 8.80278556142002, 
??? 8.68155935313553, 8.91096869017929, 7.71334832534194, 9.87222944386303, 
??? 11.2759735900909, 17.2249065712094, 17.9082475136966, 17.6210721954703, 
??? 16.7172310408205, 16.2506423424929, 12.9267014097422, 14.7103695664555, 
??? 19.504395313561, 22.4196153692901, 22.2453631460667, 8.23867111466825, 
??? 8.10000761412084, 7.8771845670417, 7.56322089582682, 7.14911003597081, 
??? 9.50618146453053, 8.6958515457809, 7.36113237217069, 6.79777669720352, 
??? 6.69330381788313), .Dim = c(10L, 90L), .Dimnames = list(NULL, 
??? c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X9", "X10", 
??? "X11", "X12", "X13", "X14", "X15", "X16", "X17", "X18", "X19", 
??? "X20", "X21", "X22", "X23", "X24", "X25", "X26", "X27", "X28", 
??? "X29", "X30", "X31", "X32", "X33", "X34", "X35", "X36", "X37", 
??? "X38", "X39", "X40", "X41", "X42", "X43", "X44", "X45", "X46", 
??? "X47", "X48", "X49", "X50", "X51", "X52", "X53", "X54", "X55", 
??? "X56", "X57", "X58", "X59", "X60", "X61", "X62", "X63", "X64", 
??? "X65", "X66", "X67", "X68", "X69", "X70", "X71", "X72", "X73", 
??? "X74", "X75", "X76", "X77", "X78", "X79", "X80", "X81", "X82", 
??? "X83", "X84", "X85", "X86", "X87", "X88", "X89", "X90")))

Is there any way to compute the means in this way? I just tried this, but I received the following error:
result <- rowMeans(cbind(c(subset), c(subset5)));dim(result) <- dim(subset);colnames(result) <- colnames(subset)

Error in rowMeans(cbind(c(subset), c(subset5))) : 'x' must be numeric

Thanks,
-----Original Message-----
From: Eric Berger <ericjberger at gmail.com>
To: rain1290 <rain1290 at aim.com>
Cc: r-sig-geo <r-sig-geo at r-project.org>; R mailing list <r-help at r-project.org>
Sent: Fri, Apr 12, 2019 11:47 am
Subject: Re: [R] Creating a mean line plot

I don't have your data. Are the x-values the same in both plots?Does this example cover the situation?
f1 <- function(x) { x^3 - 2 }f2 <- function(x) { 2 - x^2 }
xV <- seq(from=0,to=2,length=50)y1 <- f1(xV)y2 <- f2(xV)y3 <- .5*(y1+y2)plot(x=xV,y=y1,col="blue",lwd=2,type='l',xlab="x",ylab="y")lines(x=xV,y=y2,col="green",lwd=2)lines(x=xV,y=y3,col="red",lwd=2)legend("topleft",legend=c("y1","y2","mean"),col=c("blue","green","red"),lwd=rep(2,3))
? ? ? ?

On Fri, Apr 12, 2019 at 5:34 PM rain1290--- via R-help <r-help at r-project.org> wrote:

Hi there,
I am trying to create a mean line plot that shows the mean of a series of separate line plots that correspond to two climate models. Let's first try getting the mean of two line plots. To create the separate line plots, here is what I did to set up the x and y axis variables:

####Getting cumulative emissions data for x-axis: 1-dimensional ####

#For CanESM model#

ncfname <- "cumulative_emissions_1pctCO2.nc"
Model1 <- nc_open(ncfname)
get <- ncvar_get(Model1, "cum_co2_emi-CanESM2") ? ? #units of terratones of carbon (TtC) for x-axis (140 values)
#For IPSL LR Model#
#Getting cumulative emissions data for x-axis?IPSL LR 1pctCO2?IPSL <- ncvar_get(Model1, "cum_co2_emi-IPSL-CM5A-LR") ? ? #units of terratones of carbon (TtC) for x-axis (140 values)

############################################################################################################

#####Getting precipitation data for y-axis - these are 3-dimensional####

#For CanESM2 model#
Model2 <- brick("MaxPrecCCCMACanESM21pctCO2.nc", var="onedaymax")


#For IPSL LR Model#
Model10 <- brick("MaxPrecIPSLIPSL-CM5A-LR1pctCO2.nc", var="onedaymax")
#############################################################################################################
To create plots for a specific location:
lonlat <- cbind(103,3) ? ? ? ?? #specifies a specific longitude and latitude
Hope2 <- extract(Model2,lonlat) ? ?? #CanESM2
Hope6 <- extract(Model10,lonlat) ? #start IPSL CM5A LR
plot(get,Hope2, type="l",col="green", lwd="3", xlab="Cumulative CO2 emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="One-day maximum precipitation for random location for 1pctCO2 scenario")
lines(IPSL, Hope6, type="l", lwd="3", col="green")
#############################################################################################################
So, the idea would be to create a plot that shows the mean of these two plots. Given what I showed above, how should I go about creating the mean of these two green line plots? Would you have to get the mean of the x-values, and then obtain the mean of the y-values, and then plot these?
Thanks, and any help would be greatly appreciated!
? ? ? ? [[alternative HTML version deleted]]

______________________________________________
R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.


	[[alternative HTML version deleted]]


From m@rt@@m@ru||no @end|ng |rom gm@||@com  Fri Apr 12 19:16:30 2019
From: m@rt@@m@ru||no @end|ng |rom gm@||@com (Marta Rufino)
Date: Fri, 12 Apr 2019 18:16:30 +0100
Subject: [R-sig-Geo] tpk files
In-Reply-To: <CF511784783D0B52.e2054a8a-f497-4761-9841-266797efac89@mail.outlook.com>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
 <CANVKczNikJ8N2qb8+Uina6XvbOymde7NQGPbVxeCj58PqKQ3Mw@mail.gmail.com>
 <CAKSASLCPFYjc_WNpvsE3BUwJkxJ0mG2VuFnnVFrrL-p+73=H=Q@mail.gmail.com>
 <CF511784783D0B52.e2054a8a-f497-4761-9841-266797efac89@mail.outlook.com>
Message-ID: <CAKSASLBuRVdJSRv7PDD-HSqwwdVgxNf8K9Rcp_47iq=NQigE+A@mail.gmail.com>

Hi,

Thank you all very much!
This list is amazing.

Barry proposed a way to do it using "SQLite3" (which I did not knew) and
then kindly send me the top layer as a cvs file. After, it is ok to open it
directly, either as a raster or sf (points). I managed that alright.
If anyone else is interested, please send me an email I can forward his
code (with his permission, of course).
Edzer, I will try that on Monday with a pc with available space, although
my smaller experiences already gave error working in the Mac.

Once I manage, I will add it to the rpub file after (
https://rpubs.com/MRufino/485396).

Now, the next issue will be how to transform the huge world wide sf points
(that are actually 32 classes) into a 'multipolygons' sf. Maybe I should do
a new post with a reproducible example for this new challenge, if I don't
manage (tried st_cast to LINESTRING and POLYGON and rasterToPolygons but no
luck).

So, thank you once again,
Good weekend,
Cheers,
M.

	[[alternative HTML version deleted]]


From b@row||ng@on @end|ng |rom gm@||@com  Fri Apr 12 19:33:38 2019
From: b@row||ng@on @end|ng |rom gm@||@com (Barry Rowlingson)
Date: Fri, 12 Apr 2019 18:33:38 +0100
Subject: [R-sig-Geo] tpk files
In-Reply-To: <CAKSASLBuRVdJSRv7PDD-HSqwwdVgxNf8K9Rcp_47iq=NQigE+A@mail.gmail.com>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
 <CANVKczNikJ8N2qb8+Uina6XvbOymde7NQGPbVxeCj58PqKQ3Mw@mail.gmail.com>
 <CAKSASLCPFYjc_WNpvsE3BUwJkxJ0mG2VuFnnVFrrL-p+73=H=Q@mail.gmail.com>
 <CF511784783D0B52.e2054a8a-f497-4761-9841-266797efac89@mail.outlook.com>
 <CAKSASLBuRVdJSRv7PDD-HSqwwdVgxNf8K9Rcp_47iq=NQigE+A@mail.gmail.com>
Message-ID: <CANVKczOGfqfy9sjVZD-SNDNYtevGTXebTS0AoseszFYiTbB_bg@mail.gmail.com>

On Fri, Apr 12, 2019 at 6:16 PM Marta Rufino <marta.m.rufino at gmail.com>
wrote:

> Hi,
>
> Now, the next issue will be how to transform the huge world wide sf points
> (that are actually 32 classes) into a 'multipolygons' sf. Maybe I should do
> a new post with a reproducible example for this new challenge, if I don't
> manage (tried st_cast to LINESTRING and POLYGON and rasterToPolygons but no
> luck).
>
>
 You might be able to polygonize the raster version of the data using
rasterToPolygons (it returns sp class polygons but they can be converted).

...yup - starting with the raster I constructed previously:

takes a couple of minutes....

> rdpoly = rasterToPolygons(rdraster,dissolve=TRUE)
Loading required namespace: rgeos
> rdpoly
class       : SpatialPolygonsDataFrame
features    : 32
extent      : -180, 180, -78.5, 90  (xmin, xmax, ymin, ymax)
coord. ref. : NA
variables   : 1
names       : layer
min values  :     1
max values  :    32
> plot(rdpoly)
> spplot(rdpoly,"layer")

and you'll have to run it yourself to see the results!

 Feel free to share my SQL scripts and other bits of code.

Barry



> So, thank you once again,
> Good weekend,
> Cheers,
> M.
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From r@i@1290 m@iii@g oii @im@com  Sun Apr 14 16:58:04 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Sun, 14 Apr 2019 14:58:04 +0000 (UTC)
Subject: [R-sig-Geo] [R] Creating a mean line plot
References: <616207014.431705.1555253884395.ref@mail.yahoo.com>
Message-ID: <616207014.431705.1555253884395@mail.yahoo.com>

Hi Bill,

For the x-axis variable, in this case, indeed, I used rowMeans(cbind(get2.teratons, get5.teratons)). This averaged each value between these two 1-dimensional variables (i.e. value#1 of "get2.teratons" was averaged with value#1 of "get5.teratons" - this was done for all 90 values).?
To obtain the means for the values of the y-axis variables, which are 3-dimensional, I simply took each variable and divided by 2, in this case. Thus: (variableA+variableB)/2. This took the mean of the variable for each grid cell for each layer (90 layers). So, for grid cell #1, doing this averaged all 90 values corresponding to the 90 layers between the two variables. For example, the values of layer 1 of variableA and layer 1 of variableB were averaged (and then layer 2 with layer 2, and then layer 3 with layer 3.....all the way to layer 90 with layer 90. This method simultaneously did this for all 8192 grid cells (128 lines of longitude and 64 lines of latitude). At the end, I obtained 90 averages for each grid cell. :)
~Trav.~
-----Original Message-----
From: William Michels <wjm1 at caa.columbia.edu>
To: rain1290 <rain1290 at aim.com>
Cc: r-help <r-help at r-project.org>; r-sig-geo <r-sig-geo at r-project.org>
Sent: Sun, Apr 14, 2019 4:46 am
Subject: Re: [R] Creating a mean line plot

So you're saying rowMeans(cbind(matrix_a, matrix_b)) worked to obtain
your X-axis values?

Wild guess here, are you simply looking for:
colMeans(rbind(matrix_a, matrix_b)) to obtain your Y-axis values?

[Above assuming matrix_a and matrix_b have identical dimensions (nrow, ncol)].

--Bill

William Michels, Ph.D.


On Fri, Apr 12, 2019 at 11:09 AM rain1290--- via R-help






<r-help at r-project.org> wrote:
>
> Hi Eric,
>
> Ah, I apologize, and thank you for your response!
> I just figured out a way to average my x-values, so at least that is solved. I will still include the data for the two variables (1-dimensional) of interest that I was trying to average, just to show what was done:
> get2.teratons #(90 values)
> get5.teratons #(90 values)
> Here is what get2.teratons looks like (same idea for get5.teratons):
>? ? >print(get2.teratons)
>? ? [1] 0.4558545 0.4651129 0.4747509 0.4848242 0.4950900 0.5056109 0.5159335
>? ? 0.5262532 0.5372275 0.5481839 0.5586787 0.5694379 0.5802970
>? ? [14] 0.5909211 0.6015753 0.6124256 0.6237733 0.6353634 0.6467227 0.6582857
>? ? 0.6702509 0.6817027 0.6935311 0.7060161 0.7182312 0.7301909
>? ? [27] 0.7422574 0.7544744 0.7665907 0.7786409 0.7907518 0.8032732 0.8158733
>? ? 0.8284363 0.8413905 0.8545881 0.8674711 0.8797701 0.8927392
>? ? [40] 0.9059937 0.9189707 0.9317215 0.9438155 0.9558035 0.9673665 0.9784927
>? ? 0.9900898 1.0020388 1.0132683 1.0240023 1.0347708 1.0456077
>? ? [53] 1.0570347 1.0682903 1.0793535 1.0901511 1.1001753 1.1101276 1.1199142
>? ? 1.1293237 1.1384669 1.1470002 1.1547341 1.1622488 1.1697549
>? ? [66] 1.1777542 1.1857587 1.1930233 1.1999645 1.2067172 1.2132979 1.2199317
>? ? 1.2265673 1.2328599 1.2390689 1.2446050 1.2495579 1.2546455
>? ? [79] 1.2599212 1.2648733 1.2700068 1.2753889 1.2807509 1.2856922 1.2905927
>? ? 1.2953338 1.3000484 1.3045992 1.3091128 1.3144190
> The following worked in terms of averaging all of the elements of get2.teratons and get5.teratons:
> rowMeans(cbind(get2.teratons,get5.teratons))
> However, I am trying to do something similar for the values on my y-axis. So, for now, here are the two variables (3-dimensional) that I would like to average:
>? ? subset
>? ? subset5
> Using the print function for "subset" (same idea for subset5):? ? >print(subset)
>? ? class? ? ? : RasterStack
>? ? dimensions? : 64, 128, 8192, 90? (nrow, ncol, ncell, nlayers)
>? ? resolution? : 2.8125, 2.789327? (x, y)
>? ? extent? ? ? : -181.4062, 178.5938, -89.25846, 89.25846? (xmin, xmax, ymin,
>? ? ymax)
>? ? coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>? ? names? ? ? : X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14,
>? ? X15, ...? ? >dim(subset)
>? ? [1]? 64 128? 90>dim(subset5)
>? ? [1]? 64 128? 90
> I tried `mean(subset,subset5)`, which works, BUT it combines the 90 layers into 1 layer. I want keep the number of layers at 90, but simply average each of the grid cell values of "subset" and "subset5" for each layer. So, for instance, I want to average the values of each grid cell of layer 1 of "subset" with the values of each grid cell of layer 1 of "subset5", and then average those values of layer 2 of "subset" with those values of layer 2 of "subset5"......all the way to layer 90. That way, I have 90 averages across all grid cells.
> Here is what the data looks like for "subset":
> >dput(head(subset,5))
>? ? structure(c(11.5447145886719, 11.2479725852609, 10.0223480723798,
>? ? 11.4909216295928, 12.5930442474782, 15.0295264553279, 14.6107862703502,
>? ? 13.3623332250863, 10.4473929153755, 13.262210553512, 13.3166334126145,
>? ? 13.7211008928716, 10.594900790602, 11.7217378690839, 10.8397546224296,
>? ? 14.2727348953485, 13.6185416020453, 12.7485566306859, 11.7246472276747,
>? ? 10.6815265025944, 13.1605062168092, 12.9131189547479, 12.6493454910815,
>? ? 11.6938022430986, 11.4522186107934, 8.84930260945112, 11.5785481408238,
>? ? 12.9859233275056, 13.6702361516654, 11.863912967965, 11.6624090820551,
>? ? 12.1465771459043, 12.9789240192622, 13.5916746687144, 15.0383287109435,
>? ? 7.89674604311585, 8.14079332631081, 7.05628590658307, 6.99759456329048,
>? ? 8.06435288395733, 8.00622920505702, 7.35754533670843, 6.57949370797724,
>? ? 6.26998774241656, 6.10911303665489, 10.1576759945601, 9.83650996349752,
>? ? 10.6277788057923, 10.3647025069222, 9.38627037685364, 28.411143925041,
>? ? 27.3436004295945, 25.7670222781599, 24.1854049265385, 22.7183715440333,
>? ? 10.8529561199248, 11.1584928352386, 11.4545458462089, 11.7570801638067,
>? ? 11.6314635146409, 13.7268429156393, 12.4547378160059, 12.8433785866946,
>? ? 10.282119596377, 9.66278391424567, 6.39572446234524, 8.4569685626775,
>? ? 12.253624945879, 12.4784250743687, 13.6823802720755, 8.65540341474116,
>? ? 8.34308553021401, 8.30261853989214, 7.9798299819231, 7.96007991302758,
>? ? 13.3976918645203, 15.2056947816163, 15.3097502421588, 18.0296610575169,
>? ? 17.918016621843, 14.121591579169, 14.3091559410095, 14.7470911033452,
>? ? 15.414851764217, 15.8059203531593, 22.9126498103142, 21.5608592145145,
>? ? 19.7303873486817, 17.5689237657934, 15.4688697773963, 10.2526041911915,
>? ? 10.4463449679315, 9.85705149360001, 9.5394266070798, 9.17961853556335,
>? ? 14.064371259883, 12.626935634762, 12.1540617663413, 10.9235350973904,
>? ? 9.32216013316065, 12.3676003888249, 12.9718807060272, 14.5685050170869,
>? ? 13.8497828040272, 14.0683455392718, 8.09576804749668, 8.54510050266981,
>? ? 8.02388715092093, 8.6679536383599, 9.38348234631121, 11.6279292851686,
>? ? 11.5998465567827, 11.6469369269907, 11.6286710835993, 10.8152111526579,
>? ? 17.4072104506195, 18.9169261604548, 19.5168524980545, 19.0377978142351,
>? ? 19.5594304706901, 9.74474258255213, 10.2144323755056, 10.9722976572812,
>? ? 11.5369332488626, 12.0274581480771, 14.007618650794, 14.0536692459136,
>? ? 14.4861201290041, 14.133819937706, 13.045089924708, 19.9330265633762,
>? ? 20.3158976510167, 21.4452845044434, 19.9475897010416, 20.3566399868578,
>? ? 15.703826257959, 14.8260951507837, 14.6203982178122, 14.0476305037737,
>? ? 13.2086589932442, 6.5044054761529, 6.51829722337425, 6.59741191193461,
>? ? 6.57343484926969, 7.07112564705312, 8.42645864468068, 9.15604883339256,
>? ? 10.8542435802519, 8.57339131180197, 7.89698304142803, 10.6029914226383,
>? ? 9.90388663485646, 8.46301421988755, 12.9162973724306, 9.06370310112834,
>? ? 9.92726711556315, 11.5754703059793, 8.74886247329414, 8.99941809475422,
>? ? 9.90840594749898, 11.1468604300171, 11.1322306562215, 10.49438144546,
>? ? 9.50155213940889, 8.31737467087805, 5.76932597905397, 6.14411209244281,
>? ? 7.39980584476143, 8.47632132936269, 8.00714262295514, 8.64454926922917,
>? ? 7.79559868387878, 7.14818593114614, 7.42282171268016, 9.04718739911914,
>? ? 12.0141573250294, 11.0411503817886, 11.7892528418452, 11.2668004352599,
>? ? 10.5345542309806, 14.2355003859848, 12.4114783946425, 13.1144292186946,
>? ? 14.3049817532301, 14.7282858844846, 9.90791183430701, 10.4058899218217,
>? ? 12.0624131988734, 13.2521220948547, 13.9345653355122, 12.5256763771176,
>? ? 12.3285478446633, 11.9927407242358, 11.6441268939525, 11.6448875516653,
>? ? 30.5602320469916, 30.6964941322803, 27.3358505219221, 27.5474566966295,
>? ? 24.3847575969994, 15.1250814087689, 15.0272130500525, 14.9795342702419,
>? ? 14.2658210825175, 13.437497522682, 10.7001833617687, 10.0823557935655,
>? ? 10.1298170629889, 9.99525294173509, 10.6919908896089, 9.04134479351342,
>? ? 9.57930330187082, 9.58402880933136, 8.82056106347591, 9.06912200152874,
>? ? 11.0435656271875, 12.827942892909, 14.6962288767099, 15.984565531835,
>? ? 16.3673574104905, 17.7882182411849, 17.1887206379324, 16.4347139652818,
>? ? 15.4833788517863, 14.3649869598448, 10.0324214436114, 10.9937381464988,
>? ? 10.7803415972739, 10.64134365879, 10.3700830601156, 10.7242427766323,
>? ? 10.1225153775886, 9.59254063200206, 9.67734202276915, 9.9705743137747,
>? ? 6.15209711249918, 7.6417050557211, 9.55170588567853, 12.123644258827,
>? ? 14.6793850231916, 13.8236853294075, 14.3564789090306, 13.6828002054244,
>? ? 13.0476749036461, 12.3909330926836, 12.5938401091844, 12.5098232645541,
>? ? 12.4792913440615, 10.5595408938825, 10.0890464382246, 9.20089432038367,
>? ? 8.92592284362763, 8.59467086847872, 9.42603517323732, 10.0353622343391,
>? ? 11.7311725392938, 12.4379832297564, 12.9343897104263, 12.9055073484778,
>? ? 10.8944955747575, 13.6480727232993, 13.5285727679729, 13.1794585380703,
>? ? 12.8222310449928, 12.3997843824327, 12.7413347829133, 14.3273916095495,
>? ? 17.3931313678622, 18.2263168506324, 18.5841742437333, 6.59096706658602,
>? ? 6.43405092414469, 6.25825286842883, 6.41100551001728, 6.47397979628295,
>? ? 10.5375754879788, 11.7441980168223, 12.6210678834468, 13.6038213036954,
>? ? 14.3639346119016, 14.6688716020435, 14.1826340463012, 15.2044224087149,
>? ? 15.5630568042397, 15.0458208750933, 10.0154311163351, 9.7418615128845,
>? ? 11.8866622913629, 10.4000290855765, 9.74880487192422, 12.071524746716,
>? ? 11.5644979756325, 11.0723461490124, 10.6282578315586, 10.2157085202634,
>? ? 14.5142644643784, 12.1188929770142, 12.3748247511685, 12.4087903182954,
>? ? 11.9534945581108, 9.04913682024926, 10.3765605948865, 11.6044067312032,
>? ? 11.8693192955106, 11.4852412138134, 9.60276927798986, 8.47671863157302,
>? ? 6.53922976925969, 6.61022553686053, 6.93009907845408, 13.2296028546989,
>? ? 13.0423339549452, 13.0597360432148, 12.6910961698741, 12.4157820828259,
>? ? 10.1926731644198, 8.71818219311535, 7.08254557102919, 8.77621911931783,
>? ? 10.0059285527095, 12.931788386777, 12.2630294412374, 11.4822425879538,
>? ? 10.4378029704094, 9.7940765786916, 13.0133786704391, 11.9061049539596,
>? ? 12.0638377033174, 12.3013137839735, 12.9490484017879, 13.2149957120419,
>? ? 13.1087802350521, 12.6286820042878, 12.2278920840472, 11.8682594038546,
>? ? 10.9492189250886, 12.2341319918633, 12.9464382771403, 12.5120461452752,
>? ? 12.5263502821326, 12.6686599105597, 12.7322974149138, 12.1948833111674,
>? ? 12.1215357910842, 11.9392029941082, 15.2677292469889, 16.3731585256755,
>? ? 17.8960581310093, 18.6334447469562, 19.5818214677274, 8.80653981585056,
>? ? 9.830889897421, 9.35642933472991, 8.49255602806807, 9.19627505354583,
>? ? 9.56638909410685, 10.4608207242563, 11.0053240321577, 12.0839668437839,
>? ? 12.6748947892338, 10.9087632503361, 11.0474556684494, 9.86553691327572,
>? ? 11.7183218244463, 12.5948534812778, 9.51134513597935, 7.67265690956265,
>? ? 8.47005187533796, 8.948102616705, 9.48919930960983, 8.92916852608323,
>? ? 9.19180226046592, 9.93818349670619, 10.3347131051123, 9.19244724791497,
>? ? 16.0914938896894, 16.6821955237538, 17.9938221350312, 19.0754321403801,
>? ? 19.048942392692, 8.59134346246719, 8.39548541698605, 8.17942153662443,
>? ? 8.02843223791569, 8.9953287737444, 7.97593365423381, 7.71139136049896,
>? ? 7.85907462704927, 8.38070099707693, 9.28482818417251, 11.3056178670377,
>? ? 11.601750086993, 11.2711317837238, 10.8186058234423, 10.7581429649144,
>? ? 15.6826636288315, 16.9076268095523, 15.4331855010241, 15.1698420289904,
>? ? 14.4226460717618, 11.3487603608519, 10.932231741026, 10.3945284616202,
>? ? 9.96728525497019, 9.48596934322268, 10.508708213456, 10.0394641282037,
>? ? 10.5090778553858, 10.1252990076318, 9.86525025218725, 21.985590364784,
>? ? 22.3454732447863, 22.693102620542, 22.8635905310512, 23.2176823541522,
>? ? 18.6908649746329, 16.1407203879207, 14.8633007425815, 13.0084274802357,
>? ? 10.3990704054013, 6.98735397309065, 6.87530469149351, 8.9313744334504,
>? ? 7.93048026971519, 8.05362006649375, 7.19595712143928, 6.09859018586576,
>? ? 7.31170470826328, 8.58990701381117, 8.4448722191155, 10.6643167790025,
>? ? 10.839969618246, 10.5106293456629, 10.4457534151152, 11.2185546196997,
>? ? 12.6707960385829, 12.9902018699795, 12.9533659201115, 12.501154281199,
>? ? 12.3501065187156, 25.9615670889616, 28.099115844816, 30.2258117124438,
>? ? 32.2391155175865, 34.1092220507562, 13.0570391658694, 14.2825467512012,
>? ? 11.1714780796319, 9.62660552468151, 13.1034480873495, 12.0462608523667,
>? ? 12.1476030908525, 12.087664520368, 12.486698012799, 12.6554797869176,
>? ? 12.9096878226846, 13.7426960282028, 15.2569429948926, 17.1046711038798,
>? ? 17.0782153028995, 8.75586932525039, 8.82860643323511, 8.69223182089627,
>? ? 9.15108947083354, 9.4462743261829, 8.55356580577791, 8.69411900639534,
>? ? 8.9102350641042, 9.00506707839668, 8.75238287262619, 12.8364848904312,
>? ? 14.6456281654537, 13.9498212374747, 14.5683591719717, 14.3893217202276,
>? ? 15.1805742178112, 16.7262759525329, 17.7521643228829, 18.5243777465075,
>? ? 18.8792126253247, 7.70680792629719, 7.47225251980126, 7.72799758706242,
>? ? 7.68415729980916, 7.50800217501819, 9.68811193015426, 10.5253741610795,
>? ? 10.922572016716, 10.9020531177521, 10.406608460471, 22.1927281469107,
>? ? 21.7946967110038, 22.5350291468203, 22.0015277154744, 23.2784972526133,
>? ? 25.1319196075201, 24.1645314730704, 23.0207713320851, 14.8746414575726,
>? ? 12.5255933962762, 19.3960575386882, 19.3368871696293, 19.8454126249999,
>? ? 19.8410699609667, 19.8172997217625, 12.1799279004335, 11.8857935070992,
>? ? 11.4909932948649, 11.3612791523337, 10.8840802218765, 11.1973982769996,
>? ? 11.6429010406137, 11.2867686431855, 11.5507948212326, 11.7122428491712,
>? ? 13.8513946440071, 14.9497504346073, 14.425096521154, 13.2822252810001,
>? ? 12.4311964027584, 18.864199379459, 17.5528808031231, 17.7616731729358,
>? ? 17.1655979007483, 16.6251927148551, 29.3679255992174, 28.4771841019392,
>? ? 27.9151875525713, 26.65377818048, 25.2528126351535, 10.6545137241483,
>? ? 10.91169398278, 11.0310669522732, 11.1646522767842, 11.2674177624285,
>? ? 13.7821182142943, 14.1553220339119, 15.0969068985432, 15.9642276819795,
>? ? 16.6291657369584, 9.4556876225397, 9.84383365139365, 11.0380863770843,
>? ? 10.6556000187993, 11.1149505246431, 8.38961955159903, 9.4479993218556,
>? ? 10.1951210992411, 10.6412279885262, 10.8386783860624, 8.28430177643895,
>? ? 8.50012865848839, 8.0173090333119, 8.15484160557389, 8.07647814508528,
>? ? 10.3200965328142, 10.4913098970428, 10.3476996067911, 10.6061836704612,
>? ? 12.1657092589885, 10.3872286621481, 9.38602960668504, 9.82730537652969,
>? ? 9.79454554617405, 9.12395850755274, 12.1763132046908, 12.7074157353491,
>? ? 12.6221365761012, 13.4234247263521, 15.5103187076747, 9.88674920517951,
>? ? 9.41792191006243, 8.58000149019063, 7.98727499786764, 7.34257609583437,
>? ? 13.8378750532866, 14.5356948953122, 14.5302697084844, 14.6059796679765,
>? ? 14.1489790286869, 14.9558734148741, 15.146628767252, 15.4630133416504,
>? ? 15.5585858970881, 15.4571908526123, 11.8359496816993, 11.2020426895469,
>? ? 11.4698356948793, 11.8119870778173, 13.0321650300175, 17.7426278125495,
>? ? 18.6734465416521, 18.8405636698008, 18.8715255819261, 18.9619445241988,
>? ? 8.8628712343052, 8.674994437024, 9.01558804325759, 9.04601749498397,
>? ? 8.85597188025713, 7.58305897470564, 7.92995095252991, 8.35649385116994,
>? ? 9.23873609863222, 9.14969765581191, 12.9726023878902, 12.2728526126593,
>? ? 13.0261426325887, 12.6654123421758, 11.5908016450703, 13.0077322013676,
>? ? 12.6599280629307, 11.9994106236845, 10.1917257998139, 9.89739338401705,
>? ? 10.7914459425956, 11.8336362764239, 11.7934257723391, 11.2242249771953,
>? ? 11.4056261256337, 7.95377462636679, 7.26088020019233, 7.43080170359462,
>? ? 7.50569254159927, 7.62218066956848, 11.2671461887658, 10.8180299866945,
>? ? 9.43983325269073, 9.29652785416692, 10.826626047492, 14.3595944624394,
>? ? 13.2217460777611, 12.7365244086832, 12.05212357454, 12.3027219437063,
>? ? 13.1963438820094, 12.8045422956347, 13.7076315935701, 14.145736489445,
>? ? 14.4983648322523, 14.3930621445179, 13.7241447810084, 13.0053710192442,
>? ? 12.2289746068418, 11.4307265728712, 22.3180065862834, 17.3237380106002,
>? ? 12.7182623371482, 13.0704908631742, 15.2839343994856, 11.1243085004389,
>? ? 10.2472041500732, 10.5197993572801, 11.790946405381, 10.6045705731958,
>? ? 15.1506495662034, 17.2426456119865, 18.0581725202501, 17.5418430939317,
>? ? 16.011631116271, 16.6771751828492, 14.9888406973332, 14.0024574939162,
>? ? 12.2754199896008, 10.462130815722, 14.700809167698, 14.7662508767098,
>? ? 14.6368321962655, 13.8920741155744, 13.6426123324782, 7.52487180288881,
>? ? 6.8714844295755, 7.11258086375892, 7.18187426682562, 7.26737848017365,
>? ? 8.01721725147218, 9.51534896157682, 9.49199174065143, 9.66430208645761,
>? ? 9.95999739971012, 12.6632636412978, 12.3405989259481, 12.1739520225674,
>? ? 11.8746338412166, 11.4930238109082, 17.375064175576, 16.5855303872377,
>? ? 14.6908791270107, 12.4465051107109, 10.6631374452263, 9.17110545560718,
>? ? 8.15483720507473, 8.49230268504471, 9.13922635372728, 9.57141006365418,
>? ? 16.033780714497, 17.3399481922388, 16.4341507013887, 15.3515323530883,
>? ? 14.7840439807624, 18.8009101431817, 19.3318882025778, 20.5749990418553,
>? ? 21.8101386912167, 21.9960610382259, 18.0659588892013, 17.8131891880184,
>? ? 17.4943805672228, 17.3403216060251, 16.8955769855529, 12.620489532128,
>? ? 12.2214950155467, 11.8860110174865, 11.3811555784196, 10.8314753975719,
>? ? 13.4036011062562, 11.5633060690016, 11.6371187847108, 12.5311543699354,
>? ? 13.4179203305393, 8.22134572081268, 7.50831649638712, 7.27005901280791,
>? ? 7.60287002194673, 7.99200239125639, 7.90263516828418, 8.68863912764937,
>? ? 10.4649641085416, 14.8291767574847, 13.2854715920985, 14.6683146245778,
>? ? 15.3950218576938, 16.1753460299224, 18.3709637727588, 18.7799926847219,
>? ? 9.85975402873009, 11.3263857085258, 14.0980262774974, 14.9891349021345,
>? ? 15.565140126273, 17.7682626061141, 17.6397152245045, 18.1632375810295,
>? ? 18.5020068660378, 18.6178280040622, 13.9469483401626, 13.3572864811867,
>? ? 13.7237298768014, 15.0745737366378, 13.0753238685429, 7.80682750046253,
>? ? 8.02811540197581, 8.54396957438439, 8.93615526147187, 9.23284823074937,
>? ? 11.9208830874413, 11.34336409159, 9.64633170515299, 9.77506830822676,
>? ? 9.60444209631532, 13.3866403251886, 13.6259520426393, 11.5198655985296,
>? ? 10.6700826901942, 9.85463059041649, 16.529045579955, 14.2629016656429,
>? ? 12.7639583777636, 13.6573225725442, 15.0617569684982, 9.50025964993984,
>? ? 9.68771148473024, 9.27095026709139, 9.30016769561917, 9.69172285404056,
>? ? 7.99956496339291, 7.4167326791212, 7.22712711431086, 8.56165643781424,
>? ? 9.04990502167493, 16.1096038296819, 15.6424694694579, 16.1224633455276,
>? ? 15.2468092739582, 15.2601830195636, 14.6924834232777, 15.2172856964171,
>? ? 15.6576700508595, 15.8558295574039, 15.6930990982801, 10.0672576809302,
>? ? 10.4989007581025, 10.7346505858004, 10.9321122989058, 10.1002658251673,
>? ? 7.57602006196976, 8.28179977834225, 9.00425424333662, 8.75011347234249,
>? ? 9.78429929818958, 8.22318575810641, 7.62580542359501, 7.52632019575685,
>? ? 7.3945076437667, 8.00606575794518, 9.82791453134269, 10.3108039358631,
>? ? 10.8194808941334, 11.0586643684655, 12.7866649534553, 16.4375944063067,
>? ? 16.122004436329, 15.8343450631946, 15.183718688786, 14.59901179187,
>? ? 13.086870778352, 13.8396339956671, 13.0286106839776, 12.6303931698203,
>? ? 11.8594408035278, 12.4039673712105, 9.90002802573144, 9.60356576833874,
>? ? 11.081666406244, 11.0487984493375, 15.9987502265722, 14.9749074596912,
>? ? 13.8462209142745, 12.3910789377987, 11.7417626548558, 10.7962236274034,
>? ? 11.77659323439, 11.0980827827007, 10.4603781597689, 10.4605271480978,
>? ? 12.797769298777, 11.2864379771054, 9.58062659483403, 9.57864196971059,
>? ? 9.7400170750916, 15.1035780552775, 15.3101249132305, 15.6179285142571,
>? ? 14.4825984723866, 11.6881796624511, 11.791490809992, 11.2104086671025,
>? ? 8.8539243908599, 8.34417999722064, 8.39954141993076, 9.41099112387747,
>? ? 8.93235134426504, 9.60718737915158, 9.41101815551519, 9.83936337288469,
>? ? 13.6638214811683, 14.4527215976268, 14.7365185897797, 13.2517122197896,
>? ? 11.0009524505585, 9.60110148880631, 8.54964307509363, 8.75000974629074,
>? ? 8.88564947526902, 7.84255138132721, 11.6202082950622, 12.075385870412,
>? ? 12.8382677212358, 14.9491381365806, 20.0978868640959, 8.93126882147044,
>? ? 9.09663643687963, 9.05409744009376, 8.98246862925589, 8.80278556142002,
>? ? 8.68155935313553, 8.91096869017929, 7.71334832534194, 9.87222944386303,
>? ? 11.2759735900909, 17.2249065712094, 17.9082475136966, 17.6210721954703,
>? ? 16.7172310408205, 16.2506423424929, 12.9267014097422, 14.7103695664555,
>? ? 19.504395313561, 22.4196153692901, 22.2453631460667, 8.23867111466825,
>? ? 8.10000761412084, 7.8771845670417, 7.56322089582682, 7.14911003597081,
>? ? 9.50618146453053, 8.6958515457809, 7.36113237217069, 6.79777669720352,
>? ? 6.69330381788313), .Dim = c(10L, 90L), .Dimnames = list(NULL,
>? ? c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X9", "X10",
>? ? "X11", "X12", "X13", "X14", "X15", "X16", "X17", "X18", "X19",
>? ? "X20", "X21", "X22", "X23", "X24", "X25", "X26", "X27", "X28",
>? ? "X29", "X30", "X31", "X32", "X33", "X34", "X35", "X36", "X37",
>? ? "X38", "X39", "X40", "X41", "X42", "X43", "X44", "X45", "X46",
>? ? "X47", "X48", "X49", "X50", "X51", "X52", "X53", "X54", "X55",
>? ? "X56", "X57", "X58", "X59", "X60", "X61", "X62", "X63", "X64",
>? ? "X65", "X66", "X67", "X68", "X69", "X70", "X71", "X72", "X73",
>? ? "X74", "X75", "X76", "X77", "X78", "X79", "X80", "X81", "X82",
>? ? "X83", "X84", "X85", "X86", "X87", "X88", "X89", "X90")))
>
> Is there any way to compute the means in this way? I just tried this, but I received the following error:
> result <- rowMeans(cbind(c(subset), c(subset5)));dim(result) <- dim(subset);colnames(result) <- colnames(subset)
>
> Error in rowMeans(cbind(c(subset), c(subset5))) : 'x' must be numeric
>
> Thanks,
> -----Original Message-----
> From: Eric Berger <ericjberger at gmail.com>
> To: rain1290 <rain1290 at aim.com>
> Cc: r-sig-geo <r-sig-geo at r-project.org>; R mailing list <r-help at r-project.org>
> Sent: Fri, Apr 12, 2019 11:47 am
> Subject: Re: [R] Creating a mean line plot
>
> I don't have your data. Are the x-values the same in both plots?Does this example cover the situation?
> f1 <- function(x) { x^3 - 2 }f2 <- function(x) { 2 - x^2 }
> xV <- seq(from=0,to=2,length=50)y1 <- f1(xV)y2 <- f2(xV)y3 <- .5*(y1+y2)plot(x=xV,y=y1,col="blue",lwd=2,type='l',xlab="x",ylab="y")lines(x=xV,y=y2,col="green",lwd=2)lines(x=xV,y=y3,col="red",lwd=2)legend("topleft",legend=c("y1","y2","mean"),col=c("blue","green","red"),lwd=rep(2,3))
>
>
> On Fri, Apr 12, 2019 at 5:34 PM rain1290--- via R-help <r-help at r-project.org> wrote:
>
> Hi there,
> I am trying to create a mean line plot that shows the mean of a series of separate line plots that correspond to two climate models. Let's first try getting the mean of two line plots. To create the separate line plots, here is what I did to set up the x and y axis variables:
>
> ####Getting cumulative emissions data for x-axis: 1-dimensional ####
>
> #For CanESM model#
>
> ncfname <- "cumulative_emissions_1pctCO2.nc"
> Model1 <- nc_open(ncfname)
> get <- ncvar_get(Model1, "cum_co2_emi-CanESM2")? ? #units of terratones of carbon (TtC) for x-axis (140 values)
> #For IPSL LR Model#
> #Getting cumulative emissions data for x-axis IPSL LR 1pctCO2 IPSL <- ncvar_get(Model1, "cum_co2_emi-IPSL-CM5A-LR")? ? #units of terratones of carbon (TtC) for x-axis (140 values)
>
> ############################################################################################################
>
> #####Getting precipitation data for y-axis - these are 3-dimensional####
>
> #For CanESM2 model#
> Model2 <- brick("MaxPrecCCCMACanESM21pctCO2.nc", var="onedaymax")
>
>
> #For IPSL LR Model#
> Model10 <- brick("MaxPrecIPSLIPSL-CM5A-LR1pctCO2.nc", var="onedaymax")
> #############################################################################################################
> To create plots for a specific location:
> lonlat <- cbind(103,3)? ? ? ? ? #specifies a specific longitude and latitude
> Hope2 <- extract(Model2,lonlat)? ? ? #CanESM2
> Hope6 <- extract(Model10,lonlat)? #start IPSL CM5A LR
> plot(get,Hope2, type="l",col="green", lwd="3", xlab="Cumulative CO2 emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="One-day maximum precipitation for random location for 1pctCO2 scenario")
> lines(IPSL, Hope6, type="l", lwd="3", col="green")
> #############################################################################################################
> So, the idea would be to create a plot that shows the mean of these two plots. Given what I showed above, how should I go about creating the mean of these two green line plots? Would you have to get the mean of the x-values, and then obtain the mean of the y-values, and then plot these?
> Thanks, and any help would be greatly appreciated!
>? ? ? ? [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>
>
>? ? ? ? [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
	[[alternative HTML version deleted]]


From m@rt@@m@ru||no @end|ng |rom gm@||@com  Mon Apr 15 17:13:07 2019
From: m@rt@@m@ru||no @end|ng |rom gm@||@com (Marta Rufino)
Date: Mon, 15 Apr 2019 16:13:07 +0100
Subject: [R-sig-Geo] tpk files
In-Reply-To: <CAKSASLBuRVdJSRv7PDD-HSqwwdVgxNf8K9Rcp_47iq=NQigE+A@mail.gmail.com>
References: <CAKSASLCTd+KDAErzeXNv0E_6HrhtepM7yZS-uOs-znj_vU0cPw@mail.gmail.com>
 <CANVKczNikJ8N2qb8+Uina6XvbOymde7NQGPbVxeCj58PqKQ3Mw@mail.gmail.com>
 <CAKSASLCPFYjc_WNpvsE3BUwJkxJ0mG2VuFnnVFrrL-p+73=H=Q@mail.gmail.com>
 <CF511784783D0B52.e2054a8a-f497-4761-9841-266797efac89@mail.outlook.com>
 <CAKSASLBuRVdJSRv7PDD-HSqwwdVgxNf8K9Rcp_47iq=NQigE+A@mail.gmail.com>
Message-ID: <CAKSASLBfMf1CxRUFtT4uk0q9dRiWKZMzxRL+=GP-jbyzbK-qdw@mail.gmail.com>

Hi,

Finally, the full code that works
Thanks to everybody once again,

Cheers,
M.

# From Edzer Pebesma (thank you) - see also the alternative from Barry
using sqlite3
library(sf)
#open subset the file depth=1
system.time(r.d1 <- st_read("D:/EMU_Z_Opendata/EMU.gpkg", query = "select *
from EMU_Master where depth_lvl = 1"))

# Code chunks copied from below (adapted with the help of Barry Rowlingson):
require(dplyr)
dr <- r.d1 %>%
  dplyr::rename("x"=POINT_X,"y"=POINT_Y) %>%
  dplyr::mutate(NameEMUn = as.numeric(NameEMU)) %>%
  dplyr::select(x,y, NameEMUn) %>%
  st_set_geometry(NULL)

drz <- rasterFromXYZ(dr)
system.time(drzp <- rasterToPolygons(drz,dissolve=TRUE))
# spplot(drzp,"layer")

emu <- st_as_sf(drzp)
st_crs(emu)=4326
emu$NameEMU = levels(d$NameEMU)
plot(emu)
## Allright!!!
# Export as a shape file:
# write_sf(emu, "emu.shp")

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Wed Apr 17 15:33:08 2019
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Wed, 17 Apr 2019 15:33:08 +0200
Subject: [R-sig-Geo] spreml function
In-Reply-To: <0F3AC75F-0EEC-4164-8C64-F4A4BDA0737D@polito.it>
References: <0F3AC75F-0EEC-4164-8C64-F4A4BDA0737D@polito.it>
Message-ID: <alpine.LFD.2.21.1904171529310.945@reclus.nhh.no>

On Thu, 11 Apr 2019, Federico Dell'Anna wrote:

> Dear,
> I have a problem with ?spreml? function in R.
> I have a dataset of 26000 observation, like points.
> I have imported the shp file in R, and .gal file calculated previously in GEODA.
> When i run spreml, an error comes:
> Error in as.vector(x) : no method for coercing this S4 class to a vector
> below the function:
> mapsart <- spreml(fm, data = map, w = maplistw, errors="sr", lag=TRUE, method="BFGS?)

Unfortunately, this is not helpful, as we do not know what the objects 
passed to spreml() are. What are their classes? Is data= of the form 
expected by the function with balanced temporal and spatial indices? 
Please provide an example reproducing the problem with a built-in data 
set.

Roger

>
>
> Can you help me to solve this problem?
>
> Regards
>
> Federico
>
>
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From r@i@1290 m@iii@g oii @im@com  Fri Apr 19 02:37:43 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Fri, 19 Apr 2019 00:37:43 +0000 (UTC)
Subject: [R-sig-Geo] Selecting a range of longitude and latitudes
References: <1660921778.2813884.1555634263243.ref@mail.yahoo.com>
Message-ID: <1660921778.2813884.1555634263243@mail.yahoo.com>

Hi there,
I am trying to specify a range of longitudes and latitudes. I tried this using the following:


lonlat <- cbind(103:116, 3:16)? #This would specify a range of longitudes and latitudes

However, I receive the following warning message:
Warning message:
In cbind(103:110, 3:16) :
  number of rows of result is not a multiple of vector length (arg 1)

When I specify the longitude and latitude of a specific location, though, it works just fine, like this:
lonlat <- cbind(103, 3)

Am I specifying the ranges of coordinates incorrectly? The warning message would suggest yes, but I do not understand why.
Thanks, and any help with this would be greatly appreciated!
~Trav.~
	[[alternative HTML version deleted]]


From v|j@y|u||@ @end|ng |rom gm@||@com  Fri Apr 19 03:24:54 2019
From: v|j@y|u||@ @end|ng |rom gm@||@com (Vijay Lulla)
Date: Thu, 18 Apr 2019 21:24:54 -0400
Subject: [R-sig-Geo] Selecting a range of longitude and latitudes
In-Reply-To: <1660921778.2813884.1555634263243@mail.yahoo.com>
References: <1660921778.2813884.1555634263243.ref@mail.yahoo.com>
 <1660921778.2813884.1555634263243@mail.yahoo.com>
Message-ID: <CAKkiGbu-grHncxdU2BjLWdcE-mJ_6NRgXt2D4n1MAOVK7PoSWQ@mail.gmail.com>

It appears that you might have mistakenly typed cbind(103:110, 3:16)
instead of cbind(103:116, 3:16).  Regardless, the warning is telling you
that the vectors were of unequal lengths and there was some recycling.  You
can learn about recycling rule from searching "recycling rule in R" and
also from R's Introduction manual at
https://cran.r-project.org/doc/manuals/r-release/R-intro.html#The-recycling-rule
.

HTH,
Vijay

On Thu, Apr 18, 2019 at 8:38 PM rain1290--- via R-sig-Geo <
r-sig-geo at r-project.org> wrote:

> Hi there,
> I am trying to specify a range of longitudes and latitudes. I tried this
> using the following:
>
>
> lonlat <- cbind(103:116, 3:16)  #This would specify a range of longitudes
> and latitudes
>
> However, I receive the following warning message:
> Warning message:
> In cbind(103:110, 3:16) :
>   number of rows of result is not a multiple of vector length (arg 1)
>
> When I specify the longitude and latitude of a specific location, though,
> it works just fine, like this:
> lonlat <- cbind(103, 3)
>
> Am I specifying the ranges of coordinates incorrectly? The warning message
> would suggest yes, but I do not understand why.
> Thanks, and any help with this would be greatly appreciated!
> ~Trav.~
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From btupper @end|ng |rom b|ge|ow@org  Fri Apr 19 03:26:27 2019
From: btupper @end|ng |rom b|ge|ow@org (Ben Tupper)
Date: Thu, 18 Apr 2019 21:26:27 -0400
Subject: [R-sig-Geo] Selecting a range of longitude and latitudes
In-Reply-To: <1660921778.2813884.1555634263243@mail.yahoo.com>
References: <1660921778.2813884.1555634263243.ref@mail.yahoo.com>
 <1660921778.2813884.1555634263243@mail.yahoo.com>
Message-ID: <57EE6FEB-F3BF-4D14-BBA4-C60899490051@bigelow.org>

Hi,

The example you give is different than the one listed in the error message.  In your example you bind two 14-element vectors into a matrix of two columns.

cbind(103:116, 3:16)

But in the error you show the first vector is only 8 elements long...

cbind(103:110, 3:16)

When R encounters an attempt to bind columns of unequal length it will try to "recycle" the shorter vector as long as it is a multiple of the longer. In this case of binding an 8-element vector and a 14-element vector it fails.  

Note that shortening up the first vector to 7 does work since 7 is a multiple of 14...

cbind(103:109, 3:16)
      [,1] [,2]
 [1,]  103    3
 [2,]  104    4
 [3,]  105    5
 [4,]  106    6
 [5,]  107    7
 [6,]  108    8
 [7,]  109    9
 [8,]  103   10
 [9,]  104   11
[10,]  105   12
[11,]  106   13
[12,]  107   14
[13,]  108   15
[14,]  109   16


Note how the sequence 103...109 appears twice in the first column.  Recycling is nice (and handy) until you get surprised by it.

Cheers,
Ben

> On Apr 18, 2019, at 8:37 PM, rain1290--- via R-sig-Geo <r-sig-geo at r-project.org> wrote:
> 
> Hi there,
> I am trying to specify a range of longitudes and latitudes. I tried this using the following:
> 
> 
> lonlat <- cbind(103:116, 3:16)  #This would specify a range of longitudes and latitudes
> 
> However, I receive the following warning message:
> Warning message:
> In cbind(103:110, 3:16) :
>  number of rows of result is not a multiple of vector length (arg 1)
> 
> When I specify the longitude and latitude of a specific location, though, it works just fine, like this:
> lonlat <- cbind(103, 3)
> 
> Am I specifying the ranges of coordinates incorrectly? The warning message would suggest yes, but I do not understand why.
> Thanks, and any help with this would be greatly appreciated!
> ~Trav.~
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

Ben Tupper
Bigelow Laboratory for Ocean Sciences
60 Bigelow Drive, P.O. Box 380
East Boothbay, Maine 04544
http://www.bigelow.org

Ecological Forecasting: https://eco.bigelow.org/






	[[alternative HTML version deleted]]


From r@i@1290 m@iii@g oii @im@com  Fri Apr 19 03:51:23 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Fri, 19 Apr 2019 01:51:23 +0000 (UTC)
Subject: [R-sig-Geo] Selecting a range of longitude and latitudes
In-Reply-To: <57EE6FEB-F3BF-4D14-BBA4-C60899490051@bigelow.org>
References: <1660921778.2813884.1555634263243.ref@mail.yahoo.com>
 <1660921778.2813884.1555634263243@mail.yahoo.com>
 <57EE6FEB-F3BF-4D14-BBA4-C60899490051@bigelow.org>
Message-ID: <1532557437.2828558.1555638683984@mail.yahoo.com>

Hi Ben (and everyone),

Ah, yes, you're right - using the suggestion that you specified, that error message disappeared! So, if I understand, this would take all of the grid cells within those specified longitude and latitude ranges (i.e. that entire area)??
That said, when I try plotting this using the following:
get <- ncvar_get(Model1, "cum_co2_emi-CanESM2") ? #for x-axis (140 values)
Model2 <- brick("MaxPrecCCCMACanESM21pctCO2.nc", var="onedaymax") ?? #for y-axis (140 values)

Hope2 <- extract(Model2, lonlat)

plot(get,Hope2, type="l",col="green", lwd="3", xlab="Cumulative emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="CanESM2")
I receive this error:
Error in xy.coords(x, y, xlabel, ylabel, log) : 
  'x' and 'y' lengths differ
*Note that I do not have this problem when specifying a "specific" longitude and latitude, rather than a range. Is there any reason for this?
Thanks, again
-----Original Message-----
From: Ben Tupper <btupper at bigelow.org>
To: rain1290 <rain1290 at aim.com>
Cc: r-sig-geo <r-sig-geo at r-project.org>
Sent: Thu, Apr 18, 2019 9:26 pm
Subject: Re: [R-sig-Geo] Selecting a range of longitude and latitudes

Hi,
The example you give is different than the one listed in the error message. ?In your example you bind two 14-element vectors into a matrix of two columns.
cbind(103:116, 3:16)
But in the error you show?the first vector is only 8 elements long...
cbind(103:110, 3:16)
When R encounters an attempt to bind columns of unequal length it will try to "recycle" the shorter vector as long as it is a multiple of the longer. In this case of binding an 8-element vector and a 14-element vector it fails. ?
Note that shortening up the first vector to 7 does work since 7 is a multiple of 14...
cbind(103:109, 3:16)? ? ? [,1] [,2]?[1,] ?103 ? ?3?[2,] ?104 ? ?4?[3,] ?105 ? ?5?[4,] ?106 ? ?6?[5,] ?107 ? ?7?[6,] ?108 ? ?8?[7,] ?109 ? ?9?[8,] ?103 ? 10?[9,] ?104 ? 11[10,] ?105 ? 12[11,] ?106 ? 13[12,] ?107 ? 14[13,] ?108 ? 15[14,] ?109 ? 16

Note how the sequence 103...109 appears twice in the first column. ?Recycling is nice (and handy) until you get surprised by it.
Cheers,Ben

On Apr 18, 2019, at 8:37 PM, rain1290--- via R-sig-Geo <r-sig-geo at r-project.org> wrote:
Hi there,
I am trying to specify a range of longitudes and latitudes. I tried this using the following:


lonlat <- cbind(103:116, 3:16)? #This would specify a range of longitudes and latitudes

However, I receive the following warning message:
Warning message:
In cbind(103:110, 3:16) :
 ?number of rows of result is not a multiple of vector length (arg 1)

When I specify the longitude and latitude of a specific location, though, it works just fine, like this:
lonlat <- cbind(103, 3)

Am I specifying the ranges of coordinates incorrectly? The warning message would suggest yes, but I do not understand why.
Thanks, and any help with this would be greatly appreciated!
~Trav.~
 [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


Ben Tupper
Bigelow Laboratory for Ocean?Sciences
60 Bigelow Drive, P.O. Box 380
East Boothbay, Maine 04544
http://www.bigelow.org
Ecological Forecasting: https://eco.bigelow.org/





	[[alternative HTML version deleted]]


From ngh@ur@n @end|ng |rom g@te@cnr@@|r  Fri Apr 19 11:51:29 2019
From: ngh@ur@n @end|ng |rom g@te@cnr@@|r (Alain N'Ghauran)
Date: Fri, 19 Apr 2019 11:51:29 +0200
Subject: [R-sig-Geo] Measures of dispersion and statistical significance of
 the impacts of a panel Spatial Durbin model (SDM)
Message-ID: <6f77422a-9cfe-13fe-8d76-ca4e4f8a315d@gate.cnrs.fr>

Hello, group

I ran a panel Spatial Durbin model (SDM) and computed the summary 
measures of impacts (direct, indirect and total). Now, I would like to 
get measures of dispersion for the impacts estimates as well as the 
statistical significance of the impacts.

How can I get such measures ?

Here is a reproducible example:

################################################################################
################################################################################
set.seed(1234)
library(plm)
library(splm)
data(Produc, package = "plm")
data(usaww)

# Create spatially lagged independent variables WX using slag()
Produc2 <- pdata.frame(Produc, index = c("state", "year"))
Produc2$pcap_SL <- slag(log(Produc2$pcap), mat2listw(usaww))
Produc2$pc_SL <- slag(log(Produc2$pc), mat2listw(usaww))
Produc2$emp_SL <- slag(log(Produc2$emp), mat2listw(usaww))
Produc2$unemp_SL <- slag(log(Produc2$unemp), mat2listw(usaww))
# Define formula
fm <- log(gsp) ~ log(pcap) + log(pc) + log(emp) + unemp +
 ??????? pcap_SL + pc_SL + emp_SL + unemp_SL
# Spatial Durbin Model : Y = ?.WY + ?.X + ?.WX + ?
summary(
 ??????? sdm <- spml(fm, data = Produc2, index = c("dep", "period"),
 ??????????????????? model = "within", effect = "twoways", lag = TRUE,
 ??????????????????? listw = mat2listw(usaww), spatial.error = "none",
 ??????????????????? LeeYu = TRUE, Hess = FALSE)
 ??????? )

## Compute impact measures of variable pcap (thanks to Prof Bivand)
# Impacts are computed using equation (25) in LeSage (2008)
# LeSage (2008) is available at 
https://journals.openedition.org/rei/pdf/3887
# Note that I cannot use impacts.splm() since the current development of 
splm doesn?t allow impacts on SDM

Time <- length(unique(Produc$year))
N <- length(unique(Produc$state))
library(Matrix)
s.lws <- kronecker(Diagonal(Time) , listw2dgCMatrix(mat2listw(usaww)))
IrW <- Diagonal(N * Time) - sdm$spat.coef * s.lws
IrWi <- solve(IrW)
S_pcap <- IrWi * (Diagonal(N * Time) * sdm$coefficients[2] +
 ????????????????????????? s.lws * sdm$coefficients[6])
# direct impact
dir_imp <- mean(diag(S_pcap))
# total impact
tot_imp <- mean(rowSums(S_pcap)) # or sum(S_pcap)/816
# indirect impact : total impact - direct impact
indir_imp <- tot_imp - dir_imp

# LeSage (2008) provides guidance for drawing inference regarding the 
significance
# of these impacts (section 4.2, page 35) but I'm struggling to 
implement it in R.

# Could you help me deal with this ?

################################################################################
################################################################################

Thanks,

Alain


From oz|@@hounkp@t|n @end|ng |rom gm@||@com  Fri Apr 19 17:23:03 2019
From: oz|@@hounkp@t|n @end|ng |rom gm@||@com (Hounkpatin Ozias)
Date: Fri, 19 Apr 2019 17:23:03 +0200
Subject: [R-sig-Geo] Getting averaged variable importance after bootsrapping
Message-ID: <CA+O_1X2PrHLvyk2BfnQowP7Ru=9xP03iqyyo1tnF9cAyUUVxhg@mail.gmail.com>

Dear All,



I am using a Bootstrapping approach with the Cubist model like the example
below for 3 bootsraps.



library(Cubist)

library(ithir) # install.packages("ithir", repos="
http://R-Forge.R-project.org <http://r-forge.r-project.org/>")

library(caret)



# Point data

data(HV_subsoilpH)



# subset data for modeling

training <- sample(nrow(HV_subsoilpH), 0.7 * nrow(HV_subsoilpH))

cDat <- HV_subsoilpH[training, ]



# Number of bootstraps

nbag <- 3



# Fit cubist models for each bootstrap

for (i in 1:nbag) {

  trainingREP <- sample.int(nrow(cDat), 1.0 * nrow(cDat),replace = TRUE)

  fit_cubist <- cubist(x = cDat[trainingREP, 4:ncol(cDat),

                       y = cDat$pH60_100cm[trainingREP],
cubistControl(rules = 5,

                                       extrapolation = 5), committees = 3)

}



It is possible to get the variable importance (percentages  in variable
usage in the models) after running the models. Because of the random
sampling at each run of the model, the variable importance is different. A
robust estimate may be determined by taking the average of all the
percentages of usage for each specific variable involved in the models.



However using varImp(fit_cubist) only gives variable importance for the
final model.



Is there anyway to extract the variable importance for each model and
arrange them finally to get the final table as presented below? I am
actually running the models 100 times. It is possible to do  it manually by
saving to file each model and then calls  in each model but the workload is
too high when you have 100 number of bootstraps.



 The final table I am expecting should like the table below.


Expected table-----------------------------------------------

*Variables*

*VImp*

*cubist.type*

MRVBF

62.5

Vimp.cubist1

AACN

72.5

Vimp.cubist1

NDVI

41

Vimp.cubist1

MRVBF

81.5

Vimp.cubist2

Elevation

48.5

Vimp.cubist2

NDVI

62.5

Vimp.cubist2

MRVBF

78

Vimp.cubist3

Hillshading

62

Vimp.cubist3

TWI

57

Vimp.cubist3



I will appreciate any help.



Best Regards,

Ozias

	[[alternative HTML version deleted]]


From r@i@1290 m@iii@g oii @im@com  Sat Apr 20 01:24:58 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Fri, 19 Apr 2019 23:24:58 +0000 (UTC)
Subject: [R-sig-Geo] Selecting a range of longitude and latitudes
References: <1604276522.3189311.1555716298728.ref@mail.yahoo.com>
Message-ID: <1604276522.3189311.1555716298728@mail.yahoo.com>

Hi Mike (and everyone),

Thanks for this reply!?
Let's say that I wanted to average the values of every grid cell within, say, 103 to 116 degrees longitude and 5 to 16 degrees latitude. Would there be a way to select all of those grid cells to average them? I've done something like this to already compute the averages across all grid cells based on values :
RCP1pctCO2ModelMean <- (Model2 + Model10 + Model18 + Model26 + subset14 + Model42 + subset20 + subset24 + Model60 + Model68) / 10 ? ###This provides an average value across each of the 140 layers for each of the 8192 grid cells based on these 10 models (i.e. all of the layer 1s are averaged for each model for the first grid cell, then all of the layer 2s are averaged for the first grid cell.....all the way to layer 140. Then, this is repeated for the second grid cell....all the way to grid cell 8192). This way, I have 140 averages across all grid cells. :)
So, to average values ONLY across a selected range of grid cells, is there a way to do that??
Thanks, again,


-----Original Message-----
From: Michael Sumner <mdsumner at gmail.com>
To: rain1290 <rain1290 at aim.com>
Sent: Fri, Apr 19, 2019 6:36 pm
Subject: Re: [R-sig-Geo] Selecting a range of longitude and latitudes

You want expand.grid(get, Hope2) to get every coordinate, but

coordinates(Model2)? ## gives a matrix (topleft, across rows, then
down same as values(Model2))

is far easier, albeit having been through layers of interpretation of
the original arrays in the file.

All the best, Mike


On Fri, Apr 19, 2019 at 11:51 AM rain1290--- via R-sig-Geo
<r-sig-geo at r-project.org> wrote:
>
> Hi Ben (and everyone),
>
> Ah, yes, you're right - using the suggestion that you specified, that error message disappeared! So, if I understand, this would take all of the grid cells within those specified longitude and latitude ranges (i.e. that entire area)?
> That said, when I try plotting this using the following:
> get <- ncvar_get(Model1, "cum_co2_emi-CanESM2")? #for x-axis (140 values)
> Model2 <- brick("MaxPrecCCCMACanESM21pctCO2.nc", var="onedaymax")? ? #for y-axis (140 values)
>
> Hope2 <- extract(Model2, lonlat)
>
> plot(get,Hope2, type="l",col="green", lwd="3", xlab="Cumulative emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="CanESM2")
> I receive this error:
> Error in xy.coords(x, y, xlabel, ylabel, log) :
>? 'x' and 'y' lengths differ
> *Note that I do not have this problem when specifying a "specific" longitude and latitude, rather than a range. Is there any reason for this?
> Thanks, again
> -----Original Message-----
> From: Ben Tupper <btupper at bigelow.org>
> To: rain1290 <rain1290 at aim.com>
> Cc: r-sig-geo <r-sig-geo at r-project.org>
> Sent: Thu, Apr 18, 2019 9:26 pm
> Subject: Re: [R-sig-Geo] Selecting a range of longitude and latitudes
>
> Hi,
> The example you give is different than the one listed in the error message.? In your example you bind two 14-element vectors into a matrix of two columns.
> cbind(103:116, 3:16)
> But in the error you show the first vector is only 8 elements long...
> cbind(103:110, 3:16)
> When R encounters an attempt to bind columns of unequal length it will try to "recycle" the shorter vector as long as it is a multiple of the longer. In this case of binding an 8-element vector and a 14-element vector it fails.
> Note that shortening up the first vector to 7 does work since 7 is a multiple of 14...
> cbind(103:109, 3:16)? ? ? [,1] [,2] [1,]? 103? ? 3 [2,]? 104? ? 4 [3,]? 105? ? 5 [4,]? 106? ? 6 [5,]? 107? ? 7 [6,]? 108? ? 8 [7,]? 109? ? 9 [8,]? 103? 10 [9,]? 104? 11[10,]? 105? 12[11,]? 106? 13[12,]? 107? 14[13,]? 108? 15[14,]? 109? 16
>
> Note how the sequence 103...109 appears twice in the first column.? Recycling is nice (and handy) until you get surprised by it.
> Cheers,Ben
>
> On Apr 18, 2019, at 8:37 PM, rain1290--- via R-sig-Geo <r-sig-geo at r-project.org> wrote:
> Hi there,
> I am trying to specify a range of longitudes and latitudes. I tried this using the following:
>
>
> lonlat <- cbind(103:116, 3:16)? #This would specify a range of longitudes and latitudes
>
> However, I receive the following warning message:
> Warning message:
> In cbind(103:110, 3:16) :
>? number of rows of result is not a multiple of vector length (arg 1)
>
> When I specify the longitude and latitude of a specific location, though, it works just fine, like this:
> lonlat <- cbind(103, 3)
>
> Am I specifying the ranges of coordinates incorrectly? The warning message would suggest yes, but I do not understand why.
> Thanks, and any help with this would be greatly appreciated!
> ~Trav.~
>? [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
> Ben Tupper
> Bigelow Laboratory for Ocean Sciences
> 60 Bigelow Drive, P.O. Box 380
> East Boothbay, Maine 04544
> http://www.bigelow.org
> Ecological Forecasting: https://eco.bigelow.org/
>
>
>
>
>
>? ? ? ? [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo



-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com

	[[alternative HTML version deleted]]


From teph|||pp| @end|ng |rom gm@||@com  Sun Apr 21 06:17:10 2019
From: teph|||pp| @end|ng |rom gm@||@com (Tom Philippi)
Date: Sat, 20 Apr 2019 21:17:10 -0700
Subject: [R-sig-Geo] Selecting a range of longitude and latitudes
In-Reply-To: <1532557437.2828558.1555638683984@mail.yahoo.com>
References: <1660921778.2813884.1555634263243.ref@mail.yahoo.com>
 <1660921778.2813884.1555634263243@mail.yahoo.com>
 <57EE6FEB-F3BF-4D14-BBA4-C60899490051@bigelow.org>
 <1532557437.2828558.1555638683984@mail.yahoo.com>
Message-ID: <CALyPt8x2ohNTVu=n5jvUMp3UhgqEhGA6Q==1v_ShuT8Y7e2XCg@mail.gmail.com>

Trav--
Are you trying to specify a grid of each of those lon values by each of
those lat values?  cbind() is matching the first lon with the first lat,
the second with the second, generating a diagonal of locations.  [That's
also why there have to be as many lats as lons.]  To fill out the grid of
each lon with each lat, look at expand.grid(103:116, 3:16)

Tom

On Thu, Apr 18, 2019 at 6:51 PM rain1290--- via R-sig-Geo <
r-sig-geo at r-project.org> wrote:

> Hi Ben (and everyone),
>
> Ah, yes, you're right - using the suggestion that you specified, that
> error message disappeared! So, if I understand, this would take all of the
> grid cells within those specified longitude and latitude ranges (i.e. that
> entire area)?
> That said, when I try plotting this using the following:
> get <- ncvar_get(Model1, "cum_co2_emi-CanESM2")   #for x-axis (140 values)
> Model2 <- brick("MaxPrecCCCMACanESM21pctCO2.nc", var="onedaymax")    #for
> y-axis (140 values)
>
> Hope2 <- extract(Model2, lonlat)
>
> plot(get,Hope2, type="l",col="green", lwd="3", xlab="Cumulative emissions
> (TtC)", ylab="One-day maximum precipitation (mm/day)", main="CanESM2")
> I receive this error:
> Error in xy.coords(x, y, xlabel, ylabel, log) :
>   'x' and 'y' lengths differ
> *Note that I do not have this problem when specifying a "specific"
> longitude and latitude, rather than a range. Is there any reason for this?
> Thanks, again
> -----Original Message-----
> From: Ben Tupper <btupper at bigelow.org>
> To: rain1290 <rain1290 at aim.com>
> Cc: r-sig-geo <r-sig-geo at r-project.org>
> Sent: Thu, Apr 18, 2019 9:26 pm
> Subject: Re: [R-sig-Geo] Selecting a range of longitude and latitudes
>
> Hi,
> The example you give is different than the one listed in the error
> message.  In your example you bind two 14-element vectors into a matrix of
> two columns.
> cbind(103:116, 3:16)
> But in the error you show the first vector is only 8 elements long...
> cbind(103:110, 3:16)
> When R encounters an attempt to bind columns of unequal length it will try
> to "recycle" the shorter vector as long as it is a multiple of the longer.
> In this case of binding an 8-element vector and a 14-element vector it
> fails.
> Note that shortening up the first vector to 7 does work since 7 is a
> multiple of 14...
> cbind(103:109, 3:16)      [,1] [,2] [1,]  103    3 [2,]  104    4 [3,]
>  105    5 [4,]  106    6 [5,]  107    7 [6,]  108    8 [7,]  109    9 [8,]
>  103   10 [9,]  104   11[10,]  105   12[11,]  106   13[12,]  107   14[13,]
>  108   15[14,]  109   16
>
> Note how the sequence 103...109 appears twice in the first column.
> Recycling is nice (and handy) until you get surprised by it.
> Cheers,Ben
>
> On Apr 18, 2019, at 8:37 PM, rain1290--- via R-sig-Geo <
> r-sig-geo at r-project.org> wrote:
> Hi there,
> I am trying to specify a range of longitudes and latitudes. I tried this
> using the following:
>
>
> lonlat <- cbind(103:116, 3:16)  #This would specify a range of longitudes
> and latitudes
>
> However, I receive the following warning message:
> Warning message:
> In cbind(103:110, 3:16) :
>   number of rows of result is not a multiple of vector length (arg 1)
>
> When I specify the longitude and latitude of a specific location, though,
> it works just fine, like this:
> lonlat <- cbind(103, 3)
>
> Am I specifying the ranges of coordinates incorrectly? The warning message
> would suggest yes, but I do not understand why.
> Thanks, and any help with this would be greatly appreciated!
> ~Trav.~
>  [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
> Ben Tupper
> Bigelow Laboratory for Ocean Sciences
> 60 Bigelow Drive, P.O. Box 380
> East Boothbay, Maine 04544
> http://www.bigelow.org
> Ecological Forecasting: https://eco.bigelow.org/
>
>
>
>
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From r@i@1290 m@iii@g oii @im@com  Sun Apr 21 16:31:34 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Sun, 21 Apr 2019 14:31:34 +0000 (UTC)
Subject: [R-sig-Geo] Selecting a range of longitude and latitudes
In-Reply-To: <CALyPt8x2ohNTVu=n5jvUMp3UhgqEhGA6Q==1v_ShuT8Y7e2XCg@mail.gmail.com>
References: <1660921778.2813884.1555634263243.ref@mail.yahoo.com>
 <1660921778.2813884.1555634263243@mail.yahoo.com>
 <57EE6FEB-F3BF-4D14-BBA4-C60899490051@bigelow.org>
 <1532557437.2828558.1555638683984@mail.yahoo.com>
 <CALyPt8x2ohNTVu=n5jvUMp3UhgqEhGA6Q==1v_ShuT8Y7e2XCg@mail.gmail.com>
Message-ID: <828710125.3531611.1555857094454@mail.yahoo.com>

Hi Tom (and everyone),

Ah, yes, that is what I wanted to consider in terms of selecting grid cells! :) But let's say that I wanted to aggregate each of the values of these grid cells and plot this as a function x-axis values. The values already computed for each grid cell for the y-axis correspond to average precipitation and consist of 140 values per grid cell. The variable containing these y-axis values is called "RCP1pctCO2Mean", which is 3-dimensional and has the following attributes:
class       : RasterBrick 
dimensions  : 64, 128, 8192, 140  (nrow, ncol, ncell, nlayers)
resolution  : 2.8125, 2.789327  (x, y)
extent      : -181.4062, 178.5938, -89.25846, 89.25846  (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names       :   layer.1,   layer.2,   layer.3,   layer.4,   layer.5,   layer.6,   layer.7,   layer.8,   layer.9,  layer.10,  layer.11,  layer.12,  layer.13,  layer.14,  layer.15, ... 
min values  : 0.5261063, 0.5625295, 0.5301681, 0.6019284, 0.5177065, 0.6775601, 0.5336965, 0.5213086, 0.5971723, 0.5305891, 0.5514522, 0.5481200, 0.4681806, 0.5437223, 0.5988844, ... 
max values  : 113.13776, 114.50780,  94.93643, 100.35409, 102.65459, 101.80622, 104.95480,  99.17839, 104.68667, 119.48342, 100.60391, 108.91896, 104.38969,  99.35735,  99.30752, ... 

For the x-axis, I already have 140 values to be plotted. The x variable is called "RCP1pctCO2cumulative".?
I tried doing something like this to start:
>expansion <- expand.grid(103:116, 3:16)>lonlat <- extract(RCP1pctCO2Mean, expansion)
>plot(RCP1pctCO2cumulative,lonlat, type="l",col="green", lwd="3", xlab="Cumulative emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="Test model")?But this yields the error:
Error in xy.coords(x, y, xlabel, ylabel, log) : 
  'x' and 'y' lengths differ>dim(lonlat)
[1] 196 ? 140>dim(expansion)[1] 196 ? 2
What could I be doing wrong (the lengths appear to be the same)? Ultimately, the goal would be to plot the 140 values as a function of cumulative emissions (i.e. "RCP1pctCO2Mean" as a function of "RCP1pctCO2cumulative" once each of those selected grid cells are aggregated. This works absolutely fine when just selecting "one" specific grid cell. Is this possible to do for an aggregate of grid cells?
Thanks, again!?
-----Original Message-----
From: Tom Philippi <tephilippi at gmail.com>
To: rain1290 <rain1290 at aim.com>
Cc: btupper <btupper at bigelow.org>; r-sig-geo <r-sig-geo at r-project.org>
Sent: Sun, Apr 21, 2019 12:17 am
Subject: Re: [R-sig-Geo] Selecting a range of longitude and latitudes

Trav--Are you trying to specify a grid of each of those lon values by each of those lat values?? cbind() is matching the first lon with the first lat, the second with the second, generating a diagonal of locations.? [That's also why there have to be as many lats as lons.]? To fill out the grid of each lon with each lat, look at expand.grid(103:116, 3:16)
Tom
On Thu, Apr 18, 2019 at 6:51 PM rain1290--- via R-sig-Geo <r-sig-geo at r-project.org> wrote:

Hi Ben (and everyone),

Ah, yes, you're right - using the suggestion that you specified, that error message disappeared! So, if I understand, this would take all of the grid cells within those specified longitude and latitude ranges (i.e. that entire area)??
That said, when I try plotting this using the following:
get <- ncvar_get(Model1, "cum_co2_emi-CanESM2") ? #for x-axis (140 values)
Model2 <- brick("MaxPrecCCCMACanESM21pctCO2.nc", var="onedaymax") ?? #for y-axis (140 values)

Hope2 <- extract(Model2, lonlat)

plot(get,Hope2, type="l",col="green", lwd="3", xlab="Cumulative emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="CanESM2")
I receive this error:
Error in xy.coords(x, y, xlabel, ylabel, log) : 
? 'x' and 'y' lengths differ
*Note that I do not have this problem when specifying a "specific" longitude and latitude, rather than a range. Is there any reason for this?
Thanks, again
-----Original Message-----
From: Ben Tupper <btupper at bigelow.org>
To: rain1290 <rain1290 at aim.com>
Cc: r-sig-geo <r-sig-geo at r-project.org>
Sent: Thu, Apr 18, 2019 9:26 pm
Subject: Re: [R-sig-Geo] Selecting a range of longitude and latitudes

Hi,
The example you give is different than the one listed in the error message.? In your example you bind two 14-element vectors into a matrix of two columns.
cbind(103:116, 3:16)
But in the error you show?the first vector is only 8 elements long...
cbind(103:110, 3:16)
When R encounters an attempt to bind columns of unequal length it will try to "recycle" the shorter vector as long as it is a multiple of the longer. In this case of binding an 8-element vector and a 14-element vector it fails. ?
Note that shortening up the first vector to 7 does work since 7 is a multiple of 14...
cbind(103:109, 3:16)? ? ? [,1] [,2]?[1,] ?103 ? ?3?[2,] ?104 ? ?4?[3,] ?105 ? ?5?[4,] ?106 ? ?6?[5,] ?107 ? ?7?[6,] ?108 ? ?8?[7,] ?109 ? ?9?[8,] ?103 ? 10?[9,] ?104 ? 11[10,] ?105 ? 12[11,] ?106 ? 13[12,] ?107 ? 14[13,] ?108 ? 15[14,] ?109 ? 16

Note how the sequence 103...109 appears twice in the first column.? Recycling is nice (and handy) until you get surprised by it.
Cheers,Ben

On Apr 18, 2019, at 8:37 PM, rain1290--- via R-sig-Geo <r-sig-geo at r-project.org> wrote:
Hi there,
I am trying to specify a range of longitudes and latitudes. I tried this using the following:


lonlat <- cbind(103:116, 3:16)? #This would specify a range of longitudes and latitudes

However, I receive the following warning message:
Warning message:
In cbind(103:110, 3:16) :
??number of rows of result is not a multiple of vector length (arg 1)

When I specify the longitude and latitude of a specific location, though, it works just fine, like this:
lonlat <- cbind(103, 3)

Am I specifying the ranges of coordinates incorrectly? The warning message would suggest yes, but I do not understand why.
Thanks, and any help with this would be greatly appreciated!
~Trav.~
?[[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


Ben Tupper
Bigelow Laboratory for Ocean?Sciences
60 Bigelow Drive, P.O. Box 380
East Boothbay, Maine 04544
http://www.bigelow.org
Ecological Forecasting: https://eco.bigelow.org/





? ? ? ? [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Sun Apr 21 19:22:42 2019
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Sun, 21 Apr 2019 19:22:42 +0200
Subject: [R-sig-Geo] 
 Measures of dispersion and statistical significance of
 the impacts of a panel Spatial Durbin model (SDM)
In-Reply-To: <6f77422a-9cfe-13fe-8d76-ca4e4f8a315d@gate.cnrs.fr>
References: <6f77422a-9cfe-13fe-8d76-ca4e4f8a315d@gate.cnrs.fr>
Message-ID: <alpine.LFD.2.21.1904211914590.14593@reclus.nhh.no>

On Fri, 19 Apr 2019, Alain N'Ghauran wrote:

> Hello, group
>
> I ran a panel Spatial Durbin model (SDM) and computed the summary measures of 
> impacts (direct, indirect and total). Now, I would like to get measures of 
> dispersion for the impacts estimates as well as the statistical significance 
> of the impacts.
>
> How can I get such measures ?
>
> Here is a reproducible example:
>
> ################################################################################
> ################################################################################
> set.seed(1234)
> library(plm)
> library(splm)
> data(Produc, package = "plm")
> data(usaww)
>
> # Create spatially lagged independent variables WX using slag()
> Produc2 <- pdata.frame(Produc, index = c("state", "year"))
> Produc2$pcap_SL <- slag(log(Produc2$pcap), mat2listw(usaww))
> Produc2$pc_SL <- slag(log(Produc2$pc), mat2listw(usaww))
> Produc2$emp_SL <- slag(log(Produc2$emp), mat2listw(usaww))
> Produc2$unemp_SL <- slag(log(Produc2$unemp), mat2listw(usaww))
> # Define formula
> fm <- log(gsp) ~ log(pcap) + log(pc) + log(emp) + unemp +
> ??????? pcap_SL + pc_SL + emp_SL + unemp_SL
> # Spatial Durbin Model : Y = ?.WY + ?.X + ?.WX + ?
> summary(
> ??????? sdm <- spml(fm, data = Produc2, index = c("dep", "period"),
> ??????????????????? model = "within", effect = "twoways", lag = TRUE,
> ??????????????????? listw = mat2listw(usaww), spatial.error = "none",
> ??????????????????? LeeYu = TRUE, Hess = FALSE)
> ??????? )
>
> ## Compute impact measures of variable pcap (thanks to Prof Bivand)
> #  Impacts are computed using equation (25) in LeSage (2008)
> #  LeSage (2008) is available at 
> https://journals.openedition.org/rei/pdf/3887
> # Note that I cannot use impacts.splm() since the current development of splm 
> doesn?t allow impacts on SDM
>
> Time <- length(unique(Produc$year))
> N <- length(unique(Produc$state))
> library(Matrix)
> s.lws <- kronecker(Diagonal(Time) , listw2dgCMatrix(mat2listw(usaww)))
> IrW <- Diagonal(N * Time) - sdm$spat.coef * s.lws
> IrWi <- solve(IrW)
> S_pcap <- IrWi * (Diagonal(N * Time) * sdm$coefficients[2] +
> ????????????????????????? s.lws * sdm$coefficients[6])
> # direct impact
> dir_imp <- mean(diag(S_pcap))
> # total impact
> tot_imp <- mean(rowSums(S_pcap)) # or sum(S_pcap)/816
> # indirect impact : total impact - direct impact
> indir_imp <- tot_imp - dir_imp
>
> # LeSage (2008) provides guidance for drawing inference regarding the 
> significance
> # of these impacts (section 4.2, page 35) but I'm struggling to implement it 
> in R.
>
> # Could you help me deal with this ?

I think that during the next few years, someone may implement this, but it 
is far from simple. If you have the time and energy, you'd need to set up 
input for spatialreg::intImpacts(), which would then sample from the 
fitted model and calculate the impacts on those samples to give an 
inferential basis. It will be easier to add a Durbin= argument to splm 
fitting functions, but this needs to wait until spatialreg exposes a 
single portable function handling the argument. For the present time, your 
only option is S_r(W) and no inference. Consider making an issue in 
spatialreg on github with regard to a Durbin= argument handling function, 
but I do not anticipate being able to do that this year without 
contributions from others.

Roger

>
> ################################################################################
> ################################################################################
>
> Thanks,
>
> Alain
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From er|nm@hodge@@ @end|ng |rom gm@||@com  Mon Apr 22 17:38:42 2019
From: er|nm@hodge@@ @end|ng |rom gm@||@com (Erin Hodgess)
Date: Mon, 22 Apr 2019 09:38:42 -0600
Subject: [R-sig-Geo] using cokriging for probability kriging
Message-ID: <CACxE24mSLwEn8aHJP8GrNMf8XL9hKhOhVAPC6HXQ-0K=qz3=Gw@mail.gmail.com>

Hello everyone!

I found an interesting technical note by David Rossiter about doing
cokriging in R.

Would this be the same as probability kriging if the target variable is an
indicator variable and the cokriging variable is the rank order/n, please?

Thanks for your help,
Sincerely,
Erin

Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From kun@|@b@||9 @end|ng |rom gm@||@com  Tue Apr 23 09:51:35 2019
From: kun@|@b@||9 @end|ng |rom gm@||@com (Kunal Bali)
Date: Tue, 23 Apr 2019 13:21:35 +0530
Subject: [R-sig-Geo] masking_data
Message-ID: <CAOiHCtShM-DNdqCNMJP3+ygUw0NUn=ykNfbx0z+qwj_Gog8BAg@mail.gmail.com>

Dear R users,
Could anyone please let me know how to mask the data over only Indian
region.

my code is


august_temp <-ReadNetCDF("/Users/kunalbali/Desktop/test/soma/india.nc")
str(august_temp)

shapeindia <-
readOGR(dsn="/Users/kunalbali/Desktop/india/",layer="india_state")
shapefile_df <- fortify(shapeindia)

ggplot(august_temp[time == time[1]], aes(lon, lat)) +
  geom_contour_fill(aes(z = olr)) + scale_fill_distiller(palette =
"OrRd",trans = "reverse") +
  geom_path(data = shapefile_df,
            aes(x = long, y = lat, group = group),
            color = 'black', size = .5) +
  metR:::theme_field()


---
Kunal Bali

	[[alternative HTML version deleted]]


From r@i@1290 m@iii@g oii @im@com  Wed Apr 24 04:08:55 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Wed, 24 Apr 2019 02:08:55 +0000 (UTC)
Subject: [R-sig-Geo] Selecting a range of longitudes and latitudes for
 plotting
References: <1930744393.4832724.1556071735672.ref@mail.yahoo.com>
Message-ID: <1930744393.4832724.1556071735672@mail.yahoo.com>

Hi there,
I am trying to select a range of latitude and longitudes (and all grid cells within that range) to plot y-axis values (precipitation) as a function of x-axis values (emissions) based on aggregating (averaging) each of those grid cells. Thus, let's say that I wanted to aggregate/average each of the values of these grid cells and plot this as a function x-axis values. The values already computed for each grid cell for the y-axis correspond to average precipitation and consist of 140 values per grid cell. So, the idea would be the average the first value of each grid cell, then the second value of each grid cell, then the third value of each grid cell.....all the way to value #140 of each grid cell. This would yield 140 values that would be plotted as a single line plot.? The variable containing these y-axis values is called "RCP1pctCO2Mean", which is 3-dimensional and has the following attributes:? ??class: RasterBrick 
dimensions? : 64, 128, 8192, 140? (nrow, ncol, ncell, nlayers)
resolution? : 2.8125, 2.789327? (x, y)
extent????? : -181.4062, 178.5938, -89.25846, 89.25846? (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names?????? :?? layer.1,?? layer.2,?? layer.3,?? layer.4,?? layer.5,???? 
layer.6,?? layer.7,?? layer.8,?? layer.9,? layer.10,? layer.11,? layer.12,? 
layer.13,? layer.14,? layer.15, ... 
min values? : 0.5261063, 0.5625295, 0.5301681, 0.6019284, 0.5177065,? 
0.6775601, 0.5336965, 0.5213086, 0.5971723, 0.5305891, 0.5514522,?? 
0.5481200, 0.4681806, 0.5437223, 0.5988844, ... 
max values? : 113.13776, 114.50780,? 94.93643, 100.35409, 102.65459, 
101.80622, 104.95480,? 99.17839, 104.68667, 119.48342, 100.60391, 
108.91896, 104.38969,? 99.35735,? 99.30752, ... ? ??>dput(head(RCP1pctCO2ModelMean,5))
??? structure(c(8.06056747436523, 7.75062637329102, 7.73271865844727, 
??? 7.65678634643555, 7.75580596923828, 8.74016799926758, 8.28938064575195, 
??? 8.10810775756836, 8.10339508056641, 7.86748199462891, 10.6165672302246, 
??? 11.057600402832, 11.9450210571289, 12.3012786865234, 12.1853874206543, 
??? 8.51755447387695, 9.16703491210938, 7.79627380371094, 7.53922271728516, 
??? 8.14367599487305, 7.83845596313477, 8.22455596923828, 8.21650848388672, 
??? 8.186181640625, 8.34122924804688, 9.1652702331543, 9.03225784301758, 
??? 9.04341430664062, 8.98676376342774, 9.0090087890625, 10.5393569946289, 
??? 11.1039672851562, 11.2379959106445, 11.333048248291, 12.0459312438965, 
??? 10.0039085388184, 9.90224914550781, 9.24856033325195, 9.26007308959961, 
??? 9.17901306152344, 9.55168991088867, 10.1229606628418, 10.4827072143555, 
??? 11.0505676269531, 12.1166931152344, 9.01049194335937, 9.39016952514648, 
??? 10.1307640075684, 9.67219467163086, 9.63750610351562, 8.14553070068359, 
??? 8.06989059448242, 7.88368453979492, 7.78139190673828, 7.76021575927734, 
??? 8.09026031494141, 8.47544021606445, 8.53607864379883, 9.07613296508789, 
??? 8.45474319458008, 9.91985092163086, 10.0807098388672, 9.90288009643555, 
??? 10.3433769226074, 10.349861907959, 11.2688484191895, 11.9406700134277, 
??? 12.0929878234863, 11.8347038269043, 10.4144630432129, 12.5179420471191, 
??? 13.8380874633789, 14.6360946655273, 14.0480010986328, 13.3910736083984, 
??? 9.96924514770508, 10.3363311767578, 10.7060684204102, 10.889599609375, 
??? 10.6653129577637, 10.5626991271973, 10.047868347168, 10.2751319885254, 
??? 10.8663063049316, 11.7612907409668, 8.94287414550781, 9.23690567016602, 
??? 8.96449661254883, 8.62908248901367, 8.30552215576172, 8.18369979858398, 
??? 7.69772872924805, 7.5989143371582, 7.7111930847168, 7.66501693725586, 
??? 10.2653533935547, 9.95307464599609, 9.71684875488281, 9.06423645019531, 
??? 9.75586776733399, 9.83898010253906, 9.89386901855469, 9.82217864990234, 
??? 9.5716667175293, 9.0698844909668, 9.32229309082031, 9.11556243896484, 
??? 8.89283828735352, 9.28563232421875, 9.30773696899414, 7.3968879699707, 
??? 7.93817901611328, 7.98456954956055, 7.95158386230469, 8.098583984375, 
??? 8.80923156738281, 8.49755935668945, 8.15531387329102, 8.46451263427734, 
??? 8.68563690185547, 8.89066619873047, 9.1489013671875, 9.33551254272461, 
??? 10.1721000671387, 11.0765029907227, 8.04215698242188, 8.19046478271484, 
??? 8.40826110839844, 8.67290573120117, 9.18575973510742, 8.3109245300293, 
??? 9.11093368530273, 9.81162109375, 9.86040802001953, 9.50505447387695, 
??? 10.5363166809082, 9.481689453125, 9.08926620483398, 9.52505798339844, 
??? 8.68244476318359, 8.98393630981445, 10.1831520080566, 10.5507629394531, 
??? 10.1666023254395, 9.69676284790039, 8.34152221679688, 8.42654571533203, 
??? 8.35252838134766, 8.00343780517578, 7.82494201660156, 9.53874359130859, 
??? 9.61768341064453, 9.41213912963867, 9.64521713256836, 10.2018295288086, 
??? 10.4372673034668, 10.2102493286133, 11.5178192138672, 10.6066253662109, 
??? 8.7693229675293, 10.0142112731934, 10.0218872070313, 9.85999298095703, 
??? 9.61988754272461, 9.6459342956543, 8.68394012451172, 8.94484100341797, 
??? 8.99103088378906, 9.28208084106445, 9.25485153198242, 9.43952713012695, 
??? 9.46648941040039, 9.29736251831055, 9.17809677124023, 9.15292205810547, 
??? 9.86052169799805, 9.73173980712891, 9.56215209960937, 9.07076568603516, 
??? 8.6406623840332, 9.93644332885742, 10.4607345581055, 10.7315849304199, 
??? 10.8101539611816, 10.7245536804199, 8.11333770751953, 8.19898986816406, 
??? 9.07229690551758, 8.52103500366211, 8.86794967651367, 13.8089904785156, 
??? 14.1628616333008, 14.1612731933594, 13.8391723632812, 13.4812423706055, 
??? 10.3034606933594, 10.3893714904785, 10.6155006408691, 10.7073356628418, 
??? 10.2250640869141, 10.7160522460937, 10.9937141418457, 11.4714202880859, 
??? 11.451326751709, 11.2873542785645, 10.1245864868164, 10.7054138183594, 
??? 11.2963111877441, 11.2652069091797, 11.1456642150879, 10.2463417053223, 
??? 10.7579162597656, 10.9033828735352, 10.8239326477051, 10.9808113098145, 
??? 9.11014785766602, 9.57601928710938, 9.13134765625, 8.95542297363281, 
??? 9.004345703125, 10.011986541748, 10.4038223266602, 10.7760765075684, 
??? 10.8257308959961, 11.1445190429687, 10.5380798339844, 10.2488784790039, 
??? 10.957502746582, 10.7088333129883, 10.6826118469238, 8.83894119262695, 
??? 9.23114776611328, 8.83077545166016, 8.79364471435547, 9.5740608215332, 
??? 9.49266204833984, 9.36201629638672, 8.86088562011719, 8.70853042602539, 
??? 8.84630584716797, 8.54691619873047, 9.06980133056641, 9.68758087158203, 
??? 10.2382141113281, 11.163306427002, 8.64593887329102, 8.68509368896484, 
??? 9.1695442199707, 9.96113128662109, 10.5646827697754, 10.6185249328613, 
??? 11.3931076049805, 11.984349822998, 12.3294868469238, 12.6237396240234, 
??? 9.07107849121094, 8.50119094848633, 8.165673828125, 8.46488571166992, 
??? 8.7583610534668, 9.64865646362305, 11.1105819702148, 11.4002655029297, 
??? 10.5027854919434, 10.1196365356445, 9.72924041748047, 10.009349822998, 
??? 10.326407623291, 9.36514053344727, 7.79587249755859, 9.68682708740234, 
??? 9.97370910644531, 10.053092956543, 10.0790946960449, 9.88732604980469, 
??? 8.5629150390625, 8.67814178466797, 8.62764282226562, 8.40693130493164, 
??? 8.43646850585938, 8.18491287231445, 8.28544006347656, 8.32042083740234, 
??? 8.37117156982422, 8.74075393676758, 10.0410667419434, 9.86564865112305, 
??? 9.83465423583984, 10.2372169494629, 10.6772819519043, 10.7158340454102, 
??? 11.1418548583984, 11.3801231384277, 12.3574913024902, 12.7044395446777, 
??? 10.933625793457, 10.1660957336426, 8.9215690612793, 9.42180328369141, 
??? 10.0563125610352, 10.6793243408203, 10.605298614502, 10.532593536377, 
??? 10.4527519226074, 10.4930633544922, 9.60543518066406, 9.36136474609375, 
??? 9.02150115966797, 8.90760498046875, 9.39027709960937, 11.475407409668, 
??? 11.8939018249512, 12.2665367126465, 12.3773796081543, 12.2639549255371, 
??? 12.1986907958984, 12.9296035766602, 14.6138290405273, 12.5118690490723, 
??? 11.1584533691406, 11.6089347839355, 12.184122467041, 12.7126617431641, 
??? 12.8846618652344, 12.7170280456543, 10.4427520751953, 11.0104148864746, 
??? 11.0574317932129, 10.7889305114746, 11.428002166748, 12.8730773925781, 
??? 13.0610855102539, 13.9772033691406, 14.7699234008789, 15.2759140014648, 
??? 11.0441619873047, 12.8132598876953, 13.1194686889648, 13.3944534301758, 
??? 13.439665222168, 11.8274314880371, 12.5198951721191, 13.1492401123047, 
??? 13.310026550293, 13.7720932006836, 10.7566696166992, 11.1153205871582, 
??? 10.8651023864746, 10.8898574829102, 11.1934638977051, 10.3416526794434, 
??? 10.3679290771484, 10.5599853515625, 10.4897705078125, 10.3551536560059, 
??? 10.7984680175781, 9.9300895690918, 9.24563140869141, 8.82577590942383, 
??? 8.11003036499023, 9.96226196289063, 10.2302505493164, 10.1707107543945, 
??? 9.78019790649414, 9.43962249755859, 11.1743797302246, 11.4034492492676, 
??? 10.9475212097168, 11.3065505981445, 11.3690071105957, 9.07691192626953, 
??? 8.84776763916016, 8.99648666381836, 9.46799697875977, 10.1394309997559, 
??? 9.5390739440918, 9.72808990478516, 10.1971199035645, 10.3575813293457, 
??? 10.6958648681641, 12.1900230407715, 11.986629486084, 12.139289855957, 
??? 12.308757019043, 12.2176116943359, 10.5569931030273, 10.2808883666992, 
??? 9.90982055664062, 9.57319793701172, 9.34677658081055, 9.55350112915039, 
??? 9.78641738891602, 10.0147956848145, 10.3079559326172, 10.7283164978027, 
??? 8.64087753295899, 8.30433197021484, 8.60956497192383, 8.60016937255859, 
??? 8.54900741577148, 9.71597595214844, 8.8296272277832, 8.63880462646484, 
??? 8.47726745605469, 8.84029846191406, 10.1157096862793, 9.88607330322266, 
??? 9.32783508300781, 9.36255416870117, 10.1161201477051, 11.8296203613281, 
??? 12.8728881835937, 13.2580642700195, 13.5822448730469, 14.2079498291016, 
??? 8.7088752746582, 8.82841796875, 9.62056427001953, 9.44509429931641, 
??? 8.63022689819336, 10.438533782959, 10.7936264038086, 11.1668098449707, 
??? 11.4698097229004, 11.6895088195801, 10.657413482666, 10.6490295410156, 
??? 10.6090156555176, 10.7308578491211, 10.2125785827637, 8.9413688659668, 
??? 8.8182373046875, 8.83381042480469, 8.8937255859375, 8.81535415649414, 
??? 9.55851669311523, 9.21836166381836, 9.18197784423828, 9.25029678344726, 
??? 9.27070083618164, 8.93240661621094, 8.90249099731445, 9.04313659667969, 
??? 9.20108184814453, 9.35103607177734, 10.5618942260742, 11.06572265625, 
??? 11.445832824707, 11.9180442810059, 11.9453758239746, 12.2584243774414, 
??? 11.9192649841309, 11.7775825500488, 11.8008255004883, 12.2185432434082, 
??? 9.08272094726562, 9.66560821533203, 9.48288192749023, 9.70498886108398, 
??? 9.56975555419922, 10.349006652832, 10.0300796508789, 9.5968864440918, 
??? 9.54965896606445, 9.00812759399414, 10.6454582214355, 10.7713653564453, 
??? 11.4645782470703, 11.8325187683105, 10.4740211486816, 9.41022796630859, 
??? 9.07474822998047, 8.61860656738281, 8.40045318603516, 8.653662109375, 
??? 9.65197830200195, 9.63723449707031, 9.51137924194336, 9.57775497436523, 
??? 9.69926528930664, 8.98936157226563, 9.40332794189453, 9.6757568359375, 
??? 9.79740600585938, 9.78034057617188, 10.2542152404785, 10.1619010925293, 
??? 10.3302688598633, 10.5525291442871, 10.7628135681152, 10.2399101257324, 
??? 10.7667839050293, 10.9936302185059, 10.8458152770996, 10.6235733032227, 
??? 9.24678955078125, 9.91125411987305, 9.86469879150391, 10.2658912658691, 
??? 10.1045028686523, 8.5959098815918, 8.49214401245117, 8.39304656982422, 
??? 8.6228157043457, 8.61747360229492, 8.91071395874024, 8.69116439819336, 
??? 8.56472625732422, 8.52434997558594, 8.64141616821289, 11.7017639160156, 
??? 12.3285125732422, 12.0996276855469, 11.056103515625, 10.7624618530273, 
??? 11.0327911376953, 12.0061622619629, 11.4006072998047, 10.8051193237305, 
??? 9.97594757080078, 10.138427734375, 10.6871589660645, 11.5516906738281, 
??? 12.4771171569824, 12.7644668579102, 9.02487182617188, 8.8429817199707, 
??? 9.50254135131836, 9.22763977050781, 8.60505981445312, 9.68806610107422, 
??? 9.77085647583008, 9.95944061279297, 10.3024574279785, 10.7512054443359, 
??? 8.78317031860352, 8.94360504150391, 9.19855346679688, 9.44350967407227, 
??? 10.2734016418457, 11.8314613342285, 12.4076805114746, 12.5829055786133, 
??? 12.3372856140137, 11.6992652893066, 8.82733459472656, 8.83338012695313, 
??? 9.01612014770508, 9.31243057250976, 9.52871017456055, 9.1939811706543, 
??? 9.20086669921875, 9.17466049194336, 9.3692512512207, 9.51042022705078, 
??? 9.55322723388672, 9.08766632080078, 9.01230697631836, 9.08840942382812, 
??? 8.89073867797851, 10.0157516479492, 9.88614654541016, 9.88927917480469, 
??? 9.89448471069336, 9.81435546875, 10.0982810974121, 10.8838890075684, 
??? 12.3737106323242, 12.0203163146973, 12.3476577758789, 8.12273559570312, 
??? 8.38578720092773, 8.5104736328125, 8.67580947875977, 8.8884521484375, 
??? 11.280297088623, 9.81758041381836, 9.12517623901367, 9.57337417602539, 
??? 9.93379745483398, 9.97190170288086, 9.9986442565918, 10.1007339477539, 
??? 10.368416595459, 10.8695823669434, 10.6418167114258, 10.1072540283203, 
??? 9.56202163696289, 10.1464050292969, 11.0315299987793, 15.5208480834961, 
??? 16.458154296875, 16.6033325195312, 16.9603851318359, 17.5446258544922, 
??? 11.6627197265625, 11.2967132568359, 11.0439735412598, 10.7337928771973, 
??? 10.724112701416, 10.414665222168, 10.1816375732422, 10.0053001403809, 
??? 10.0604530334473, 10.3831871032715, 12.5386772155762, 12.61123046875, 
??? 11.556861114502, 10.815104675293, 10.3798713684082, 12.8164276123047, 
??? 12.5301361083984, 12.1416007995605, 11.1006622314453, 10.5525985717773, 
??? 12.7033218383789, 13.5069030761719, 14.3273956298828, 14.1952850341797, 
??? 13.8862731933594, 11.5364295959473, 11.4725784301758, 11.4327659606934, 
??? 11.6338516235352, 11.9929733276367, 10.9388458251953, 10.3944259643555, 
??? 10.7864356994629, 10.4639877319336, 10.4192794799805, 10.584090423584, 
??? 11.0457565307617, 11.1049293518066, 11.2156471252441, 11.2940994262695, 
??? 11.5789703369141, 11.3852058410645, 11.312281036377, 10.8983863830566, 
??? 10.7498306274414, 11.648999786377, 12.1443000793457, 12.3075752258301, 
??? 12.4243774414062, 12.5793846130371, 9.53582992553711, 10.3421630859375, 
??? 10.6005973815918, 10.7018409729004, 10.1489151000977, 15.3236968994141, 
??? 16.6732727050781, 17.0259368896484, 16.9183380126953, 18.6379180908203, 
??? 11.5663963317871, 13.1421661376953, 15.772624206543, 15.2286743164063, 
??? 14.1305938720703, 10.4395881652832, 10.3302070617676, 10.3431907653809, 
??? 10.6234725952148, 10.6850440979004, 10.1355682373047, 10.7770133972168, 
??? 11.2220344543457, 11.121208190918, 10.9759727478027, 10.4280487060547, 
??? 11.4163436889648, 11.5880157470703, 11.367276763916, 11.7584564208984, 
??? 12.3622993469238, 12.8618209838867, 13.0096267700195, 12.7293991088867, 
??? 12.3698738098145, 13.4502487182617, 13.9361175537109, 14.3981384277344, 
??? 14.8455154418945, 14.7898071289063, 10.8285942077637, 11.0353393554688, 
??? 13.0554183959961, 11.4933654785156, 10.6509674072266, 12.3171768188477, 
??? 11.9701278686523, 11.7984405517578, 11.3652336120605, 11.2212104797363, 
??? 11.7747032165527, 12.0631629943848, 11.609635925293, 12.5300575256348, 
??? 12.5889640808105, 14.9442291259766, 15.244026184082, 15.1138778686523, 
??? 14.8327117919922, 14.0672607421875, 13.8624649047852, 14.0361633300781, 
??? 13.746142578125, 13.3890182495117, 12.7229309082031, 11.7338531494141, 
??? 12.4392601013184, 12.6126739501953, 12.3359680175781, 12.0300300598145, 
??? 13.0475494384766, 13.4870010375977, 13.1330673217773, 12.8889770507812, 
??? 11.5218353271484, 12.9545684814453, 12.6848930358887, 12.5185249328613, 
??? 12.1927146911621, 12.1243927001953, 13.6282653808594, 13.0329132080078, 
??? 14.021321105957, 12.7892906188965, 11.5679710388184, 12.4451988220215, 
??? 12.6035362243652, 12.8059692382812, 13.2598541259766, 14.1865646362305, 
??? 11.4154563903809, 12.0055801391602, 12.315015411377, 12.8833023071289, 
??? 13.0320266723633, 11.3923133850098, 12.2035797119141, 12.3115371704102, 
??? 12.4416717529297, 12.8906295776367, 11.4880004882812, 11.4702560424805, 
??? 11.063402557373, 11.520093536377, 11.4941116333008, 10.2884147644043, 
??? 10.4248268127441, 10.2943084716797, 10.4938522338867, 10.171199798584, 
??? 10.8181655883789, 10.7096382141113, 10.3980682373047, 9.85380783081055, 
??? 9.06302337646484, 11.087833404541, 11.297770690918, 11.4384208679199, 
??? 11.8333045959473, 12.6423866271973, 11.0677742004395, 11.1663566589355, 
??? 14.6535186767578, 12.696688079834, 11.9809646606445, 12.5395179748535, 
??? 13.5047088623047, 13.6589874267578, 13.3168762207031, 13.8064010620117, 
??? 13.2664398193359, 12.1466331481934, 11.7755020141602, 11.2214569091797, 
??? 11.967204284668, 13.3286544799805, 13.0230804443359, 12.4111663818359, 
??? 11.5664184570313, 11.507154083252, 10.7482841491699, 10.2523262023926, 
??? 10.5137763977051, 10.6416915893555, 10.925708770752, 12.1461143493652, 
??? 12.5572776794434, 13.0962661743164, 14.0371612548828, 15.6014785766602, 
??? 12.1392105102539, 12.4931434631348, 12.5056259155273, 12.1932655334473, 
??? 12.1573226928711, 12.3337669372559, 12.2943237304688, 12.3938110351563, 
??? 12.3535987854004, 12.2837997436523, 11.199015045166, 11.0299026489258, 
??? 11.4233680725098, 11.3639068603516, 10.776929473877, 15.9578018188477, 
??? 18.5940185546875, 16.6747985839844, 12.2459892272949, 11.7588233947754, 
??? 10.8550109863281, 9.30074844360352, 9.1522102355957, 9.23973083496094, 
??? 9.94997406005859, 21.4329086303711, 20.6476043701172, 20.4366928100586, 
??? 19.5227752685547, 18.6518371582031, 13.4605987548828, 13.7962448120117, 
??? 14.7393859863281, 14.0098480224609, 13.7022705078125, 13.8268768310547, 
??? 13.9131362915039, 14.1420150756836, 14.5985153198242, 15.3337585449219, 
??? 10.2976509094238, 10.6874450683594, 10.6152442932129, 10.3048629760742, 
??? 10.0026962280273, 10.8500930786133, 12.313077545166, 12.8156112670898, 
??? 12.4003845214844, 12.062833404541, 11.8806510925293, 11.9595237731934, 
??? 12.7401191711426, 13.2080368041992, 12.648217010498, 14.9934814453125, 
??? 16.2576446533203, 16.2247314453125, 15.6419891357422, 14.6681213378906, 
??? 10.2608001708984, 10.204532623291, 10.8466209411621, 10.8580635070801, 
??? 10.5870002746582, 12.5249855041504, 13.235661315918, 13.3415161132812, 
??? 13.2680938720703, 13.6001312255859, 10.9847831726074, 10.9526977539062, 
??? 12.1701835632324, 10.9867134094238, 9.62559356689453, 14.671305847168, 
??? 15.7670822143555, 16.5200897216797, 17.2838760375977, 18.5971923828125, 
??? 12.4218063354492, 11.5890487670898, 11.3723731994629, 11.5280731201172, 
??? 12.0742370605469, 11.0745147705078, 10.6635795593262, 10.507258605957, 
??? 10.358984375, 10.2047622680664, 11.231372833252, 11.1456260681152, 
??? 10.8480117797852, 10.3289199829102, 9.81418380737305, 13.1054672241211, 
??? 13.3634078979492, 13.6211837768555, 14.0335067749023, 13.8940582275391, 
??? 11.4586517333984, 11.3107444763184, 12.1839057922363, 11.6442543029785, 
??? 10.0313461303711, 11.5685440063477, 13.461506652832, 13.9238220214844, 
??? 12.9616546630859, 12.0961059570313, 15.3089569091797, 14.529133605957, 
??? 12.9434677124023, 11.6556198120117, 10.7868843078613, 13.7810775756836, 
??? 14.6285568237305, 14.3505905151367, 12.6306495666504, 11.0644081115723, 
??? 13.6406951904297, 13.0658325195313, 11.6025444030762, 10.8227111816406, 
??? 10.6873641967773, 14.1373397827148, 15.3703903198242, 16.4337646484375, 
??? 16.3727081298828, 16.0835571289062, 9.32263946533203, 9.81831588745117, 
??? 10.2201850891113, 10.4734298706055, 10.432006072998, 9.83030319213867, 
??? 9.97000503540039, 10.0799949645996, 10.1364440917969, 10.2572006225586,?
??? ... 
???? .Dim = c(10L, 140L), .Dimnames = list(NULL, 
??? c("layer.1", "layer.2", "layer.3", "layer.4", "layer.5", 
??? "layer.6", "layer.7", "layer.8", "layer.9", "layer.10", "layer.11", 
??? "layer.12", "layer.13", "layer.14", "layer.15", "layer.16", 
??? "layer.17", "layer.18", "layer.19", "layer.20", "layer.21", 
??? "layer.22", "layer.23", "layer.24", "layer.25", "layer.26", 
??? "layer.27", "layer.28", "layer.29", "layer.30", "layer.31", 
??? "layer.32", "layer.33", "layer.34", "layer.35", "layer.36", 
??? "layer.37", "layer.38", "layer.39", "layer.40", "layer.41", 
??? "layer.42", "layer.43", "layer.44", "layer.45", "layer.46", 
??? "layer.47", "layer.48", "layer.49", "layer.50", "layer.51", 
??? "layer.52", "layer.53", "layer.54", "layer.55", "layer.56", 
??? "layer.57", "layer.58", "layer.59", "layer.60", "layer.61", 
??? "layer.62", "layer.63", "layer.64", "layer.65", "layer.66", 
??? "layer.67", "layer.68", "layer.69", "layer.70", "layer.71", 
??? "layer.72", "layer.73", "layer.74", "layer.75", "layer.76", 
??? "layer.77", "layer.78", "layer.79", "layer.80", "layer.81", 
??? "layer.82", "layer.83", "layer.84", "layer.85", "layer.86", 
??? "layer.87", "layer.88", "layer.89", "layer.90", "layer.91", 
??? "layer.92", "layer.93", "layer.94", "layer.95", "layer.96", 
??? "layer.97", "layer.98", "layer.99", "layer.100", "layer.101", 
??? "layer.102", "layer.103", "layer.104", "layer.105", "layer.106", 
??? "layer.107", "layer.108", "layer.109", "layer.110", "layer.111", 
??? "layer.112", "layer.113", "layer.114", "layer.115", "layer.116", 
??? "layer.117", "layer.118", "layer.119", "layer.120", "layer.121", 
??? "layer.122", "layer.123", "layer.124", "layer.125", "layer.126", 
??? "layer.127", "layer.128", "layer.129", "layer.130", "layer.131", 
??? "layer.132", "layer.133", "layer.134", "layer.135", "layer.136", 
??? "layer.137", "layer.138", "layer.139", "layer.140")))
For the x-axis, I already have 140 values to be plotted. The x variable is called "RCP1pctCO2cumulative" and is 1-dimensional. Here are the values:
>dput(RCP1pctCO2cumulative)
??? c(0, 0.00697490638121963, 0.0139075990766287, 0.021697436273098, 
??? 0.0302329704165459, 0.0389980841428041, 0.0486239280551672, 
??? 0.0591636016964912, 0.0698652867227793, 0.0806971430778503, 0.0917696304619312, 
??? 0.102874741703272, 0.115288959443569, 0.127942492067814, 0.140930585563183, 0.154951927065849, 
??? 0.169483987987041, 0.18332038372755, 0.197460225224495, 0.211912712454796, 
??? 0.227608525753021, 0.243575794994831, 0.257900005578995, 0.273098181188107, 
??? 0.288984017074108, 0.305822652578354, 0.321933174133301, 0.338437202572823, 
??? 0.356079193949699, 0.373604437708855, 0.389580103754997, 0.406976979970932, 
??? 0.423514771461487, 0.440741804242134, 0.459019854664803, 0.477243804931641, 
??? 0.494844323396683, 0.511731442809105, 0.529583910107613, 0.54879242181778, 
??? 0.568029862642288, 0.587030050158501, 0.606201952695847, 0.626413214206696, 
??? 0.645859175920486, 0.66550235748291, 0.685490393638611, 0.705517685413361, 
??? 0.725719237327576, 0.74520371556282, 0.764879602193832, 0.78538470864296, 
??? 0.806885379552841, 0.827258145809174, 0.847640424966812, 0.869502395391464, 
??? 0.891108268499374, 0.912525850534439, 0.934271132946014, 0.956432664394379, 
??? 0.977902102470398, 0.999574398994446, 1.02313443422317, 1.0449088037014, 
??? 1.06765602231026, 1.09229186177254, 1.11614397168159, 1.13850414156914, 
??? 1.16062269210815, 1.18386173844337, 1.2078672170639, 1.23217906951904, 
??? 1.25505521297455, 1.27949770689011, 1.30394254922867, 1.32788743972778, 
??? 1.35124933719635, 1.37474408149719, 1.39838930368423, 1.42129179239273, 
??? 1.44566521644592, 1.47075144052506, 1.49397988319397, 1.51616193056107, 
??? 1.54051134586334, 1.56606665849686, 1.59053231477737, 1.61592463254929, 
??? 1.64096541404724, 1.66613935232162, 1.69049085378647, 1.71510955095291, 
??? 1.73991868495941, 1.76491104364395, 1.79114699363708, 1.81589571237564, 
??? 1.84101955890656, 1.864857172966, 1.8899533867836, 1.91575677394867, 
??? 1.9422261595726, 1.96840007305145, 1.99298502206802, 2.01899757385254, 
??? 2.04547454118729, 2.07122528553009, 2.09852977991104, 2.12717348337173, 
??? 2.15352830886841, 2.17984690666199, 2.20684263706207, 2.23266286849976, 
??? 2.25915194749832, 2.28647100925446, 2.31463184356689, 2.34280925989151, 
??? 2.36965861320496, 2.39779574871063, 2.42558825016022, 2.45266799926758, 
??? 2.48168079853058, 2.50962221622467, 2.53702754974365, 2.56574511528015, 
??? 2.59377150535583, 2.62192821502686, 2.6505597114563, 2.68051118850708, 
??? 2.70983340740204, 2.73927145004272, 2.76805067062378, 2.79780313968658, 
??? 2.8272668838501, 2.85747616291046, 2.88714888095856, 2.91689431667328, 
??? 2.94743349552155, 2.97868416309357, 3.00965495109558, 3.03861720561981
I tried doing something like this to start:
>expansion <- expand.grid(103:116, 3:16) #to specify a range of longitudes? and latitudes
? ??>lonlat <- extract(RCP1pctCO2Mean, expansion)? ?>plot(RCP1pctCO2cumulative, lonlat, type="l",col="green", lwd="3",? 
??? xlab="Cumulative emissions (TtC)", ylab="One-day maximum precipitation? 
??? (mm/day)", main="Test model")
?
But this yields the error:
??? Error in xy.coords(x, y, xlabel, ylabel, log) : 
??? 'x' and 'y' lengths differ
If it helps, here are the dimensions of the new variables created:
??? 
>dim(lonlat)
??? [1] 196?? 140
??? 
>dim(expansion)
??? 
??? [1] 196?? 2

What could I be doing wrong (the lengths appear to be the same)? Ultimately, the goal would be to plot the 140 values as a function of emissions (i.e. "RCP1pctCO2Mean" as a function of "RCP1pctCO2cumulative" once each of those selected grid cells are aggregated). The above works absolutely fine when just selecting "one" specific grid cell, but not an aggregate of grid cells. Is this possible to do for an aggregate of grid cells?
Thanks, and any assistance would be greatly appreciated!
	[[alternative HTML version deleted]]


From kk||p@tr|ck @end|ng |rom r@m@@@m|@m|@edu  Wed Apr 24 16:58:59 2019
From: kk||p@tr|ck @end|ng |rom r@m@@@m|@m|@edu (Kilpatrick, Katherine A)
Date: Wed, 24 Apr 2019 14:58:59 +0000
Subject: [R-sig-Geo] Selecting a range of longitudes and latitudes for
 plotting
In-Reply-To: <1930744393.4832724.1556071735672@mail.yahoo.com>
References: <1930744393.4832724.1556071735672.ref@mail.yahoo.com>
 <1930744393.4832724.1556071735672@mail.yahoo.com>
Message-ID: <D7714A9E-E805-4A55-9328-40B0F469E84B@miami.edu>

Hi;

The reason you are getting that error message is you are trying to plot a 1 dimension array by a 2 dimensional array.

I think simply adding the argument  fun = mean to your extraction of the RCP1pctCO2Mean brick will solve the confusion.
As you have it written you are extracting 196 grid cells  for all 140 layers ending up with a 2d array

 latlon <- extract(RCP1pctCO2Mean, expansion, fun=mean)
Should  give you 140 values in a 1d array that represent the average of the cells in the grid subset for each of the 140 layers in the brick.

Assuming of course that this is what you were after.
 I had to read between the lines a bit not knowing really how RCP1pctCO2cumulative was created -- other than it was precomputed and had a length of 140.

btw: Cellstats would give you the average of the nlayers at each of the 196 grid cells  eg. a 1 d array of 196.

Kay


On Apr 23, 2019, at 10:08 PM, rain1290--- via R-sig-Geo <r-sig-geo at r-project.org<mailto:r-sig-geo at r-project.org>> wrote:

Hi there,
I am trying to select a range of latitude and longitudes (and all grid cells within that range) to plot y-axis values (precipitation) as a function of x-axis values (emissions) based on aggregating (averaging) each of those grid cells. Thus, let's say that I wanted to aggregate/average each of the values of these grid cells and plot this as a function x-axis values. The values already computed for each grid cell for the y-axis correspond to average precipitation and consist of 140 values per grid cell. So, the idea would be the average the first value of each grid cell, then the second value of each grid cell, then the third value of each grid cell.....all the way to value #140 of each grid cell. This would yield 140 values that would be plotted as a single line plot.  The variable containing these y-axis values is called "RCP1pctCO2Mean", which is 3-dimensional and has the following attributes:    class: RasterBrick
dimensions  : 64, 128, 8192, 140  (nrow, ncol, ncell, nlayers)
resolution  : 2.8125, 2.789327  (x, y)
extent      : -181.4062, 178.5938, -89.25846, 89.25846  (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
data source : in memory
names       :   layer.1,   layer.2,   layer.3,   layer.4,   layer.5,
layer.6,   layer.7,   layer.8,   layer.9,  layer.10,  layer.11,  layer.12,
layer.13,  layer.14,  layer.15, ...
min values  : 0.5261063, 0.5625295, 0.5301681, 0.6019284, 0.5177065,
0.6775601, 0.5336965, 0.5213086, 0.5971723, 0.5305891, 0.5514522,
0.5481200, 0.4681806, 0.5437223, 0.5988844, ...
max values  : 113.13776, 114.50780,  94.93643, 100.35409, 102.65459,
101.80622, 104.95480,  99.17839, 104.68667, 119.48342, 100.60391,
108.91896, 104.38969,  99.35735,  99.30752, ...     >dput(head(RCP1pctCO2ModelMean,5))
    structure(c(8.06056747436523, 7.75062637329102, 7.73271865844727,
    7.65678634643555, 7.75580596923828, 8.74016799926758, 8.28938064575195,
    8.10810775756836, 8.10339508056641, 7.86748199462891, 10.6165672302246,
    11.057600402832, 11.9450210571289, 12.3012786865234, 12.1853874206543,
    8.51755447387695, 9.16703491210938, 7.79627380371094, 7.53922271728516,
    8.14367599487305, 7.83845596313477, 8.22455596923828, 8.21650848388672,
    8.186181640625, 8.34122924804688, 9.1652702331543, 9.03225784301758,
    9.04341430664062, 8.98676376342774, 9.0090087890625, 10.5393569946289,
    11.1039672851562, 11.2379959106445, 11.333048248291, 12.0459312438965,
    10.0039085388184, 9.90224914550781, 9.24856033325195, 9.26007308959961,
    9.17901306152344, 9.55168991088867, 10.1229606628418, 10.4827072143555,
    11.0505676269531, 12.1166931152344, 9.01049194335937, 9.39016952514648,
    10.1307640075684, 9.67219467163086, 9.63750610351562, 8.14553070068359,
    8.06989059448242, 7.88368453979492, 7.78139190673828, 7.76021575927734,
    8.09026031494141, 8.47544021606445, 8.53607864379883, 9.07613296508789,
    8.45474319458008, 9.91985092163086, 10.0807098388672, 9.90288009643555,
    10.3433769226074, 10.349861907959, 11.2688484191895, 11.9406700134277,
    12.0929878234863, 11.8347038269043, 10.4144630432129, 12.5179420471191,
    13.8380874633789, 14.6360946655273, 14.0480010986328, 13.3910736083984,
    9.96924514770508, 10.3363311767578, 10.7060684204102, 10.889599609375,
    10.6653129577637, 10.5626991271973, 10.047868347168, 10.2751319885254,
    10.8663063049316, 11.7612907409668, 8.94287414550781, 9.23690567016602,
    8.96449661254883, 8.62908248901367, 8.30552215576172, 8.18369979858398,
    7.69772872924805, 7.5989143371582, 7.7111930847168, 7.66501693725586,
    10.2653533935547, 9.95307464599609, 9.71684875488281, 9.06423645019531,
    9.75586776733399, 9.83898010253906, 9.89386901855469, 9.82217864990234,
    9.5716667175293, 9.0698844909668, 9.32229309082031, 9.11556243896484,
    8.89283828735352, 9.28563232421875, 9.30773696899414, 7.3968879699707,
    7.93817901611328, 7.98456954956055, 7.95158386230469, 8.098583984375,
    8.80923156738281, 8.49755935668945, 8.15531387329102, 8.46451263427734,
    8.68563690185547, 8.89066619873047, 9.1489013671875, 9.33551254272461,
    10.1721000671387, 11.0765029907227, 8.04215698242188, 8.19046478271484,
    8.40826110839844, 8.67290573120117, 9.18575973510742, 8.3109245300293,
    9.11093368530273, 9.81162109375, 9.86040802001953, 9.50505447387695,
    10.5363166809082, 9.481689453125, 9.08926620483398, 9.52505798339844,
    8.68244476318359, 8.98393630981445, 10.1831520080566, 10.5507629394531,
    10.1666023254395, 9.69676284790039, 8.34152221679688, 8.42654571533203,
    8.35252838134766, 8.00343780517578, 7.82494201660156, 9.53874359130859,
    9.61768341064453, 9.41213912963867, 9.64521713256836, 10.2018295288086,
    10.4372673034668, 10.2102493286133, 11.5178192138672, 10.6066253662109,
    8.7693229675293, 10.0142112731934, 10.0218872070313, 9.85999298095703,
    9.61988754272461, 9.6459342956543, 8.68394012451172, 8.94484100341797,
    8.99103088378906, 9.28208084106445, 9.25485153198242, 9.43952713012695,
    9.46648941040039, 9.29736251831055, 9.17809677124023, 9.15292205810547,
    9.86052169799805, 9.73173980712891, 9.56215209960937, 9.07076568603516,
    8.6406623840332, 9.93644332885742, 10.4607345581055, 10.7315849304199,
    10.8101539611816, 10.7245536804199, 8.11333770751953, 8.19898986816406,
    9.07229690551758, 8.52103500366211, 8.86794967651367, 13.8089904785156,
    14.1628616333008, 14.1612731933594, 13.8391723632812, 13.4812423706055,
    10.3034606933594, 10.3893714904785, 10.6155006408691, 10.7073356628418,
    10.2250640869141, 10.7160522460937, 10.9937141418457, 11.4714202880859,
    11.451326751709, 11.2873542785645, 10.1245864868164, 10.7054138183594,
    11.2963111877441, 11.2652069091797, 11.1456642150879, 10.2463417053223,
    10.7579162597656, 10.9033828735352, 10.8239326477051, 10.9808113098145,
    9.11014785766602, 9.57601928710938, 9.13134765625, 8.95542297363281,
    9.004345703125, 10.011986541748, 10.4038223266602, 10.7760765075684,
    10.8257308959961, 11.1445190429687, 10.5380798339844, 10.2488784790039,
    10.957502746582, 10.7088333129883, 10.6826118469238, 8.83894119262695,
    9.23114776611328, 8.83077545166016, 8.79364471435547, 9.5740608215332,
    9.49266204833984, 9.36201629638672, 8.86088562011719, 8.70853042602539,
    8.84630584716797, 8.54691619873047, 9.06980133056641, 9.68758087158203,
    10.2382141113281, 11.163306427002, 8.64593887329102, 8.68509368896484,
    9.1695442199707, 9.96113128662109, 10.5646827697754, 10.6185249328613,
    11.3931076049805, 11.984349822998, 12.3294868469238, 12.6237396240234,
    9.07107849121094, 8.50119094848633, 8.165673828125, 8.46488571166992,
    8.7583610534668, 9.64865646362305, 11.1105819702148, 11.4002655029297,
    10.5027854919434, 10.1196365356445, 9.72924041748047, 10.009349822998,
    10.326407623291, 9.36514053344727, 7.79587249755859, 9.68682708740234,
    9.97370910644531, 10.053092956543, 10.0790946960449, 9.88732604980469,
    8.5629150390625, 8.67814178466797, 8.62764282226562, 8.40693130493164,
    8.43646850585938, 8.18491287231445, 8.28544006347656, 8.32042083740234,
    8.37117156982422, 8.74075393676758, 10.0410667419434, 9.86564865112305,
    9.83465423583984, 10.2372169494629, 10.6772819519043, 10.7158340454102,
    11.1418548583984, 11.3801231384277, 12.3574913024902, 12.7044395446777,
    10.933625793457, 10.1660957336426, 8.9215690612793, 9.42180328369141,
    10.0563125610352, 10.6793243408203, 10.605298614502, 10.532593536377,
    10.4527519226074, 10.4930633544922, 9.60543518066406, 9.36136474609375,
    9.02150115966797, 8.90760498046875, 9.39027709960937, 11.475407409668,
    11.8939018249512, 12.2665367126465, 12.3773796081543, 12.2639549255371,
    12.1986907958984, 12.9296035766602, 14.6138290405273, 12.5118690490723,
    11.1584533691406, 11.6089347839355, 12.184122467041, 12.7126617431641,
    12.8846618652344, 12.7170280456543, 10.4427520751953, 11.0104148864746,
    11.0574317932129, 10.7889305114746, 11.428002166748, 12.8730773925781,
    13.0610855102539, 13.9772033691406, 14.7699234008789, 15.2759140014648,
    11.0441619873047, 12.8132598876953, 13.1194686889648, 13.3944534301758,
    13.439665222168, 11.8274314880371, 12.5198951721191, 13.1492401123047,
    13.310026550293, 13.7720932006836, 10.7566696166992, 11.1153205871582,
    10.8651023864746, 10.8898574829102, 11.1934638977051, 10.3416526794434,
    10.3679290771484, 10.5599853515625, 10.4897705078125, 10.3551536560059,
    10.7984680175781, 9.9300895690918, 9.24563140869141, 8.82577590942383,
    8.11003036499023, 9.96226196289063, 10.2302505493164, 10.1707107543945,
    9.78019790649414, 9.43962249755859, 11.1743797302246, 11.4034492492676,
    10.9475212097168, 11.3065505981445, 11.3690071105957, 9.07691192626953,
    8.84776763916016, 8.99648666381836, 9.46799697875977, 10.1394309997559,
    9.5390739440918, 9.72808990478516, 10.1971199035645, 10.3575813293457,
    10.6958648681641, 12.1900230407715, 11.986629486084, 12.139289855957,
    12.308757019043, 12.2176116943359, 10.5569931030273, 10.2808883666992,
    9.90982055664062, 9.57319793701172, 9.34677658081055, 9.55350112915039,
    9.78641738891602, 10.0147956848145, 10.3079559326172, 10.7283164978027,
    8.64087753295899, 8.30433197021484, 8.60956497192383, 8.60016937255859,
    8.54900741577148, 9.71597595214844, 8.8296272277832, 8.63880462646484,
    8.47726745605469, 8.84029846191406, 10.1157096862793, 9.88607330322266,
    9.32783508300781, 9.36255416870117, 10.1161201477051, 11.8296203613281,
    12.8728881835937, 13.2580642700195, 13.5822448730469, 14.2079498291016,
    8.7088752746582, 8.82841796875, 9.62056427001953, 9.44509429931641,
    8.63022689819336, 10.438533782959, 10.7936264038086, 11.1668098449707,
    11.4698097229004, 11.6895088195801, 10.657413482666, 10.6490295410156,
    10.6090156555176, 10.7308578491211, 10.2125785827637, 8.9413688659668,
    8.8182373046875, 8.83381042480469, 8.8937255859375, 8.81535415649414,
    9.55851669311523, 9.21836166381836, 9.18197784423828, 9.25029678344726,
    9.27070083618164, 8.93240661621094, 8.90249099731445, 9.04313659667969,
    9.20108184814453, 9.35103607177734, 10.5618942260742, 11.06572265625,
    11.445832824707, 11.9180442810059, 11.9453758239746, 12.2584243774414,
    11.9192649841309, 11.7775825500488, 11.8008255004883, 12.2185432434082,
    9.08272094726562, 9.66560821533203, 9.48288192749023, 9.70498886108398,
    9.56975555419922, 10.349006652832, 10.0300796508789, 9.5968864440918,
    9.54965896606445, 9.00812759399414, 10.6454582214355, 10.7713653564453,
    11.4645782470703, 11.8325187683105, 10.4740211486816, 9.41022796630859,
    9.07474822998047, 8.61860656738281, 8.40045318603516, 8.653662109375,
    9.65197830200195, 9.63723449707031, 9.51137924194336, 9.57775497436523,
    9.69926528930664, 8.98936157226563, 9.40332794189453, 9.6757568359375,
    9.79740600585938, 9.78034057617188, 10.2542152404785, 10.1619010925293,
    10.3302688598633, 10.5525291442871, 10.7628135681152, 10.2399101257324,
    10.7667839050293, 10.9936302185059, 10.8458152770996, 10.6235733032227,
    9.24678955078125, 9.91125411987305, 9.86469879150391, 10.2658912658691,
    10.1045028686523, 8.5959098815918, 8.49214401245117, 8.39304656982422,
    8.6228157043457, 8.61747360229492, 8.91071395874024, 8.69116439819336,
    8.56472625732422, 8.52434997558594, 8.64141616821289, 11.7017639160156,
    12.3285125732422, 12.0996276855469, 11.056103515625, 10.7624618530273,
    11.0327911376953, 12.0061622619629, 11.4006072998047, 10.8051193237305,
    9.97594757080078, 10.138427734375, 10.6871589660645, 11.5516906738281,
    12.4771171569824, 12.7644668579102, 9.02487182617188, 8.8429817199707,
    9.50254135131836, 9.22763977050781, 8.60505981445312, 9.68806610107422,
    9.77085647583008, 9.95944061279297, 10.3024574279785, 10.7512054443359,
    8.78317031860352, 8.94360504150391, 9.19855346679688, 9.44350967407227,
    10.2734016418457, 11.8314613342285, 12.4076805114746, 12.5829055786133,
    12.3372856140137, 11.6992652893066, 8.82733459472656, 8.83338012695313,
    9.01612014770508, 9.31243057250976, 9.52871017456055, 9.1939811706543,
    9.20086669921875, 9.17466049194336, 9.3692512512207, 9.51042022705078,
    9.55322723388672, 9.08766632080078, 9.01230697631836, 9.08840942382812,
    8.89073867797851, 10.0157516479492, 9.88614654541016, 9.88927917480469,
    9.89448471069336, 9.81435546875, 10.0982810974121, 10.8838890075684,
    12.3737106323242, 12.0203163146973, 12.3476577758789, 8.12273559570312,
    8.38578720092773, 8.5104736328125, 8.67580947875977, 8.8884521484375,
    11.280297088623, 9.81758041381836, 9.12517623901367, 9.57337417602539,
    9.93379745483398, 9.97190170288086, 9.9986442565918, 10.1007339477539,
    10.368416595459, 10.8695823669434, 10.6418167114258, 10.1072540283203,
    9.56202163696289, 10.1464050292969, 11.0315299987793, 15.5208480834961,
    16.458154296875, 16.6033325195312, 16.9603851318359, 17.5446258544922,
    11.6627197265625, 11.2967132568359, 11.0439735412598, 10.7337928771973,
    10.724112701416, 10.414665222168, 10.1816375732422, 10.0053001403809,
    10.0604530334473, 10.3831871032715, 12.5386772155762, 12.61123046875,
    11.556861114502, 10.815104675293, 10.3798713684082, 12.8164276123047,
    12.5301361083984, 12.1416007995605, 11.1006622314453, 10.5525985717773,
    12.7033218383789, 13.5069030761719, 14.3273956298828, 14.1952850341797,
    13.8862731933594, 11.5364295959473, 11.4725784301758, 11.4327659606934,
    11.6338516235352, 11.9929733276367, 10.9388458251953, 10.3944259643555,
    10.7864356994629, 10.4639877319336, 10.4192794799805, 10.584090423584,
    11.0457565307617, 11.1049293518066, 11.2156471252441, 11.2940994262695,
    11.5789703369141, 11.3852058410645, 11.312281036377, 10.8983863830566,
    10.7498306274414, 11.648999786377, 12.1443000793457, 12.3075752258301,
    12.4243774414062, 12.5793846130371, 9.53582992553711, 10.3421630859375,
    10.6005973815918, 10.7018409729004, 10.1489151000977, 15.3236968994141,
    16.6732727050781, 17.0259368896484, 16.9183380126953, 18.6379180908203,
    11.5663963317871, 13.1421661376953, 15.772624206543, 15.2286743164063,
    14.1305938720703, 10.4395881652832, 10.3302070617676, 10.3431907653809,
    10.6234725952148, 10.6850440979004, 10.1355682373047, 10.7770133972168,
    11.2220344543457, 11.121208190918, 10.9759727478027, 10.4280487060547,
    11.4163436889648, 11.5880157470703, 11.367276763916, 11.7584564208984,
    12.3622993469238, 12.8618209838867, 13.0096267700195, 12.7293991088867,
    12.3698738098145, 13.4502487182617, 13.9361175537109, 14.3981384277344,
    14.8455154418945, 14.7898071289063, 10.8285942077637, 11.0353393554688,
    13.0554183959961, 11.4933654785156, 10.6509674072266, 12.3171768188477,
    11.9701278686523, 11.7984405517578, 11.3652336120605, 11.2212104797363,
    11.7747032165527, 12.0631629943848, 11.609635925293, 12.5300575256348,
    12.5889640808105, 14.9442291259766, 15.244026184082, 15.1138778686523,
    14.8327117919922, 14.0672607421875, 13.8624649047852, 14.0361633300781,
    13.746142578125, 13.3890182495117, 12.7229309082031, 11.7338531494141,
    12.4392601013184, 12.6126739501953, 12.3359680175781, 12.0300300598145,
    13.0475494384766, 13.4870010375977, 13.1330673217773, 12.8889770507812,
    11.5218353271484, 12.9545684814453, 12.6848930358887, 12.5185249328613,
    12.1927146911621, 12.1243927001953, 13.6282653808594, 13.0329132080078,
    14.021321105957, 12.7892906188965, 11.5679710388184, 12.4451988220215,
    12.6035362243652, 12.8059692382812, 13.2598541259766, 14.1865646362305,
    11.4154563903809, 12.0055801391602, 12.315015411377, 12.8833023071289,
    13.0320266723633, 11.3923133850098, 12.2035797119141, 12.3115371704102,
    12.4416717529297, 12.8906295776367, 11.4880004882812, 11.4702560424805,
    11.063402557373, 11.520093536377, 11.4941116333008, 10.2884147644043,
    10.4248268127441, 10.2943084716797, 10.4938522338867, 10.171199798584,
    10.8181655883789, 10.7096382141113, 10.3980682373047, 9.85380783081055,
    9.06302337646484, 11.087833404541, 11.297770690918, 11.4384208679199,
    11.8333045959473, 12.6423866271973, 11.0677742004395, 11.1663566589355,
    14.6535186767578, 12.696688079834, 11.9809646606445, 12.5395179748535,
    13.5047088623047, 13.6589874267578, 13.3168762207031, 13.8064010620117,
    13.2664398193359, 12.1466331481934, 11.7755020141602, 11.2214569091797,
    11.967204284668, 13.3286544799805, 13.0230804443359, 12.4111663818359,
    11.5664184570313, 11.507154083252, 10.7482841491699, 10.2523262023926,
    10.5137763977051, 10.6416915893555, 10.925708770752, 12.1461143493652,
    12.5572776794434, 13.0962661743164, 14.0371612548828, 15.6014785766602,
    12.1392105102539, 12.4931434631348, 12.5056259155273, 12.1932655334473,
    12.1573226928711, 12.3337669372559, 12.2943237304688, 12.3938110351563,
    12.3535987854004, 12.2837997436523, 11.199015045166, 11.0299026489258,
    11.4233680725098, 11.3639068603516, 10.776929473877, 15.9578018188477,
    18.5940185546875, 16.6747985839844, 12.2459892272949, 11.7588233947754,
    10.8550109863281, 9.30074844360352, 9.1522102355957, 9.23973083496094,
    9.94997406005859, 21.4329086303711, 20.6476043701172, 20.4366928100586,
    19.5227752685547, 18.6518371582031, 13.4605987548828, 13.7962448120117,
    14.7393859863281, 14.0098480224609, 13.7022705078125, 13.8268768310547,
    13.9131362915039, 14.1420150756836, 14.5985153198242, 15.3337585449219,
    10.2976509094238, 10.6874450683594, 10.6152442932129, 10.3048629760742,
    10.0026962280273, 10.8500930786133, 12.313077545166, 12.8156112670898,
    12.4003845214844, 12.062833404541, 11.8806510925293, 11.9595237731934,
    12.7401191711426, 13.2080368041992, 12.648217010498, 14.9934814453125,
    16.2576446533203, 16.2247314453125, 15.6419891357422, 14.6681213378906,
    10.2608001708984, 10.204532623291, 10.8466209411621, 10.8580635070801,
    10.5870002746582, 12.5249855041504, 13.235661315918, 13.3415161132812,
    13.2680938720703, 13.6001312255859, 10.9847831726074, 10.9526977539062,
    12.1701835632324, 10.9867134094238, 9.62559356689453, 14.671305847168,
    15.7670822143555, 16.5200897216797, 17.2838760375977, 18.5971923828125,
    12.4218063354492, 11.5890487670898, 11.3723731994629, 11.5280731201172,
    12.0742370605469, 11.0745147705078, 10.6635795593262, 10.507258605957,
    10.358984375, 10.2047622680664, 11.231372833252, 11.1456260681152,
    10.8480117797852, 10.3289199829102, 9.81418380737305, 13.1054672241211,
    13.3634078979492, 13.6211837768555, 14.0335067749023, 13.8940582275391,
    11.4586517333984, 11.3107444763184, 12.1839057922363, 11.6442543029785,
    10.0313461303711, 11.5685440063477, 13.461506652832, 13.9238220214844,
    12.9616546630859, 12.0961059570313, 15.3089569091797, 14.529133605957,
    12.9434677124023, 11.6556198120117, 10.7868843078613, 13.7810775756836,
    14.6285568237305, 14.3505905151367, 12.6306495666504, 11.0644081115723,
    13.6406951904297, 13.0658325195313, 11.6025444030762, 10.8227111816406,
    10.6873641967773, 14.1373397827148, 15.3703903198242, 16.4337646484375,
    16.3727081298828, 16.0835571289062, 9.32263946533203, 9.81831588745117,
    10.2201850891113, 10.4734298706055, 10.432006072998, 9.83030319213867,
    9.97000503540039, 10.0799949645996, 10.1364440917969, 10.2572006225586,
    ...
     .Dim = c(10L, 140L), .Dimnames = list(NULL,
    c("layer.1", "layer.2", "layer.3", "layer.4", "layer.5",
    "layer.6", "layer.7", "layer.8", "layer.9", "layer.10", "layer.11",
    "layer.12", "layer.13", "layer.14", "layer.15", "layer.16",
    "layer.17", "layer.18", "layer.19", "layer.20", "layer.21",
    "layer.22", "layer.23", "layer.24", "layer.25", "layer.26",
    "layer.27", "layer.28", "layer.29", "layer.30", "layer.31",
    "layer.32", "layer.33", "layer.34", "layer.35", "layer.36",
    "layer.37", "layer.38", "layer.39", "layer.40", "layer.41",
    "layer.42", "layer.43", "layer.44", "layer.45", "layer.46",
    "layer.47", "layer.48", "layer.49", "layer.50", "layer.51",
    "layer.52", "layer.53", "layer.54", "layer.55", "layer.56",
    "layer.57", "layer.58", "layer.59", "layer.60", "layer.61",
    "layer.62", "layer.63", "layer.64", "layer.65", "layer.66",
    "layer.67", "layer.68", "layer.69", "layer.70", "layer.71",
    "layer.72", "layer.73", "layer.74", "layer.75", "layer.76",
    "layer.77", "layer.78", "layer.79", "layer.80", "layer.81",
    "layer.82", "layer.83", "layer.84", "layer.85", "layer.86",
    "layer.87", "layer.88", "layer.89", "layer.90", "layer.91",
    "layer.92", "layer.93", "layer.94", "layer.95", "layer.96",
    "layer.97", "layer.98", "layer.99", "layer.100", "layer.101",
    "layer.102", "layer.103", "layer.104", "layer.105", "layer.106",
    "layer.107", "layer.108", "layer.109", "layer.110", "layer.111",
    "layer.112", "layer.113", "layer.114", "layer.115", "layer.116",
    "layer.117", "layer.118", "layer.119", "layer.120", "layer.121",
    "layer.122", "layer.123", "layer.124", "layer.125", "layer.126",
    "layer.127", "layer.128", "layer.129", "layer.130", "layer.131",
    "layer.132", "layer.133", "layer.134", "layer.135", "layer.136",
    "layer.137", "layer.138", "layer.139", "layer.140")))
For the x-axis, I already have 140 values to be plotted. The x variable is called "RCP1pctCO2cumulative" and is 1-dimensional. Here are the values:
dput(RCP1pctCO2cumulative)
    c(0, 0.00697490638121963, 0.0139075990766287, 0.021697436273098,
    0.0302329704165459, 0.0389980841428041, 0.0486239280551672,
    0.0591636016964912, 0.0698652867227793, 0.0806971430778503, 0.0917696304619312,
    0.102874741703272, 0.115288959443569, 0.127942492067814, 0.140930585563183, 0.154951927065849,
    0.169483987987041, 0.18332038372755, 0.197460225224495, 0.211912712454796,
    0.227608525753021, 0.243575794994831, 0.257900005578995, 0.273098181188107,
    0.288984017074108, 0.305822652578354, 0.321933174133301, 0.338437202572823,
    0.356079193949699, 0.373604437708855, 0.389580103754997, 0.406976979970932,
    0.423514771461487, 0.440741804242134, 0.459019854664803, 0.477243804931641,
    0.494844323396683, 0.511731442809105, 0.529583910107613, 0.54879242181778,
    0.568029862642288, 0.587030050158501, 0.606201952695847, 0.626413214206696,
    0.645859175920486, 0.66550235748291, 0.685490393638611, 0.705517685413361,
    0.725719237327576, 0.74520371556282, 0.764879602193832, 0.78538470864296,
    0.806885379552841, 0.827258145809174, 0.847640424966812, 0.869502395391464,
    0.891108268499374, 0.912525850534439, 0.934271132946014, 0.956432664394379,
    0.977902102470398, 0.999574398994446, 1.02313443422317, 1.0449088037014,
    1.06765602231026, 1.09229186177254, 1.11614397168159, 1.13850414156914,
    1.16062269210815, 1.18386173844337, 1.2078672170639, 1.23217906951904,
    1.25505521297455, 1.27949770689011, 1.30394254922867, 1.32788743972778,
    1.35124933719635, 1.37474408149719, 1.39838930368423, 1.42129179239273,
    1.44566521644592, 1.47075144052506, 1.49397988319397, 1.51616193056107,
    1.54051134586334, 1.56606665849686, 1.59053231477737, 1.61592463254929,
    1.64096541404724, 1.66613935232162, 1.69049085378647, 1.71510955095291,
    1.73991868495941, 1.76491104364395, 1.79114699363708, 1.81589571237564,
    1.84101955890656, 1.864857172966, 1.8899533867836, 1.91575677394867,
    1.9422261595726, 1.96840007305145, 1.99298502206802, 2.01899757385254,
    2.04547454118729, 2.07122528553009, 2.09852977991104, 2.12717348337173,
    2.15352830886841, 2.17984690666199, 2.20684263706207, 2.23266286849976,
    2.25915194749832, 2.28647100925446, 2.31463184356689, 2.34280925989151,
    2.36965861320496, 2.39779574871063, 2.42558825016022, 2.45266799926758,
    2.48168079853058, 2.50962221622467, 2.53702754974365, 2.56574511528015,
    2.59377150535583, 2.62192821502686, 2.6505597114563, 2.68051118850708,
    2.70983340740204, 2.73927145004272, 2.76805067062378, 2.79780313968658,
    2.8272668838501, 2.85747616291046, 2.88714888095856, 2.91689431667328,
    2.94743349552155, 2.97868416309357, 3.00965495109558, 3.03861720561981
I tried doing something like this to start:
expansion <- expand.grid(103:116, 3:16) #to specify a range of longitudes  and latitudes
    >lonlat <- extract(RCP1pctCO2Mean, expansion)   >plot(RCP1pctCO2cumulative, lonlat, type="l",col="green", lwd="3",
    xlab="Cumulative emissions (TtC)", ylab="One-day maximum precipitation
    (mm/day)", main="Test model")

But this yields the error:
    Error in xy.coords(x, y, xlabel, ylabel, log) :
    'x' and 'y' lengths differ
If it helps, here are the dimensions of the new variables created:

dim(lonlat)
    [1] 196   140

dim(expansion)

    [1] 196   2

What could I be doing wrong (the lengths appear to be the same)? Ultimately, the goal would be to plot the 140 values as a function of emissions (i.e. "RCP1pctCO2Mean" as a function of "RCP1pctCO2cumulative" once each of those selected grid cells are aggregated). The above works absolutely fine when just selecting "one" specific grid cell, but not an aggregate of grid cells. Is this possible to do for an aggregate of grid cells?
Thanks, and any assistance would be greatly appreciated!
[[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org<mailto:R-sig-Geo at r-project.org>
https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-geo&amp;data=02%7C01%7Ckkilpatrick%40rsmas.miami.edu%7C59333f2be1214c2ef12f08d6c859dc6e%7C2a144b72f23942d48c0e6f0f17c48e33%7C0%7C0%7C636916685638215109&amp;sdata=myKpQUhzVczqH4E4fXt%2FBOr6rPWjOW9rpdsy6RXLq%2Bc%3D&amp;reserved=0


	[[alternative HTML version deleted]]


From r@i@1290 m@iii@g oii @im@com  Wed Apr 24 18:15:43 2019
From: r@i@1290 m@iii@g oii @im@com (r@i@1290 m@iii@g oii @im@com)
Date: Wed, 24 Apr 2019 16:15:43 +0000 (UTC)
Subject: [R-sig-Geo] Selecting a range of longitudes and latitudes for
 plotting
In-Reply-To: <D7714A9E-E805-4A55-9328-40B0F469E84B@miami.edu>
References: <1930744393.4832724.1556071735672.ref@mail.yahoo.com>
 <1930744393.4832724.1556071735672@mail.yahoo.com>
 <D7714A9E-E805-4A55-9328-40B0F469E84B@miami.edu>
Message-ID: <1256174418.5118273.1556122543225@mail.yahoo.com>

Hi Kay (and everyone),

Thank you very much for your reply! I tried your suggestion, but, unfortunately, the error persists when trying to plot the 140 data points (coming from the individual averages of each layer across each of the, in this case, 196 grid cells selected - i.e. the average of layer 1 across all grid cells, then the average of layer 2 across all grid cells, then the average of layer 3 across all grid cells.....all the way to the average of layer 140 across all grid cells - so, effectively, 140 values):
>plot(RCP1pctCO2cumulative,lonlat, type="l",col="green", lwd="3", xlab="Cumulative emissions (TtC)", ylab="One-day maximum precipitation (mm/day)", main="CanESM2")

"RCP1pctCO2cumulative" was created like this:
>RCP1pctCO2cumulative <- rowMeans(cbind(get, IPSL, IPSLMR, IPSL5, MIROC, HadGEM, MPI, MPI5, GFDL, GFDL5)) #To get means of each element of x-variables (Ttc carbon)

For example, "get" and the other x variables listed there, look like this:
>get
  [1] 0.00000000 0.00644777 0.01250601 0.01746194 0.02656210 0.03360072 0.04399755 0.05404601 0.06154399 0.07105423
 [11] 0.08315538 0.08925389 0.10060635 0.10833009 0.12196157 0.13730928 0.14890850 0.16087072 0.17361501 0.18310140
 [21] 0.19810085 0.21316248 0.22423607 0.23529990 0.24695577 0.26119599 0.27643532 0.28517213 0.29978970 0.31870887
 [31] 0.33418021 0.34585044 0.36071229 0.37379062 0.39324498 0.41099992 0.42437476 0.43643925 0.44687960 0.45864752
 [41] 0.48055932 0.49634662 0.50779009 0.52861303 0.54971600 0.56138206 0.57472491 0.59202033 0.60975420 0.63057494
 [51] 0.64653736 0.66088217 0.68168259 0.69649595 0.71363837 0.72988760 0.75010443 0.76776582 0.78613955 0.81099886
 [61] 0.82979667 0.84431553 0.86824787 0.88447672 0.89909577 0.92162514 0.94854647 0.96631038 0.98120815 1.00357985
 [71] 1.02769291 1.04733002 1.06585240 1.09083056 1.11592567 1.13627303 1.15866983 1.17941856 1.19748724 1.22012913
 [81] 1.24142718 1.26937973 1.29283488 1.31011736 1.33134723 1.36014366 1.38395822 1.40615380 1.42895305 1.45046842
 [91] 1.47504234 1.49920797 1.52142668 1.54559219 1.57354927 1.60000896 1.62449229 1.64506662 1.67100036 1.70185161
[101] 1.72964287 1.75235510 1.77455521 1.80183053 1.83121216 1.85619974 1.88188243 1.91002214 1.93333006 1.96133912
[111] 1.98944890 2.01225924 2.03804183 2.06614304 2.09558916 2.12400699 2.14846969 2.18011498 2.20532560 2.23031592
[121] 2.26106715 2.28796983 2.31954741 2.35274339 2.37794161 2.40643740 2.43963051 2.46948838 2.49733877 2.53035021
[131] 2.56229091 2.59265327 2.61934137 2.64592481 2.67754769 2.70779777 2.73824191 2.76880598 2.80077982 2.83057237?
Thanks, and I look forward to your response!

-----Original Message-----
From: Kilpatrick, Katherine A <kkilpatrick at rsmas.miami.edu>
To: rain1290 at aim.com <rain1290 at aim.com>
Cc: r-sig-geo at r-project.org <r-sig-geo at r-project.org>
Sent: Wed, Apr 24, 2019 10:59 am
Subject: Re: [R-sig-Geo] Selecting a range of longitudes and latitudes for plotting

Hi;
The reason you are getting that error message is you are trying to plot a 1 dimension array by a 2 dimensional array.
I think simply adding the argument ?fun = mean to your extraction of the RCP1pctCO2Mean brick will solve the confusion.?As you have it written you are extracting 196 grid cells ?for all 140 layers ending up with a 2d array???latlon <- extract(RCP1pctCO2Mean, expansion, fun=mean)?Should ?give you 140 values in a 1d array that represent the average of the cells in the grid subset for each of the 140 layers in the brick.
Assuming of course that this is what you were after.?I had to read between the lines a bit not knowing really how RCP1pctCO2cumulative was created -- other than it was precomputed and had a length of 140.
btw: Cellstats would give you the average of the nlayers at each of the 196 grid cells ?eg. a 1 d array of 196.
Kay


On Apr 23, 2019, at 10:08 PM, rain1290--- via R-sig-Geo <r-sig-geo at r-project.org> wrote:
Hi there,
I am trying to select a range of latitude and longitudes (and all grid cells within that range) to plot y-axis values (precipitation) as a function of x-axis values (emissions) based on aggregating (averaging) each of those grid cells. Thus, let's say that I wanted to aggregate/average each of the values of these grid cells and plot this as a function x-axis values. The values already computed for each grid cell for the y-axis correspond to average precipitation and consist of 140 values per grid cell. So, the idea would be the average the first value of each grid cell, then the second value of each grid cell, then the third value of each grid cell.....all the way to value #140 of each grid cell. This would yield 140 values that would be plotted as a single line plot.? The variable containing these y-axis values is called "RCP1pctCO2Mean", which is 3-dimensional and has the following attributes:? ??class: RasterBrick
dimensions? : 64, 128, 8192, 140? (nrow, ncol, ncell, nlayers)
resolution? : 2.8125, 2.789327? (x, y)
extent????? : -181.4062, 178.5938, -89.25846, 89.25846? (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names?????? :?? layer.1,?? layer.2,?? layer.3,?? layer.4,?? layer.5,???? 
layer.6,?? layer.7,?? layer.8,?? layer.9,? layer.10,? layer.11,? layer.12,? 
layer.13,? layer.14,? layer.15, ... 
min values? : 0.5261063, 0.5625295, 0.5301681, 0.6019284, 0.5177065,? 
0.6775601, 0.5336965, 0.5213086, 0.5971723, 0.5305891, 0.5514522,?? 
0.5481200, 0.4681806, 0.5437223, 0.5988844, ... 
max values? : 113.13776, 114.50780,? 94.93643, 100.35409, 102.65459, 
101.80622, 104.95480,? 99.17839, 104.68667, 119.48342, 100.60391, 
108.91896, 104.38969,? 99.35735,? 99.30752, ... ? ??>dput(head(RCP1pctCO2ModelMean,5))
??? structure(c(8.06056747436523, 7.75062637329102, 7.73271865844727, 
??? 7.65678634643555, 7.75580596923828, 8.74016799926758, 8.28938064575195, 
??? 8.10810775756836, 8.10339508056641, 7.86748199462891, 10.6165672302246, 
??? 11.057600402832, 11.9450210571289, 12.3012786865234, 12.1853874206543, 
??? 8.51755447387695, 9.16703491210938, 7.79627380371094, 7.53922271728516, 
??? 8.14367599487305, 7.83845596313477, 8.22455596923828, 8.21650848388672, 
??? 8.186181640625, 8.34122924804688, 9.1652702331543, 9.03225784301758, 
??? 9.04341430664062, 8.98676376342774, 9.0090087890625, 10.5393569946289, 
??? 11.1039672851562, 11.2379959106445, 11.333048248291, 12.0459312438965, 
??? 10.0039085388184, 9.90224914550781, 9.24856033325195, 9.26007308959961, 
??? 9.17901306152344, 9.55168991088867, 10.1229606628418, 10.4827072143555, 
??? 11.0505676269531, 12.1166931152344, 9.01049194335937, 9.39016952514648, 
??? 10.1307640075684, 9.67219467163086, 9.63750610351562, 8.14553070068359, 
??? 8.06989059448242, 7.88368453979492, 7.78139190673828, 7.76021575927734, 
??? 8.09026031494141, 8.47544021606445, 8.53607864379883, 9.07613296508789, 
??? 8.45474319458008, 9.91985092163086, 10.0807098388672, 9.90288009643555, 
??? 10.3433769226074, 10.349861907959, 11.2688484191895, 11.9406700134277, 
??? 12.0929878234863, 11.8347038269043, 10.4144630432129, 12.5179420471191, 
??? 13.8380874633789, 14.6360946655273, 14.0480010986328, 13.3910736083984, 
??? 9.96924514770508, 10.3363311767578, 10.7060684204102, 10.889599609375, 
??? 10.6653129577637, 10.5626991271973, 10.047868347168, 10.2751319885254, 
??? 10.8663063049316, 11.7612907409668, 8.94287414550781, 9.23690567016602, 
??? 8.96449661254883, 8.62908248901367, 8.30552215576172, 8.18369979858398, 
??? 7.69772872924805, 7.5989143371582, 7.7111930847168, 7.66501693725586, 
??? 10.2653533935547, 9.95307464599609, 9.71684875488281, 9.06423645019531, 
??? 9.75586776733399, 9.83898010253906, 9.89386901855469, 9.82217864990234, 
??? 9.5716667175293, 9.0698844909668, 9.32229309082031, 9.11556243896484, 
??? 8.89283828735352, 9.28563232421875, 9.30773696899414, 7.3968879699707, 
??? 7.93817901611328, 7.98456954956055, 7.95158386230469, 8.098583984375, 
??? 8.80923156738281, 8.49755935668945, 8.15531387329102, 8.46451263427734, 
??? 8.68563690185547, 8.89066619873047, 9.1489013671875, 9.33551254272461, 
??? 10.1721000671387, 11.0765029907227, 8.04215698242188, 8.19046478271484, 
??? 8.40826110839844, 8.67290573120117, 9.18575973510742, 8.3109245300293, 
??? 9.11093368530273, 9.81162109375, 9.86040802001953, 9.50505447387695, 
??? 10.5363166809082, 9.481689453125, 9.08926620483398, 9.52505798339844, 
??? 8.68244476318359, 8.98393630981445, 10.1831520080566, 10.5507629394531, 
??? 10.1666023254395, 9.69676284790039, 8.34152221679688, 8.42654571533203, 
??? 8.35252838134766, 8.00343780517578, 7.82494201660156, 9.53874359130859, 
??? 9.61768341064453, 9.41213912963867, 9.64521713256836, 10.2018295288086, 
??? 10.4372673034668, 10.2102493286133, 11.5178192138672, 10.6066253662109, 
??? 8.7693229675293, 10.0142112731934, 10.0218872070313, 9.85999298095703, 
??? 9.61988754272461, 9.6459342956543, 8.68394012451172, 8.94484100341797, 
??? 8.99103088378906, 9.28208084106445, 9.25485153198242, 9.43952713012695, 
??? 9.46648941040039, 9.29736251831055, 9.17809677124023, 9.15292205810547, 
??? 9.86052169799805, 9.73173980712891, 9.56215209960937, 9.07076568603516, 
??? 8.6406623840332, 9.93644332885742, 10.4607345581055, 10.7315849304199, 
??? 10.8101539611816, 10.7245536804199, 8.11333770751953, 8.19898986816406, 
??? 9.07229690551758, 8.52103500366211, 8.86794967651367, 13.8089904785156, 
??? 14.1628616333008, 14.1612731933594, 13.8391723632812, 13.4812423706055, 
??? 10.3034606933594, 10.3893714904785, 10.6155006408691, 10.7073356628418, 
??? 10.2250640869141, 10.7160522460937, 10.9937141418457, 11.4714202880859, 
??? 11.451326751709, 11.2873542785645, 10.1245864868164, 10.7054138183594, 
??? 11.2963111877441, 11.2652069091797, 11.1456642150879, 10.2463417053223, 
??? 10.7579162597656, 10.9033828735352, 10.8239326477051, 10.9808113098145, 
??? 9.11014785766602, 9.57601928710938, 9.13134765625, 8.95542297363281, 
??? 9.004345703125, 10.011986541748, 10.4038223266602, 10.7760765075684, 
??? 10.8257308959961, 11.1445190429687, 10.5380798339844, 10.2488784790039, 
??? 10.957502746582, 10.7088333129883, 10.6826118469238, 8.83894119262695, 
??? 9.23114776611328, 8.83077545166016, 8.79364471435547, 9.5740608215332, 
??? 9.49266204833984, 9.36201629638672, 8.86088562011719, 8.70853042602539, 
??? 8.84630584716797, 8.54691619873047, 9.06980133056641, 9.68758087158203, 
??? 10.2382141113281, 11.163306427002, 8.64593887329102, 8.68509368896484, 
??? 9.1695442199707, 9.96113128662109, 10.5646827697754, 10.6185249328613, 
??? 11.3931076049805, 11.984349822998, 12.3294868469238, 12.6237396240234, 
??? 9.07107849121094, 8.50119094848633, 8.165673828125, 8.46488571166992, 
??? 8.7583610534668, 9.64865646362305, 11.1105819702148, 11.4002655029297, 
??? 10.5027854919434, 10.1196365356445, 9.72924041748047, 10.009349822998, 
??? 10.326407623291, 9.36514053344727, 7.79587249755859, 9.68682708740234, 
??? 9.97370910644531, 10.053092956543, 10.0790946960449, 9.88732604980469, 
??? 8.5629150390625, 8.67814178466797, 8.62764282226562, 8.40693130493164, 
??? 8.43646850585938, 8.18491287231445, 8.28544006347656, 8.32042083740234, 
??? 8.37117156982422, 8.74075393676758, 10.0410667419434, 9.86564865112305, 
??? 9.83465423583984, 10.2372169494629, 10.6772819519043, 10.7158340454102, 
??? 11.1418548583984, 11.3801231384277, 12.3574913024902, 12.7044395446777, 
??? 10.933625793457, 10.1660957336426, 8.9215690612793, 9.42180328369141, 
??? 10.0563125610352, 10.6793243408203, 10.605298614502, 10.532593536377, 
??? 10.4527519226074, 10.4930633544922, 9.60543518066406, 9.36136474609375, 
??? 9.02150115966797, 8.90760498046875, 9.39027709960937, 11.475407409668, 
??? 11.8939018249512, 12.2665367126465, 12.3773796081543, 12.2639549255371, 
??? 12.1986907958984, 12.9296035766602, 14.6138290405273, 12.5118690490723, 
??? 11.1584533691406, 11.6089347839355, 12.184122467041, 12.7126617431641, 
??? 12.8846618652344, 12.7170280456543, 10.4427520751953, 11.0104148864746, 
??? 11.0574317932129, 10.7889305114746, 11.428002166748, 12.8730773925781, 
??? 13.0610855102539, 13.9772033691406, 14.7699234008789, 15.2759140014648, 
??? 11.0441619873047, 12.8132598876953, 13.1194686889648, 13.3944534301758, 
??? 13.439665222168, 11.8274314880371, 12.5198951721191, 13.1492401123047, 
??? 13.310026550293, 13.7720932006836, 10.7566696166992, 11.1153205871582, 
??? 10.8651023864746, 10.8898574829102, 11.1934638977051, 10.3416526794434, 
??? 10.3679290771484, 10.5599853515625, 10.4897705078125, 10.3551536560059, 
??? 10.7984680175781, 9.9300895690918, 9.24563140869141, 8.82577590942383, 
??? 8.11003036499023, 9.96226196289063, 10.2302505493164, 10.1707107543945, 
??? 9.78019790649414, 9.43962249755859, 11.1743797302246, 11.4034492492676, 
??? 10.9475212097168, 11.3065505981445, 11.3690071105957, 9.07691192626953, 
??? 8.84776763916016, 8.99648666381836, 9.46799697875977, 10.1394309997559, 
??? 9.5390739440918, 9.72808990478516, 10.1971199035645, 10.3575813293457, 
??? 10.6958648681641, 12.1900230407715, 11.986629486084, 12.139289855957, 
??? 12.308757019043, 12.2176116943359, 10.5569931030273, 10.2808883666992, 
??? 9.90982055664062, 9.57319793701172, 9.34677658081055, 9.55350112915039, 
??? 9.78641738891602, 10.0147956848145, 10.3079559326172, 10.7283164978027, 
??? 8.64087753295899, 8.30433197021484, 8.60956497192383, 8.60016937255859, 
??? 8.54900741577148, 9.71597595214844, 8.8296272277832, 8.63880462646484, 
??? 8.47726745605469, 8.84029846191406, 10.1157096862793, 9.88607330322266, 
??? 9.32783508300781, 9.36255416870117, 10.1161201477051, 11.8296203613281, 
??? 12.8728881835937, 13.2580642700195, 13.5822448730469, 14.2079498291016, 
??? 8.7088752746582, 8.82841796875, 9.62056427001953, 9.44509429931641, 
??? 8.63022689819336, 10.438533782959, 10.7936264038086, 11.1668098449707, 
??? 11.4698097229004, 11.6895088195801, 10.657413482666, 10.6490295410156, 
??? 10.6090156555176, 10.7308578491211, 10.2125785827637, 8.9413688659668, 
??? 8.8182373046875, 8.83381042480469, 8.8937255859375, 8.81535415649414, 
??? 9.55851669311523, 9.21836166381836, 9.18197784423828, 9.25029678344726, 
??? 9.27070083618164, 8.93240661621094, 8.90249099731445, 9.04313659667969, 
??? 9.20108184814453, 9.35103607177734, 10.5618942260742, 11.06572265625, 
??? 11.445832824707, 11.9180442810059, 11.9453758239746, 12.2584243774414, 
??? 11.9192649841309, 11.7775825500488, 11.8008255004883, 12.2185432434082, 
??? 9.08272094726562, 9.66560821533203, 9.48288192749023, 9.70498886108398, 
??? 9.56975555419922, 10.349006652832, 10.0300796508789, 9.5968864440918, 
??? 9.54965896606445, 9.00812759399414, 10.6454582214355, 10.7713653564453, 
??? 11.4645782470703, 11.8325187683105, 10.4740211486816, 9.41022796630859, 
??? 9.07474822998047, 8.61860656738281, 8.40045318603516, 8.653662109375, 
??? 9.65197830200195, 9.63723449707031, 9.51137924194336, 9.57775497436523, 
??? 9.69926528930664, 8.98936157226563, 9.40332794189453, 9.6757568359375, 
??? 9.79740600585938, 9.78034057617188, 10.2542152404785, 10.1619010925293, 
??? 10.3302688598633, 10.5525291442871, 10.7628135681152, 10.2399101257324, 
??? 10.7667839050293, 10.9936302185059, 10.8458152770996, 10.6235733032227, 
??? 9.24678955078125, 9.91125411987305, 9.86469879150391, 10.2658912658691, 
??? 10.1045028686523, 8.5959098815918, 8.49214401245117, 8.39304656982422, 
??? 8.6228157043457, 8.61747360229492, 8.91071395874024, 8.69116439819336, 
??? 8.56472625732422, 8.52434997558594, 8.64141616821289, 11.7017639160156, 
??? 12.3285125732422, 12.0996276855469, 11.056103515625, 10.7624618530273, 
??? 11.0327911376953, 12.0061622619629, 11.4006072998047, 10.8051193237305, 
??? 9.97594757080078, 10.138427734375, 10.6871589660645, 11.5516906738281, 
??? 12.4771171569824, 12.7644668579102, 9.02487182617188, 8.8429817199707, 
??? 9.50254135131836, 9.22763977050781, 8.60505981445312, 9.68806610107422, 
??? 9.77085647583008, 9.95944061279297, 10.3024574279785, 10.7512054443359, 
??? 8.78317031860352, 8.94360504150391, 9.19855346679688, 9.44350967407227, 
??? 10.2734016418457, 11.8314613342285, 12.4076805114746, 12.5829055786133, 
??? 12.3372856140137, 11.6992652893066, 8.82733459472656, 8.83338012695313, 
??? 9.01612014770508, 9.31243057250976, 9.52871017456055, 9.1939811706543, 
??? 9.20086669921875, 9.17466049194336, 9.3692512512207, 9.51042022705078, 
??? 9.55322723388672, 9.08766632080078, 9.01230697631836, 9.08840942382812, 
??? 8.89073867797851, 10.0157516479492, 9.88614654541016, 9.88927917480469, 
??? 9.89448471069336, 9.81435546875, 10.0982810974121, 10.8838890075684, 
??? 12.3737106323242, 12.0203163146973, 12.3476577758789, 8.12273559570312, 
??? 8.38578720092773, 8.5104736328125, 8.67580947875977, 8.8884521484375, 
??? 11.280297088623, 9.81758041381836, 9.12517623901367, 9.57337417602539, 
??? 9.93379745483398, 9.97190170288086, 9.9986442565918, 10.1007339477539, 
??? 10.368416595459, 10.8695823669434, 10.6418167114258, 10.1072540283203, 
??? 9.56202163696289, 10.1464050292969, 11.0315299987793, 15.5208480834961, 
??? 16.458154296875, 16.6033325195312, 16.9603851318359, 17.5446258544922, 
??? 11.6627197265625, 11.2967132568359, 11.0439735412598, 10.7337928771973, 
??? 10.724112701416, 10.414665222168, 10.1816375732422, 10.0053001403809, 
??? 10.0604530334473, 10.3831871032715, 12.5386772155762, 12.61123046875, 
??? 11.556861114502, 10.815104675293, 10.3798713684082, 12.8164276123047, 
??? 12.5301361083984, 12.1416007995605, 11.1006622314453, 10.5525985717773, 
??? 12.7033218383789, 13.5069030761719, 14.3273956298828, 14.1952850341797, 
??? 13.8862731933594, 11.5364295959473, 11.4725784301758, 11.4327659606934, 
??? 11.6338516235352, 11.9929733276367, 10.9388458251953, 10.3944259643555, 
??? 10.7864356994629, 10.4639877319336, 10.4192794799805, 10.584090423584, 
??? 11.0457565307617, 11.1049293518066, 11.2156471252441, 11.2940994262695, 
??? 11.5789703369141, 11.3852058410645, 11.312281036377, 10.8983863830566, 
??? 10.7498306274414, 11.648999786377, 12.1443000793457, 12.3075752258301, 
??? 12.4243774414062, 12.5793846130371, 9.53582992553711, 10.3421630859375, 
??? 10.6005973815918, 10.7018409729004, 10.1489151000977, 15.3236968994141, 
??? 16.6732727050781, 17.0259368896484, 16.9183380126953, 18.6379180908203, 
??? 11.5663963317871, 13.1421661376953, 15.772624206543, 15.2286743164063, 
??? 14.1305938720703, 10.4395881652832, 10.3302070617676, 10.3431907653809, 
??? 10.6234725952148, 10.6850440979004, 10.1355682373047, 10.7770133972168, 
??? 11.2220344543457, 11.121208190918, 10.9759727478027, 10.4280487060547, 
??? 11.4163436889648, 11.5880157470703, 11.367276763916, 11.7584564208984, 
??? 12.3622993469238, 12.8618209838867, 13.0096267700195, 12.7293991088867, 
??? 12.3698738098145, 13.4502487182617, 13.9361175537109, 14.3981384277344, 
??? 14.8455154418945, 14.7898071289063, 10.8285942077637, 11.0353393554688, 
??? 13.0554183959961, 11.4933654785156, 10.6509674072266, 12.3171768188477, 
??? 11.9701278686523, 11.7984405517578, 11.3652336120605, 11.2212104797363, 
??? 11.7747032165527, 12.0631629943848, 11.609635925293, 12.5300575256348, 
??? 12.5889640808105, 14.9442291259766, 15.244026184082, 15.1138778686523, 
??? 14.8327117919922, 14.0672607421875, 13.8624649047852, 14.0361633300781, 
??? 13.746142578125, 13.3890182495117, 12.7229309082031, 11.7338531494141, 
??? 12.4392601013184, 12.6126739501953, 12.3359680175781, 12.0300300598145, 
??? 13.0475494384766, 13.4870010375977, 13.1330673217773, 12.8889770507812, 
??? 11.5218353271484, 12.9545684814453, 12.6848930358887, 12.5185249328613, 
??? 12.1927146911621, 12.1243927001953, 13.6282653808594, 13.0329132080078, 
??? 14.021321105957, 12.7892906188965, 11.5679710388184, 12.4451988220215, 
??? 12.6035362243652, 12.8059692382812, 13.2598541259766, 14.1865646362305, 
??? 11.4154563903809, 12.0055801391602, 12.315015411377, 12.8833023071289, 
??? 13.0320266723633, 11.3923133850098, 12.2035797119141, 12.3115371704102, 
??? 12.4416717529297, 12.8906295776367, 11.4880004882812, 11.4702560424805, 
??? 11.063402557373, 11.520093536377, 11.4941116333008, 10.2884147644043, 
??? 10.4248268127441, 10.2943084716797, 10.4938522338867, 10.171199798584, 
??? 10.8181655883789, 10.7096382141113, 10.3980682373047, 9.85380783081055, 
??? 9.06302337646484, 11.087833404541, 11.297770690918, 11.4384208679199, 
??? 11.8333045959473, 12.6423866271973, 11.0677742004395, 11.1663566589355, 
??? 14.6535186767578, 12.696688079834, 11.9809646606445, 12.5395179748535, 
??? 13.5047088623047, 13.6589874267578, 13.3168762207031, 13.8064010620117, 
??? 13.2664398193359, 12.1466331481934, 11.7755020141602, 11.2214569091797, 
??? 11.967204284668, 13.3286544799805, 13.0230804443359, 12.4111663818359, 
??? 11.5664184570313, 11.507154083252, 10.7482841491699, 10.2523262023926, 
??? 10.5137763977051, 10.6416915893555, 10.925708770752, 12.1461143493652, 
??? 12.5572776794434, 13.0962661743164, 14.0371612548828, 15.6014785766602, 
??? 12.1392105102539, 12.4931434631348, 12.5056259155273, 12.1932655334473, 
??? 12.1573226928711, 12.3337669372559, 12.2943237304688, 12.3938110351563, 
??? 12.3535987854004, 12.2837997436523, 11.199015045166, 11.0299026489258, 
??? 11.4233680725098, 11.3639068603516, 10.776929473877, 15.9578018188477, 
??? 18.5940185546875, 16.6747985839844, 12.2459892272949, 11.7588233947754, 
??? 10.8550109863281, 9.30074844360352, 9.1522102355957, 9.23973083496094, 
??? 9.94997406005859, 21.4329086303711, 20.6476043701172, 20.4366928100586, 
??? 19.5227752685547, 18.6518371582031, 13.4605987548828, 13.7962448120117, 
??? 14.7393859863281, 14.0098480224609, 13.7022705078125, 13.8268768310547, 
??? 13.9131362915039, 14.1420150756836, 14.5985153198242, 15.3337585449219, 
??? 10.2976509094238, 10.6874450683594, 10.6152442932129, 10.3048629760742, 
??? 10.0026962280273, 10.8500930786133, 12.313077545166, 12.8156112670898, 
??? 12.4003845214844, 12.062833404541, 11.8806510925293, 11.9595237731934, 
??? 12.7401191711426, 13.2080368041992, 12.648217010498, 14.9934814453125, 
??? 16.2576446533203, 16.2247314453125, 15.6419891357422, 14.6681213378906, 
??? 10.2608001708984, 10.204532623291, 10.8466209411621, 10.8580635070801, 
??? 10.5870002746582, 12.5249855041504, 13.235661315918, 13.3415161132812, 
??? 13.2680938720703, 13.6001312255859, 10.9847831726074, 10.9526977539062, 
??? 12.1701835632324, 10.9867134094238, 9.62559356689453, 14.671305847168, 
??? 15.7670822143555, 16.5200897216797, 17.2838760375977, 18.5971923828125, 
??? 12.4218063354492, 11.5890487670898, 11.3723731994629, 11.5280731201172, 
??? 12.0742370605469, 11.0745147705078, 10.6635795593262, 10.507258605957, 
??? 10.358984375, 10.2047622680664, 11.231372833252, 11.1456260681152, 
??? 10.8480117797852, 10.3289199829102, 9.81418380737305, 13.1054672241211, 
??? 13.3634078979492, 13.6211837768555, 14.0335067749023, 13.8940582275391, 
??? 11.4586517333984, 11.3107444763184, 12.1839057922363, 11.6442543029785, 
??? 10.0313461303711, 11.5685440063477, 13.461506652832, 13.9238220214844, 
??? 12.9616546630859, 12.0961059570313, 15.3089569091797, 14.529133605957, 
??? 12.9434677124023, 11.6556198120117, 10.7868843078613, 13.7810775756836, 
??? 14.6285568237305, 14.3505905151367, 12.6306495666504, 11.0644081115723, 
??? 13.6406951904297, 13.0658325195313, 11.6025444030762, 10.8227111816406, 
??? 10.6873641967773, 14.1373397827148, 15.3703903198242, 16.4337646484375, 
??? 16.3727081298828, 16.0835571289062, 9.32263946533203, 9.81831588745117, 
??? 10.2201850891113, 10.4734298706055, 10.432006072998, 9.83030319213867, 
??? 9.97000503540039, 10.0799949645996, 10.1364440917969, 10.2572006225586,?
??? ... 
???? .Dim = c(10L, 140L), .Dimnames = list(NULL, 
??? c("layer.1", "layer.2", "layer.3", "layer.4", "layer.5", 
??? "layer.6", "layer.7", "layer.8", "layer.9", "layer.10", "layer.11", 
??? "layer.12", "layer.13", "layer.14", "layer.15", "layer.16", 
??? "layer.17", "layer.18", "layer.19", "layer.20", "layer.21", 
??? "layer.22", "layer.23", "layer.24", "layer.25", "layer.26", 
??? "layer.27", "layer.28", "layer.29", "layer.30", "layer.31", 
??? "layer.32", "layer.33", "layer.34", "layer.35", "layer.36", 
??? "layer.37", "layer.38", "layer.39", "layer.40", "layer.41", 
??? "layer.42", "layer.43", "layer.44", "layer.45", "layer.46", 
??? "layer.47", "layer.48", "layer.49", "layer.50", "layer.51", 
??? "layer.52", "layer.53", "layer.54", "layer.55", "layer.56", 
??? "layer.57", "layer.58", "layer.59", "layer.60", "layer.61", 
??? "layer.62", "layer.63", "layer.64", "layer.65", "layer.66", 
??? "layer.67", "layer.68", "layer.69", "layer.70", "layer.71", 
??? "layer.72", "layer.73", "layer.74", "layer.75", "layer.76", 
??? "layer.77", "layer.78", "layer.79", "layer.80", "layer.81", 
??? "layer.82", "layer.83", "layer.84", "layer.85", "layer.86", 
??? "layer.87", "layer.88", "layer.89", "layer.90", "layer.91", 
??? "layer.92", "layer.93", "layer.94", "layer.95", "layer.96", 
??? "layer.97", "layer.98", "layer.99", "layer.100", "layer.101", 
??? "layer.102", "layer.103", "layer.104", "layer.105", "layer.106", 
??? "layer.107", "layer.108", "layer.109", "layer.110", "layer.111", 
??? "layer.112", "layer.113", "layer.114", "layer.115", "layer.116", 
??? "layer.117", "layer.118", "layer.119", "layer.120", "layer.121", 
??? "layer.122", "layer.123", "layer.124", "layer.125", "layer.126", 
??? "layer.127", "layer.128", "layer.129", "layer.130", "layer.131", 
??? "layer.132", "layer.133", "layer.134", "layer.135", "layer.136", 
??? "layer.137", "layer.138", "layer.139", "layer.140")))
For the x-axis, I already have 140 values to be plotted. The x variable is called "RCP1pctCO2cumulative" and is 1-dimensional. Here are the values:

dput(RCP1pctCO2cumulative)

??? c(0, 0.00697490638121963, 0.0139075990766287, 0.021697436273098, 
??? 0.0302329704165459, 0.0389980841428041, 0.0486239280551672, 
??? 0.0591636016964912, 0.0698652867227793, 0.0806971430778503, 0.0917696304619312,
??? 0.102874741703272, 0.115288959443569, 0.127942492067814, 0.140930585563183, 0.154951927065849,
??? 0.169483987987041, 0.18332038372755, 0.197460225224495, 0.211912712454796, 
??? 0.227608525753021, 0.243575794994831, 0.257900005578995, 0.273098181188107, 
??? 0.288984017074108, 0.305822652578354, 0.321933174133301, 0.338437202572823, 
??? 0.356079193949699, 0.373604437708855, 0.389580103754997, 0.406976979970932, 
??? 0.423514771461487, 0.440741804242134, 0.459019854664803, 0.477243804931641, 
??? 0.494844323396683, 0.511731442809105, 0.529583910107613, 0.54879242181778, 
??? 0.568029862642288, 0.587030050158501, 0.606201952695847, 0.626413214206696, 
??? 0.645859175920486, 0.66550235748291, 0.685490393638611, 0.705517685413361, 
??? 0.725719237327576, 0.74520371556282, 0.764879602193832, 0.78538470864296, 
??? 0.806885379552841, 0.827258145809174, 0.847640424966812, 0.869502395391464, 
??? 0.891108268499374, 0.912525850534439, 0.934271132946014, 0.956432664394379, 
??? 0.977902102470398, 0.999574398994446, 1.02313443422317, 1.0449088037014, 
??? 1.06765602231026, 1.09229186177254, 1.11614397168159, 1.13850414156914, 
??? 1.16062269210815, 1.18386173844337, 1.2078672170639, 1.23217906951904, 
??? 1.25505521297455, 1.27949770689011, 1.30394254922867, 1.32788743972778, 
??? 1.35124933719635, 1.37474408149719, 1.39838930368423, 1.42129179239273, 
??? 1.44566521644592, 1.47075144052506, 1.49397988319397, 1.51616193056107, 
??? 1.54051134586334, 1.56606665849686, 1.59053231477737, 1.61592463254929, 
??? 1.64096541404724, 1.66613935232162, 1.69049085378647, 1.71510955095291, 
??? 1.73991868495941, 1.76491104364395, 1.79114699363708, 1.81589571237564, 
??? 1.84101955890656, 1.864857172966, 1.8899533867836, 1.91575677394867, 
??? 1.9422261595726, 1.96840007305145, 1.99298502206802, 2.01899757385254, 
??? 2.04547454118729, 2.07122528553009, 2.09852977991104, 2.12717348337173, 
??? 2.15352830886841, 2.17984690666199, 2.20684263706207, 2.23266286849976, 
??? 2.25915194749832, 2.28647100925446, 2.31463184356689, 2.34280925989151, 
??? 2.36965861320496, 2.39779574871063, 2.42558825016022, 2.45266799926758, 
??? 2.48168079853058, 2.50962221622467, 2.53702754974365, 2.56574511528015, 
??? 2.59377150535583, 2.62192821502686, 2.6505597114563, 2.68051118850708, 
??? 2.70983340740204, 2.73927145004272, 2.76805067062378, 2.79780313968658, 
??? 2.8272668838501, 2.85747616291046, 2.88714888095856, 2.91689431667328, 
??? 2.94743349552155, 2.97868416309357, 3.00965495109558, 3.03861720561981
I tried doing something like this to start:

expansion <- expand.grid(103:116, 3:16) #to specify a range of longitudes? and latitudes

? ??>lonlat <- extract(RCP1pctCO2Mean, expansion)? ?>plot(RCP1pctCO2cumulative, lonlat, type="l",col="green", lwd="3",?
??? xlab="Cumulative emissions (TtC)", ylab="One-day maximum precipitation? 
??? (mm/day)", main="Test model")
?
But this yields the error:
??? Error in xy.coords(x, y, xlabel, ylabel, log) : 
??? 'x' and 'y' lengths differ
If it helps, here are the dimensions of the new variables created:
??? 

dim(lonlat)

??? [1] 196?? 140
??? 

dim(expansion)

??? 
??? [1] 196?? 2

What could I be doing wrong (the lengths appear to be the same)? Ultimately, the goal would be to plot the 140 values as a function of emissions (i.e. "RCP1pctCO2Mean" as a function of "RCP1pctCO2cumulative" once each of those selected grid cells are aggregated). The above works absolutely fine when just selecting "one" specific grid cell, but not an aggregate of grid cells. Is this possible to do for an aggregate of grid cells?
Thanks, and any assistance would be greatly appreciated!
[[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-geo&data=02%7C01%7Ckkilpatrick%40rsmas.miami.edu%7C59333f2be1214c2ef12f08d6c859dc6e%7C2a144b72f23942d48c0e6f0f17c48e33%7C0%7C0%7C636916685638215109&sdata=myKpQUhzVczqH4E4fXt%2FBOr6rPWjOW9rpdsy6RXLq%2Bc%3D&reserved=0



	[[alternative HTML version deleted]]


From d@d|m@t19 @end|ng |rom gm@||@com  Thu Apr 25 13:01:03 2019
From: d@d|m@t19 @end|ng |rom gm@||@com (Dadirai Matarira)
Date: Thu, 25 Apr 2019 13:01:03 +0200
Subject: [R-sig-Geo] (no subject)
Message-ID: <CAAKodyEB5VoKFwHk7e+=kkGhZS6=Ad3ytSyM=LU1Vph2shUGZw@mail.gmail.com>

I have drawn a map for significant NDVI trends but I don't know how to
explain it. What is the meaning of "significant NDVI trends?"

	[[alternative HTML version deleted]]


From @zvo|e|| @end|ng |rom con@erv@t|on@org  Fri Apr 26 14:37:37 2019
From: @zvo|e|| @end|ng |rom con@erv@t|on@org (Alex Zvoleff)
Date: Fri, 26 Apr 2019 12:37:37 +0000
Subject: [R-sig-Geo] Possible proj.4-related error coming when specifying
 CRS for raster
Message-ID: <DM5PR0801MB37518A5B65E90FF67C4A8081A83E0@DM5PR0801MB3751.namprd08.prod.outlook.com>

Hi all,

Recently the glcm package I maintain has started throwing errors on all of the Linux-based CRAN test servers. The errors come when checking the examples included in the package. I have not been able to reproduce these errors locally on Linux (Ubuntu 18.04 running r-release and r-devel) or on Windows 10 (r-release and r-devel). The errors also don't come up on any of the r-hub servers.

Here is an example error from the CRAN test server:

> require(raster)
Loading required package: raster
Loading required package: sp
> set.seed(0)
> test_matrix <- matrix(runif(100)*32, nrow=10)
> test_raster <- raster(test_matrix, crs='+init=EPSG:4326')
Error in CRS(as.character(projection(crs))) :
  no arguments in initialization list
Calls: raster ... raster -> .local -> raster -> raster -> .local -> CRS
Execution halted

(full output here: https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/glcm-00check.html)

The CRAN maintainers suggested I run R CMD check with _R_CHECK_SUGGESTS_ONLY_=FALSE, but that hasn't worked - even when the env variable is set I still don't see the error on my end. Given that, they suggested I reach out here. From the error message I assume the error is something related to proj.4 not being able to interpret the EPSG code (though this would seem odd for 4326). I have tested this locally on proj.4 versions 4.9.3 and 5.2.0, but I can't reproduce the error I am getting from the CRAN server on either version. Has anyone else encountered something like this? If not, any idea whether I am on the right track?

Thanks,
Alex

--
Alex Zvoleff, PhD
Senior Director, Resilience Science
Betty and Gordon Moore Center for Science
Conservation International
2011 Crystal Dr. Suite 500, Arlington, Virginia 22202, USA
Tel: +1-703-341-2749, Skype: azvoleff, http://www.conservation.org<http://www.conservation.org/>


-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 14620 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20190426/2b209b44/attachment.bin>

From Roger@B|v@nd @end|ng |rom nhh@no  Fri Apr 26 15:00:04 2019
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 26 Apr 2019 15:00:04 +0200
Subject: [R-sig-Geo] 
 Possible proj.4-related error coming when specifying CRS for raster
In-Reply-To: <DM5PR0801MB37518A5B65E90FF67C4A8081A83E0@DM5PR0801MB3751.namprd08.prod.outlook.com>
References: <DM5PR0801MB37518A5B65E90FF67C4A8081A83E0@DM5PR0801MB3751.namprd08.prod.outlook.com>
Message-ID: <alpine.LFD.2.21.1904261449030.28427@reclus.nhh.no>

On Fri, 26 Apr 2019, Alex Zvoleff via R-sig-Geo wrote:

> 
> Hi all,
> 
> ?
> 
> Recently the glcm package I maintain has started throwing errors on all of
> the Linux-based CRAN test servers. The errors come when checking the
> examples included in the package. I have not been able to reproduce these
> errors locally on Linux (Ubuntu 18.04 running r-release and r-devel) or on
> Windows 10 (r-release and r-devel). The errors also don?t come up on any of
> the r-hub servers.
> 
> ?
> 
> Here is an example error from the CRAN test server:
> 
> ?
> 
> > require(raster)
> 
> Loading required package: raster
> 
> Loading required package: sp
> 
> > set.seed(0)
> 
> > test_matrix <- matrix(runif(100)*32, nrow=10)
> 
> > test_raster <- raster(test_matrix, crs='+init=EPSG:4326')

"EPSG" must be "epsg"; after making two such changes, I see:

* checking examples ... OK
* checking for unstated dependencies in ?tests? ... OK
* checking tests ...
   Running ?test-all.R?
  ERROR
Running the tests in ?tests/test-all.R? failed.
Last 13 lines of output:
          crs = crs, ...)
   12: raster(xmn = x at xmin, xmx = x at xmax, ymn = x at ymin, ymx = x at ymax, ncols 
= ncols, nrows = nrows,
          crs = crs, ...)
   13: .local(...)
   14: CRS(as.character(projection(crs)))
   15: stop(res[[2]])

   ?? testthat results 
???????????????????????????????????????????????????????????
   OK: 1 SKIPPED: 0 WARNINGS: 0 FAILED: 3
   1. Error: glcm on 3x3 window with 1x1 shift works (@test-glcm.R#21)
   2. Error: glcm on 5x7 window with 2x3 shift works (@test-glcm.R#48)
   3. Error: (unknown) (@test-glcm.R#113)

   Error: testthat unit tests failed
   Execution halted

but myself never use testthat because it always hides the actual errors. 
Your use of roxygen may well also be concealing verbatim "EPSG", which may 
be in the stored data objects in glcm/data:

> crs(get(load(list.files()[5]))
CRS arguments: +init=EPSG:4326

So a leftover from the previously tolerated use of "EPSG" for "epsg", I 
think.

crs(test_raster) <- "+init=epsg:4326"
save(test_raster, file="test_raster.RData")

gives:

* checking examples ... OK
* checking for unstated dependencies in ?tests? ... OK
* checking tests ...
   Running ?test-all.R?
  OK

Roger

> 
> Error in CRS(as.character(projection(crs))) :
> 
> ??no arguments in initialization list
> 
> Calls: raster ... raster -> .local -> raster -> raster -> .local -> CRS
> 
> Execution halted
> 
> ?
> 
> (full output here:https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/g
> lcm-00check.html)
> 
> ?
> 
> The CRAN maintainers suggested I run R CMD check with
> _R_CHECK_SUGGESTS_ONLY_=FALSE, but that hasn?t worked ? even when the env
> variable is set I still don?t see the error on my end. Given that, they
> suggested I reach out here. From the error message I assume the error is
> something related to proj.4 not being able to interpret the EPSG code
> (though this would seem odd for 4326). I have tested this locally on proj.4
> versions 4.9.3 and 5.2.0, but I can?t reproduce the error I am getting from
> the CRAN server on either version. Has anyone else encountered something
> like this? If not, any idea whether I am on the right track?
> 
> ?
> 
> Thanks,
> 
> Alex
> 
> ?
> 
> --
> 
> Alex Zvoleff, PhD
> Senior Director, Resilience Science
> Betty and Gordon Moore Center for Science
> Conservation International
> 2011 Crystal Dr. Suite 500, Arlington, Virginia 22202, USA
> Tel: +1-703-341-2749, Skype: azvoleff, http://www.conservation.org
> 
> ?
> 
> 
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From @zvo|e|| @end|ng |rom con@erv@t|on@org  Fri Apr 26 21:55:34 2019
From: @zvo|e|| @end|ng |rom con@erv@t|on@org (Alex Zvoleff)
Date: Fri, 26 Apr 2019 19:55:34 +0000
Subject: [R-sig-Geo] 
 Possible proj.4-related error coming when specifying CRS for raster
In-Reply-To: <alpine.LFD.2.21.1904261449030.28427@reclus.nhh.no>
References: <DM5PR0801MB37518A5B65E90FF67C4A8081A83E0@DM5PR0801MB3751.namprd08.prod.outlook.com>
 <alpine.LFD.2.21.1904261449030.28427@reclus.nhh.no>
Message-ID: <CY4PR0801MB37476110703F0E4117AEB6F1A83E0@CY4PR0801MB3747.namprd08.prod.outlook.com>

> -----Original Message-----
> From: Roger Bivand <Roger.Bivand at nhh.no>
> Sent: Friday, April 26, 2019 15:00
> To: Alex Zvoleff <azvoleff at conservation.org>
> Cc: 'R-sig-Geo' <r-sig-geo at r-project.org>
> Subject: Re: [R-sig-Geo] Possible proj.4-related error coming when specifying
> CRS for raster
> 
> CAUTION: External Email
> 
> 
> 
> On Fri, 26 Apr 2019, Alex Zvoleff via R-sig-Geo wrote:
> 
> >
> > Hi all,
> >
> >
> >
> > Recently the glcm package I maintain has started throwing errors on
> > all of the Linux-based CRAN test servers. The errors come when
> > checking the examples included in the package. I have not been able to
> > reproduce these errors locally on Linux (Ubuntu 18.04 running
> > r-release and r-devel) or on Windows 10 (r-release and r-devel). The
> > errors also don?t come up on any of the r-hub servers.
> >
> >
> >
> > Here is an example error from the CRAN test server:
> >
> >
> >
> > > require(raster)
> >
> > Loading required package: raster
> >
> > Loading required package: sp
> >
> > > set.seed(0)
> >
> > > test_matrix <- matrix(runif(100)*32, nrow=10)
> >
> > > test_raster <- raster(test_matrix, crs='+init=EPSG:4326')
> 
> "EPSG" must be "epsg"; after making two such changes, I see:

Yep, that looks like it. I've fixed the example CRS strings and the CRS of the stored data and will upload the new version. Thank you for the quick response and help in fixing this!

> 
> * checking examples ... OK
> * checking for unstated dependencies in ?tests? ... OK
> * checking tests ...
>    Running ?test-all.R?
>   ERROR
> Running the tests in ?tests/test-all.R? failed.
> Last 13 lines of output:
>           crs = crs, ...)
>    12: raster(xmn = x at xmin, xmx = x at xmax, ymn = x at ymin, ymx = x at ymax,
> ncols = ncols, nrows = nrows,
>           crs = crs, ...)
>    13: .local(...)
>    14: CRS(as.character(projection(crs)))
>    15: stop(res[[2]])
> 
>    ?? testthat results
> ??????????????????????????????????????????????
> ?????????????
>    OK: 1 SKIPPED: 0 WARNINGS: 0 FAILED: 3
>    1. Error: glcm on 3x3 window with 1x1 shift works (@test-glcm.R#21)
>    2. Error: glcm on 5x7 window with 2x3 shift works (@test-glcm.R#48)
>    3. Error: (unknown) (@test-glcm.R#113)
> 
>    Error: testthat unit tests failed
>    Execution halted
> 
> but myself never use testthat because it always hides the actual errors.
> Your use of roxygen may well also be concealing verbatim "EPSG", which may
> be in the stored data objects in glcm/data:
> 
> > crs(get(load(list.files()[5]))
> CRS arguments: +init=EPSG:4326
> 
> So a leftover from the previously tolerated use of "EPSG" for "epsg", I think.
> 
> crs(test_raster) <- "+init=epsg:4326"
> save(test_raster, file="test_raster.RData")
> 
> gives:
> 
> * checking examples ... OK
> * checking for unstated dependencies in ?tests? ... OK
> * checking tests ...
>    Running ?test-all.R?
>   OK
> 
> Roger
> 
> >
> > Error in CRS(as.character(projection(crs))) :
> >
> >   no arguments in initialization list
> >
> > Calls: raster ... raster -> .local -> raster -> raster -> .local ->
> > CRS
> >
> > Execution halted
> >
> >
> >
> > (full output
> > here:https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debi
> > an-clang/g
> > lcm-00check.html)
> >
> >
> >
> > The CRAN maintainers suggested I run R CMD check with
> > _R_CHECK_SUGGESTS_ONLY_=FALSE, but that hasn?t worked ? even when
> the
> > env variable is set I still don?t see the error on my end. Given that,
> > they suggested I reach out here. From the error message I assume the
> > error is something related to proj.4 not being able to interpret the
> > EPSG code (though this would seem odd for 4326). I have tested this
> > locally on proj.4 versions 4.9.3 and 5.2.0, but I can?t reproduce the
> > error I am getting from the CRAN server on either version. Has anyone
> > else encountered something like this? If not, any idea whether I am on the
> right track?
> >
> >
> >
> > Thanks,
> >
> > Alex
> >
> >
> > --
> >
> > Alex Zvoleff, PhD
> > Senior Director, Resilience Science
> > Betty and Gordon Moore Center for Science Conservation International
> > 2011 Crystal Dr. Suite 500, Arlington, Virginia 22202, USA
> > Tel: +1-703-341-2749, Skype: azvoleff
> >
> >
> 
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics, Helleveien 30, N-
> 5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no

From @|ex@ndre@c@@t@gn@ @end|ng |rom gm@||@com  Tue Apr 30 12:43:12 2019
From: @|ex@ndre@c@@t@gn@ @end|ng |rom gm@||@com (Alexandre Castagna)
Date: Tue, 30 Apr 2019 10:43:12 +0000
Subject: [R-sig-Geo] raster - units assignment error in reading NetCDF4
Message-ID: <CAFiuoh+OVZuRwbMeYe4DW3=pdje=q4kr=S==533UEzyOOS06Yw@mail.gmail.com>

Hi group,

I'm trying to read a NetCDF4 file, but I get the following error message:

fl <- 'L8_OLI_2017_03_18_00_09_19_093086_L2R.nc'
r <- raster(fl, varname = 'rhos_443')

Error in (function (cl, name, valueClass)  :
  assignment of an object of class ?numeric? is not valid for @?unit? in an
object of class ?.SingleLayerData?; is(value, "character") is not TRUE

This data is OLI Landsat 8 atmospheric 'corrected' imagery with the ACOLITE
software (link <https://github.com/acolite/acolite>).
In a previous version of the software, exploring the file after nc_open
function revealed that units was numeric ('num' qualifier was shown in R
object print); but since, the developer has committed a change for all
units to be written as characters. The unit in question is '1' (unitless,
for bihemispherical reflectance). A new exploration after the update to
check the units type does not show the qualifier 'num' anymore, but the
error keep the same. Maybe R is translating '1' to 1 automatically?

I can go around and create a raster directly from data read with ncdf4
package, like:

ncfl <- nc_open(fl)
r     <- raster(t(ncvar_get(ncfl, 'rhos_443')))

But for a number of reasons that is less ideal. A temporary link to
download the example data file is: https://we.tl/t-nENAV7tmBg

Kind regards,

Alexandre Castagna Mour?o e Lima

	[[alternative HTML version deleted]]


From edzer@pebe@m@ @end|ng |rom un|-muen@ter@de  Tue Apr 30 14:28:12 2019
From: edzer@pebe@m@ @end|ng |rom un|-muen@ter@de (Edzer Pebesma)
Date: Tue, 30 Apr 2019 14:28:12 +0200
Subject: [R-sig-Geo] raster - units assignment error in reading NetCDF4
In-Reply-To: <CAFiuoh+OVZuRwbMeYe4DW3=pdje=q4kr=S==533UEzyOOS06Yw@mail.gmail.com>
References: <CAFiuoh+OVZuRwbMeYe4DW3=pdje=q4kr=S==533UEzyOOS06Yw@mail.gmail.com>
Message-ID: <c741fbb2-a4da-5ab8-0429-fc247512c997@uni-muenster.de>

It looks like this is a curvilinear grid; you could read & plot it with

library(stars)
r = read_stars("L8_OLI_2017_03_18_00_09_19_093086_L2R.nc", curvilinear =
c("lon", "lat"))
plot(r[1], border = NA)

Printing r shows the units of each of the variables. The plotting takes
a while because the data grid is not aligned with the pixel grid of the
plotting device.


On 4/30/19 12:43 PM, Alexandre Castagna wrote:
> Hi group,
> 
> I'm trying to read a NetCDF4 file, but I get the following error message:
> 
> fl <- 'L8_OLI_2017_03_18_00_09_19_093086_L2R.nc'
> r <- raster(fl, varname = 'rhos_443')
> 
> Error in (function (cl, name, valueClass)  :
>   assignment of an object of class ?numeric? is not valid for @?unit? in an
> object of class ?.SingleLayerData?; is(value, "character") is not TRUE
> 
> This data is OLI Landsat 8 atmospheric 'corrected' imagery with the ACOLITE
> software (link <https://github.com/acolite/acolite>).
> In a previous version of the software, exploring the file after nc_open
> function revealed that units was numeric ('num' qualifier was shown in R
> object print); but since, the developer has committed a change for all
> units to be written as characters. The unit in question is '1' (unitless,
> for bihemispherical reflectance). A new exploration after the update to
> check the units type does not show the qualifier 'num' anymore, but the
> error keep the same. Maybe R is translating '1' to 1 automatically?
> 
> I can go around and create a raster directly from data read with ncdf4
> package, like:
> 
> ncfl <- nc_open(fl)
> r     <- raster(t(ncvar_get(ncfl, 'rhos_443')))
> 
> But for a number of reasons that is less ideal. A temporary link to
> download the example data file is: https://we.tl/t-nENAV7tmBg
> 
> Kind regards,
> 
> Alexandre Castagna Mour?o e Lima
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pEpkey.asc
Type: application/pgp-keys
Size: 2472 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20190430/9f46bdef/attachment.bin>

