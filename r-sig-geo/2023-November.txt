From g||berto@c@m@r@ @end|ng |rom |npe@br  Thu Nov  2 23:29:46 2023
From: g||berto@c@m@r@ @end|ng |rom |npe@br (Gilberto Camara)
Date: Thu, 2 Nov 2023 19:29:46 -0300
Subject: [R-sig-Geo] Release of SITS version 1.4.2-1
Message-ID: <6F32E8DF-BCB0-4A44-B7FA-B105BF606A20@inpe.br>

Dear R-SIG-GEO,

We would like to announce the release of version 1.4.2-1 of the ?sits? package. The improvements of this version include: 

(a) Support for vector data cubes, including visualisation
(b) Object-based time series analysis using spatio-temporal segmentation
(c) Improved support for GPU usage when running deep learning algorithms
(d) New function to clean values by modal filter in classified images
(e) Experimental support for Sentinel-1 images available on MPC
(f) Improve summary function to include cloud cover information
(g) General bug fixes

?sits? is a long-term project for improving land use and land cover classification using big EO data. The package provides an end-to-end environment for LUCC analysis. Users are supported by an on-line book (https://e-sensing.github.io/sitsbook/). It has reached TRL 9 status, being used operational for LUCC mapping in large areas of Brazil. 

Such an ambitious endeavour would not be possible without the substantial contribution of the R-SIG-GEO community, including but not limited to the following experts:

- Daniel Baston for ?exactextractr?
- David Cooley for ?geojsonsf"
- Edzer Pebesma for ?sf/stars?
- Jakub Nowosad for ?supercells?
= Joshua O?Brien for ?gdalUtilities"
- Marius Appel for ?gdalcubes?
- Martijn Tennekes for ?tmap?
- Robert Hijmans for ?terra?,
- Tim Appelhans for ?leafem?

Many thanks to all of you, and most especially to Roger, an inspiration to us all.

All the best
Gilberto
============================
Prof Dr Gilberto Camara
Senior Researcher
National Institute for Space Research (INPE), Brazil
https://gilbertocamara.org/
=============================


From Roger@B|v@nd @end|ng |rom nhh@no  Sat Nov  4 18:53:45 2023
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Sat, 4 Nov 2023 17:53:45 +0000
Subject: [R-sig-Geo] spdep: new zero.policy attribute
Message-ID: <SV0P279MB0475E88F8A0CB703080AA22EEEA4A@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>

In forthcoming spdep 1.3-1, spatial weight listw objects get a new zero.policy attribute. The attribute is added as objects are created to record the status of the zero.policy argument in the function creating the object, see: https://github.com/r-spatial/spdep/commit/e159de922c61713529a4075b0dfc2966eb8f9ad6. 

Reverse dependency checks only show problems from over-eager unit testing in SpatialFeatureExperiment, a Bioconductor package, but other workflows may be impacted. The new attribute is used in tests for spatial autocorrelation to set the zero.policy argument in those tests (the arguments were zero.policy=NULL, are now zero.policy=attr(listw, "zero.policy") where listw is the spatial weights object argument to the test function.

This will be extended to spatialreg and friends if nobody reports negative impacts here soon. I'll wait before releasing 1.3-1 for a few days to see if any feedback is forthcoming.

Hope this long-overdue change is helpful,

Roger

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no

From Roger@B|v@nd @end|ng |rom nhh@no  Sun Nov  5 16:31:16 2023
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Sun, 5 Nov 2023 15:31:16 +0000
Subject: [R-sig-Geo] spdep: new zero.policy attribute
In-Reply-To: <SV0P279MB0475E88F8A0CB703080AA22EEEA4A@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
References: <SV0P279MB0475E88F8A0CB703080AA22EEEA4A@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
Message-ID: <SV0P279MB0475841DFE21EE66FBCBD252EEABA@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>

And a question: in nb2listw() and similar functions creating spatial weights listw objects, would it be sensible to guess that the presence of no-neighbour observations in the input nb neighbour implies the choice of a spatially lagged value of zero (zero.policy=TRUE), lx = Wx, rather than NA (zero.policy=FALSE)?

That is, use by default zero.policy=any(card(nb) == 0L) rather than zero.policy=NULL and look in the spdep option set by default on package load to FALSE but settable by the user?

Would this be taking trying to be helpful too far, given that the analyst is creating the neighbour object and presumably should take responsibility for choices made?

Context: polygons not sharing boundaries with other polygons do exist legitimately in data sources, but setting spatially lagged values to zero for those polygons is quite an invasive imputation. It may be better to oblige the user to make the choice when the spatial weights listw object is created.

Little is known about the problem, for a recent treatment for CAR models see: https://arxiv.org/abs/1705.04854, published as https://doi.org/10.1016/j.sste.2018.04.002, where: "The specification of a CAR model on a disconnected graph is undefined ... [t]here are essentially two types of disconnected graphs: first, a graph containing an island (a singleton node with no neighbours), second, a graph split in different sub-graphs (each of them being a connected graph)".

This question concerns the former, singleton, case, but adding sub-graph counts if greater than unity to summary.nb and print.nb address the second . Very possibly, functions creating nb neighbour objects should themselves report that an output object (graph) is not connected, bigDM CARBayes CARBayesST geostan spatialreg stampr do call spdep::n.comp.nb themselves to check the subgraph count.

Interested in feedback,

Roger

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no

________________________________________
From: R-sig-Geo <r-sig-geo-bounces at r-project.org> on behalf of Roger Bivand <Roger.Bivand at nhh.no>
Sent: 04 November 2023 18:53
To: r-sig-geo at r-project.org
Subject: [R-sig-Geo] spdep: new zero.policy attribute

In forthcoming spdep 1.3-1, spatial weight listw objects get a new zero.policy attribute. The attribute is added as objects are created to record the status of the zero.policy argument in the function creating the object, see: https://github.com/r-spatial/spdep/commit/e159de922c61713529a4075b0dfc2966eb8f9ad6.

Reverse dependency checks only show problems from over-eager unit testing in SpatialFeatureExperiment, a Bioconductor package, but other workflows may be impacted. The new attribute is used in tests for spatial autocorrelation to set the zero.policy argument in those tests (the arguments were zero.policy=NULL, are now zero.policy=attr(listw, "zero.policy") where listw is the spatial weights object argument to the test function.

This will be extended to spatialreg and friends if nobody reports negative impacts here soon. I'll wait before releasing 1.3-1 for a few days to see if any feedback is forthcoming.

Hope this long-overdue change is helpful,

Roger

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no
_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From jo@|@h@p@rry @end|ng |rom gm@||@com  Sun Nov  5 18:01:38 2023
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Sun, 5 Nov 2023 12:01:38 -0500
Subject: [R-sig-Geo] spdep: new zero.policy attribute
In-Reply-To: <SV0P279MB0475841DFE21EE66FBCBD252EEABA@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
References: <SV0P279MB0475E88F8A0CB703080AA22EEEA4A@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
 <SV0P279MB0475841DFE21EE66FBCBD252EEABA@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
Message-ID: <CAL3ufULghGnSos1J1kMVGVVWdhiawoz+ec=QbraQRY-x2h=kgg@mail.gmail.com>

My take is generally that less is more. In the case of an isolated node, I
think the best thing to do is to return NA rather than 0. For example
consider administrative boundaries where the lagged variable is median
household income. If we returned a 0 in that case, we'd likely be
introducing quite the outlier!

My preference would be to _always_ default to NA lagged values when no
neighbors are present. Additionally, it would be quite nice to instruct
users on how to impute these values with other lagged variables. Say we
have an isolated node, but we don't want an NA value. We can impute that
missing value with the spatial lag of the variable using a different
neighborhood construction?e.g. using KNN with k = 3 to *ensure* that the
node always has values to lag.

Here is an example gist imputing k=3 lag
https://gist.github.com/JosiahParry/eb7878fc375fb931ddd6675a2c591a2b

Another option could be to use the focal feature's value *as* the lag
itself. If a location has no neighborhood could we argue that the location *is
*its own neighborhood?

I'm not too familiar with the models to comment on them, though. I do see
this more as a pre-processing / data imputation issue. I suspect that's
more of a machine learning paradigm though!


On Sun, Nov 5, 2023 at 10:31?AM Roger Bivand <Roger.Bivand at nhh.no> wrote:

> And a question: in nb2listw() and similar functions creating spatial
> weights listw objects, would it be sensible to guess that the presence of
> no-neighbour observations in the input nb neighbour implies the choice of a
> spatially lagged value of zero (zero.policy=TRUE), lx = Wx, rather than NA
> (zero.policy=FALSE)?
>
> That is, use by default zero.policy=any(card(nb) == 0L) rather than
> zero.policy=NULL and look in the spdep option set by default on package
> load to FALSE but settable by the user?
>
> Would this be taking trying to be helpful too far, given that the analyst
> is creating the neighbour object and presumably should take responsibility
> for choices made?
>
> Context: polygons not sharing boundaries with other polygons do exist
> legitimately in data sources, but setting spatially lagged values to zero
> for those polygons is quite an invasive imputation. It may be better to
> oblige the user to make the choice when the spatial weights listw object is
> created.
>
> Little is known about the problem, for a recent treatment for CAR models
> see: https://arxiv.org/abs/1705.04854, published as
> https://doi.org/10.1016/j.sste.2018.04.002, where: "The specification of
> a CAR model on a disconnected graph is undefined ... [t]here are
> essentially two types of disconnected graphs: first, a graph containing an
> island (a singleton node with no neighbours), second, a graph split in
> different sub-graphs (each of them being a connected graph)".
>
> This question concerns the former, singleton, case, but adding sub-graph
> counts if greater than unity to summary.nb and print.nb address the second
> . Very possibly, functions creating nb neighbour objects should themselves
> report that an output object (graph) is not connected, bigDM CARBayes
> CARBayesST geostan spatialreg stampr do call spdep::n.comp.nb themselves to
> check the subgraph count.
>
> Interested in feedback,
>
> Roger
>
> --
> Roger Bivand
> Emeritus Professor
> Norwegian School of Economics
> Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
> Roger.Bivand at nhh.no
>
> ________________________________________
> From: R-sig-Geo <r-sig-geo-bounces at r-project.org> on behalf of Roger
> Bivand <Roger.Bivand at nhh.no>
> Sent: 04 November 2023 18:53
> To: r-sig-geo at r-project.org
> Subject: [R-sig-Geo] spdep: new zero.policy attribute
>
> In forthcoming spdep 1.3-1, spatial weight listw objects get a new
> zero.policy attribute. The attribute is added as objects are created to
> record the status of the zero.policy argument in the function creating the
> object, see:
> https://github.com/r-spatial/spdep/commit/e159de922c61713529a4075b0dfc2966eb8f9ad6
> .
>
> Reverse dependency checks only show problems from over-eager unit testing
> in SpatialFeatureExperiment, a Bioconductor package, but other workflows
> may be impacted. The new attribute is used in tests for spatial
> autocorrelation to set the zero.policy argument in those tests (the
> arguments were zero.policy=NULL, are now zero.policy=attr(listw,
> "zero.policy") where listw is the spatial weights object argument to the
> test function.
>
> This will be extended to spatialreg and friends if nobody reports negative
> impacts here soon. I'll wait before releasing 1.3-1 for a few days to see
> if any feedback is forthcoming.
>
> Hope this long-overdue change is helpful,
>
> Roger
>
> --
> Roger Bivand
> Emeritus Professor
> Norwegian School of Economics
> Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
> Roger.Bivand at nhh.no
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From Connor@Doneg@n @end|ng |rom UTD@||@@@edu  Mon Nov  6 18:04:34 2023
From: Connor@Doneg@n @end|ng |rom UTD@||@@@edu (Donegan, Connor)
Date: Mon, 6 Nov 2023 17:04:34 +0000
Subject: [R-sig-Geo] R-sig-Geo Digest, Vol 243, Issue 3
In-Reply-To: <mailman.29341.3.1699268401.23191.r-sig-geo@r-project.org>
References: <mailman.29341.3.1699268401.23191.r-sig-geo@r-project.org>
Message-ID: <SN6PR01MB374148BE687D10B253E0EBA1E1AAA@SN6PR01MB3741.prod.exchangelabs.com>

Thanks for the request for feedback on this change.

I share Josiah's view that "In the case of an isolated node, I think the best thing to do is to return NA rather than 0. For example consider administrative boundaries where the lagged variable is median household income. If we returned a 0 in that case, we'd likely be introducing quite the outlier!"  Currently geostan's Moran scatter plot uses NA, so observations with no neighbors are neutral, i.e., they are dropped when calculating Moran's I or creating a Moran scatter plot. It also shows a kind of confusing error message about how this impacts a row-standardized spatial weights matrix---if you just drop one or more observations, the weights are no longer row-standardized relative to the values included in the calculation.

Also, "creating nb neighbour objects should themselves report that an output object (graph) is not connected"---that's a good suggestion.

Thanks,

Connor

________________________________
From: R-sig-Geo <r-sig-geo-bounces at r-project.org> on behalf of r-sig-geo-request at r-project.org <r-sig-geo-request at r-project.org>
Sent: Monday, November 6, 2023 5:00 AM
To: r-sig-geo at r-project.org <r-sig-geo at r-project.org>
Subject: R-sig-Geo Digest, Vol 243, Issue 3

Send R-sig-Geo mailing list submissions to
        r-sig-geo at r-project.org

To subscribe or unsubscribe via the World Wide Web, visit
        https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-geo&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754639883%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=Zv6cmTUDnTT3WBgX%2Bwg%2FNFc%2Bx8BK84YatH%2Fjalf6grY%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-sig-geo>
or, via email, send a message with subject or body 'help' to
        r-sig-geo-request at r-project.org

You can reach the person managing the list at
        r-sig-geo-owner at r-project.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of R-sig-Geo digest..."


Today's Topics:

   1. Re: spdep: new zero.policy attribute (Roger Bivand)
   2. Re: spdep: new zero.policy attribute (Josiah Parry)

----------------------------------------------------------------------

Message: 1
Date: Sun, 5 Nov 2023 15:31:16 +0000
From: Roger Bivand <Roger.Bivand at nhh.no>
To: "r-sig-geo at r-project.org" <r-sig-geo at r-project.org>
Subject: Re: [R-sig-Geo] spdep: new zero.policy attribute
Message-ID:
        <SV0P279MB0475841DFE21EE66FBCBD252EEABA at SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>

Content-Type: text/plain; charset="iso-8859-1"

And a question: in nb2listw() and similar functions creating spatial weights listw objects, would it be sensible to guess that the presence of no-neighbour observations in the input nb neighbour implies the choice of a spatially lagged value of zero (zero.policy=TRUE), lx = Wx, rather than NA (zero.policy=FALSE)?

That is, use by default zero.policy=any(card(nb) == 0L) rather than zero.policy=NULL and look in the spdep option set by default on package load to FALSE but settable by the user?

Would this be taking trying to be helpful too far, given that the analyst is creating the neighbour object and presumably should take responsibility for choices made?

Context: polygons not sharing boundaries with other polygons do exist legitimately in data sources, but setting spatially lagged values to zero for those polygons is quite an invasive imputation. It may be better to oblige the user to make the choice when the spatial weights listw object is created.

Little is known about the problem, for a recent treatment for CAR models see: https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Farxiv.org%2Fabs%2F1705.04854&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754639883%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=G8%2B714lKy1JUjezV0C%2FlRmSGYsq8WCj0iPkwk%2FQjMQI%3D&reserved=0<https://arxiv.org/abs/1705.04854>, published as https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdoi.org%2F10.1016%2Fj.sste.2018.04.002&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754639883%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=nUkXfGSH%2BX8Y0RJSL1MTch67EdzW861xbHZiWuQRJ9w%3D&reserved=0<https://doi.org/10.1016/j.sste.2018.04.002>, where: "The specification of a CAR model on a disconnected graph is undefined ... [t]here are essentially two types of disconnected graphs: first, a graph containing an island (a singleton node with no neighbours), second, a graph split in different sub-graphs (each of them being a connected graph)".

This question concerns the former, singleton, case, but adding sub-graph counts if greater than unity to summary.nb and print.nb address the second . Very possibly, functions creating nb neighbour objects should themselves report that an output object (graph) is not connected, bigDM CARBayes CARBayesST geostan spatialreg stampr do call spdep::n.comp.nb themselves to check the subgraph count.

Interested in feedback,

Roger

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no

________________________________________
From: R-sig-Geo <r-sig-geo-bounces at r-project.org> on behalf of Roger Bivand <Roger.Bivand at nhh.no>
Sent: 04 November 2023 18:53
To: r-sig-geo at r-project.org
Subject: [R-sig-Geo] spdep: new zero.policy attribute

In forthcoming spdep 1.3-1, spatial weight listw objects get a new zero.policy attribute. The attribute is added as objects are created to record the status of the zero.policy argument in the function creating the object, see: https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fr-spatial%2Fspdep%2Fcommit%2Fe159de922c61713529a4075b0dfc2966eb8f9ad6&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754639883%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=uy25DfhupOiu78MrTTjDn6nMPUDkHdYehSHimuMVoJk%3D&reserved=0<https://github.com/r-spatial/spdep/commit/e159de922c61713529a4075b0dfc2966eb8f9ad6>.

Reverse dependency checks only show problems from over-eager unit testing in SpatialFeatureExperiment, a Bioconductor package, but other workflows may be impacted. The new attribute is used in tests for spatial autocorrelation to set the zero.policy argument in those tests (the arguments were zero.policy=NULL, are now zero.policy=attr(listw, "zero.policy") where listw is the spatial weights object argument to the test function.

This will be extended to spatialreg and friends if nobody reports negative impacts here soon. I'll wait before releasing 1.3-1 for a few days to see if any feedback is forthcoming.

Hope this long-overdue change is helpful,

Roger

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no
_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-geo&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754639883%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=Zv6cmTUDnTT3WBgX%2Bwg%2FNFc%2Bx8BK84YatH%2Fjalf6grY%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-sig-geo>




------------------------------

Message: 2
Date: Sun, 5 Nov 2023 12:01:38 -0500
From: Josiah Parry <josiah.parry at gmail.com>
To: Roger Bivand <Roger.Bivand at nhh.no>
Cc: "r-sig-geo at r-project.org" <r-sig-geo at r-project.org>
Subject: Re: [R-sig-Geo] spdep: new zero.policy attribute
Message-ID:
        <CAL3ufULghGnSos1J1kMVGVVWdhiawoz+ec=QbraQRY-x2h=kgg at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

My take is generally that less is more. In the case of an isolated node, I
think the best thing to do is to return NA rather than 0. For example
consider administrative boundaries where the lagged variable is median
household income. If we returned a 0 in that case, we'd likely be
introducing quite the outlier!

My preference would be to _always_ default to NA lagged values when no
neighbors are present. Additionally, it would be quite nice to instruct
users on how to impute these values with other lagged variables. Say we
have an isolated node, but we don't want an NA value. We can impute that
missing value with the spatial lag of the variable using a different
neighborhood construction?e.g. using KNN with k = 3 to *ensure* that the
node always has values to lag.

Here is an example gist imputing k=3 lag
https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgist.github.com%2FJosiahParry%2Feb7878fc375fb931ddd6675a2c591a2b&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754639883%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=%2FcHiYgOC3o0dU1NqiP4SbHH1B4JEejGvfi1qyO62iWM%3D&reserved=0<https://gist.github.com/JosiahParry/eb7878fc375fb931ddd6675a2c591a2b>

Another option could be to use the focal feature's value *as* the lag
itself. If a location has no neighborhood could we argue that the location *is
*its own neighborhood?

I'm not too familiar with the models to comment on them, though. I do see
this more as a pre-processing / data imputation issue. I suspect that's
more of a machine learning paradigm though!


On Sun, Nov 5, 2023 at 10:31?AM Roger Bivand <Roger.Bivand at nhh.no> wrote:

> And a question: in nb2listw() and similar functions creating spatial
> weights listw objects, would it be sensible to guess that the presence of
> no-neighbour observations in the input nb neighbour implies the choice of a
> spatially lagged value of zero (zero.policy=TRUE), lx = Wx, rather than NA
> (zero.policy=FALSE)?
>
> That is, use by default zero.policy=any(card(nb) == 0L) rather than
> zero.policy=NULL and look in the spdep option set by default on package
> load to FALSE but settable by the user?
>
> Would this be taking trying to be helpful too far, given that the analyst
> is creating the neighbour object and presumably should take responsibility
> for choices made?
>
> Context: polygons not sharing boundaries with other polygons do exist
> legitimately in data sources, but setting spatially lagged values to zero
> for those polygons is quite an invasive imputation. It may be better to
> oblige the user to make the choice when the spatial weights listw object is
> created.
>
> Little is known about the problem, for a recent treatment for CAR models
> see: https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Farxiv.org%2Fabs%2F1705.04854&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754639883%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=G8%2B714lKy1JUjezV0C%2FlRmSGYsq8WCj0iPkwk%2FQjMQI%3D&reserved=0<https://arxiv.org/abs/1705.04854>, published as
> https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdoi.org%2F10.1016%2Fj.sste.2018.04.002&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754796114%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=zsDOSppZjxGiSppcmXCSYb1lWlIh8RgettJucnm4RNg%3D&reserved=0<https://doi.org/10.1016/j.sste.2018.04.002>, where: "The specification of
> a CAR model on a disconnected graph is undefined ... [t]here are
> essentially two types of disconnected graphs: first, a graph containing an
> island (a singleton node with no neighbours), second, a graph split in
> different sub-graphs (each of them being a connected graph)".
>
> This question concerns the former, singleton, case, but adding sub-graph
> counts if greater than unity to summary.nb and print.nb address the second
> . Very possibly, functions creating nb neighbour objects should themselves
> report that an output object (graph) is not connected, bigDM CARBayes
> CARBayesST geostan spatialreg stampr do call spdep::n.comp.nb themselves to
> check the subgraph count.
>
> Interested in feedback,
>
> Roger
>
> --
> Roger Bivand
> Emeritus Professor
> Norwegian School of Economics
> Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
> Roger.Bivand at nhh.no
>
> ________________________________________
> From: R-sig-Geo <r-sig-geo-bounces at r-project.org> on behalf of Roger
> Bivand <Roger.Bivand at nhh.no>
> Sent: 04 November 2023 18:53
> To: r-sig-geo at r-project.org
> Subject: [R-sig-Geo] spdep: new zero.policy attribute
>
> In forthcoming spdep 1.3-1, spatial weight listw objects get a new
> zero.policy attribute. The attribute is added as objects are created to
> record the status of the zero.policy argument in the function creating the
> object, see:
> https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fr-spatial%2Fspdep%2Fcommit%2Fe159de922c61713529a4075b0dfc2966eb8f9ad6&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754796114%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=E3ixQ1qYnfd6iqsSSZzwmHbvhayd4S04EtYfh0wENTc%3D&reserved=0<https://github.com/r-spatial/spdep/commit/e159de922c61713529a4075b0dfc2966eb8f9ad6>
> .
>
> Reverse dependency checks only show problems from over-eager unit testing
> in SpatialFeatureExperiment, a Bioconductor package, but other workflows
> may be impacted. The new attribute is used in tests for spatial
> autocorrelation to set the zero.policy argument in those tests (the
> arguments were zero.policy=NULL, are now zero.policy=attr(listw,
> "zero.policy") where listw is the spatial weights object argument to the
> test function.
>
> This will be extended to spatialreg and friends if nobody reports negative
> impacts here soon. I'll wait before releasing 1.3-1 for a few days to see
> if any feedback is forthcoming.
>
> Hope this long-overdue change is helpful,
>
> Roger
>
> --
> Roger Bivand
> Emeritus Professor
> Norwegian School of Economics
> Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
> Roger.Bivand at nhh.no
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-geo&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754796114%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=iebpGpErkLKR7eWsKVSU9znpLElbqqa1QUjjKCH9yZ8%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-sig-geo>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-geo&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754796114%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=iebpGpErkLKR7eWsKVSU9znpLElbqqa1QUjjKCH9yZ8%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-sig-geo>
>

        [[alternative HTML version deleted]]




------------------------------

Subject: Digest Footer

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-geo&data=05%7C01%7Cconnor.donegan%40utdallas.edu%7C981c03aaa25a43db669d08dbdeb7b093%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C638348652754796114%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=iebpGpErkLKR7eWsKVSU9znpLElbqqa1QUjjKCH9yZ8%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-sig-geo>


------------------------------

End of R-sig-Geo Digest, Vol 243, Issue 3
*****************************************

	[[alternative HTML version deleted]]


From n|ko@@tz|ok@@ @end|ng |rom gm@||@com  Wed Nov  8 11:18:18 2023
From: n|ko@@tz|ok@@ @end|ng |rom gm@||@com (Nikolaos Tziokas)
Date: Wed, 8 Nov 2023 10:18:18 +0000
Subject: [R-sig-Geo] Preprocess daily Black Marble (NVP46A2) nighttime light
 product
Message-ID: <CAGg5H0bDRVL7VSGOKL1rG93eSPSf10v_PpeBAULjB2rBHpuJXQ@mail.gmail.com>

I downloaded NASA's Black Marble daily product (VNP46A2) which is in h5
format (the data can be dowloaded from their website
<https://ladsweb.modaps.eosdis.nasa.gov/search/order/1/VNP46A2--5000> (it's
free you just need to create and account) or from my GDrive
<https://drive.google.com/drive/folders/1V115zpdU2-5fXssI6iWv_F6aNu4E5qA7>).
One needs to preprocess the data using the Scientific Data Sets (SDS)
included in the h5 file. Based on the User Guide, these are the following
parameters I need to account for:

Table 4, page 14, Value of QF_Cloud_Mask in the VNP46A1/VJ146A1 product:
Bit -- Flag description key -- Interpretation
0 -- Day/night -- 0 = Night
4-5 -- Cloud Mask Quality -- 11 = High
6-7 -- Cloud Detection Results & Confidence Indicator -- 00 = Confident
Clear
8 -- Shadow Detected -- 0 = No
9 -- Cirrus Detection (IR) (BTM15 ? BTM16) -- 0 = No Cloud
10 -- Snow/ Ice Surface -- 0 = No Snow/Ice

Table 7, page 17, Values of the Mandatory_Quality_Flag in VNP46A2/VJ146A2
product:
Value -- Retrieval quality -- Algorithm instance
00 -- High-quality -- Main algorithm (Persistent nighttime lights)

Table 8, page 17, Values of the Snow_Flag in VNP46A2/VJ146A2 product:
Flag description key -- Value -- Interpretation
Snow/ Ice Surface -- 00 -- No Snow/Ice

In the above tables I included the bit values I want to use to preprocess
the NTL product, called Gap_Filled_DNB_BRDFCorrected_NTL.

I am using R's terra package to preprocess the product. So far what I have
managed to do is:

library(terra)

wd <- "path/"

r <- rast(paste0(wd, "VNP46A2.A2018038.h28v07.001.2020333204506.h5"))

crs(r) <- "epsg:4326"

# dimensions
2400*(15/(60*60))

h = 28
v = 7

ext(r) = c(-180+h*10,-180+(h+1)*10, (8-v)*10,(8-v+1)*10) # up to this point
the code works well

# the tif images inside the h5 file (for the ifel function below)
ntl <- r[[3]] # this is the Gap_Filled_DNB_BRDFCorrected_NTL
latest_high_quality_retrieval <- r[[4]]
mandatory_quality_flag <- r[[5]]
qf_cloud_mask <- r[[6]]
snow_mask <- r[[7]]

# here is the issue!!!
result <- ifel(r[[4]] > 0 & r[[5]] == 00 & r[[6]] == 1 & r[[7]] == 00,
r[[3]], NA)

 # scale factor based on the User Guide table 6, page 16
result1 <- result * 0.1

writeRaster(result1, paste0(wd, "ntl.tif"), overwrite = TRUE)
The writeRaster function returns an empty raster with null values.

I can understand how to syntax the ifel for the Mandatory_Quality_Flag and
Snow_Flag but I can't understand how to syntax the bits for the
QF_Cloud_Mask.

Could you help me syntax the ifel function properly using the bits from the
tables? In a very abstract sense, the ifel statement should say:

If
snow_flag is 00 AND
Mandatory_Quality_Flag is 00 AND
the bit 0 from the QF_Cloud_Mask is 0 AND
the bit 4-5 from the QF_Cloud_Mask is  11 AND
the bit 6-7 from the QF_Cloud_Mask is 0 AND
the bit 8 from the QF_Cloud_Mask is  0 AND
the bit 9 from the QF_Cloud_Mask is 0 AND
the bit 10 from the QF_Cloud_Mask is 0 THEN
keep the values of the Gap_Filled_DNB_BRDFCorrected_NTL ELSE
NA
-- 
Tziokas Nikolaos
Cartographer

Tel:(+44)07561120302
LinkedIn <http://linkedin.com/in/nikolaos-tziokas-896081130>

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Thu Nov  9 12:52:24 2023
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Thu, 9 Nov 2023 11:52:24 +0000
Subject: [R-sig-Geo] spdep: new zero.policy attribute
In-Reply-To: <CAL3ufULghGnSos1J1kMVGVVWdhiawoz+ec=QbraQRY-x2h=kgg@mail.gmail.com>
References: <SV0P279MB0475E88F8A0CB703080AA22EEEA4A@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
 <SV0P279MB0475841DFE21EE66FBCBD252EEABA@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
 <CAL3ufULghGnSos1J1kMVGVVWdhiawoz+ec=QbraQRY-x2h=kgg@mail.gmail.com>
Message-ID: <SV0P279MB0475000B80A52A2CE8A8A2FFEEAFA@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>

Thanks, Josiah and Connor!

We are moving the discussion to: https://github.com/gpiras/sphet/issues/17 for those who can participate there - if someone with comments prefers not to write there, please continue to follow up here.

Roger

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no

________________________________________
From: Josiah Parry <josiah.parry at gmail.com>
Sent: 05 November 2023 18:01
To: Roger Bivand
Cc: r-sig-geo at r-project.org
Subject: Re: [R-sig-Geo] spdep: new zero.policy attribute

You don't often get email from josiah.parry at gmail.com. Learn why this is important<https://aka.ms/LearnAboutSenderIdentification>
My take is generally that less is more. In the case of an isolated node, I think the best thing to do is to return NA rather than 0. For example consider administrative boundaries where the lagged variable is median household income. If we returned a 0 in that case, we'd likely be introducing quite the outlier!

My preference would be to _always_ default to NA lagged values when no neighbors are present. Additionally, it would be quite nice to instruct users on how to impute these values with other lagged variables. Say we have an isolated node, but we don't want an NA value. We can impute that missing value with the spatial lag of the variable using a different neighborhood construction?e.g. using KNN with k = 3 to ensure that the node always has values to lag.

Here is an example gist imputing k=3 lag https://gist.github.com/JosiahParry/eb7878fc375fb931ddd6675a2c591a2b<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgist.github.com%2FJosiahParry%2Feb7878fc375fb931ddd6675a2c591a2b&data=05%7C01%7CRoger.Bivand%40nhh.no%7C2486f70674ed4d8f788508dbde20f09c%7C33a15b2f849941998d56f20b5aa91af2%7C0%7C0%7C638348005283188250%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=K8weAXIlvFdTkHIlsVnJSgTbwG%2F2GNOn57XTtu9rMpQ%3D&reserved=0>

Another option could be to use the focal feature's value as the lag itself. If a location has no neighborhood could we argue that the location is its own neighborhood?

I'm not too familiar with the models to comment on them, though. I do see this more as a pre-processing / data imputation issue. I suspect that's more of a machine learning paradigm though!


On Sun, Nov 5, 2023 at 10:31?AM Roger Bivand <Roger.Bivand at nhh.no<mailto:Roger.Bivand at nhh.no>> wrote:
And a question: in nb2listw() and similar functions creating spatial weights listw objects, would it be sensible to guess that the presence of no-neighbour observations in the input nb neighbour implies the choice of a spatially lagged value of zero (zero.policy=TRUE), lx = Wx, rather than NA (zero.policy=FALSE)?

That is, use by default zero.policy=any(card(nb) == 0L) rather than zero.policy=NULL and look in the spdep option set by default on package load to FALSE but settable by the user?

Would this be taking trying to be helpful too far, given that the analyst is creating the neighbour object and presumably should take responsibility for choices made?

Context: polygons not sharing boundaries with other polygons do exist legitimately in data sources, but setting spatially lagged values to zero for those polygons is quite an invasive imputation. It may be better to oblige the user to make the choice when the spatial weights listw object is created.

Little is known about the problem, for a recent treatment for CAR models see: https://arxiv.org/abs/1705.04854<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Farxiv.org%2Fabs%2F1705.04854&data=05%7C01%7CRoger.Bivand%40nhh.no%7C2486f70674ed4d8f788508dbde20f09c%7C33a15b2f849941998d56f20b5aa91af2%7C0%7C0%7C638348005283188250%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=GzEc02zEBhB8Y9D6Xy7To%2FX2qjCF5p9EzxeEjmVF6a8%3D&reserved=0>, published as https://doi.org/10.1016/j.sste.2018.04.002<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdoi.org%2F10.1016%2Fj.sste.2018.04.002&data=05%7C01%7CRoger.Bivand%40nhh.no%7C2486f70674ed4d8f788508dbde20f09c%7C33a15b2f849941998d56f20b5aa91af2%7C0%7C0%7C638348005283188250%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=i9DpuNPqlxtc%2ByPoiR2dUAV4uCRo33La9TxYVqAg838%3D&reserved=0>, where: "The specification of a CAR model on a disconnected graph is undefined ... [t]here are essentially two types of disconnected graphs: first, a graph containing an island (a singleton node with no neighbours), second, a graph split in different sub-graphs (each of them being a connected graph)".

This question concerns the former, singleton, case, but adding sub-graph counts if greater than unity to summary.nb and print.nb address the second . Very possibly, functions creating nb neighbour objects should themselves report that an output object (graph) is not connected, bigDM CARBayes CARBayesST geostan spatialreg stampr do call spdep::n.comp.nb themselves to check the subgraph count.

Interested in feedback,

Roger

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no<mailto:Roger.Bivand at nhh.no>

________________________________________
From: R-sig-Geo <r-sig-geo-bounces at r-project.org<mailto:r-sig-geo-bounces at r-project.org>> on behalf of Roger Bivand <Roger.Bivand at nhh.no<mailto:Roger.Bivand at nhh.no>>
Sent: 04 November 2023 18:53
To: r-sig-geo at r-project.org<mailto:r-sig-geo at r-project.org>
Subject: [R-sig-Geo] spdep: new zero.policy attribute

In forthcoming spdep 1.3-1, spatial weight listw objects get a new zero.policy attribute. The attribute is added as objects are created to record the status of the zero.policy argument in the function creating the object, see: https://github.com/r-spatial/spdep/commit/e159de922c61713529a4075b0dfc2966eb8f9ad6<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fr-spatial%2Fspdep%2Fcommit%2Fe159de922c61713529a4075b0dfc2966eb8f9ad6&data=05%7C01%7CRoger.Bivand%40nhh.no%7C2486f70674ed4d8f788508dbde20f09c%7C33a15b2f849941998d56f20b5aa91af2%7C0%7C0%7C638348005283188250%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=fZnjmNrcQKjLU3%2BDdz%2BagbRLj%2BnosBV7lapfcZwOiks%3D&reserved=0>.

Reverse dependency checks only show problems from over-eager unit testing in SpatialFeatureExperiment, a Bioconductor package, but other workflows may be impacted. The new attribute is used in tests for spatial autocorrelation to set the zero.policy argument in those tests (the arguments were zero.policy=NULL, are now zero.policy=attr(listw, "zero.policy") where listw is the spatial weights object argument to the test function.

This will be extended to spatialreg and friends if nobody reports negative impacts here soon. I'll wait before releasing 1.3-1 for a few days to see if any feedback is forthcoming.

Hope this long-overdue change is helpful,

Roger

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no<mailto:Roger.Bivand at nhh.no>
_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org<mailto:R-sig-Geo at r-project.org>
https://stat.ethz.ch/mailman/listinfo/r-sig-geo<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-geo&data=05%7C01%7CRoger.Bivand%40nhh.no%7C2486f70674ed4d8f788508dbde20f09c%7C33a15b2f849941998d56f20b5aa91af2%7C0%7C0%7C638348005283188250%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=MZGKctkwXrNZulRgleZh3QDfeLHWz4sTMcO9%2FTUMKMI%3D&reserved=0>

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org<mailto:R-sig-Geo at r-project.org>
https://stat.ethz.ch/mailman/listinfo/r-sig-geo<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-geo&data=05%7C01%7CRoger.Bivand%40nhh.no%7C2486f70674ed4d8f788508dbde20f09c%7C33a15b2f849941998d56f20b5aa91af2%7C0%7C0%7C638348005283188250%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=MZGKctkwXrNZulRgleZh3QDfeLHWz4sTMcO9%2FTUMKMI%3D&reserved=0>

From denn2duk @end|ng |rom y@hoo@com  Tue Nov 21 22:55:06 2023
From: denn2duk @end|ng |rom y@hoo@com (Denys Dukhovnov)
Date: Tue, 21 Nov 2023 21:55:06 +0000 (UTC)
Subject: [R-sig-Geo] Adjusting for HAC in splm models
References: <1993974628.6736544.1700603706230.ref@mail.yahoo.com>
Message-ID: <1993974628.6736544.1700603706230@mail.yahoo.com>

Dear community,

I am trying to interpret and report the results of my spatial panel analysis, but I am running into issues while attempting to accommodate for spatial and serial autocorrelation and clustering in the errors.

What implemented solutions currently exist in R for heteroskedasticity and autocorrelation correction (HAC) and/or standard error clustering for spatial panel models? Beyond the robust that could be run with non-spatial plm, fixest, or lfe packages, I have not been able to find an analogous HAC procedure for spatial panel models. The typical lmtest::coeftest() with sandwich vcov argument do not work directly on splm objects.?

A typical error on application of lmtest:coeftest(splm.obj, .vcov = vcovHAC(splm.obj)) is this:
Error in UseMethod("estfun") :?no applicable method for 'estfun' applied to an object of class "c('splm_ML', 'splm', 'splm_ML')"

However, the splm documentation says that splm::vcov.splm() function is able to extract vcov matrix for interoperability with lmtest functions. How would I go about doing it?

I consulted a fairly recent paper on software for spatial panel analysis by Bivand, Millo & Piras (2021), but there is little in the way of discussion on how to adjust the standard errors for spatial and serial autocorrelation and clustering.

I am also aware of Conley spatial errors (Conley (1999)), implemented in fixest package for example, but these tend to require latitude and longitude as inputs (which is fine, if my inputs were points). But my dataset consists of polygons of various sizes where reducing them to a centroid to compute a distance matrix becomes theoretically untenable. I would prefer to stick with adjacency/contiguity weights.

I am running R version 4.2.2 (splm v.1.6.3). Below is a simple reproducible example with similar outcomes:

library(plm)
library(spdep)
library(splm)
library(sandwich)
library(lmtest)

# Read in the data and spatial weights
data("RiceFarms")
data("riceww")

# Convert into panel data frame and convert spatial weights into list form
RiceFarms <- pdata.frame(RiceFarms, index = c("id", "time"))
listw <- mat2listw(riceww)

# Pre-compute lag for variables for use in Durbin specifications
RiceFarms$slag.pesticide <- slag(RiceFarms$pesticide, listw = listw)
RiceFarms$slag.wage <- slag(RiceFarms$wage, listw = listw)

# PLM model
plm.mod <- plm(goutput ~ pesticide + wage,data = RiceFarms,?
? ? ? ? ? ? ? ?model = "within",?
? ? ? ? ? ? ? ?effect = "twoways",?
? ? ? ? ? ? ? ?index = c("id", "time"))

# SDEM model
sdem.mod <- spml(goutput ~ pesticide + wage + slag.pesticide + slag.wage,
? ? ? ? ? ? ? ? ?data = RiceFarms,?
? ? ? ? ? ? ? ? ?listw = listw,
? ? ? ? ? ? ? ? ?spatial.error = "b",
? ? ? ? ? ? ? ? ?lag = FALSE,
? ? ? ? ? ? ? ? ?index = c("id", "time"),?
? ? ? ? ? ? ? ? ?model = "within",?
? ? ? ? ? ? ? ? ?effect = "twoways")

# Apply robust SE corrections
lmtest::coeftest(plm.mod, vcov. = vcovHC(plm.mod, method = "arellano", type = "HC0"))

# Neither works with splm object
lmtest::coeftest(sdem.mod, vcov. = vcovHC(sdem.mod, method = "arellano", type = "HC0"))
lmtest::coeftest(sdem.mod, vcov. = sandwich::vcovHAC(sdem.mod))


A follow-up question is how to deal with HAC standard error corrections for the impacts, given that spatial panel impacts function are not directly implemented in splm as of version 1.6.3, although the coefficients can be computed as per the previous posts on the subject:

https://stat.ethz.ch/pipermail/r-sig-geo/2016-April/024326.html
https://stat.ethz.ch/pipermail/r-sig-geo/2019-July/027513.html

Any help would be much appreciated.


Best,
Denys Dukhovnov


From mg@ @end|ng |rom ccee@ucm@e@  Wed Nov 22 12:40:18 2023
From: mg@ @end|ng |rom ccee@ucm@e@ (MIGUEL GOMEZ DE ANTONIO)
Date: Wed, 22 Nov 2023 12:40:18 +0100
Subject: [R-sig-Geo] Counting points in cells and ploting only cells
 containing points
Message-ID: <CAFMmzH7=5+LuLDGhDWmUaTCN9XUWdgrF3kk4=aeBWFkxVoD=hw@mail.gmail.com>

Dear community,

I want to plot only the cells of a grid that contains points.

I have a set of points (of class SpatialPointsDataFrame) and a grid (of
class SpatialPolygonDataFrame).

I am interested in ploting the set of cells of the grid that contains
points:

1.       Count how many points fall in each cell of the grid.

2.       Plot only the cells that contains points.

I tried:

library(sf)

Points.sf=st_as_sf(points)

Grid.sf=st_as_sf(grid)

A=intersects(grid.sf, points.sf)

apply(A,1,any)

There I get the cells that contains points but:

1. How can I count how many points fall in each cell

2. How could I plot the set of cells that contains points?


Thank you very much for your help,


Miguel G?mez de Antonio
Profesor Titular de Universidad
Dpto. Econom?a Aplicada, P?blica y Pol?tica
Universidad Complutense de Madrid

	[[alternative HTML version deleted]]


From dexter@|ocke @end|ng |rom gm@||@com  Wed Nov 22 12:59:14 2023
From: dexter@|ocke @end|ng |rom gm@||@com (Dexter Locke)
Date: Wed, 22 Nov 2023 06:59:14 -0500
Subject: [R-sig-Geo] Counting points in cells and ploting only cells
 containing points
In-Reply-To: <CAFMmzH7=5+LuLDGhDWmUaTCN9XUWdgrF3kk4=aeBWFkxVoD=hw@mail.gmail.com>
References: <CAFMmzH7=5+LuLDGhDWmUaTCN9XUWdgrF3kk4=aeBWFkxVoD=hw@mail.gmail.com>
Message-ID: <CAA=SVwEcfZ4bcnNL8Opqbyuz8CrzBdgA3cs_87_nD8TnL13UvQ@mail.gmail.com>

Here is one approach. Kind of a silly example with just one grid cell, but
would work with more polygons and more points.


library(sf)
library(tidyverse)

# make some points data
# modified example from
# https://r-spatial.github.io/sf/reference/geos_binary_pred.html
(pts <-
    st_sfc(st_point(c(.5,.5)), st_point(c(1.5, 1.5)), st_point(c(2.5,
2.5))) |>
    st_as_sf()|>
    rowid_to_column(var = 'pts_id'))

(pol <-
    st_polygon(list(rbind(c(0,0), c(2,0), c(2,2), c(0,2), c(0,0)))) |>
    st_sfc() |>
    st_as_sf()|>
    rowid_to_column(var = 'pol_id')
  )

# look at the data, crude 'map'
plot(pts); plot(pol, add = TRUE) # take a look

# perform the intersection
pts_pol_int <-
  pts |>
  st_intersection(pol) # only going to retain the overlaps (drops
non-intersecting elements)

# count the overlaps
cont_pts_pol_int <-
  pts_pol_int |>
  st_drop_geometry() |> # pulls out the data frame (or tibble)
  group_by(pol_id) |>
  count()

cont_pts_pol_int # could be joined back to pol

HTH, DHL


On Wed, Nov 22, 2023 at 6:39?AM MIGUEL GOMEZ DE ANTONIO <mga at ccee.ucm.es>
wrote:

> Dear community,
>
> I want to plot only the cells of a grid that contains points.
>
> I have a set of points (of class SpatialPointsDataFrame) and a grid (of
> class SpatialPolygonDataFrame).
>
> I am interested in ploting the set of cells of the grid that contains
> points:
>
> 1.       Count how many points fall in each cell of the grid.
>
> 2.       Plot only the cells that contains points.
>
> I tried:
>
> library(sf)
>
> Points.sf=st_as_sf(points)
>
> Grid.sf=st_as_sf(grid)
>
> A=intersects(grid.sf, points.sf)
>
> apply(A,1,any)
>
> There I get the cells that contains points but:
>
> 1. How can I count how many points fall in each cell
>
> 2. How could I plot the set of cells that contains points?
>
>
> Thank you very much for your help,
>
>
> Miguel G?mez de Antonio
> Profesor Titular de Universidad
> Dpto. Econom?a Aplicada, P?blica y Pol?tica
> Universidad Complutense de Madrid
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From btupper @end|ng |rom b|ge|ow@org  Tue Nov 28 15:37:59 2023
From: btupper @end|ng |rom b|ge|ow@org (Ben Tupper)
Date: Tue, 28 Nov 2023 09:37:59 -0500
Subject: [R-sig-Geo] Counting points in cells and ploting only cells
 containing points
In-Reply-To: <CAA=SVwEcfZ4bcnNL8Opqbyuz8CrzBdgA3cs_87_nD8TnL13UvQ@mail.gmail.com>
References: <CAFMmzH7=5+LuLDGhDWmUaTCN9XUWdgrF3kk4=aeBWFkxVoD=hw@mail.gmail.com>
 <CAA=SVwEcfZ4bcnNL8Opqbyuz8CrzBdgA3cs_87_nD8TnL13UvQ@mail.gmail.com>
Message-ID: <CALrbzg11Gk6x8fwZV0oW-xkyzJR6xT=_5SnAcxus5cGH4U=0mA@mail.gmail.com>

Oh, that's an interesting approach; I haven't seen `count()` used like that
- nice!.

Here's an alternative that uses stars as a raster container, and the
`st_cells()` function to determine which cell each point belongs to.

### START
suppressPackageStartupMessages({
  library(stars)
  library(sf)
  library(dplyr)
})

#' Given cell indices, convert to col-row addresses
#' @export
#' @param x stars object
#' @param cells num, cell addresses
#' @return matrix of [col, row]
colrow_from_cells <- function(x, cells){
  d = dim(x)
  if (any(cells > prod(d))) stop("cell indices must <= nrow(x) * ncol(x)")
  col = ((cells-1) %% d[1])  + 1
  row = floor((cells - 1) / d[1]) + 1
  cbind(col, row)
}

R = system.file("tif/olinda_dem_utm25s.tif", package = "stars") |>
  stars::read_stars()


set.seed(1345)
pts = sf::st_bbox(R) |>
  sf::st_as_sfc() |>
  sf::st_sample(10000) |>
  sf::st_as_sf() |>
  sf::st_set_geometry("geometry")
index = stars::st_cells(R, pts)
xy = colrow_from_cells(R, index)

# augment the pts with index, row and column
# group by index, get the count per group
pts = dplyr::mutate(pts,
                    index = index,
                    row = xy[,1],
                    col = xy[,2]) |>
  sf::st_drop_geometry() |>
  dplyr::group_by(index) |>
  dplyr::group_map(
    function(tbl, key){
      dplyr::slice(tbl, 1) |>
        dplyr::mutate(n = nrow(tbl))
    }, .keep = TRUE) |>
  dplyr::bind_rows()


# make a "blank" copy of the raster, assign the counts to each cell
C = R*0
names(C) = "point count"
C[[1]][pts$index] <- pts$n
plot(C, axes = TRUE)
### END


On Wed, Nov 22, 2023 at 7:00?AM Dexter Locke <dexter.locke at gmail.com> wrote:

> Here is one approach. Kind of a silly example with just one grid cell, but
> would work with more polygons and more points.
>
>
> library(sf)
> library(tidyverse)
>
> # make some points data
> # modified example from
> # https://r-spatial.github.io/sf/reference/geos_binary_pred.html
> (pts <-
>     st_sfc(st_point(c(.5,.5)), st_point(c(1.5, 1.5)), st_point(c(2.5,
> 2.5))) |>
>     st_as_sf()|>
>     rowid_to_column(var = 'pts_id'))
>
> (pol <-
>     st_polygon(list(rbind(c(0,0), c(2,0), c(2,2), c(0,2), c(0,0)))) |>
>     st_sfc() |>
>     st_as_sf()|>
>     rowid_to_column(var = 'pol_id')
>   )
>
> # look at the data, crude 'map'
> plot(pts); plot(pol, add = TRUE) # take a look
>
> # perform the intersection
> pts_pol_int <-
>   pts |>
>   st_intersection(pol) # only going to retain the overlaps (drops
> non-intersecting elements)
>
> # count the overlaps
> cont_pts_pol_int <-
>   pts_pol_int |>
>   st_drop_geometry() |> # pulls out the data frame (or tibble)
>   group_by(pol_id) |>
>   count()
>
> cont_pts_pol_int # could be joined back to pol
>
> HTH, DHL
>
>
> On Wed, Nov 22, 2023 at 6:39?AM MIGUEL GOMEZ DE ANTONIO <mga at ccee.ucm.es>
> wrote:
>
> > Dear community,
> >
> > I want to plot only the cells of a grid that contains points.
> >
> > I have a set of points (of class SpatialPointsDataFrame) and a grid (of
> > class SpatialPolygonDataFrame).
> >
> > I am interested in ploting the set of cells of the grid that contains
> > points:
> >
> > 1.       Count how many points fall in each cell of the grid.
> >
> > 2.       Plot only the cells that contains points.
> >
> > I tried:
> >
> > library(sf)
> >
> > Points.sf=st_as_sf(points)
> >
> > Grid.sf=st_as_sf(grid)
> >
> > A=intersects(grid.sf, points.sf)
> >
> > apply(A,1,any)
> >
> > There I get the cells that contains points but:
> >
> > 1. How can I count how many points fall in each cell
> >
> > 2. How could I plot the set of cells that contains points?
> >
> >
> > Thank you very much for your help,
> >
> >
> > Miguel G?mez de Antonio
> > Profesor Titular de Universidad
> > Dpto. Econom?a Aplicada, P?blica y Pol?tica
> > Universidad Complutense de Madrid
> >
> >         [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


