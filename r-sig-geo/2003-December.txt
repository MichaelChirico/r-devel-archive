From massimiliano.cannata at supsi.ch  Tue Dec  2 11:43:22 2003
From: massimiliano.cannata at supsi.ch (Massimiliano Cannata)
Date: Tue, 02 Dec 2003 11:43:22 +0100
Subject: [R-sig-Geo] numeric(0) ?????
In-Reply-To: <HMEAKPEGMCEDLNICJDIHAEJMDDAA.kgleditsch@ucsd.edu>
References: <HMEAKPEGMCEDLNICJDIHAEJMDDAA.kgleditsch@ucsd.edu>
Message-ID: <3FCC6CCA.909@supsi.ch>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20031202/973a3c99/attachment.pl>

From olefc at daimi.au.dk  Tue Dec  2 12:04:06 2003
From: olefc at daimi.au.dk (Ole F. Christensen)
Date: Tue, 02 Dec 2003 12:04:06 +0100
Subject: [R-sig-Geo] numeric(0) ?????
In-Reply-To: <3FCC6CCA.909@supsi.ch>
References: <HMEAKPEGMCEDLNICJDIHAEJMDDAA.kgleditsch@ucsd.edu>
	<3FCC6CCA.909@supsi.ch>
Message-ID: <3FCC71A6.40100@daimi.au.dk>

Dear Massimiliano


How about

for (i in 1:20){
if(any(T$pluto==i)) T$pippo[T$pluto==i]
}

??

Depending on what you want to do with these subsets of the data.frame, 
you might want to consider using
``tapply'' or ``by'' [se the help-files for these functions] instead of 
the for loop.

For example :

tapply(T$pluto,T$pippo, sum)

Cheers

Ole


Massimiliano Cannata wrote:

>hello,
>I have a little problem with my script:
>
>I select a subset from a data frame
> 
>for (i in 1:20){
>T$pippo[T$pluto==i]
>}
>
>but sometime it is void because T$pluto==5 does not exists, the R answer is:
>
>T$pippo[T$pluto==5]
>  
>
>>numeric(0)
>>    
>>
>
>how to exclude this null subset? 
>and what is numeric(0), similar to NA?
>I try an if statement, but how to write if T$pippo[T$pluto==i] is numeric(0)???
>
>Thanks a lot.
>Maxi
>
>
>-------------
>Ing.  Massimiliano Cannata
>Istituto di Scienze della Terra - SUPSI
>C.P. 72 - CH-6952 Canobbio (Ticino, Switzerland)
>Tel +41 91 /935 12 25 - Fax +41 91 /935 12 09
>eMail: massimiliano.cannata at supsi.ch
>Internet: http://www.ist.supsi.ch
>
>
>	[[alternative HTML version deleted]]
>
>_______________________________________________
>R-sig-Geo mailing list
>R-sig-Geo at stat.math.ethz.ch
>https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
>
>
>  
>

-- 
Ole F. Christensen
Center for Bioinformatik
Datalogisk Institut
Aarhus Universitet
Ny Munkegade, Bygning 540
8000 Aarhus C
Denmark



From stanimura-ngs at umin.ac.jp  Wed Dec  3 01:49:39 2003
From: stanimura-ngs at umin.ac.jp (Susumu Tanimura)
Date: Wed, 3 Dec 2003 09:49:39 +0900
Subject: [R-sig-Geo] How to create generalized spatial weight matrix in R
Message-ID: <20031203094939.3e13a595.stanimura-ngs@umin.ac.jp>

Hi there,

Dose any one tell me how to create a following generalized spatial
weight matrix in R?

w_{ij}=(l_{ij}/\sum_{j \in J}l_{ij})/d_{ij} (i=1,...,n)

l_{ij} is length of shared  border of area i and area j. d_{ij} is
centroid to centroid distance.

I have enjoyed Moran's I with spdep package, but I found nb2listw()
supported only binary spatial weight matrix and its standardized one.

Other than R, which software can create generalized spatial weight
matrix?

Thank you in advance.

--
Susumu Tanimura <stanimura-ngs at umin.ac.jp>
Dept. of Soico-environmental Medicine
Institute of Tropical Medicine
Nagasaki University, Japan



From Roger.Bivand at nhh.no  Wed Dec  3 12:28:10 2003
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 3 Dec 2003 12:28:10 +0100 (CET)
Subject: [R-sig-Geo] How to create generalized spatial weight matrix in R
In-Reply-To: <20031203094939.3e13a595.stanimura-ngs@umin.ac.jp>
Message-ID: <Pine.LNX.4.44.0312031220400.1934-100000@reclus.nhh.no>

On Wed, 3 Dec 2003, Susumu Tanimura wrote:

> Hi there,
> 
> Dose any one tell me how to create a following generalized spatial
> weight matrix in R?
> 
> w_{ij}=(l_{ij}/\sum_{j \in J}l_{ij})/d_{ij} (i=1,...,n)
> 
> l_{ij} is length of shared  border of area i and area j. d_{ij} is
> centroid to centroid distance.

Centroid to centroid distance can be done in several software 
environments, including spdep - see function nbdists(). The difficulty is 
the boundary proportion, where you really need the arc topology to get at 
this cheaply. Just as a thought, how closely might the boundary length 
proportions from a Voronoi diagram match the measured proportions? Would 
that give an approximation?

In general you may find that the binary representation is more 
parsimonious - it assumes less about a relationship we in any case do not 
know about.

> 
> I have enjoyed Moran's I with spdep package, but I found nb2listw()
> supported only binary spatial weight matrix and its standardized one.
> 
See the glist argument to nb2listw() for the way to insert generalised 
weights, such as inverse distance.


> Other than R, which software can create generalized spatial weight
> matrix?

On Windows, you could try GeoDa.

Are there other suggestions, perhaps in Matlab?

Roger

> 
> Thank you in advance.
> 
> --
> Susumu Tanimura <stanimura-ngs at umin.ac.jp>
> Dept. of Soico-environmental Medicine
> Institute of Tropical Medicine
> Nagasaki University, Japan
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Breiviksveien 40, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 93 93
e-mail: Roger.Bivand at nhh.no



From stanimura-ngs at umin.ac.jp  Wed Dec  3 21:16:35 2003
From: stanimura-ngs at umin.ac.jp (Susumu =?ISO-2022-JP?B?VEFOSU1VUkEvGyRCQytCPBsoQiAbJEI/OBsoQg==?=)
Date: Thu, 4 Dec 2003 05:16:35 +0900
Subject: [R-sig-Geo] How to create generalized spatial weight matrix in R
In-Reply-To: <Pine.LNX.4.44.0312031220400.1934-100000@reclus.nhh.no>
References: <20031203094939.3e13a595.stanimura-ngs@umin.ac.jp>
	<Pine.LNX.4.44.0312031220400.1934-100000@reclus.nhh.no>
Message-ID: <20031204051635.0df75871.stanimura-ngs@umin.ac.jp>

Hi, Roger Bivand,

It is very happy to get response from the author of spdep.  The idea
to use the boundary length proportions from a Voronoi diagram instead
of polygon borders is ingenious for me.

Since  tripack or deldir seems to be related to voronoi diagram in
current library of R, I am going to check these.  Do you have any
other suggestions?

> > I have enjoyed Moran's I with spdep package, but I found
> > nb2listw() supported only binary spatial weight matrix and its
> > standardized one.
> > 
> See the glist argument to nb2listw() for the way to insert
> generalised weights, such as inverse distance.

I overlooked the glist. You gave us example in help, so I now know how
to make generalized spatial wight matrix from any other list.

> > Other than R, which software can create generalized spatial weight
> > matrix?
> 
> On Windows, you could try GeoDa.

Ummm, I am a Linux user.

Thank you.



From Roger.Bivand at nhh.no  Wed Dec  3 21:37:23 2003
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 3 Dec 2003 21:37:23 +0100 (CET)
Subject: [R-sig-Geo] How to create generalized spatial weight matrix in R
In-Reply-To: <20031204051635.0df75871.stanimura-ngs@umin.ac.jp>
Message-ID: <Pine.LNX.4.44.0312032119020.2128-100000@reclus.nhh.no>

On Thu, 4 Dec 2003, Susumu [ISO-2022-JP] TANIMURA/谷村 晋 wrote:

> 
> It is very happy to get response from the author of spdep.  The idea
> to use the boundary length proportions from a Voronoi diagram instead
> of polygon borders is ingenious for me.
> 
> Since  tripack or deldir seems to be related to voronoi diagram in
> current library of R, I am going to check these.  Do you have any
> other suggestions?

No, I was thinking of tripack, but both could do it. They already contain 
topology (left-right neighbours I think) and computing the length of the 
boundaries must be simple. Perhaps someone with time on their hands and 
access to a range of shapes could see if this would be a workable or a 
very bad hack? It should handle Iowa quite well, shouldn't it? Can 
RArcInfo give us lengths of shared boundaries as a target from e00 and Arc 
binary polygons, say get.arcdata()? Cliff and Ord exclude the study area 
boundary - the proportion is of all internal boundaries per polygon, this 
probably needs to be looked at too?

> 
> > > I have enjoyed Moran's I with spdep package, but I found
> > > nb2listw() supported only binary spatial weight matrix and its
> > > standardized one.
> > > 
> > See the glist argument to nb2listw() for the way to insert
> > generalised weights, such as inverse distance.
> 
> I overlooked the glist. You gave us example in help, so I now know how
> to make generalized spatial wight matrix from any other list.
> 
> > > Other than R, which software can create generalized spatial weight
> > > matrix?
> > 
> > On Windows, you could try GeoDa.
> 
> Ummm, I am a Linux user.

Any others with experience of benefits or otherwise of using generalised 
weights?

Roger

> 
> Thank you.
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Breiviksveien 40, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 93 93
e-mail: Roger.Bivand at nhh.no



From hi_ono2001 at ybb.ne.jp  Thu Dec  4 09:12:12 2003
From: hi_ono2001 at ybb.ne.jp (Hisaji Ono)
Date: Thu, 4 Dec 2003 17:12:12 +0900
Subject: [R-sig-Geo] How to create generalized spatial weight matrix in R
References: <Pine.LNX.4.44.0312032119020.2128-100000@reclus.nhh.no>
Message-ID: <003d01c3ba3e$524750d0$818001db@webgis>

> Perhaps someone with time on their hands and
> access to a range of shapes could see if this would be a workable or a
> very bad hack? It should handle Iowa quite well, shouldn't it? Can
> RArcInfo give us lengths of shared boundaries as a target from e00 and Arc
> binary polygons, say get.arcdata()? Cliff and Ord exclude the study area
> boundary - the proportion is of all internal boundaries per polygon, this
> probably needs to be looked at too?
>

 Latest version of PostGIS with GEOS can calculate length of two
boundary-shared polygons.

 PostGIS's utilities can import from and export to shapefiles.

 R can use these functions via RODBC or maybe Rdbi.

 I'll show following example using RODBC.

  w<-c()
  tbl<-sqlQuery(channel,"select id  from columbus")

  for(i in tbl$id){
    tbl<-sqlQuery(channel,paste("select id,
length(intersection(the_geom,(select the_geom from columbus where id =",
i,"))) from columbus"))

    w<-cbind(w,tbl$length)
  }

For intersections of same geometries, this results are original geometry and
lengths are 0 (since length function calculate only length of linestring,
not (multi-)polygon).

  Regards.



From chcuartas11 at epm.net.co  Tue Dec  9 02:31:03 2003
From: chcuartas11 at epm.net.co (cuartas oquendo carlos humberto)
Date: Mon, 08 Dec 2003 20:31:03 -0500
Subject: [R-sig-Geo] R-sig-Geo: Moran'I
Message-ID: <253a75256b3a.256b3a253a75@epm.net.co>

Hello:
For knearneigh(x, k=1)to calculate Moran'I

what's the best criteria for chosing the best k?

Thank you very much for your help

Carlos



From Roger.Bivand at nhh.no  Tue Dec  9 18:16:41 2003
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 9 Dec 2003 18:16:41 +0100 (CET)
Subject: [R-sig-Geo] R-sig-Geo: Moran'I
In-Reply-To: <253a75256b3a.256b3a253a75@epm.net.co>
Message-ID: <Pine.LNX.4.44.0312091812390.12090-100000@reclus.nhh.no>

On Mon, 8 Dec 2003, cuartas oquendo carlos humberto wrote:

> Hello:
> For knearneigh(x, k=1)to calculate Moran'I
> 
> what's the best criteria for chosing the best k?

This will depend on your research problem, that is your assumptions about 
the number of neighbours you think influence each other. I'm not sure that 
any more is known about this, 1 and n are obviously special cases?

Roger

> 
> Thank you very much for your help
> 
> Carlos
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Breiviksveien 40, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 93 93
e-mail: Roger.Bivand at nhh.no



From guano at usp.br  Sun Dec 14 18:00:24 2003
From: guano at usp.br (Carlos Henrique Grohmann)
Date: Sun, 14 Dec 2003 15:00:24 -0200
Subject: [R-sig-Geo] trend surface analysis
Message-ID: <1071421224.3fdc972861a8e@webmail.usp.br>

Hello,

What is the better way to perform trend surface analysis in R (with GRASS data),
with third-order surfaces (or higher levels?)

thanks
-- 
+-------------------------------------------------+
        Carlos Henrique Grohmann - Guano  
    Geologist - MSc Student at IGc-USP - Brazil
       Linux User #89721  ICQ: 214752832
+-------------------------------------------------+



From Roger.Bivand at nhh.no  Sun Dec 14 18:36:16 2003
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sun, 14 Dec 2003 18:36:16 +0100 (CET)
Subject: [R-sig-Geo] trend surface analysis
In-Reply-To: <1071421224.3fdc972861a8e@webmail.usp.br>
Message-ID: <Pine.LNX.4.44.0312141831100.30467-100000@reclus.nhh.no>

On Sun, 14 Dec 2003, Carlos Henrique Grohmann wrote:

> Hello,
> 
> What is the better way to perform trend surface analysis in R (with GRASS data),
> with third-order surfaces (or higher levels?)

Almost certainly surf.ls() in the spatial package, because it transforms 
the coordinates internally to lie within -1, +1. So numerically it will be 
more stable than say higher powers of numbers of metres south or north of 
the Equator in UTM. Some thought is need to get the points of the 
prediction grid right for GRASS, though; see the trmat.G() wrapper 
function.

Roger

> 
> thanks
> 

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Breiviksveien 40, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 93 93
e-mail: Roger.Bivand at nhh.no



From White.Denis at epamail.epa.gov  Mon Dec 15 23:22:28 2003
From: White.Denis at epamail.epa.gov (White.Denis at epamail.epa.gov)
Date: Mon, 15 Dec 2003 14:22:28 -0800
Subject: [R-sig-Geo] FW: [STATSGRASS] Questions on calculating minimum distance
	between polygons and map attributes after m.in.e00
Message-ID: <OFBD934CD3.73F60AAD-ON88256DFD.0073156E-88256DFD.007AE219@epamail.epa.gov>





I am a new member of r-sig-geo and saw your message in
the archives.  I don't know whether you already had
algorithms in mind, or received some responses on this,
but two publications with algorithms are:

Chin F, Wang CA.  1983.  Optimal algorithms for the
intersection and the minimum distance problems between
planar polygons.  IEEE Transactions on Computers,
Vol C-32(12):1203-1207.

Okabe A, Miller HJ.  1996.  Exact computation methods for
calculating distances between objects in a cartographic
database.  Cartography and Geographic Information Systems
Vol 23(4):180-195.

> What I would like to do is to try to use an algorithm
> to determine the shortest distance between points on
> two states? outer boundaries, with each state defined
> either as a polygon or union of polygons.



From chcuartas11 at epm.net.co  Tue Dec 16 04:03:37 2003
From: chcuartas11 at epm.net.co (cuartas oquendo carlos humberto)
Date: Mon, 15 Dec 2003 22:03:37 -0500
Subject: [R-sig-Geo] R-sig-Geo: Moran'I
Message-ID: <3e4f393e84d5.3e84d53e4f39@epm.net.co>


Hello, 
Now, I am working with Moran?I.
When I use knearneigh(x,k) of spdep package,
What?s the meaning of k?
Why  Moran?I change when I change k?

Thank in advance

Carlos H. Cuartas O.



From danlinyu at csd.uwm.edu  Tue Dec 16 05:36:55 2003
From: danlinyu at csd.uwm.edu (Danlin Yu)
Date: Mon, 15 Dec 2003 22:36:55 -0600 (CST)
Subject: [R-sig-Geo] R-sig-Geo: Moran'I
In-Reply-To: <3e4f393e84d5.3e84d53e4f39@epm.net.co>
Message-ID: <Pine.OSF.3.96.1031215223339.18565C-100000@alpha1.csd.uwm.edu>

Hi, Carlos:

    In Professor Roger Bivand's last email, I think he has already pointed
out that k is the number of nearest neighbors which you will use to
determine the point adjacency relationship.
    Then it becomes natural that when you change the value of k, Moran's I
will change as well. Since it changes the weight matrix in calculating
Moran's I.
    Indeed, the meaning of those parameters is well explained in the
accompanied manual spdep.pdf, which you could downloaded for free from
CRAN. Or you can just type help(knearneigh) within R for the same
information. 
    Hope this helps.

On Mon, 15 Dec 2003, cuartas oquendo carlos humberto wrote:

> 
> Hello, 
> Now, I am working with Moran?I.
> When I use knearneigh(x,k) of spdep package,
> What?s the meaning of k?
> Why  Moran?I change when I change k?
> 
> Thank in advance
> 
> Carlos H. Cuartas O.
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
> 

    Sincerely,
    Danlin Yu, Ph.D. Candidate
    Department of Geography
    University of Wisconsin, Milwaukee
    Tel: (414)229-5818
    Fax: (414)229-3981
    Email: danlinyu at uwm.edu



From Roger.Bivand at nhh.no  Wed Dec 17 12:23:52 2003
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 17 Dec 2003 12:23:52 +0100 (CET)
Subject: [R-sig-Geo] FW: [STATSGRASS] Questions on calculating minimum
	dista ncebetween polygons and map attributes after m.in.e00
In-Reply-To: <OFBD934CD3.73F60AAD-ON88256DFD.0073156E-88256DFD.007AE219@epama
	il.epa.gov>
Message-ID: <Pine.LNX.4.44.0312171213570.1851-100000@reclus.nhh.no>

On Mon, 15 Dec 2003 White.Denis at epamail.epa.gov wrote:

> I am a new member of r-sig-geo and saw your message in
> the archives.  I don't know whether you already had
> algorithms in mind, or received some responses on this,
> but two publications with algorithms are:
> 
> Chin F, Wang CA.  1983.  Optimal algorithms for the
> intersection and the minimum distance problems between
> planar polygons.  IEEE Transactions on Computers,
> Vol C-32(12):1203-1207.
> 
> Okabe A, Miller HJ.  1996.  Exact computation methods for
> calculating distances between objects in a cartographic
> database.  Cartography and Geographic Information Systems
> Vol 23(4):180-195.
> 

Thanks for interesting references. In other email (I think offlist, but
repeating here to get further response), the idea of using OpenGIS
functions on a database was floated:

http://www.mysql.com/doc/en/Functions_that_test_spatial_relationships_between_ge
ometries.html

(para 10.5.6 in MSQL Manual 4.1) describes a function:

Distance(g1,g2) Returns as a double-precision number the shortest distance
between any two points in the two geometries.

I'm not sure whether this supports latlong. PostGIS also has the same
function as an OpenGIS function.  http://postgis.refractions.net/ has the
details:

Distance(geometry,geometry) Return the cartesian distance between two
geometries in projected units.

It also has:

distance_spheroid(point, point, spheroid) Returns linear distance between
two lat/lon points given a particular spheroid. See the explanation of
spheroids given for length_spheroid().  Currently only implemented for
points.

as a non-OpenGIS function. Kristian's question is about nation states, so 
latlong is an issue, I believe. This makes it non-trivial, of course!

Any other ideas?

Roger

> > What I would like to do is to try to use an algorithm
> > to determine the shortest distance between points on
> > two states??? outer boundaries, with each state defined
> > either as a polygon or union of polygons.
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Breiviksveien 40, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 93 93
e-mail: Roger.Bivand at nhh.no



From White.Denis at epamail.epa.gov  Wed Dec 17 17:29:27 2003
From: White.Denis at epamail.epa.gov (White.Denis at epamail.epa.gov)
Date: Wed, 17 Dec 2003 08:29:27 -0800
Subject: [R-sig-Geo] FW: [STATSGRASS] Questions on calculating minimum
	dista ncebetween polygons and map attributes after m.in.e00
Message-ID: <OF0C2BDB7D.E467E6AD-ON88256DFF.0058F5B5-88256DFF.005A959D@epamail.epa.gov>





Yes, spheroid distance is one issue; computational complexity is
another.  I looked into this when I had a problem of computing pairwise
distances between 10,000 polygons for an application in conservation
biology.  The brute force computational complexity, searching for the
closest pair of points across all pairs of polygons, would be about
O(m^2 * n^2), if there were n polygons with an average of m points, say.

In Kristian's case these numbers are not so prohibitive as the number of
countries is not so many, and he can cut down on the search space for
closest points by eye to some degree.  Using the MySQL function
"distance" may or may not be an efficient algorithm for the single pair
case (haven't looked at it carefully), but it would have to be embedded
in some outer algorithm for the many pairs situation.

I think that the Okabe and Miller approach with Voronoi methods is the
general way to go, but I didn't have time to program it, and couldn't
find an available implementation, so I punted and used a series of
buffered distances (I also had an exponential inverse distance relation
and therefore could set a reasonable maximum buffer size).

Denis

> On Mon, 15 Dec 2003 White.Denis at epamail.epa.gov wrote:
>
> > I am a new member of r-sig-geo and saw your message in
> > the archives.  I don't know whether you already had
> > algorithms in mind, or received some responses on this,
> > but two publications with algorithms are:
> >
> > Chin F, Wang CA.  1983.  Optimal algorithms for the
> > intersection and the minimum distance problems between
> > planar polygons.  IEEE Transactions on Computers,
> > Vol C-32(12):1203-1207.
> >
> > Okabe A, Miller HJ.  1996.  Exact computation methods for
> > calculating distances between objects in a cartographic
> > database.  Cartography and Geographic Information Systems
> > Vol 23(4):180-195.
> >
>
> Thanks for interesting references. In other email (I think offlist,
but
> repeating here to get further response), the idea of using OpenGIS
> functions on a database was floated:
>
>
http://www.mysql.com/doc/en/Functions_that_test_spatial_relationships_between_ge
> ometries.html
>
> (para 10.5.6 in MSQL Manual 4.1) describes a function:
>
> Distance(g1,g2) Returns as a double-precision number the shortest
distance
> between any two points in the two geometries.
>
> I'm not sure whether this supports latlong. PostGIS also has the same
> function as an OpenGIS function.  http://postgis.refractions.net/ has
the
> details:
>
> Distance(geometry,geometry) Return the cartesian distance between two
> geometries in projected units.
>
> It also has:
>
> distance_spheroid(point, point, spheroid) Returns linear distance
between
> two lat/lon points given a particular spheroid. See the explanation of
> spheroids given for length_spheroid().  Currently only implemented for
> points.
>
> as a non-OpenGIS function. Kristian's question is about nation states,
so
> latlong is an issue, I believe. This makes it non-trivial, of course!
>
> Any other ideas?
>
> Roger
>
> > > What I would like to do is to try to use an algorithm
> > > to determine the shortest distance between points on
> > > two states??? outer boundaries, with each state defined
> > > either as a polygon or union of polygons.
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at stat.math.ethz.ch
> > https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
> >
>
> --
> Roger Bivand
> Economic Geography Section, Department of Economics, Norwegian School
of
> Economics and Business Administration, Breiviksveien 40, N-5045
Bergen,
> Norway. voice: +47 55 95 93 55; fax +47 55 95 93 93
> e-mail: Roger.Bivand at nhh.no
>
>



From nikko at hailmail.net  Fri Dec 19 07:50:15 2003
From: nikko at hailmail.net (Nicholas Lewin-Koh)
Date: Fri, 19 Dec 2003 14:50:15 +0800
Subject: [R-sig-Geo] FW: [STATSGRASS] Questions on calculating minimum
	distance between polygons and map attributes after m.in.e00
In-Reply-To: <200312181113.hBIBDXmw027176@hypatia.math.ethz.ch>
References: <200312181113.hBIBDXmw027176@hypatia.math.ethz.ch>
Message-ID: <20031219065015.E820443DB6@server1.messagingengine.com>

Hi,
I am not very familiar with the m.in.e00 command in GRASS. Is the point
to compute an all pairs min distance between all polygons in a set
or just the min distance between two polygons or something inbetween. If
it is an all pairs problem then the optimum is O((n*m)^2) as Denis White
states below. If it is inbetween we can do much better. A potentially
easier implementation than the Okabe Miller approach is to just use a
good data structure on the bounding boxes of the polygons and filter the
returned list from a range query with a bruteforce menthod. That may be
efficient enough. On calculating the min (or max) distance between two
polygons one could probably do much better than O((m1*m2)^2) with some
clever triangulation of the polygons. 

Nicholas 

> Message: 1
> Date: Wed, 17 Dec 2003 12:23:52 +0100 (CET)
> From: Roger Bivand <Roger.Bivand at nhh.no>
> Subject: Re: [R-sig-Geo] FW: [STATSGRASS] Questions on calculating
> 	minimum	dista ncebetween polygons and map attributes after m.in.e00
> To: White.Denis at epamail.epa.gov
> Cc: r-sig-geo at stat.math.ethz.ch, kgleditsch at ucsd.edu
> Message-ID: <Pine.LNX.4.44.0312171213570.1851-100000 at reclus.nhh.no>
> Content-Type: TEXT/PLAIN; charset=ISO-8859-1
> 
> On Mon, 15 Dec 2003 White.Denis at epamail.epa.gov wrote:
> 
> > I am a new member of r-sig-geo and saw your message in
> > the archives.  I don't know whether you already had
> > algorithms in mind, or received some responses on this,
> > but two publications with algorithms are:
> > 
> > Chin F, Wang CA.  1983.  Optimal algorithms for the
> > intersection and the minimum distance problems between
> > planar polygons.  IEEE Transactions on Computers,
> > Vol C-32(12):1203-1207.
> > 
> > Okabe A, Miller HJ.  1996.  Exact computation methods for
> > calculating distances between objects in a cartographic
> > database.  Cartography and Geographic Information Systems
> > Vol 23(4):180-195.
> > 
> 
> Thanks for interesting references. In other email (I think offlist, but
> repeating here to get further response), the idea of using OpenGIS
> functions on a database was floated:
> 
> http://www.mysql.com/doc/en/Functions_that_test_spatial_relationships_between_ge
> ometries.html
> 
> (para 10.5.6 in MSQL Manual 4.1) describes a function:
> 
> Distance(g1,g2) Returns as a double-precision number the shortest
> distance
> between any two points in the two geometries.
> 
> I'm not sure whether this supports latlong. PostGIS also has the same
> function as an OpenGIS function.  http://postgis.refractions.net/ has the
> details:
> 
> Distance(geometry,geometry) Return the cartesian distance between two
> geometries in projected units.
> 
> It also has:
> 
> distance_spheroid(point, point, spheroid) Returns linear distance between
> two lat/lon points given a particular spheroid. See the explanation of
> spheroids given for length_spheroid().  Currently only implemented for
> points.
> 
> as a non-OpenGIS function. Kristian's question is about nation states, so 
> latlong is an issue, I believe. This makes it non-trivial, of course!
> 
> Any other ideas?
> 
> Roger
> 
> > > What I would like to do is to try to use an algorithm
> > > to determine the shortest distance between points on
> > > two states??? outer boundaries, with each state defined
> > > either as a polygon or union of polygons.
> > 
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at stat.math.ethz.ch
> > https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
> > 
> 
> -- 
> Roger Bivand
> Economic Geography Section, Department of Economics, Norwegian School of
> Economics and Business Administration, Breiviksveien 40, N-5045 Bergen,
> Norway. voice: +47 55 95 93 55; fax +47 55 95 93 93
> e-mail: Roger.Bivand at nhh.no
> 
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Wed, 17 Dec 2003 08:29:27 -0800
> From: White.Denis at epamail.epa.gov
> Subject: Re: [R-sig-Geo] FW: [STATSGRASS] Questions on calculating
> 	minimum	dista ncebetween polygons and map attributes after m.in.e00
> To: Roger.Bivand at nhh.no
> Cc: r-sig-geo at stat.math.ethz.ch, kgleditsch at ucsd.edu,
> 	r-sig-geo-bounces at stat.math.ethz.ch
> Message-ID:
> 	<OF0C2BDB7D.E467E6AD-ON88256DFF.0058F5B5-88256DFF.005A959D at epamail.epa.gov>
> 	
> Content-Type: text/plain; charset=UTF-8
> 
> 
> 
> 
> 
> Yes, spheroid distance is one issue; computational complexity is
> another.  I looked into this when I had a problem of computing pairwise
> distances between 10,000 polygons for an application in conservation
> biology.  The brute force computational complexity, searching for the
> closest pair of points across all pairs of polygons, would be about
> O(m^2 * n^2), if there were n polygons with an average of m points, say.
> 
> In Kristian's case these numbers are not so prohibitive as the number of
> countries is not so many, and he can cut down on the search space for
> closest points by eye to some degree.  Using the MySQL function
> "distance" may or may not be an efficient algorithm for the single pair
> case (haven't looked at it carefully), but it would have to be embedded
> in some outer algorithm for the many pairs situation.
> 
> I think that the Okabe and Miller approach with Voronoi methods is the
> general way to go, but I didn't have time to program it, and couldn't
> find an available implementation, so I punted and used a series of
> buffered distances (I also had an exponential inverse distance relation
> and therefore could set a reasonable maximum buffer size).
> 
> Denis
> 
> > On Mon, 15 Dec 2003 White.Denis at epamail.epa.gov wrote:
> >
> > > I am a new member of r-sig-geo and saw your message in
> > > the archives.  I don't know whether you already had
> > > algorithms in mind, or received some responses on this,
> > > but two publications with algorithms are:
> > >
> > > Chin F, Wang CA.  1983.  Optimal algorithms for the
> > > intersection and the minimum distance problems between
> > > planar polygons.  IEEE Transactions on Computers,
> > > Vol C-32(12):1203-1207.
> > >
> > > Okabe A, Miller HJ.  1996.  Exact computation methods for
> > > calculating distances between objects in a cartographic
> > > database.  Cartography and Geographic Information Systems
> > > Vol 23(4):180-195.
> > >
> >
> > Thanks for interesting references. In other email (I think offlist,
> but
> > repeating here to get further response), the idea of using OpenGIS
> > functions on a database was floated:
> >
> >
> http://www.mysql.com/doc/en/Functions_that_test_spatial_relationships_between_ge
> > ometries.html
> >
> > (para 10.5.6 in MSQL Manual 4.1) describes a function:
> >
> > Distance(g1,g2) Returns as a double-precision number the shortest
> distance
> > between any two points in the two geometries.
> >
> > I'm not sure whether this supports latlong. PostGIS also has the same
> > function as an OpenGIS function.  http://postgis.refractions.net/ has
> the
> > details:
> >
> > Distance(geometry,geometry) Return the cartesian distance between two
> > geometries in projected units.
> >
> > It also has:
> >
> > distance_spheroid(point, point, spheroid) Returns linear distance
> between
> > two lat/lon points given a particular spheroid. See the explanation of
> > spheroids given for length_spheroid().  Currently only implemented for
> > points.
> >
> > as a non-OpenGIS function. Kristian's question is about nation states,
> so
> > latlong is an issue, I believe. This makes it non-trivial, of course!
> >
> > Any other ideas?
> >
> > Roger
> >
> > > > What I would like to do is to try to use an algorithm
> > > > to determine the shortest distance between points on
> > > > two states???????? outer boundaries, with each state defined
> > > > either as a polygon or union of polygons.
> > >
> > > _______________________________________________
> > > R-sig-Geo mailing list
> > > R-sig-Geo at stat.math.ethz.ch
> > > https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
> > >
> >
> > --
> > Roger Bivand
> > Economic Geography Section, Department of Economics, Norwegian School
> of
> > Economics and Business Administration, Breiviksveien 40, N-5045
> Bergen,
> > Norway. voice: +47 55 95 93 55; fax +47 55 95 93 93
> > e-mail: Roger.Bivand at nhh.no
> >
> >
> 
> 
> 
> ------------------------------
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at stat.math.ethz.ch
> https://www.stat.math.ethz.ch/mailman/listinfo/r-sig-geo
> 
> 
> End of R-sig-Geo Digest, Vol 4, Issue 8
> ***************************************



From White.Denis at epamail.epa.gov  Fri Dec 19 17:52:56 2003
From: White.Denis at epamail.epa.gov (White.Denis at epamail.epa.gov)
Date: Fri, 19 Dec 2003 08:52:56 -0800
Subject: [R-sig-Geo] FW: [STATSGRASS] Questions on calculating minimum
	distance between polygons and map attributes after m.in.e00
Message-ID: <OF6B863D8F.094CD1AC-ON88256E01.005AA9E3-88256E01.005CBAC8@epamail.epa.gov>





Both Okabe and Miller, and Chin and Wang, give O(m1 + m2) optimal
algorithms for distance between a single pair.  On closer examination,
however, neither address the many pairs problem.  There must be some
conventional computational geometry approach using sweep algorithms or
something to reduce the final complexity below O(m * n^2) where n is
number of polygons.

Denis

> Hi,
> I am not very familiar with the m.in.e00 command in GRASS. Is the
point
> to compute an all pairs min distance between all polygons in a set
> or just the min distance between two polygons or something inbetween.
If
> it is an all pairs problem then the optimum is O((n*m)^2) as Denis
White
> states below. If it is inbetween we can do much better. A potentially
> easier implementation than the Okabe Miller approach is to just use a
> good data structure on the bounding boxes of the polygons and filter
the
> returned list from a range query with a bruteforce menthod. That may
be
> efficient enough. On calculating the min (or max) distance between two
> polygons one could probably do much better than O((m1*m2)^2) with some
> clever triangulation of the polygons.
>
> Nicholas



From Roger.Bivand at nhh.no  Mon Dec 22 23:43:25 2003
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 22 Dec 2003 23:43:25 +0100 (CET)
Subject: [R-sig-Geo] [R] bootstrap pValue in DClusters (fwd)
Message-ID: <Pine.LNX.4.44.0312222340470.19689-100000@reclus.nhh.no>

I'm forwarding this to the R-sig-geo list to see if some other user of the 
off-CRAN Dcluster package who may be able to help - it is also possible to 
write to the package maintainer directly.

-- 
Roger Bivand
Economic Geography Section, Department of Economics, Norwegian School of
Economics and Business Administration, Breiviksveien 40, N-5045 Bergen,
Norway. voice: +47 55 95 93 55; fax +47 55 95 93 93
e-mail: Roger.Bivand at nhh.no

---------- Forwarded message ----------
Date: Thu, 18 Dec 2003 14:38:41 +0100
From: SAULEAU Erik-Andr? <SAULEAUEA at ch-mulhouse.fr>
To: "'r-help at stat.math.ethz.ch'" <r-help at stat.math.ethz.ch>
Subject: [R] bootstrap pValue in DClusters

Hello R-List

I use DClusters package (I work in a cancer regestry). I have 2 questions
about it:

1-how is it possible to get back the bootstrap pValue? I mean the pValue of
the calculated statistic with respect of the distribution of this statistic
under the null hypothesis.

2-how is it possible to test an overdispersion in the poisson model? for
choosing a best model I need this mesure of dispersion. Should I build a
glm(cases~expected,family=quasipoisson)$sig2 or is it possible directly in
DClusters?

Thank you, for advance for answers. Best regards, Erik A.


============================================
Erik-Andr? SAULEAU

SEAIM
H?pital du Hasenrain
BP 1070
87, Avenue de Altkirch
68051 MULHOUSE C?dex

Tel: 03-89-64-79-95
Fax: 03-89-64-79-71
M?l: sauleauea at ch-mulhouse.fr
Web: http://www.ch-mulhouse.fr
============================================




************************************************************************************

***********************************************************************************


	[[alternative HTML version deleted]]

______________________________________________
R-help at stat.math.ethz.ch mailing list
https://www.stat.math.ethz.ch/mailman/listinfo/r-help



From Joel_Reynolds at fws.gov  Wed Dec 24 01:18:44 2003
From: Joel_Reynolds at fws.gov (Joel_Reynolds at fws.gov)
Date: Tue, 23 Dec 2003 15:18:44 -0900
Subject: [R-sig-Geo] Ripley's K in R^3?
Message-ID: <OF025F453D.00C8B0F9-ON89256E06.000156CA-89256E06.00023B01@lab.r1.fws.gov>

Hello,
Does anyone have code for calculating Ripley's K on point processes in R^3?
'Kfn' in the package 'spatial' only handles point processes in R^2.

A colleague is interested in using this as a first step in analyzing the
3-d display of shrub branch tips.  The tricky part is determining the
appropriate edge correction for the vertical dimension as the toroidal
correction doesn't really make sense.

Cheers and Happy Holidays,
Joel


Joel H. Reynolds, Biometrician

Division of Natural Resources
US Fish & Wildlife Service
1011 E. Tudor Rd., mailstop 221
Anchorage, AK 99503
Voice: (907) 786-3914
FAX: (907) 786-3905



