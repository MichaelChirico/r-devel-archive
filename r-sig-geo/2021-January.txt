From cry@n @end|ng |rom b|ngh@mton@edu  Thu Jan  7 03:20:49 2021
From: cry@n @end|ng |rom b|ngh@mton@edu (Christopher W. Ryan)
Date: Wed, 6 Jan 2021 21:20:49 -0500
Subject: [R-sig-Geo] making sequential subsets of a ppp object,
 based on value of a mark
Message-ID: <28deab3d-296d-adb3-a137-3f73b2d66fa7@binghamton.edu>

I have a marked ppp object, about 5300 points. One of the marks is
called period and has values 1:13.  What is an efficient way to make 13
period-specific subset point patterns?  All I've been able to come up
with, embarrasingly, is 13 lines like the following:

per1.ppp <-  subset(analytical.ppp, subset = (period == 1))
pre2.ppp <-  subset(analytical.ppp, subset = (period == 2))
per3.ppp <-  subset(analytical.ppp, subset = (period == 3))
and so on.

I'm sure there is a better way.

Thanks.

--Chris Ryan


From cry@n @end|ng |rom b|ngh@mton@edu  Thu Jan  7 03:51:02 2021
From: cry@n @end|ng |rom b|ngh@mton@edu (Christopher W. Ryan)
Date: Wed, 6 Jan 2021 21:51:02 -0500
Subject: [R-sig-Geo] making sequential subsets of a ppp object,
 based on value of a mark
In-Reply-To: <28deab3d-296d-adb3-a137-3f73b2d66fa7@binghamton.edu>
References: <28deab3d-296d-adb3-a137-3f73b2d66fa7@binghamton.edu>
Message-ID: <1d93d5cf-8055-f5ef-5d31-430660773039@binghamton.edu>

Ah, it's split(), of course. That was silly of me.

--Chris Ryan

Christopher W. Ryan wrote:
> I have a marked ppp object, about 5300 points. One of the marks is
> called period and has values 1:13.  What is an efficient way to make 13
> period-specific subset point patterns?  All I've been able to come up
> with, embarrasingly, is 13 lines like the following:
> 
> per1.ppp <-  subset(analytical.ppp, subset = (period == 1))
> pre2.ppp <-  subset(analytical.ppp, subset = (period == 2))
> per3.ppp <-  subset(analytical.ppp, subset = (period == 3))
> and so on.
> 
> I'm sure there is a better way.
> 
> Thanks.
> 
> --Chris Ryan
>


From P|etro_te|@to @end|ng |rom hotm@||@com  Thu Jan  7 23:51:06 2021
From: P|etro_te|@to @end|ng |rom hotm@||@com (Pietro Andre Telatin Paschoalino)
Date: Thu, 7 Jan 2021 22:51:06 +0000
Subject: [R-sig-Geo] Doubt about extract climate variables from raster.
Message-ID: <BN8PR17MB298089B234BDEA8A708267EB82AF0@BN8PR17MB2980.namprd17.prod.outlook.com>

Hello everyone, I'm extracting climate variables (precipitation and temperature) from a grid (CRU data) to my shapefile.

To do this I'm using the function extract from the raster package.

In the extraction, I saw if the CRS are the same in the raster and in the shape (I change the crs of shape for the same as raster).

Initially, I tried to extract considering the weighted average of pixels with centroid inside the polygon, as I got more missings values, I ended up opting for the simple average. Still, I got less than 1% of the values ??as missings (5 of 557 regions) that I completed using the value of the nearest neighbor.

I decided this because as I am not from this area I am trying to keep it as simple as possible so as not to make mistakes. I believe that to get the weighted average of some form I would have to change the resolution of the raster, or something like that.

I asked the opinion of a geographer and he said that the way I did it is correct.

In this way I am putting my code for extraction if someone can verify that it is correct, I would also like an opinion if the way that I extract is correct. This is very important for me and I'll appreciate if anyone can take a look.

If anyone can help, I can make the data available directly.

In general my code is:

setwd("mypath")
shape <- readOGR(dsn = ".", layer = "microfinal")

fn<-file.path("mypath\\cru_ts4.04.2011.2019.tmp.dat.nc")

ncfile <- nc_open(fn)
rasbrick <- stack(fn)

To get only the layers that I want:
rasbrick <- rasbrick[[70:81]]

changing to the same crs

shape2<- spTransform(shape, crs(rasbrick))

weath_dt = as.data.frame(matrix(NA,nrow(shape2 at data),12))

First I got the ID regions of shape:

weath_dt[,1] = shape2 at data[,1]

and extract:

for (i in 1:length(rasbrick at layers)) {
  weath_dt[,1+i] = raster::extract(rasbrick[[i]], shape2, mean)
}

After that I only pick the values for the missings by near neighbour.

Thank you.

Pietro Andre Telatin Paschoalino
Doutorando em Ci?ncias Econ?micas da Universidade Estadual de Maring? - PCE.

	[[alternative HTML version deleted]]


From b|@|ev||@t @end|ng |rom gm@||@com  Fri Jan  8 07:36:20 2021
From: b|@|ev||@t @end|ng |rom gm@||@com (=?UTF-8?Q?Bede-Fazekas_=c3=81kos?=)
Date: Fri, 8 Jan 2021 07:36:20 +0100
Subject: [R-sig-Geo] Doubt about extract climate variables from raster.
In-Reply-To: <BN8PR17MB298089B234BDEA8A708267EB82AF0@BN8PR17MB2980.namprd17.prod.outlook.com>
References: <BN8PR17MB298089B234BDEA8A708267EB82AF0@BN8PR17MB2980.namprd17.prod.outlook.com>
Message-ID: <421b92ea-c93f-230b-9bdb-b7ecc1a670ed@gmail.com>

Dear Pietro,

I think that, technically, your code is correct (although using a for 
loop is unnecessary, function extract() can deal with 
RasterStacks/RasterBricks and returns a matrix in this case). And, 
technically, also the following solutions would be correct:
- mean with na.rm,
- weighted mean without na.rm,
- weighted mean with na.rm.
Also you should consider using package 'exactextract', which can quickly 
and accurately extract values over polygons in a way that it handles 
grid cells that are partially covered by a polygon.
The "best" solution depends on your data and your aim.

HTH,
?kos Bede-Fazekas
Hungarian Academy of Sciences

2021.01.07. 23:51 keltez?ssel, Pietro Andre Telatin Paschoalino ?rta:
> Hello everyone, I'm extracting climate variables (precipitation and temperature) from a grid (CRU data) to my shapefile.
>
> To do this I'm using the function extract from the raster package.
>
> In the extraction, I saw if the CRS are the same in the raster and in the shape (I change the crs of shape for the same as raster).
>
> Initially, I tried to extract considering the weighted average of pixels with centroid inside the polygon, as I got more missings values, I ended up opting for the simple average. Still, I got less than 1% of the values ??as missings (5 of 557 regions) that I completed using the value of the nearest neighbor.
>
> I decided this because as I am not from this area I am trying to keep it as simple as possible so as not to make mistakes. I believe that to get the weighted average of some form I would have to change the resolution of the raster, or something like that.
>
> I asked the opinion of a geographer and he said that the way I did it is correct.
>
> In this way I am putting my code for extraction if someone can verify that it is correct, I would also like an opinion if the way that I extract is correct. This is very important for me and I'll appreciate if anyone can take a look.
>
> If anyone can help, I can make the data available directly.
>
> In general my code is:
>
> setwd("mypath")
> shape <- readOGR(dsn = ".", layer = "microfinal")
>
> fn<-file.path("mypath\\cru_ts4.04.2011.2019.tmp.dat.nc")
>
> ncfile <- nc_open(fn)
> rasbrick <- stack(fn)
>
> To get only the layers that I want:
> rasbrick <- rasbrick[[70:81]]
>
> changing to the same crs
>
> shape2<- spTransform(shape, crs(rasbrick))
>
> weath_dt = as.data.frame(matrix(NA,nrow(shape2 at data),12))
>
> First I got the ID regions of shape:
>
> weath_dt[,1] = shape2 at data[,1]
>
> and extract:
>
> for (i in 1:length(rasbrick at layers)) {
>    weath_dt[,1+i] = raster::extract(rasbrick[[i]], shape2, mean)
> }
>
> After that I only pick the values for the missings by near neighbour.
>
> Thank you.
>
> Pietro Andre Telatin Paschoalino
> Doutorando em Ci?ncias Econ?micas da Universidade Estadual de Maring? - PCE.
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From ch@r||e @end|ng |rom bootc@mpg|@@com  Fri Jan  8 09:25:07 2021
From: ch@r||e @end|ng |rom bootc@mpg|@@com (=?UTF-8?B?6Km55YeM6I+y?=)
Date: Fri, 8 Jan 2021 00:25:07 -0800
Subject: [R-sig-Geo] New GIS Courses: Field Mapping Workflow and UAVs for
 Environmental
Message-ID: <CAMKizoZwZQy00jAdaQys-eSSTb_PfRim0Trum+Hgsg7bMx1XHA@mail.gmail.com>

Hi everyone.  If you?re getting stir crazy and want some learning
nourishment, please check out a couple new courses authored by you, the
subject matter experts.

Leveraging UAV data for environmental projects
<https://platform.bootcampgis.com/>

Design a field data collection workflow: smartphone to dashboard
<https://platform.bootcampgis.com/>

And if you have a project you think others can learn from, let me know and
we can help author it for the benefit of the entire GIS community.


*Charlie Davis*
*GIS Analyst, Bootcamp GIS*
*Turning real GIS projects into marketable education*
619-640-2330
www.bootcampgis.com

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Fri Jan  8 09:48:31 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 8 Jan 2021 09:48:31 +0100
Subject: [R-sig-Geo] 
 New GIS Courses: Field Mapping Workflow and UAVs for Environmental
In-Reply-To: <CAMKizoZwZQy00jAdaQys-eSSTb_PfRim0Trum+Hgsg7bMx1XHA@mail.gmail.com>
References: <CAMKizoZwZQy00jAdaQys-eSSTb_PfRim0Trum+Hgsg7bMx1XHA@mail.gmail.com>
Message-ID: <c448b125-1848-14d3-9ebf-bafaeb45d9f1@reclus.nhh.no>

Please note that advertising courses of this kind on this list is not 
permitted, and list subscribers should ignore this message. Should a 
further post appear of this kind, the poster will be unsubscribed.

Should any further subscribers wish to draw attention to non-profit events 
or courses (as OpenGeoHub does), please ask list admin. first for 
guidance. For-profit ads are not acceptable under any circumstances.

Roger Bivand
(list admin.)

On Fri, 8 Jan 2021, ??? wrote:

> Hi everyone.  If you?re getting stir crazy and want some learning
> nourishment, please check out a couple new courses authored by you, the
> subject matter experts.
>
> Leveraging UAV data for environmental projects
> <https://platform.bootcampgis.com/>
>
> Design a field data collection workflow: smartphone to dashboard
> <https://platform.bootcampgis.com/>
>
> And if you have a project you think others can learn from, let me know and
> we can help author it for the benefit of the entire GIS community.
>
>
> *Charlie Davis*
> *GIS Analyst, Bootcamp GIS*
> *Turning real GIS projects into marketable education*
> 619-640-2330
> www.bootcampgis.com
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From k@n@n009 @end|ng |rom umn@edu  Sat Jan 16 16:04:57 2021
From: k@n@n009 @end|ng |rom umn@edu (Kaushi Kanankege)
Date: Sat, 16 Jan 2021 09:04:57 -0600
Subject: [R-sig-Geo] Offset for spautolm function in Spatialreg package
In-Reply-To: <CANaVsNp_bAtdabta0GAZx7t059cHdiyxLMs29i1_dxQHMSWHzQ@mail.gmail.com>
References: <CANaVsNqr31_MSEZZfYrbapN6h5VcjNyKsSR3JKZP=eQR0v+1hQ@mail.gmail.com>
 <2831cc12-10d8-48cb-b5d6-3c31af1aca34@reclus.nhh.no>
 <CANaVsNp_bAtdabta0GAZx7t059cHdiyxLMs29i1_dxQHMSWHzQ@mail.gmail.com>
Message-ID: <CANaVsNqWJ-cUEQTBVAHzbOBzed5nMSEdYM39qNojwLAwzoxGsg@mail.gmail.com>

Dr. Bivand and the R Sig Geo team,

Thank you again for the replies to the question.

I kindly request removing my signature including the affiliation and
contact details from this thread. I'm OK having the Q & A part online.

Thread:
http://r-sig-geo.2731867.n2.nabble.com/Offset-for-spautolm-function-in-Spatialreg-package-td7593955.html

Thank you
Kaushi

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Mon Jan 18 13:11:53 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Mon, 18 Jan 2021 13:11:53 +0100
Subject: [R-sig-Geo] Offset for spautolm function in Spatialreg package
In-Reply-To: <CANaVsNqWJ-cUEQTBVAHzbOBzed5nMSEdYM39qNojwLAwzoxGsg@mail.gmail.com>
References: <CANaVsNqr31_MSEZZfYrbapN6h5VcjNyKsSR3JKZP=eQR0v+1hQ@mail.gmail.com>
 <2831cc12-10d8-48cb-b5d6-3c31af1aca34@reclus.nhh.no>
 <CANaVsNp_bAtdabta0GAZx7t059cHdiyxLMs29i1_dxQHMSWHzQ@mail.gmail.com>
 <CANaVsNqWJ-cUEQTBVAHzbOBzed5nMSEdYM39qNojwLAwzoxGsg@mail.gmail.com>
Message-ID: <8bebd7ef-2c7-2561-c097-6a5ad981d90@reclus.nhh.no>

On Sat, 16 Jan 2021, Kaushi Kanankege wrote:

> Dr. Bivand and the R Sig Geo team,
>
> Thank you again for the replies to the question.
>
> I kindly request removing my signature including the affiliation and
> contact details from this thread. I'm OK having the Q & A part online.

Once sent, posts cannot be changed, and are copied by third-party servers 
like nabble. You posted in November 2020, so posting contents have 
propagated widely far beyond servers we control, as well as to list 
members. If alerted immediately (within minutes) that a post erroneously 
contains material with a serious legal issue, our volunteer server admin. 
may be able to help, but only exceptionally. We actually prefer sufficient 
affiliation information, because then anyone caring to reply has some 
basis for understanding what is the background for the post.

Roger
list admin. (not server admin.)

>
> Thread:
> http://r-sig-geo.2731867.n2.nabble.com/Offset-for-spautolm-function-in-Spatialreg-package-td7593955.html
>
> Thank you
> Kaushi
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From n|co|@@@@@by @end|ng |rom |nr@e@|r  Tue Jan 19 09:23:34 2021
From: n|co|@@@@@by @end|ng |rom |nr@e@|r (Nicolas Saby)
Date: Tue, 19 Jan 2021 08:23:34 +0000
Subject: [R-sig-Geo] gdal  error
Message-ID: <a2e8217c763c4f6c8ec2d2453c91c97b@IDFDCPRIPEXMU04.inra.local>

Dear all,

I recently updated my  linux system. I am running R 4.0.3

Since this update, I get this error with the CRS function:

CRS(SRS_string='EPSG:4326')
proj_create: SQLite error on SELECT name, type, coordinate_system_auth_name, coordinate_system_code, datum_auth_name, datum_code, area_of_use_auth_name, area_of_use_code, text_definition, deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such column: area_of_use_auth_name
proj_create: SQLite error on SELECT name, type, coordinate_system_auth_name, coordinate_system_code, datum_auth_name, datum_code, area_of_use_auth_name, area_of_use_code, text_definition, deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such column: area_of_use_auth_name
Error in CRS(SRS_string = "EPSG:4326") : NA

I checked the proj package with the command apt-cache show proj-bin, I got this. I think I have 2 packages installed

Package: proj-bin
Source: proj
Priority: optional
Section: science
Installed-Size: 470
Maintainer: Debian GIS Project <pkg-grass-devel at lists.alioth.debian.org>
Architecture: amd64
Version: 7.2.0-1~focal0
Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj19 (>= 7.2.0), libstdc++6 (                >= 5.2)
Filename: pool/main/p/proj/proj-bin_7.2.0-1~focal0_amd64.deb

Package: proj-bin
Architecture: amd64
Version: 6.3.1-1
Priority: extra
Section: universe/science
Source: proj
Origin: Ubuntu
Maintainer: Ubuntu Developers <ubuntu-devel-discuss at lists.ubuntu.com>
Original-Maintainer: Debian GIS Project <pkg-grass-devel at lists.alioth.debian.org                                                                             >
Bugs: https://bugs.launchpad.net/ubuntu/+filebug
Installed-Size: 319
Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj15 (>= 6.2.1), libstdc++6 (                >= 5.2)
Filename: pool/universe/p/proj/proj-bin_6.3.1-1_amd64.deb
Task: ubuntustudio-video, ubuntustudio-publishing, ubuntustudio-photography, ubu                                                                             ntustudio-graphics


Thank you
Nicolas

[Logo-Signature-INRAE]

Bdat.gissol.fr

Nicolas Saby
Chef de projet en information statistique
https://orcid.org/0000-0001-8964-1194



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20210119/fd926c15/attachment.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 2660 bytes
Desc: image001.png
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20210119/fd926c15/attachment.png>

From Roger@B|v@nd @end|ng |rom nhh@no  Tue Jan 19 10:16:51 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Tue, 19 Jan 2021 10:16:51 +0100
Subject: [R-sig-Geo] gdal  error
In-Reply-To: <a2e8217c763c4f6c8ec2d2453c91c97b@IDFDCPRIPEXMU04.inra.local>
References: <a2e8217c763c4f6c8ec2d2453c91c97b@IDFDCPRIPEXMU04.inra.local>
Message-ID: <a15e1285-e326-c369-8a82-1eb181c83ec1@reclus.nhh.no>

On Tue, 19 Jan 2021, Nicolas Saby wrote:

> Dear all,
>
> I recently updated my  linux system. I am running R 4.0.3
>
> Since this update, I get this error with the CRS function:
>
> CRS(SRS_string='EPSG:4326')
> proj_create: SQLite error on SELECT name, type, coordinate_system_auth_name, coordinate_system_code, datum_auth_name, datum_code, area_of_use_auth_name, area_of_use_code, text_definition, deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such column: area_of_use_auth_name
> proj_create: SQLite error on SELECT name, type, coordinate_system_auth_name, coordinate_system_code, datum_auth_name, datum_code, area_of_use_auth_name, area_of_use_code, text_definition, deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such column: area_of_use_auth_name
> Error in CRS(SRS_string = "EPSG:4326") : NA
>
> I checked the proj package with the command apt-cache show proj-bin, I 
> got this. I think I have 2 packages installed

With only 7.2.1 installed, I see:

> library(sp)
> CRS(SRS_string='EPSG:4326')
CRS arguments: +proj=longlat +datum=WGS84 +no_defs
> cat(wkt(CRS(SRS_string='EPSG:4326')), "\n")
GEOGCRS["WGS 84 (with axis order normalized for visualization)",
     DATUM["World Geodetic System 1984",
         ELLIPSOID["WGS 84",6378137,298.257223563,
             LENGTHUNIT["metre",1]],
         ID["EPSG",6326]],
     PRIMEM["Greenwich",0,
         ANGLEUNIT["degree",0.0174532925199433],
         ID["EPSG",8901]],
     CS[ellipsoidal,2],
         AXIS["geodetic longitude (Lon)",east,
             ORDER[1],
             ANGLEUNIT["degree",0.0174532925199433,
                 ID["EPSG",9122]]],
         AXIS["geodetic latitude (Lat)",north,
             ORDER[2],
             ANGLEUNIT["degree",0.0174532925199433,
                 ID["EPSG",9122]]]]

You are probably right that your two proj-bin (and other proj) ununtu 
packages are confusing each other. There should be one only, and rgdal 
(and sf) should be re-installed from source to pick up the correct unique 
version.

Hope this clarifies,

Roger

>
> Package: proj-bin
> Source: proj
> Priority: optional
> Section: science
> Installed-Size: 470
> Maintainer: Debian GIS Project <pkg-grass-devel at lists.alioth.debian.org>
> Architecture: amd64
> Version: 7.2.0-1~focal0
> Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj19 (>= 7.2.0), libstdc++6 (                >= 5.2)
> Filename: pool/main/p/proj/proj-bin_7.2.0-1~focal0_amd64.deb
>
> Package: proj-bin
> Architecture: amd64
> Version: 6.3.1-1
> Priority: extra
> Section: universe/science
> Source: proj
> Origin: Ubuntu
> Maintainer: Ubuntu Developers <ubuntu-devel-discuss at lists.ubuntu.com>
> Original-Maintainer: Debian GIS Project <pkg-grass-devel at lists.alioth.debian.org                                                                             >
> Bugs: https://bugs.launchpad.net/ubuntu/+filebug
> Installed-Size: 319
> Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj15 (>= 6.2.1), libstdc++6 (                >= 5.2)
> Filename: pool/universe/p/proj/proj-bin_6.3.1-1_amd64.deb
> Task: ubuntustudio-video, ubuntustudio-publishing, ubuntustudio-photography, ubu                                                                             ntustudio-graphics
>
>
> Thank you
> Nicolas
>
> [Logo-Signature-INRAE]
>
> Bdat.gissol.fr
>
> Nicolas Saby
> Chef de projet en information statistique
> https://orcid.org/0000-0001-8964-1194
>
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From Roger@B|v@nd @end|ng |rom nhh@no  Tue Jan 19 10:47:18 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Tue, 19 Jan 2021 10:47:18 +0100
Subject: [R-sig-Geo] gdal  error
In-Reply-To: <a15e1285-e326-c369-8a82-1eb181c83ec1@reclus.nhh.no>
References: <a2e8217c763c4f6c8ec2d2453c91c97b@IDFDCPRIPEXMU04.inra.local>
 <a15e1285-e326-c369-8a82-1eb181c83ec1@reclus.nhh.no>
Message-ID: <de1ef80-e4ac-f683-395b-45fb562b8bc6@reclus.nhh.no>

On Tue, 19 Jan 2021, Roger Bivand wrote:

> On Tue, 19 Jan 2021, Nicolas Saby wrote:
>
>>  Dear all,
>>
>>  I recently updated my  linux system. I am running R 4.0.3
>>
>>  Since this update, I get this error with the CRS function:
>>
>>  CRS(SRS_string='EPSG:4326')
>>  proj_create: SQLite error on SELECT name, type,
>>  coordinate_system_auth_name, coordinate_system_code, datum_auth_name,
>>  datum_code, area_of_use_auth_name, area_of_use_code, text_definition,
>>  deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such
>>  column: area_of_use_auth_name
>>  proj_create: SQLite error on SELECT name, type,
>>  coordinate_system_auth_name, coordinate_system_code, datum_auth_name,
>>  datum_code, area_of_use_auth_name, area_of_use_code, text_definition,
>>  deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such
>>  column: area_of_use_auth_name
>>  Error in CRS(SRS_string = "EPSG:4326") : NA

Clarification:

Some field names in proj.db (the SQLite database containing the CRS 
specifications) changed with EPSG v10, introduced from PROJ 7.2.0, 
compared to earlier EPSG database versions and PROJ versions. So you need 
to ensure not only that proj-bin is unique, but that all the proj-* are 
the same version, and that rgdal is installed against that version of 
PROJ. GDAL also needs to be installed against that version. Code in R 
packages conditions on the declared version of PROJ in the PROJ binary. 
Please see 
https://cran.r-project.org/web/packages/rgdal/vignettes/CRS_projections_transformations.html 
which contains code for examining proj.db using RSQLite.

Roger

>>
>>  I checked the proj package with the command apt-cache show proj-bin, I got
>>  this. I think I have 2 packages installed
>
> With only 7.2.1 installed, I see:
>
>>  library(sp)
>>  CRS(SRS_string='EPSG:4326')
> CRS arguments: +proj=longlat +datum=WGS84 +no_defs
>>  cat(wkt(CRS(SRS_string='EPSG:4326')), "\n")
> GEOGCRS["WGS 84 (with axis order normalized for visualization)",
>     DATUM["World Geodetic System 1984",
>         ELLIPSOID["WGS 84",6378137,298.257223563,
>             LENGTHUNIT["metre",1]],
>         ID["EPSG",6326]],
>     PRIMEM["Greenwich",0,
>         ANGLEUNIT["degree",0.0174532925199433],
>         ID["EPSG",8901]],
>     CS[ellipsoidal,2],
>         AXIS["geodetic longitude (Lon)",east,
>             ORDER[1],
>             ANGLEUNIT["degree",0.0174532925199433,
>                 ID["EPSG",9122]]],
>         AXIS["geodetic latitude (Lat)",north,
>             ORDER[2],
>             ANGLEUNIT["degree",0.0174532925199433,
>                 ID["EPSG",9122]]]]
>
> You are probably right that your two proj-bin (and other proj) ununtu 
> packages are confusing each other. There should be one only, and rgdal (and 
> sf) should be re-installed from source to pick up the correct unique version.
>
> Hope this clarifies,
>
> Roger
>
>>
>>  Package: proj-bin
>>  Source: proj
>>  Priority: optional
>>  Section: science
>>  Installed-Size: 470
>>  Maintainer: Debian GIS Project <pkg-grass-devel at lists.alioth.debian.org>
>>  Architecture: amd64
>>  Version: 7.2.0-1~focal0
>>  Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj19 (>= 7.2.0),
>>  libstdc++6 (                >= 5.2)
>>  Filename: pool/main/p/proj/proj-bin_7.2.0-1~focal0_amd64.deb
>>
>>  Package: proj-bin
>>  Architecture: amd64
>>  Version: 6.3.1-1
>>  Priority: extra
>>  Section: universe/science
>>  Source: proj
>>  Origin: Ubuntu
>>  Maintainer: Ubuntu Developers <ubuntu-devel-discuss at lists.ubuntu.com>
>>  Original-Maintainer: Debian GIS Project
>>  <pkg-grass-devel at lists.alioth.debian.org
>>  >
>>  Bugs: https://bugs.launchpad.net/ubuntu/+filebug
>>  Installed-Size: 319
>>  Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj15 (>= 6.2.1),
>>  libstdc++6 (                >= 5.2)
>>  Filename: pool/universe/p/proj/proj-bin_6.3.1-1_amd64.deb
>>  Task: ubuntustudio-video, ubuntustudio-publishing,
>>  ubuntustudio-photography, ubu
>>  ntustudio-graphics
>> 
>>
>>  Thank you
>>  Nicolas
>>
>>  [Logo-Signature-INRAE]
>>
>>  Bdat.gissol.fr
>>
>>  Nicolas Saby
>>  Chef de projet en information statistique
>>  https://orcid.org/0000-0001-8964-1194
>> 
>> 
>> 
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From n|co|@@@@@by @end|ng |rom |nr@e@|r  Tue Jan 19 11:25:09 2021
From: n|co|@@@@@by @end|ng |rom |nr@e@|r (Nicolas Saby)
Date: Tue, 19 Jan 2021 10:25:09 +0000
Subject: [R-sig-Geo] gdal  error
In-Reply-To: <a15e1285-e326-c369-8a82-1eb181c83ec1@reclus.nhh.no>
References: <a2e8217c763c4f6c8ec2d2453c91c97b@IDFDCPRIPEXMU04.inra.local>
 <a15e1285-e326-c369-8a82-1eb181c83ec1@reclus.nhh.no>
Message-ID: <8141a1cad66a485792e9c207883fe4ed@IDFDCPRIPEXMU04.inra.local>

Yes, thanks it clarifies. 
I need now to find how to uninstall the older version of proj-bin
I have already tried sudo apt remove package_name but it did not fixed the pb
Many thanks

-----Message d'origine-----
De?: Roger Bivand <Roger.Bivand at nhh.no> 
Envoy??: mardi 19 janvier 2021 10:17
??: Nicolas Saby <nicolas.saby at inrae.fr>
Cc?: r-sig-geo at r-project.org
Objet?: Re: [R-sig-Geo] gdal error

On Tue, 19 Jan 2021, Nicolas Saby wrote:

> Dear all,
>
> I recently updated my  linux system. I am running R 4.0.3
>
> Since this update, I get this error with the CRS function:
>
> CRS(SRS_string='EPSG:4326')
> proj_create: SQLite error on SELECT name, type, 
> coordinate_system_auth_name, coordinate_system_code, datum_auth_name, 
> datum_code, area_of_use_auth_name, area_of_use_code, text_definition, 
> deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such 
> column: area_of_use_auth_name
> proj_create: SQLite error on SELECT name, type, 
> coordinate_system_auth_name, coordinate_system_code, datum_auth_name, 
> datum_code, area_of_use_auth_name, area_of_use_code, text_definition, 
> deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such 
> column: area_of_use_auth_name Error in CRS(SRS_string = "EPSG:4326") : 
> NA
>
> I checked the proj package with the command apt-cache show proj-bin, I 
> got this. I think I have 2 packages installed

With only 7.2.1 installed, I see:

> library(sp)
> CRS(SRS_string='EPSG:4326')
CRS arguments: +proj=longlat +datum=WGS84 +no_defs
> cat(wkt(CRS(SRS_string='EPSG:4326')), "\n")
GEOGCRS["WGS 84 (with axis order normalized for visualization)",
     DATUM["World Geodetic System 1984",
         ELLIPSOID["WGS 84",6378137,298.257223563,
             LENGTHUNIT["metre",1]],
         ID["EPSG",6326]],
     PRIMEM["Greenwich",0,
         ANGLEUNIT["degree",0.0174532925199433],
         ID["EPSG",8901]],
     CS[ellipsoidal,2],
         AXIS["geodetic longitude (Lon)",east,
             ORDER[1],
             ANGLEUNIT["degree",0.0174532925199433,
                 ID["EPSG",9122]]],
         AXIS["geodetic latitude (Lat)",north,
             ORDER[2],
             ANGLEUNIT["degree",0.0174532925199433,
                 ID["EPSG",9122]]]]

You are probably right that your two proj-bin (and other proj) ununtu packages are confusing each other. There should be one only, and rgdal (and sf) should be re-installed from source to pick up the correct unique version.

Hope this clarifies,

Roger

>
> Package: proj-bin
> Source: proj
> Priority: optional
> Section: science
> Installed-Size: 470
> Maintainer: Debian GIS Project 
> <pkg-grass-devel at lists.alioth.debian.org>
> Architecture: amd64
> Version: 7.2.0-1~focal0
> Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj19 (>= 7.2.0), libstdc++6 (                >= 5.2)
> Filename: pool/main/p/proj/proj-bin_7.2.0-1~focal0_amd64.deb
>
> Package: proj-bin
> Architecture: amd64
> Version: 6.3.1-1
> Priority: extra
> Section: universe/science
> Source: proj
> Origin: Ubuntu
> Maintainer: Ubuntu Developers <ubuntu-devel-discuss at lists.ubuntu.com>
> Original-Maintainer: Debian GIS Project <pkg-grass-devel at lists.alioth.debian.org                                                                             >
> Bugs: https://bugs.launchpad.net/ubuntu/+filebug
> Installed-Size: 319
> Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj15 (>= 6.2.1), libstdc++6 (                >= 5.2)
> Filename: pool/universe/p/proj/proj-bin_6.3.1-1_amd64.deb
> Task: ubuntustudio-video, ubuntustudio-publishing, ubuntustudio-photography, ubu                                                                             ntustudio-graphics
>
>
> Thank you
> Nicolas
>
> [Logo-Signature-INRAE]
>
> Bdat.gissol.fr
>
> Nicolas Saby
> Chef de projet en information statistique
> https://orcid.org/0000-0001-8964-1194
>
>
>

--
Roger Bivand
Department of Economics, Norwegian School of Economics, Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From n|co|@@@@@by @end|ng |rom |nr@e@|r  Tue Jan 19 11:40:26 2021
From: n|co|@@@@@by @end|ng |rom |nr@e@|r (Nicolas Saby)
Date: Tue, 19 Jan 2021 10:40:26 +0000
Subject: [R-sig-Geo] gdal  error
References: <a2e8217c763c4f6c8ec2d2453c91c97b@IDFDCPRIPEXMU04.inra.local>
 <a15e1285-e326-c369-8a82-1eb181c83ec1@reclus.nhh.no> 
Message-ID: <a6c74f04866d4d94a720fc0f3410153e@IDFDCPRIPEXMU04.inra.local>

> library(rgdal)
Le chargement a n?cessit? le package : sp
rgdal: version: 1.5-19, (SVN revision 1092)
Geospatial Data Abstraction Library extensions to R successfully loaded
Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
Path to GDAL shared files: /usr/share/gdal
GDAL binary built with GEOS: TRUE
Loaded PROJ runtime: Rel. 6.3.1, February 10th, 2020, [PJ_VERSION: 631]
Path to PROJ shared files: /usr/share/proj
Linking to sp version:1.4-4
To mute warnings of possible GDAL/OSR exportToProj4() degradation,
use options("rgdal_show_exportToProj4_warnings"="none") before loading rgdal.

----------------
I have uninstall and reinstall proj, sf and rgdal

But it is still not possible to pick up the latest version of PROJ... should be 7.2 instead of 6.3

Thanks

-----Message d'origine-----
De?: Nicolas Saby 
Envoy??: mardi 19 janvier 2021 11:25
??: 'Roger.Bivand at nhh.no' <Roger.Bivand at nhh.no>
Cc?: r-sig-geo at r-project.org
Objet?: RE: [R-sig-Geo] gdal error

Yes, thanks it clarifies. 
I need now to find how to uninstall the older version of proj-bin I have already tried sudo apt remove package_name but it did not fixed the pb Many thanks

-----Message d'origine-----
De?: Roger Bivand <Roger.Bivand at nhh.no> Envoy??: mardi 19 janvier 2021 10:17 ??: Nicolas Saby <nicolas.saby at inrae.fr> Cc?: r-sig-geo at r-project.org Objet?: Re: [R-sig-Geo] gdal error

On Tue, 19 Jan 2021, Nicolas Saby wrote:

> Dear all,
>
> I recently updated my  linux system. I am running R 4.0.3
>
> Since this update, I get this error with the CRS function:
>
> CRS(SRS_string='EPSG:4326')
> proj_create: SQLite error on SELECT name, type, 
> coordinate_system_auth_name, coordinate_system_code, datum_auth_name, 
> datum_code, area_of_use_auth_name, area_of_use_code, text_definition, 
> deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such
> column: area_of_use_auth_name
> proj_create: SQLite error on SELECT name, type, 
> coordinate_system_auth_name, coordinate_system_code, datum_auth_name, 
> datum_code, area_of_use_auth_name, area_of_use_code, text_definition, 
> deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such
> column: area_of_use_auth_name Error in CRS(SRS_string = "EPSG:4326") : 
> NA
>
> I checked the proj package with the command apt-cache show proj-bin, I 
> got this. I think I have 2 packages installed

With only 7.2.1 installed, I see:

> library(sp)
> CRS(SRS_string='EPSG:4326')
CRS arguments: +proj=longlat +datum=WGS84 +no_defs
> cat(wkt(CRS(SRS_string='EPSG:4326')), "\n")
GEOGCRS["WGS 84 (with axis order normalized for visualization)",
     DATUM["World Geodetic System 1984",
         ELLIPSOID["WGS 84",6378137,298.257223563,
             LENGTHUNIT["metre",1]],
         ID["EPSG",6326]],
     PRIMEM["Greenwich",0,
         ANGLEUNIT["degree",0.0174532925199433],
         ID["EPSG",8901]],
     CS[ellipsoidal,2],
         AXIS["geodetic longitude (Lon)",east,
             ORDER[1],
             ANGLEUNIT["degree",0.0174532925199433,
                 ID["EPSG",9122]]],
         AXIS["geodetic latitude (Lat)",north,
             ORDER[2],
             ANGLEUNIT["degree",0.0174532925199433,
                 ID["EPSG",9122]]]]

You are probably right that your two proj-bin (and other proj) ununtu packages are confusing each other. There should be one only, and rgdal (and sf) should be re-installed from source to pick up the correct unique version.

Hope this clarifies,

Roger

>
> Package: proj-bin
> Source: proj
> Priority: optional
> Section: science
> Installed-Size: 470
> Maintainer: Debian GIS Project
> <pkg-grass-devel at lists.alioth.debian.org>
> Architecture: amd64
> Version: 7.2.0-1~focal0
> Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj19 (>= 7.2.0), libstdc++6 (                >= 5.2)
> Filename: pool/main/p/proj/proj-bin_7.2.0-1~focal0_amd64.deb
>
> Package: proj-bin
> Architecture: amd64
> Version: 6.3.1-1
> Priority: extra
> Section: universe/science
> Source: proj
> Origin: Ubuntu
> Maintainer: Ubuntu Developers <ubuntu-devel-discuss at lists.ubuntu.com>
> Original-Maintainer: Debian GIS Project <pkg-grass-devel at lists.alioth.debian.org                                                                             >
> Bugs: https://bugs.launchpad.net/ubuntu/+filebug
> Installed-Size: 319
> Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj15 (>= 6.2.1), libstdc++6 (                >= 5.2)
> Filename: pool/universe/p/proj/proj-bin_6.3.1-1_amd64.deb
> Task: ubuntustudio-video, ubuntustudio-publishing, ubuntustudio-photography, ubu                                                                             ntustudio-graphics
>
>
> Thank you
> Nicolas
>
> [Logo-Signature-INRAE]
>
> Bdat.gissol.fr
>
> Nicolas Saby
> Chef de projet en information statistique
> https://orcid.org/0000-0001-8964-1194
>
>
>

--
Roger Bivand
Department of Economics, Norwegian School of Economics, Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From Roger@B|v@nd @end|ng |rom nhh@no  Tue Jan 19 11:46:08 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Tue, 19 Jan 2021 11:46:08 +0100
Subject: [R-sig-Geo] gdal  error
In-Reply-To: <a6c74f04866d4d94a720fc0f3410153e@IDFDCPRIPEXMU04.inra.local>
References: <a2e8217c763c4f6c8ec2d2453c91c97b@IDFDCPRIPEXMU04.inra.local>
 <a15e1285-e326-c369-8a82-1eb181c83ec1@reclus.nhh.no>
 <a6c74f04866d4d94a720fc0f3410153e@IDFDCPRIPEXMU04.inra.local>
Message-ID: <20c55f4e-8265-0f9-efc4-cb265ba5f41e@reclus.nhh.no>

On Tue, 19 Jan 2021, Nicolas Saby wrote:

>> library(rgdal)
> Le chargement a n?cessit? le package : sp
> rgdal: version: 1.5-19, (SVN revision 1092)
> Geospatial Data Abstraction Library extensions to R successfully loaded
> Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
> Path to GDAL shared files: /usr/share/gdal
> GDAL binary built with GEOS: TRUE
> Loaded PROJ runtime: Rel. 6.3.1, February 10th, 2020, [PJ_VERSION: 631]
> Path to PROJ shared files: /usr/share/proj
> Linking to sp version:1.4-4
> To mute warnings of possible GDAL/OSR exportToProj4() degradation,
> use options("rgdal_show_exportToProj4_warnings"="none") before loading rgdal.
>
> ----------------
> I have uninstall and reinstall proj, sf and rgdal
>
> But it is still not possible to pick up the latest version of PROJ... 
> should be 7.2 instead of 6.3

The sf README contains some install instructions:

https://github.com/r-spatial/sf

Possibly you are not using ubuntugis-unstable? I only ever install from 
source, to keep control of what I actually have installed, but both PROJ 
and GDAL now take much longer to compile.

Roger

>
> Thanks
>
> -----Message d'origine-----
> De?: Nicolas Saby
> Envoy??: mardi 19 janvier 2021 11:25
> ??: 'Roger.Bivand at nhh.no' <Roger.Bivand at nhh.no>
> Cc?: r-sig-geo at r-project.org
> Objet?: RE: [R-sig-Geo] gdal error
>
> Yes, thanks it clarifies.
> I need now to find how to uninstall the older version of proj-bin I have already tried sudo apt remove package_name but it did not fixed the pb Many thanks
>
> -----Message d'origine-----
> De?: Roger Bivand <Roger.Bivand at nhh.no> Envoy??: mardi 19 janvier 2021 10:17 ??: Nicolas Saby <nicolas.saby at inrae.fr> Cc?: r-sig-geo at r-project.org Objet?: Re: [R-sig-Geo] gdal error
>
> On Tue, 19 Jan 2021, Nicolas Saby wrote:
>
>> Dear all,
>>
>> I recently updated my  linux system. I am running R 4.0.3
>>
>> Since this update, I get this error with the CRS function:
>>
>> CRS(SRS_string='EPSG:4326')
>> proj_create: SQLite error on SELECT name, type,
>> coordinate_system_auth_name, coordinate_system_code, datum_auth_name,
>> datum_code, area_of_use_auth_name, area_of_use_code, text_definition,
>> deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such
>> column: area_of_use_auth_name
>> proj_create: SQLite error on SELECT name, type,
>> coordinate_system_auth_name, coordinate_system_code, datum_auth_name,
>> datum_code, area_of_use_auth_name, area_of_use_code, text_definition,
>> deprecated FROM geodetic_crs WHERE auth_name = ? AND code = ?: no such
>> column: area_of_use_auth_name Error in CRS(SRS_string = "EPSG:4326") :
>> NA
>>
>> I checked the proj package with the command apt-cache show proj-bin, I
>> got this. I think I have 2 packages installed
>
> With only 7.2.1 installed, I see:
>
>> library(sp)
>> CRS(SRS_string='EPSG:4326')
> CRS arguments: +proj=longlat +datum=WGS84 +no_defs
>> cat(wkt(CRS(SRS_string='EPSG:4326')), "\n")
> GEOGCRS["WGS 84 (with axis order normalized for visualization)",
>     DATUM["World Geodetic System 1984",
>         ELLIPSOID["WGS 84",6378137,298.257223563,
>             LENGTHUNIT["metre",1]],
>         ID["EPSG",6326]],
>     PRIMEM["Greenwich",0,
>         ANGLEUNIT["degree",0.0174532925199433],
>         ID["EPSG",8901]],
>     CS[ellipsoidal,2],
>         AXIS["geodetic longitude (Lon)",east,
>             ORDER[1],
>             ANGLEUNIT["degree",0.0174532925199433,
>                 ID["EPSG",9122]]],
>         AXIS["geodetic latitude (Lat)",north,
>             ORDER[2],
>             ANGLEUNIT["degree",0.0174532925199433,
>                 ID["EPSG",9122]]]]
>
> You are probably right that your two proj-bin (and other proj) ununtu packages are confusing each other. There should be one only, and rgdal (and sf) should be re-installed from source to pick up the correct unique version.
>
> Hope this clarifies,
>
> Roger
>
>>
>> Package: proj-bin
>> Source: proj
>> Priority: optional
>> Section: science
>> Installed-Size: 470
>> Maintainer: Debian GIS Project
>> <pkg-grass-devel at lists.alioth.debian.org>
>> Architecture: amd64
>> Version: 7.2.0-1~focal0
>> Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj19 (>= 7.2.0), libstdc++6 (                >= 5.2)
>> Filename: pool/main/p/proj/proj-bin_7.2.0-1~focal0_amd64.deb
>>
>> Package: proj-bin
>> Architecture: amd64
>> Version: 6.3.1-1
>> Priority: extra
>> Section: universe/science
>> Source: proj
>> Origin: Ubuntu
>> Maintainer: Ubuntu Developers <ubuntu-devel-discuss at lists.ubuntu.com>
>> Original-Maintainer: Debian GIS Project <pkg-grass-devel at lists.alioth.debian.org                                                                             >
>> Bugs: https://bugs.launchpad.net/ubuntu/+filebug
>> Installed-Size: 319
>> Depends: libc6 (>= 2.29), libgcc-s1 (>= 3.0), libproj15 (>= 6.2.1), libstdc++6 (                >= 5.2)
>> Filename: pool/universe/p/proj/proj-bin_6.3.1-1_amd64.deb
>> Task: ubuntustudio-video, ubuntustudio-publishing, ubuntustudio-photography, ubu                                                                             ntustudio-graphics
>>
>>
>> Thank you
>> Nicolas
>>
>> [Logo-Signature-INRAE]
>>
>> Bdat.gissol.fr
>>
>> Nicolas Saby
>> Chef de projet en information statistique
>> https://orcid.org/0000-0001-8964-1194
>>
>>
>>
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics, Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From chr|@||oyd2 @end|ng |rom y@hoo@co@uk  Wed Jan 20 01:56:32 2021
From: chr|@||oyd2 @end|ng |rom y@hoo@co@uk (Christopher Lloyd)
Date: Wed, 20 Jan 2021 00:56:32 +0000 (UTC)
Subject: [R-sig-Geo] [R] Error: cons memory exhausted (limit reached?):
 Memory Management?
References: <996716832.3450386.1611104192723.ref@mail.yahoo.com>
Message-ID: <996716832.3450386.1611104192723@mail.yahoo.com>

Hi all,
I'm loading a large (~30GB) geojson file into R using readOGR on a HPC. I am also loading a small shapefile, and then trying to undertake some processing on the large geojson using gBuffer from the rgeos package.
I believe that the HPC is running Red Hat Enterprise Linux 7.4, and it certainly has around 750 GB free for user jobs. I have allocated the full amount of ram to the job.I previously used the following modules to undertake this task and it ran successfully, although only after tweaking the settings that I detail below - otherwise I had the same error:
module load proj/5.0.0module load gdal/2.3.1module load geos/3.6.2module load gcc/6.4.0module load R/3.5.2module load python? # python 3 by defaultmodule load numpy/1.14.0 # requires module load python
Settings at linux command line that previously allowed a successful run:R_MAX_VSIZE=720GR_GC_MEM_GROW=0
--min-nsize=50000k --min-vsize=12M --max-ppsize=500000 (when executing the R script from command line)
However, the modules have now been updated on the HPC, and so I am now using:module load proj/6.1.1module load R/3.6.2(other modules remain the same)
I get the following error whilst processing (loading the file into R is ok), with gcinfo() turned on:
Garbage collection 144 = 86+22+36 (level 0) ...?288541.3 Mbytes of cons cells used (66%)55320.1 Mbytes of vectors used (98%)Garbage collection 145 = 86+23+36 (level 1) ...?66679.3 Mbytes of cons cells used (15%)56447.7 Mbytes of vectors used (100%)Garbage collection 146 = 86+23+37 (level 2) ...?39852.3 Mbytes of cons cells used (11%)49032.4 Mbytes of vectors used (72%)Garbage collection 147 = 87+23+37 (level 0) ...?124935.0 Mbytes of cons cells used (36%)64961.0 Mbytes of vectors used (95%)Garbage collection 148 = 87+24+37 (level 1) ...?985162418403226.2 Mbytes of cons cells used (-2147483648%)35274.8 Mbytes of vectors used (52%)
Error: cons memory exhausted (limit reached?)In addition: Warning message:Garbage collection 149 = 88+24+37 (level 0) ...?985162418403226.2 Mbytes of cons cells used (-2147483648%)35274.8 Mbytes of vectors used (52%)Lost warning messagesExecution haltedGarbage collection 150 = 89+24+37 (level 0) ...?985162418403226.2 Mbytes of cons cells used (-2147483648%)35274.8 Mbytes of vectors used (52%)
Error: cons memory exhausted (limit reached?)
The job halts with Memory Utilized: 411.29 GB
I cannot understand why the job worked previously (just) but now does not when seemingly the only change is an updated proj and R version (3.5.2 to 3.6.2).
Might anyone have any suggestions as to why this is the case? And/or how to alter the memory management so that memory is not exhausted so easily?
Many thanks, Chris

	[[alternative HTML version deleted]]


From t@v|b@r @end|ng |rom gm@||@com  Wed Jan 20 09:55:57 2021
From: t@v|b@r @end|ng |rom gm@||@com (Micha Silver)
Date: Wed, 20 Jan 2021 10:55:57 +0200
Subject: [R-sig-Geo] How to define a local equidistant CRS
Message-ID: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>

The RAINLINK package [1] derives rain rate from the attenuation of
signal strength between microwave towers. Data typically comes from
cellular network providers, and the location of the towers is
typically given in longitude/latitude.
Among the functions in RAINLINK, some require to get the attenuation
for each microwave link (pair of towers), from those towers that are
nearby, within, say 15 km. This means that the tower locations need to
be transformed to an equidistant Cartesian CRS.

In the current version of RAINLINK, this was done as follows:
An sp object was prepared from the tower locations, with CRS
"EPSG:4326". The average latitude and longitude values were obtained
as "YMiddle" and "XMiddle". Then a new, one-off azimuthal equidistant
CRS was defined as:
# Set projection string
projstring <- paste("+proj=aeqd +a=6378.137 +b=6356.752 +R_A +lat_0=",
    YMiddle, " +lon_0=",
    XMiddle," +x_0=0 +y_0=0",sep="")

This worked until the recent advances in proj and gdal. Now with proj
>=6.x and gdal >=3.x the above definition causes an error:

Error in .spTransform_Polygon(input[[i]], to_args = to_args, from_args
= from_args,  :
  coordinate operation creation from WKT failed: generic error of unknown origin
In addition: Warning messages:
1: In showSRID(uprojargs, format = "PROJ", multiline = "NO",
prefer_proj = prefer_proj) :
  Discarded ellps unknown in CRS definition: +proj=aeqd +a=6378.137
+b=6356.752 +R_A +lat_0=30.4 +lon_0=35.1 +x_0=0 +y_0=0 +type=crs
2: In showSRID(uprojargs, format = "PROJ", multiline = "NO",
prefer_proj = prefer_proj) :
  Discarded datum unknown in CRS definition

If I change the CRS definition as follows:
projstring <- paste("+proj=aeqd +R_A +lat_0=", YMiddle,
                    " +lon_0=", XMiddle,
                      " +x_0=0 +y_0=0 +ellps=WGS84",sep="")

Then using proj 6.3.2 we get a warning:
"In showSRID(uprojargs, format = "PROJ", multiline = "NO", ... :
Discarded datum Unknown based on WGS84 ellipsoid in CRS definition"

whereas on a newer setup, with "Loaded PROJ runtime: Rel. 7.2.1" the
above definition is accepted silently.

Our question is what is the reliable way to define a local Cartesian
CRS which would work anywhere in the world, and preferably be
equidistant. Should we just find the local UTM zone and use that?  UTM
is not equidistant, but it is ubiquitous, and if the cellular network
is not too broad, I assume that distances will be fairly accurate.

Best regards,
Micha

[1] https://github.com/overeem11/RAINLINK

-- 
Micha Silver
Ben Gurion Univ
Sde-Boker Remote Sensing Lab
cell: +972 (52) 3665918


From Roger@B|v@nd @end|ng |rom nhh@no  Wed Jan 20 11:39:47 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Wed, 20 Jan 2021 11:39:47 +0100
Subject: [R-sig-Geo] How to define a local equidistant CRS
In-Reply-To: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
References: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
Message-ID: <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>

On Wed, 20 Jan 2021, Micha Silver wrote:

> The RAINLINK package [1] derives rain rate from the attenuation of
> signal strength between microwave towers. Data typically comes from
> cellular network providers, and the location of the towers is
> typically given in longitude/latitude.
> Among the functions in RAINLINK, some require to get the attenuation
> for each microwave link (pair of towers), from those towers that are
> nearby, within, say 15 km. This means that the tower locations need to
> be transformed to an equidistant Cartesian CRS.
>
> In the current version of RAINLINK, this was done as follows:
> An sp object was prepared from the tower locations, with CRS
> "EPSG:4326". The average latitude and longitude values were obtained
> as "YMiddle" and "XMiddle". Then a new, one-off azimuthal equidistant
> CRS was defined as:
> # Set projection string
> projstring <- paste("+proj=aeqd +a=6378.137 +b=6356.752 +R_A +lat_0=",
>    YMiddle, " +lon_0=",
>    XMiddle," +x_0=0 +y_0=0",sep="")
>
> This worked until the recent advances in proj and gdal. Now with proj
>> =6.x and gdal >=3.x the above definition causes an error:
>
> Error in .spTransform_Polygon(input[[i]], to_args = to_args, from_args
> = from_args,  :
>  coordinate operation creation from WKT failed: generic error of unknown
>  origin

This is not a reproducible example. Please provide a reproducible example, 
specifying all of the software versions, especially PROJ and GDAL. The 
changes in PROJ are now entering the 4th year, so I'm a bit surprised that 
steps were not taken before to check for problems to your workflow as 
Proj4 strings shift from deprecated to defunct. The package is not on 
CRAN, so was not caught by our reverse dependency checks, so the 
responsibility for making sure things work rests on the maintainer, not 
us.

Please also convert the example to points, (you reach 
.spTransform_Polygon() here, so these are not points), and try proj from 
the command line. I think that your +a and +b also have units problems (km 
not m). The +R_A argument is not given as in current:

https://proj.org/operations/projections/aeqd.html

> In addition: Warning messages:
> 1: In showSRID(uprojargs, format = "PROJ", multiline = "NO",
> prefer_proj = prefer_proj) :
>  Discarded ellps unknown in CRS definition: +proj=aeqd +a=6378.137
> +b=6356.752 +R_A +lat_0=30.4 +lon_0=35.1 +x_0=0 +y_0=0 +type=crs
> 2: In showSRID(uprojargs, format = "PROJ", multiline = "NO",
> prefer_proj = prefer_proj) :
>  Discarded datum unknown in CRS definition
>
> If I change the CRS definition as follows:
> projstring <- paste("+proj=aeqd +R_A +lat_0=", YMiddle,
>                    " +lon_0=", XMiddle,
>                      " +x_0=0 +y_0=0 +ellps=WGS84",sep="")
>
> Then using proj 6.3.2 we get a warning:
> "In showSRID(uprojargs, format = "PROJ", multiline = "NO", ... :
> Discarded datum Unknown based on WGS84 ellipsoid in CRS definition"
>
> whereas on a newer setup, with "Loaded PROJ runtime: Rel. 7.2.1" the
> above definition is accepted silently.
>
> Our question is what is the reliable way to define a local Cartesian
> CRS which would work anywhere in the world, and preferably be
> equidistant.

With a reproducible example that works with proj command line tools, one 
could ask for views on the PROJ list itself.

Hope this helps,

Roger

> Should we just find the local UTM zone and use that?  UTM
> is not equidistant, but it is ubiquitous, and if the cellular network
> is not too broad, I assume that distances will be fairly accurate.
>
> Best regards,
> Micha
>
> [1] https://github.com/overeem11/RAINLINK
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From Roger@B|v@nd @end|ng |rom nhh@no  Wed Jan 20 11:57:19 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Wed, 20 Jan 2021 11:57:19 +0100
Subject: [R-sig-Geo] [R] Error: cons memory exhausted (limit reached?):
 Memory Management?
In-Reply-To: <996716832.3450386.1611104192723@mail.yahoo.com>
References: <996716832.3450386.1611104192723.ref@mail.yahoo.com>
 <996716832.3450386.1611104192723@mail.yahoo.com>
Message-ID: <6acccaa3-a983-4a0-9e7-614f8a9bf5e@reclus.nhh.no>

On Wed, 20 Jan 2021, Christopher Lloyd via R-sig-Geo wrote:

> Hi all,

> I'm loading a large (~30GB) geojson file into R using readOGR on a HPC. 
> I am also loading a small shapefile, and then trying to undertake some 
> processing on the large geojson using gBuffer from the rgeos package.

Have you tried to use the sf package instead?

> I believe that the HPC is running Red Hat Enterprise Linux 7.4, and it 
> certainly has around 750 GB free for user jobs. I have allocated the 
> full amount of ram to the job.I previously used the following modules to 
> undertake this task and it ran successfully, although only after 
> tweaking the settings that I detail below - otherwise I had the same 
> error: module load proj/5.0.0module load gdal/2.3.1module load 
> geos/3.6.2module load gcc/6.4.0module load R/3.5.2module load python # 
> python 3 by defaultmodule load numpy/1.14.0 # requires module load 
> python

RHEL 7 is pretty old. The last PROJ 4.9.* and possibly GDAL 2.2.* may work 
OK, but anything after that first hits changes from PROJ 5, then switches 
in both PROJ, GDAL and GEOS to C++11, then the complete remake in PROJ >= 
6 with GDAL >= 3. PROJ >= 6 should not be used with GDAL < 3. The R 
versions are irrelevant, but sf/rgdal/sp versions matter.

> Settings at linux command line that previously allowed a successful 
> run:R_MAX_VSIZE=720GR_GC_MEM_GROW=0 --min-nsize=50000k --min-vsize=12M 
> --max-ppsize=500000 (when executing the R script from command line) 
> However, the modules have now been updated on the HPC, and so I am now 
> using:module load proj/6.1.1module load R/3.6.2(other modules remain the 
> same)

> I get the following error whilst processing (loading the file into R is 
> ok), with gcinfo() turned on:

Was GDAL rebuilt with the new PROJ (and GEOS)? Was rgdal re-installed with 
the new PROJ and GDAL?

> Garbage collection 144 = 86+22+36 (level 0) ... 288541.3 Mbytes of cons 
> cells used (66%)55320.1 Mbytes of vectors used (98%)Garbage collection 
> 145 = 86+23+36 (level 1) ... 66679.3 Mbytes of cons cells used 
> (15%)56447.7 Mbytes of vectors used (100%)Garbage collection 146 = 
> 86+23+37 (level 2) ... 39852.3 Mbytes of cons cells used (11%)49032.4 
> Mbytes of vectors used (72%)Garbage collection 147 = 87+23+37 (level 0) 
> ... 124935.0 Mbytes of cons cells used (36%)64961.0 Mbytes of vectors 
> used (95%)Garbage collection 148 = 87+24+37 (level 1) ... 
> 985162418403226.2 Mbytes of cons cells used (-2147483648%)35274.8 Mbytes 
> of vectors used (52%)
> Error: cons memory exhausted (limit reached?)In addition: Warning 
> Error: message:Garbage collection 149 = 88+24+37 (level 0) ... 
> Error: 985162418403226.2 Mbytes of cons cells used (-2147483648%)35274.8 
> Error: Mbytes of vectors used (52%)Lost warning messagesExecution 
> Error: haltedGarbage collection 150 = 89+24+37 (level 0) ... 
> Error: 985162418403226.2 Mbytes of cons cells used (-2147483648%)35274.8 
> Error: Mbytes of vectors used (52%)

> Error: cons memory exhausted (limit reached?)

> The job halts with Memory Utilized: 411.29 GB

> I cannot understand why the job worked previously (just) but now does 
> not when seemingly the only change is an updated proj and R version 
> (3.5.2 to 3.6.2).

R version irrelevant, PROJ should be properly aligned with GDAL (either 
old PROJ with old GDAL or PROJ >= 6 with GDAL >= 3). Don't rely on the 
server admins to understand this, if necesssary build from source (this is 
running as a single thread anyway, so the big machine is only useful for 
having a lot of memory, not an HPC issue). My guess is that the modules 
being loaded are not matched with each other.

Probably in any case this task should read the geojson into a PostGIS db 
and possibly use PostGIS or sf's database access functionality to handle 
the topological operations. I don't think that this is about memory 
management, there is plenty of RAM, but sf, PostGIS and maybe rpostgis.

Hope this helps,

Roger


> Might anyone have any suggestions as to why this is the case? And/or how 
> to alter the memory management so that memory is not exhausted so 
> easily?

> Many thanks, Chris
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From chr|@||oyd2 @end|ng |rom y@hoo@co@uk  Wed Jan 20 16:09:59 2021
From: chr|@||oyd2 @end|ng |rom y@hoo@co@uk (Christopher Lloyd)
Date: Wed, 20 Jan 2021 15:09:59 +0000 (UTC)
Subject: [R-sig-Geo] [R] Error: cons memory exhausted (limit reached?):
 Memory Management?
In-Reply-To: <6acccaa3-a983-4a0-9e7-614f8a9bf5e@reclus.nhh.no>
References: <996716832.3450386.1611104192723.ref@mail.yahoo.com>
 <996716832.3450386.1611104192723@mail.yahoo.com>
 <6acccaa3-a983-4a0-9e7-614f8a9bf5e@reclus.nhh.no>
Message-ID: <1255577478.1150492.1611155399026@mail.yahoo.com>

 Thanks for the tips, Roger. I shall look into the possibilities that you discuss. Best wishes, Chris
    On Wednesday, 20 January 2021, 10:57:26 GMT, Roger Bivand <roger.bivand at nhh.no> wrote:  
 
 On Wed, 20 Jan 2021, Christopher Lloyd via R-sig-Geo wrote:

> Hi all,

> I'm loading a large (~30GB) geojson file into R using readOGR on a HPC. 
> I am also loading a small shapefile, and then trying to undertake some 
> processing on the large geojson using gBuffer from the rgeos package.

Have you tried to use the sf package instead?

> I believe that the HPC is running Red Hat Enterprise Linux 7.4, and it 
> certainly has around 750 GB free for user jobs. I have allocated the 
> full amount of ram to the job.I previously used the following modules to 
> undertake this task and it ran successfully, although only after 
> tweaking the settings that I detail below - otherwise I had the same 
> error: module load proj/5.0.0module load gdal/2.3.1module load 
> geos/3.6.2module load gcc/6.4.0module load R/3.5.2module load python # 
> python 3 by defaultmodule load numpy/1.14.0 # requires module load 
> python

RHEL 7 is pretty old. The last PROJ 4.9.* and possibly GDAL 2.2.* may work 
OK, but anything after that first hits changes from PROJ 5, then switches 
in both PROJ, GDAL and GEOS to C++11, then the complete remake in PROJ >= 
6 with GDAL >= 3. PROJ >= 6 should not be used with GDAL < 3. The R 
versions are irrelevant, but sf/rgdal/sp versions matter.

> Settings at linux command line that previously allowed a successful 
> run:R_MAX_VSIZE=720GR_GC_MEM_GROW=0 --min-nsize=50000k --min-vsize=12M 
> --max-ppsize=500000 (when executing the R script from command line) 
> However, the modules have now been updated on the HPC, and so I am now 
> using:module load proj/6.1.1module load R/3.6.2(other modules remain the 
> same)

> I get the following error whilst processing (loading the file into R is 
> ok), with gcinfo() turned on:

Was GDAL rebuilt with the new PROJ (and GEOS)? Was rgdal re-installed with 
the new PROJ and GDAL?

> Garbage collection 144 = 86+22+36 (level 0) ... 288541.3 Mbytes of cons 
> cells used (66%)55320.1 Mbytes of vectors used (98%)Garbage collection 
> 145 = 86+23+36 (level 1) ... 66679.3 Mbytes of cons cells used 
> (15%)56447.7 Mbytes of vectors used (100%)Garbage collection 146 = 
> 86+23+37 (level 2) ... 39852.3 Mbytes of cons cells used (11%)49032.4 
> Mbytes of vectors used (72%)Garbage collection 147 = 87+23+37 (level 0) 
> ... 124935.0 Mbytes of cons cells used (36%)64961.0 Mbytes of vectors 
> used (95%)Garbage collection 148 = 87+24+37 (level 1) ... 
> 985162418403226.2 Mbytes of cons cells used (-2147483648%)35274.8 Mbytes 
> of vectors used (52%)
> Error: cons memory exhausted (limit reached?)In addition: Warning 
> Error: message:Garbage collection 149 = 88+24+37 (level 0) ... 
> Error: 985162418403226.2 Mbytes of cons cells used (-2147483648%)35274.8 
> Error: Mbytes of vectors used (52%)Lost warning messagesExecution 
> Error: haltedGarbage collection 150 = 89+24+37 (level 0) ... 
> Error: 985162418403226.2 Mbytes of cons cells used (-2147483648%)35274.8 
> Error: Mbytes of vectors used (52%)

> Error: cons memory exhausted (limit reached?)

> The job halts with Memory Utilized: 411.29 GB

> I cannot understand why the job worked previously (just) but now does 
> not when seemingly the only change is an updated proj and R version 
> (3.5.2 to 3.6.2).

R version irrelevant, PROJ should be properly aligned with GDAL (either 
old PROJ with old GDAL or PROJ >= 6 with GDAL >= 3). Don't rely on the 
server admins to understand this, if necesssary build from source (this is 
running as a single thread anyway, so the big machine is only useful for 
having a lot of memory, not an HPC issue). My guess is that the modules 
being loaded are not matched with each other.

Probably in any case this task should read the geojson into a PostGIS db 
and possibly use PostGIS or sf's database access functionality to handle 
the topological operations. I don't think that this is about memory 
management, there is plenty of RAM, but sf, PostGIS and maybe rpostgis.

Hope this helps,

Roger


> Might anyone have any suggestions as to why this is the case? And/or how 
> to alter the memory management so that memory is not exhausted so 
> easily?

> Many thanks, Chris
>
> ??? [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
  
	[[alternative HTML version deleted]]


From k@n@n009 @end|ng |rom umn@edu  Fri Jan 22 03:31:57 2021
From: k@n@n009 @end|ng |rom umn@edu (Kaushi Kanankege)
Date: Thu, 21 Jan 2021 20:31:57 -0600
Subject: [R-sig-Geo] Offset for spautolm function in Spatialreg package
In-Reply-To: <8bebd7ef-2c7-2561-c097-6a5ad981d90@reclus.nhh.no>
References: <CANaVsNqr31_MSEZZfYrbapN6h5VcjNyKsSR3JKZP=eQR0v+1hQ@mail.gmail.com>
 <2831cc12-10d8-48cb-b5d6-3c31af1aca34@reclus.nhh.no>
 <CANaVsNp_bAtdabta0GAZx7t059cHdiyxLMs29i1_dxQHMSWHzQ@mail.gmail.com>
 <CANaVsNqWJ-cUEQTBVAHzbOBzed5nMSEdYM39qNojwLAwzoxGsg@mail.gmail.com>
 <8bebd7ef-2c7-2561-c097-6a5ad981d90@reclus.nhh.no>
Message-ID: <CANaVsNrVZtSPTFZjrtt-brvHq4ANt5MwatHMViH3BA5ef29tow@mail.gmail.com>

*Dr.Bivand,*

*I didn't realize the post until recently. It has listed my personal phone
number. I'd appreciate it if you can remove this. Thanks*


*Kaushi*

	[[alternative HTML version deleted]]


From t@v|b@r @end|ng |rom gm@||@com  Fri Jan 22 08:56:12 2021
From: t@v|b@r @end|ng |rom gm@||@com (Micha Silver)
Date: Fri, 22 Jan 2021 09:56:12 +0200
Subject: [R-sig-Geo] How to define a local equidistant CRS
In-Reply-To: <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>
References: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
 <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>
Message-ID: <fe6e5614-7438-951b-56b5-fe651efe7cc5@gmail.com>

Hello Roger:


On 1/20/21 12:39 PM, Roger Bivand wrote:
> On Wed, 20 Jan 2021, Micha Silver wrote:
>
>> The RAINLINK package [1] derives rain rate from the attenuation of
>> signal strength between microwave towers. Data typically comes from
>> cellular network providers, and the location of the towers is
>> typically given in longitude/latitude.
>> Among the functions in RAINLINK, some require to get the attenuation
>> for each microwave link (pair of towers), from those towers that are
>> nearby, within, say 15 km. This means that the tower locations need to
>> be transformed to an equidistant Cartesian CRS.
>>
>> In the current version of RAINLINK, this was done as follows:
>> An sp object was prepared from the tower locations, with CRS
>> "EPSG:4326". The average latitude and longitude values were obtained
>> as "YMiddle" and "XMiddle". Then a new, one-off azimuthal equidistant
>> CRS was defined as:
>> # Set projection string
>> projstring <- paste("+proj=aeqd +a=6378.137 +b=6356.752 +R_A +lat_0=",
>> ?? YMiddle, " +lon_0=",
>> ?? XMiddle," +x_0=0 +y_0=0",sep="")
>>
>> This worked until the recent advances in proj and gdal. Now with proj
>>> =6.x and gdal >=3.x the above definition causes an error:
>>
>> Error in .spTransform_Polygon(input[[i]], to_args = to_args, from_args
>> = from_args,? :
>> ?coordinate operation creation from WKT failed: generic error of unknown
>> ?origin
>
> This is not a reproducible example. Please provide a reproducible 
> example, specifying all of the software versions, especially PROJ and 
> GDAL. The changes in PROJ are now entering the 4th year, so I'm a bit 
> surprised that steps were not taken before to check for problems to 
> your workflow as Proj4 strings shift from deprecated to defunct. The 
> package is not on CRAN, so was not caught by our reverse dependency 
> checks, so the responsibility for making sure things work rests on the 
> maintainer, not us.


After some testing with a reprex script (included below) we found that

1- No errors or warnings when using the sf package with any recent proj 
version

2- Switching to the sp package, we found no errors or warnings when the 
proj version was <=6.3

3- However, the script that uses the sp package, with proj 7.2 does show 
warnings:


 > source("aeqd_reprex.R")
[1] "28 Towers; CRS: +proj=longlat +ellps=WGS84 +no_defs"
[1] "After transform CRS: +proj=aeqd +lat_0=53.123835 +lon_0=7.03603 
+x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs"
There were 17 warnings (use warnings() to see them)
 > warnings()[1]
Warning message:
In showSRID(uprojargs, format = "PROJ", multiline = "NO",? ... :
 ? Discarded datum Unknown based on WGS84 ellipsoid in CRS definition
 > sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux bullseye/sid

Matrix products: default
BLAS:?? /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.13.so

locale:
 ?[1] LC_CTYPE=en_US.UTF-8?????? LC_NUMERIC=C
 ?[3] LC_TIME=en_US.UTF-8??????? LC_COLLATE=en_US.UTF-8
 ?[5] LC_MONETARY=en_US.UTF-8??? LC_MESSAGES=en_US.UTF-8
 ?[7] LC_PAPER=en_US.UTF-8?????? LC_NAME=C
 ?[9] LC_ADDRESS=C?????????????? LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats???? graphics? grDevices utils???? datasets? methods base

other attached packages:
[1] sp_1.4-4

loaded via a namespace (and not attached):
[1] compiler_4.0.3? rgdal_1.5-18??? grid_4.0.3 lattice_0.20-41


 > sf::sf_extSoftVersion()[1:3]
 ?? GEOS??? GDAL? proj.4
"3.9.0" "3.2.1" "7.2.0"

>
> Please also convert the example to points, (you reach 
> .spTransform_Polygon() here, so these are not points), and try proj 
> from the command line. I think that your +a and +b also have units 
> problems (km not m). The +R_A argument is not given as in current:
>
> https://proj.org/operations/projections/aeqd.html
>
>>
>
> With a reproducible example that works with proj command line tools, 
> one could ask for views on the PROJ list itself.
>


Here is our test script:

##=====================================

#library(sf)
# Option using sp
library(sp)
#print(sessionInfo())
#print(sf_extSoftVersion())

#---------------------------------------
# Small subset of microwave data
#---------------------------------------
mw_df = structure(list(Frequency = c(39.172, 37.912, 39.239, 26.362, 
39.172, 39.172,
 ???????????????????????????????????? 38.115, 39.165, 37.905, 39.256, 
18.03, 18.003,
 ???????????????????????????????????? 38.003, 39.263, 39.263, 38.003, 
39.172, 37.912,
 ???????????????????????????????????? 39.239, 39.172, 26.362, 39.172, 
38.115, 39.165,
 ???????????????????????????????????? 18.03, 39.256, 37.905, 18.003, 
39.165, 39.256,
 ???????????????????????????????????? 37.905, 18.003, 18.03, 38.003, 
39.263, 39.172,
 ???????????????????????????????????? 37.912, 39.239, 26.362, 39.172, 
39.172, 38.115,
 ???????????????????????????????????? 38.003, 39.263, 39.172, 37.912, 
39.239, 26.362,
 ???????????????????????????????????? 39.172, 39.172, 38.115, 37.905, 
18.003, 39.256,
 ???????????????????????????????????? 39.165, 18.03, 39.165, 18.03, 
37.905, 18.003,
 ???????????????????????????????????? 39.256, 38.003, 39.263, 39.172, 
37.912, 39.239,
 ???????????????????????????????????? 26.362, 39.172, 39.172, 38.115, 
38.003, 39.263,
 ???????????????????????????????????? 39.165, 39.256, 37.905, 18.03, 
18.003, 39.172,
 ???????????????????????????????????? 37.912, 39.239, 26.362, 39.172, 
39.172, 38.115,
 ???????????????????????????????????? 38.003, 39.263, 39.172, 39.165, 
18.03, 37.905,
 ???????????????????????????????????? 18.003, 39.256, 37.912, 39.239, 
26.362, 39.172,
 ???????????????????????????????????? 39.172, 38.115),
 ?????????????? DateTime = c(201209012030, 201209012030, 201209012030, 
201209012030, 201209012030,
 ??? ??????????????????? 201209012030, 201209012030, 201209012030, 
201209012030, 201209012030,
 ??????????????????????????? 201209012030, 201209012030, 201209012030, 
201209012030, 201209012045,
 ??????????????????????????? 201209012045, 201209012045, 201209012045, 
201209012045, 201209012045,
 ??????????????????????????? 201209012045, 201209012045, 201209012045, 
201209012045, 201209012045,
 ??????????????????????????? 201209012045, 201209012045, 201209012045, 
201209012100, 201209012100,
 ??????????????????????????? 201209012100, 201209012100, 201209012100, 
201209012100, 201209012100,
 ??????????????????????????? 201209012100, 201209012100, 201209012100, 
201209012100, 201209012100,
 ??????????????????????????? 201209012100, 201209012100, 201209012115, 
201209012115, 201209012115,
 ??????????????????????????? 201209012115, 201209012115, 201209012115, 
201209012115, 201209012115,
 ??????????????????????????? 201209012115, 201209012115, 201209012115, 
201209012115, 201209012115,
 ??????????????????????????? 201209012115, 201209012130, 201209012130, 
201209012130, 201209012130,
 ??????????????????????????? 201209012130, 201209012130, 201209012130, 
201209012130, 201209012130,
 ??????????????????????????? 201209012130, 201209012130, 201209012130, 
201209012130, 201209012130,
 ??????????????????????????? 201209012145, 201209012145, 201209012145, 
201209012145, 201209012145,
 ??????????????????????????? 201209012145, 201209012145, 201209012145, 
201209012145, 201209012145,
 ??????????????????????????? 201209012145, 201209012145, 201209012145, 
201209012145, 201209012200,
 ??????????????????????????? 201209012200, 201209012200, 201209012200, 
201209012200, 201209012200,
 ??????????????????????????? 201209012200, 201209012200, 201209012200, 
201209012200, 201209012200,
 ??????????????????????????? 201209012200, 201209012200, 201209012200),
 ?????????????? Pmin = c(-59, -52, -55, -49, -50, -51, -45, -46, -48, 
-54, -59, -56, -45, -44, -44,
 ??????????????????????? -45, -59, -52, -55, -50, -49, -51, -45, -46, 
-59, -54, -48, -56, -47, -54,
 ??????????????????????? -48, -56, -58, -44, -44, -59, -52, -56, -49, 
-50, -51, -45, -44, -44, -60,
 ??????????????????????? -52, -56, -50, -51, -50, -45, -48, -56, -54, 
-47, -57, -46, -57, -48, -56,
 ??????????????????????? -54, -44, -44, -60, -52, -56, -50, -51, -50, 
-45, -44, -44, -47, -54, -48,
 ??????????????????????? -58, -57, -60, -52, -55, -49, -50, -51, -45, 
-44, -45, -60, -45, -58, -48,
 ??????????????????????? -57, -54, -52, -55, -50, -51,? -50, -45),
 ?????????????? Pmax = c(-58, -52, -54, -46, -49, -51, -45, -44, -47, 
-53, -57, -55, -44, -43, -43,
 ??????????????????????? -44, -58, -52, -54, -49, -46, -51, -45, -44, 
-57, -53, -47, -55, -46, -53,
 ??????????????????????? -47, -55, -57, -43, -43, -58, -52, -54, -46, 
-49, -51, -45, -44, -43, -58,
 ??????????????????????? -52, -54, -47, -51, -49, -44, -47, -55, -53, 
-43, -57, -43, -57, -47, -55,
 ??????????????????????? -53, -44, -43, -58, -52, -54, -47, -51, -49, 
-45, -44, -44, -44, -53, -47,
 ??????????????????????? -57, -55, -59, -52, -54, -46, -49, -51, -45, 
-44, -44, -59, -44, -57, -47,
 ??????????????????????? -56, -53, -52, -54, -47, -51, -49, -44),
 ?????????????? PathLength = c(2.97052, 1.50853, 5.97957, 8.19688, 
2.26532, 1.50853, 1.504, 4.78188,
 ????????????????????????????? 4.78188, 2.12735, 13.50599, 7.56082, 
4.37035, 4.37035, 4.37035,
 ????????????????????????????? 4.37035, 2.97052, 1.50853, 5.97957, 
2.26532, 8.19688, 1.50853,
 ????????????????????????????? 1.504, 4.78188, 13.50599, 2.12735, 
4.78188, 7.56082, 4.78188, 2.12735,
 ????????????????????????????? 4.78188, 7.56082, 13.50599, 4.37035, 
4.37035, 2.97052, 1.50853,
 ????????????????????????????? 5.97957, 8.19688, 2.26532, 1.50853, 
1.504, 4.37035, 4.37035, 2.97052,
 ????????????????????????????? 1.50853, 5.97957, 8.19688, 1.50853, 
2.26532, 1.504, 4.78188, 7.56082,
 ????????????????????????????? 2.12735, 4.78188, 13.50599, 4.78188, 
13.50599, 4.78188, 7.56082,
 ????????????????????????????? 2.12735, 4.37035, 4.37035, 2.97052, 
1.50853, 5.97957, 8.19688,
 ????????????????????????????? 1.50853, 2.26532, 1.504, 4.37035, 
4.37035, 4.78188, 2.12735, 4.78188,
 ????????????????????????????? 13.50599, 7.56082, 2.97052,1.50853, 
5.97957, 8.19688, 2.26532,
 ????????????????????????????? 1.50853, 1.504, 4.37035, 4.37035, 
2.97052, 4.78188, 13.50599, 4.78188,
 ????????????????????????????? 7.56082, 2.12735, 1.50853, 5.97957, 
8.19688, 1.50853, 2.26532, 1.504),
 ?????????????? XStart = c(6.98795,6.91965, 7.12605, 7.12605, 6.90439, 
6.92231, 7.05273, 6.94839,
 ????????????????????????? 7.01525, 6.95347, 6.94267, 7.12769, 6.92516, 
6.98553, 6.98553, 6.92516,
 ????????????????????????? 6.98795, 6.91965, 7.12605, 6.90439, 7.12605, 
6.92231, 7.05273, 6.94839,
 ????????????????????????? 6.94267, 6.95347, 7.01525, 7.12769, 6.94839, 
6.95347, 7.01525, 7.12769,
 ????????????????????????? 6.94267, 6.92516, 6.98553, 6.98795, 6.91965, 
7.12605, 7.12605, 6.90439,
 ????????????????????????? 6.92231, 7.05273, 6.92516, 6.98553, 6.98795, 
6.91965, 7.12605, 7.12605,
 ????????????????????????? 6.92231, 6.90439,7.05273, 7.01525, 7.12769, 
6.95347, 6.94839, 6.94267,
 ????????????????????????? 6.94839, 6.94267, 7.01525, 7.12769, 6.95347, 
6.92516, 6.98553, 6.98795,
 ????????????????????????? 6.91965, 7.12605, 7.12605, 6.92231, 6.90439, 
7.05273, 6.92516, 6.98553,
 ????????????????????????? 6.94839, 6.95347, 7.01525, 6.94267, 7.12769, 
6.98795, 6.91965, 7.12605,
 ????????????????????????? 7.12605, 6.90439, 6.92231, 7.05273, 6.92516, 
6.98553, 6.98795, 6.94839,
 ????????????????????????? 6.94267, 7.01525, 7.12769, 6.95347, 6.91965, 
7.12605, 7.12605, 6.92231,
 ????????????????????????? 6.90439, 7.05273),
 ?????????????? YStart = c(53.09842, 53.31928, 53.14836, 53.14836, 
53.32724, 53.33274, 53.1538,
 ????????????????????????? 52.91493, 52.92956, 52.98836, 52.99448, 
52.92908, 53.17983, 53.16479,
 ????????????????????????? 53.16479, 53.17983, 53.09842, 53.31928, 
53.14836, 53.32724, 53.14836,
 ????????????????????????? 53.33274, 53.1538, 52.91493, 52.99448, 
52.98836, 52.92956, 52.92908,
 ????????????????????????? 52.91493, 52.98836, 52.92956, 52.92908, 
52.99448, 53.17983, 53.16479,
 ????????????????????????? 53.09842, 53.31928, 53.14836, 53.14836, 
53.32724, 53.33274, 53.1538,
 ????????????????????????? 53.17983, 53.16479, 53.09842, 53.31928, 
53.14836, 53.14836, 53.33274,
 ????????????????????????? 53.32724, 53.1538, 52.92956, 52.92908, 
52.98836, 52.91493, 52.99448,
 ????????????????????????? 52.91493, 52.99448, 52.92956, 52.92908, 
52.98836, 53.17983, 53.16479,
 ????????????????????????? 53.09842, 53.31928, 53.14836, 53.14836, 
53.33274, 53.32724, 53.1538,
 ????????????????????????? 53.17983, 53.16479, 52.91493, 52.98836, 
52.92956, 52.99448, 52.92908,
 ????????????????????????? 53.09842, 53.31928, 53.14836, 53.14836, 
53.32724, 53.33274, 53.1538,
 ????????????????????????? 53.17983, 53.16479, 53.09842, 52.91493, 
52.99448, 52.92956, 52.92908,
 ????????????????????????? 52.98836, 53.31928, 53.14836, 53.14836, 
53.33274, 53.32724, 53.1538),
 ?????????????? XEnd = c(6.948, 6.92231, 7.20104, 7.02248, 6.87102, 
6.91965, 7.05556, 7.01525,
 ??????????????????????? 6.94839, 6.97979, 7.07683, 7.01525, 6.98553, 
6.92516, 6.92516, 6.98553,
 ??????????????????????? 6.948, 6.92231, 7.20104, 6.87102, 7.02248, 
6.91965, 7.05556, 7.01525,
 ??????????????????????? 7.07683, 6.97979, 6.94839, 7.01525, 7.01525, 
6.97979, 6.94839, 7.01525,
 ??????????????????????? 7.07683, 6.98553, 6.92516, 6.948, 6.92231, 
7.20104, 7.02248, 6.87102,
 ??????????????????????? 6.91965, 7.05556, 6.98553, 6.92516, 6.948, 
6.92231, 7.20104, 7.02248,
 ??????????????????????? 6.91965, 6.87102, 7.05556, 6.94839, 7.01525, 
6.97979, 7.01525, 7.07683,
 ??????????????????????? 7.01525, 7.07683, 6.94839, 7.01525, 6.97979, 
6.98553, 6.92516, 6.948,
 ??????????????????????? 6.92231, 7.20104, 7.02248, 6.91965, 6.87102, 
7.05556, 6.98553, 6.92516,
 ??????????????????????? 7.01525, 6.97979, 6.94839, 7.07683, 7.01525, 
6.948, 6.92231, 7.20104,
 ??????????????????????? 7.02248, 6.87102, 6.91965, 7.05556, 6.98553, 
6.92516, 6.948, 7.01525,
 ??????????????????????? 7.07683, 6.94839, 7.01525, 6.97979, 6.92231, 
7.20104, 7.02248, 6.91965,
 ??????????????????????? 6.87102, 7.05556),
 ?????????????? YEnd = c(53.08685, 53.33274, 53.17761, 53.10906, 
53.32334, 53.31928, 53.14039,
 ??????????????????????? 52.92956, 52.91493, 52.97772, 53.08498, 
52.92956, 53.16479, 53.17983,
 ??????????????????????? 53.17983, 53.16479, 53.08685, 53.33274, 
53.17761, 53.32334, 53.10906,
 ??????????????????????? 53.31928, 53.14039, 52.92956, 53.08498, 
52.97772, 52.91493, 52.92956,
 ??????????????????????? 52.92956, 52.97772, 52.91493, 52.92956, 
53.08498, 53.16479, 53.17983,
 ??????????????????????? 53.08685, 53.33274, 53.17761, 53.10906, 
53.32334, 53.31928, 53.14039,
 ??????????????????????? 53.16479, 53.17983, 53.08685, 53.33274, 
53.17761, 53.10906, 53.31928,
 ??????????????????????? 53.32334, 53.14039, 52.91493, 52.92956, 
52.97772, 52.92956, 53.08498,
 ??????????????????????? 52.92956, 53.08498, 52.91493, 52.92956, 
52.97772, 53.16479, 53.17983,
 ??????????????????????? 53.08685, 53.33274, 53.17761, 53.10906, 
53.31928, 53.32334, 53.14039,
 ??????????????????????? 53.16479, 53.17983, 52.92956, 52.97772, 
52.91493, 53.08498, 52.92956,
 ??????????????????????? 53.08685, 53.33274, 53.17761, 53.10906, 
53.32334, 53.31928, 53.14039,
 ??????????????????????? 53.16479, 53.17983, 53.08685, 52.92956, 
53.08498, 52.91493, 52.92956,
 ??????????????????????? 52.97772, 53.33274, 53.17761, 53.10906, 
53.31928, 53.32334, 53.14039),
 ?????????????? ID = c(901, 926, 935, 939, 936, 937, 1030, 471, 543, 
478, 475, 546, 818, 820,
 ????????????????????? 820, 818, 901, 926, 935, 936, 939, 937, 1030, 
471, 475, 478, 543, 546,
 ????????????????????? 471, 478, 543, 546, 475, 818, 820, 901, 926, 935, 
939, 936, 937, 1030,
 ????????????????????? 818, 820, 901, 926, 935, 939, 937, 936, 1030, 
543, 546, 478, 471, 475,
 ????????????????????? 471, 475, 543, 546, 478, 818, 820, 901, 926, 935, 
939, 937, 936, 1030,
 ????????????????????? 818, 820, 471, 478, 543, 475, 546, 901, 926, 935, 
939, 936, 937, 1030,
 ????????????????????? 818, 820, 901, 471, 475, 543, 546, 478, 926, 935, 
939, 937, 936, 1030)),
 ????????? class = c("spec_tbl_df", "tbl_df", "tbl", "data.frame"),
 ????????? row.names = c(NA, -98L),
 ????????? spec = structure(list(cols = list(Frequency = structure(list(),
class = c("collector_double", "collector")),
 ??????????????????????????????????????????? DateTime = 
structure(list(), class = c("collector_double", "collector")),
 ??????????????????????????????????????????? Pmin = structure(list(), 
class = c("collector_double", "collector")),
 ??????????????????????????????????????????? Pmax = structure(list(), 
class = c("collector_double", "collector")),
 ??????????????????????????????????????????? PathLength = 
structure(list(), class = c("collector_double", "collector")),
 ??????????????????????????????????????????? XStart = structure(list(), 
class = c("collector_double", "collector")),
 ??????????????????????????????????????????? YStart = structure(list(), 
class = c("collector_double", "collector")),
 ??????????????????????????????????????????? XEnd = structure(list(), 
class = c("collector_double",? "collector")),
 ??????????????????????????????????????????? YEnd = structure(list(), 
class = c("collector_double", "collector")),
 ??????????????????????????????????????????? ID = structure(list(), 
class = c("collector_double",? "collector"))),
 ??????????????????????????????? default = structure(list(), class = 
c("collector_guess", "collector")),
 ??????????????????????????????? skip = 1L), class = "col_spec"))

#---------------------------------------
# Find middle point
# Setup CRS strings
#---------------------------------------
XMiddle <- (min(mw_df$XStart, mw_df$XEnd) + max(mw_df$XStart, 
mw_df$XEnd)) / 2
YMiddle <- (min(mw_df$YStart, mw_df$YEnd) + max(mw_df$YStart, 
mw_df$YEnd)) / 2

projstring_wgs84 = "+proj=longlat +ellps=WGS84"
projstring_aeqd <- paste("+proj=aeqd +lat_0=", YMiddle,
 ??????????????????? " +lon_0=", XMiddle,
 ??????????????????? " +x_0=0 +y_0=0 +ellps=WGS84",sep="")

#---------------------------------------
# Loop thru all ID's and extract both start and end points
# Save in list, to get spatial points object of all MW towers
#---------------------------------------
IDs = unique(mw_df$ID)
towers_list = lapply(IDs, function(i) {
 ? # Create point sf object with two features, start and end of link
 ? link = mw_df[mw_df$ID == i,]
 ? # All time slots have the same coords. Get just the first:
 ? x1 = link$XStart[1]
 ? y1 = link$YStart[1]
 ? x2 = link$XEnd[1]
 ? y2 = link$YEnd[1]
 ? towers_df = data.frame("x" = c(x1, x2), "y" = c(y1, y2),
 ???????????????????????? "ID"=i, "End" = c("Start", "End"))

 ? # Create sf object of point features
 ? #towers_sf = st_as_sf(towers_df, coords = c("x", "y"),
 ? #???????????????????? crs = projstring_wgs84, agr = "constant")
 ? #return(towers_sf)
 ? # Option using sp
 ? xy = towers_df[,c("x", "y")]
 ? towers_sp = SpatialPointsDataFrame(coords = xy, data = towers_df,
 ??????????????????????????????? proj4string = CRS(projstring_wgs84))
 ? return(towers_sp)
})

#---------------------------------------
# Bind all point together and transform to AEQD
#---------------------------------------
towers = do.call(rbind, towers_list)
num_towers = length(towers$ID)

# sf Option
#---------------------------------------
#st_crs(towers) = projstring_wgs84
#print(paste(num_towers, "Towers; CRS:", st_crs(towers)$proj4string))
#towers_aeqd = st_transform(towers, projstring_aeqd)
#print(paste("After transform CRS:", st_crs(towers_aeqd)$proj4string))

# sp Option
#---------------------------------------
print(paste(num_towers, "Towers; CRS:", proj4string(towers)))
towers_aeqd = spTransform(towers, CRS(projstring_aeqd))
print(paste("After transform CRS:", proj4string(towers_aeqd)))

##=====================================

> Hope this helps,
>
> Roger
>

Thanks for your comments,

Micha



>> Should we just find the local UTM zone and use that?? UTM
>> is not equidistant, but it is ubiquitous, and if the cellular network
>> is not too broad, I assume that distances will be fairly accurate.
>>
>> Best regards,
>> Micha
>>
>> [1] https://github.com/overeem11/RAINLINK
>>
>>
>
-- 
Micha Silver
Ben Gurion Univ.
Sde Boker, Remote Sensing Lab
cell: +972-523-665918


From Roger@B|v@nd @end|ng |rom nhh@no  Fri Jan 22 15:30:19 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 22 Jan 2021 15:30:19 +0100
Subject: [R-sig-Geo] How to define a local equidistant CRS
In-Reply-To: <fe6e5614-7438-951b-56b5-fe651efe7cc5@gmail.com>
References: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
 <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>
 <fe6e5614-7438-951b-56b5-fe651efe7cc5@gmail.com>
Message-ID: <1444978-f42f-fb9-b0f5-b7286a438ea5@reclus.nhh.no>

On Fri, 22 Jan 2021, Micha Silver wrote:

> Hello Roger:
>
>
> On 1/20/21 12:39 PM, Roger Bivand wrote:
>>  On Wed, 20 Jan 2021, Micha Silver wrote:
>>
>>>  The RAINLINK package [1] derives rain rate from the attenuation of
>>>  signal strength between microwave towers. Data typically comes from
>>>  cellular network providers, and the location of the towers is
>>>  typically given in longitude/latitude.
>>>  Among the functions in RAINLINK, some require to get the attenuation
>>>  for each microwave link (pair of towers), from those towers that are
>>>  nearby, within, say 15 km. This means that the tower locations need to
>>>  be transformed to an equidistant Cartesian CRS.
>>>
>>>  In the current version of RAINLINK, this was done as follows:
>>>  An sp object was prepared from the tower locations, with CRS
>>>  "EPSG:4326". The average latitude and longitude values were obtained
>>>  as "YMiddle" and "XMiddle". Then a new, one-off azimuthal equidistant
>>>  CRS was defined as:
>>>  # Set projection string
>>>  projstring <- paste("+proj=aeqd +a=6378.137 +b=6356.752 +R_A +lat_0=",
>>>  ?? YMiddle, " +lon_0=",
>>>  ?? XMiddle," +x_0=0 +y_0=0",sep="")
>>>
>>>  This worked until the recent advances in proj and gdal. Now with proj
>>>>  =6.x and gdal >=3.x the above definition causes an error:
>>>
>>>  Error in .spTransform_Polygon(input[[i]], to_args = to_args, from_args
>>>  = from_args,? :
>>>  ?coordinate operation creation from WKT failed: generic error of unknown
>>>  ?origin
>>
>>  This is not a reproducible example. Please provide a reproducible example,
>>  specifying all of the software versions, especially PROJ and GDAL. The
>>  changes in PROJ are now entering the 4th year, so I'm a bit surprised that
>>  steps were not taken before to check for problems to your workflow as
>>  Proj4 strings shift from deprecated to defunct. The package is not on
>>  CRAN, so was not caught by our reverse dependency checks, so the
>>  responsibility for making sure things work rests on the maintainer, not
>>  us.
>
>
> After some testing with a reprex script (included below) we found that

This is broken because email breaks lines unless protected, so this very 
large text example does not run at all. If so much data is needed, and the 
example cannot be retricted to less than 6 points (2D only, no other 
columns needed), post just a script downloading an RDS object (only data 
frame, no tibbles please), convering to the sp object you have problems 
with, and definitely include the spTransform() call (use rgdal directly, 
report rgdal::rgdal_extSoftVersion()).

>
> 1- No errors or warnings when using the sf package with any recent proj 
> version
>

Irrelevant, rgdal warns because users need to see that the CRS 
representation  has changed. Remember that Proj4 strings should not be 
used at all, or if used will typically be off by 125m (because there is no 
+datum= or +towgs84= mechanism, they are deprecated). The fact that sf 
doesn't warn is because it wasn't thought necessary to alert users to 
possible output changes. It doesn't mean that output doesn't change.

> 2- Switching to the sp package, we found no errors or warnings when the proj 
> version was <=6.3
>
> 3- However, the script that uses the sp package, with proj 7.2 does show 
> warnings:
>
>
>>  source("aeqd_reprex.R")

Recreating the file by copying from the email to file gives:

> source("aeqd_reprex.R")
Error in source("aeqd_reprex.R") : aeqd_reprex.R:14:2: unexpected input
13: 39.172, 39.172,
14:  ?

I'm not going to waste time removing newlines inserted by an email client, 
did you try to extract the fish from the fish soup?

Roger

> [1] "28 Towers; CRS: +proj=longlat +ellps=WGS84 +no_defs"
> [1] "After transform CRS: +proj=aeqd +lat_0=53.123835 +lon_0=7.03603 +x_0=0 
> +y_0=0 +ellps=WGS84 +units=m +no_defs"
> There were 17 warnings (use warnings() to see them)
>>  warnings()[1]
> Warning message:
> In showSRID(uprojargs, format = "PROJ", multiline = "NO",? ... :
> ? Discarded datum Unknown based on WGS84 ellipsoid in CRS definition
>>  sessionInfo()
> R version 4.0.3 (2020-10-10)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Debian GNU/Linux bullseye/sid
>
> Matrix products: default
> BLAS:?? /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.13.so
>
> locale:
> ?[1] LC_CTYPE=en_US.UTF-8?????? LC_NUMERIC=C
> ?[3] LC_TIME=en_US.UTF-8??????? LC_COLLATE=en_US.UTF-8
> ?[5] LC_MONETARY=en_US.UTF-8??? LC_MESSAGES=en_US.UTF-8
> ?[7] LC_PAPER=en_US.UTF-8?????? LC_NAME=C
> ?[9] LC_ADDRESS=C?????????????? LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets? methods base
>
> other attached packages:
> [1] sp_1.4-4
>
> loaded via a namespace (and not attached):
> [1] compiler_4.0.3? rgdal_1.5-18??? grid_4.0.3 lattice_0.20-41
>
>
>>  sf::sf_extSoftVersion()[1:3]
> ?? GEOS??? GDAL? proj.4
> "3.9.0" "3.2.1" "7.2.0"
>
>>
>>  Please also convert the example to points, (you reach
>>  .spTransform_Polygon() here, so these are not points), and try proj from
>>  the command line. I think that your +a and +b also have units problems (km
>>  not m). The +R_A argument is not given as in current:
>>
>>  https://proj.org/operations/projections/aeqd.html
>> 
>>> 
>>
>>  With a reproducible example that works with proj command line tools, one
>>  could ask for views on the PROJ list itself.
>> 
>
>
> Here is our test script:
>
> ##=====================================
>
> # library(sf)
> # Option using sp
> library(sp)
> # print(sessionInfo())
> # print(sf_extSoftVersion())
>
> # ---------------------------------------
> # Small subset of microwave data
> # ---------------------------------------
> mw_df = structure(list(Frequency = c(39.172, 37.912, 39.239, 26.362, 39.172, 
> 39.172,
> ???????????????????????????????????? 38.115, 39.165, 37.905, 39.256, 18.03, 
> 18.003,
> ???????????????????????????????????? 38.003, 39.263, 39.263, 38.003, 39.172, 
> 37.912,
> ???????????????????????????????????? 39.239, 39.172, 26.362, 39.172, 38.115, 
> 39.165,
> ???????????????????????????????????? 18.03, 39.256, 37.905, 18.003, 39.165, 
> 39.256,
> ???????????????????????????????????? 37.905, 18.003, 18.03, 38.003, 39.263, 
> 39.172,
> ???????????????????????????????????? 37.912, 39.239, 26.362, 39.172, 39.172, 
> 38.115,
> ???????????????????????????????????? 38.003, 39.263, 39.172, 37.912, 39.239, 
> 26.362,
> ???????????????????????????????????? 39.172, 39.172, 38.115, 37.905, 18.003, 
> 39.256,
> ???????????????????????????????????? 39.165, 18.03, 39.165, 18.03, 37.905, 
> 18.003,
> ???????????????????????????????????? 39.256, 38.003, 39.263, 39.172, 37.912, 
> 39.239,
> ???????????????????????????????????? 26.362, 39.172, 39.172, 38.115, 38.003, 
> 39.263,
> ???????????????????????????????????? 39.165, 39.256, 37.905, 18.03, 18.003, 
> 39.172,
> ???????????????????????????????????? 37.912, 39.239, 26.362, 39.172, 39.172, 
> 38.115,
> ???????????????????????????????????? 38.003, 39.263, 39.172, 39.165, 18.03, 
> 37.905,
> ???????????????????????????????????? 18.003, 39.256, 37.912, 39.239, 26.362, 
> 39.172,
> ???????????????????????????????????? 39.172, 38.115),
> ?????????????? DateTime = c(201209012030, 201209012030, 201209012030, 
> 201209012030, 201209012030,
> ??? ??????????????????? 201209012030, 201209012030, 201209012030, 
> 201209012030, 201209012030,
> ??????????????????????????? 201209012030, 201209012030, 201209012030, 
> 201209012030, 201209012045,
> ??????????????????????????? 201209012045, 201209012045, 201209012045, 
> 201209012045, 201209012045,
> ??????????????????????????? 201209012045, 201209012045, 201209012045, 
> 201209012045, 201209012045,
> ??????????????????????????? 201209012045, 201209012045, 201209012045, 
> 201209012100, 201209012100,
> ??????????????????????????? 201209012100, 201209012100, 201209012100, 
> 201209012100, 201209012100,
> ??????????????????????????? 201209012100, 201209012100, 201209012100, 
> 201209012100, 201209012100,
> ??????????????????????????? 201209012100, 201209012100, 201209012115, 
> 201209012115, 201209012115,
> ??????????????????????????? 201209012115, 201209012115, 201209012115, 
> 201209012115, 201209012115,
> ??????????????????????????? 201209012115, 201209012115, 201209012115, 
> 201209012115, 201209012115,
> ??????????????????????????? 201209012115, 201209012130, 201209012130, 
> 201209012130, 201209012130,
> ??????????????????????????? 201209012130, 201209012130, 201209012130, 
> 201209012130, 201209012130,
> ??????????????????????????? 201209012130, 201209012130, 201209012130, 
> 201209012130, 201209012130,
> ??????????????????????????? 201209012145, 201209012145, 201209012145, 
> 201209012145, 201209012145,
> ??????????????????????????? 201209012145, 201209012145, 201209012145, 
> 201209012145, 201209012145,
> ??????????????????????????? 201209012145, 201209012145, 201209012145, 
> 201209012145, 201209012200,
> ??????????????????????????? 201209012200, 201209012200, 201209012200, 
> 201209012200, 201209012200,
> ??????????????????????????? 201209012200, 201209012200, 201209012200, 
> 201209012200, 201209012200,
> ??????????????????????????? 201209012200, 201209012200, 201209012200),
> ?????????????? Pmin = c(-59, -52, -55, -49, -50, -51, -45, -46, -48, 
> -54, -59, -56, -45, -44, -44,
> ??????????????????????? -45, -59, -52, -55, -50, -49, -51, -45, -46, 
> -59, -54, -48, -56, -47, -54,
> ??????????????????????? -48, -56, -58, -44, -44, -59, -52, -56, -49, 
> -50, -51, -45, -44, -44, -60,
> ??????????????????????? -52, -56, -50, -51, -50, -45, -48, -56, -54, 
> -47, -57, -46, -57, -48, -56,
> ??????????????????????? -54, -44, -44, -60, -52, -56, -50, -51, -50, 
> -45, -44, -44, -47, -54, -48,
> ??????????????????????? -58, -57, -60, -52, -55, -49, -50, -51, -45, 
> -44, -45, -60, -45, -58, -48,
> ??????????????????????? -57, -54, -52, -55, -50, -51,? -50, -45),
> ?????????????? Pmax = c(-58, -52, -54, -46, -49, -51, -45, -44, -47, 
> -53, -57, -55, -44, -43, -43,
> ??????????????????????? -44, -58, -52, -54, -49, -46, -51, -45, -44, 
> -57, -53, -47, -55, -46, -53,
> ??????????????????????? -47, -55, -57, -43, -43, -58, -52, -54, -46, 
> -49, -51, -45, -44, -43, -58,
> ??????????????????????? -52, -54, -47, -51, -49, -44, -47, -55, -53, 
> -43, -57, -43, -57, -47, -55,
> ??????????????????????? -53, -44, -43, -58, -52, -54, -47, -51, -49, 
> -45, -44, -44, -44, -53, -47,
> ??????????????????????? -57, -55, -59, -52, -54, -46, -49, -51, -45, 
> -44, -44, -59, -44, -57, -47,
> ??????????????????????? -56, -53, -52, -54, -47, -51, -49, -44),
> ?????????????? PathLength = c(2.97052, 1.50853, 5.97957, 8.19688, 
> 2.26532, 1.50853, 1.504, 4.78188,
> ????????????????????????????? 4.78188, 2.12735, 13.50599, 7.56082, 4.37035, 
> 4.37035, 4.37035,
> ????????????????????????????? 4.37035, 2.97052, 1.50853, 5.97957, 2.26532, 
> 8.19688, 1.50853,
> ????????????????????????????? 1.504, 4.78188, 13.50599, 2.12735, 4.78188, 
> 7.56082, 4.78188, 2.12735,
> ????????????????????????????? 4.78188, 7.56082, 13.50599, 4.37035, 4.37035, 
> 2.97052, 1.50853,
> ????????????????????????????? 5.97957, 8.19688, 2.26532, 1.50853, 1.504, 
> 4.37035, 4.37035, 2.97052,
> ????????????????????????????? 1.50853, 5.97957, 8.19688, 1.50853, 2.26532, 
> 1.504, 4.78188, 7.56082,
> ????????????????????????????? 2.12735, 4.78188, 13.50599, 4.78188, 13.50599, 
> 4.78188, 7.56082,
> ????????????????????????????? 2.12735, 4.37035, 4.37035, 2.97052, 1.50853, 
> 5.97957, 8.19688,
> ????????????????????????????? 1.50853, 2.26532, 1.504, 4.37035, 4.37035, 
> 4.78188, 2.12735, 4.78188,
> ????????????????????????????? 13.50599, 7.56082, 2.97052,1.50853, 5.97957, 
> 8.19688, 2.26532,
> ????????????????????????????? 1.50853, 1.504, 4.37035, 4.37035, 2.97052, 
> 4.78188, 13.50599, 4.78188,
> ????????????????????????????? 7.56082, 2.12735, 1.50853, 5.97957, 8.19688, 
> 1.50853, 2.26532, 1.504),
> ?????????????? XStart = c(6.98795,6.91965, 7.12605, 7.12605, 6.90439, 
> 6.92231, 7.05273, 6.94839,
> ????????????????????????? 7.01525, 6.95347, 6.94267, 7.12769, 6.92516, 
> 6.98553, 6.98553, 6.92516,
> ????????????????????????? 6.98795, 6.91965, 7.12605, 6.90439, 7.12605, 
> 6.92231, 7.05273, 6.94839,
> ????????????????????????? 6.94267, 6.95347, 7.01525, 7.12769, 6.94839, 
> 6.95347, 7.01525, 7.12769,
> ????????????????????????? 6.94267, 6.92516, 6.98553, 6.98795, 6.91965, 
> 7.12605, 7.12605, 6.90439,
> ????????????????????????? 6.92231, 7.05273, 6.92516, 6.98553, 6.98795, 
> 6.91965, 7.12605, 7.12605,
> ????????????????????????? 6.92231, 6.90439,7.05273, 7.01525, 7.12769, 
> 6.95347, 6.94839, 6.94267,
> ????????????????????????? 6.94839, 6.94267, 7.01525, 7.12769, 6.95347, 
> 6.92516, 6.98553, 6.98795,
> ????????????????????????? 6.91965, 7.12605, 7.12605, 6.92231, 6.90439, 
> 7.05273, 6.92516, 6.98553,
> ????????????????????????? 6.94839, 6.95347, 7.01525, 6.94267, 7.12769, 
> 6.98795, 6.91965, 7.12605,
> ????????????????????????? 7.12605, 6.90439, 6.92231, 7.05273, 6.92516, 
> 6.98553, 6.98795, 6.94839,
> ????????????????????????? 6.94267, 7.01525, 7.12769, 6.95347, 6.91965, 
> 7.12605, 7.12605, 6.92231,
> ????????????????????????? 6.90439, 7.05273),
> ?????????????? YStart = c(53.09842, 53.31928, 53.14836, 53.14836, 
> 53.32724, 53.33274, 53.1538,
> ????????????????????????? 52.91493, 52.92956, 52.98836, 52.99448, 52.92908, 
> 53.17983, 53.16479,
> ????????????????????????? 53.16479, 53.17983, 53.09842, 53.31928, 53.14836, 
> 53.32724, 53.14836,
> ????????????????????????? 53.33274, 53.1538, 52.91493, 52.99448, 52.98836, 
> 52.92956, 52.92908,
> ????????????????????????? 52.91493, 52.98836, 52.92956, 52.92908, 52.99448, 
> 53.17983, 53.16479,
> ????????????????????????? 53.09842, 53.31928, 53.14836, 53.14836, 53.32724, 
> 53.33274, 53.1538,
> ????????????????????????? 53.17983, 53.16479, 53.09842, 53.31928, 53.14836, 
> 53.14836, 53.33274,
> ????????????????????????? 53.32724, 53.1538, 52.92956, 52.92908, 52.98836, 
> 52.91493, 52.99448,
> ????????????????????????? 52.91493, 52.99448, 52.92956, 52.92908, 52.98836, 
> 53.17983, 53.16479,
> ????????????????????????? 53.09842, 53.31928, 53.14836, 53.14836, 53.33274, 
> 53.32724, 53.1538,
> ????????????????????????? 53.17983, 53.16479, 52.91493, 52.98836, 52.92956, 
> 52.99448, 52.92908,
> ????????????????????????? 53.09842, 53.31928, 53.14836, 53.14836, 53.32724, 
> 53.33274, 53.1538,
> ????????????????????????? 53.17983, 53.16479, 53.09842, 52.91493, 52.99448, 
> 52.92956, 52.92908,
> ????????????????????????? 52.98836, 53.31928, 53.14836, 53.14836, 53.33274, 
> 53.32724, 53.1538),
> ?????????????? XEnd = c(6.948, 6.92231, 7.20104, 7.02248, 6.87102, 6.91965, 
> 7.05556, 7.01525,
> ??????????????????????? 6.94839, 6.97979, 7.07683, 7.01525, 6.98553, 6.92516, 
> 6.92516, 6.98553,
> ??????????????????????? 6.948, 6.92231, 7.20104, 6.87102, 7.02248, 6.91965, 
> 7.05556, 7.01525,
> ??????????????????????? 7.07683, 6.97979, 6.94839, 7.01525, 7.01525, 6.97979, 
> 6.94839, 7.01525,
> ??????????????????????? 7.07683, 6.98553, 6.92516, 6.948, 6.92231, 7.20104, 
> 7.02248, 6.87102,
> ??????????????????????? 6.91965, 7.05556, 6.98553, 6.92516, 6.948, 6.92231, 
> 7.20104, 7.02248,
> ??????????????????????? 6.91965, 6.87102, 7.05556, 6.94839, 7.01525, 6.97979, 
> 7.01525, 7.07683,
> ??????????????????????? 7.01525, 7.07683, 6.94839, 7.01525, 6.97979, 6.98553, 
> 6.92516, 6.948,
> ??????????????????????? 6.92231, 7.20104, 7.02248, 6.91965, 6.87102, 7.05556, 
> 6.98553, 6.92516,
> ??????????????????????? 7.01525, 6.97979, 6.94839, 7.07683, 7.01525, 6.948, 
> 6.92231, 7.20104,
> ??????????????????????? 7.02248, 6.87102, 6.91965, 7.05556, 6.98553, 6.92516, 
> 6.948, 7.01525,
> ??????????????????????? 7.07683, 6.94839, 7.01525, 6.97979, 6.92231, 7.20104, 
> 7.02248, 6.91965,
> ??????????????????????? 6.87102, 7.05556),
> ?????????????? YEnd = c(53.08685, 53.33274, 53.17761, 53.10906, 
> 53.32334, 53.31928, 53.14039,
> ??????????????????????? 52.92956, 52.91493, 52.97772, 53.08498, 52.92956, 
> 53.16479, 53.17983,
> ??????????????????????? 53.17983, 53.16479, 53.08685, 53.33274, 53.17761, 
> 53.32334, 53.10906,
> ??????????????????????? 53.31928, 53.14039, 52.92956, 53.08498, 52.97772, 
> 52.91493, 52.92956,
> ??????????????????????? 52.92956, 52.97772, 52.91493, 52.92956, 53.08498, 
> 53.16479, 53.17983,
> ??????????????????????? 53.08685, 53.33274, 53.17761, 53.10906, 53.32334, 
> 53.31928, 53.14039,
> ??????????????????????? 53.16479, 53.17983, 53.08685, 53.33274, 53.17761, 
> 53.10906, 53.31928,
> ??????????????????????? 53.32334, 53.14039, 52.91493, 52.92956, 52.97772, 
> 52.92956, 53.08498,
> ??????????????????????? 52.92956, 53.08498, 52.91493, 52.92956, 52.97772, 
> 53.16479, 53.17983,
> ??????????????????????? 53.08685, 53.33274, 53.17761, 53.10906, 53.31928, 
> 53.32334, 53.14039,
> ??????????????????????? 53.16479, 53.17983, 52.92956, 52.97772, 52.91493, 
> 53.08498, 52.92956,
> ??????????????????????? 53.08685, 53.33274, 53.17761, 53.10906, 53.32334, 
> 53.31928, 53.14039,
> ??????????????????????? 53.16479, 53.17983, 53.08685, 52.92956, 53.08498, 
> 52.91493, 52.92956,
> ??????????????????????? 52.97772, 53.33274, 53.17761, 53.10906, 53.31928, 
> 53.32334, 53.14039),
> ?????????????? ID = c(901, 926, 935, 939, 936, 937, 1030, 471, 543, 478, 475, 
> 546, 818, 820,
> ????????????????????? 820, 818, 901, 926, 935, 936, 939, 937, 1030, 471, 475, 
> 478, 543, 546,
> ????????????????????? 471, 478, 543, 546, 475, 818, 820, 901, 926, 935, 939, 
> 936, 937, 1030,
> ????????????????????? 818, 820, 901, 926, 935, 939, 937, 936, 1030, 543, 546, 
> 478, 471, 475,
> ????????????????????? 471, 475, 543, 546, 478, 818, 820, 901, 926, 935, 939, 
> 937, 936, 1030,
> ????????????????????? 818, 820, 471, 478, 543, 475, 546, 901, 926, 935, 939, 
> 936, 937, 1030,
> ????????????????????? 818, 820, 901, 471, 475, 543, 546, 478, 926, 935, 939, 
> 937, 936, 1030)),
> ????????? class = c("spec_tbl_df", "tbl_df", "tbl", "data.frame"),
> ????????? row.names = c(NA, -98L),
> ????????? spec = structure(list(cols = list(Frequency = structure(list(),
> class = c("collector_double", "collector")),
> ??????????????????????????????????????????? DateTime = structure(list(), 
> class = c("collector_double", "collector")),
> ??????????????????????????????????????????? Pmin = structure(list(), class = 
> c("collector_double", "collector")),
> ??????????????????????????????????????????? Pmax = structure(list(), class = 
> c("collector_double", "collector")),
> ??????????????????????????????????????????? PathLength = structure(list(), 
> class = c("collector_double", "collector")),
> ??????????????????????????????????????????? XStart = structure(list(), class 
> = c("collector_double", "collector")),
> ??????????????????????????????????????????? YStart = structure(list(), class 
> = c("collector_double", "collector")),
> ??????????????????????????????????????????? XEnd = structure(list(), class = 
> c("collector_double",? "collector")),
> ??????????????????????????????????????????? YEnd = structure(list(), class = 
> c("collector_double", "collector")),
> ??????????????????????????????????????????? ID = structure(list(), class = 
> c("collector_double",? "collector"))),
> ??????????????????????????????? default = structure(list(), class = 
> c("collector_guess", "collector")),
> ??????????????????????????????? skip = 1L), class = "col_spec"))
>
> # ---------------------------------------
> #  Find middle point
> #  Setup CRS strings
> # ---------------------------------------
> XMiddle <- (min(mw_df$XStart, mw_df$XEnd) + max(mw_df$XStart, mw_df$XEnd)) / 
> 2
> YMiddle <- (min(mw_df$YStart, mw_df$YEnd) + max(mw_df$YStart, mw_df$YEnd)) / 
> 2
>
> projstring_wgs84 = "+proj=longlat +ellps=WGS84"
> projstring_aeqd <- paste("+proj=aeqd +lat_0=", YMiddle,
> ??????????????????? " +lon_0=", XMiddle,
> ??????????????????? " +x_0=0 +y_0=0 +ellps=WGS84",sep="")
>
> # ---------------------------------------
> #  Loop thru all ID's and extract both start and end points
> #  Save in list, to get spatial points object of all MW towers
> # ---------------------------------------
> IDs = unique(mw_df$ID)
> towers_list = lapply(IDs, function(i) {
> ? # Create point sf object with two features, start and end of link
> ? link = mw_df[mw_df$ID == i,]
> ? # All time slots have the same coords. Get just the first:
> ? x1 = link$XStart[1]
> ? y1 = link$YStart[1]
> ? x2 = link$XEnd[1]
> ? y2 = link$YEnd[1]
> ? towers_df = data.frame("x" = c(x1, x2), "y" = c(y1, y2),
> ???????????????????????? "ID"=i, "End" = c("Start", "End"))
>
> ? # Create sf object of point features
> ? #towers_sf = st_as_sf(towers_df, coords = c("x", "y"),
> ? #???????????????????? crs = projstring_wgs84, agr = "constant")
> ? #return(towers_sf)
> ? # Option using sp
> ? xy = towers_df[,c("x", "y")]
> ? towers_sp = SpatialPointsDataFrame(coords = xy, data = towers_df,
> ??????????????????????????????? proj4string = CRS(projstring_wgs84))
> ? return(towers_sp)
> })
>
> # ---------------------------------------
> # Bind all point together and transform to AEQD
> # ---------------------------------------
> towers = do.call(rbind, towers_list)
> num_towers = length(towers$ID)
>
> # sf Option
> # ---------------------------------------
> # st_crs(towers) = projstring_wgs84
> # print(paste(num_towers, "Towers; CRS:", st_crs(towers)$proj4string))
> # towers_aeqd = st_transform(towers, projstring_aeqd)
> # print(paste("After transform CRS:", st_crs(towers_aeqd)$proj4string))
>
> # sp Option
> # ---------------------------------------
> print(paste(num_towers, "Towers; CRS:", proj4string(towers)))
> towers_aeqd = spTransform(towers, CRS(projstring_aeqd))
> print(paste("After transform CRS:", proj4string(towers_aeqd)))
>
> ##=====================================
>
>>  Hope this helps,
>>
>>  Roger
>> 
>
> Thanks for your comments,
>
> Micha
>
>
>
>>>  Should we just find the local UTM zone and use that?? UTM
>>>  is not equidistant, but it is ubiquitous, and if the cellular network
>>>  is not too broad, I assume that distances will be fairly accurate.
>>>
>>>  Best regards,
>>>  Micha
>>>
>>>  [1] https://github.com/overeem11/RAINLINK
>>> 
>>> 
>> 
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From Roger@B|v@nd @end|ng |rom nhh@no  Fri Jan 22 17:19:12 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 22 Jan 2021 17:19:12 +0100
Subject: [R-sig-Geo] How to define a local equidistant CRS
In-Reply-To: <1444978-f42f-fb9-b0f5-b7286a438ea5@reclus.nhh.no>
References: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
 <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>
 <fe6e5614-7438-951b-56b5-fe651efe7cc5@gmail.com>
 <1444978-f42f-fb9-b0f5-b7286a438ea5@reclus.nhh.no>
Message-ID: <1ce93ae-f41e-79c3-21c-510fcdbb2f@reclus.nhh.no>

On Fri, 22 Jan 2021, Roger Bivand wrote:

> On Fri, 22 Jan 2021, Micha Silver wrote:
>
>>  Hello Roger:
>> 
>>
>>  On 1/20/21 12:39 PM, Roger Bivand wrote:
>>>   On Wed, 20 Jan 2021, Micha Silver wrote:
>>>
>>>>   The RAINLINK package [1] derives rain rate from the attenuation of
>>>>   signal strength between microwave towers. Data typically comes from
>>>>   cellular network providers, and the location of the towers is
>>>>   typically given in longitude/latitude.
>>>>   Among the functions in RAINLINK, some require to get the attenuation
>>>>   for each microwave link (pair of towers), from those towers that are
>>>>   nearby, within, say 15 km. This means that the tower locations need to
>>>>   be transformed to an equidistant Cartesian CRS.
>>>>
>>>>   In the current version of RAINLINK, this was done as follows:
>>>>   An sp object was prepared from the tower locations, with CRS
>>>>   "EPSG:4326". The average latitude and longitude values were obtained
>>>>   as "YMiddle" and "XMiddle". Then a new, one-off azimuthal equidistant
>>>>   CRS was defined as:
>>>>   # Set projection string
>>>>   projstring <- paste("+proj=aeqd +a=6378.137 +b=6356.752 +R_A +lat_0=",
>>>>   ?? YMiddle, " +lon_0=",
>>>>   ?? XMiddle," +x_0=0 +y_0=0",sep="")
>>>>
>>>>   This worked until the recent advances in proj and gdal. Now with proj
>>>>>   =6.x and gdal >=3.x the above definition causes an error:
>>>>
>>>>   Error in .spTransform_Polygon(input[[i]], to_args = to_args, from_args
>>>>   = from_args,? :
>>>>   ?coordinate operation creation from WKT failed: generic error of
>>>>   unknown
>>>>   ?origin
>>>
>>>   This is not a reproducible example. Please provide a reproducible
>>>   example,
>>>   specifying all of the software versions, especially PROJ and GDAL. The
>>>   changes in PROJ are now entering the 4th year, so I'm a bit surprised
>>>   that
>>>   steps were not taken before to check for problems to your workflow as
>>>   Proj4 strings shift from deprecated to defunct. The package is not on
>>>   CRAN, so was not caught by our reverse dependency checks, so the
>>>   responsibility for making sure things work rests on the maintainer, not
>>>   us.
>> 
>>
>>  After some testing with a reprex script (included below) we found that
>
> This is broken because email breaks lines unless protected, so this very 
> large text example does not run at all. If so much data is needed, and the 
> example cannot be retricted to less than 6 points (2D only, no other columns 
> needed), post just a script downloading an RDS object (only data frame, no 
> tibbles please), convering to the sp object you have problems with, and 
> definitely include the spTransform() call (use rgdal directly, report 
> rgdal::rgdal_extSoftVersion()).
>
>>
>>  1- No errors or warnings when using the sf package with any recent proj
>>  version
>> 
>
> Irrelevant, rgdal warns because users need to see that the CRS representation 
> has changed. Remember that Proj4 strings should not be used at all, or if 
> used will typically be off by 125m (because there is no +datum= or +towgs84= 
> mechanism, they are deprecated). The fact that sf doesn't warn is because it 
> wasn't thought necessary to alert users to possible output changes. It 
> doesn't mean that output doesn't change.
>
>>  2- Switching to the sp package, we found no errors or warnings when the
>>  proj version was <=6.3
>>
>>  3- However, the script that uses the sp package, with proj 7.2 does show
>>  warnings:
>> 
>>
>>>   source("aeqd_reprex.R")
>
> Recreating the file by copying from the email to file gives:
>
>>  source("aeqd_reprex.R")
> Error in source("aeqd_reprex.R") : aeqd_reprex.R:14:2: unexpected input
> 13: 39.172, 39.172,
> 14:  ?
>
> I'm not going to waste time removing newlines inserted by an email client, 
> did you try to extract the fish from the fish soup?
>
> Roger
>
>>  [1] "28 Towers; CRS: +proj=longlat +ellps=WGS84 +no_defs"
>>  [1] "After transform CRS: +proj=aeqd +lat_0=53.123835 +lon_0=7.03603
>>  +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs"
>>  There were 17 warnings (use warnings() to see them)
>>>   warnings()[1]
>>  Warning message:
>>  In showSRID(uprojargs, format = "PROJ", multiline = "NO",? ... :
>>  ? Discarded datum Unknown based on WGS84 ellipsoid in CRS definition
>>>   sessionInfo()
>>  R version 4.0.3 (2020-10-10)
>>  Platform: x86_64-pc-linux-gnu (64-bit)
>>  Running under: Debian GNU/Linux bullseye/sid
>>
>>  Matrix products: default
>>  BLAS:?? /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
>>  LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.13.so
>>
>>  locale:
>>  ?[1] LC_CTYPE=en_US.UTF-8?????? LC_NUMERIC=C
>>  ?[3] LC_TIME=en_US.UTF-8??????? LC_COLLATE=en_US.UTF-8
>>  ?[5] LC_MONETARY=en_US.UTF-8??? LC_MESSAGES=en_US.UTF-8
>>  ?[7] LC_PAPER=en_US.UTF-8?????? LC_NAME=C
>>  ?[9] LC_ADDRESS=C?????????????? LC_TELEPHONE=C
>>  [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>
>>  attached base packages:
>>  [1] stats???? graphics? grDevices utils???? datasets? methods base
>>
>>  other attached packages:
>>  [1] sp_1.4-4
>>
>>  loaded via a namespace (and not attached):
>>  [1] compiler_4.0.3? rgdal_1.5-18??? grid_4.0.3 lattice_0.20-41
>> 
>>
>>>   sf::sf_extSoftVersion()[1:3]
>>  ?? GEOS??? GDAL? proj.4
>>  "3.9.0" "3.2.1" "7.2.0"
>> 
>>>
>>>   Please also convert the example to points, (you reach
>>>   .spTransform_Polygon() here, so these are not points), and try proj from
>>>   the command line. I think that your +a and +b also have units problems
>>>   (km
>>>   not m). The +R_A argument is not given as in current:
>>>
>>>   https://proj.org/operations/projections/aeqd.html
>>>
>>>> 
>>>
>>>   With a reproducible example that works with proj command line tools, one
>>>   could ask for views on the PROJ list itself.
>>> 
>> 
>>
>>  Here is our test script:
>>
>>  ##=====================================
>>

If this is a minimal reprex (making "towers" from the first row, and 
putting +lat_0= and +lon_0= at reasonable values):

library(sp)
df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
coordinates(df) <- c("x", "y")
slot(df, "proj4string") <- CRS("EPSG:4326")
df
projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.97",
  "+x_0=0 +y_0=0 +ellps=WGS84")
spTransform(df, CRS(projstring_aeqd))

then I don't see any problem:

> library(sp)
> df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
> coordinates(df) <- c("x", "y")
> slot(df, "proj4string") <- CRS("EPSG:4326")
> df
SpatialPoints:
            x        y
[1,] 6.98795 53.09842
[2,] 6.94800 53.08685
Coordinate Reference System (CRS) arguments: +proj=longlat +datum=WGS84
+no_defs
> projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.97",
  "+x_0=0 +y_0=0 +ellps=WGS84")
> spTransform(df, CRS(projstring_aeqd))
SpatialPoints:
              x         y
[1,]  1202.371  937.1959
[2,] -1474.053 -350.3307
Coordinate Reference System (CRS) arguments: +proj=aeqd +lat_0=53.09
+lon_0=6.97 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs
Warning message:
In showSRID(uprojargs, format = "PROJ", multiline = "NO", prefer_proj = 
prefer_proj) :
   Discarded datum Unknown based on WGS84 ellipsoid in Proj4 definition

The warning just says that you need to know about and decide how to handle 
changes in CRS representations. Maybe you do not realise that sp::CRS() 
and sp::spTransform() both call rgdal if available, so you can use:

options("rgdal_show_exportToProj4_warnings"="none")

before loading sp to mute warnings:

> options("rgdal_show_exportToProj4_warnings"="none")
> library(sp)
> df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
> coordinates(df) <- c("x", "y")
> slot(df, "proj4string") <- CRS("EPSG:4326")
> df
SpatialPoints:
            x        y
[1,] 6.98795 53.09842
[2,] 6.94800 53.08685
Coordinate Reference System (CRS) arguments: +proj=longlat +datum=WGS84
+no_defs
> projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.97",
  "+x_0=0 +y_0=0 +ellps=WGS84"")
> spTransform(df, CRS(projstring_aeqd))
SpatialPoints:
              x         y
[1,]  1202.371  937.1959
[2,] -1474.053 -350.3307
Coordinate Reference System (CRS) arguments: +proj=aeqd +lat_0=53.09
+lon_0=6.97 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs

at least until sp 1.5 and rgdal 1.6, when the default will change to 
suppress these warnings.

Alternatively, use the equivalent:

library(sp)
df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
coordinates(df) <- c("x", "y")
slot(df, "proj4string") <- CRS("EPSG:4326")
df
projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.972",
  "+x_0=0 +y_0=0 +datum=WGS84")
spTransform(df, CRS(projstring_aeqd))


If this isn't a reprex, please extend briefly.

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From Roger@B|v@nd @end|ng |rom nhh@no  Fri Jan 22 17:42:57 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 22 Jan 2021 17:42:57 +0100
Subject: [R-sig-Geo] How to define a local equidistant CRS
In-Reply-To: <1ce93ae-f41e-79c3-21c-510fcdbb2f@reclus.nhh.no>
References: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
 <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>
 <fe6e5614-7438-951b-56b5-fe651efe7cc5@gmail.com>
 <1444978-f42f-fb9-b0f5-b7286a438ea5@reclus.nhh.no>
 <1ce93ae-f41e-79c3-21c-510fcdbb2f@reclus.nhh.no>
Message-ID: <70aa1d6b-5bae-c175-ab8e-4beb8c0bda2@reclus.nhh.no>

On Fri, 22 Jan 2021, Roger Bivand wrote:

> On Fri, 22 Jan 2021, Roger Bivand wrote:
>
>>  On Fri, 22 Jan 2021, Micha Silver wrote:
>>
>>>   Hello Roger:
>>> 
>>>
>>>   On 1/20/21 12:39 PM, Roger Bivand wrote:
>>>>    On Wed, 20 Jan 2021, Micha Silver wrote:
>>>>
>>>>>    The RAINLINK package [1] derives rain rate from the attenuation of
>>>>>    signal strength between microwave towers. Data typically comes from
>>>>>    cellular network providers, and the location of the towers is
>>>>>    typically given in longitude/latitude.
>>>>>    Among the functions in RAINLINK, some require to get the attenuation
>>>>>    for each microwave link (pair of towers), from those towers that are
>>>>>    nearby, within, say 15 km. This means that the tower locations need
>>>>>    to
>>>>>    be transformed to an equidistant Cartesian CRS.
>>>>>
>>>>>    In the current version of RAINLINK, this was done as follows:
>>>>>    An sp object was prepared from the tower locations, with CRS
>>>>>    "EPSG:4326". The average latitude and longitude values were obtained
>>>>>    as "YMiddle" and "XMiddle". Then a new, one-off azimuthal equidistant
>>>>>    CRS was defined as:
>>>>>    # Set projection string
>>>>>    projstring <- paste("+proj=aeqd +a=6378.137 +b=6356.752 +R_A
>>>>>    +lat_0=",
>>>>>    ?? YMiddle, " +lon_0=",
>>>>>    ?? XMiddle," +x_0=0 +y_0=0",sep="")
>>>>>
>>>>>    This worked until the recent advances in proj and gdal. Now with proj
>>>>>>    =6.x and gdal >=3.x the above definition causes an error:
>>>>>
>>>>>    Error in .spTransform_Polygon(input[[i]], to_args = to_args,
>>>>>    from_args
>>>>>    = from_args,? :
>>>>>    ?coordinate operation creation from WKT failed: generic error of
>>>>>    unknown
>>>>>    ?origin
>>>> 
>>>
>>>   ##=====================================
>>> 
>
> If this is a minimal reprex (making "towers" from the first row, and putting 
> +lat_0= and +lon_0= at reasonable values):

Could a longer-term solution be to  use the s2 package to do all of your 
operations on the sphere? Then you avoid having to find a local 
projection.

Roger



>
> library(sp)
> df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
> coordinates(df) <- c("x", "y")
> slot(df, "proj4string") <- CRS("EPSG:4326")
> df
> projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.97",
> "+x_0=0 +y_0=0 +ellps=WGS84")
> spTransform(df, CRS(projstring_aeqd))
>
> then I don't see any problem:
>
>>  library(sp)
>>  df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
>>  coordinates(df) <- c("x", "y")
>>  slot(df, "proj4string") <- CRS("EPSG:4326")
>>  df
> SpatialPoints:
>           x        y
> [1,] 6.98795 53.09842
> [2,] 6.94800 53.08685
> Coordinate Reference System (CRS) arguments: +proj=longlat +datum=WGS84
> +no_defs
>>  projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.97",
>  "+x_0=0 +y_0=0 +ellps=WGS84")
>>  spTransform(df, CRS(projstring_aeqd))
> SpatialPoints:
>             x         y
> [1,]  1202.371  937.1959
> [2,] -1474.053 -350.3307
> Coordinate Reference System (CRS) arguments: +proj=aeqd +lat_0=53.09
> +lon_0=6.97 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs
> Warning message:
> In showSRID(uprojargs, format = "PROJ", multiline = "NO", prefer_proj = 
> prefer_proj) :
>   Discarded datum Unknown based on WGS84 ellipsoid in Proj4 definition
>
> The warning just says that you need to know about and decide how to handle 
> changes in CRS representations. Maybe you do not realise that sp::CRS() and 
> sp::spTransform() both call rgdal if available, so you can use:
>
> options("rgdal_show_exportToProj4_warnings"="none")
>
> before loading sp to mute warnings:
>
>>  options("rgdal_show_exportToProj4_warnings"="none")
>>  library(sp)
>>  df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
>>  coordinates(df) <- c("x", "y")
>>  slot(df, "proj4string") <- CRS("EPSG:4326")
>>  df
> SpatialPoints:
>           x        y
> [1,] 6.98795 53.09842
> [2,] 6.94800 53.08685
> Coordinate Reference System (CRS) arguments: +proj=longlat +datum=WGS84
> +no_defs
>>  projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.97",
>  "+x_0=0 +y_0=0 +ellps=WGS84"")
>>  spTransform(df, CRS(projstring_aeqd))
> SpatialPoints:
>             x         y
> [1,]  1202.371  937.1959
> [2,] -1474.053 -350.3307
> Coordinate Reference System (CRS) arguments: +proj=aeqd +lat_0=53.09
> +lon_0=6.97 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs
>
> at least until sp 1.5 and rgdal 1.6, when the default will change to suppress 
> these warnings.
>
> Alternatively, use the equivalent:
>
> library(sp)
> df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
> coordinates(df) <- c("x", "y")
> slot(df, "proj4string") <- CRS("EPSG:4326")
> df
> projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.972",
> "+x_0=0 +y_0=0 +datum=WGS84")
> spTransform(df, CRS(projstring_aeqd))
>
>
> If this isn't a reprex, please extend briefly.
>
> Roger
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From t@v|b@r @end|ng |rom gm@||@com  Sat Jan 23 09:11:38 2021
From: t@v|b@r @end|ng |rom gm@||@com (Micha Silver)
Date: Sat, 23 Jan 2021 10:11:38 +0200
Subject: [R-sig-Geo] How to define a local equidistant CRS
In-Reply-To: <1ce93ae-f41e-79c3-21c-510fcdbb2f@reclus.nhh.no>
References: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
 <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>
 <fe6e5614-7438-951b-56b5-fe651efe7cc5@gmail.com>
 <1444978-f42f-fb9-b0f5-b7286a438ea5@reclus.nhh.no>
 <1ce93ae-f41e-79c3-21c-510fcdbb2f@reclus.nhh.no>
Message-ID: <8a5e718f-74a8-5b6b-8941-6cb9c34caee6@gmail.com>

An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20210123/d31df2c7/attachment.html>

From t@v|b@r @end|ng |rom gm@||@com  Sat Jan 23 09:31:45 2021
From: t@v|b@r @end|ng |rom gm@||@com (Micha Silver)
Date: Sat, 23 Jan 2021 10:31:45 +0200
Subject: [R-sig-Geo] How to define a local equidistant CRS
In-Reply-To: <70aa1d6b-5bae-c175-ab8e-4beb8c0bda2@reclus.nhh.no>
References: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
 <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>
 <fe6e5614-7438-951b-56b5-fe651efe7cc5@gmail.com>
 <1444978-f42f-fb9-b0f5-b7286a438ea5@reclus.nhh.no>
 <1ce93ae-f41e-79c3-21c-510fcdbb2f@reclus.nhh.no>
 <70aa1d6b-5bae-c175-ab8e-4beb8c0bda2@reclus.nhh.no>
Message-ID: <30b453f6-86ce-dd78-4e49-58ed718e3232@gmail.com>

An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20210123/0c2c5785/attachment.html>

From Roger@B|v@nd @end|ng |rom nhh@no  Sat Jan 23 12:05:02 2021
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Sat, 23 Jan 2021 12:05:02 +0100
Subject: [R-sig-Geo] How to define a local equidistant CRS
In-Reply-To: <8a5e718f-74a8-5b6b-8941-6cb9c34caee6@gmail.com>
References: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
 <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>
 <fe6e5614-7438-951b-56b5-fe651efe7cc5@gmail.com>
 <1444978-f42f-fb9-b0f5-b7286a438ea5@reclus.nhh.no>
 <1ce93ae-f41e-79c3-21c-510fcdbb2f@reclus.nhh.no>
 <8a5e718f-74a8-5b6b-8941-6cb9c34caee6@gmail.com>
Message-ID: <6ce77ce3-e494-d833-af3a-a97467130c4@reclus.nhh.no>

On Sat, 23 Jan 2021, Micha Silver wrote:

> 
> Roger:
> 
> 
> Thanks for your double effort to help.
> 
> Sorry about the line breaks.
> 
> (please see inline)
> 
> 
> On 1/22/21 6:19 PM, Roger Bivand wrote:
>       On Fri, 22 Jan 2021, Roger Bivand wrote:
>
>             On Fri, 22 Jan 2021, Micha Silver wrote:
>
>                   ?Hello Roger:
> 
>
>                   ?On 1/20/21 12:39 PM, Roger Bivand
>                   wrote:
>                         ? On Wed, 20 Jan 2021, Micha
>                         Silver wrote:
>
>                               ? The RAINLINK
>                               package [1]
>                               derives rain
>                               rate from the
>                               attenuation of
>                               ? signal
>                               strength between
>                               microwave
>                               towers. Data
>                               typically comes
>                               from
>                               ? cellular
>                               network
>                               providers, and
>                               the location of
>                               the towers is
>                               ? typically
>                               given in
>                               longitude/latitude.?
>
>                         ? This is not a reproducible
>                         example. Please provide a
>                         reproducible
>                         ? example,
>                         ? specifying all of the
>                         software versions,
>                         especially PROJ and GDAL.
>                         The
>                         ? changes in PROJ are now
>                         entering the 4th year, so
>                         I'm a bit surprised
>                         ? that
>                         ? steps were not taken
>                         before to check for problems
>                         to your workflow as
>                         ? Proj4 strings shift from
>                         deprecated to defunct.
> 
> 
> 
> 
> This brings us back to the original question:
> 
> 
> What would be the recommended, reliable way to create an equidistant CRS on
> the fly, for any location determined by a cluster of points in Long/Lat??
> and avoiding using proj.4 strings??
> 
> Should we:
> 
> ??? - construct a WKT description to create the CRS?
> 
> ??? - just revert to using UTM (not equidistant, but available everywhere,
> and easy to determine the zone, EPSG code for any location)
> 
> ??? - Something else?
> 
> 
>
>                   ?
>
>       If this is a minimal reprex (making "towers" from the first row,
>       and putting +lat_0= and +lon_0= at reasonable values):
>
>       library(sp)
>       df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
>       coordinates(df) <- c("x", "y")
>       slot(df, "proj4string") <- CRS("EPSG:4326")
>       df
>       projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.97",
>       ?"+x_0=0 +y_0=0 +ellps=WGS84")
>       spTransform(df, CRS(projstring_aeqd))
>
>       then I don't see any problem:
>
>       SpatialPoints:
>       ???????????? x???????? y
>       [1,]? 1202.371? 937.1959
>       [2,] -1474.053 -350.3307
>       Coordinate Reference System (CRS) arguments: +proj=aeqd
>       +lat_0=53.09
>       +lon_0=6.97 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs
>       Warning message:
>       In showSRID(uprojargs, format = "PROJ", multiline = "NO",
>       prefer_proj = prefer_proj) :
>       ? Discarded datum Unknown based on WGS84 ellipsoid in Proj4
>       definition
>
>       The warning just says that you need to know about and decide how
>       to handle changes in CRS representations. Maybe you do not
>       realise that sp::CRS() and sp::spTransform() both call rgdal if
>       available, so you can use:
>
>       options("rgdal_show_exportToProj4_warnings"="none")
>
>       before loading sp to mute warnings:
> 
> 
> 
> OK, clear
> 
>
>       Alternatively, use the equivalent:
>
>       library(sp)
>       df <- data.frame(x=c(6.98795, 6.948), y=c(53.09842, 53.08685))
>       coordinates(df) <- c("x", "y")
>       slot(df, "proj4string") <- CRS("EPSG:4326")
>       df
>       projstring_aeqd <- paste("+proj=aeqd +lat_0=53.09 +lon_0=6.972",
>       ?"+x_0=0 +y_0=0 +datum=WGS84")
>       spTransform(df, CRS(projstring_aeqd))
> 
> 
> So specifying the "+datum=" in the proj.4 string also avoids the warning.
>

Yes, but the exceptions for WGS84, NAD83 and NAD27 are just that, 
exceptions from the general rule of +datum= being dropped. The next road 
bump will occcur soon(ish) because WGS84 is an ensemble of datum 
specifications, not a unique specification, and PROJ 7.2.0 is starting to 
address this: https://proj.org/news.html (Update to EPSG 10.003 and make 
code base robust to dealing with WKT CRS with DatumEnsemble (#2370)). The 
link to https://github.com/OSGeo/PROJ/pull/2370 gives details.

Unless you need sub-metre accuracy, this may not matter, but if different 
parts of the world use different WGS84 definitions (at different times), 
the s2 package may be more stable though a little less accurate.

This is more detail than you expected, I think, but at least it is a way 
of documenting things.

Roger

> 
>
>       If this isn't a reprex, please extend briefly.
>
>       Roger
> 
> 
> Thanks again,
> 
> Regards, Micha
> 
> 
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From t@v|b@r @end|ng |rom gm@||@com  Sat Jan 23 16:56:10 2021
From: t@v|b@r @end|ng |rom gm@||@com (Micha Silver)
Date: Sat, 23 Jan 2021 17:56:10 +0200
Subject: [R-sig-Geo] How to define a local equidistant CRS
In-Reply-To: <6ce77ce3-e494-d833-af3a-a97467130c4@reclus.nhh.no>
References: <CAObswFCXUexWJotJ8+HwAHG7=mjpvrxUaWSpePoNtWrDeY0Huw@mail.gmail.com>
 <9c61fb11-48bb-6548-bd46-65c235889cf0@reclus.nhh.no>
 <fe6e5614-7438-951b-56b5-fe651efe7cc5@gmail.com>
 <1444978-f42f-fb9-b0f5-b7286a438ea5@reclus.nhh.no>
 <1ce93ae-f41e-79c3-21c-510fcdbb2f@reclus.nhh.no>
 <8a5e718f-74a8-5b6b-8941-6cb9c34caee6@gmail.com>
 <6ce77ce3-e494-d833-af3a-a97467130c4@reclus.nhh.no>
Message-ID: <7e729e63-cfbd-ea04-689e-64a07b9b6d15@gmail.com>

An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20210123/305924c7/attachment.html>

