From eng||@hchr|@topher@ @end|ng |rom gm@||@com  Tue Apr  7 23:31:57 2020
From: eng||@hchr|@topher@ @end|ng |rom gm@||@com (chris english)
Date: Tue, 7 Apr 2020 17:31:57 -0400
Subject: [R-sig-Geo] Introducing new local spatial statistic, ELSA,
 and Entrogram (a variogram-like graph)
In-Reply-To: <CAGL-CGASk--Cx7yBMArR6-2gs7-_djwFZbvq+DRNt5wCQtMXDw@mail.gmail.com>
References: <CAGL-CGASk--Cx7yBMArR6-2gs7-_djwFZbvq+DRNt5wCQtMXDw@mail.gmail.com>
Message-ID: <CAASFQpTis0udOf=UkwYuywVFAvVK96oc-QgPM4NofQyudxOrbg@mail.gmail.com>

Babak,

Look forward to exploring elsa, any plans to open source the journal
article?

Chris English

On Sun, Mar 29, 2020 at 1:08 AM Babak Naimi <naimi.b at gmail.com> wrote:

> Dear All,
>
> Hope you are safe and well!
>
> I am writing to inform you that the new R package, elsa, is released on
> CRAN. This package is a framework that provides the methods for quantifying
> the new local spatial statictic, named "entropy-based local indicator of
> spatial association" (ELSA), that can be used for both continuous and
> categorical data. In addition, global spatial structure can be measured
> using a new variogram-like diagram, called entrogram.
>
> The package vignette provides a quick demonstration of some main functions
> in the package:
>
> https://cran.r-project.org/web/packages/elsa/vignettes/elsa.html
>
> The paper that introduces ELSA is published in the journal of spatial
> statistics and is available here:
>
> https://www.sciencedirect.com/science/article/abs/pii/S2211675318300228
>
> The package, elsa, is also followed with functions to calculate other LISAs
> and global statistics for different types of spatial datasets (i.e.,
> Raster, SpatialPointsDataFrame, SpatialPolygonsDataFrame).
>
> Best regards,
>
> Babak Naimi
>
>
>
>
>
>
> *University Researcher, Department of Geosciences and Geography,The
> University of Helsinki,Gustaf H?llstr?min Katu 2, 00014
> HelsinkiFinlandHomepage I: http://r-gis.net <http://r-gis.net/>  Homepage
> II: http://biogeoinformatics.org <http://biogeoinformatics.org/>  *
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From n@|m|@b @end|ng |rom gm@||@com  Wed Apr  8 00:49:37 2020
From: n@|m|@b @end|ng |rom gm@||@com (Babak Naimi)
Date: Wed, 8 Apr 2020 01:49:37 +0300
Subject: [R-sig-Geo] Introducing new local spatial statistic, ELSA,
 and Entrogram (a variogram-like graph)
In-Reply-To: <CAASFQpTis0udOf=UkwYuywVFAvVK96oc-QgPM4NofQyudxOrbg@mail.gmail.com>
References: <CAGL-CGASk--Cx7yBMArR6-2gs7-_djwFZbvq+DRNt5wCQtMXDw@mail.gmail.com>
 <CAASFQpTis0udOf=UkwYuywVFAvVK96oc-QgPM4NofQyudxOrbg@mail.gmail.com>
Message-ID: <CAGL-CGDZ0wp20b33eQXzSXwZxqoSWEZkLCJ-VE2MjG32uQe4FA@mail.gmail.com>

Hi Chris,

Thanks for your email. Unfortunately, the article is not open but you can
find the PDF from the following link:

https://www.dropbox.com/s/mpjra60b5yyzwjg/Naimi_2019_ELSA.pdf?dl=0

Best regards,
Babak

On Wed, Apr 8, 2020 at 12:32 AM chris english <englishchristophera at gmail.com>
wrote:

> Babak,
>
> Look forward to exploring elsa, any plans to open source the journal
> article?
>
> Chris English
>
> On Sun, Mar 29, 2020 at 1:08 AM Babak Naimi <naimi.b at gmail.com> wrote:
>
>> Dear All,
>>
>> Hope you are safe and well!
>>
>> I am writing to inform you that the new R package, elsa, is released on
>> CRAN. This package is a framework that provides the methods for
>> quantifying
>> the new local spatial statictic, named "entropy-based local indicator of
>> spatial association" (ELSA), that can be used for both continuous and
>> categorical data. In addition, global spatial structure can be measured
>> using a new variogram-like diagram, called entrogram.
>>
>> The package vignette provides a quick demonstration of some main functions
>> in the package:
>>
>> https://cran.r-project.org/web/packages/elsa/vignettes/elsa.html
>>
>> The paper that introduces ELSA is published in the journal of spatial
>> statistics and is available here:
>>
>> https://www.sciencedirect.com/science/article/abs/pii/S2211675318300228
>>
>> The package, elsa, is also followed with functions to calculate other
>> LISAs
>> and global statistics for different types of spatial datasets (i.e.,
>> Raster, SpatialPointsDataFrame, SpatialPolygonsDataFrame).
>>
>> Best regards,
>>
>> Babak Naimi
>>
>>
>>
>>
>>
>>
>> *University Researcher, Department of Geosciences and Geography,The
>> University of Helsinki,Gustaf H?llstr?min Katu 2, 00014
>> HelsinkiFinlandHomepage I: http://r-gis.net <http://r-gis.net/>  Homepage
>> II: http://biogeoinformatics.org <http://biogeoinformatics.org/>  *
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>

	[[alternative HTML version deleted]]


From r@turner @end|ng |rom @uck|@nd@@c@nz  Wed Apr  8 01:00:06 2020
From: r@turner @end|ng |rom @uck|@nd@@c@nz (Rolf Turner)
Date: Wed, 8 Apr 2020 11:00:06 +1200
Subject: [R-sig-Geo] 
 [FORGED] Re:  Introducing new local spatial statistic,
 ELSA, and Entrogram (a variogram-like graph)
In-Reply-To: <CAGL-CGDZ0wp20b33eQXzSXwZxqoSWEZkLCJ-VE2MjG32uQe4FA@mail.gmail.com>
References: <CAGL-CGASk--Cx7yBMArR6-2gs7-_djwFZbvq+DRNt5wCQtMXDw@mail.gmail.com>
 <CAASFQpTis0udOf=UkwYuywVFAvVK96oc-QgPM4NofQyudxOrbg@mail.gmail.com>
 <CAGL-CGDZ0wp20b33eQXzSXwZxqoSWEZkLCJ-VE2MjG32uQe4FA@mail.gmail.com>
Message-ID: <32636bc0-fe98-7385-b7f4-0820fdb5cb1d@auckland.ac.nz>


On 8/04/20 10:49 am, Babak Naimi wrote:

> Hi Chris,
> 
> Thanks for your email. Unfortunately, the article is not open but you can
> find the PDF from the following link:
> 
> https://www.dropbox.com/s/mpjra60b5yyzwjg/Naimi_2019_ELSA.pdf?dl=0

If the paper is not open source, are you not violating copyright by 
making it available in this way?

Could get you into trouble.

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276


From eng||@hchr|@topher@ @end|ng |rom gm@||@com  Wed Apr  8 03:43:10 2020
From: eng||@hchr|@topher@ @end|ng |rom gm@||@com (chris english)
Date: Tue, 7 Apr 2020 21:43:10 -0400
Subject: [R-sig-Geo] 
 [FORGED] Re:  Introducing new local spatial statistic,
 ELSA, and Entrogram (a variogram-like graph)
In-Reply-To: <32636bc0-fe98-7385-b7f4-0820fdb5cb1d@auckland.ac.nz>
References: <CAGL-CGASk--Cx7yBMArR6-2gs7-_djwFZbvq+DRNt5wCQtMXDw@mail.gmail.com>
 <CAASFQpTis0udOf=UkwYuywVFAvVK96oc-QgPM4NofQyudxOrbg@mail.gmail.com>
 <CAGL-CGDZ0wp20b33eQXzSXwZxqoSWEZkLCJ-VE2MjG32uQe4FA@mail.gmail.com>
 <32636bc0-fe98-7385-b7f4-0820fdb5cb1d@auckland.ac.nz>
Message-ID: <CAASFQpQ_BFeXAikHV1UFs57T52J9-WoiRDa2OWjcE2g1U-hGLQ@mail.gmail.com>

Thank you one and all. Since we fled N Cyprus after the coup we've
been without university library privileges, so more limited to research
areas of neuropsychology and metric development. But I still aim to
predict that flood over Nicosia, 1349 AD.

The vignette is quite useful, and I especially like the capability to assign
dis/similarity zonally and believe this will have many applications that,
while in
theory may be either aesthetic or arbitrary, my sense is the current
subsuming
hierarchies is implausible. But then I'm a painter.

Open source of the article was a conflation of two somewhat overlapping
propositions, but of course an author may share his work. Just happy
to read about and think on the underlying. Thanks again!

Cheers,
Chris

On Tue, Apr 7, 2020 at 7:00 PM Rolf Turner <r.turner at auckland.ac.nz> wrote:

>
> On 8/04/20 10:49 am, Babak Naimi wrote:
>
> > Hi Chris,
> >
> > Thanks for your email. Unfortunately, the article is not open but you can
> > find the PDF from the following link:
> >
> > https://www.dropbox.com/s/mpjra60b5yyzwjg/Naimi_2019_ELSA.pdf?dl=0
>
> If the paper is not open source, are you not violating copyright by
> making it available in this way?
>
> Could get you into trouble.
>
> cheers,
>
> Rolf Turner
>
> --
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Phone: +64-9-373-7599 ext. 88276
>

	[[alternative HTML version deleted]]


From n@|m|@b @end|ng |rom gm@||@com  Wed Apr  8 15:03:17 2020
From: n@|m|@b @end|ng |rom gm@||@com (Babak Naimi)
Date: Wed, 8 Apr 2020 16:03:17 +0300
Subject: [R-sig-Geo] 
 [FORGED] Re:  Introducing new local spatial statistic,
 ELSA, and Entrogram (a variogram-like graph)
In-Reply-To: <32636bc0-fe98-7385-b7f4-0820fdb5cb1d@auckland.ac.nz>
References: <CAGL-CGASk--Cx7yBMArR6-2gs7-_djwFZbvq+DRNt5wCQtMXDw@mail.gmail.com>
 <CAASFQpTis0udOf=UkwYuywVFAvVK96oc-QgPM4NofQyudxOrbg@mail.gmail.com>
 <CAGL-CGDZ0wp20b33eQXzSXwZxqoSWEZkLCJ-VE2MjG32uQe4FA@mail.gmail.com>
 <32636bc0-fe98-7385-b7f4-0820fdb5cb1d@auckland.ac.nz>
Message-ID: <CAGL-CGB1K7xNkmc1pLOUr-5KG_nHzb_WDgWe3i5apa76Kg34EA@mail.gmail.com>

Hi Rolf,

You right, Thank you. I replied to all by mistake. I intended to send the
PDF to Chris. I removed the link.

Cheers,
Babak

On Wed, Apr 8, 2020 at 2:00 AM Rolf Turner <r.turner at auckland.ac.nz> wrote:

>
> On 8/04/20 10:49 am, Babak Naimi wrote:
>
> > Hi Chris,
> >
> > Thanks for your email. Unfortunately, the article is not open but you can
> > find the PDF from the following link:
> >
> > https://www.dropbox.com/s/mpjra60b5yyzwjg/Naimi_2019_ELSA.pdf?dl=0
>
> If the paper is not open source, are you not violating copyright by
> making it available in this way?
>
> Could get you into trouble.
>
> cheers,
>
> Rolf Turner
>
> --
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Phone: +64-9-373-7599 ext. 88276
>

	[[alternative HTML version deleted]]


From c@r|o@b@ut|@t@|eon @end|ng |rom gm@||@com  Thu Apr  9 17:52:27 2020
From: c@r|o@b@ut|@t@|eon @end|ng |rom gm@||@com (Carlos Bautista)
Date: Thu, 9 Apr 2020 17:52:27 +0200
Subject: [R-sig-Geo] unable to remove spatial autocorrelation from a
 binomial gam
Message-ID: <CALTLwxCjeh1L0EvkwfGGB_9O9yjDTYbpvwZShNS6mzpY9Dxo=Q@mail.gmail.com>

Dear list members,

I am using gam (from mgcv package in R) to model presence/absence data in
3355 cells of 1x1km (151 presences and 3204 absences). Even though I
include a smooth with the spatial locations in the model to address the
spatial dependence in my data, the results from a variogram show spatial
autocorrelation in the residuals of my gam (range=6000 meters). Since I am
modelling a binary response, using a gamm with a correlation structure is
not advisable because it "performs poorly with binary data", neither gamm4
because (although is supposed to be appropriate for binary data) it has "no
facility for nlme style correlation structures".

The alternative I have found is to fit my model using the function magic
from the same mgcv package. Because I found no examples of how to use magic
for spatially correlated data I have adapted the ?magic example for
temporally correlated data. The results of the output change the
coefficients of the model but do not remove the spatial autocorrelation and
the smooth plots show the same effect.
You can find find the output from my models and figures of the variograms
and plots of the smooth effects in the following link
https://stackoverflow.com/questions/61110762/gam-with-binomial-distribution-and-with-spatial-autocorrelation-in-r


Could someone tell me if there is something wrong in my script? Does anyone
know another alternative to remove the residuals' spatial autocorrelation
from a binomial gam?

Thank you very much.
Kind regards,
Carlos
-- 
Carlos Bautista
Institute of Nature Conservation
Polish Academy of Sciences
Mickiewicza 33
31-120 Krakow, Poland
www.carpathianbear.pl
www.iop.krakow.pl

	[[alternative HTML version deleted]]


From tedpopper @end|ng |rom hotm@||@com  Fri Apr 10 06:56:21 2020
From: tedpopper @end|ng |rom hotm@||@com (Ted)
Date: Fri, 10 Apr 2020 04:56:21 +0000
Subject: [R-sig-Geo] Results of impacts( ) for partitioned impact measures
Message-ID: <SL2P216MB0204DAC838A05AF35A66D259B2DE0@SL2P216MB0204.KORP216.PROD.OUTLOOK.COM>

Hi all -

I am creating partitioned impact measure estimates using impacts( ) with the argument `Q' set to the desired number of orders of neighbourhood, say, Q = 5. The model is a Spatial Durbin model and the code is fairly standard:

trMC <-- trW(as(W, "CsparseMatrix"), type="MC")
imp <- impacts(test.sdm, tr=trW, R=1000, Q=5)
summary(imp, zstats=T, reportQ=T, short=T)

I have a general question about the results.

I have read that the results for direct impacts of order 1 (immediate neighbours) should be 0 and, similarly, that for indirect impacts of order 0 (local area) should also be 0. I have certainly seen some examples that reflect this, and as I understand things, the logic makes sense.

However, not only do my results not have zeros in these slots, but as I search for confirmation online I also see other examples that don't.  Mine look more like this:

===

Impact components
$direct
        Dis3
Q1 0.065757531
Q2 0.003234086     <== Should be 0?
Q3 0.006264031
Q4 0.002231203
Q5 0.001677652

$indirect
       Dis3
Q1 0.02869280     <== Should be 0?
Q2 0.06544605
Q3 0.04367716
Q4 0.03408384
Q5 0.02472906

===

I am assuming that the expectation of zeros as indicated is correct and that my results are flawed. However, I have yet to locate a problem and the fact that I see other examples with non-zero entries in these slots has left me confused.

My question is: Is there ever a situation in which it is reasonable to expect non-zero entries in these order-of-neighborhood slots as indicated above? If there is, how might these non-zero entries be explained given that for indirect impacts it seems reasonable to expect no effects from the local area, for example?

 I'm sensing something obvious here (apologies in advance) - perhaps lock-down is getting me frazzled. Any help appreciated. In the meantime, I'll maintain my assumption that the results are wrong and keep re-checking everything that has led me here.

Keep well, all.

Regards,

Ted Pope

	[[alternative HTML version deleted]]


From tedpopper @end|ng |rom hotm@||@com  Fri Apr 10 11:00:03 2020
From: tedpopper @end|ng |rom hotm@||@com (Ted)
Date: Fri, 10 Apr 2020 09:00:03 +0000
Subject: [R-sig-Geo] Results of impacts( ) for partitioned impact measures:
 An answer
Message-ID: <SL2P216MB020476C2B346D3DDB545D437B2DE0@SL2P216MB0204.KORP216.PROD.OUTLOOK.COM>

After quite a few days of frustration I posed a question to the group about partitioned impact measures just some hours ago.

Apologies if that has grabbed anyone's attention already, but I have (finally!) located an answer.

Just a few words in case anyone else has a similar issue.

Based on things read (e.g., LeSage and Pace, 2009) and my basic understanding of what is going on, I had assumed that it was necessary for zeros to populate the direct W1 slot (immediate neighbours alone) and the indirect W0 slot (the local area) in partitioned impact measure estimates. My results did not match expectations, so my default position was that my results were flawed. Searching for similar output I found examples that both agreed and disagreed with that assumption.

I have just now located a reference that sheds some light on this:

C.D. Jensen and D.J. Lacombe, 2012.  A note on partitioning effects estimates over space. Letters in Spatial and Resource Sciences, 5(1), 47-53.

On just a scan it is clear that it is not necessary that these slots contain zero entries (see page 52 in particular). This is associated with large spatially lagged variables in the Spatial Durbin model I had estimated. The paper is framed as a "correction", so I guess I was probably not alone in leaping to the conclusions I had.

Hope that helps. It has helped me. Apologies if anyone has jumped onto this already.

Regards,

Ted Pope




	[[alternative HTML version deleted]]


From |orm|g@re|n@ @end|ng |rom gm@||@com  Fri Apr 10 12:03:55 2020
From: |orm|g@re|n@ @end|ng |rom gm@||@com (Olga Boet)
Date: Fri, 10 Apr 2020 12:03:55 +0200
Subject: [R-sig-Geo] unable to remove spatial autocorrelation from a
 binomial gam
In-Reply-To: <CALTLwxCjeh1L0EvkwfGGB_9O9yjDTYbpvwZShNS6mzpY9Dxo=Q@mail.gmail.com>
References: <CALTLwxCjeh1L0EvkwfGGB_9O9yjDTYbpvwZShNS6mzpY9Dxo=Q@mail.gmail.com>
Message-ID: <CAOxTu=BbE+-JjWWqdsx8saTt0HEMLYVDihpPw-poN+4v_6BQUg@mail.gmail.com>

Hi Carlos,

Excuse me, I don't sure that I can help you, I know little about GAM. I
don?t understand your script and variogram, I work different. I hope
someone else gives you a better answer than mine. But if it can help, here
are some considerations.

Spatial data is often correlated, but it must be evaluated if it is a
problem or not. For exemple, some species are distributed by stains as
frogs, fihes or some plants species (this correlation should not be
eliminated).

I think the smooothing function in GAM is to smooth the curves, that is, it
softens (less abrupt) the effect of environmental variables (not the
coordinates, since the coordinates are not environmental variables in a
spatial model).

However, in Dimo package, there are two interesting functions: balancing
weights function and thinning function.

Balance function is weightCases(), and it is used when the background is
very large with respect to the number of presences. So that the values of
the variables in the presence points have more weight in the model despite
the lower number.

Thinning function removes points that are too close to each other (or in a
space where variable data is not available). It is used when there are
points that are too clustered as a result of sampling (but it does not
correspond to the actual distribution). In this function you can determine
the minimum distance between the points.

thinning() is from package spThin (URL:
https://cran.r-project.org/web/packages/spThin)


Finally, are your data really presence/absence data? did you go to at 3355
cells and detect presence/absence of the species? spatial models are
different if we have absences, pseudoabsences or backround. The type of
absence data is important for choosing a model.


I'm sorry I couldn't answer your questions



Kind regards,


Olga Boet
Documentalista de la col?lecci? de cordats. CMCNB
*Myrmex*


Missatge de Carlos Bautista <carlosbautistaleon at gmail.com> del dia dj., 9
d?abr. 2020 a les 17:52:

> Dear list members,
>
> I am using gam (from mgcv package in R) to model presence/absence data in
> 3355 cells of 1x1km (151 presences and 3204 absences). Even though I
> include a smooth with the spatial locations in the model to address the
> spatial dependence in my data, the results from a variogram show spatial
> autocorrelation in the residuals of my gam (range=6000 meters). Since I am
> modelling a binary response, using a gamm with a correlation structure is
> not advisable because it "performs poorly with binary data", neither gamm4
> because (although is supposed to be appropriate for binary data) it has "no
> facility for nlme style correlation structures".
>
> The alternative I have found is to fit my model using the function magic
> from the same mgcv package. Because I found no examples of how to use magic
> for spatially correlated data I have adapted the ?magic example for
> temporally correlated data. The results of the output change the
> coefficients of the model but do not remove the spatial autocorrelation and
> the smooth plots show the same effect.
> You can find find the output from my models and figures of the variograms
> and plots of the smooth effects in the following link
>
> https://stackoverflow.com/questions/61110762/gam-with-binomial-distribution-and-with-spatial-autocorrelation-in-r
>
>
> Could someone tell me if there is something wrong in my script? Does anyone
> know another alternative to remove the residuals' spatial autocorrelation
> from a binomial gam?
>
> Thank you very much.
> Kind regards,
> Carlos
> --
> Carlos Bautista
> Institute of Nature Conservation
> Polish Academy of Sciences
> Mickiewicza 33
> 31-120 Krakow, Poland
> www.carpathianbear.pl
> www.iop.krakow.pl
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From pk@ge||z@ @end|ng |rom @tudent@@uonb|@@c@ke  Fri Apr 10 17:44:39 2020
From: pk@ge||z@ @end|ng |rom @tudent@@uonb|@@c@ke (PAMELLA KAGELIZA KILAVI)
Date: Fri, 10 Apr 2020 18:44:39 +0300
Subject: [R-sig-Geo] Overlay a kriged interpolated output on a base map
Message-ID: <CAEQQd3LuBY3=TKv-m81OdP5M53MHE_i8cT2vBg9wLjW4moqStQ@mail.gmail.com>

 Dear All

I have been trying to overlay the output of interpolation  shown in this
link on a longlat projection in vain
https://rpubs.com/pkilavi/597291

This is an output of the ggmap data int this link
https://rpubs.com/pkilavi/597295

The algorithm below gave me some output which could only work with
continuous fill

#Convert spatial objects into data.frames for ggplot2
Krig.output=as.data.frame(s4_dose_grid)
names(Krig.output)[1:3]<-c("lon","lat","var1.pred")
ggplot(data=Krig.output,aes(x=lon,y=lat))+
  geom_tile(data=Krig.output,aes(fill=var1.pred), alpha=0.6)+
  scale_fill_gradient(high = "#0033CC", low="#cc0033")+
  coord_quickmap()

https://rpubs.com/pkilavi/597297

I converted the UTM coordinates to longlat using the code below
utmcooord-SpatialPoints(cbind(Krig.output$lon,Krig.output$lat,
Krig.output$var1.pred, Krig.output$var1.var), proj4string=CRS("+proj=utm
+zone=37 +south"))
Krig.outpt.longlat<-spTransform(utmcoor,CRS("+proj=longlat"))
Krig.output.new=as.data.frame(Krig.outpt.longlat)
names(Krig.output.new)[1:4]<-c("lon","lat","var1.pred", "var1.var")

Unfortunately, this did not work out with geom_tile and instead, I used
stat_summary_2d, which also has not worked out. I actually hoped that I
will be able to use the ggmap and have the interpolated output well placed
on a hybrid base map

Therefore, I would like to request for an assistant to help me achieve this
objective.

Thank you

Pamella Kageliza Kilavi-Ndege
Ph.D. Student
Department of Physics
University of Nairobi, Kenya

-- 

The University of Nairobi is ISO 9001:2015 certified.
Website: 
http://www.uonbi.ac.ke/ <http://www.uonbi.ac.ke/>
Facebook: 
https://www.facebook.com/uonbi.ac.ke <https://www.facebook.com/uonbi.ac.ke>

Twitter: @uonbi? https://twitter.com/uonb <https://twitter.com/uonb>

	[[alternative HTML version deleted]]


From c@r|o@b@ut|@t@|eon @end|ng |rom gm@||@com  Sun Apr 12 23:10:28 2020
From: c@r|o@b@ut|@t@|eon @end|ng |rom gm@||@com (Carlos Bautista)
Date: Sun, 12 Apr 2020 23:10:28 +0200
Subject: [R-sig-Geo] unable to remove spatial autocorrelation from a
 binomial gam
In-Reply-To: <CAOxTu=BbE+-JjWWqdsx8saTt0HEMLYVDihpPw-poN+4v_6BQUg@mail.gmail.com>
References: <CALTLwxCjeh1L0EvkwfGGB_9O9yjDTYbpvwZShNS6mzpY9Dxo=Q@mail.gmail.com>
 <CAOxTu=BbE+-JjWWqdsx8saTt0HEMLYVDihpPw-poN+4v_6BQUg@mail.gmail.com>
Message-ID: <CALTLwxCn+PgXDHJYeDCOEOYCA8JHW0rKn7g+nJ-2ASNNA6-0XQ@mail.gmail.com>

Hello Olga

Thanks a lot for your response. It is very helpful.

Yes, my data is presence/absence because I'm observing the occurrence of
bear damaging apiaries in a particular region. Since there is a
compensation system that is running for a long time we can assume that
almost all damage is included in the database. So perhaps a few absences
could be presences (a beekeeper not claiming the damage) but I'm
pretty sure that it'd be marginal. I have also read what you say about
environmental data not being always an issue that should be removed from a
model. But in some books and articles, it is written that properly
accounting for autocorrelation is necessary for obtaining reliable
statistical inference (
http://highstat.com/index.php/mixed-effects-models-and-extensions-in-ecology-with-r
 see also here
https://esajournals.onlinelibrary.wiley.com/doi/10.1002/ecy.1674 ). What
should I follow? So far my approach is more conservative and I try to
remove since I imagine reviewers asking me to do so.

I knew about the possibility of subsampling to avoid autocorrelation but
I've read that it's not the best solution. That's why I was trying to use
correlation structures. I have got the advice to use the function gamm that
allow such correlations and check if the model fit is more ore less similar
to the one of a gam model. I am in the middle of that now and waiting for
the gamm to finish as it is computationally costly (it may take a few days).
I didn't know about the package that you recommended so I will take a
look at it. Maybe the weightCases() function will be a good solution to my
problem.

Thank you so much once again for your help.

All the best,
Carlos

On Fri, 10 Apr 2020 at 12:04, Olga Boet <formigareina at gmail.com> wrote:

> Hi Carlos,
>
> Excuse me, I don't sure that I can help you, I know little about GAM. I
> don?t understand your script and variogram, I work different. I hope
> someone else gives you a better answer than mine. But if it can help, here
> are some considerations.
>
> Spatial data is often correlated, but it must be evaluated if it is a
> problem or not. For exemple, some species are distributed by stains as
> frogs, fihes or some plants species (this correlation should not be
> eliminated).
>
> I think the smooothing function in GAM is to smooth the curves, that is,
> it softens (less abrupt) the effect of environmental variables (not the
> coordinates, since the coordinates are not environmental variables in a
> spatial model).
>
> However, in Dimo package, there are two interesting functions: balancing
> weights function and thinning function.
>
> Balance function is weightCases(), and it is used when the background is
> very large with respect to the number of presences. So that the values of
> the variables in the presence points have more weight in the model despite
> the lower number.
>
> Thinning function removes points that are too close to each other (or in a
> space where variable data is not available). It is used when there are
> points that are too clustered as a result of sampling (but it does not
> correspond to the actual distribution). In this function you can determine
> the minimum distance between the points.
>
> thinning() is from package spThin (URL:
> https://cran.r-project.org/web/packages/spThin)
>
>
> Finally, are your data really presence/absence data? did you go to at 3355
> cells and detect presence/absence of the species? spatial models are
> different if we have absences, pseudoabsences or backround. The type of
> absence data is important for choosing a model.
>
>
> I'm sorry I couldn't answer your questions
>
>
>
> Kind regards,
>
>
> Olga Boet
> Documentalista de la col?lecci? de cordats. CMCNB
> *Myrmex*
>
>
> Missatge de Carlos Bautista <carlosbautistaleon at gmail.com> del dia dj., 9
> d?abr. 2020 a les 17:52:
>
>> Dear list members,
>>
>> I am using gam (from mgcv package in R) to model presence/absence data in
>> 3355 cells of 1x1km (151 presences and 3204 absences). Even though I
>> include a smooth with the spatial locations in the model to address the
>> spatial dependence in my data, the results from a variogram show spatial
>> autocorrelation in the residuals of my gam (range=6000 meters). Since I am
>> modelling a binary response, using a gamm with a correlation structure is
>> not advisable because it "performs poorly with binary data", neither gamm4
>> because (although is supposed to be appropriate for binary data) it has
>> "no
>> facility for nlme style correlation structures".
>>
>> The alternative I have found is to fit my model using the function magic
>> from the same mgcv package. Because I found no examples of how to use
>> magic
>> for spatially correlated data I have adapted the ?magic example for
>> temporally correlated data. The results of the output change the
>> coefficients of the model but do not remove the spatial autocorrelation
>> and
>> the smooth plots show the same effect.
>> You can find find the output from my models and figures of the variograms
>> and plots of the smooth effects in the following link
>>
>> https://stackoverflow.com/questions/61110762/gam-with-binomial-distribution-and-with-spatial-autocorrelation-in-r
>>
>>
>> Could someone tell me if there is something wrong in my script? Does
>> anyone
>> know another alternative to remove the residuals' spatial autocorrelation
>> from a binomial gam?
>>
>> Thank you very much.
>> Kind regards,
>> Carlos
>> --
>> Carlos Bautista
>> Institute of Nature Conservation
>> Polish Academy of Sciences
>> Mickiewicza 33
>> 31-120 Krakow, Poland
>> www.carpathianbear.pl
>> www.iop.krakow.pl
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>

-- 
Carlos Bautista
Institute of Nature Conservation
Polish Academy of Sciences
Mickiewicza 33
31-120 Krakow, Poland
www.carpathianbear.pl
www.iop.krakow.pl

	[[alternative HTML version deleted]]


From m@p|no|@10 @end|ng |rom gm@||@com  Mon Apr 13 00:07:10 2020
From: m@p|no|@10 @end|ng |rom gm@||@com (=?UTF-8?Q?Manuel_Sp=C3=ADnola?=)
Date: Sun, 12 Apr 2020 16:07:10 -0600
Subject: [R-sig-Geo] unable to remove spatial autocorrelation from a
 binomial gam
In-Reply-To: <CALTLwxCn+PgXDHJYeDCOEOYCA8JHW0rKn7g+nJ-2ASNNA6-0XQ@mail.gmail.com>
References: <CALTLwxCjeh1L0EvkwfGGB_9O9yjDTYbpvwZShNS6mzpY9Dxo=Q@mail.gmail.com>
 <CAOxTu=BbE+-JjWWqdsx8saTt0HEMLYVDihpPw-poN+4v_6BQUg@mail.gmail.com>
 <CALTLwxCn+PgXDHJYeDCOEOYCA8JHW0rKn7g+nJ-2ASNNA6-0XQ@mail.gmail.com>
Message-ID: <CABkCotQmPHmSvjCiicNRRUc=xdG59aGmMfqnJ2GEHuBbL-qN_Q@mail.gmail.com>

Hello Carlos,

May be you want to take a look on the GSIF and spm packages.

Manuel

El dom., 12 abr. 2020 a las 15:11, Carlos Bautista (<
carlosbautistaleon at gmail.com>) escribi?:

> Hello Olga
>
> Thanks a lot for your response. It is very helpful.
>
> Yes, my data is presence/absence because I'm observing the occurrence of
> bear damaging apiaries in a particular region. Since there is a
> compensation system that is running for a long time we can assume that
> almost all damage is included in the database. So perhaps a few absences
> could be presences (a beekeeper not claiming the damage) but I'm
> pretty sure that it'd be marginal. I have also read what you say about
> environmental data not being always an issue that should be removed from a
> model. But in some books and articles, it is written that properly
> accounting for autocorrelation is necessary for obtaining reliable
> statistical inference (
>
> http://highstat.com/index.php/mixed-effects-models-and-extensions-in-ecology-with-r
>  see also here
> https://esajournals.onlinelibrary.wiley.com/doi/10.1002/ecy.1674 ). What
> should I follow? So far my approach is more conservative and I try to
> remove since I imagine reviewers asking me to do so.
>
> I knew about the possibility of subsampling to avoid autocorrelation but
> I've read that it's not the best solution. That's why I was trying to use
> correlation structures. I have got the advice to use the function gamm that
> allow such correlations and check if the model fit is more ore less similar
> to the one of a gam model. I am in the middle of that now and waiting for
> the gamm to finish as it is computationally costly (it may take a few
> days).
> I didn't know about the package that you recommended so I will take a
> look at it. Maybe the weightCases() function will be a good solution to my
> problem.
>
> Thank you so much once again for your help.
>
> All the best,
> Carlos
>
> On Fri, 10 Apr 2020 at 12:04, Olga Boet <formigareina at gmail.com> wrote:
>
> > Hi Carlos,
> >
> > Excuse me, I don't sure that I can help you, I know little about GAM. I
> > don?t understand your script and variogram, I work different. I hope
> > someone else gives you a better answer than mine. But if it can help,
> here
> > are some considerations.
> >
> > Spatial data is often correlated, but it must be evaluated if it is a
> > problem or not. For exemple, some species are distributed by stains as
> > frogs, fihes or some plants species (this correlation should not be
> > eliminated).
> >
> > I think the smooothing function in GAM is to smooth the curves, that is,
> > it softens (less abrupt) the effect of environmental variables (not the
> > coordinates, since the coordinates are not environmental variables in a
> > spatial model).
> >
> > However, in Dimo package, there are two interesting functions: balancing
> > weights function and thinning function.
> >
> > Balance function is weightCases(), and it is used when the background is
> > very large with respect to the number of presences. So that the values of
> > the variables in the presence points have more weight in the model
> despite
> > the lower number.
> >
> > Thinning function removes points that are too close to each other (or in
> a
> > space where variable data is not available). It is used when there are
> > points that are too clustered as a result of sampling (but it does not
> > correspond to the actual distribution). In this function you can
> determine
> > the minimum distance between the points.
> >
> > thinning() is from package spThin (URL:
> > https://cran.r-project.org/web/packages/spThin)
> >
> >
> > Finally, are your data really presence/absence data? did you go to at
> 3355
> > cells and detect presence/absence of the species? spatial models are
> > different if we have absences, pseudoabsences or backround. The type of
> > absence data is important for choosing a model.
> >
> >
> > I'm sorry I couldn't answer your questions
> >
> >
> >
> > Kind regards,
> >
> >
> > Olga Boet
> > Documentalista de la col?lecci? de cordats. CMCNB
> > *Myrmex*
> >
> >
> > Missatge de Carlos Bautista <carlosbautistaleon at gmail.com> del dia dj.,
> 9
> > d?abr. 2020 a les 17:52:
> >
> >> Dear list members,
> >>
> >> I am using gam (from mgcv package in R) to model presence/absence data
> in
> >> 3355 cells of 1x1km (151 presences and 3204 absences). Even though I
> >> include a smooth with the spatial locations in the model to address the
> >> spatial dependence in my data, the results from a variogram show spatial
> >> autocorrelation in the residuals of my gam (range=6000 meters). Since I
> am
> >> modelling a binary response, using a gamm with a correlation structure
> is
> >> not advisable because it "performs poorly with binary data", neither
> gamm4
> >> because (although is supposed to be appropriate for binary data) it has
> >> "no
> >> facility for nlme style correlation structures".
> >>
> >> The alternative I have found is to fit my model using the function magic
> >> from the same mgcv package. Because I found no examples of how to use
> >> magic
> >> for spatially correlated data I have adapted the ?magic example for
> >> temporally correlated data. The results of the output change the
> >> coefficients of the model but do not remove the spatial autocorrelation
> >> and
> >> the smooth plots show the same effect.
> >> You can find find the output from my models and figures of the
> variograms
> >> and plots of the smooth effects in the following link
> >>
> >>
> https://stackoverflow.com/questions/61110762/gam-with-binomial-distribution-and-with-spatial-autocorrelation-in-r
> >>
> >>
> >> Could someone tell me if there is something wrong in my script? Does
> >> anyone
> >> know another alternative to remove the residuals' spatial
> autocorrelation
> >> from a binomial gam?
> >>
> >> Thank you very much.
> >> Kind regards,
> >> Carlos
> >> --
> >> Carlos Bautista
> >> Institute of Nature Conservation
> >> Polish Academy of Sciences
> >> Mickiewicza 33
> >> 31-120 Krakow, Poland
> >> www.carpathianbear.pl
> >> www.iop.krakow.pl
> >>
> >>         [[alternative HTML version deleted]]
> >>
> >> _______________________________________________
> >> R-sig-Geo mailing list
> >> R-sig-Geo at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>
> >
>
> --
> Carlos Bautista
> Institute of Nature Conservation
> Polish Academy of Sciences
> Mickiewicza 33
> 31-120 Krakow, Poland
> www.carpathianbear.pl
> www.iop.krakow.pl
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


-- 
*Manuel Sp?nola, Ph.D.*
Instituto Internacional en Conservaci?n y Manejo de Vida Silvestre
Universidad Nacional
Apartado 1350-3000
Heredia
COSTA RICA
mspinola at una.cr <mspinola at una.ac.cr>
mspinola10 at gmail.com
Tel?fono: (506) 8706 - 4662
Personal website: Lobito de r?o <https://sites.google.com/site/lobitoderio/>
Institutional website: ICOMVIS <http://www.icomvis.una.ac.cr/>

	[[alternative HTML version deleted]]


From c@r|o@b@ut|@t@|eon @end|ng |rom gm@||@com  Mon Apr 13 11:08:41 2020
From: c@r|o@b@ut|@t@|eon @end|ng |rom gm@||@com (Carlos Bautista)
Date: Mon, 13 Apr 2020 11:08:41 +0200
Subject: [R-sig-Geo] unable to remove spatial autocorrelation from a
 binomial gam
In-Reply-To: <CABkCotQmPHmSvjCiicNRRUc=xdG59aGmMfqnJ2GEHuBbL-qN_Q@mail.gmail.com>
References: <CALTLwxCjeh1L0EvkwfGGB_9O9yjDTYbpvwZShNS6mzpY9Dxo=Q@mail.gmail.com>
 <CAOxTu=BbE+-JjWWqdsx8saTt0HEMLYVDihpPw-poN+4v_6BQUg@mail.gmail.com>
 <CALTLwxCn+PgXDHJYeDCOEOYCA8JHW0rKn7g+nJ-2ASNNA6-0XQ@mail.gmail.com>
 <CABkCotQmPHmSvjCiicNRRUc=xdG59aGmMfqnJ2GEHuBbL-qN_Q@mail.gmail.com>
Message-ID: <CALTLwxCXqPawLw_aMyg34FTb17YGFTW=b8ixVa_jEWU3LEhBLw@mail.gmail.com>

Hello Manuel.

Thanks a lot. I'll take a look at them.

All the best
Carlos

On Mon, 13 Apr 2020 at 00:07, Manuel Sp?nola <mspinola10 at gmail.com> wrote:

> Hello Carlos,
>
> May be you want to take a look on the GSIF and spm packages.
>
> Manuel
>
> El dom., 12 abr. 2020 a las 15:11, Carlos Bautista (<
> carlosbautistaleon at gmail.com>) escribi?:
>
>> Hello Olga
>>
>> Thanks a lot for your response. It is very helpful.
>>
>> Yes, my data is presence/absence because I'm observing the occurrence of
>> bear damaging apiaries in a particular region. Since there is a
>> compensation system that is running for a long time we can assume that
>> almost all damage is included in the database. So perhaps a few absences
>> could be presences (a beekeeper not claiming the damage) but I'm
>> pretty sure that it'd be marginal. I have also read what you say about
>> environmental data not being always an issue that should be removed from a
>> model. But in some books and articles, it is written that properly
>> accounting for autocorrelation is necessary for obtaining reliable
>> statistical inference (
>>
>> http://highstat.com/index.php/mixed-effects-models-and-extensions-in-ecology-with-r
>>  see also here
>> https://esajournals.onlinelibrary.wiley.com/doi/10.1002/ecy.1674 ). What
>> should I follow? So far my approach is more conservative and I try to
>> remove since I imagine reviewers asking me to do so.
>>
>> I knew about the possibility of subsampling to avoid autocorrelation but
>> I've read that it's not the best solution. That's why I was trying to use
>> correlation structures. I have got the advice to use the function gamm
>> that
>> allow such correlations and check if the model fit is more ore less
>> similar
>> to the one of a gam model. I am in the middle of that now and waiting for
>> the gamm to finish as it is computationally costly (it may take a few
>> days).
>> I didn't know about the package that you recommended so I will take a
>> look at it. Maybe the weightCases() function will be a good solution to my
>> problem.
>>
>> Thank you so much once again for your help.
>>
>> All the best,
>> Carlos
>>
>> On Fri, 10 Apr 2020 at 12:04, Olga Boet <formigareina at gmail.com> wrote:
>>
>> > Hi Carlos,
>> >
>> > Excuse me, I don't sure that I can help you, I know little about GAM. I
>> > don?t understand your script and variogram, I work different. I hope
>> > someone else gives you a better answer than mine. But if it can help,
>> here
>> > are some considerations.
>> >
>> > Spatial data is often correlated, but it must be evaluated if it is a
>> > problem or not. For exemple, some species are distributed by stains as
>> > frogs, fihes or some plants species (this correlation should not be
>> > eliminated).
>> >
>> > I think the smooothing function in GAM is to smooth the curves, that is,
>> > it softens (less abrupt) the effect of environmental variables (not the
>> > coordinates, since the coordinates are not environmental variables in a
>> > spatial model).
>> >
>> > However, in Dimo package, there are two interesting functions: balancing
>> > weights function and thinning function.
>> >
>> > Balance function is weightCases(), and it is used when the background is
>> > very large with respect to the number of presences. So that the values
>> of
>> > the variables in the presence points have more weight in the model
>> despite
>> > the lower number.
>> >
>> > Thinning function removes points that are too close to each other (or
>> in a
>> > space where variable data is not available). It is used when there are
>> > points that are too clustered as a result of sampling (but it does not
>> > correspond to the actual distribution). In this function you can
>> determine
>> > the minimum distance between the points.
>> >
>> > thinning() is from package spThin (URL:
>> > https://cran.r-project.org/web/packages/spThin)
>> >
>> >
>> > Finally, are your data really presence/absence data? did you go to at
>> 3355
>> > cells and detect presence/absence of the species? spatial models are
>> > different if we have absences, pseudoabsences or backround. The type of
>> > absence data is important for choosing a model.
>> >
>> >
>> > I'm sorry I couldn't answer your questions
>> >
>> >
>> >
>> > Kind regards,
>> >
>> >
>> > Olga Boet
>> > Documentalista de la col?lecci? de cordats. CMCNB
>> > *Myrmex*
>> >
>> >
>> > Missatge de Carlos Bautista <carlosbautistaleon at gmail.com> del dia
>> dj., 9
>> > d?abr. 2020 a les 17:52:
>> >
>> >> Dear list members,
>> >>
>> >> I am using gam (from mgcv package in R) to model presence/absence data
>> in
>> >> 3355 cells of 1x1km (151 presences and 3204 absences). Even though I
>> >> include a smooth with the spatial locations in the model to address the
>> >> spatial dependence in my data, the results from a variogram show
>> spatial
>> >> autocorrelation in the residuals of my gam (range=6000 meters). Since
>> I am
>> >> modelling a binary response, using a gamm with a correlation structure
>> is
>> >> not advisable because it "performs poorly with binary data", neither
>> gamm4
>> >> because (although is supposed to be appropriate for binary data) it has
>> >> "no
>> >> facility for nlme style correlation structures".
>> >>
>> >> The alternative I have found is to fit my model using the function
>> magic
>> >> from the same mgcv package. Because I found no examples of how to use
>> >> magic
>> >> for spatially correlated data I have adapted the ?magic example for
>> >> temporally correlated data. The results of the output change the
>> >> coefficients of the model but do not remove the spatial autocorrelation
>> >> and
>> >> the smooth plots show the same effect.
>> >> You can find find the output from my models and figures of the
>> variograms
>> >> and plots of the smooth effects in the following link
>> >>
>> >>
>> https://stackoverflow.com/questions/61110762/gam-with-binomial-distribution-and-with-spatial-autocorrelation-in-r
>> >>
>> >>
>> >> Could someone tell me if there is something wrong in my script? Does
>> >> anyone
>> >> know another alternative to remove the residuals' spatial
>> autocorrelation
>> >> from a binomial gam?
>> >>
>> >> Thank you very much.
>> >> Kind regards,
>> >> Carlos
>> >> --
>> >> Carlos Bautista
>> >> Institute of Nature Conservation
>> >> Polish Academy of Sciences
>> >> Mickiewicza 33
>> >> 31-120 Krakow, Poland
>> >> www.carpathianbear.pl
>> >> www.iop.krakow.pl
>> >>
>> >>         [[alternative HTML version deleted]]
>> >>
>> >> _______________________________________________
>> >> R-sig-Geo mailing list
>> >> R-sig-Geo at r-project.org
>> >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>> >>
>> >
>>
>> --
>> Carlos Bautista
>> Institute of Nature Conservation
>> Polish Academy of Sciences
>> Mickiewicza 33
>> 31-120 Krakow, Poland
>> www.carpathianbear.pl
>> www.iop.krakow.pl
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
>
> --
> *Manuel Sp?nola, Ph.D.*
> Instituto Internacional en Conservaci?n y Manejo de Vida Silvestre
> Universidad Nacional
> Apartado 1350-3000
> Heredia
> COSTA RICA
> mspinola at una.cr <mspinola at una.ac.cr>
> mspinola10 at gmail.com
> Tel?fono: (506) 8706 - 4662
> Personal website: Lobito de r?o
> <https://sites.google.com/site/lobitoderio/>
> Institutional website: ICOMVIS <http://www.icomvis.una.ac.cr/>
>


-- 
Carlos Bautista
Institute of Nature Conservation
Polish Academy of Sciences
Mickiewicza 33
31-120 Krakow, Poland
www.carpathianbear.pl
www.iop.krakow.pl

	[[alternative HTML version deleted]]


From jo@eph|ew|@1992 @end|ng |rom gm@||@com  Tue Apr 14 16:36:26 2020
From: jo@eph|ew|@1992 @end|ng |rom gm@||@com (Joe Lewis)
Date: Tue, 14 Apr 2020 15:36:26 +0100
Subject: [R-sig-Geo] 
 Error in eCclipbool - Incorrect number of arguments (9),
 expecting 8 for 'Cclipbool
Message-ID: <CAM0xMQ-WJB3BucTZjOBfQXKfxj-eoRtSHgtMjaWtwp81XYv4rA@mail.gmail.com>

Hi,

I'm trying to create an owin object from a SpatialPolygons, but I'm getting
the following error:

Error in .Call(eCclipbool, A, B, pftA, pftB, ct, x0, y0, eps, closed,  :
Incorrect number of arguments (9), expecting 8 for 'Cclipbool'

I'm using as.owin.SpatialPolygons from the Maptools package.

Reproducible example:

x <- raster::getData(name = "GADM", country = "GBR", level = 3)

x <- x[x$NAME_3 == "Falkirk",]

osgb <- "+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000
+y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs"

x <- sp::spTransform(x, osgb)

x <- rgeos::gSimplify(x, tol = 4, topologyPreserve = TRUE)

# this works fine.
x1 <-  maptools::as.owin.SpatialPolygons(as(raster::extent(x),
"SpatialPolygons"))

# this causes the above error
x2 <-  maptools::as.owin.SpatialPolygons(x, "SpatialPolygons")

---

Session Info:

R version 3.4.1 (2017-06-30)

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3            lattice_0.20-35       codetools_0.2-15
 deldir_0.1-25         grid_3.4.1
 [6] nlme_3.1-131          tensor_1.5            raster_2.8-19
spatstat_1.63-3.032   sp_1.3-1
[11] rpart_4.1-12          goftest_1.2-2         Matrix_1.2-10
spatstat.utils_1.17-0 rgdal_1.4-3
[16] tools_3.4.1           foreign_0.8-69        polyclip_1.10-0.001
spatstat.data_1.4-3   abind_1.4-5
[21] compiler_3.4.1        maptools_0.9-9        mgcv_1.8-17
rgeos_0.4-3

Any help would be appreciated.

Thank you.

Kind regards,
Joseph Lewis

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Tue Apr 14 18:53:33 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Tue, 14 Apr 2020 18:53:33 +0200
Subject: [R-sig-Geo] 
 Error in eCclipbool - Incorrect number of arguments (9),
 expecting 8 for 'Cclipbool
In-Reply-To: <CAM0xMQ-WJB3BucTZjOBfQXKfxj-eoRtSHgtMjaWtwp81XYv4rA@mail.gmail.com>
References: <CAM0xMQ-WJB3BucTZjOBfQXKfxj-eoRtSHgtMjaWtwp81XYv4rA@mail.gmail.com>
Message-ID: <alpine.LFD.2.21.2004141840430.2261385@reclus.nhh.no>

On Tue, 14 Apr 2020, Joe Lewis wrote:

> Hi,
>
> I'm trying to create an owin object from a SpatialPolygons, but I'm getting
> the following error:
>
> Error in .Call(eCclipbool, A, B, pftA, pftB, ct, x0, y0, eps, closed,  :
> Incorrect number of arguments (9), expecting 8 for 'Cclipbool'
>
> I'm using as.owin.SpatialPolygons from the Maptools package.
>
> Reproducible example:
>
> x <- raster::getData(name = "GADM", country = "GBR", level = 3)
>
> x <- x[x$NAME_3 == "Falkirk",]
>
> osgb <- "+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000
> +y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs"
>
> x <- sp::spTransform(x, osgb)
>
> x <- rgeos::gSimplify(x, tol = 4, topologyPreserve = TRUE)
>
> # this works fine.
> x1 <-  maptools::as.owin.SpatialPolygons(as(raster::extent(x),
> "SpatialPolygons"))
>
> # this causes the above error
> x2 <-  maptools::as.owin.SpatialPolygons(x, "SpatialPolygons")

Using your example with both FALSE and TRUE settings of 
spatstat::spatstat.options("checkpolygons"), I cannot reprodoce any error.

This with spatstat_1.63-3, spatstat.data_1.4-3, polyclip_1.10-0 on R 4.0.0 
beta. You are using development versions of these packages. Note that 
gSimplify() may not be deterministic, and that changes in PROJ/GDAL render 
your use of spTransform() degraded. You need to read through 
https://www.r-spatial.org/r/2020/03/17/wkt.html.

Hope this helps,

Roger



>
> ---
>
> Session Info:
>
> R version 3.4.1 (2017-06-30)
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] Rcpp_1.0.3            lattice_0.20-35       codetools_0.2-15
> deldir_0.1-25         grid_3.4.1
> [6] nlme_3.1-131          tensor_1.5            raster_2.8-19
> spatstat_1.63-3.032   sp_1.3-1
> [11] rpart_4.1-12          goftest_1.2-2         Matrix_1.2-10
> spatstat.utils_1.17-0 rgdal_1.4-3
> [16] tools_3.4.1           foreign_0.8-69        polyclip_1.10-0.001
> spatstat.data_1.4-3   abind_1.4-5
> [21] compiler_3.4.1        maptools_0.9-9        mgcv_1.8-17
> rgeos_0.4-3
>
> Any help would be appreciated.
>
> Thank you.
>
> Kind regards,
> Joseph Lewis
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From pedone@m@uro @end|ng |rom gm@||@com  Tue Apr 14 19:23:13 2020
From: pedone@m@uro @end|ng |rom gm@||@com (Mauro Pedone)
Date: Tue, 14 Apr 2020 19:23:13 +0200
Subject: [R-sig-Geo] spatstat installation
In-Reply-To: <CAKZHKxSbpEoNE-QfVp0sgt7gF4rfCdPtrw3dAh_1ktz0yeG-XA@mail.gmail.com>
References: <CAKZHKxSbpEoNE-QfVp0sgt7gF4rfCdPtrw3dAh_1ktz0yeG-XA@mail.gmail.com>
Message-ID: <CAKZHKxTXCN977_yacZYW_HyT=iiMMwrVQTzRcHHFVxQW_2EpFQ@mail.gmail.com>

Hello ,
I am trying the spatstat package installation
on R 3.3.0

the package is spatstat_1.63-3.tar.gz
,the OS is oracle enterprise linux 7

at the end I receive the error
Error : .onAttach failed in attachNamespace() for 'spatstat', details:
  call: if (today - as.Date(rdate) > 365) {
  error: missing value where TRUE/FALSE needed

ask to the community if someone encountered this problem.

thanks and regards

Mauro




root at ctrdb10 supporting]#  R CMD INSTALL spatstat_1.63-3.tar.gz
* installing to library ?/usr/lib64/R/library?
* installing *source* package ?spatstat? ...
** package ?spatstat? successfully unpacked and MD5 sums checked
** libs
gcc -m64 -std=gnu99 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c Ediggatsti.c -o
Ediggatsti.o
gcc -m64 -std=gnu99 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c Ediggra.c -o
Ediggra.o
gcc -m64 -std=gnu99 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c Efiksel.c -o
Efiksel.o
gcc -m64 -std=gnu99 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c Egeyer.c -o Egeyer.o
gcc -m64 -std=gnu99 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c Estrauss.c -o
Estrauss.o
gcc -m64 -std=gnu99 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c Kborder.c -o
Kborder.o
gcc -m64 -std=gnu99 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c Knone.c -o Knone.o
gcc -m64 -std=gnu99 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c Krect.c -o Krect.o
g++ -m64 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c Perfect.cc -o
Perfect.o
gcc -m64 -std=gnu99 -I/usr/lib64/R/../../include/R -DNDEBUG
-I/systemr/port/Linux-X64/include/zlib -I/systemr/port/Linux-X64/include/xz
-I/systemr/port/Linux-X64/include/bzip2
-I/systemr/port/Linux-X64/include     -fpic  -g -O2  -c areadiff.c -o
areadiff.o

....................................

....................................

    vcov.mppm                               html
    vcov.ppm                                html
    vcov.slrm                               html
    venn.tess                               html
    vertices                                html
    volume                                  html
    weighted.median                         html
    where.max                               html
    whichhalfplane                          html
    whist                                   html
    will.expand                             html
    with.fv                                 html
    with.hyperframe                         html
    with.msr                                html
    with.ssf                                html
    yardstick                               html
    zapsmall.im                             html
    zclustermodel                           html
** building package indices
** installing vignettes
** testing if installed package can be loaded
Error : .onAttach failed in attachNamespace() for 'spatstat', details:
  call: if (today - as.Date(rdate) > 365) {
  error: missing value where TRUE/FALSE needed
Error: loading failed
Execution halted
ERROR: loading failed
* removing ?/usr/lib64/R/library/spatstat?

	[[alternative HTML version deleted]]


From tom@heng| @end|ng |rom gm@||@com  Tue Apr 14 20:31:41 2020
From: tom@heng| @end|ng |rom gm@||@com (Tomislav Hengl)
Date: Tue, 14 Apr 2020 20:31:41 +0200
Subject: [R-sig-Geo] PhD position at OpenGeoHub: spatio-temporal data
 modeling and scenario testing using web-GIS
Message-ID: <CAC4wKHnP77HJK+mQ8e6x+pJtQk17uk7MeSNo8VFkFrSE7=YRSQ@mail.gmail.com>

Application Deadline: 3rd of May 2019
Possible start date: 1st of June 2020
Duration: 3.5+ years,
Job location: Agro Business Park 10, Wageningen
Bruto monthly salary: *The gross monthly salary starts at ? 2.290,- in the
first year and will increase to ? 2.972,-* in the fourth year of your
employment (with possible bonuses)
Job type:  PhD student / researcher
Fields: geoinformatics, geo-databases, meteorology, pedometrics,
environmetrics, environmental sciences
Employer: *OpenGeoHub foundation*
PhD study programme: PE&RC Post-graduate school (https://www.pe-rc.nl/), to
be organized jointly with the Laboratory of Geo-information Science and
Remote Sensing, Department of Environmental Sciences, Wageningen University
and Research

Job description

OpenGeoHub (Stichting OpenGeoHub) is a not-for-profit research foundation
with headquarters at the Agro Business Park, Wageningen, the Netherlands.
We aim to become world experts in producing global and regional spatial
predictions of soil, vegetation and meteo variables, by using High
Performance Computing / optimization and state-of-the-art Machine Learning.

OpenGeoHub foundation is looking for a young researcher (PhD position) in
the field of spatio-temporal environmental data modeling and visualization.
To qualify for this position, a solid knowledge of spatial and
spatiotemporal statistics and time-series data analysis is required. You
are expected to show capacity to develop software and web-solutions for
spatiotemporal data using Open Source software (R, Python, Javascript
and/or Julia); capacity to develop new solutions in geocomputing and
geovisualization, while optimizing and automating modeling frameworks to
help deliver scientific outputs in a timely manner, is also expected. You
would further develop algorithms for scenario testing using web-GIS and
interactive visualizations i.e. that can be served to thousands of users.
You would work on data science problems within the OpenGeoHub's current and
future European Commission (Horizon 2020) projects including: *"Geo-Harmonizer:
EU-wide automated mapping system for harmonization of Open Data based on
FOSS4G and Machine Learning" (2019?2022)
<https://opendatascience.eu/geoharmonizer-project>* and *"MOOD: MOnitoring
Outbreak events for Disease surveillance in a data science context"
(2020?2023) <https://mood-h2020.eu/>*.

A formal program of PhD study will be organized jointly with the Laboratory
of Geo-information Science and Remote Sensing, Department of Environmental
Sciences, Wageningen University and Research (prof. dr. Martin Herold
<https://www.wur.nl/en/Persons/Martinprof.dr.-M-Martin-Herold.htm>). This
implies that you would spend a significant amount of time writing a
research proposal and publications, meeting with supervisors (weekly),
following PhD courses (organized through the PE&RC Postgraduate school
<https://www.pe-rc.nl/>) and networking with other researchers. You would
have to prepare and submit a research proposal after 6 months from the
start of position, which would be evaluated at the PE&RC school level
independently.

For more info:
*https://opengeohub.org/jobs/2020/phd-position-spatio-temporal-data-modeling-and-scenario-testing-using-web-gis*
<https://opengeohub.org/jobs/2020/phd-position-spatio-temporal-data-modeling-and-scenario-testing-using-web-gis>

	[[alternative HTML version deleted]]


From r@turner @end|ng |rom @uck|@nd@@c@nz  Wed Apr 15 05:55:02 2020
From: r@turner @end|ng |rom @uck|@nd@@c@nz (Rolf Turner)
Date: Wed, 15 Apr 2020 15:55:02 +1200
Subject: [R-sig-Geo] [FORGED]  spatstat installation
In-Reply-To: <CAKZHKxTXCN977_yacZYW_HyT=iiMMwrVQTzRcHHFVxQW_2EpFQ@mail.gmail.com>
References: <CAKZHKxSbpEoNE-QfVp0sgt7gF4rfCdPtrw3dAh_1ktz0yeG-XA@mail.gmail.com>
 <CAKZHKxTXCN977_yacZYW_HyT=iiMMwrVQTzRcHHFVxQW_2EpFQ@mail.gmail.com>
Message-ID: <7fc88d57-5c3e-f2e9-7318-67a260381a2c@auckland.ac.nz>


On 15/04/20 5:23 am, Mauro Pedone wrote:

> Hello ,
> I am trying the spatstat package installation
> on R 3.3.0
> 
> the package is spatstat_1.63-3.tar.gz
> ,the OS is oracle enterprise linux 7
> 
> at the end I receive the error
> Error : .onAttach failed in attachNamespace() for 'spatstat', details:
>    call: if (today - as.Date(rdate) > 365) {
>    error: missing value where TRUE/FALSE needed
> 
> ask to the community if someone encountered this problem.
> 
> thanks and regards

Dear Mauro,

I would guess that this has really nothing to do with spatstat as such, 
but rather something to do with how your system is processing dates.

The code involved is found in the file versions.R.  One can run the 
relevant code from the command line:

today <- Sys.Date()
rv <- R.Version()
rdate <- with(rv, ISOdate(year, month, day))
chk <- today - as.Date(rdate)
if(chk > 365) cat("\nWhoops\n!") else cat("\nAlright!\n")

When I run this code, "Alright!" is duly echoed.

Printing "chk" gives "Time difference of 46 days" and 'chk > 365" 
produces FALSE.

What happens when you run this code?  Look at today, rv, rdate, and chk, 
and try to figure out why a missing value is appearing.

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276


From @dr|@n@b@dde|ey @end|ng |rom curt|n@edu@@u  Wed Apr 15 06:09:16 2020
From: @dr|@n@b@dde|ey @end|ng |rom curt|n@edu@@u (Adrian Baddeley)
Date: Wed, 15 Apr 2020 04:09:16 +0000
Subject: [R-sig-Geo] [FORGED]  spatstat installation
In-Reply-To: <7fc88d57-5c3e-f2e9-7318-67a260381a2c@auckland.ac.nz>
References: <CAKZHKxSbpEoNE-QfVp0sgt7gF4rfCdPtrw3dAh_1ktz0yeG-XA@mail.gmail.com>
 <CAKZHKxTXCN977_yacZYW_HyT=iiMMwrVQTzRcHHFVxQW_2EpFQ@mail.gmail.com>,
 <7fc88d57-5c3e-f2e9-7318-67a260381a2c@auckland.ac.nz>
Message-ID: <MEAPR01MB2232BB7B8114B94F2C40CBC9A4DB0@MEAPR01MB2232.ausprd01.prod.outlook.com>

The current version of R is 3.6-3.
You are trying to install with R version 3.3-0.

Although the spatstat description file says that R >= 3.3-0 is acceptable,
this could be wrong,

I suggest you update the installation of R to the latest version 3.6-3 and then try installing spatstat.


Prof Adrian Baddeley DSc FAA

John Curtin Distinguished Professor

Department of Mathematics and Statistics

Curtin University, Perth, Western Australia


I work Wednesdays, Thursdays and Fridays

________________________________
From: Rolf Turner <r.turner at auckland.ac.nz>
Sent: Wednesday, 15 April 2020 11:55 AM
To: Mauro Pedone <pedone.mauro at gmail.com>
Cc: r-sig-geo at r-project.org <r-sig-geo at r-project.org>; Adrian Baddeley <adrian.baddeley at curtin.edu.au>; Ege Rubak <rubak at math.aau.dk>
Subject: Re: [FORGED] [R-sig-Geo] spatstat installation


On 15/04/20 5:23 am, Mauro Pedone wrote:

> Hello ,
> I am trying the spatstat package installation
> on R 3.3.0
>
> the package is spatstat_1.63-3.tar.gz
> ,the OS is oracle enterprise linux 7
>
> at the end I receive the error
> Error : .onAttach failed in attachNamespace() for 'spatstat', details:
>    call: if (today - as.Date(rdate) > 365) {
>    error: missing value where TRUE/FALSE needed
>
> ask to the community if someone encountered this problem.
>
> thanks and regards

Dear Mauro,

I would guess that this has really nothing to do with spatstat as such,
but rather something to do with how your system is processing dates.

The code involved is found in the file versions.R.  One can run the
relevant code from the command line:

today <- Sys.Date()
rv <- R.Version()
rdate <- with(rv, ISOdate(year, month, day))
chk <- today - as.Date(rdate)
if(chk > 365) cat("\nWhoops\n!") else cat("\nAlright!\n")

When I run this code, "Alright!" is duly echoed.

Printing "chk" gives "Time difference of 46 days" and 'chk > 365"
produces FALSE.

What happens when you run this code?  Look at today, rv, rdate, and chk,
and try to figure out why a missing value is appearing.

cheers,

Rolf Turner

--
Honorary Research Fellow
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276

	[[alternative HTML version deleted]]


From m||uj|@b @end|ng |rom gm@||@com  Sun Apr 19 17:37:49 2020
From: m||uj|@b @end|ng |rom gm@||@com (Miluji Sb)
Date: Sun, 19 Apr 2020 17:37:49 +0200
Subject: [R-sig-Geo] Field names abbreviated for ESRI Shapefile driver
Message-ID: <CAMLwc7Mj6AigUjarsi28MMDH6vG0yXXLewDO_bZXEKdbCGFwog@mail.gmail.com>

Greetings,

i am trying to export a shapefile using the following command;

st_write(weight.sf, "weight.shp, driver="ESRI Shapefile")

But getting the following warning;

1: In abbreviate_shapefile_names(obj) :
  Field names abbreviated for ESRI Shapefile driver

The variable names have the following pattern; "weight_2010" but
become like this "w__201". How can I preserve field/variable names? Thank
you.

Best regards,

Milu

	[[alternative HTML version deleted]]


From jo@eph|ew|@1992 @end|ng |rom gm@||@com  Sun Apr 19 17:42:53 2020
From: jo@eph|ew|@1992 @end|ng |rom gm@||@com (Joe Lewis)
Date: Sun, 19 Apr 2020 16:42:53 +0100
Subject: [R-sig-Geo] Field names abbreviated for ESRI Shapefile driver
In-Reply-To: <CAMLwc7Mj6AigUjarsi28MMDH6vG0yXXLewDO_bZXEKdbCGFwog@mail.gmail.com>
References: <CAMLwc7Mj6AigUjarsi28MMDH6vG0yXXLewDO_bZXEKdbCGFwog@mail.gmail.com>
Message-ID: <CAM0xMQ-pdyOr4h7UWezPvyZLFsoaaqhSiuO10W5sGKmM2PRjrg@mail.gmail.com>

Hi  Milu,

It is not possible to preserve your field/variable name when creating ESRI
shapefiles as the maximum length of field names is limited to 10 character.

See https://community.esri.com/thread/63279

I believe the geopackage format does not have the 10 character limit, so
you may want to try that.

Hope it helps.

Kind regards,
Joseph Lewis

On Sun, Apr 19, 2020 at 4:38 PM Miluji Sb <milujisb at gmail.com> wrote:

> Greetings,
>
> i am trying to export a shapefile using the following command;
>
> st_write(weight.sf, "weight.shp, driver="ESRI Shapefile")
>
> But getting the following warning;
>
> 1: In abbreviate_shapefile_names(obj) :
>   Field names abbreviated for ESRI Shapefile driver
>
> The variable names have the following pattern; "weight_2010" but
> become like this "w__201". How can I preserve field/variable names? Thank
> you.
>
> Best regards,
>
> Milu
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From b|@|ev||@t @end|ng |rom gm@||@com  Sun Apr 19 17:49:35 2020
From: b|@|ev||@t @end|ng |rom gm@||@com (=?UTF-8?Q?Bede-Fazekas_=c3=81kos?=)
Date: Sun, 19 Apr 2020 17:49:35 +0200
Subject: [R-sig-Geo] Field names abbreviated for ESRI Shapefile driver
In-Reply-To: <CAMLwc7Mj6AigUjarsi28MMDH6vG0yXXLewDO_bZXEKdbCGFwog@mail.gmail.com>
References: <CAMLwc7Mj6AigUjarsi28MMDH6vG0yXXLewDO_bZXEKdbCGFwog@mail.gmail.com>
Message-ID: <0c76ab08-3300-9e2a-b11e-ba46acfff12e@gmail.com>

Dear Milu,
ESRI shapefile format cannot contain field names longer than 10 
characters. So you should do one of the following options:
- choose other file format when saving the data,
- rename the columns of the sf object before saving.

HTH,
?kos Bede-Fazekas
Hungarian Academy of Sciences


2020.04.19. 17:37 keltez?ssel, Miluji Sb ?rta:
> Greetings,
>
> i am trying to export a shapefile using the following command;
>
> st_write(weight.sf, "weight.shp, driver="ESRI Shapefile")
>
> But getting the following warning;
>
> 1: In abbreviate_shapefile_names(obj) :
>    Field names abbreviated for ESRI Shapefile driver
>
> The variable names have the following pattern; "weight_2010" but
> become like this "w__201". How can I preserve field/variable names? Thank
> you.
>
> Best regards,
>
> Milu
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From m||uj|@b @end|ng |rom gm@||@com  Sun Apr 19 18:44:53 2020
From: m||uj|@b @end|ng |rom gm@||@com (Miluji Sb)
Date: Sun, 19 Apr 2020 18:44:53 +0200
Subject: [R-sig-Geo] Field names abbreviated for ESRI Shapefile driver
In-Reply-To: <0c76ab08-3300-9e2a-b11e-ba46acfff12e@gmail.com>
References: <CAMLwc7Mj6AigUjarsi28MMDH6vG0yXXLewDO_bZXEKdbCGFwog@mail.gmail.com>
 <0c76ab08-3300-9e2a-b11e-ba46acfff12e@gmail.com>
Message-ID: <CAMLwc7N7Pv1VMrJYhuijDRYwd+11+eCfnVVr4VN12Rovp-HX6Q@mail.gmail.com>

Dear Akos and Joe,

Thank you for your kind replies and the information. I did not know about
the character limit, it is easier for me to shorten the variable names.
Thank you again and stay safe.

Best,

Milu

On Sun, Apr 19, 2020 at 5:58 PM Bede-Fazekas ?kos <bfalevlist at gmail.com>
wrote:

> Dear Milu,
> ESRI shapefile format cannot contain field names longer than 10
> characters. So you should do one of the following options:
> - choose other file format when saving the data,
> - rename the columns of the sf object before saving.
>
> HTH,
> ?kos Bede-Fazekas
> Hungarian Academy of Sciences
>
>
> 2020.04.19. 17:37 keltez?ssel, Miluji Sb ?rta:
> > Greetings,
> >
> > i am trying to export a shapefile using the following command;
> >
> > st_write(weight.sf, "weight.shp, driver="ESRI Shapefile")
> >
> > But getting the following warning;
> >
> > 1: In abbreviate_shapefile_names(obj) :
> >    Field names abbreviated for ESRI Shapefile driver
> >
> > The variable names have the following pattern; "weight_2010" but
> > become like this "w__201". How can I preserve field/variable names? Thank
> > you.
> >
> > Best regards,
> >
> > Milu
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From jmorg@n3 @end|ng |rom uw|@edu  Tue Apr 21 15:33:17 2020
From: jmorg@n3 @end|ng |rom uw|@edu (John Morgan)
Date: Tue, 21 Apr 2020 08:33:17 -0500
Subject: [R-sig-Geo] Parcel scale or aggregation
Message-ID: <CACuqOh4E5+bfOUxmpsEi0FDuYr_HfPDUt5Wis1XZ6GBRgTu7Qw@mail.gmail.com>

Hello, I am working on preparing data for to run in a spatial
autoregression model (probably SEM). You are one of the most well
grounded people I am aware of in this type of methodology. I am hoping you can
help me with a simple question.

My question is this: we have the data at the scale of the parcel (or
household) and there are a couple of hounded thousand records across the
size of a large metropolitan area. When feeding the data into the
model, is there
a reason/requirement to aggregate our data variable to some boundary scale
such as a city block? Or is it ok to keep it at the parcel scale? We are
interested in analyzing characteristics at e.g. household level similar to
a hedonic model.

Thanks for any feedback.

	[[alternative HTML version deleted]]


From dexter@|ocke @end|ng |rom gm@||@com  Tue Apr 21 16:59:27 2020
From: dexter@|ocke @end|ng |rom gm@||@com (Dexter Locke)
Date: Tue, 21 Apr 2020 10:59:27 -0400
Subject: [R-sig-Geo] Parcel scale or aggregation
In-Reply-To: <CACuqOh4E5+bfOUxmpsEi0FDuYr_HfPDUt5Wis1XZ6GBRgTu7Qw@mail.gmail.com>
References: <CACuqOh4E5+bfOUxmpsEi0FDuYr_HfPDUt5Wis1XZ6GBRgTu7Qw@mail.gmail.com>
Message-ID: <CAA=SVwEjynWrbuCfBas8S4sucfWS86Dyrm8Kj8RLS=QkyU6Fww@mail.gmail.com>

Hello.

This is more of a research design question than a spatial analysis question.

If you research question pertains to parcels and you have parcel data, then
why aggregate?

Neighborhood-level attributes can be important. They can be included by
attributing parcels with their neighborhood characteristics, with random
effects at the neighborhood scale, among other techniques.

The chosen method depends on the research questions.

-Dexter



On Tue, Apr 21, 2020 at 9:34 AM John Morgan <jmorgan3 at uwf.edu> wrote:

> Hello, I am working on preparing data for to run in a spatial
> autoregression model (probably SEM). You are one of the most well
> grounded people I am aware of in this type of methodology. I am hoping you
> can
> help me with a simple question.
>
> My question is this: we have the data at the scale of the parcel (or
> household) and there are a couple of hounded thousand records across the
> size of a large metropolitan area. When feeding the data into the
> model, is there
> a reason/requirement to aggregate our data variable to some boundary scale
> such as a city block? Or is it ok to keep it at the parcel scale? We are
> interested in analyzing characteristics at e.g. household level similar to
> a hedonic model.
>
> Thanks for any feedback.
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From jmorg@n3 @end|ng |rom uw|@edu  Tue Apr 21 17:23:32 2020
From: jmorg@n3 @end|ng |rom uw|@edu (derek)
Date: Tue, 21 Apr 2020 10:23:32 -0500
Subject: [R-sig-Geo] Parcel scale or aggregation
In-Reply-To: <CAA=SVwEjynWrbuCfBas8S4sucfWS86Dyrm8Kj8RLS=QkyU6Fww@mail.gmail.com>
References: <CACuqOh4E5+bfOUxmpsEi0FDuYr_HfPDUt5Wis1XZ6GBRgTu7Qw@mail.gmail.com>
 <CAA=SVwEjynWrbuCfBas8S4sucfWS86Dyrm8Kj8RLS=QkyU6Fww@mail.gmail.com>
Message-ID: <20bc9399-e7f3-251d-9605-6129ad6454e2@uwf.edu>

Dexter.

Your point that it is more of a research design question is well taken, 
but I figured if anyone would know it would be a group of folks using R 
for spatial analysis. The research question does pertain to the parcels 
and the explanatory variables will be computed at that scale. I just 
didn't know if that matter per say for functions like sarlm() or or 
gmerrorsar(). It sounds like not so much as they will be treat the same 
as rows in a data frame regardless of what scale they are at.

Thanks,

Derek

On 4/21/2020 9:59 AM, Dexter Locke wrote:
> Hello.
>
> This is more of a research design question?than a spatial 
> analysis?question.
>
> If you research question pertains to parcels and you have parcel data, 
> then why aggregate?
>
> Neighborhood-level attributes can be important. They can be 
> included?by attributing parcels with their neighborhood 
> characteristics, with random effects at the neighborhood scale, among 
> other techniques.
>
> The chosen method depends on the research?questions.
>
> -Dexter
>
>
>
> On Tue, Apr 21, 2020 at 9:34 AM John Morgan <jmorgan3 at uwf.edu 
> <mailto:jmorgan3 at uwf.edu>> wrote:
>
>     Hello, I am working on preparing data for to run in a spatial
>     autoregression model (probably SEM). You are one of the most well
>     grounded people I am aware of in this type of methodology. I am
>     hoping you can
>     help me with a simple question.
>
>     My question is this: we have the data at the scale of the parcel (or
>     household) and there are a couple of hounded thousand records
>     across the
>     size of a large metropolitan area. When feeding the data into the
>     model, is there
>     a reason/requirement to aggregate our data variable to some
>     boundary scale
>     such as a city block? Or is it ok to keep it at the parcel scale?
>     We are
>     interested in analyzing characteristics at e.g. household level
>     similar to
>     a hedonic model.
>
>     Thanks for any feedback.
>
>     ? ? ? ? [[alternative HTML version deleted]]
>
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>     <https://stat.ethz.ch/mailman/listinfo/r-sig-geo>
>
-- 
John Derek Morgan, Ph.D., GISP
Assistant Professor of GIS
Earth & Environmental Sciences
University of West Florida
https://uwf.edu/go/gis/
https://pages.uwf.edu/jmorgan3
>>>Chat directly with me via Google Chat our Hangout<<<


	[[alternative HTML version deleted]]


From dexter@|ocke @end|ng |rom gm@||@com  Tue Apr 21 17:28:48 2020
From: dexter@|ocke @end|ng |rom gm@||@com (Dexter Locke)
Date: Tue, 21 Apr 2020 11:28:48 -0400
Subject: [R-sig-Geo] Parcel scale or aggregation
In-Reply-To: <20bc9399-e7f3-251d-9605-6129ad6454e2@uwf.edu>
References: <CACuqOh4E5+bfOUxmpsEi0FDuYr_HfPDUt5Wis1XZ6GBRgTu7Qw@mail.gmail.com>
 <CAA=SVwEjynWrbuCfBas8S4sucfWS86Dyrm8Kj8RLS=QkyU6Fww@mail.gmail.com>
 <20bc9399-e7f3-251d-9605-6129ad6454e2@uwf.edu>
Message-ID: <CAA=SVwE02mPQror51ZAo_TLiTMVgNEexF+1Bx5XNHArtnu=YXg@mail.gmail.com>

Yes, those functions should work provided your data are shaped correctly
(they sound like they are).

I imagine the results will be sensitive the chosen spatial weights matrix.
That choice indirectly gets to your point about aggregation. Some types of
weights may include spatial neighbors that might assimilate neighborhoods
or blocks.

Good luck!

-Dexter
http://dexterlocke.com/


On Tue, Apr 21, 2020 at 11:23 AM derek <jmorgan3 at uwf.edu> wrote:

> Dexter.
>
> Your point that it is more of a research design question is well taken,
> but I figured if anyone would know it would be a group of folks using R for
> spatial analysis. The research question does pertain to the parcels and the
> explanatory variables will be computed at that scale. I just didn't know if
> that matter per say for functions like sarlm() or or gmerrorsar(). It
> sounds like not so much as they will be treat the same as rows in a data
> frame regardless of what scale they are at.
>
> Thanks,
>
> Derek
> On 4/21/2020 9:59 AM, Dexter Locke wrote:
>
> Hello.
>
> This is more of a research design question than a spatial
> analysis question.
>
> If you research question pertains to parcels and you have parcel data,
> then why aggregate?
>
> Neighborhood-level attributes can be important. They can be included by
> attributing parcels with their neighborhood characteristics, with random
> effects at the neighborhood scale, among other techniques.
>
> The chosen method depends on the research questions.
>
> -Dexter
>
>
>
> On Tue, Apr 21, 2020 at 9:34 AM John Morgan <jmorgan3 at uwf.edu> wrote:
>
>> Hello, I am working on preparing data for to run in a spatial
>> autoregression model (probably SEM). You are one of the most well
>> grounded people I am aware of in this type of methodology. I am hoping
>> you can
>> help me with a simple question.
>>
>> My question is this: we have the data at the scale of the parcel (or
>> household) and there are a couple of hounded thousand records across the
>> size of a large metropolitan area. When feeding the data into the
>> model, is there
>> a reason/requirement to aggregate our data variable to some boundary scale
>> such as a city block? Or is it ok to keep it at the parcel scale? We are
>> interested in analyzing characteristics at e.g. household level similar to
>> a hedonic model.
>>
>> Thanks for any feedback.
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
> --
> John Derek Morgan, Ph.D., GISP
> Assistant Professor of GIS
> Earth & Environmental Sciences
> University of West Floridahttps://uwf.edu/go/gis/https://pages.uwf.edu/jmorgan3
> >>>Chat directly with me via Google Chat our Hangout<<<
>
>

	[[alternative HTML version deleted]]


From r@m@n@m|@hr@10 @end|ng |rom gm@||@com  Wed Apr 22 20:21:53 2020
From: r@m@n@m|@hr@10 @end|ng |rom gm@||@com (Raman Mishra)
Date: Wed, 22 Apr 2020 23:51:53 +0530
Subject: [R-sig-Geo] Million and billion in suffix of map legend
Message-ID: <CAGmiv2+Hq4Nk1Wi7MX9euO+M-uX=zHdj+2vVW1JsHyVufttr7A@mail.gmail.com>

Dear Members,
I am plotting the population using style= "fixed" with breaks, I want my
legend to show "mn"  and "bn"  as a suffix.
 tm_fill(legend.format=list(fun=function(x) paste0(formatC(x,
digits=000000, format="big.num.abbr"), "mn")))
I tried with the above codes with tmap but could not succeed.
Please help.
Thanking you in advance.

Raman Mishra
Senior Research Scholar
International Institute for Population Sciences, Mumbai
Mobile: +91-8879317106

	[[alternative HTML version deleted]]


From dexter@|ocke @end|ng |rom gm@||@com  Fri Apr 24 15:48:20 2020
From: dexter@|ocke @end|ng |rom gm@||@com (Dexter Locke)
Date: Fri, 24 Apr 2020 09:48:20 -0400
Subject: [R-sig-Geo] credible interval for empirical Bayesian estimates of
 rates
Message-ID: <CAA=SVwGaHQeOn8yFnfds9cXPh5zd=uKSQDWesG4vYyfJkJ_8BA@mail.gmail.com>

Dear esteemed list,

I'm using spdep::EBest with family = 'binomial' for counts of events within
polygons that have an 'at risk' population. The resultant "estmm" is
'shrunk' compared to the raw rate (both given by EBest and calculated "by
hand" rate. All good there.

Using GeoDa version 1.14.0 24 August 2019 produces identical results for
its Empirical Bayesian rate. This was confirmed by plotting the EBest
output against GeoDa's rate and finding a perfect correlation along the 1
to 1 line. All good there.

Two questions:
1. How can credible intervals around these smoothed rate estimates be
calculated?
2. The spdep documentation calls this a binomial family, but the identical
results are obtained from GeoDa calls this "Poisson-Gamma" model here:
https://geodacenter.github.io/workbook/3b_rates/lab3b.html#fnref11 , so
what is actually being calculated? This question may help me answer the
first question..

Possibly the answers are addressed in the literature cited which I cannot
access right now at home without institutional library access.

Thanks for your consideration,
Dexter
http://dexterlocke.com/

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Fri Apr 24 16:22:56 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 24 Apr 2020 16:22:56 +0200
Subject: [R-sig-Geo] 
 credible interval for empirical Bayesian estimates of rates
In-Reply-To: <CAA=SVwGaHQeOn8yFnfds9cXPh5zd=uKSQDWesG4vYyfJkJ_8BA@mail.gmail.com>
References: <CAA=SVwGaHQeOn8yFnfds9cXPh5zd=uKSQDWesG4vYyfJkJ_8BA@mail.gmail.com>
Message-ID: <alpine.LFD.2.21.2004241608180.2471544@reclus.nhh.no>

On Fri, 24 Apr 2020, Dexter Locke wrote:

> Dear esteemed list,
>
> I'm using spdep::EBest with family = 'binomial' for counts of events within
> polygons that have an 'at risk' population. The resultant "estmm" is
> 'shrunk' compared to the raw rate (both given by EBest and calculated "by
> hand" rate. All good there.
>
> Using GeoDa version 1.14.0 24 August 2019 produces identical results for
> its Empirical Bayesian rate. This was confirmed by plotting the EBest
> output against GeoDa's rate and finding a perfect correlation along the 1
> to 1 line. All good there.

Please provide a reproducible example, as this may help with answers.

>
> Two questions:
> 1. How can credible intervals around these smoothed rate estimates be
> calculated?
> 2. The spdep documentation calls this a binomial family, but the identical
> results are obtained from GeoDa calls this "Poisson-Gamma" model here:
> https://geodacenter.github.io/workbook/3b_rates/lab3b.html#fnref11 , so
> what is actually being calculated? This question may help me answer the
> first question..

No, the default family is "poisson", with "binomial" available for 
non-rare conditions following Martuzzi, implemented by Olaf 
Berke, ?spdep::EBest.

The code in spdep is easily accessible, so can be read directly. Please 
also compare with code for the EB Moran test, and with analogous code in 
the DCluster package, empbaysmooth(). Cf. ASDAR 2nd ed., ch. 10, section 
10.2, pp. 322-328. The epitools::pois.exact() function is used for CIs. 
For code and data see https://asdar-book.org/bundles2ed/dismap_bundle.zip.

>
> Possibly the answers are addressed in the literature cited which I cannot
> access right now at home without institutional library access.
>

Most institutions do have proxy or VPN access, but the code will be as 
useful. In PySAL, the code would also guide you, but even though GeoDa is 
open source, the C++ is fairly dense.

Hope this helps,

Roger

> Thanks for your consideration,
> Dexter
> http://dexterlocke.com/
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From dexter@|ocke @end|ng |rom gm@||@com  Fri Apr 24 17:18:40 2020
From: dexter@|ocke @end|ng |rom gm@||@com (Dexter Locke)
Date: Fri, 24 Apr 2020 11:18:40 -0400
Subject: [R-sig-Geo] 
 credible interval for empirical Bayesian estimates of rates
In-Reply-To: <alpine.LFD.2.21.2004241608180.2471544@reclus.nhh.no>
References: <CAA=SVwGaHQeOn8yFnfds9cXPh5zd=uKSQDWesG4vYyfJkJ_8BA@mail.gmail.com>
 <alpine.LFD.2.21.2004241608180.2471544@reclus.nhh.no>
Message-ID: <CAA=SVwFkNMVur2ChX5uXJc-XCrjFMqN_9xbc1Kz1WEJf3NMerA@mail.gmail.com>

Thanks Roger and list.

I didn't think a repex was needed because a question was: why does
spdep::EBest(counts, population, family = 'binomial') give the same
results at GeoDa's, while EBest(.. binomial) is "binomial" while GeoDa
calls that "Poisson-Gamma". GeoDa can't give use a repex (GUI) and think
this is a question about terminology. The same results were achieved with
the packages while naming the model differently - why?

Yes ?spdep::EBest directed me to the literature I'm struggling to access.
And Yes, I've been looking at the raw code and understand how the estmm is
generated.

I've been using the epitools::pois.exact() and spdep::EBest. I can compare
the point estimates from pois.exact to those provided by EBest, but I'd
like to graph side by side their credible / confidence intervals.

Its this last part on the credible intervals I'm interested in. How to get
credible intervals around estmm? This is my main question.

ASDAR is a reference I'm using all the time. Thanks for that gem.

DCluster::empbaysmooth also does not provide a credible interval, either.

-Dexter
http://dexterlocke.com/



On Fri, Apr 24, 2020 at 10:23 AM Roger Bivand <Roger.Bivand at nhh.no> wrote:

> On Fri, 24 Apr 2020, Dexter Locke wrote:
>
> > Dear esteemed list,
> >
> > I'm using spdep::EBest with family = 'binomial' for counts of events
> within
> > polygons that have an 'at risk' population. The resultant "estmm" is
> > 'shrunk' compared to the raw rate (both given by EBest and calculated "by
> > hand" rate. All good there.
> >
> > Using GeoDa version 1.14.0 24 August 2019 produces identical results for
> > its Empirical Bayesian rate. This was confirmed by plotting the EBest
> > output against GeoDa's rate and finding a perfect correlation along the 1
> > to 1 line. All good there.
>
> Please provide a reproducible example, as this may help with answers.
>
> >
> > Two questions:
> > 1. How can credible intervals around these smoothed rate estimates be
> > calculated?
> > 2. The spdep documentation calls this a binomial family, but the
> identical
> > results are obtained from GeoDa calls this "Poisson-Gamma" model here:
> > https://geodacenter.github.io/workbook/3b_rates/lab3b.html#fnref11 , so
> > what is actually being calculated? This question may help me answer the
> > first question..
>
> No, the default family is "poisson", with "binomial" available for
> non-rare conditions following Martuzzi, implemented by Olaf
> Berke, ?spdep::EBest.
>
> The code in spdep is easily accessible, so can be read directly. Please
> also compare with code for the EB Moran test, and with analogous code in
> the DCluster package, empbaysmooth(). Cf. ASDAR 2nd ed., ch. 10, section
> 10.2, pp. 322-328. The epitools::pois.exact() function is used for CIs.
> For code and data see https://asdar-book.org/bundles2ed/dismap_bundle.zip.
>
> >
> > Possibly the answers are addressed in the literature cited which I cannot
> > access right now at home without institutional library access.
> >
>
> Most institutions do have proxy or VPN access, but the code will be as
> useful. In PySAL, the code would also guide you, but even though GeoDa is
> open source, the C++ is fairly dense.
>
> Hope this helps,
>
> Roger
>
> > Thanks for your consideration,
> > Dexter
> > http://dexterlocke.com/
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>

	[[alternative HTML version deleted]]


From bunn@ @end|ng |rom wwu@edu  Fri Apr 24 18:36:15 2020
From: bunn@ @end|ng |rom wwu@edu (Andy Bunn)
Date: Fri, 24 Apr 2020 16:36:15 +0000
Subject: [R-sig-Geo] Predicting TPS from fields onto SpatialPixelsDataFrame
 object
Message-ID: <B21E1002-B5CB-461B-8508-D9E0C32A708A@wwu.edu>

Hi all, I'm used to using?gstat?for kriging surfaces from either?sp?or?sf?and?stars?objects. E.g., following the workflow below using?meuse?and?meuse.grid. I'm curious how I can use?Tps?in the?fields?library. Given the?zincTPSModel?object below, how can I predict it onto?meuse.grid? Thanks in advance, A

library(sp)
library(gstat)
library(fields)

# set up data
data(meuse)
data(meuse.grid)
meuse$logZinc <- log(meuse$zinc)
coordinates(meuse) <- ~x+y
proj4string(meuse) <- CRS("+init=epsg:28992")
coordinates(meuse.grid) <- ~x+y
proj4string(meuse.grid) <- CRS("+init=epsg:28992")
meuse.grid <- as(meuse.grid,"SpatialPixelsDataFrame")

# kriging
zincVar <- variogram(logZinc~1, meuse)
zincVar <- variogram(logZinc~1, meuse)
zincModel <- vgm(psill=0.6, model="Sph", range=750, nugget=0.05)
zincFit <- fit.variogram(object = zincVar, model = zincModel)
plot(zincVar,model=zincModel,pch=20,cex=1.5,col="black",
     ylab=expression("Semivariance ("*gamma*")"),
     xlab="Distance (m)", main = "Zinc concentrations (log(ppm))")
zincKrige <- krige(formula = logZinc~1, locations = meuse, 
                   newdata = meuse.grid, model = zincFit)
spplot(zincKrige,"var1.pred")

# thin plate spline
zincTPSModel <- Tps(coordinates(meuse), meuse$logZinc)
# predict onto meuse.grid?


From @n@|@@|@doy @end|ng |rom ep||@ch  Fri Apr 24 20:00:12 2020
From: @n@|@@|@doy @end|ng |rom ep||@ch (=?ISO-8859-1?Q?Ana=EFs?= Ladoy)
Date: Fri, 24 Apr 2020 20:00:12 +0200
Subject: [R-sig-Geo] Inference of local Gi*
Message-ID: <a905fe5f78a5ec9f5ffa26a27c421543e864fa32.camel@epfl.ch>

Dear list members,

I'm currently working on a point dataset, from which I want to conduct
a Hot Spot Analysis with local Gi* statistics (Getis-Ord).

I'm trying to find a way of computing its significance. I see two ways
of computing significance in this case:

1) Compare the obtained local Gi from spdep::localG to a normal
distribution. But here I have several questions :
a) In my first case study (BMI value of 15 000 participants in a cohort
study), the distribution of local Gi is far from normal (it is bimodal
with a mode around very negative values and a mode around 0). However,
I do need a normal distribution of Gi in order to compare it with a
normal distribution, right? Or am I missing something here? What should
I do in this case?
b) In my second case study (Years of life lost for 30 000 individuals),
the distribution of Gi returned by spdep::localG is approximately
normal but the standard deviation is far from 1. In fact, in
spdep::localG, the Gi values are supposedly standardized (from what I
understood using an analytical mean and variance). Should I use these
to compare to a normal distribution, or should I use raw G values
(using return_internals=TRUE) and standardize them with the observed
mean and variance of Gi? Does it cause a problem that my observed
variance does not match the analytical variance?

2) Compute permutations
However this is not implemented in R for localG. I tried using PySAL
but the initial file is big and the weight file is huge, and my
computer crashes. Any thoughts to solve this issue?

Thank you for any feedback.
Kind regards,
Ana?s

--
Ana?s Ladoy
PhD student, Laboratory of Geographic Information Systems, Swiss
Federal Institute of Technology in Lausanne (EPFL), Switzerland.


From Roger@B|v@nd @end|ng |rom nhh@no  Fri Apr 24 21:04:53 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 24 Apr 2020 21:04:53 +0200
Subject: [R-sig-Geo] 
 credible interval for empirical Bayesian estimates of rates
In-Reply-To: <CAA=SVwFkNMVur2ChX5uXJc-XCrjFMqN_9xbc1Kz1WEJf3NMerA@mail.gmail.com>
References: <CAA=SVwGaHQeOn8yFnfds9cXPh5zd=uKSQDWesG4vYyfJkJ_8BA@mail.gmail.com>
 <alpine.LFD.2.21.2004241608180.2471544@reclus.nhh.no>
 <CAA=SVwFkNMVur2ChX5uXJc-XCrjFMqN_9xbc1Kz1WEJf3NMerA@mail.gmail.com>
Message-ID: <alpine.LFD.2.21.2004242019510.3034030@reclus.nhh.no>

On Fri, 24 Apr 2020, Dexter Locke wrote:

> Thanks Roger and list.
>
> I didn't think a repex was needed because a question was: why does
> spdep::EBest(counts, population, family = 'binomial') give the same
> results at GeoDa's, while EBest(.. binomial) is "binomial" while GeoDa
> calls that "Poisson-Gamma". GeoDa can't give use a repex (GUI) and think
> this is a question about terminology. The same results were achieved with
> the packages while naming the model differently - why?

Reproducible example:

auckland <- st_read(system.file("shapes/auckland.shp",
   package="spData")[1], quiet=TRUE)
res <- EBest(auckland$M77_85, 9*auckland$Und5_81)
res0 <- EBest(auckland$M77_85, 9*auckland$Und5_81, family="binomial")

> summary(res$estmm)
     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
0.001487 0.002237 0.002549 0.002648 0.002968 0.004531
> summary(res0$estmm)
     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
0.001484 0.002235 0.002549 0.002648 0.002968 0.004536

After calculating Und5_81 * 9 as a new column, running GeoDa -> Map -> 
Rates-Caluculated Map -> Empirical Bayes and exporting a shapefile, in R I 
see:

> summary(auck$R_EBS)
     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
0.001487 0.002237 0.002549 0.002648 0.002968 0.004531

which is the same as the Poisson, and:

> all.equal(res$estmm, auck$R_EBS)
[1] TRUE

GeoDa is providing the same EB Poisson as EBest, isn't it? If yours 
differ, are both implementations seeing the same data?

>
> Yes ?spdep::EBest directed me to the literature I'm struggling to access.
> And Yes, I've been looking at the raw code and understand how the estmm is
> generated.
>
> I've been using the epitools::pois.exact() and spdep::EBest. I can compare
> the point estimates from pois.exact to those provided by EBest, but I'd
> like to graph side by side their credible / confidence intervals.
>
> Its this last part on the credible intervals I'm interested in. How to get
> credible intervals around estmm? This is my main question.

EBest() was written to implement Bailey & Gatrell's textbook, which did 
not provide CI, and just used the Marshall Auckland dataset. If you'd like 
to implement them, I'd welcome a contribution.

>
> ASDAR is a reference I'm using all the time. Thanks for that gem.
>
> DCluster::empbaysmooth also does not provide a credible interval, either.
>

As you see from ch. 10, CI are described for the epitools implementation. 
My feeling is that the literature moved away from simple EB rates towards 
IID RE and spatially structured RE, with relevant covariates, say like the 
classic Scottish Lip Cancer dataset, and currently CARBayes is a solid 
package among many others. Simply using base population becomes too 
unsatisfactory. PHE uses funnel plots which do have CI of a kind, to draw 
attention from small base populations: 
https://nhsrcommunity.com/blog/introduction-to-funnel-plots/ which can be 
used to adjust class intervals for mapping.

Roger

> -Dexter
> http://dexterlocke.com/
>
>
>
> On Fri, Apr 24, 2020 at 10:23 AM Roger Bivand <Roger.Bivand at nhh.no> wrote:
>
>> On Fri, 24 Apr 2020, Dexter Locke wrote:
>>
>>> Dear esteemed list,
>>>
>>> I'm using spdep::EBest with family = 'binomial' for counts of events
>> within
>>> polygons that have an 'at risk' population. The resultant "estmm" is
>>> 'shrunk' compared to the raw rate (both given by EBest and calculated "by
>>> hand" rate. All good there.
>>>
>>> Using GeoDa version 1.14.0 24 August 2019 produces identical results for
>>> its Empirical Bayesian rate. This was confirmed by plotting the EBest
>>> output against GeoDa's rate and finding a perfect correlation along the 1
>>> to 1 line. All good there.
>>
>> Please provide a reproducible example, as this may help with answers.
>>
>>>
>>> Two questions:
>>> 1. How can credible intervals around these smoothed rate estimates be
>>> calculated?
>>> 2. The spdep documentation calls this a binomial family, but the
>> identical
>>> results are obtained from GeoDa calls this "Poisson-Gamma" model here:
>>> https://geodacenter.github.io/workbook/3b_rates/lab3b.html#fnref11 , so
>>> what is actually being calculated? This question may help me answer the
>>> first question..
>>
>> No, the default family is "poisson", with "binomial" available for
>> non-rare conditions following Martuzzi, implemented by Olaf
>> Berke, ?spdep::EBest.
>>
>> The code in spdep is easily accessible, so can be read directly. Please
>> also compare with code for the EB Moran test, and with analogous code in
>> the DCluster package, empbaysmooth(). Cf. ASDAR 2nd ed., ch. 10, section
>> 10.2, pp. 322-328. The epitools::pois.exact() function is used for CIs.
>> For code and data see https://asdar-book.org/bundles2ed/dismap_bundle.zip.
>>
>>>
>>> Possibly the answers are addressed in the literature cited which I cannot
>>> access right now at home without institutional library access.
>>>
>>
>> Most institutions do have proxy or VPN access, but the code will be as
>> useful. In PySAL, the code would also guide you, but even though GeoDa is
>> open source, the C++ is fairly dense.
>>
>> Hope this helps,
>>
>> Roger
>>
>>> Thanks for your consideration,
>>> Dexter
>>> http://dexterlocke.com/
>>>
>>>       [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>> https://orcid.org/0000-0003-2392-6140
>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From Roger@B|v@nd @end|ng |rom nhh@no  Fri Apr 24 21:12:00 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Fri, 24 Apr 2020 21:12:00 +0200
Subject: [R-sig-Geo] 
 Predicting TPS from fields onto SpatialPixelsDataFrame object
In-Reply-To: <B21E1002-B5CB-461B-8508-D9E0C32A708A@wwu.edu>
References: <B21E1002-B5CB-461B-8508-D9E0C32A708A@wwu.edu>
Message-ID: <alpine.LFD.2.21.2004242111350.3034030@reclus.nhh.no>

On Fri, 24 Apr 2020, Andy Bunn wrote:

> Hi all, I'm used to using?gstat?for kriging surfaces from either?sp?or?sf?and?stars?objects. E.g., following the workflow below using?meuse?and?meuse.grid. I'm curious how I can use?Tps?in the?fields?library. Given the?zincTPSModel?object below, how can I predict it onto?meuse.grid? Thanks in advance, A
>
> library(sp)
> library(gstat)
> library(fields)
>
> # set up data
> data(meuse)
> data(meuse.grid)
> meuse$logZinc <- log(meuse$zinc)
> coordinates(meuse) <- ~x+y
> proj4string(meuse) <- CRS("+init=epsg:28992")
> coordinates(meuse.grid) <- ~x+y
> proj4string(meuse.grid) <- CRS("+init=epsg:28992")
> meuse.grid <- as(meuse.grid,"SpatialPixelsDataFrame")
>
> # kriging
> zincVar <- variogram(logZinc~1, meuse)
> zincVar <- variogram(logZinc~1, meuse)
> zincModel <- vgm(psill=0.6, model="Sph", range=750, nugget=0.05)
> zincFit <- fit.variogram(object = zincVar, model = zincModel)
> plot(zincVar,model=zincModel,pch=20,cex=1.5,col="black",
>     ylab=expression("Semivariance ("*gamma*")"),
>     xlab="Distance (m)", main = "Zinc concentrations (log(ppm))")
> zincKrige <- krige(formula = logZinc~1, locations = meuse,
>                   newdata = meuse.grid, model = zincFit)
> spplot(zincKrige,"var1.pred")
>
> # thin plate spline
> zincTPSModel <- Tps(coordinates(meuse), meuse$logZinc)
> # predict onto meuse.grid?

meuse.grid$Tps_pred <- c(predict(zincTPSModel, coordinates(meuse.grid)))
spplot(meuse.grid, "Tps_pred")

Roger

>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From dexter@|ocke @end|ng |rom gm@||@com  Fri Apr 24 22:12:18 2020
From: dexter@|ocke @end|ng |rom gm@||@com (Dexter Locke)
Date: Fri, 24 Apr 2020 16:12:18 -0400
Subject: [R-sig-Geo] 
 credible interval for empirical Bayesian estimates of rates
In-Reply-To: <alpine.LFD.2.21.2004242019510.3034030@reclus.nhh.no>
References: <CAA=SVwGaHQeOn8yFnfds9cXPh5zd=uKSQDWesG4vYyfJkJ_8BA@mail.gmail.com>
 <alpine.LFD.2.21.2004241608180.2471544@reclus.nhh.no>
 <CAA=SVwFkNMVur2ChX5uXJc-XCrjFMqN_9xbc1Kz1WEJf3NMerA@mail.gmail.com>
 <alpine.LFD.2.21.2004242019510.3034030@reclus.nhh.no>
Message-ID: <CAA=SVwEZYfBj0DsNY2JZe80v1EEoCC=sxaCLwG6gJyic0PpFpg@mail.gmail.com>

Wonderful thank you.

GeoDA and the spdep::EBest are providing the same estimates for my
datasets. Thanks for the reprex example with the GUI via ">". That is a
helpful convention I'll use in the future..

Ok great, there is not yet a CI implementation. If I can manage one I'd be
delighted to share and contribute it.

Julie Silge: https://juliasilge.com/blog/bayesian-blues/

and David Robinson
http://varianceexplained.org/r/credible_intervals_baseball/

have some suggestions that are similar to each other's (no surprise there,
they work together a lot).

Thanks for the suggestions about alternative model specifications and
including covariates.

This has been very helpful, I appreciate this list immensely,
Dexter



On Fri, Apr 24, 2020 at 3:05 PM Roger Bivand <Roger.Bivand at nhh.no> wrote:

> On Fri, 24 Apr 2020, Dexter Locke wrote:
>
> > Thanks Roger and list.
> >
> > I didn't think a repex was needed because a question was: why does
> > spdep::EBest(counts, population, family = 'binomial') give the same
> > results at GeoDa's, while EBest(.. binomial) is "binomial" while GeoDa
> > calls that "Poisson-Gamma". GeoDa can't give use a repex (GUI) and think
> > this is a question about terminology. The same results were achieved with
> > the packages while naming the model differently - why?
>
> Reproducible example:
>
> auckland <- st_read(system.file("shapes/auckland.shp",
>    package="spData")[1], quiet=TRUE)
> res <- EBest(auckland$M77_85, 9*auckland$Und5_81)
> res0 <- EBest(auckland$M77_85, 9*auckland$Und5_81, family="binomial")
>
> > summary(res$estmm)
>      Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
> 0.001487 0.002237 0.002549 0.002648 0.002968 0.004531
> > summary(res0$estmm)
>      Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
> 0.001484 0.002235 0.002549 0.002648 0.002968 0.004536
>
> After calculating Und5_81 * 9 as a new column, running GeoDa -> Map ->
> Rates-Caluculated Map -> Empirical Bayes and exporting a shapefile, in R I
> see:
>
> > summary(auck$R_EBS)
>      Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
> 0.001487 0.002237 0.002549 0.002648 0.002968 0.004531
>
> which is the same as the Poisson, and:
>
> > all.equal(res$estmm, auck$R_EBS)
> [1] TRUE
>
> GeoDa is providing the same EB Poisson as EBest, isn't it? If yours
> differ, are both implementations seeing the same data?
>
> >
> > Yes ?spdep::EBest directed me to the literature I'm struggling to access.
> > And Yes, I've been looking at the raw code and understand how the estmm
> is
> > generated.
> >
> > I've been using the epitools::pois.exact() and spdep::EBest. I can
> compare
> > the point estimates from pois.exact to those provided by EBest, but I'd
> > like to graph side by side their credible / confidence intervals.
> >
> > Its this last part on the credible intervals I'm interested in. How to
> get
> > credible intervals around estmm? This is my main question.
>
> EBest() was written to implement Bailey & Gatrell's textbook, which did
> not provide CI, and just used the Marshall Auckland dataset. If you'd like
> to implement them, I'd welcome a contribution.
>
> >
> > ASDAR is a reference I'm using all the time. Thanks for that gem.
> >
> > DCluster::empbaysmooth also does not provide a credible interval, either.
> >
>
> As you see from ch. 10, CI are described for the epitools implementation.
> My feeling is that the literature moved away from simple EB rates towards
> IID RE and spatially structured RE, with relevant covariates, say like the
> classic Scottish Lip Cancer dataset, and currently CARBayes is a solid
> package among many others. Simply using base population becomes too
> unsatisfactory. PHE uses funnel plots which do have CI of a kind, to draw
> attention from small base populations:
> https://nhsrcommunity.com/blog/introduction-to-funnel-plots/ which can be
> used to adjust class intervals for mapping.
>
> Roger
>
> > -Dexter
> > http://dexterlocke.com/
> >
> >
> >
> > On Fri, Apr 24, 2020 at 10:23 AM Roger Bivand <Roger.Bivand at nhh.no>
> wrote:
> >
> >> On Fri, 24 Apr 2020, Dexter Locke wrote:
> >>
> >>> Dear esteemed list,
> >>>
> >>> I'm using spdep::EBest with family = 'binomial' for counts of events
> >> within
> >>> polygons that have an 'at risk' population. The resultant "estmm" is
> >>> 'shrunk' compared to the raw rate (both given by EBest and calculated
> "by
> >>> hand" rate. All good there.
> >>>
> >>> Using GeoDa version 1.14.0 24 August 2019 produces identical results
> for
> >>> its Empirical Bayesian rate. This was confirmed by plotting the EBest
> >>> output against GeoDa's rate and finding a perfect correlation along
> the 1
> >>> to 1 line. All good there.
> >>
> >> Please provide a reproducible example, as this may help with answers.
> >>
> >>>
> >>> Two questions:
> >>> 1. How can credible intervals around these smoothed rate estimates be
> >>> calculated?
> >>> 2. The spdep documentation calls this a binomial family, but the
> >> identical
> >>> results are obtained from GeoDa calls this "Poisson-Gamma" model here:
> >>> https://geodacenter.github.io/workbook/3b_rates/lab3b.html#fnref11 ,
> so
> >>> what is actually being calculated? This question may help me answer the
> >>> first question..
> >>
> >> No, the default family is "poisson", with "binomial" available for
> >> non-rare conditions following Martuzzi, implemented by Olaf
> >> Berke, ?spdep::EBest.
> >>
> >> The code in spdep is easily accessible, so can be read directly. Please
> >> also compare with code for the EB Moran test, and with analogous code in
> >> the DCluster package, empbaysmooth(). Cf. ASDAR 2nd ed., ch. 10, section
> >> 10.2, pp. 322-328. The epitools::pois.exact() function is used for CIs.
> >> For code and data see
> https://asdar-book.org/bundles2ed/dismap_bundle.zip.
> >>
> >>>
> >>> Possibly the answers are addressed in the literature cited which I
> cannot
> >>> access right now at home without institutional library access.
> >>>
> >>
> >> Most institutions do have proxy or VPN access, but the code will be as
> >> useful. In PySAL, the code would also guide you, but even though GeoDa
> is
> >> open source, the C++ is fairly dense.
> >>
> >> Hope this helps,
> >>
> >> Roger
> >>
> >>> Thanks for your consideration,
> >>> Dexter
> >>> http://dexterlocke.com/
> >>>
> >>>       [[alternative HTML version deleted]]
> >>>
> >>> _______________________________________________
> >>> R-sig-Geo mailing list
> >>> R-sig-Geo at r-project.org
> >>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>>
> >>
> >> --
> >> Roger Bivand
> >> Department of Economics, Norwegian School of Economics,
> >> Helleveien 30, N-5045 Bergen, Norway.
> >> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> >> https://orcid.org/0000-0003-2392-6140
> >> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> >>
> >
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>

	[[alternative HTML version deleted]]


From jm@rt|nez19 @end|ng |rom u@@d@edu@do  Sat Apr 25 00:11:31 2020
From: jm@rt|nez19 @end|ng |rom u@@d@edu@do (Jose Ramon Martinez Batlle)
Date: Fri, 24 Apr 2020 18:11:31 -0400
Subject: [R-sig-Geo] Inference of local Gi*
In-Reply-To: <a905fe5f78a5ec9f5ffa26a27c421543e864fa32.camel@epfl.ch>
References: <a905fe5f78a5ec9f5ffa26a27c421543e864fa32.camel@epfl.ch>
Message-ID: <CAAUfc+2bhpVj-6dDzxZDTo5hSTs_PXXVt6aJj+eR8sjaY-4TYw@mail.gmail.com>

Dear Ana?s.

I am sure more experienced members will give you a better answer, but until
that I will try to help.

1) If I understood correctly, the spatial objects have 15 000 and 30 000
points in each case study, respectively. If this is the case, I am afraid
that nb objects of such large datasets surely would have an impact on the
system performance when used in subsequent tasks. The best I can suggest is
to try some sort of spatial binning if possible (e.g. hexbins), but at the
same time accounting for the modifiable areal unit problem.

2) The spdep:localG help page states that "For inference, a Bonferroni-type
test is suggested in the references, where tables of critical values may be
found". The source mentioned is free access, and can be found here:

Ord, J. K. and Getis, A. 1995 Local spatial autocorrelation statistics:
distributional issues and an application. Geographical Analysis, 27, 286?306
https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1538-4632.1995.tb00912.x

Standard measures (critical values) for selected percentiles and number of
entities, are included in Table 3 of the cited reference. Since the values
returned from localG are Z-values, you can use them to determine whether
the critical value chosen is exceeded and thus infer significant local
spatial association for each entity.

Kind regards.
Jos?

El vie., 24 abr. 2020 a las 14:00, Ana?s Ladoy (<anais.ladoy at epfl.ch>)
escribi?:

> Dear list members,
>
> I'm currently working on a point dataset, from which I want to conduct
> a Hot Spot Analysis with local Gi* statistics (Getis-Ord).
>
> I'm trying to find a way of computing its significance. I see two ways
> of computing significance in this case:
>
> 1) Compare the obtained local Gi from spdep::localG to a normal
> distribution. But here I have several questions :
> a) In my first case study (BMI value of 15 000 participants in a cohort
> study), the distribution of local Gi is far from normal (it is bimodal
> with a mode around very negative values and a mode around 0). However,
> I do need a normal distribution of Gi in order to compare it with a
> normal distribution, right? Or am I missing something here? What should
> I do in this case?
> b) In my second case study (Years of life lost for 30 000 individuals),
> the distribution of Gi returned by spdep::localG is approximately
> normal but the standard deviation is far from 1. In fact, in
> spdep::localG, the Gi values are supposedly standardized (from what I
> understood using an analytical mean and variance). Should I use these
> to compare to a normal distribution, or should I use raw G values
> (using return_internals=TRUE) and standardize them with the observed
> mean and variance of Gi? Does it cause a problem that my observed
> variance does not match the analytical variance?
>
> 2) Compute permutations
> However this is not implemented in R for localG. I tried using PySAL
> but the initial file is big and the weight file is huge, and my
> computer crashes. Any thoughts to solve this issue?
>
> Thank you for any feedback.
> Kind regards,
> Ana?s
>
> --
> Ana?s Ladoy
> PhD student, Laboratory of Geographic Information Systems, Swiss
> Federal Institute of Technology in Lausanne (EPFL), Switzerland.
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


-- 
*Jos? Ram?n Mart?nez Batlle*
*Investigador/Profesor Universidad Aut?noma de Santo Domingo (UASD)*
Correo electr?nico: jmartinez19 at uasd.edu.do
P?gina web: http://geografiafisica.org

	[[alternative HTML version deleted]]


From |o|c@dutr|eux @end|ng |rom c|r@d@|r  Sat Apr 25 17:14:58 2020
From: |o|c@dutr|eux @end|ng |rom c|r@d@|r (=?UTF-8?Q?Lo=c3=afc_Dutrieux?=)
Date: Sat, 25 Apr 2020 17:14:58 +0200
Subject: [R-sig-Geo] windowed reading raster with stars
Message-ID: <450b25eb-b47a-007d-6b34-986e24a76960@cirad.fr>

Hi everyone,

I have a large geoTiff raster file that does not fit in memory (if I do 
read_stars(file_path) I get "Error: cannot allocate vector of size 12.7 
Gb"). How can I read a spatial subset of that file.

The example below works with a toy example but not with the actual large 
dataset.

library(stars)
library(sf)

tif = system.file("tif/L7_ETMs.tif", package = "stars")
window <- read_stars(tif) %>%
     st_bbox() %>%
     st_as_sfc() %>%
     st_buffer(-2000) %>%
     st_bbox()

tif_sub <- read_stars(tif, proxy = TRUE) %>%
     st_crop(window)

plot(tif_sub)

I get the following error:

Error in x[[i]][1:-21561856, 1:146, , drop = FALSE] :
   only 0's may be mixed with negative subscripts

Kind regards,
Lo?c


From |o|c@dutr|eux @end|ng |rom c|r@d@|r  Sat Apr 25 19:15:09 2020
From: |o|c@dutr|eux @end|ng |rom c|r@d@|r (=?UTF-8?Q?Lo=c3=afc_Dutrieux?=)
Date: Sat, 25 Apr 2020 19:15:09 +0200
Subject: [R-sig-Geo] windowed reading raster with stars
In-Reply-To: <f6904b8f-2af0-32d0-3856-1cebebeea8b7@uni-muenster.de>
References: <450b25eb-b47a-007d-6b34-986e24a76960@cirad.fr>
 <6cf37147-2e8d-030e-5a10-10ebf7118560@uni-muenster.de>
 <5a9ff6e0-3250-5b8c-9ede-9b18d5d96496@cirad.fr>
 <f6904b8f-2af0-32d0-3856-1cebebeea8b7@uni-muenster.de>
Message-ID: <2b99fe36-7af0-48bd-c13c-fa309efbd57a@cirad.fr>

Thanks Edzer,
I confirm that it's working now.

Kind regards,
Lo?c

On 04/25/2020 07:05 PM, Edzer Pebesma wrote:
> See https://github.com/r-spatial/stars/issues/276
> 
> should be fixed now.
> 
> Thanks!
> 
> On 4/25/20 6:06 PM, Lo?c Dutrieux wrote:
>> Hi Edzer,
>>
>> Below an example that generates a raster with the exact same dimensions
>> and reproduces the "error". I did not manage to set raster values when
>> creating the artificial data though; it's too large to handle in memory.
>>
>> library(stars)
>> library(sf)
>> library(raster)
>>
>> file_path <- tempfile(pattern = "raster", fileext = ".tif")
>> e <- new("Extent", xmin = 15.470217297, xmax = 15.489599681, ymin =
>> 1.097371925, ymax = 1.111615391)
>> b <- brick(e, nrows=20349, ncols=27872, nl=3, crs=CRS('+proj=longlat'))
>>
>> writeRaster(b, filename = file_path, datatype='INT1U')
>>
>> window <- read_stars(file_path, proxy = TRUE) %>%
>>  ??? st_bbox() %>%
>>  ??? st_as_sfc() %>%
>>  ??? st_buffer(-0.001) %>%
>>  ??? st_bbox()
>>
>> tif_sub <- read_stars(file_path, proxy = TRUE) %>%
>>  ??? st_crop(window)
>> plot(tif_sub)
>>
>> Kind regards,
>> Lo?c
>>
>> On 04/25/2020 05:27 PM, Edzer Pebesma wrote:
>>> Hi Lo?c,
>>>
>>> could you please make an example available somehow, possibly off-list?
>>>
>>> On 4/25/20 5:14 PM, Lo?c Dutrieux wrote:
>>>> Hi everyone,
>>>>
>>>> I have a large geoTiff raster file that does not fit in memory (if I do
>>>> read_stars(file_path) I get "Error: cannot allocate vector of size 12.7
>>>> Gb"). How can I read a spatial subset of that file.
>>>>
>>>> The example below works with a toy example but not with the actual large
>>>> dataset.
>>>>
>>>> library(stars)
>>>> library(sf)
>>>>
>>>> tif = system.file("tif/L7_ETMs.tif", package = "stars")
>>>> window <- read_stars(tif) %>%
>>>>  ???? st_bbox() %>%
>>>>  ???? st_as_sfc() %>%
>>>>  ???? st_buffer(-2000) %>%
>>>>  ???? st_bbox()
>>>>
>>>> tif_sub <- read_stars(tif, proxy = TRUE) %>%
>>>>  ???? st_crop(window)
>>>>
>>>> plot(tif_sub)
>>>>
>>>> I get the following error:
>>>>
>>>> Error in x[[i]][1:-21561856, 1:146, , drop = FALSE] :
>>>>  ?? only 0's may be mixed with negative subscripts
>>>>
>>>> Kind regards,
>>>> Lo?c
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
> 


From jru85yebe @end|ng |rom hotm@||@com  Sun Apr 26 17:21:23 2020
From: jru85yebe @end|ng |rom hotm@||@com (=?utf-8?Q?Jes=C3=BAs_Rojo?=)
Date: Sun, 26 Apr 2020 17:21:23 +0200
Subject: [R-sig-Geo] Help: assign crs to RasterBrick
Message-ID: <VI1P194MB0558E097A213BB0E1680DA94B4AE0@VI1P194MB0558.EURP194.PROD.OUTLOOK.COM>

Hello everyone
I have a flipped RasterBrick without crs assigned (crs = NA):
plot(a[[100]]

I would like to fill the map and assign the correct coordinate systems, that it has been said to me to be specifically:

"+init=EPSG:3034 +proj=lcc +lat_1=35 +lat_2=65 +lat_0=50 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs?

I try to solve with the next commands for the raster library:

In a first step I have flipped the map, and it has been right with:

a <- t(flip(a, direction='y' ))

But I have problems with the assignments of the suitable crs.

crs(a) <- "+init=EPSG:3034 +proj=lcc +lat_1=35 +lat_2=65 +lat_0=50 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs?

Because although the map assigns crs = ?+init = EPSG:3034?, the map doesn?t seem georreferenced, because the starting point of the map is (0,0). My final objective is  to transform the crs to "+proj=longlat +datum=WGS84?

A <- projectRaster(a, crs = "+proj=longlat +datum=WGS84")

I will be grateful some kind of help. Do I need more additional information? Any step is wrong?
Thank you so much
Jes?s Rojo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20200426/58ab109b/attachment.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-2.tiff
Type: image/tiff
Size: 15216 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20200426/58ab109b/attachment.tiff>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.tiff
Type: image/tiff
Size: 15528 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20200426/58ab109b/attachment-0001.tiff>

From Roger@B|v@nd @end|ng |rom nhh@no  Mon Apr 27 11:04:30 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Mon, 27 Apr 2020 11:04:30 +0200
Subject: [R-sig-Geo] Inference of local Gi*
In-Reply-To: <CAAUfc+2bhpVj-6dDzxZDTo5hSTs_PXXVt6aJj+eR8sjaY-4TYw@mail.gmail.com>
References: <a905fe5f78a5ec9f5ffa26a27c421543e864fa32.camel@epfl.ch>
 <CAAUfc+2bhpVj-6dDzxZDTo5hSTs_PXXVt6aJj+eR8sjaY-4TYw@mail.gmail.com>
Message-ID: <alpine.LFD.2.21.2004270954160.4084293@reclus.nhh.no>

On Sat, 25 Apr 2020, Jose Ramon Martinez Batlle wrote:

> Dear Ana?s.
>
> I am sure more experienced members will give you a better answer, but until
> that I will try to help.
>
> 1) If I understood correctly, the spatial objects have 15 000 and 30 000
> points in each case study, respectively. If this is the case, I am afraid
> that nb objects of such large datasets surely would have an impact on the
> system performance when used in subsequent tasks. The best I can suggest is
> to try some sort of spatial binning if possible (e.g. hexbins), but at the
> same time accounting for the modifiable areal unit problem.
>
> 2) The spdep:localG help page states that "For inference, a Bonferroni-type
> test is suggested in the references, where tables of critical values may be
> found". The source mentioned is free access, and can be found here:
>
> Ord, J. K. and Getis, A. 1995 Local spatial autocorrelation statistics:
> distributional issues and an application. Geographical Analysis, 27, 286?306
> https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1538-4632.1995.tb00912.x
>
> Standard measures (critical values) for selected percentiles and number of
> entities, are included in Table 3 of the cited reference. Since the values
> returned from localG are Z-values, you can use them to determine whether
> the critical value chosen is exceeded and thus infer significant local
> spatial association for each entity.

Thanks, Jos?, you are quite correct that false discovery rate problems are 
among the main reasons why so-called "hot-spot" analyses may be very 
misleading, in appearing to give an inferential basis for apparent map 
pattern.

In our survey paper with David Wong referenced on ?localG, 
https://doi.org/10.1007/s11749-018-0599-x, we show that the analytical and 
bootstrap-based inferences are similar - the normality is related not to 
the underlying variable seen globally, but the the local behaviour of the 
statistic. For this reason, bootstrap permutation implementations are not 
included in spdep, though the code is available if need be. Please 
indicate whether users would like this code included for comparative 
purposes here or in a github issue on 
https://github.com/r-spatial/spdep/issues/.

Further, the LOSH statistic, which is a measure of local spatial 
heteroscedasticity building on local G, provides a little insight into the 
problems raised for so-called "hot-spot" analyses by variability across 
the study area in the behaviour of the variable of interest. If, for 
example, the variable of interest is influenced by a background variable 
with a spatial pattern, we will probably find "hot-spots" which look like 
the omitted background variable on a map.

While local G cannot take residuals of a linear model, local Moran's I can 
do so. For local G, we do not have exact case-by-case standard deviates; 
we do have these for local Moran's I as discussed in the article with 
David Wong, and they very typically reduce strongly the counts of 
apparently significant local statistcs even before adjusting p-values for 
FDR. Finally, only some local measures can adjust for global 
autocorrelation - unadjusted local measures also respond to the presence 
of global autocorrelation.

On balance, judicious choice of class intervals in mapping a variable of 
interest may prove more helpful than trying to present wobbly inferences 
from ESDA.

Hope this isn't too discouraging,

Roger


>
> Kind regards.
> Jos?
>
> El vie., 24 abr. 2020 a las 14:00, Ana?s Ladoy (<anais.ladoy at epfl.ch>)
> escribi?:
>
>> Dear list members,
>>
>> I'm currently working on a point dataset, from which I want to conduct
>> a Hot Spot Analysis with local Gi* statistics (Getis-Ord).
>>
>> I'm trying to find a way of computing its significance. I see two ways
>> of computing significance in this case:
>>
>> 1) Compare the obtained local Gi from spdep::localG to a normal
>> distribution. But here I have several questions :
>> a) In my first case study (BMI value of 15 000 participants in a cohort
>> study), the distribution of local Gi is far from normal (it is bimodal
>> with a mode around very negative values and a mode around 0). However,
>> I do need a normal distribution of Gi in order to compare it with a
>> normal distribution, right? Or am I missing something here? What should
>> I do in this case?
>> b) In my second case study (Years of life lost for 30 000 individuals),
>> the distribution of Gi returned by spdep::localG is approximately
>> normal but the standard deviation is far from 1. In fact, in
>> spdep::localG, the Gi values are supposedly standardized (from what I
>> understood using an analytical mean and variance). Should I use these
>> to compare to a normal distribution, or should I use raw G values
>> (using return_internals=TRUE) and standardize them with the observed
>> mean and variance of Gi? Does it cause a problem that my observed
>> variance does not match the analytical variance?
>>
>> 2) Compute permutations
>> However this is not implemented in R for localG. I tried using PySAL
>> but the initial file is big and the weight file is huge, and my
>> computer crashes. Any thoughts to solve this issue?
>>
>> Thank you for any feedback.
>> Kind regards,
>> Ana?s
>>
>> --
>> Ana?s Ladoy
>> PhD student, Laboratory of Geographic Information Systems, Swiss
>> Federal Institute of Technology in Lausanne (EPFL), Switzerland.
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From thor@ten@m@behren@ @end|ng |rom gm@||@com  Mon Apr 27 12:54:54 2020
From: thor@ten@m@behren@ @end|ng |rom gm@||@com (Thorsten Behrens)
Date: Mon, 27 Apr 2020 12:54:54 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
Message-ID: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>

Dear all,

my problem is that I want to read a big geotiff raster dataset into R 
and convert it to a matrix, which does not work.
The file is big but there is sufficient memory. I need all the data in 
the memory at the same time.

The error occurs under R 3.6.3 as well as 4.0.0 using Ubuntu 20.04 LTS 
with the latest version of the packages (see session info below) and 
256GB RAM installed.

When loading the raster dataset using rgdal (via readGDAL or 
raster::readAll) I get the follwoing error in R 4.0.0:

```
Error in rgdal::getRasterData(con, offset = offs, region.dim = reg, band 
= object at data@band) :
 ? long vectors not supported yet: memory.c:3782
```

In R 3.6.3 is is "... memory.c:3717"

However, I can load the same file with the tiff package and a file of 
the same size in the native raster package format (*.grd) with the 
raster package but again not with the rgdal package.

gdalinfo (gdalUtils) does not complain (see below). Hence, Even Rouault 
assumes the problem is related to rgdal and not gdal 
(https://github.com/OSGeo/gdal/issues/2442).

Below you find reproducible code, which generates a raster file, saves 
the two formats (.tiff and .grd) and tries to read them with the 
different packages.

Is this a known limitation? Any help is greatly appreciated!

Thanks a lot in advance!

Best wishes and stay healthy,
Thorsten



### Steps to reproduce the problem.

R code:

```
library(rgdal) # 1.4-8
library(raster) # 3.1-5
library(tiff) # 0.1-5

## generate and manipulate a big raster dataset
# - generate
rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 72000, 
0, 48000))) # all fine

# - manipulate
values(rDemTest) = 1 # all fine

# - convert
mDemTest = raster::as.matrix(rDemTest) # all fine
str(mDemTest)

## save a big dataset

# - as raster/gdal
sFileNameTiff = "BigData.tif"
writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite = TRUE, NAflag = 
-9999) # all fine

# - as raster native
sFileNameNative = "BigData.grd"
writeRaster(rDemTest, sFileNameNative, "raster", overwrite = TRUE, 
NAflag = -9999) # all fine


## load the big raster datasets with different packages and options
# - load the tiff data with the gdal package via the raster package
rDem = raster(sFileNameTiff) # all fine
extent(rDem) # all fine
mDem = raster::as.matrix(rDem) # error
rDem = readAll(rDem) # error

# - load the native raster data with the raster package
rDem = raster(sFileNameNative) # all fine
extent(rDem) # all fine
mDem = raster::as.matrix(rDem) # all fine
str(mDem)

# - load the tiff data with the tiff package
mDem = readTIFF(sFileNameTiff) # all fine
str(mDem)

# - load the tiff data with the gdal package
sfDem = readGDAL(sFileNameTiff) # error

# - load the native raster data with the gdal package
sfDem = readGDAL(sFileNameNative) # error

```


### Startup messages when rgdal is attached (requested by Roger Bivand)
 > library(rgdal)
rgdal: version: 1.4-8, (SVN revision 845)
 ?Geospatial Data Abstraction Library extensions to R successfully loaded
 ?Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
 ?Path to GDAL shared files:
 ?GDAL binary built with GEOS: TRUE
 ?Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020, [PJ_VERSION: 631]
 ?Path to PROJ.4 shared files: (autodetected)
 ?Linking to sp version: 1.4-1


### Session info
 > sessionInfo()
R version 4.0.0 (2020-04-24)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 20.04 LTS

Matrix products: default
BLAS:?? /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3

locale:
 ?[1] LC_CTYPE=de_DE.UTF-8?????? LC_NUMERIC=C LC_TIME=de_DE.UTF-8
 ?[4] LC_COLLATE=de_DE.UTF-8???? LC_MONETARY=de_DE.UTF-8 
LC_MESSAGES=de_DE.UTF-8
 ?[7] LC_PAPER=de_DE.UTF-8?????? LC_NAME=C LC_ADDRESS=C
[10] LC_TELEPHONE=C???????????? LC_MEASUREMENT=de_DE.UTF-8 
LC_IDENTIFICATION=C

attached base packages:
[1] stats???? graphics? grDevices utils???? datasets? methods base

other attached packages:
[1] gdalUtils_2.0.3.2 rgdal_1.4-8?????? tiff_0.1-5 raster_3.1-5????? 
sp_1.4-1

loaded via a namespace (and not attached):
 ?[1] compiler_4.0.0??? tools_4.0.0?????? Rcpp_1.0.4.6 R.methodsS3_1.8.0 
codetools_0.2-16
 ?[6] grid_4.0.0??????? iterators_1.0.12? foreach_1.5.0 
R.utils_2.9.2???? R.oo_1.23.0
[11] lattice_0.20-41


### gdalInfo
 > gdalinfo(sFileNameTiff)
 ?[1] "Driver: GTiff/GeoTIFF"
 ?[2] "Files: BigData.tif"
 ?[3] "Size is 72000, 48000"
 ?[4] "Origin = (0.000000000000000,48000.000000000000000)"
 ?[5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
 ?[6] "Image Structure Metadata:"
 ?[7] "? COMPRESSION=LZW"
 ?[8] "? INTERLEAVE=BAND"
 ?[9] "Corner Coordinates:"
[10] "Upper Left? (?????? 0.000,?? 48000.000) "
[11] "Lower Left? (?? 0.0000000,?? 0.0000000) "
[12] "Upper Right (?? 72000.000,?? 48000.000) "
[13] "Lower Right (?? 72000.000,?????? 0.000) "
[14] "Center????? (?? 36000.000,?? 24000.000) "
[15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
[16] "? Min=1.000 Max=1.000 "
[17] "? Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
[18] "? NoData Value=-9999"
[19] "? Metadata:"
[20] "??? STATISTICS_MAXIMUM=1"
[21] "??? STATISTICS_MEAN=nan"
[22] "??? STATISTICS_MINIMUM=1"
[23] "??? STATISTICS_STDDEV=nan"


From Roger@B|v@nd @end|ng |rom nhh@no  Mon Apr 27 14:50:36 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Mon, 27 Apr 2020 14:50:36 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
Message-ID: <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>

On Mon, 27 Apr 2020, Thorsten Behrens wrote:

> Dear all,
>
> my problem is that I want to read a big geotiff raster dataset into R and 
> convert it to a matrix, which does not work.
> The file is big but there is sufficient memory. I need all the data in the 
> memory at the same time.
>
> The error occurs under R 3.6.3 as well as 4.0.0 using Ubuntu 20.04 LTS with 
> the latest version of the packages (see session info below) and 256GB RAM 
> installed.
>
> When loading the raster dataset using rgdal (via readGDAL or raster::readAll) 
> I get the follwoing error in R 4.0.0:
>
> ```
> Error in rgdal::getRasterData(con, offset = offs, region.dim = reg, band = 
> object at data@band) :
> ? long vectors not supported yet: memory.c:3782
> ```

On a 16GB Fedora platform:

> library(raster) # 3.1-5
> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 72000, 
0,
+ 48000))) # all fine
> rDemTest
class      : RasterLayer
dimensions : 48000, 72000, 3.456e+09  (nrow, ncol, ncell)
resolution : 1, 1  (x, y)
extent     : 0, 72000, 0, 48000  (xmin, xmax, ymin, ymax)
crs        : NA

> values(rDemTest) = 1
Error: cannot allocate vector of size 25.7 Gb

So you are deceiving yourself into thinking that all is fine at this 
point. Please try to instantiate an example that can be reproduced on a 
machine with 8GB RAM.

Further note that rgdal::readGDAL() is not how you handle very large 
objects in files, and never has been. raster can handle blocks of data 
from bands in file; stars and gdalcubes can use proxy=TRUE for the same 
purpose. Why did you choose rgdal::readGDAL() when this is not its 
purpose?

You did not say how much RAM is on your platform.

Roger

>
> In R 3.6.3 is is "... memory.c:3717"
>
> However, I can load the same file with the tiff package and a file of the 
> same size in the native raster package format (*.grd) with the raster package 
> but again not with the rgdal package.
>
> gdalinfo (gdalUtils) does not complain (see below). Hence, Even Rouault 
> assumes the problem is related to rgdal and not gdal 
> (https://github.com/OSGeo/gdal/issues/2442).
>
> Below you find reproducible code, which generates a raster file, saves the 
> two formats (.tiff and .grd) and tries to read them with the different 
> packages.
>
> Is this a known limitation? Any help is greatly appreciated!
>
> Thanks a lot in advance!
>
> Best wishes and stay healthy,
> Thorsten
>
>
>
> ### Steps to reproduce the problem.
>
> R code:
>
> ```
> library(rgdal) # 1.4-8
> library(raster) # 3.1-5
> library(tiff) # 0.1-5
>
> ## generate and manipulate a big raster dataset
> # - generate
> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 72000, 0, 
> 48000))) # all fine
>
> # - manipulate
> values(rDemTest) = 1 # all fine
>
> # - convert
> mDemTest = raster::as.matrix(rDemTest) # all fine
> str(mDemTest)
>
> ## save a big dataset
>
> # - as raster/gdal
> sFileNameTiff = "BigData.tif"
> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite = TRUE, NAflag = 
> -9999) # all fine
>
> # - as raster native
> sFileNameNative = "BigData.grd"
> writeRaster(rDemTest, sFileNameNative, "raster", overwrite = TRUE, NAflag = 
> -9999) # all fine
>
>
> ## load the big raster datasets with different packages and options
> # - load the tiff data with the gdal package via the raster package
> rDem = raster(sFileNameTiff) # all fine
> extent(rDem) # all fine
> mDem = raster::as.matrix(rDem) # error
> rDem = readAll(rDem) # error
>
> # - load the native raster data with the raster package
> rDem = raster(sFileNameNative) # all fine
> extent(rDem) # all fine
> mDem = raster::as.matrix(rDem) # all fine
> str(mDem)
>
> # - load the tiff data with the tiff package
> mDem = readTIFF(sFileNameTiff) # all fine
> str(mDem)
>
> # - load the tiff data with the gdal package
> sfDem = readGDAL(sFileNameTiff) # error
>
> # - load the native raster data with the gdal package
> sfDem = readGDAL(sFileNameNative) # error
>
> ```
>
>
> ### Startup messages when rgdal is attached (requested by Roger Bivand)
>>  library(rgdal)
> rgdal: version: 1.4-8, (SVN revision 845)
> ?Geospatial Data Abstraction Library extensions to R successfully loaded
> ?Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
> ?Path to GDAL shared files:
> ?GDAL binary built with GEOS: TRUE
> ?Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020, [PJ_VERSION: 631]
> ?Path to PROJ.4 shared files: (autodetected)
> ?Linking to sp version: 1.4-1
>
>
> ### Session info
>>  sessionInfo()
> R version 4.0.0 (2020-04-24)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 20.04 LTS
>
> Matrix products: default
> BLAS:?? /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3
>
> locale:
> ?[1] LC_CTYPE=de_DE.UTF-8?????? LC_NUMERIC=C LC_TIME=de_DE.UTF-8
> ?[4] LC_COLLATE=de_DE.UTF-8???? LC_MONETARY=de_DE.UTF-8 
> LC_MESSAGES=de_DE.UTF-8
> ?[7] LC_PAPER=de_DE.UTF-8?????? LC_NAME=C LC_ADDRESS=C
> [10] LC_TELEPHONE=C???????????? LC_MEASUREMENT=de_DE.UTF-8 
> LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets? methods base
>
> other attached packages:
> [1] gdalUtils_2.0.3.2 rgdal_1.4-8?????? tiff_0.1-5 raster_3.1-5????? sp_1.4-1
>
> loaded via a namespace (and not attached):
> ?[1] compiler_4.0.0??? tools_4.0.0?????? Rcpp_1.0.4.6 R.methodsS3_1.8.0 
> codetools_0.2-16
> ?[6] grid_4.0.0??????? iterators_1.0.12? foreach_1.5.0 R.utils_2.9.2???? 
> R.oo_1.23.0
> [11] lattice_0.20-41
>
>
> ### gdalInfo
>>  gdalinfo(sFileNameTiff)
> ?[1] "Driver: GTiff/GeoTIFF"
> ?[2] "Files: BigData.tif"
> ?[3] "Size is 72000, 48000"
> ?[4] "Origin = (0.000000000000000,48000.000000000000000)"
> ?[5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
> ?[6] "Image Structure Metadata:"
> ?[7] "? COMPRESSION=LZW"
> ?[8] "? INTERLEAVE=BAND"
> ?[9] "Corner Coordinates:"
> [10] "Upper Left? (?????? 0.000,?? 48000.000) "
> [11] "Lower Left? (?? 0.0000000,?? 0.0000000) "
> [12] "Upper Right (?? 72000.000,?? 48000.000) "
> [13] "Lower Right (?? 72000.000,?????? 0.000) "
> [14] "Center????? (?? 36000.000,?? 24000.000) "
> [15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
> [16] "? Min=1.000 Max=1.000 "
> [17] "? Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
> [18] "? NoData Value=-9999"
> [19] "? Metadata:"
> [20] "??? STATISTICS_MAXIMUM=1"
> [21] "??? STATISTICS_MEAN=nan"
> [22] "??? STATISTICS_MINIMUM=1"
> [23] "??? STATISTICS_STDDEV=nan"
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From thor@ten@m@behren@ @end|ng |rom gm@||@com  Mon Apr 27 15:53:52 2020
From: thor@ten@m@behren@ @end|ng |rom gm@||@com (Thorsten Behrens)
Date: Mon, 27 Apr 2020 15:53:52 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
Message-ID: <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>

Roger,

thanks a lot for your reply!

I have 256GB RAM installed (mentioned it somewhere). And there, all is 
fine when I run:

rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 72000,

values(rDemTest) = 1

When limiting the memory to about 8GB with ulimit::memory_limit(8000), 
the max size which can be allocated seems to be around 10000? x 10000px. 
In this case all tests run fine. Unfortunately it seems to be related to 
the size of the grid (48000 x 72000) and therefore the problem can't be 
reproduced on machines with 8GB RAM. For some processing steps I need 
grids of that size in the memory, which is why I have 256 GB installed.

Normally, I use the raster package and not rgdal::readGDAL(). This was 
just a desperate attempt to find the source of the problem.

This is what I use in my code:

rDem = raster(sFileNameTiff)
mDem = raster::as.matrix(rDem)

But maybe this is the same...

Any further suggestions are much appreciated!

Thanks again!

Best,

Thorsten




Am 27.04.2020 um 14:50 schrieb Roger Bivand:
> On Mon, 27 Apr 2020, Thorsten Behrens wrote:
>
>> Dear all,
>>
>> my problem is that I want to read a big geotiff raster dataset into R 
>> and convert it to a matrix, which does not work.
>> The file is big but there is sufficient memory. I need all the data 
>> in the memory at the same time.
>>
>> The error occurs under R 3.6.3 as well as 4.0.0 using Ubuntu 20.04 
>> LTS with the latest version of the packages (see session info below) 
>> and 256GB RAM installed.
>>
>> When loading the raster dataset using rgdal (via readGDAL or 
>> raster::readAll) I get the follwoing error in R 4.0.0:
>>
>> ```
>> Error in rgdal::getRasterData(con, offset = offs, region.dim = reg, 
>> band = object at data@band) :
>> ? long vectors not supported yet: memory.c:3782
>> ```
>
> On a 16GB Fedora platform:
>
>> library(raster) # 3.1-5
>> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 72000, 
> 0,
> + 48000))) # all fine
>> rDemTest
> class????? : RasterLayer
> dimensions : 48000, 72000, 3.456e+09? (nrow, ncol, ncell)
> resolution : 1, 1? (x, y)
> extent???? : 0, 72000, 0, 48000? (xmin, xmax, ymin, ymax)
> crs??????? : NA
>
>> values(rDemTest) = 1
> Error: cannot allocate vector of size 25.7 Gb
>
> So you are deceiving yourself into thinking that all is fine at this 
> point. Please try to instantiate an example that can be reproduced on 
> a machine with 8GB RAM.
>
> Further note that rgdal::readGDAL() is not how you handle very large 
> objects in files, and never has been. raster can handle blocks of data 
> from bands in file; stars and gdalcubes can use proxy=TRUE for the 
> same purpose. Why did you choose rgdal::readGDAL() when this is not 
> its purpose?
>
> You did not say how much RAM is on your platform.
>
> Roger
>
>>
>> In R 3.6.3 is is "... memory.c:3717"
>>
>> However, I can load the same file with the tiff package and a file of 
>> the same size in the native raster package format (*.grd) with the 
>> raster package but again not with the rgdal package.
>>
>> gdalinfo (gdalUtils) does not complain (see below). Hence, Even 
>> Rouault assumes the problem is related to rgdal and not gdal 
>> (https://github.com/OSGeo/gdal/issues/2442).
>>
>> Below you find reproducible code, which generates a raster file, 
>> saves the two formats (.tiff and .grd) and tries to read them with 
>> the different packages.
>>
>> Is this a known limitation? Any help is greatly appreciated!
>>
>> Thanks a lot in advance!
>>
>> Best wishes and stay healthy,
>> Thorsten
>>
>>
>>
>> ### Steps to reproduce the problem.
>>
>> R code:
>>
>> ```
>> library(rgdal) # 1.4-8
>> library(raster) # 3.1-5
>> library(tiff) # 0.1-5
>>
>> ## generate and manipulate a big raster dataset
>> # - generate
>> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 
>> 72000, 0, 48000))) # all fine
>>
>> # - manipulate
>> values(rDemTest) = 1 # all fine
>>
>> # - convert
>> mDemTest = raster::as.matrix(rDemTest) # all fine
>> str(mDemTest)
>>
>> ## save a big dataset
>>
>> # - as raster/gdal
>> sFileNameTiff = "BigData.tif"
>> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite = TRUE, 
>> NAflag = -9999) # all fine
>>
>> # - as raster native
>> sFileNameNative = "BigData.grd"
>> writeRaster(rDemTest, sFileNameNative, "raster", overwrite = TRUE, 
>> NAflag = -9999) # all fine
>>
>>
>> ## load the big raster datasets with different packages and options
>> # - load the tiff data with the gdal package via the raster package
>> rDem = raster(sFileNameTiff) # all fine
>> extent(rDem) # all fine
>> mDem = raster::as.matrix(rDem) # error
>> rDem = readAll(rDem) # error
>>
>> # - load the native raster data with the raster package
>> rDem = raster(sFileNameNative) # all fine
>> extent(rDem) # all fine
>> mDem = raster::as.matrix(rDem) # all fine
>> str(mDem)
>>
>> # - load the tiff data with the tiff package
>> mDem = readTIFF(sFileNameTiff) # all fine
>> str(mDem)
>>
>> # - load the tiff data with the gdal package
>> sfDem = readGDAL(sFileNameTiff) # error
>>
>> # - load the native raster data with the gdal package
>> sfDem = readGDAL(sFileNameNative) # error
>>
>> ```
>>
>>
>> ### Startup messages when rgdal is attached (requested by Roger Bivand)
>>> ?library(rgdal)
>> rgdal: version: 1.4-8, (SVN revision 845)
>> ?Geospatial Data Abstraction Library extensions to R successfully loaded
>> ?Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
>> ?Path to GDAL shared files:
>> ?GDAL binary built with GEOS: TRUE
>> ?Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020, [PJ_VERSION: 
>> 631]
>> ?Path to PROJ.4 shared files: (autodetected)
>> ?Linking to sp version: 1.4-1
>>
>>
>> ### Session info
>>> ?sessionInfo()
>> R version 4.0.0 (2020-04-24)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 20.04 LTS
>>
>> Matrix products: default
>> BLAS:?? /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
>> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3
>>
>> locale:
>> ?[1] LC_CTYPE=de_DE.UTF-8?????? LC_NUMERIC=C LC_TIME=de_DE.UTF-8
>> ?[4] LC_COLLATE=de_DE.UTF-8???? LC_MONETARY=de_DE.UTF-8 
>> LC_MESSAGES=de_DE.UTF-8
>> ?[7] LC_PAPER=de_DE.UTF-8?????? LC_NAME=C LC_ADDRESS=C
>> [10] LC_TELEPHONE=C???????????? LC_MEASUREMENT=de_DE.UTF-8 
>> LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] stats???? graphics? grDevices utils???? datasets? methods base
>>
>> other attached packages:
>> [1] gdalUtils_2.0.3.2 rgdal_1.4-8?????? tiff_0.1-5 raster_3.1-5????? 
>> sp_1.4-1
>>
>> loaded via a namespace (and not attached):
>> ?[1] compiler_4.0.0??? tools_4.0.0?????? Rcpp_1.0.4.6 
>> R.methodsS3_1.8.0 codetools_0.2-16
>> ?[6] grid_4.0.0??????? iterators_1.0.12? foreach_1.5.0 
>> R.utils_2.9.2???? R.oo_1.23.0
>> [11] lattice_0.20-41
>>
>>
>> ### gdalInfo
>>> ?gdalinfo(sFileNameTiff)
>> ?[1] "Driver: GTiff/GeoTIFF"
>> ?[2] "Files: BigData.tif"
>> ?[3] "Size is 72000, 48000"
>> ?[4] "Origin = (0.000000000000000,48000.000000000000000)"
>> ?[5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
>> ?[6] "Image Structure Metadata:"
>> ?[7] "? COMPRESSION=LZW"
>> ?[8] "? INTERLEAVE=BAND"
>> ?[9] "Corner Coordinates:"
>> [10] "Upper Left? (?????? 0.000,?? 48000.000) "
>> [11] "Lower Left? (?? 0.0000000,?? 0.0000000) "
>> [12] "Upper Right (?? 72000.000,?? 48000.000) "
>> [13] "Lower Right (?? 72000.000,?????? 0.000) "
>> [14] "Center????? (?? 36000.000,?? 24000.000) "
>> [15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
>> [16] "? Min=1.000 Max=1.000 "
>> [17] "? Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
>> [18] "? NoData Value=-9999"
>> [19] "? Metadata:"
>> [20] "??? STATISTICS_MAXIMUM=1"
>> [21] "??? STATISTICS_MEAN=nan"
>> [22] "??? STATISTICS_MINIMUM=1"
>> [23] "??? STATISTICS_STDDEV=nan"
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>>
>


From md@umner @end|ng |rom gm@||@com  Mon Apr 27 15:58:40 2020
From: md@umner @end|ng |rom gm@||@com (Michael Sumner)
Date: Mon, 27 Apr 2020 23:58:40 +1000
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
Message-ID: <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>

Try stars it worked for me on a test

On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens, <thorsten.m.behrens at gmail.com>
wrote:

> Roger,
>
> thanks a lot for your reply!
>
> I have 256GB RAM installed (mentioned it somewhere). And there, all is
> fine when I run:
>
> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 72000,
>
> values(rDemTest) = 1
>
> When limiting the memory to about 8GB with ulimit::memory_limit(8000),
> the max size which can be allocated seems to be around 10000  x 10000px.
> In this case all tests run fine. Unfortunately it seems to be related to
> the size of the grid (48000 x 72000) and therefore the problem can't be
> reproduced on machines with 8GB RAM. For some processing steps I need
> grids of that size in the memory, which is why I have 256 GB installed.
>
> Normally, I use the raster package and not rgdal::readGDAL(). This was
> just a desperate attempt to find the source of the problem.
>
> This is what I use in my code:
>
> rDem = raster(sFileNameTiff)
> mDem = raster::as.matrix(rDem)
>
> But maybe this is the same...
>
> Any further suggestions are much appreciated!
>
> Thanks again!
>
> Best,
>
> Thorsten
>
>
>
>
> Am 27.04.2020 um 14:50 schrieb Roger Bivand:
> > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
> >
> >> Dear all,
> >>
> >> my problem is that I want to read a big geotiff raster dataset into R
> >> and convert it to a matrix, which does not work.
> >> The file is big but there is sufficient memory. I need all the data
> >> in the memory at the same time.
> >>
> >> The error occurs under R 3.6.3 as well as 4.0.0 using Ubuntu 20.04
> >> LTS with the latest version of the packages (see session info below)
> >> and 256GB RAM installed.
> >>
> >> When loading the raster dataset using rgdal (via readGDAL or
> >> raster::readAll) I get the follwoing error in R 4.0.0:
> >>
> >> ```
> >> Error in rgdal::getRasterData(con, offset = offs, region.dim = reg,
> >> band = object at data@band) :
> >>   long vectors not supported yet: memory.c:3782
> >> ```
> >
> > On a 16GB Fedora platform:
> >
> >> library(raster) # 3.1-5
> >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 72000,
> > 0,
> > + 48000))) # all fine
> >> rDemTest
> > class      : RasterLayer
> > dimensions : 48000, 72000, 3.456e+09  (nrow, ncol, ncell)
> > resolution : 1, 1  (x, y)
> > extent     : 0, 72000, 0, 48000  (xmin, xmax, ymin, ymax)
> > crs        : NA
> >
> >> values(rDemTest) = 1
> > Error: cannot allocate vector of size 25.7 Gb
> >
> > So you are deceiving yourself into thinking that all is fine at this
> > point. Please try to instantiate an example that can be reproduced on
> > a machine with 8GB RAM.
> >
> > Further note that rgdal::readGDAL() is not how you handle very large
> > objects in files, and never has been. raster can handle blocks of data
> > from bands in file; stars and gdalcubes can use proxy=TRUE for the
> > same purpose. Why did you choose rgdal::readGDAL() when this is not
> > its purpose?
> >
> > You did not say how much RAM is on your platform.
> >
> > Roger
> >
> >>
> >> In R 3.6.3 is is "... memory.c:3717"
> >>
> >> However, I can load the same file with the tiff package and a file of
> >> the same size in the native raster package format (*.grd) with the
> >> raster package but again not with the rgdal package.
> >>
> >> gdalinfo (gdalUtils) does not complain (see below). Hence, Even
> >> Rouault assumes the problem is related to rgdal and not gdal
> >> (https://github.com/OSGeo/gdal/issues/2442).
> >>
> >> Below you find reproducible code, which generates a raster file,
> >> saves the two formats (.tiff and .grd) and tries to read them with
> >> the different packages.
> >>
> >> Is this a known limitation? Any help is greatly appreciated!
> >>
> >> Thanks a lot in advance!
> >>
> >> Best wishes and stay healthy,
> >> Thorsten
> >>
> >>
> >>
> >> ### Steps to reproduce the problem.
> >>
> >> R code:
> >>
> >> ```
> >> library(rgdal) # 1.4-8
> >> library(raster) # 3.1-5
> >> library(tiff) # 0.1-5
> >>
> >> ## generate and manipulate a big raster dataset
> >> # - generate
> >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
> >> 72000, 0, 48000))) # all fine
> >>
> >> # - manipulate
> >> values(rDemTest) = 1 # all fine
> >>
> >> # - convert
> >> mDemTest = raster::as.matrix(rDemTest) # all fine
> >> str(mDemTest)
> >>
> >> ## save a big dataset
> >>
> >> # - as raster/gdal
> >> sFileNameTiff = "BigData.tif"
> >> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite = TRUE,
> >> NAflag = -9999) # all fine
> >>
> >> # - as raster native
> >> sFileNameNative = "BigData.grd"
> >> writeRaster(rDemTest, sFileNameNative, "raster", overwrite = TRUE,
> >> NAflag = -9999) # all fine
> >>
> >>
> >> ## load the big raster datasets with different packages and options
> >> # - load the tiff data with the gdal package via the raster package
> >> rDem = raster(sFileNameTiff) # all fine
> >> extent(rDem) # all fine
> >> mDem = raster::as.matrix(rDem) # error
> >> rDem = readAll(rDem) # error
> >>
> >> # - load the native raster data with the raster package
> >> rDem = raster(sFileNameNative) # all fine
> >> extent(rDem) # all fine
> >> mDem = raster::as.matrix(rDem) # all fine
> >> str(mDem)
> >>
> >> # - load the tiff data with the tiff package
> >> mDem = readTIFF(sFileNameTiff) # all fine
> >> str(mDem)
> >>
> >> # - load the tiff data with the gdal package
> >> sfDem = readGDAL(sFileNameTiff) # error
> >>
> >> # - load the native raster data with the gdal package
> >> sfDem = readGDAL(sFileNameNative) # error
> >>
> >> ```
> >>
> >>
> >> ### Startup messages when rgdal is attached (requested by Roger Bivand)
> >>>  library(rgdal)
> >> rgdal: version: 1.4-8, (SVN revision 845)
> >>  Geospatial Data Abstraction Library extensions to R successfully loaded
> >>  Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
> >>  Path to GDAL shared files:
> >>  GDAL binary built with GEOS: TRUE
> >>  Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020, [PJ_VERSION:
> >> 631]
> >>  Path to PROJ.4 shared files: (autodetected)
> >>  Linking to sp version: 1.4-1
> >>
> >>
> >> ### Session info
> >>>  sessionInfo()
> >> R version 4.0.0 (2020-04-24)
> >> Platform: x86_64-pc-linux-gnu (64-bit)
> >> Running under: Ubuntu 20.04 LTS
> >>
> >> Matrix products: default
> >> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
> >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3
> >>
> >> locale:
> >>  [1] LC_CTYPE=de_DE.UTF-8       LC_NUMERIC=C LC_TIME=de_DE.UTF-8
> >>  [4] LC_COLLATE=de_DE.UTF-8     LC_MONETARY=de_DE.UTF-8
> >> LC_MESSAGES=de_DE.UTF-8
> >>  [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C LC_ADDRESS=C
> >> [10] LC_TELEPHONE=C             LC_MEASUREMENT=de_DE.UTF-8
> >> LC_IDENTIFICATION=C
> >>
> >> attached base packages:
> >> [1] stats     graphics  grDevices utils     datasets  methods base
> >>
> >> other attached packages:
> >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8       tiff_0.1-5 raster_3.1-5
> >> sp_1.4-1
> >>
> >> loaded via a namespace (and not attached):
> >>  [1] compiler_4.0.0    tools_4.0.0       Rcpp_1.0.4.6
> >> R.methodsS3_1.8.0 codetools_0.2-16
> >>  [6] grid_4.0.0        iterators_1.0.12  foreach_1.5.0
> >> R.utils_2.9.2     R.oo_1.23.0
> >> [11] lattice_0.20-41
> >>
> >>
> >> ### gdalInfo
> >>>  gdalinfo(sFileNameTiff)
> >>  [1] "Driver: GTiff/GeoTIFF"
> >>  [2] "Files: BigData.tif"
> >>  [3] "Size is 72000, 48000"
> >>  [4] "Origin = (0.000000000000000,48000.000000000000000)"
> >>  [5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
> >>  [6] "Image Structure Metadata:"
> >>  [7] "  COMPRESSION=LZW"
> >>  [8] "  INTERLEAVE=BAND"
> >>  [9] "Corner Coordinates:"
> >> [10] "Upper Left  (       0.000,   48000.000) "
> >> [11] "Lower Left  (   0.0000000,   0.0000000) "
> >> [12] "Upper Right (   72000.000,   48000.000) "
> >> [13] "Lower Right (   72000.000,       0.000) "
> >> [14] "Center      (   36000.000,   24000.000) "
> >> [15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
> >> [16] "  Min=1.000 Max=1.000 "
> >> [17] "  Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
> >> [18] "  NoData Value=-9999"
> >> [19] "  Metadata:"
> >> [20] "    STATISTICS_MAXIMUM=1"
> >> [21] "    STATISTICS_MEAN=nan"
> >> [22] "    STATISTICS_MINIMUM=1"
> >> [23] "    STATISTICS_STDDEV=nan"
> >>
> >> _______________________________________________
> >> R-sig-Geo mailing list
> >> R-sig-Geo at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>
> >>
> >
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Mon Apr 27 17:51:40 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Mon, 27 Apr 2020 17:51:40 +0200
Subject: [R-sig-Geo] R 4.0.0 Windows binaries for devel sp/rgdal
 w/GDAL3&PROJ6
Message-ID: <alpine.LFD.2.21.2004271729080.4142306@reclus.nhh.no>

Thanks to excellent work ny Jeroen Ooms, I have used rtools4 to build 
current development sp 1.4-2 (https://github.com/rsbivand/sp) and rgdal 
1.5-8, SVN rev 960 (https://r-forge.r-project.org/R/?group_id=884) Windows 
binaries using static linked GDAL 3.0.4 and PROJ 6.3.1.

So all Windows users who need to check sp/rgdal/raster workflows can now 
just locally install binaries downloaded (at your own risk, checksums 
provided) from http://spatial.nhh.no/R/rgdal/rtools4-zips. The same 
applies to package maintainers of packages degraded by migration to PROJ6+ 
and GDAL3; on Windows you now have the sp/rgdal framework against wich to 
test without needing to install PROJ or GDAL separately.

Enjoy!

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From Roger@B|v@nd @end|ng |rom nhh@no  Mon Apr 27 19:52:28 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Mon, 27 Apr 2020 17:52:28 +0000
Subject: [R-sig-Geo] R 4.0.0 Windows binaries for devel sp/rgdal
 w/GDAL3&PROJ6
In-Reply-To: <alpine.LFD.2.21.2004271729080.4142306@reclus.nhh.no>
References: <alpine.LFD.2.21.2004271729080.4142306@reclus.nhh.no>
Message-ID: <1048e2a9e355464791323228d1a3b978@nhh.no>

Just to be sure:

50983372986bf534a549f06f513bcdd1  rgdal_1.5-8.zip
191624fc6e1d24c6dd4950ef98923d86  sp_1.4-2.zip

--
Roger Bivand
Norwegian School of Economics
Helleveien 30, 5045 Bergen, Norway
Roger.Bivand at nhh.no


________________________________________
Fra: R-sig-Geo <r-sig-geo-bounces at r-project.org> p? vegne av Roger Bivand <Roger.Bivand at nhh.no>
Sendt: mandag 27. april 2020 17.51
Til: r-sig-geo at r-project.org
Emne: [R-sig-Geo] R 4.0.0 Windows binaries for devel sp/rgdal w/GDAL3&PROJ6

Thanks to excellent work ny Jeroen Ooms, I have used rtools4 to build
current development sp 1.4-2 (https://github.com/rsbivand/sp) and rgdal
1.5-8, SVN rev 960 (https://r-forge.r-project.org/R/?group_id=884) Windows
binaries using static linked GDAL 3.0.4 and PROJ 6.3.1.

So all Windows users who need to check sp/rgdal/raster workflows can now
just locally install binaries downloaded (at your own risk, checksums
provided) from http://spatial.nhh.no/R/rgdal/rtools4-zips. The same
applies to package maintainers of packages degraded by migration to PROJ6+
and GDAL3; on Windows you now have the sp/rgdal framework against wich to
test without needing to install PROJ or GDAL separately.

Enjoy!

Roger

--
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From @n@|@@|@doy @end|ng |rom ep||@ch  Mon Apr 27 23:29:49 2020
From: @n@|@@|@doy @end|ng |rom ep||@ch (=?ISO-8859-1?Q?Ana=EFs?= Ladoy)
Date: Mon, 27 Apr 2020 23:29:49 +0200
Subject: [R-sig-Geo] Inference of local Gi*
In-Reply-To: <alpine.LFD.2.21.2004270954160.4084293@reclus.nhh.no>
References: <a905fe5f78a5ec9f5ffa26a27c421543e864fa32.camel@epfl.ch>
 <CAAUfc+2bhpVj-6dDzxZDTo5hSTs_PXXVt6aJj+eR8sjaY-4TYw@mail.gmail.com>
 <alpine.LFD.2.21.2004270954160.4084293@reclus.nhh.no>
Message-ID: <461fea8902d95a8d48ca78843edd48c1a2d15777.camel@epfl.ch>

Dear Jos? and Roger, 
Thank you very much for your answers! Your detailed explanations are
really helpful and I will take your recommendations to continue my
research work.
Kind regards,Ana?s

On Mon, 2020-04-27 at 11:04 +0200, Roger Bivand wrote:
> On Sat, 25 Apr 2020, Jose Ramon Martinez Batlle wrote:
> Dear Ana?s.
> I am sure more experienced members will give you a better answer, but
> untilthat I will try to help.
> 1) If I understood correctly, the spatial objects have 15 000 and 30
> 000points in each case study, respectively. If this is the case, I am
> afraidthat nb objects of such large datasets surely would have an
> impact on thesystem performance when used in subsequent tasks. The
> best I can suggest isto try some sort of spatial binning if possible
> (e.g. hexbins), but at thesame time accounting for the modifiable
> areal unit problem.
> 2) The spdep:localG help page states that "For inference, a
> Bonferroni-typetest is suggested in the references, where tables of
> critical values may befound". The source mentioned is free access,
> and can be found here:
> Ord, J. K. and Getis, A. 1995 Local spatial autocorrelation
> statistics:distributional issues and an application. Geographical
> Analysis, 27, 286?306
> https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1538-4632.1995.tb00912.x
> Standard measures (critical values) for selected percentiles and
> number ofentities, are included in Table 3 of the cited reference.
> Since the valuesreturned from localG are Z-values, you can use them
> to determine whetherthe critical value chosen is exceeded and thus
> infer significant localspatial association for each entity.
> Thanks, Jos?, you are quite correct that false discovery rate
> problems are among the main reasons why so-called "hot-spot" analyses
> may be very misleading, in appearing to give an inferential basis for
> apparent map pattern.
> In our survey paper with David Wong referenced on ?localG, 
> https://doi.org/10.1007/s11749-018-0599-x, we show that the
> analytical and bootstrap-based inferences are similar - the normality
> is related not to the underlying variable seen globally, but the the
> local behaviour of the statistic. For this reason, bootstrap
> permutation implementations are not included in spdep, though the
> code is available if need be. Please indicate whether users would
> like this code included for comparative purposes here or in a github
> issue on https://github.com/r-spatial/spdep/issues/.
> Further, the LOSH statistic, which is a measure of local spatial
> heteroscedasticity building on local G, provides a little insight
> into the problems raised for so-called "hot-spot" analyses by
> variability across the study area in the behaviour of the variable of
> interest. If, for example, the variable of interest is influenced by
> a background variable with a spatial pattern, we will probably find
> "hot-spots" which look like the omitted background variable on a map.
> While local G cannot take residuals of a linear model, local Moran's
> I can do so. For local G, we do not have exact case-by-case standard
> deviates; we do have these for local Moran's I as discussed in the
> article with David Wong, and they very typically reduce strongly the
> counts of apparently significant local statistcs even before
> adjusting p-values for FDR. Finally, only some local measures can
> adjust for global autocorrelation - unadjusted local measures also
> respond to the presence of global autocorrelation.
> On balance, judicious choice of class intervals in mapping a variable
> of interest may prove more helpful than trying to present wobbly
> inferences from ESDA.
> Hope this isn't too discouraging,
> Roger
> 
> 
> Kind regards.Jos?
> El vie., 24 abr. 2020 a las 14:00, Ana?s Ladoy (<anais.ladoy at epfl.ch>
> )escribi?:
> Dear list members,
> I'm currently working on a point dataset, from which I want to
> conducta Hot Spot Analysis with local Gi* statistics (Getis-Ord).
> I'm trying to find a way of computing its significance. I see two
> waysof computing significance in this case:
> 1) Compare the obtained local Gi from spdep::localG to a
> normaldistribution. But here I have several questions :a) In my first
> case study (BMI value of 15 000 participants in a cohortstudy), the
> distribution of local Gi is far from normal (it is bimodalwith a mode
> around very negative values and a mode around 0). However,I do need a
> normal distribution of Gi in order to compare it with anormal
> distribution, right? Or am I missing something here? What shouldI do
> in this case?b) In my second case study (Years of life lost for 30
> 000 individuals),the distribution of Gi returned by spdep::localG is
> approximatelynormal but the standard deviation is far from 1. In
> fact, inspdep::localG, the Gi values are supposedly standardized
> (from what Iunderstood using an analytical mean and variance). Should
> I use theseto compare to a normal distribution, or should I use raw G
> values(using return_internals=TRUE) and standardize them with the
> observedmean and variance of Gi? Does it cause a problem that my
> observedvariance does not match the analytical variance?
> 2) Compute permutationsHowever this is not implemented in R for
> localG. I tried using PySALbut the initial file is big and the weight
> file is huge, and mycomputer crashes. Any thoughts to solve this
> issue?
> Thank you for any feedback.Kind regards,Ana?s
> --Ana?s LadoyPhD student, Laboratory of Geographic Information
> Systems, SwissFederal Institute of Technology in Lausanne (EPFL),
> Switzerland.
> _______________________________________________R-sig-Geo mailing
> listR-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 
> 
> 
> 
> 

	[[alternative HTML version deleted]]


From thor@ten@m@behren@ @end|ng |rom gm@||@com  Tue Apr 28 11:14:15 2020
From: thor@ten@m@behren@ @end|ng |rom gm@||@com (Thorsten Behrens)
Date: Tue, 28 Apr 2020 11:14:15 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
Message-ID: <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>

Michael,

Thanks for the hint, it seems to work! Real-world tests will follow in 
the next few days...

So it definitely seems to be a problem of rgdal. It would be great if it 
could still be solved.

Best,

Thorsten



Am 27.04.2020 um 15:58 schrieb Michael Sumner:
> Try stars it worked for me on a test
>
> On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens, 
> <thorsten.m.behrens at gmail.com <mailto:thorsten.m.behrens at gmail.com>> 
> wrote:
>
>     Roger,
>
>     thanks a lot for your reply!
>
>     I have 256GB RAM installed (mentioned it somewhere). And there,
>     all is
>     fine when I run:
>
>     rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 72000,
>
>     values(rDemTest) = 1
>
>     When limiting the memory to about 8GB with
>     ulimit::memory_limit(8000),
>     the max size which can be allocated seems to be around 10000 x
>     10000px.
>     In this case all tests run fine. Unfortunately it seems to be
>     related to
>     the size of the grid (48000 x 72000) and therefore the problem
>     can't be
>     reproduced on machines with 8GB RAM. For some processing steps I need
>     grids of that size in the memory, which is why I have 256 GB
>     installed.
>
>     Normally, I use the raster package and not rgdal::readGDAL(). This
>     was
>     just a desperate attempt to find the source of the problem.
>
>     This is what I use in my code:
>
>     rDem = raster(sFileNameTiff)
>     mDem = raster::as.matrix(rDem)
>
>     But maybe this is the same...
>
>     Any further suggestions are much appreciated!
>
>     Thanks again!
>
>     Best,
>
>     Thorsten
>
>
>
>
>     Am 27.04.2020 um 14:50 schrieb Roger Bivand:
>     > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
>     >
>     >> Dear all,
>     >>
>     >> my problem is that I want to read a big geotiff raster dataset
>     into R
>     >> and convert it to a matrix, which does not work.
>     >> The file is big but there is sufficient memory. I need all the
>     data
>     >> in the memory at the same time.
>     >>
>     >> The error occurs under R 3.6.3 as well as 4.0.0 using Ubuntu 20.04
>     >> LTS with the latest version of the packages (see session info
>     below)
>     >> and 256GB RAM installed.
>     >>
>     >> When loading the raster dataset using rgdal (via readGDAL or
>     >> raster::readAll) I get the follwoing error in R 4.0.0:
>     >>
>     >> ```
>     >> Error in rgdal::getRasterData(con, offset = offs, region.dim =
>     reg,
>     >> band = object at data@band) :
>     >> ? long vectors not supported yet: memory.c:3782
>     >> ```
>     >
>     > On a 16GB Fedora platform:
>     >
>     >> library(raster) # 3.1-5
>     >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
>     72000,
>     > 0,
>     > + 48000))) # all fine
>     >> rDemTest
>     > class????? : RasterLayer
>     > dimensions : 48000, 72000, 3.456e+09? (nrow, ncol, ncell)
>     > resolution : 1, 1? (x, y)
>     > extent???? : 0, 72000, 0, 48000? (xmin, xmax, ymin, ymax)
>     > crs??????? : NA
>     >
>     >> values(rDemTest) = 1
>     > Error: cannot allocate vector of size 25.7 Gb
>     >
>     > So you are deceiving yourself into thinking that all is fine at
>     this
>     > point. Please try to instantiate an example that can be
>     reproduced on
>     > a machine with 8GB RAM.
>     >
>     > Further note that rgdal::readGDAL() is not how you handle very
>     large
>     > objects in files, and never has been. raster can handle blocks
>     of data
>     > from bands in file; stars and gdalcubes can use proxy=TRUE for the
>     > same purpose. Why did you choose rgdal::readGDAL() when this is not
>     > its purpose?
>     >
>     > You did not say how much RAM is on your platform.
>     >
>     > Roger
>     >
>     >>
>     >> In R 3.6.3 is is "... memory.c:3717"
>     >>
>     >> However, I can load the same file with the tiff package and a
>     file of
>     >> the same size in the native raster package format (*.grd) with the
>     >> raster package but again not with the rgdal package.
>     >>
>     >> gdalinfo (gdalUtils) does not complain (see below). Hence, Even
>     >> Rouault assumes the problem is related to rgdal and not gdal
>     >> (https://github.com/OSGeo/gdal/issues/2442).
>     >>
>     >> Below you find reproducible code, which generates a raster file,
>     >> saves the two formats (.tiff and .grd) and tries to read them with
>     >> the different packages.
>     >>
>     >> Is this a known limitation? Any help is greatly appreciated!
>     >>
>     >> Thanks a lot in advance!
>     >>
>     >> Best wishes and stay healthy,
>     >> Thorsten
>     >>
>     >>
>     >>
>     >> ### Steps to reproduce the problem.
>     >>
>     >> R code:
>     >>
>     >> ```
>     >> library(rgdal) # 1.4-8
>     >> library(raster) # 3.1-5
>     >> library(tiff) # 0.1-5
>     >>
>     >> ## generate and manipulate a big raster dataset
>     >> # - generate
>     >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
>     >> 72000, 0, 48000))) # all fine
>     >>
>     >> # - manipulate
>     >> values(rDemTest) = 1 # all fine
>     >>
>     >> # - convert
>     >> mDemTest = raster::as.matrix(rDemTest) # all fine
>     >> str(mDemTest)
>     >>
>     >> ## save a big dataset
>     >>
>     >> # - as raster/gdal
>     >> sFileNameTiff = "BigData.tif"
>     >> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite = TRUE,
>     >> NAflag = -9999) # all fine
>     >>
>     >> # - as raster native
>     >> sFileNameNative = "BigData.grd"
>     >> writeRaster(rDemTest, sFileNameNative, "raster", overwrite = TRUE,
>     >> NAflag = -9999) # all fine
>     >>
>     >>
>     >> ## load the big raster datasets with different packages and options
>     >> # - load the tiff data with the gdal package via the raster package
>     >> rDem = raster(sFileNameTiff) # all fine
>     >> extent(rDem) # all fine
>     >> mDem = raster::as.matrix(rDem) # error
>     >> rDem = readAll(rDem) # error
>     >>
>     >> # - load the native raster data with the raster package
>     >> rDem = raster(sFileNameNative) # all fine
>     >> extent(rDem) # all fine
>     >> mDem = raster::as.matrix(rDem) # all fine
>     >> str(mDem)
>     >>
>     >> # - load the tiff data with the tiff package
>     >> mDem = readTIFF(sFileNameTiff) # all fine
>     >> str(mDem)
>     >>
>     >> # - load the tiff data with the gdal package
>     >> sfDem = readGDAL(sFileNameTiff) # error
>     >>
>     >> # - load the native raster data with the gdal package
>     >> sfDem = readGDAL(sFileNameNative) # error
>     >>
>     >> ```
>     >>
>     >>
>     >> ### Startup messages when rgdal is attached (requested by Roger
>     Bivand)
>     >>> ?library(rgdal)
>     >> rgdal: version: 1.4-8, (SVN revision 845)
>     >> ?Geospatial Data Abstraction Library extensions to R
>     successfully loaded
>     >> ?Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
>     >> ?Path to GDAL shared files:
>     >> ?GDAL binary built with GEOS: TRUE
>     >> ?Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020,
>     [PJ_VERSION:
>     >> 631]
>     >> ?Path to PROJ.4 shared files: (autodetected)
>     >> ?Linking to sp version: 1.4-1
>     >>
>     >>
>     >> ### Session info
>     >>> ?sessionInfo()
>     >> R version 4.0.0 (2020-04-24)
>     >> Platform: x86_64-pc-linux-gnu (64-bit)
>     >> Running under: Ubuntu 20.04 LTS
>     >>
>     >> Matrix products: default
>     >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
>     >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3
>     >>
>     >> locale:
>     >> ?[1] LC_CTYPE=de_DE.UTF-8?????? LC_NUMERIC=C LC_TIME=de_DE.UTF-8
>     >> ?[4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
>     >> LC_MESSAGES=de_DE.UTF-8
>     >> ?[7] LC_PAPER=de_DE.UTF-8?????? LC_NAME=C LC_ADDRESS=C
>     >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
>     >> LC_IDENTIFICATION=C
>     >>
>     >> attached base packages:
>     >> [1] stats???? graphics? grDevices utils???? datasets methods base
>     >>
>     >> other attached packages:
>     >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8?????? tiff_0.1-5 raster_3.1-5
>     >> sp_1.4-1
>     >>
>     >> loaded via a namespace (and not attached):
>     >> ?[1] compiler_4.0.0??? tools_4.0.0?????? Rcpp_1.0.4.6
>     >> R.methodsS3_1.8.0 codetools_0.2-16
>     >> ?[6] grid_4.0.0??????? iterators_1.0.12 foreach_1.5.0
>     >> R.utils_2.9.2???? R.oo_1.23.0
>     >> [11] lattice_0.20-41
>     >>
>     >>
>     >> ### gdalInfo
>     >>> ?gdalinfo(sFileNameTiff)
>     >> ?[1] "Driver: GTiff/GeoTIFF"
>     >> ?[2] "Files: BigData.tif"
>     >> ?[3] "Size is 72000, 48000"
>     >> ?[4] "Origin = (0.000000000000000,48000.000000000000000)"
>     >> ?[5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
>     >> ?[6] "Image Structure Metadata:"
>     >> ?[7] "? COMPRESSION=LZW"
>     >> ?[8] "? INTERLEAVE=BAND"
>     >> ?[9] "Corner Coordinates:"
>     >> [10] "Upper Left? (?????? 0.000,?? 48000.000) "
>     >> [11] "Lower Left? (?? 0.0000000,?? 0.0000000) "
>     >> [12] "Upper Right (?? 72000.000,?? 48000.000) "
>     >> [13] "Lower Right (?? 72000.000,?????? 0.000) "
>     >> [14] "Center????? (?? 36000.000,?? 24000.000) "
>     >> [15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
>     >> [16] "? Min=1.000 Max=1.000 "
>     >> [17] "? Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
>     >> [18] "? NoData Value=-9999"
>     >> [19] "? Metadata:"
>     >> [20] "??? STATISTICS_MAXIMUM=1"
>     >> [21] "??? STATISTICS_MEAN=nan"
>     >> [22] "??? STATISTICS_MINIMUM=1"
>     >> [23] "??? STATISTICS_STDDEV=nan"
>     >>
>     >> _______________________________________________
>     >> R-sig-Geo mailing list
>     >> R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>     >>
>     >>
>     >
>
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From Roger@B|v@nd @end|ng |rom nhh@no  Tue Apr 28 12:10:48 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Tue, 28 Apr 2020 12:10:48 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
Message-ID: <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>

On Tue, 28 Apr 2020, Thorsten Behrens wrote:

> Michael,
>
> Thanks for the hint, it seems to work! Real-world tests will follow in
> the next few days...
>
> So it definitely seems to be a problem of rgdal. It would be great if it
> could still be solved.

Not rgdal, but your use of it. Try looking at a sequence of

file <- system.file("pictures/SP27GTIF.TIF", package="rgdal")
obj <- GDAL.open(file)
(dims <- dim(obj))
band <- 1
data_vector <- getRasterData(obj, band)
GDAL.close(obj)
str(data_vector)

This does not create any more complicated objects, just a matrix. In some 
cases, the rows in the matrix are ordered S -> N, so it may appear the 
wrong way up.

rgdal::getRasterData() is lightweight, and has many arguments which may be 
helpful. rgdal::readGDAL() is heavyweight, creating a SpatialGridDataFrame 
object. This involves much copying of data, but the output object can be 
used for example in mapping or analysis without further conversion. My 
guess is that rgdal::getRasterData() gives you your matrix directly. Look 
at the R code to see how as.is= etc. work (files may include scale and 
offset values - recently a user was confused that scale and offset were 
"magically" applied to convert Uint16 values to degrees Kelvin on 
reading). For example, if as.is == TRUE or scale == 1 and offset == 0, no 
copying of the input matrix occurs because it is not converted. If you 
could check this route, others following this thread could also benefit; 
if I'm wrong, that would also be good to know.

Roger


>
> Best,
>
> Thorsten
>
>
>
> Am 27.04.2020 um 15:58 schrieb Michael Sumner:
>> Try stars it worked for me on a test
>>
>> On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
>> <thorsten.m.behrens at gmail.com <mailto:thorsten.m.behrens at gmail.com>>
>> wrote:
>>
>>     Roger,
>>
>>     thanks a lot for your reply!
>>
>>     I have 256GB RAM installed (mentioned it somewhere). And there,
>>     all is
>>     fine when I run:
>>
>>     rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 72000,
>>
>>     values(rDemTest) = 1
>>
>>     When limiting the memory to about 8GB with
>>     ulimit::memory_limit(8000),
>>     the max size which can be allocated seems to be around 10000 x
>>     10000px.
>>     In this case all tests run fine. Unfortunately it seems to be
>>     related to
>>     the size of the grid (48000 x 72000) and therefore the problem
>>     can't be
>>     reproduced on machines with 8GB RAM. For some processing steps I need
>>     grids of that size in the memory, which is why I have 256 GB
>>     installed.
>>
>>     Normally, I use the raster package and not rgdal::readGDAL(). This
>>     was
>>     just a desperate attempt to find the source of the problem.
>>
>>     This is what I use in my code:
>>
>>     rDem = raster(sFileNameTiff)
>>     mDem = raster::as.matrix(rDem)
>>
>>     But maybe this is the same...
>>
>>     Any further suggestions are much appreciated!
>>
>>     Thanks again!
>>
>>     Best,
>>
>>     Thorsten
>>
>>
>>
>>
>>     Am 27.04.2020 um 14:50 schrieb Roger Bivand:
>>    > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
>>    >
>>    >> Dear all,
>>    >>
>>    >> my problem is that I want to read a big geotiff raster dataset
>>     into R
>>    >> and convert it to a matrix, which does not work.
>>    >> The file is big but there is sufficient memory. I need all the
>>     data
>>    >> in the memory at the same time.
>>    >>
>>    >> The error occurs under R 3.6.3 as well as 4.0.0 using Ubuntu 20.04
>>    >> LTS with the latest version of the packages (see session info
>>     below)
>>    >> and 256GB RAM installed.
>>    >>
>>    >> When loading the raster dataset using rgdal (via readGDAL or
>>    >> raster::readAll) I get the follwoing error in R 4.0.0:
>>    >>
>>    >> ```
>>    >> Error in rgdal::getRasterData(con, offset = offs, region.dim =
>>     reg,
>>    >> band = object at data@band) :
>>    >> ? long vectors not supported yet: memory.c:3782
>>    >> ```
>>    >
>>    > On a 16GB Fedora platform:
>>    >
>>    >> library(raster) # 3.1-5
>>    >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
>>     72000,
>>    > 0,
>>    > + 48000))) # all fine
>>    >> rDemTest
>>    > class????? : RasterLayer
>>    > dimensions : 48000, 72000, 3.456e+09? (nrow, ncol, ncell)
>>    > resolution : 1, 1? (x, y)
>>    > extent???? : 0, 72000, 0, 48000? (xmin, xmax, ymin, ymax)
>>    > crs??????? : NA
>>    >
>>    >> values(rDemTest) = 1
>>    > Error: cannot allocate vector of size 25.7 Gb
>>    >
>>    > So you are deceiving yourself into thinking that all is fine at
>>     this
>>    > point. Please try to instantiate an example that can be
>>     reproduced on
>>    > a machine with 8GB RAM.
>>    >
>>    > Further note that rgdal::readGDAL() is not how you handle very
>>     large
>>    > objects in files, and never has been. raster can handle blocks
>>     of data
>>    > from bands in file; stars and gdalcubes can use proxy=TRUE for the
>>    > same purpose. Why did you choose rgdal::readGDAL() when this is not
>>    > its purpose?
>>    >
>>    > You did not say how much RAM is on your platform.
>>    >
>>    > Roger
>>    >
>>    >>
>>    >> In R 3.6.3 is is "... memory.c:3717"
>>    >>
>>    >> However, I can load the same file with the tiff package and a
>>     file of
>>    >> the same size in the native raster package format (*.grd) with the
>>    >> raster package but again not with the rgdal package.
>>    >>
>>    >> gdalinfo (gdalUtils) does not complain (see below). Hence, Even
>>    >> Rouault assumes the problem is related to rgdal and not gdal
>>    >> (https://github.com/OSGeo/gdal/issues/2442).
>>    >>
>>    >> Below you find reproducible code, which generates a raster file,
>>    >> saves the two formats (.tiff and .grd) and tries to read them with
>>    >> the different packages.
>>    >>
>>    >> Is this a known limitation? Any help is greatly appreciated!
>>    >>
>>    >> Thanks a lot in advance!
>>    >>
>>    >> Best wishes and stay healthy,
>>    >> Thorsten
>>    >>
>>    >>
>>    >>
>>    >> ### Steps to reproduce the problem.
>>    >>
>>    >> R code:
>>    >>
>>    >> ```
>>    >> library(rgdal) # 1.4-8
>>    >> library(raster) # 3.1-5
>>    >> library(tiff) # 0.1-5
>>    >>
>>    >> ## generate and manipulate a big raster dataset
>>    >> # - generate
>>    >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
>>    >> 72000, 0, 48000))) # all fine
>>    >>
>>    >> # - manipulate
>>    >> values(rDemTest) = 1 # all fine
>>    >>
>>    >> # - convert
>>    >> mDemTest = raster::as.matrix(rDemTest) # all fine
>>    >> str(mDemTest)
>>    >>
>>    >> ## save a big dataset
>>    >>
>>    >> # - as raster/gdal
>>    >> sFileNameTiff = "BigData.tif"
>>    >> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite = TRUE,
>>    >> NAflag = -9999) # all fine
>>    >>
>>    >> # - as raster native
>>    >> sFileNameNative = "BigData.grd"
>>    >> writeRaster(rDemTest, sFileNameNative, "raster", overwrite = TRUE,
>>    >> NAflag = -9999) # all fine
>>    >>
>>    >>
>>    >> ## load the big raster datasets with different packages and options
>>    >> # - load the tiff data with the gdal package via the raster package
>>    >> rDem = raster(sFileNameTiff) # all fine
>>    >> extent(rDem) # all fine
>>    >> mDem = raster::as.matrix(rDem) # error
>>    >> rDem = readAll(rDem) # error
>>    >>
>>    >> # - load the native raster data with the raster package
>>    >> rDem = raster(sFileNameNative) # all fine
>>    >> extent(rDem) # all fine
>>    >> mDem = raster::as.matrix(rDem) # all fine
>>    >> str(mDem)
>>    >>
>>    >> # - load the tiff data with the tiff package
>>    >> mDem = readTIFF(sFileNameTiff) # all fine
>>    >> str(mDem)
>>    >>
>>    >> # - load the tiff data with the gdal package
>>    >> sfDem = readGDAL(sFileNameTiff) # error
>>    >>
>>    >> # - load the native raster data with the gdal package
>>    >> sfDem = readGDAL(sFileNameNative) # error
>>    >>
>>    >> ```
>>    >>
>>    >>
>>    >> ### Startup messages when rgdal is attached (requested by Roger
>>     Bivand)
>>    >>> ?library(rgdal)
>>    >> rgdal: version: 1.4-8, (SVN revision 845)
>>    >> ?Geospatial Data Abstraction Library extensions to R
>>     successfully loaded
>>    >> ?Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
>>    >> ?Path to GDAL shared files:
>>    >> ?GDAL binary built with GEOS: TRUE
>>    >> ?Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020,
>>     [PJ_VERSION:
>>    >> 631]
>>    >> ?Path to PROJ.4 shared files: (autodetected)
>>    >> ?Linking to sp version: 1.4-1
>>    >>
>>    >>
>>    >> ### Session info
>>    >>> ?sessionInfo()
>>    >> R version 4.0.0 (2020-04-24)
>>    >> Platform: x86_64-pc-linux-gnu (64-bit)
>>    >> Running under: Ubuntu 20.04 LTS
>>    >>
>>    >> Matrix products: default
>>    >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
>>    >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3
>>    >>
>>    >> locale:
>>    >> ?[1] LC_CTYPE=de_DE.UTF-8?????? LC_NUMERIC=C LC_TIME=de_DE.UTF-8
>>    >> ?[4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
>>    >> LC_MESSAGES=de_DE.UTF-8
>>    >> ?[7] LC_PAPER=de_DE.UTF-8?????? LC_NAME=C LC_ADDRESS=C
>>    >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
>>    >> LC_IDENTIFICATION=C
>>    >>
>>    >> attached base packages:
>>    >> [1] stats???? graphics? grDevices utils???? datasets methods base
>>    >>
>>    >> other attached packages:
>>    >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8?????? tiff_0.1-5 raster_3.1-5
>>    >> sp_1.4-1
>>    >>
>>    >> loaded via a namespace (and not attached):
>>    >> ?[1] compiler_4.0.0??? tools_4.0.0?????? Rcpp_1.0.4.6
>>    >> R.methodsS3_1.8.0 codetools_0.2-16
>>    >> ?[6] grid_4.0.0??????? iterators_1.0.12 foreach_1.5.0
>>    >> R.utils_2.9.2???? R.oo_1.23.0
>>    >> [11] lattice_0.20-41
>>    >>
>>    >>
>>    >> ### gdalInfo
>>    >>> ?gdalinfo(sFileNameTiff)
>>    >> ?[1] "Driver: GTiff/GeoTIFF"
>>    >> ?[2] "Files: BigData.tif"
>>    >> ?[3] "Size is 72000, 48000"
>>    >> ?[4] "Origin = (0.000000000000000,48000.000000000000000)"
>>    >> ?[5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
>>    >> ?[6] "Image Structure Metadata:"
>>    >> ?[7] "? COMPRESSION=LZW"
>>    >> ?[8] "? INTERLEAVE=BAND"
>>    >> ?[9] "Corner Coordinates:"
>>    >> [10] "Upper Left? (?????? 0.000,?? 48000.000) "
>>    >> [11] "Lower Left? (?? 0.0000000,?? 0.0000000) "
>>    >> [12] "Upper Right (?? 72000.000,?? 48000.000) "
>>    >> [13] "Lower Right (?? 72000.000,?????? 0.000) "
>>    >> [14] "Center????? (?? 36000.000,?? 24000.000) "
>>    >> [15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
>>    >> [16] "? Min=1.000 Max=1.000 "
>>    >> [17] "? Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
>>    >> [18] "? NoData Value=-9999"
>>    >> [19] "? Metadata:"
>>    >> [20] "??? STATISTICS_MAXIMUM=1"
>>    >> [21] "??? STATISTICS_MEAN=nan"
>>    >> [22] "??? STATISTICS_MINIMUM=1"
>>    >> [23] "??? STATISTICS_STDDEV=nan"
>>    >>
>>    >> _______________________________________________
>>    >> R-sig-Geo mailing list
>>    >> R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>>    >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>    >>
>>    >>
>>    >
>>
>>     _______________________________________________
>>     R-sig-Geo mailing list
>>     R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From md@umner @end|ng |rom gm@||@com  Tue Apr 28 12:12:46 2020
From: md@umner @end|ng |rom gm@||@com (Michael Sumner)
Date: Tue, 28 Apr 2020 20:12:46 +1000
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
Message-ID: <CAAcGz9-Fihmd7jTaL0j77xy69JosNrP15rqYeQviTGrB1aFxuA@mail.gmail.com>

I reckon that's unlikely, it's also unlikely to scale or be fast enough
ever  given what rgdal is - raster will happily crop sections of it out but
I guess your workflow is to write the geotiff out in one go? You want rgdal
because you want raster?  Have you tried terra? (I forgot to mention that
one, and I haven't tried on that size GeoTIFF with it. It has its own
internal connection to GDAL).

Possibly you can instantiate a GeoTIFF with rgdal of the right size, then
write to it piecewise - but if the convenience of raster is what you're
after that's obviously no good. I think I'm missing some workflow
constraint or motivation you have, but I'm interested (it's an awkward
space).

Cheers, Mike

On Tue, Apr 28, 2020 at 7:14 PM Thorsten Behrens <
thorsten.m.behrens at gmail.com> wrote:

> Michael,
>
> Thanks for the hint, it seems to work! Real-world tests will follow in
> the next few days...
>
> So it definitely seems to be a problem of rgdal. It would be great if it
> could still be solved.
>
> Best,
>
> Thorsten
>
>
>
> Am 27.04.2020 um 15:58 schrieb Michael Sumner:
> > Try stars it worked for me on a test
> >
> > On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
> > <thorsten.m.behrens at gmail.com <mailto:thorsten.m.behrens at gmail.com>>
> > wrote:
> >
> >     Roger,
> >
> >     thanks a lot for your reply!
> >
> >     I have 256GB RAM installed (mentioned it somewhere). And there,
> >     all is
> >     fine when I run:
> >
> >     rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
> 72000,
> >
> >     values(rDemTest) = 1
> >
> >     When limiting the memory to about 8GB with
> >     ulimit::memory_limit(8000),
> >     the max size which can be allocated seems to be around 10000 x
> >     10000px.
> >     In this case all tests run fine. Unfortunately it seems to be
> >     related to
> >     the size of the grid (48000 x 72000) and therefore the problem
> >     can't be
> >     reproduced on machines with 8GB RAM. For some processing steps I need
> >     grids of that size in the memory, which is why I have 256 GB
> >     installed.
> >
> >     Normally, I use the raster package and not rgdal::readGDAL(). This
> >     was
> >     just a desperate attempt to find the source of the problem.
> >
> >     This is what I use in my code:
> >
> >     rDem = raster(sFileNameTiff)
> >     mDem = raster::as.matrix(rDem)
> >
> >     But maybe this is the same...
> >
> >     Any further suggestions are much appreciated!
> >
> >     Thanks again!
> >
> >     Best,
> >
> >     Thorsten
> >
> >
> >
> >
> >     Am 27.04.2020 um 14:50 schrieb Roger Bivand:
> >     > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
> >     >
> >     >> Dear all,
> >     >>
> >     >> my problem is that I want to read a big geotiff raster dataset
> >     into R
> >     >> and convert it to a matrix, which does not work.
> >     >> The file is big but there is sufficient memory. I need all the
> >     data
> >     >> in the memory at the same time.
> >     >>
> >     >> The error occurs under R 3.6.3 as well as 4.0.0 using Ubuntu 20.04
> >     >> LTS with the latest version of the packages (see session info
> >     below)
> >     >> and 256GB RAM installed.
> >     >>
> >     >> When loading the raster dataset using rgdal (via readGDAL or
> >     >> raster::readAll) I get the follwoing error in R 4.0.0:
> >     >>
> >     >> ```
> >     >> Error in rgdal::getRasterData(con, offset = offs, region.dim =
> >     reg,
> >     >> band = object at data@band) :
> >     >>   long vectors not supported yet: memory.c:3782
> >     >> ```
> >     >
> >     > On a 16GB Fedora platform:
> >     >
> >     >> library(raster) # 3.1-5
> >     >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
> >     72000,
> >     > 0,
> >     > + 48000))) # all fine
> >     >> rDemTest
> >     > class      : RasterLayer
> >     > dimensions : 48000, 72000, 3.456e+09  (nrow, ncol, ncell)
> >     > resolution : 1, 1  (x, y)
> >     > extent     : 0, 72000, 0, 48000  (xmin, xmax, ymin, ymax)
> >     > crs        : NA
> >     >
> >     >> values(rDemTest) = 1
> >     > Error: cannot allocate vector of size 25.7 Gb
> >     >
> >     > So you are deceiving yourself into thinking that all is fine at
> >     this
> >     > point. Please try to instantiate an example that can be
> >     reproduced on
> >     > a machine with 8GB RAM.
> >     >
> >     > Further note that rgdal::readGDAL() is not how you handle very
> >     large
> >     > objects in files, and never has been. raster can handle blocks
> >     of data
> >     > from bands in file; stars and gdalcubes can use proxy=TRUE for the
> >     > same purpose. Why did you choose rgdal::readGDAL() when this is not
> >     > its purpose?
> >     >
> >     > You did not say how much RAM is on your platform.
> >     >
> >     > Roger
> >     >
> >     >>
> >     >> In R 3.6.3 is is "... memory.c:3717"
> >     >>
> >     >> However, I can load the same file with the tiff package and a
> >     file of
> >     >> the same size in the native raster package format (*.grd) with the
> >     >> raster package but again not with the rgdal package.
> >     >>
> >     >> gdalinfo (gdalUtils) does not complain (see below). Hence, Even
> >     >> Rouault assumes the problem is related to rgdal and not gdal
> >     >> (https://github.com/OSGeo/gdal/issues/2442).
> >     >>
> >     >> Below you find reproducible code, which generates a raster file,
> >     >> saves the two formats (.tiff and .grd) and tries to read them with
> >     >> the different packages.
> >     >>
> >     >> Is this a known limitation? Any help is greatly appreciated!
> >     >>
> >     >> Thanks a lot in advance!
> >     >>
> >     >> Best wishes and stay healthy,
> >     >> Thorsten
> >     >>
> >     >>
> >     >>
> >     >> ### Steps to reproduce the problem.
> >     >>
> >     >> R code:
> >     >>
> >     >> ```
> >     >> library(rgdal) # 1.4-8
> >     >> library(raster) # 3.1-5
> >     >> library(tiff) # 0.1-5
> >     >>
> >     >> ## generate and manipulate a big raster dataset
> >     >> # - generate
> >     >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
> >     >> 72000, 0, 48000))) # all fine
> >     >>
> >     >> # - manipulate
> >     >> values(rDemTest) = 1 # all fine
> >     >>
> >     >> # - convert
> >     >> mDemTest = raster::as.matrix(rDemTest) # all fine
> >     >> str(mDemTest)
> >     >>
> >     >> ## save a big dataset
> >     >>
> >     >> # - as raster/gdal
> >     >> sFileNameTiff = "BigData.tif"
> >     >> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite = TRUE,
> >     >> NAflag = -9999) # all fine
> >     >>
> >     >> # - as raster native
> >     >> sFileNameNative = "BigData.grd"
> >     >> writeRaster(rDemTest, sFileNameNative, "raster", overwrite = TRUE,
> >     >> NAflag = -9999) # all fine
> >     >>
> >     >>
> >     >> ## load the big raster datasets with different packages and
> options
> >     >> # - load the tiff data with the gdal package via the raster
> package
> >     >> rDem = raster(sFileNameTiff) # all fine
> >     >> extent(rDem) # all fine
> >     >> mDem = raster::as.matrix(rDem) # error
> >     >> rDem = readAll(rDem) # error
> >     >>
> >     >> # - load the native raster data with the raster package
> >     >> rDem = raster(sFileNameNative) # all fine
> >     >> extent(rDem) # all fine
> >     >> mDem = raster::as.matrix(rDem) # all fine
> >     >> str(mDem)
> >     >>
> >     >> # - load the tiff data with the tiff package
> >     >> mDem = readTIFF(sFileNameTiff) # all fine
> >     >> str(mDem)
> >     >>
> >     >> # - load the tiff data with the gdal package
> >     >> sfDem = readGDAL(sFileNameTiff) # error
> >     >>
> >     >> # - load the native raster data with the gdal package
> >     >> sfDem = readGDAL(sFileNameNative) # error
> >     >>
> >     >> ```
> >     >>
> >     >>
> >     >> ### Startup messages when rgdal is attached (requested by Roger
> >     Bivand)
> >     >>>  library(rgdal)
> >     >> rgdal: version: 1.4-8, (SVN revision 845)
> >     >>  Geospatial Data Abstraction Library extensions to R
> >     successfully loaded
> >     >>  Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
> >     >>  Path to GDAL shared files:
> >     >>  GDAL binary built with GEOS: TRUE
> >     >>  Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020,
> >     [PJ_VERSION:
> >     >> 631]
> >     >>  Path to PROJ.4 shared files: (autodetected)
> >     >>  Linking to sp version: 1.4-1
> >     >>
> >     >>
> >     >> ### Session info
> >     >>>  sessionInfo()
> >     >> R version 4.0.0 (2020-04-24)
> >     >> Platform: x86_64-pc-linux-gnu (64-bit)
> >     >> Running under: Ubuntu 20.04 LTS
> >     >>
> >     >> Matrix products: default
> >     >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
> >     >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3
> >     >>
> >     >> locale:
> >     >>  [1] LC_CTYPE=de_DE.UTF-8       LC_NUMERIC=C LC_TIME=de_DE.UTF-8
> >     >>  [4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
> >     >> LC_MESSAGES=de_DE.UTF-8
> >     >>  [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C LC_ADDRESS=C
> >     >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
> >     >> LC_IDENTIFICATION=C
> >     >>
> >     >> attached base packages:
> >     >> [1] stats     graphics  grDevices utils     datasets methods base
> >     >>
> >     >> other attached packages:
> >     >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8       tiff_0.1-5 raster_3.1-5
> >     >> sp_1.4-1
> >     >>
> >     >> loaded via a namespace (and not attached):
> >     >>  [1] compiler_4.0.0    tools_4.0.0       Rcpp_1.0.4.6
> >     >> R.methodsS3_1.8.0 codetools_0.2-16
> >     >>  [6] grid_4.0.0        iterators_1.0.12 foreach_1.5.0
> >     >> R.utils_2.9.2     R.oo_1.23.0
> >     >> [11] lattice_0.20-41
> >     >>
> >     >>
> >     >> ### gdalInfo
> >     >>>  gdalinfo(sFileNameTiff)
> >     >>  [1] "Driver: GTiff/GeoTIFF"
> >     >>  [2] "Files: BigData.tif"
> >     >>  [3] "Size is 72000, 48000"
> >     >>  [4] "Origin = (0.000000000000000,48000.000000000000000)"
> >     >>  [5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
> >     >>  [6] "Image Structure Metadata:"
> >     >>  [7] "  COMPRESSION=LZW"
> >     >>  [8] "  INTERLEAVE=BAND"
> >     >>  [9] "Corner Coordinates:"
> >     >> [10] "Upper Left  (       0.000,   48000.000) "
> >     >> [11] "Lower Left  (   0.0000000,   0.0000000) "
> >     >> [12] "Upper Right (   72000.000,   48000.000) "
> >     >> [13] "Lower Right (   72000.000,       0.000) "
> >     >> [14] "Center      (   36000.000,   24000.000) "
> >     >> [15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
> >     >> [16] "  Min=1.000 Max=1.000 "
> >     >> [17] "  Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
> >     >> [18] "  NoData Value=-9999"
> >     >> [19] "  Metadata:"
> >     >> [20] "    STATISTICS_MAXIMUM=1"
> >     >> [21] "    STATISTICS_MEAN=nan"
> >     >> [22] "    STATISTICS_MINIMUM=1"
> >     >> [23] "    STATISTICS_STDDEV=nan"
> >     >>
> >     >> _______________________________________________
> >     >> R-sig-Geo mailing list
> >     >> R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
> >     >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >     >>
> >     >>
> >     >
> >
> >     _______________________________________________
> >     R-sig-Geo mailing list
> >     R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
> >     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com

	[[alternative HTML version deleted]]


From md@umner @end|ng |rom gm@||@com  Tue Apr 28 12:17:36 2020
From: md@umner @end|ng |rom gm@||@com (Michael Sumner)
Date: Tue, 28 Apr 2020 20:17:36 +1000
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
 <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
Message-ID: <CAAcGz98uQy_mheEdEErhh1HE+ODANU9EKT=f_42isyA5WPfwaA@mail.gmail.com>

Oh nice one, Roger I'd lost sight of all that churn there.

Cheers, Mike


On Tue, Apr 28, 2020 at 8:11 PM Roger Bivand <Roger.Bivand at nhh.no> wrote:

> On Tue, 28 Apr 2020, Thorsten Behrens wrote:
>
> > Michael,
> >
> > Thanks for the hint, it seems to work! Real-world tests will follow in
> > the next few days...
> >
> > So it definitely seems to be a problem of rgdal. It would be great if it
> > could still be solved.
>
> Not rgdal, but your use of it. Try looking at a sequence of
>
> file <- system.file("pictures/SP27GTIF.TIF", package="rgdal")
> obj <- GDAL.open(file)
> (dims <- dim(obj))
> band <- 1
> data_vector <- getRasterData(obj, band)
> GDAL.close(obj)
> str(data_vector)
>
> This does not create any more complicated objects, just a matrix. In some
> cases, the rows in the matrix are ordered S -> N, so it may appear the
> wrong way up.
>
> rgdal::getRasterData() is lightweight, and has many arguments which may be
> helpful. rgdal::readGDAL() is heavyweight, creating a SpatialGridDataFrame
> object. This involves much copying of data, but the output object can be
> used for example in mapping or analysis without further conversion. My
> guess is that rgdal::getRasterData() gives you your matrix directly. Look
> at the R code to see how as.is= etc. work (files may include scale and
> offset values - recently a user was confused that scale and offset were
> "magically" applied to convert Uint16 values to degrees Kelvin on
> reading). For example, if as.is == TRUE or scale == 1 and offset == 0, no
> copying of the input matrix occurs because it is not converted. If you
> could check this route, others following this thread could also benefit;
> if I'm wrong, that would also be good to know.
>
> Roger
>
>
> >
> > Best,
> >
> > Thorsten
> >
> >
> >
> > Am 27.04.2020 um 15:58 schrieb Michael Sumner:
> >> Try stars it worked for me on a test
> >>
> >> On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
> >> <thorsten.m.behrens at gmail.com <mailto:thorsten.m.behrens at gmail.com>>
> >> wrote:
> >>
> >>     Roger,
> >>
> >>     thanks a lot for your reply!
> >>
> >>     I have 256GB RAM installed (mentioned it somewhere). And there,
> >>     all is
> >>     fine when I run:
> >>
> >>     rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
> 72000,
> >>
> >>     values(rDemTest) = 1
> >>
> >>     When limiting the memory to about 8GB with
> >>     ulimit::memory_limit(8000),
> >>     the max size which can be allocated seems to be around 10000 x
> >>     10000px.
> >>     In this case all tests run fine. Unfortunately it seems to be
> >>     related to
> >>     the size of the grid (48000 x 72000) and therefore the problem
> >>     can't be
> >>     reproduced on machines with 8GB RAM. For some processing steps I
> need
> >>     grids of that size in the memory, which is why I have 256 GB
> >>     installed.
> >>
> >>     Normally, I use the raster package and not rgdal::readGDAL(). This
> >>     was
> >>     just a desperate attempt to find the source of the problem.
> >>
> >>     This is what I use in my code:
> >>
> >>     rDem = raster(sFileNameTiff)
> >>     mDem = raster::as.matrix(rDem)
> >>
> >>     But maybe this is the same...
> >>
> >>     Any further suggestions are much appreciated!
> >>
> >>     Thanks again!
> >>
> >>     Best,
> >>
> >>     Thorsten
> >>
> >>
> >>
> >>
> >>     Am 27.04.2020 um 14:50 schrieb Roger Bivand:
> >>    > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
> >>    >
> >>    >> Dear all,
> >>    >>
> >>    >> my problem is that I want to read a big geotiff raster dataset
> >>     into R
> >>    >> and convert it to a matrix, which does not work.
> >>    >> The file is big but there is sufficient memory. I need all the
> >>     data
> >>    >> in the memory at the same time.
> >>    >>
> >>    >> The error occurs under R 3.6.3 as well as 4.0.0 using Ubuntu 20.04
> >>    >> LTS with the latest version of the packages (see session info
> >>     below)
> >>    >> and 256GB RAM installed.
> >>    >>
> >>    >> When loading the raster dataset using rgdal (via readGDAL or
> >>    >> raster::readAll) I get the follwoing error in R 4.0.0:
> >>    >>
> >>    >> ```
> >>    >> Error in rgdal::getRasterData(con, offset = offs, region.dim =
> >>     reg,
> >>    >> band = object at data@band) :
> >>    >>   long vectors not supported yet: memory.c:3782
> >>    >> ```
> >>    >
> >>    > On a 16GB Fedora platform:
> >>    >
> >>    >> library(raster) # 3.1-5
> >>    >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
> >>     72000,
> >>    > 0,
> >>    > + 48000))) # all fine
> >>    >> rDemTest
> >>    > class      : RasterLayer
> >>    > dimensions : 48000, 72000, 3.456e+09  (nrow, ncol, ncell)
> >>    > resolution : 1, 1  (x, y)
> >>    > extent     : 0, 72000, 0, 48000  (xmin, xmax, ymin, ymax)
> >>    > crs        : NA
> >>    >
> >>    >> values(rDemTest) = 1
> >>    > Error: cannot allocate vector of size 25.7 Gb
> >>    >
> >>    > So you are deceiving yourself into thinking that all is fine at
> >>     this
> >>    > point. Please try to instantiate an example that can be
> >>     reproduced on
> >>    > a machine with 8GB RAM.
> >>    >
> >>    > Further note that rgdal::readGDAL() is not how you handle very
> >>     large
> >>    > objects in files, and never has been. raster can handle blocks
> >>     of data
> >>    > from bands in file; stars and gdalcubes can use proxy=TRUE for the
> >>    > same purpose. Why did you choose rgdal::readGDAL() when this is not
> >>    > its purpose?
> >>    >
> >>    > You did not say how much RAM is on your platform.
> >>    >
> >>    > Roger
> >>    >
> >>    >>
> >>    >> In R 3.6.3 is is "... memory.c:3717"
> >>    >>
> >>    >> However, I can load the same file with the tiff package and a
> >>     file of
> >>    >> the same size in the native raster package format (*.grd) with the
> >>    >> raster package but again not with the rgdal package.
> >>    >>
> >>    >> gdalinfo (gdalUtils) does not complain (see below). Hence, Even
> >>    >> Rouault assumes the problem is related to rgdal and not gdal
> >>    >> (https://github.com/OSGeo/gdal/issues/2442).
> >>    >>
> >>    >> Below you find reproducible code, which generates a raster file,
> >>    >> saves the two formats (.tiff and .grd) and tries to read them with
> >>    >> the different packages.
> >>    >>
> >>    >> Is this a known limitation? Any help is greatly appreciated!
> >>    >>
> >>    >> Thanks a lot in advance!
> >>    >>
> >>    >> Best wishes and stay healthy,
> >>    >> Thorsten
> >>    >>
> >>    >>
> >>    >>
> >>    >> ### Steps to reproduce the problem.
> >>    >>
> >>    >> R code:
> >>    >>
> >>    >> ```
> >>    >> library(rgdal) # 1.4-8
> >>    >> library(raster) # 3.1-5
> >>    >> library(tiff) # 0.1-5
> >>    >>
> >>    >> ## generate and manipulate a big raster dataset
> >>    >> # - generate
> >>    >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
> >>    >> 72000, 0, 48000))) # all fine
> >>    >>
> >>    >> # - manipulate
> >>    >> values(rDemTest) = 1 # all fine
> >>    >>
> >>    >> # - convert
> >>    >> mDemTest = raster::as.matrix(rDemTest) # all fine
> >>    >> str(mDemTest)
> >>    >>
> >>    >> ## save a big dataset
> >>    >>
> >>    >> # - as raster/gdal
> >>    >> sFileNameTiff = "BigData.tif"
> >>    >> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite = TRUE,
> >>    >> NAflag = -9999) # all fine
> >>    >>
> >>    >> # - as raster native
> >>    >> sFileNameNative = "BigData.grd"
> >>    >> writeRaster(rDemTest, sFileNameNative, "raster", overwrite = TRUE,
> >>    >> NAflag = -9999) # all fine
> >>    >>
> >>    >>
> >>    >> ## load the big raster datasets with different packages and
> options
> >>    >> # - load the tiff data with the gdal package via the raster
> package
> >>    >> rDem = raster(sFileNameTiff) # all fine
> >>    >> extent(rDem) # all fine
> >>    >> mDem = raster::as.matrix(rDem) # error
> >>    >> rDem = readAll(rDem) # error
> >>    >>
> >>    >> # - load the native raster data with the raster package
> >>    >> rDem = raster(sFileNameNative) # all fine
> >>    >> extent(rDem) # all fine
> >>    >> mDem = raster::as.matrix(rDem) # all fine
> >>    >> str(mDem)
> >>    >>
> >>    >> # - load the tiff data with the tiff package
> >>    >> mDem = readTIFF(sFileNameTiff) # all fine
> >>    >> str(mDem)
> >>    >>
> >>    >> # - load the tiff data with the gdal package
> >>    >> sfDem = readGDAL(sFileNameTiff) # error
> >>    >>
> >>    >> # - load the native raster data with the gdal package
> >>    >> sfDem = readGDAL(sFileNameNative) # error
> >>    >>
> >>    >> ```
> >>    >>
> >>    >>
> >>    >> ### Startup messages when rgdal is attached (requested by Roger
> >>     Bivand)
> >>    >>>  library(rgdal)
> >>    >> rgdal: version: 1.4-8, (SVN revision 845)
> >>    >>  Geospatial Data Abstraction Library extensions to R
> >>     successfully loaded
> >>    >>  Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
> >>    >>  Path to GDAL shared files:
> >>    >>  GDAL binary built with GEOS: TRUE
> >>    >>  Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020,
> >>     [PJ_VERSION:
> >>    >> 631]
> >>    >>  Path to PROJ.4 shared files: (autodetected)
> >>    >>  Linking to sp version: 1.4-1
> >>    >>
> >>    >>
> >>    >> ### Session info
> >>    >>>  sessionInfo()
> >>    >> R version 4.0.0 (2020-04-24)
> >>    >> Platform: x86_64-pc-linux-gnu (64-bit)
> >>    >> Running under: Ubuntu 20.04 LTS
> >>    >>
> >>    >> Matrix products: default
> >>    >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
> >>    >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3
> >>    >>
> >>    >> locale:
> >>    >>  [1] LC_CTYPE=de_DE.UTF-8       LC_NUMERIC=C LC_TIME=de_DE.UTF-8
> >>    >>  [4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
> >>    >> LC_MESSAGES=de_DE.UTF-8
> >>    >>  [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C LC_ADDRESS=C
> >>    >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
> >>    >> LC_IDENTIFICATION=C
> >>    >>
> >>    >> attached base packages:
> >>    >> [1] stats     graphics  grDevices utils     datasets methods base
> >>    >>
> >>    >> other attached packages:
> >>    >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8       tiff_0.1-5 raster_3.1-5
> >>    >> sp_1.4-1
> >>    >>
> >>    >> loaded via a namespace (and not attached):
> >>    >>  [1] compiler_4.0.0    tools_4.0.0       Rcpp_1.0.4.6
> >>    >> R.methodsS3_1.8.0 codetools_0.2-16
> >>    >>  [6] grid_4.0.0        iterators_1.0.12 foreach_1.5.0
> >>    >> R.utils_2.9.2     R.oo_1.23.0
> >>    >> [11] lattice_0.20-41
> >>    >>
> >>    >>
> >>    >> ### gdalInfo
> >>    >>>  gdalinfo(sFileNameTiff)
> >>    >>  [1] "Driver: GTiff/GeoTIFF"
> >>    >>  [2] "Files: BigData.tif"
> >>    >>  [3] "Size is 72000, 48000"
> >>    >>  [4] "Origin = (0.000000000000000,48000.000000000000000)"
> >>    >>  [5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
> >>    >>  [6] "Image Structure Metadata:"
> >>    >>  [7] "  COMPRESSION=LZW"
> >>    >>  [8] "  INTERLEAVE=BAND"
> >>    >>  [9] "Corner Coordinates:"
> >>    >> [10] "Upper Left  (       0.000,   48000.000) "
> >>    >> [11] "Lower Left  (   0.0000000,   0.0000000) "
> >>    >> [12] "Upper Right (   72000.000,   48000.000) "
> >>    >> [13] "Lower Right (   72000.000,       0.000) "
> >>    >> [14] "Center      (   36000.000,   24000.000) "
> >>    >> [15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
> >>    >> [16] "  Min=1.000 Max=1.000 "
> >>    >> [17] "  Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
> >>    >> [18] "  NoData Value=-9999"
> >>    >> [19] "  Metadata:"
> >>    >> [20] "    STATISTICS_MAXIMUM=1"
> >>    >> [21] "    STATISTICS_MEAN=nan"
> >>    >> [22] "    STATISTICS_MINIMUM=1"
> >>    >> [23] "    STATISTICS_STDDEV=nan"
> >>    >>
> >>    >> _______________________________________________
> >>    >> R-sig-Geo mailing list
> >>    >> R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
> >>    >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>    >>
> >>    >>
> >>    >
> >>
> >>     _______________________________________________
> >>     R-sig-Geo mailing list
> >>     R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
> >>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com

	[[alternative HTML version deleted]]


From thor@ten@m@behren@ @end|ng |rom gm@||@com  Tue Apr 28 13:39:15 2020
From: thor@ten@m@behren@ @end|ng |rom gm@||@com (Thorsten Behrens)
Date: Tue, 28 Apr 2020 13:39:15 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
 <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
Message-ID: <0262d49b-ae9c-1540-5cb8-1f1490d58090@gmail.com>

Roger and Mike,

I really appreciate your help on this!

I had a look at getRasterData(). It results in the same error. Hence, I 
made further tests where I compared grids with the following numbers of 
cols and rows:

nPx = floor(sqrt(2^31 -1)) # 46340

and

nPx = ceiling(sqrt(2^31 -1)) # 46341

The result is clear. Raster data with 46340 * 46340 px can be loaded 
with getRasterData() and with raster(), raster::as.matrix(), whereas 
datasets with 46341 * 46341 px cannot and result in the error:

Error in getRasterData(gdCeil, band = 1) :
long vectors not supported yet: memory.c:3782

read_stars() works for both. You find the corresponding code below.

Are there any other option I can try?

Thorsten


Reproducible code:

## generate raster datasets
# 46340 * 46340 grid dataset
sFileNameFloor = "Floor.tif"

nPx = floor(sqrt(2^31 -1)) # 46340
nPx

rFloor = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0, nPx)))
values(rFloor) = 1

writeRaster(rFloor, sFileNameFloor, "GTiff", overwrite = TRUE, NAflag = 
-9999)


# 46341 * 46341 grid dataset
sFileNameCeil = "Ceil.tif"

nPx = ceiling(sqrt(2^31 -1))
nPx

rCeil = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0, nPx)))
values(rCeil) = 1

writeRaster(rCeil, sFileNameCeil, "GTiff", overwrite = TRUE, NAflag = 
-9999)


## load raster datasets with different methods

# load Ceil
gdCeil = GDAL.open(sFileNameCeil)
dim(gdCeil)

vnCeil = getRasterData(gdCeil, band = 1) # error

GDAL.close(gdCeil)
str(vnCeil)

stCeil = read_stars(sFileNameCeil) # all fine
str(stCeil[[1]])

rCeil = raster(sFileNameCeil)
mCeil = raster::as.matrix(rCeil) # error
str(mCeil)


# load Floor
gdFloor = GDAL.open(sFileNameFloor)
dim(gdFloor)

vnData = getRasterData(gdFloor, band = 1) # all fine

GDAL.close(gdFloor)
str(vnData)

stFloor= read_stars(sFileNameFloor) # all fine
str(stFloor[[1]])

rFloor = raster(sFileNameFloor)
mFloor = raster::as.matrix(rFloor) # all fine
str(mFloor)




Am 28.04.2020 um 12:10 schrieb Roger Bivand:
> On Tue, 28 Apr 2020, Thorsten Behrens wrote:
>
>> Michael,
>>
>> Thanks for the hint, it seems to work! Real-world tests will follow in
>> the next few days...
>>
>> So it definitely seems to be a problem of rgdal. It would be great if it
>> could still be solved.
>
> Not rgdal, but your use of it. Try looking at a sequence of
>
> file <- system.file("pictures/SP27GTIF.TIF", package="rgdal")
> obj <- GDAL.open(file)
> (dims <- dim(obj))
> band <- 1
> data_vector <- getRasterData(obj, band)
> GDAL.close(obj)
> str(data_vector)
>
> This does not create any more complicated objects, just a matrix. In 
> some cases, the rows in the matrix are ordered S -> N, so it may 
> appear the wrong way up.
>
> rgdal::getRasterData() is lightweight, and has many arguments which 
> may be helpful. rgdal::readGDAL() is heavyweight, creating a 
> SpatialGridDataFrame object. This involves much copying of data, but 
> the output object can be used for example in mapping or analysis 
> without further conversion. My guess is that rgdal::getRasterData() 
> gives you your matrix directly. Look at the R code to see how as.is= 
> etc. work (files may include scale and offset values - recently a user 
> was confused that scale and offset were "magically" applied to convert 
> Uint16 values to degrees Kelvin on reading). For example, if as.is == 
> TRUE or scale == 1 and offset == 0, no copying of the input matrix 
> occurs because it is not converted. If you could check this route, 
> others following this thread could also benefit; if I'm wrong, that 
> would also be good to know.
>
> Roger
>
>
>>
>> Best,
>>
>> Thorsten
>>
>>
>>
>> Am 27.04.2020 um 15:58 schrieb Michael Sumner:
>>> Try stars it worked for me on a test
>>>
>>> On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
>>> <thorsten.m.behrens at gmail.com <mailto:thorsten.m.behrens at gmail.com>>
>>> wrote:
>>>
>>> ??? Roger,
>>>
>>> ??? thanks a lot for your reply!
>>>
>>> ??? I have 256GB RAM installed (mentioned it somewhere). And there,
>>> ??? all is
>>> ??? fine when I run:
>>>
>>> ??? rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0, 
>>> 72000,
>>>
>>> ??? values(rDemTest) = 1
>>>
>>> ??? When limiting the memory to about 8GB with
>>> ??? ulimit::memory_limit(8000),
>>> ??? the max size which can be allocated seems to be around 10000 x
>>> ??? 10000px.
>>> ??? In this case all tests run fine. Unfortunately it seems to be
>>> ??? related to
>>> ??? the size of the grid (48000 x 72000) and therefore the problem
>>> ??? can't be
>>> ??? reproduced on machines with 8GB RAM. For some processing steps I 
>>> need
>>> ??? grids of that size in the memory, which is why I have 256 GB
>>> ??? installed.
>>>
>>> ??? Normally, I use the raster package and not rgdal::readGDAL(). This
>>> ??? was
>>> ??? just a desperate attempt to find the source of the problem.
>>>
>>> ??? This is what I use in my code:
>>>
>>> ??? rDem = raster(sFileNameTiff)
>>> ??? mDem = raster::as.matrix(rDem)
>>>
>>> ??? But maybe this is the same...
>>>
>>> ??? Any further suggestions are much appreciated!
>>>
>>> ??? Thanks again!
>>>
>>> ??? Best,
>>>
>>> ??? Thorsten
>>>
>>>
>>>
>>>
>>> ??? Am 27.04.2020 um 14:50 schrieb Roger Bivand:
>>> ?? > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
>>> ?? >
>>> ?? >> Dear all,
>>> ?? >>
>>> ?? >> my problem is that I want to read a big geotiff raster dataset
>>> ??? into R
>>> ?? >> and convert it to a matrix, which does not work.
>>> ?? >> The file is big but there is sufficient memory. I need all the
>>> ??? data
>>> ?? >> in the memory at the same time.
>>> ?? >>
>>> ?? >> The error occurs under R 3.6.3 as well as 4.0.0 using Ubuntu 
>>> 20.04
>>> ?? >> LTS with the latest version of the packages (see session info
>>> ??? below)
>>> ?? >> and 256GB RAM installed.
>>> ?? >>
>>> ?? >> When loading the raster dataset using rgdal (via readGDAL or
>>> ?? >> raster::readAll) I get the follwoing error in R 4.0.0:
>>> ?? >>
>>> ?? >> ```
>>> ?? >> Error in rgdal::getRasterData(con, offset = offs, region.dim =
>>> ??? reg,
>>> ?? >> band = object at data@band) :
>>> ?? >> ? long vectors not supported yet: memory.c:3782
>>> ?? >> ```
>>> ?? >
>>> ?? > On a 16GB Fedora platform:
>>> ?? >
>>> ?? >> library(raster) # 3.1-5
>>> ?? >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
>>> ??? 72000,
>>> ?? > 0,
>>> ?? > + 48000))) # all fine
>>> ?? >> rDemTest
>>> ?? > class????? : RasterLayer
>>> ?? > dimensions : 48000, 72000, 3.456e+09? (nrow, ncol, ncell)
>>> ?? > resolution : 1, 1? (x, y)
>>> ?? > extent???? : 0, 72000, 0, 48000? (xmin, xmax, ymin, ymax)
>>> ?? > crs??????? : NA
>>> ?? >
>>> ?? >> values(rDemTest) = 1
>>> ?? > Error: cannot allocate vector of size 25.7 Gb
>>> ?? >
>>> ?? > So you are deceiving yourself into thinking that all is fine at
>>> ??? this
>>> ?? > point. Please try to instantiate an example that can be
>>> ??? reproduced on
>>> ?? > a machine with 8GB RAM.
>>> ?? >
>>> ?? > Further note that rgdal::readGDAL() is not how you handle very
>>> ??? large
>>> ?? > objects in files, and never has been. raster can handle blocks
>>> ??? of data
>>> ?? > from bands in file; stars and gdalcubes can use proxy=TRUE for the
>>> ?? > same purpose. Why did you choose rgdal::readGDAL() when this is 
>>> not
>>> ?? > its purpose?
>>> ?? >
>>> ?? > You did not say how much RAM is on your platform.
>>> ?? >
>>> ?? > Roger
>>> ?? >
>>> ?? >>
>>> ?? >> In R 3.6.3 is is "... memory.c:3717"
>>> ?? >>
>>> ?? >> However, I can load the same file with the tiff package and a
>>> ??? file of
>>> ?? >> the same size in the native raster package format (*.grd) with 
>>> the
>>> ?? >> raster package but again not with the rgdal package.
>>> ?? >>
>>> ?? >> gdalinfo (gdalUtils) does not complain (see below). Hence, Even
>>> ?? >> Rouault assumes the problem is related to rgdal and not gdal
>>> ?? >> (https://github.com/OSGeo/gdal/issues/2442).
>>> ?? >>
>>> ?? >> Below you find reproducible code, which generates a raster file,
>>> ?? >> saves the two formats (.tiff and .grd) and tries to read them 
>>> with
>>> ?? >> the different packages.
>>> ?? >>
>>> ?? >> Is this a known limitation? Any help is greatly appreciated!
>>> ?? >>
>>> ?? >> Thanks a lot in advance!
>>> ?? >>
>>> ?? >> Best wishes and stay healthy,
>>> ?? >> Thorsten
>>> ?? >>
>>> ?? >>
>>> ?? >>
>>> ?? >> ### Steps to reproduce the problem.
>>> ?? >>
>>> ?? >> R code:
>>> ?? >>
>>> ?? >> ```
>>> ?? >> library(rgdal) # 1.4-8
>>> ?? >> library(raster) # 3.1-5
>>> ?? >> library(tiff) # 0.1-5
>>> ?? >>
>>> ?? >> ## generate and manipulate a big raster dataset
>>> ?? >> # - generate
>>> ?? >> rDemTest = raster(nrow = 48000, ncol = 72000, ext = extent(c(0,
>>> ?? >> 72000, 0, 48000))) # all fine
>>> ?? >>
>>> ?? >> # - manipulate
>>> ?? >> values(rDemTest) = 1 # all fine
>>> ?? >>
>>> ?? >> # - convert
>>> ?? >> mDemTest = raster::as.matrix(rDemTest) # all fine
>>> ?? >> str(mDemTest)
>>> ?? >>
>>> ?? >> ## save a big dataset
>>> ?? >>
>>> ?? >> # - as raster/gdal
>>> ?? >> sFileNameTiff = "BigData.tif"
>>> ?? >> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite = TRUE,
>>> ?? >> NAflag = -9999) # all fine
>>> ?? >>
>>> ?? >> # - as raster native
>>> ?? >> sFileNameNative = "BigData.grd"
>>> ?? >> writeRaster(rDemTest, sFileNameNative, "raster", overwrite = 
>>> TRUE,
>>> ?? >> NAflag = -9999) # all fine
>>> ?? >>
>>> ?? >>
>>> ?? >> ## load the big raster datasets with different packages and 
>>> options
>>> ?? >> # - load the tiff data with the gdal package via the raster 
>>> package
>>> ?? >> rDem = raster(sFileNameTiff) # all fine
>>> ?? >> extent(rDem) # all fine
>>> ?? >> mDem = raster::as.matrix(rDem) # error
>>> ?? >> rDem = readAll(rDem) # error
>>> ?? >>
>>> ?? >> # - load the native raster data with the raster package
>>> ?? >> rDem = raster(sFileNameNative) # all fine
>>> ?? >> extent(rDem) # all fine
>>> ?? >> mDem = raster::as.matrix(rDem) # all fine
>>> ?? >> str(mDem)
>>> ?? >>
>>> ?? >> # - load the tiff data with the tiff package
>>> ?? >> mDem = readTIFF(sFileNameTiff) # all fine
>>> ?? >> str(mDem)
>>> ?? >>
>>> ?? >> # - load the tiff data with the gdal package
>>> ?? >> sfDem = readGDAL(sFileNameTiff) # error
>>> ?? >>
>>> ?? >> # - load the native raster data with the gdal package
>>> ?? >> sfDem = readGDAL(sFileNameNative) # error
>>> ?? >>
>>> ?? >> ```
>>> ?? >>
>>> ?? >>
>>> ?? >> ### Startup messages when rgdal is attached (requested by Roger
>>> ??? Bivand)
>>> ?? >>> ?library(rgdal)
>>> ?? >> rgdal: version: 1.4-8, (SVN revision 845)
>>> ?? >> ?Geospatial Data Abstraction Library extensions to R
>>> ??? successfully loaded
>>> ?? >> ?Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
>>> ?? >> ?Path to GDAL shared files:
>>> ?? >> ?GDAL binary built with GEOS: TRUE
>>> ?? >> ?Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020,
>>> ??? [PJ_VERSION:
>>> ?? >> 631]
>>> ?? >> ?Path to PROJ.4 shared files: (autodetected)
>>> ?? >> ?Linking to sp version: 1.4-1
>>> ?? >>
>>> ?? >>
>>> ?? >> ### Session info
>>> ?? >>> ?sessionInfo()
>>> ?? >> R version 4.0.0 (2020-04-24)
>>> ?? >> Platform: x86_64-pc-linux-gnu (64-bit)
>>> ?? >> Running under: Ubuntu 20.04 LTS
>>> ?? >>
>>> ?? >> Matrix products: default
>>> ?? >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
>>> ?? >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3
>>> ?? >>
>>> ?? >> locale:
>>> ?? >> ?[1] LC_CTYPE=de_DE.UTF-8?????? LC_NUMERIC=C LC_TIME=de_DE.UTF-8
>>> ?? >> ?[4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
>>> ?? >> LC_MESSAGES=de_DE.UTF-8
>>> ?? >> ?[7] LC_PAPER=de_DE.UTF-8?????? LC_NAME=C LC_ADDRESS=C
>>> ?? >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
>>> ?? >> LC_IDENTIFICATION=C
>>> ?? >>
>>> ?? >> attached base packages:
>>> ?? >> [1] stats???? graphics? grDevices utils datasets methods base
>>> ?? >>
>>> ?? >> other attached packages:
>>> ?? >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8?????? tiff_0.1-5 raster_3.1-5
>>> ?? >> sp_1.4-1
>>> ?? >>
>>> ?? >> loaded via a namespace (and not attached):
>>> ?? >> ?[1] compiler_4.0.0??? tools_4.0.0 Rcpp_1.0.4.6
>>> ?? >> R.methodsS3_1.8.0 codetools_0.2-16
>>> ?? >> ?[6] grid_4.0.0??????? iterators_1.0.12 foreach_1.5.0
>>> ?? >> R.utils_2.9.2???? R.oo_1.23.0
>>> ?? >> [11] lattice_0.20-41
>>> ?? >>
>>> ?? >>
>>> ?? >> ### gdalInfo
>>> ?? >>> ?gdalinfo(sFileNameTiff)
>>> ?? >> ?[1] "Driver: GTiff/GeoTIFF"
>>> ?? >> ?[2] "Files: BigData.tif"
>>> ?? >> ?[3] "Size is 72000, 48000"
>>> ?? >> ?[4] "Origin = (0.000000000000000,48000.000000000000000)"
>>> ?? >> ?[5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
>>> ?? >> ?[6] "Image Structure Metadata:"
>>> ?? >> ?[7] "? COMPRESSION=LZW"
>>> ?? >> ?[8] "? INTERLEAVE=BAND"
>>> ?? >> ?[9] "Corner Coordinates:"
>>> ?? >> [10] "Upper Left? (?????? 0.000,?? 48000.000) "
>>> ?? >> [11] "Lower Left? (?? 0.0000000,?? 0.0000000) "
>>> ?? >> [12] "Upper Right (?? 72000.000,?? 48000.000) "
>>> ?? >> [13] "Lower Right (?? 72000.000,?????? 0.000) "
>>> ?? >> [14] "Center????? (?? 36000.000,?? 24000.000) "
>>> ?? >> [15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
>>> ?? >> [16] "? Min=1.000 Max=1.000 "
>>> ?? >> [17] "? Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
>>> ?? >> [18] "? NoData Value=-9999"
>>> ?? >> [19] "? Metadata:"
>>> ?? >> [20] "??? STATISTICS_MAXIMUM=1"
>>> ?? >> [21] "??? STATISTICS_MEAN=nan"
>>> ?? >> [22] "??? STATISTICS_MINIMUM=1"
>>> ?? >> [23] "??? STATISTICS_STDDEV=nan"
>>> ?? >>
>>> ?? >> _______________________________________________
>>> ?? >> R-sig-Geo mailing list
>>> ?? >> R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>>> ?? >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>> ?? >>
>>> ?? >>
>>> ?? >
>>>
>>> ??? _______________________________________________
>>> ??? R-sig-Geo mailing list
>>> ??? R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>>> ??? https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>


From thor@ten@m@behren@ @end|ng |rom gm@||@com  Tue Apr 28 13:50:01 2020
From: thor@ten@m@behren@ @end|ng |rom gm@||@com (Thorsten Behrens)
Date: Tue, 28 Apr 2020 13:50:01 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <CAAcGz9-Fihmd7jTaL0j77xy69JosNrP15rqYeQviTGrB1aFxuA@mail.gmail.com>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
 <CAAcGz9-Fihmd7jTaL0j77xy69JosNrP15rqYeQviTGrB1aFxuA@mail.gmail.com>
Message-ID: <67be8be9-8317-1f4a-af1d-0683d3c3932c@gmail.com>

Mike,

I'll look into terra as well. Overlooked it... Thanks!

My current code uses the raster package to load the datasets, hence I 
would be happy if I do not have to change my code? :-)

I am trying to implement some multi-scale mapping in R/Rcpp (*Behrens, 
T.*, Schmidt, K., MacMillan, R.A., Viscarra Rossel, R. (2018). 
Multi-scale Digital Soil Mapping with deep learning. Scientific Reports 
8,15244.). Reading and writing it piecewise does not really work for 
this (especially for the coarse scales) and would complicate things a lot.

Cheers,

Thorsten


Am 28.04.2020 um 12:12 schrieb Michael Sumner:
> I reckon that's unlikely, it's also unlikely to scale or be fast 
> enough ever? given what rgdal is - raster will happily crop sections 
> of it out but I guess your workflow is to write the geotiff out in one 
> go? You want rgdal because you want raster?? Have you tried terra? (I 
> forgot to mention that one, and I haven't tried on that size GeoTIFF 
> with it. It has its own internal connection to GDAL).
>
> Possibly you can instantiate a GeoTIFF with rgdal of the right size, 
> then write to it piecewise - but if the convenience of raster is what 
> you're after that's obviously no good. I think I'm missing some 
> workflow constraint or motivation you have, but I'm interested (it's 
> an awkward space).
>
> Cheers, Mike
>
> On Tue, Apr 28, 2020 at 7:14 PM Thorsten Behrens 
> <thorsten.m.behrens at gmail.com <mailto:thorsten.m.behrens at gmail.com>> 
> wrote:
>
>     Michael,
>
>     Thanks for the hint, it seems to work! Real-world tests will
>     follow in
>     the next few days...
>
>     So it definitely seems to be a problem of rgdal. It would be great
>     if it
>     could still be solved.
>
>     Best,
>
>     Thorsten
>
>
>
>     Am 27.04.2020 um 15:58 schrieb Michael Sumner:
>     > Try stars it worked for me on a test
>     >
>     > On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
>     > <thorsten.m.behrens at gmail.com
>     <mailto:thorsten.m.behrens at gmail.com>
>     <mailto:thorsten.m.behrens at gmail.com
>     <mailto:thorsten.m.behrens at gmail.com>>>
>     > wrote:
>     >
>     >? ? ?Roger,
>     >
>     >? ? ?thanks a lot for your reply!
>     >
>     >? ? ?I have 256GB RAM installed (mentioned it somewhere). And there,
>     >? ? ?all is
>     >? ? ?fine when I run:
>     >
>     >? ? ?rDemTest = raster(nrow = 48000, ncol = 72000, ext =
>     extent(c(0, 72000,
>     >
>     >? ? ?values(rDemTest) = 1
>     >
>     >? ? ?When limiting the memory to about 8GB with
>     >? ? ?ulimit::memory_limit(8000),
>     >? ? ?the max size which can be allocated seems to be around 10000 x
>     >? ? ?10000px.
>     >? ? ?In this case all tests run fine. Unfortunately it seems to be
>     >? ? ?related to
>     >? ? ?the size of the grid (48000 x 72000) and therefore the problem
>     >? ? ?can't be
>     >? ? ?reproduced on machines with 8GB RAM. For some processing
>     steps I need
>     >? ? ?grids of that size in the memory, which is why I have 256 GB
>     >? ? ?installed.
>     >
>     >? ? ?Normally, I use the raster package and not
>     rgdal::readGDAL(). This
>     >? ? ?was
>     >? ? ?just a desperate attempt to find the source of the problem.
>     >
>     >? ? ?This is what I use in my code:
>     >
>     >? ? ?rDem = raster(sFileNameTiff)
>     >? ? ?mDem = raster::as.matrix(rDem)
>     >
>     >? ? ?But maybe this is the same...
>     >
>     >? ? ?Any further suggestions are much appreciated!
>     >
>     >? ? ?Thanks again!
>     >
>     >? ? ?Best,
>     >
>     >? ? ?Thorsten
>     >
>     >
>     >
>     >
>     >? ? ?Am 27.04.2020 um 14:50 schrieb Roger Bivand:
>     >? ? ?> On Mon, 27 Apr 2020, Thorsten Behrens wrote:
>     >? ? ?>
>     >? ? ?>> Dear all,
>     >? ? ?>>
>     >? ? ?>> my problem is that I want to read a big geotiff raster
>     dataset
>     >? ? ?into R
>     >? ? ?>> and convert it to a matrix, which does not work.
>     >? ? ?>> The file is big but there is sufficient memory. I need
>     all the
>     >? ? ?data
>     >? ? ?>> in the memory at the same time.
>     >? ? ?>>
>     >? ? ?>> The error occurs under R 3.6.3 as well as 4.0.0 using
>     Ubuntu 20.04
>     >? ? ?>> LTS with the latest version of the packages (see session info
>     >? ? ?below)
>     >? ? ?>> and 256GB RAM installed.
>     >? ? ?>>
>     >? ? ?>> When loading the raster dataset using rgdal (via readGDAL or
>     >? ? ?>> raster::readAll) I get the follwoing error in R 4.0.0:
>     >? ? ?>>
>     >? ? ?>> ```
>     >? ? ?>> Error in rgdal::getRasterData(con, offset = offs,
>     region.dim =
>     >? ? ?reg,
>     >? ? ?>> band = object at data@band) :
>     >? ? ?>> ? long vectors not supported yet: memory.c:3782
>     >? ? ?>> ```
>     >? ? ?>
>     >? ? ?> On a 16GB Fedora platform:
>     >? ? ?>
>     >? ? ?>> library(raster) # 3.1-5
>     >? ? ?>> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
>     extent(c(0,
>     >? ? ?72000,
>     >? ? ?> 0,
>     >? ? ?> + 48000))) # all fine
>     >? ? ?>> rDemTest
>     >? ? ?> class????? : RasterLayer
>     >? ? ?> dimensions : 48000, 72000, 3.456e+09? (nrow, ncol, ncell)
>     >? ? ?> resolution : 1, 1? (x, y)
>     >? ? ?> extent???? : 0, 72000, 0, 48000? (xmin, xmax, ymin, ymax)
>     >? ? ?> crs??????? : NA
>     >? ? ?>
>     >? ? ?>> values(rDemTest) = 1
>     >? ? ?> Error: cannot allocate vector of size 25.7 Gb
>     >? ? ?>
>     >? ? ?> So you are deceiving yourself into thinking that all is
>     fine at
>     >? ? ?this
>     >? ? ?> point. Please try to instantiate an example that can be
>     >? ? ?reproduced on
>     >? ? ?> a machine with 8GB RAM.
>     >? ? ?>
>     >? ? ?> Further note that rgdal::readGDAL() is not how you handle very
>     >? ? ?large
>     >? ? ?> objects in files, and never has been. raster can handle blocks
>     >? ? ?of data
>     >? ? ?> from bands in file; stars and gdalcubes can use proxy=TRUE
>     for the
>     >? ? ?> same purpose. Why did you choose rgdal::readGDAL() when
>     this is not
>     >? ? ?> its purpose?
>     >? ? ?>
>     >? ? ?> You did not say how much RAM is on your platform.
>     >? ? ?>
>     >? ? ?> Roger
>     >? ? ?>
>     >? ? ?>>
>     >? ? ?>> In R 3.6.3 is is "... memory.c:3717"
>     >? ? ?>>
>     >? ? ?>> However, I can load the same file with the tiff package and a
>     >? ? ?file of
>     >? ? ?>> the same size in the native raster package format (*.grd)
>     with the
>     >? ? ?>> raster package but again not with the rgdal package.
>     >? ? ?>>
>     >? ? ?>> gdalinfo (gdalUtils) does not complain (see below).
>     Hence, Even
>     >? ? ?>> Rouault assumes the problem is related to rgdal and not gdal
>     >? ? ?>> (https://github.com/OSGeo/gdal/issues/2442).
>     >? ? ?>>
>     >? ? ?>> Below you find reproducible code, which generates a
>     raster file,
>     >? ? ?>> saves the two formats (.tiff and .grd) and tries to read
>     them with
>     >? ? ?>> the different packages.
>     >? ? ?>>
>     >? ? ?>> Is this a known limitation? Any help is greatly appreciated!
>     >? ? ?>>
>     >? ? ?>> Thanks a lot in advance!
>     >? ? ?>>
>     >? ? ?>> Best wishes and stay healthy,
>     >? ? ?>> Thorsten
>     >? ? ?>>
>     >? ? ?>>
>     >? ? ?>>
>     >? ? ?>> ### Steps to reproduce the problem.
>     >? ? ?>>
>     >? ? ?>> R code:
>     >? ? ?>>
>     >? ? ?>> ```
>     >? ? ?>> library(rgdal) # 1.4-8
>     >? ? ?>> library(raster) # 3.1-5
>     >? ? ?>> library(tiff) # 0.1-5
>     >? ? ?>>
>     >? ? ?>> ## generate and manipulate a big raster dataset
>     >? ? ?>> # - generate
>     >? ? ?>> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
>     extent(c(0,
>     >? ? ?>> 72000, 0, 48000))) # all fine
>     >? ? ?>>
>     >? ? ?>> # - manipulate
>     >? ? ?>> values(rDemTest) = 1 # all fine
>     >? ? ?>>
>     >? ? ?>> # - convert
>     >? ? ?>> mDemTest = raster::as.matrix(rDemTest) # all fine
>     >? ? ?>> str(mDemTest)
>     >? ? ?>>
>     >? ? ?>> ## save a big dataset
>     >? ? ?>>
>     >? ? ?>> # - as raster/gdal
>     >? ? ?>> sFileNameTiff = "BigData.tif"
>     >? ? ?>> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite =
>     TRUE,
>     >? ? ?>> NAflag = -9999) # all fine
>     >? ? ?>>
>     >? ? ?>> # - as raster native
>     >? ? ?>> sFileNameNative = "BigData.grd"
>     >? ? ?>> writeRaster(rDemTest, sFileNameNative, "raster",
>     overwrite = TRUE,
>     >? ? ?>> NAflag = -9999) # all fine
>     >? ? ?>>
>     >? ? ?>>
>     >? ? ?>> ## load the big raster datasets with different packages
>     and options
>     >? ? ?>> # - load the tiff data with the gdal package via the
>     raster package
>     >? ? ?>> rDem = raster(sFileNameTiff) # all fine
>     >? ? ?>> extent(rDem) # all fine
>     >? ? ?>> mDem = raster::as.matrix(rDem) # error
>     >? ? ?>> rDem = readAll(rDem) # error
>     >? ? ?>>
>     >? ? ?>> # - load the native raster data with the raster package
>     >? ? ?>> rDem = raster(sFileNameNative) # all fine
>     >? ? ?>> extent(rDem) # all fine
>     >? ? ?>> mDem = raster::as.matrix(rDem) # all fine
>     >? ? ?>> str(mDem)
>     >? ? ?>>
>     >? ? ?>> # - load the tiff data with the tiff package
>     >? ? ?>> mDem = readTIFF(sFileNameTiff) # all fine
>     >? ? ?>> str(mDem)
>     >? ? ?>>
>     >? ? ?>> # - load the tiff data with the gdal package
>     >? ? ?>> sfDem = readGDAL(sFileNameTiff) # error
>     >? ? ?>>
>     >? ? ?>> # - load the native raster data with the gdal package
>     >? ? ?>> sfDem = readGDAL(sFileNameNative) # error
>     >? ? ?>>
>     >? ? ?>> ```
>     >? ? ?>>
>     >? ? ?>>
>     >? ? ?>> ### Startup messages when rgdal is attached (requested by
>     Roger
>     >? ? ?Bivand)
>     >? ? ?>>> ?library(rgdal)
>     >? ? ?>> rgdal: version: 1.4-8, (SVN revision 845)
>     >? ? ?>> ?Geospatial Data Abstraction Library extensions to R
>     >? ? ?successfully loaded
>     >? ? ?>> ?Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
>     >? ? ?>> ?Path to GDAL shared files:
>     >? ? ?>> ?GDAL binary built with GEOS: TRUE
>     >? ? ?>> ?Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020,
>     >? ? ?[PJ_VERSION:
>     >? ? ?>> 631]
>     >? ? ?>> ?Path to PROJ.4 shared files: (autodetected)
>     >? ? ?>> ?Linking to sp version: 1.4-1
>     >? ? ?>>
>     >? ? ?>>
>     >? ? ?>> ### Session info
>     >? ? ?>>> ?sessionInfo()
>     >? ? ?>> R version 4.0.0 (2020-04-24)
>     >? ? ?>> Platform: x86_64-pc-linux-gnu (64-bit)
>     >? ? ?>> Running under: Ubuntu 20.04 LTS
>     >? ? ?>>
>     >? ? ?>> Matrix products: default
>     >? ? ?>> BLAS: /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
>     >? ? ?>> LAPACK:
>     /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3
>     >? ? ?>>
>     >? ? ?>> locale:
>     >? ? ?>> ?[1] LC_CTYPE=de_DE.UTF-8?????? LC_NUMERIC=C
>     LC_TIME=de_DE.UTF-8
>     >? ? ?>> ?[4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
>     >? ? ?>> LC_MESSAGES=de_DE.UTF-8
>     >? ? ?>> ?[7] LC_PAPER=de_DE.UTF-8?????? LC_NAME=C LC_ADDRESS=C
>     >? ? ?>> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
>     >? ? ?>> LC_IDENTIFICATION=C
>     >? ? ?>>
>     >? ? ?>> attached base packages:
>     >? ? ?>> [1] stats???? graphics? grDevices utils datasets methods base
>     >? ? ?>>
>     >? ? ?>> other attached packages:
>     >? ? ?>> [1] gdalUtils_2.0.3.2 rgdal_1.4-8 tiff_0.1-5 raster_3.1-5
>     >? ? ?>> sp_1.4-1
>     >? ? ?>>
>     >? ? ?>> loaded via a namespace (and not attached):
>     >? ? ?>> ?[1] compiler_4.0.0??? tools_4.0.0 Rcpp_1.0.4.6
>     >? ? ?>> R.methodsS3_1.8.0 codetools_0.2-16
>     >? ? ?>> ?[6] grid_4.0.0??????? iterators_1.0.12 foreach_1.5.0
>     >? ? ?>> R.utils_2.9.2???? R.oo_1.23.0
>     >? ? ?>> [11] lattice_0.20-41
>     >? ? ?>>
>     >? ? ?>>
>     >? ? ?>> ### gdalInfo
>     >? ? ?>>> ?gdalinfo(sFileNameTiff)
>     >? ? ?>> ?[1] "Driver: GTiff/GeoTIFF"
>     >? ? ?>> ?[2] "Files: BigData.tif"
>     >? ? ?>> ?[3] "Size is 72000, 48000"
>     >? ? ?>> ?[4] "Origin = (0.000000000000000,48000.000000000000000)"
>     >? ? ?>> ?[5] "Pixel Size = (1.000000000000000,-1.000000000000000)"
>     >? ? ?>> ?[6] "Image Structure Metadata:"
>     >? ? ?>> ?[7] "? COMPRESSION=LZW"
>     >? ? ?>> ?[8] "? INTERLEAVE=BAND"
>     >? ? ?>> ?[9] "Corner Coordinates:"
>     >? ? ?>> [10] "Upper Left? (?????? 0.000, 48000.000) "
>     >? ? ?>> [11] "Lower Left? (?? 0.0000000, 0.0000000) "
>     >? ? ?>> [12] "Upper Right (?? 72000.000, 48000.000) "
>     >? ? ?>> [13] "Lower Right (?? 72000.000, 0.000) "
>     >? ? ?>> [14] "Center????? (?? 36000.000, 24000.000) "
>     >? ? ?>> [15] "Band 1 Block=72000x1 Type=Float32, ColorInterp=Gray"
>     >? ? ?>> [16] "? Min=1.000 Max=1.000 "
>     >? ? ?>> [17] "? Minimum=1.000, Maximum=1.000, Mean=nan, StdDev=nan"
>     >? ? ?>> [18] "? NoData Value=-9999"
>     >? ? ?>> [19] "? Metadata:"
>     >? ? ?>> [20] "??? STATISTICS_MAXIMUM=1"
>     >? ? ?>> [21] "??? STATISTICS_MEAN=nan"
>     >? ? ?>> [22] "??? STATISTICS_MINIMUM=1"
>     >? ? ?>> [23] "??? STATISTICS_STDDEV=nan"
>     >? ? ?>>
>     >? ? ?>> _______________________________________________
>     >? ? ?>> R-sig-Geo mailing list
>     >? ? ?>> R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     <mailto:R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>>
>     >? ? ?>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>     >? ? ?>>
>     >? ? ?>>
>     >? ? ?>
>     >
>     >? ? ?_______________________________________________
>     >? ? ?R-sig-Geo mailing list
>     > R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     <mailto:R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>>
>     > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>     >
>
>     ? ? ? ? [[alternative HTML version deleted]]
>
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
>
> -- 
> Michael Sumner
> Software and Database Engineer
> Australian Antarctic Division
> Hobart, Australia
> e-mail: mdsumner at gmail.com <mailto:mdsumner at gmail.com>

	[[alternative HTML version deleted]]


From m@tmo@er @end|ng |rom wu@@c@@t  Tue Apr 28 16:29:52 2020
From: m@tmo@er @end|ng |rom wu@@c@@t (Mathias Moser)
Date: Tue, 28 Apr 2020 16:29:52 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <0262d49b-ae9c-1540-5cb8-1f1490d58090@gmail.com>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
 <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
 <0262d49b-ae9c-1540-5cb8-1f1490d58090@gmail.com>
Message-ID: <726ef749a271278c327218f88eab0a64b53f5000.camel@wu.ac.at>

Dear all,

sorry if this is an obvious observation (or even completely wrong), but
I got interested in what's happening here: I think you are hitting the
long vector limit of R [1] and from a look at rgdal's code this happens
because it uses 32-bit types INTSXP/REALSXP in RGDAL_GetRasterData()
which are limited to 2^31-1 n. Making getRasterData() work for your
data set would probably require patching rgdal for long vector support.

(read_gdal_data() of stars _seems_ to use R_xlen_t instead to
accomodate for 52bits [2]).

Best wishes,

Mathias


[1] 
https://cloud.r-project.org/doc/manuals/r-patched/R-ints.html#Long-vectors
[2] 
https://github.com/r-spatial/sf/blob/ea1bd716769ab8140d3451e3d902cfc79bc895d5/src/stars.cpp#L172


On Tue, 2020-04-28 at 13:39 +0200, Thorsten Behrens wrote:
> Roger and Mike,
> 
> I really appreciate your help on this!
> 
> I had a look at getRasterData(). It results in the same error. Hence,
> I 
> made further tests where I compared grids with the following numbers
> of 
> cols and rows:
> 
> nPx = floor(sqrt(2^31 -1)) # 46340
> 
> and
> 
> nPx = ceiling(sqrt(2^31 -1)) # 46341
> 
> The result is clear. Raster data with 46340 * 46340 px can be loaded 
> with getRasterData() and with raster(), raster::as.matrix(), whereas 
> datasets with 46341 * 46341 px cannot and result in the error:
> 
> Error in getRasterData(gdCeil, band = 1) :
> long vectors not supported yet: memory.c:3782
> 
> read_stars() works for both. You find the corresponding code below.
> 
> Are there any other option I can try?
> 
> Thorsten
> 
> 
> Reproducible code:
> 
> ## generate raster datasets
> # 46340 * 46340 grid dataset
> sFileNameFloor = "Floor.tif"
> 
> nPx = floor(sqrt(2^31 -1)) # 46340
> nPx
> 
> rFloor = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
> nPx)))
> values(rFloor) = 1
> 
> writeRaster(rFloor, sFileNameFloor, "GTiff", overwrite = TRUE, NAflag
> = 
> -9999)
> 
> 
> # 46341 * 46341 grid dataset
> sFileNameCeil = "Ceil.tif"
> 
> nPx = ceiling(sqrt(2^31 -1))
> nPx
> 
> rCeil = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
> nPx)))
> values(rCeil) = 1
> 
> writeRaster(rCeil, sFileNameCeil, "GTiff", overwrite = TRUE, NAflag
> = 
> -9999)
> 
> 
> ## load raster datasets with different methods
> 
> # load Ceil
> gdCeil = GDAL.open(sFileNameCeil)
> dim(gdCeil)
> 
> vnCeil = getRasterData(gdCeil, band = 1) # error
> 
> GDAL.close(gdCeil)
> str(vnCeil)
> 
> stCeil = read_stars(sFileNameCeil) # all fine
> str(stCeil[[1]])
> 
> rCeil = raster(sFileNameCeil)
> mCeil = raster::as.matrix(rCeil) # error
> str(mCeil)
> 
> 
> # load Floor
> gdFloor = GDAL.open(sFileNameFloor)
> dim(gdFloor)
> 
> vnData = getRasterData(gdFloor, band = 1) # all fine
> 
> GDAL.close(gdFloor)
> str(vnData)
> 
> stFloor= read_stars(sFileNameFloor) # all fine
> str(stFloor[[1]])
> 
> rFloor = raster(sFileNameFloor)
> mFloor = raster::as.matrix(rFloor) # all fine
> str(mFloor)
> 
> 
> 
> 
> Am 28.04.2020 um 12:10 schrieb Roger Bivand:
> > On Tue, 28 Apr 2020, Thorsten Behrens wrote:
> > 
> > > Michael,
> > > 
> > > Thanks for the hint, it seems to work! Real-world tests will
> > > follow in
> > > the next few days...
> > > 
> > > So it definitely seems to be a problem of rgdal. It would be
> > > great if it
> > > could still be solved.
> > 
> > Not rgdal, but your use of it. Try looking at a sequence of
> > 
> > file <- system.file("pictures/SP27GTIF.TIF", package="rgdal")
> > obj <- GDAL.open(file)
> > (dims <- dim(obj))
> > band <- 1
> > data_vector <- getRasterData(obj, band)
> > GDAL.close(obj)
> > str(data_vector)
> > 
> > This does not create any more complicated objects, just a matrix.
> > In 
> > some cases, the rows in the matrix are ordered S -> N, so it may 
> > appear the wrong way up.
> > 
> > rgdal::getRasterData() is lightweight, and has many arguments
> > which 
> > may be helpful. rgdal::readGDAL() is heavyweight, creating a 
> > SpatialGridDataFrame object. This involves much copying of data,
> > but 
> > the output object can be used for example in mapping or analysis 
> > without further conversion. My guess is that
> > rgdal::getRasterData() 
> > gives you your matrix directly. Look at the R code to see how
> > as.is= 
> > etc. work (files may include scale and offset values - recently a
> > user 
> > was confused that scale and offset were "magically" applied to
> > convert 
> > Uint16 values to degrees Kelvin on reading). For example, if as.is
> > == 
> > TRUE or scale == 1 and offset == 0, no copying of the input matrix 
> > occurs because it is not converted. If you could check this route, 
> > others following this thread could also benefit; if I'm wrong,
> > that 
> > would also be good to know.
> > 
> > Roger
> > 
> > 
> > > Best,
> > > 
> > > Thorsten
> > > 
> > > 
> > > 
> > > Am 27.04.2020 um 15:58 schrieb Michael Sumner:
> > > > Try stars it worked for me on a test
> > > > 
> > > > On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
> > > > <
> > > > thorsten.m.behrens at gmail.com
> > > >  <mailto:
> > > > thorsten.m.behrens at gmail.com
> > > > >>
> > > > wrote:
> > > > 
> > > >     Roger,
> > > > 
> > > >     thanks a lot for your reply!
> > > > 
> > > >     I have 256GB RAM installed (mentioned it somewhere). And
> > > > there,
> > > >     all is
> > > >     fine when I run:
> > > > 
> > > >     rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > extent(c(0, 
> > > > 72000,
> > > > 
> > > >     values(rDemTest) = 1
> > > > 
> > > >     When limiting the memory to about 8GB with
> > > >     ulimit::memory_limit(8000),
> > > >     the max size which can be allocated seems to be around
> > > > 10000 x
> > > >     10000px.
> > > >     In this case all tests run fine. Unfortunately it seems to
> > > > be
> > > >     related to
> > > >     the size of the grid (48000 x 72000) and therefore the
> > > > problem
> > > >     can't be
> > > >     reproduced on machines with 8GB RAM. For some processing
> > > > steps I 
> > > > need
> > > >     grids of that size in the memory, which is why I have 256
> > > > GB
> > > >     installed.
> > > > 
> > > >     Normally, I use the raster package and not
> > > > rgdal::readGDAL(). This
> > > >     was
> > > >     just a desperate attempt to find the source of the problem.
> > > > 
> > > >     This is what I use in my code:
> > > > 
> > > >     rDem = raster(sFileNameTiff)
> > > >     mDem = raster::as.matrix(rDem)
> > > > 
> > > >     But maybe this is the same...
> > > > 
> > > >     Any further suggestions are much appreciated!
> > > > 
> > > >     Thanks again!
> > > > 
> > > >     Best,
> > > > 
> > > >     Thorsten
> > > > 
> > > > 
> > > > 
> > > > 
> > > >     Am 27.04.2020 um 14:50 schrieb Roger Bivand:
> > > >    > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
> > > >    >
> > > >    >> Dear all,
> > > >    >>
> > > >    >> my problem is that I want to read a big geotiff raster
> > > > dataset
> > > >     into R
> > > >    >> and convert it to a matrix, which does not work.
> > > >    >> The file is big but there is sufficient memory. I need
> > > > all the
> > > >     data
> > > >    >> in the memory at the same time.
> > > >    >>
> > > >    >> The error occurs under R 3.6.3 as well as 4.0.0 using
> > > > Ubuntu 
> > > > 20.04
> > > >    >> LTS with the latest version of the packages (see session
> > > > info
> > > >     below)
> > > >    >> and 256GB RAM installed.
> > > >    >>
> > > >    >> When loading the raster dataset using rgdal (via readGDAL
> > > > or
> > > >    >> raster::readAll) I get the follwoing error in R 4.0.0:
> > > >    >>
> > > >    >> ```
> > > >    >> Error in rgdal::getRasterData(con, offset = offs,
> > > > region.dim =
> > > >     reg,
> > > >    >> band = object at data@band) :
> > > >    >>   long vectors not supported yet: memory.c:3782
> > > >    >> ```
> > > >    >
> > > >    > On a 16GB Fedora platform:
> > > >    >
> > > >    >> library(raster) # 3.1-5
> > > >    >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > extent(c(0,
> > > >     72000,
> > > >    > 0,
> > > >    > + 48000))) # all fine
> > > >    >> rDemTest
> > > >    > class      : RasterLayer
> > > >    > dimensions : 48000, 72000, 3.456e+09  (nrow, ncol, ncell)
> > > >    > resolution : 1, 1  (x, y)
> > > >    > extent     : 0, 72000, 0, 48000  (xmin, xmax, ymin, ymax)
> > > >    > crs        : NA
> > > >    >
> > > >    >> values(rDemTest) = 1
> > > >    > Error: cannot allocate vector of size 25.7 Gb
> > > >    >
> > > >    > So you are deceiving yourself into thinking that all is
> > > > fine at
> > > >     this
> > > >    > point. Please try to instantiate an example that can be
> > > >     reproduced on
> > > >    > a machine with 8GB RAM.
> > > >    >
> > > >    > Further note that rgdal::readGDAL() is not how you handle
> > > > very
> > > >     large
> > > >    > objects in files, and never has been. raster can handle
> > > > blocks
> > > >     of data
> > > >    > from bands in file; stars and gdalcubes can use proxy=TRUE
> > > > for the
> > > >    > same purpose. Why did you choose rgdal::readGDAL() when
> > > > this is 
> > > > not
> > > >    > its purpose?
> > > >    >
> > > >    > You did not say how much RAM is on your platform.
> > > >    >
> > > >    > Roger
> > > >    >
> > > >    >>
> > > >    >> In R 3.6.3 is is "... memory.c:3717"
> > > >    >>
> > > >    >> However, I can load the same file with the tiff package
> > > > and a
> > > >     file of
> > > >    >> the same size in the native raster package format (*.grd)
> > > > with 
> > > > the
> > > >    >> raster package but again not with the rgdal package.
> > > >    >>
> > > >    >> gdalinfo (gdalUtils) does not complain (see below).
> > > > Hence, Even
> > > >    >> Rouault assumes the problem is related to rgdal and not
> > > > gdal
> > > >    >> (
> > > > https://github.com/OSGeo/gdal/issues/2442
> > > > ).
> > > >    >>
> > > >    >> Below you find reproducible code, which generates a
> > > > raster file,
> > > >    >> saves the two formats (.tiff and .grd) and tries to read
> > > > them 
> > > > with
> > > >    >> the different packages.
> > > >    >>
> > > >    >> Is this a known limitation? Any help is greatly
> > > > appreciated!
> > > >    >>
> > > >    >> Thanks a lot in advance!
> > > >    >>
> > > >    >> Best wishes and stay healthy,
> > > >    >> Thorsten
> > > >    >>
> > > >    >>
> > > >    >>
> > > >    >> ### Steps to reproduce the problem.
> > > >    >>
> > > >    >> R code:
> > > >    >>
> > > >    >> ```
> > > >    >> library(rgdal) # 1.4-8
> > > >    >> library(raster) # 3.1-5
> > > >    >> library(tiff) # 0.1-5
> > > >    >>
> > > >    >> ## generate and manipulate a big raster dataset
> > > >    >> # - generate
> > > >    >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > extent(c(0,
> > > >    >> 72000, 0, 48000))) # all fine
> > > >    >>
> > > >    >> # - manipulate
> > > >    >> values(rDemTest) = 1 # all fine
> > > >    >>
> > > >    >> # - convert
> > > >    >> mDemTest = raster::as.matrix(rDemTest) # all fine
> > > >    >> str(mDemTest)
> > > >    >>
> > > >    >> ## save a big dataset
> > > >    >>
> > > >    >> # - as raster/gdal
> > > >    >> sFileNameTiff = "BigData.tif"
> > > >    >> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite =
> > > > TRUE,
> > > >    >> NAflag = -9999) # all fine
> > > >    >>
> > > >    >> # - as raster native
> > > >    >> sFileNameNative = "BigData.grd"
> > > >    >> writeRaster(rDemTest, sFileNameNative, "raster",
> > > > overwrite = 
> > > > TRUE,
> > > >    >> NAflag = -9999) # all fine
> > > >    >>
> > > >    >>
> > > >    >> ## load the big raster datasets with different packages
> > > > and 
> > > > options
> > > >    >> # - load the tiff data with the gdal package via the
> > > > raster 
> > > > package
> > > >    >> rDem = raster(sFileNameTiff) # all fine
> > > >    >> extent(rDem) # all fine
> > > >    >> mDem = raster::as.matrix(rDem) # error
> > > >    >> rDem = readAll(rDem) # error
> > > >    >>
> > > >    >> # - load the native raster data with the raster package
> > > >    >> rDem = raster(sFileNameNative) # all fine
> > > >    >> extent(rDem) # all fine
> > > >    >> mDem = raster::as.matrix(rDem) # all fine
> > > >    >> str(mDem)
> > > >    >>
> > > >    >> # - load the tiff data with the tiff package
> > > >    >> mDem = readTIFF(sFileNameTiff) # all fine
> > > >    >> str(mDem)
> > > >    >>
> > > >    >> # - load the tiff data with the gdal package
> > > >    >> sfDem = readGDAL(sFileNameTiff) # error
> > > >    >>
> > > >    >> # - load the native raster data with the gdal package
> > > >    >> sfDem = readGDAL(sFileNameNative) # error
> > > >    >>
> > > >    >> ```
> > > >    >>
> > > >    >>
> > > >    >> ### Startup messages when rgdal is attached (requested by
> > > > Roger
> > > >     Bivand)
> > > >    >>>  library(rgdal)
> > > >    >> rgdal: version: 1.4-8, (SVN revision 845)
> > > >    >>  Geospatial Data Abstraction Library extensions to R
> > > >     successfully loaded
> > > >    >>  Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
> > > >    >>  Path to GDAL shared files:
> > > >    >>  GDAL binary built with GEOS: TRUE
> > > >    >>  Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020,
> > > >     [PJ_VERSION:
> > > >    >> 631]
> > > >    >>  Path to PROJ.4 shared files: (autodetected)
> > > >    >>  Linking to sp version: 1.4-1
> > > >    >>
> > > >    >>
> > > >    >> ### Session info
> > > >    >>>  sessionInfo()
> > > >    >> R version 4.0.0 (2020-04-24)
> > > >    >> Platform: x86_64-pc-linux-gnu (64-bit)
> > > >    >> Running under: Ubuntu 20.04 LTS
> > > >    >>
> > > >    >> Matrix products: default
> > > >    >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-
> > > > pthread/libblas.so.3
> > > >    >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-
> > > > pthread/liblapack.so.3
> > > >    >>
> > > >    >> locale:
> > > >    >>  [1] LC_CTYPE=de_DE.UTF-8       LC_NUMERIC=C
> > > > LC_TIME=de_DE.UTF-8
> > > >    >>  [4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
> > > >    >> LC_MESSAGES=de_DE.UTF-8
> > > >    >>  [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C LC_ADDRESS=C
> > > >    >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
> > > >    >> LC_IDENTIFICATION=C
> > > >    >>
> > > >    >> attached base packages:
> > > >    >> [1] stats     graphics  grDevices utils datasets methods
> > > > base
> > > >    >>
> > > >    >> other attached packages:
> > > >    >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8       tiff_0.1-5
> > > > raster_3.1-5
> > > >    >> sp_1.4-1
> > > >    >>
> > > >    >> loaded via a namespace (and not attached):
> > > >    >>  [1] compiler_4.0.0    tools_4.0.0 Rcpp_1.0.4.6
> > > >    >> R.methodsS3_1.8.0 codetools_0.2-16
> > > >    >>  [6] grid_4.0.0        iterators_1.0.12 foreach_1.5.0
> > > >    >> R.utils_2.9.2     R.oo_1.23.0
> > > >    >> [11] lattice_0.20-41
> > > >    >>
> > > >    >>
> > > >    >> ### gdalInfo
> > > >    >>>  gdalinfo(sFileNameTiff)
> > > >    >>  [1] "Driver: GTiff/GeoTIFF"
> > > >    >>  [2] "Files: BigData.tif"
> > > >    >>  [3] "Size is 72000, 48000"
> > > >    >>  [4] "Origin = (0.000000000000000,48000.000000000000000)"
> > > >    >>  [5] "Pixel Size = (1.000000000000000,-
> > > > 1.000000000000000)"
> > > >    >>  [6] "Image Structure Metadata:"
> > > >    >>  [7] "  COMPRESSION=LZW"
> > > >    >>  [8] "  INTERLEAVE=BAND"
> > > >    >>  [9] "Corner Coordinates:"
> > > >    >> [10] "Upper Left  (       0.000,   48000.000) "
> > > >    >> [11] "Lower Left  (   0.0000000,   0.0000000) "
> > > >    >> [12] "Upper Right (   72000.000,   48000.000) "
> > > >    >> [13] "Lower Right (   72000.000,       0.000) "
> > > >    >> [14] "Center      (   36000.000,   24000.000) "
> > > >    >> [15] "Band 1 Block=72000x1 Type=Float32,
> > > > ColorInterp=Gray"
> > > >    >> [16] "  Min=1.000 Max=1.000 "
> > > >    >> [17] "  Minimum=1.000, Maximum=1.000, Mean=nan,
> > > > StdDev=nan"
> > > >    >> [18] "  NoData Value=-9999"
> > > >    >> [19] "  Metadata:"
> > > >    >> [20] "    STATISTICS_MAXIMUM=1"
> > > >    >> [21] "    STATISTICS_MEAN=nan"
> > > >    >> [22] "    STATISTICS_MINIMUM=1"
> > > >    >> [23] "    STATISTICS_STDDEV=nan"
> > > >    >>
> > > >    >> _______________________________________________
> > > >    >> R-sig-Geo mailing list
> > > >    >> 
> > > > R-sig-Geo at r-project.org
> > > >  <mailto:
> > > > R-sig-Geo at r-project.org
> > > > >
> > > >    >> 
> > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > 
> > > >    >>
> > > >    >>
> > > >    >
> > > > 
> > > >     _______________________________________________
> > > >     R-sig-Geo mailing list
> > > >     
> > > > R-sig-Geo at r-project.org
> > > >  <mailto:
> > > > R-sig-Geo at r-project.org
> > > > >
> > > >     
> > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > 
> > > > 
> > > 
> > >     [[alternative HTML version deleted]]
> > > 
> > > _______________________________________________
> > > R-sig-Geo mailing list
> > > R-sig-Geo at r-project.org
> > > 
> > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > 
> > > 
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> 
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


From thor@ten@m@behren@ @end|ng |rom gm@||@com  Tue Apr 28 16:55:20 2020
From: thor@ten@m@behren@ @end|ng |rom gm@||@com (Thorsten Behrens)
Date: Tue, 28 Apr 2020 16:55:20 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <726ef749a271278c327218f88eab0a64b53f5000.camel@wu.ac.at>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
 <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
 <0262d49b-ae9c-1540-5cb8-1f1490d58090@gmail.com>
 <726ef749a271278c327218f88eab0a64b53f5000.camel@wu.ac.at>
Message-ID: <d27177af-8253-4e3b-620e-bdc0ba03af71@gmail.com>

Hi Mathias and all,

thanks! This confirms my test with the grid sizes related to 2^31-1

My current solution is to use

mLargeRaster = read_stars("Raster.tif")[[1]]

instead of

rLargeRaster = raster("Raster.tif")
mLargeRaster = raster::as.matrix(rLargeRaster)

Cheers,
Thorsten



Am 28.04.2020 um 16:29 schrieb Mathias Moser:
> Dear all,
>
> sorry if this is an obvious observation (or even completely wrong), but
> I got interested in what's happening here: I think you are hitting the
> long vector limit of R [1] and from a look at rgdal's code this happens
> because it uses 32-bit types INTSXP/REALSXP in RGDAL_GetRasterData()
> which are limited to 2^31-1 n. Making getRasterData() work for your
> data set would probably require patching rgdal for long vector support.
>
> (read_gdal_data() of stars _seems_ to use R_xlen_t instead to
> accomodate for 52bits [2]).
>
> Best wishes,
>
> Mathias
>
>
> [1]
> https://cloud.r-project.org/doc/manuals/r-patched/R-ints.html#Long-vectors
> [2]
> https://github.com/r-spatial/sf/blob/ea1bd716769ab8140d3451e3d902cfc79bc895d5/src/stars.cpp#L172
>
>
> On Tue, 2020-04-28 at 13:39 +0200, Thorsten Behrens wrote:
>> Roger and Mike,
>>
>> I really appreciate your help on this!
>>
>> I had a look at getRasterData(). It results in the same error. Hence,
>> I
>> made further tests where I compared grids with the following numbers
>> of
>> cols and rows:
>>
>> nPx = floor(sqrt(2^31 -1)) # 46340
>>
>> and
>>
>> nPx = ceiling(sqrt(2^31 -1)) # 46341
>>
>> The result is clear. Raster data with 46340 * 46340 px can be loaded
>> with getRasterData() and with raster(), raster::as.matrix(), whereas
>> datasets with 46341 * 46341 px cannot and result in the error:
>>
>> Error in getRasterData(gdCeil, band = 1) :
>> long vectors not supported yet: memory.c:3782
>>
>> read_stars() works for both. You find the corresponding code below.
>>
>> Are there any other option I can try?
>>
>> Thorsten
>>
>>
>> Reproducible code:
>>
>> ## generate raster datasets
>> # 46340 * 46340 grid dataset
>> sFileNameFloor = "Floor.tif"
>>
>> nPx = floor(sqrt(2^31 -1)) # 46340
>> nPx
>>
>> rFloor = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
>> nPx)))
>> values(rFloor) = 1
>>
>> writeRaster(rFloor, sFileNameFloor, "GTiff", overwrite = TRUE, NAflag
>> =
>> -9999)
>>
>>
>> # 46341 * 46341 grid dataset
>> sFileNameCeil = "Ceil.tif"
>>
>> nPx = ceiling(sqrt(2^31 -1))
>> nPx
>>
>> rCeil = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
>> nPx)))
>> values(rCeil) = 1
>>
>> writeRaster(rCeil, sFileNameCeil, "GTiff", overwrite = TRUE, NAflag
>> =
>> -9999)
>>
>>
>> ## load raster datasets with different methods
>>
>> # load Ceil
>> gdCeil = GDAL.open(sFileNameCeil)
>> dim(gdCeil)
>>
>> vnCeil = getRasterData(gdCeil, band = 1) # error
>>
>> GDAL.close(gdCeil)
>> str(vnCeil)
>>
>> stCeil = read_stars(sFileNameCeil) # all fine
>> str(stCeil[[1]])
>>
>> rCeil = raster(sFileNameCeil)
>> mCeil = raster::as.matrix(rCeil) # error
>> str(mCeil)
>>
>>
>> # load Floor
>> gdFloor = GDAL.open(sFileNameFloor)
>> dim(gdFloor)
>>
>> vnData = getRasterData(gdFloor, band = 1) # all fine
>>
>> GDAL.close(gdFloor)
>> str(vnData)
>>
>> stFloor= read_stars(sFileNameFloor) # all fine
>> str(stFloor[[1]])
>>
>> rFloor = raster(sFileNameFloor)
>> mFloor = raster::as.matrix(rFloor) # all fine
>> str(mFloor)
>>
>>
>>
>>
>> Am 28.04.2020 um 12:10 schrieb Roger Bivand:
>>> On Tue, 28 Apr 2020, Thorsten Behrens wrote:
>>>
>>>> Michael,
>>>>
>>>> Thanks for the hint, it seems to work! Real-world tests will
>>>> follow in
>>>> the next few days...
>>>>
>>>> So it definitely seems to be a problem of rgdal. It would be
>>>> great if it
>>>> could still be solved.
>>> Not rgdal, but your use of it. Try looking at a sequence of
>>>
>>> file <- system.file("pictures/SP27GTIF.TIF", package="rgdal")
>>> obj <- GDAL.open(file)
>>> (dims <- dim(obj))
>>> band <- 1
>>> data_vector <- getRasterData(obj, band)
>>> GDAL.close(obj)
>>> str(data_vector)
>>>
>>> This does not create any more complicated objects, just a matrix.
>>> In
>>> some cases, the rows in the matrix are ordered S -> N, so it may
>>> appear the wrong way up.
>>>
>>> rgdal::getRasterData() is lightweight, and has many arguments
>>> which
>>> may be helpful. rgdal::readGDAL() is heavyweight, creating a
>>> SpatialGridDataFrame object. This involves much copying of data,
>>> but
>>> the output object can be used for example in mapping or analysis
>>> without further conversion. My guess is that
>>> rgdal::getRasterData()
>>> gives you your matrix directly. Look at the R code to see how
>>> as.is=
>>> etc. work (files may include scale and offset values - recently a
>>> user
>>> was confused that scale and offset were "magically" applied to
>>> convert
>>> Uint16 values to degrees Kelvin on reading). For example, if as.is
>>> ==
>>> TRUE or scale == 1 and offset == 0, no copying of the input matrix
>>> occurs because it is not converted. If you could check this route,
>>> others following this thread could also benefit; if I'm wrong,
>>> that
>>> would also be good to know.
>>>
>>> Roger
>>>
>>>
>>>> Best,
>>>>
>>>> Thorsten
>>>>
>>>>
>>>>
>>>> Am 27.04.2020 um 15:58 schrieb Michael Sumner:
>>>>> Try stars it worked for me on a test
>>>>>
>>>>> On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
>>>>> <
>>>>> thorsten.m.behrens at gmail.com
>>>>>   <mailto:
>>>>> thorsten.m.behrens at gmail.com
>>>>> wrote:
>>>>>
>>>>>      Roger,
>>>>>
>>>>>      thanks a lot for your reply!
>>>>>
>>>>>      I have 256GB RAM installed (mentioned it somewhere). And
>>>>> there,
>>>>>      all is
>>>>>      fine when I run:
>>>>>
>>>>>      rDemTest = raster(nrow = 48000, ncol = 72000, ext =
>>>>> extent(c(0,
>>>>> 72000,
>>>>>
>>>>>      values(rDemTest) = 1
>>>>>
>>>>>      When limiting the memory to about 8GB with
>>>>>      ulimit::memory_limit(8000),
>>>>>      the max size which can be allocated seems to be around
>>>>> 10000 x
>>>>>      10000px.
>>>>>      In this case all tests run fine. Unfortunately it seems to
>>>>> be
>>>>>      related to
>>>>>      the size of the grid (48000 x 72000) and therefore the
>>>>> problem
>>>>>      can't be
>>>>>      reproduced on machines with 8GB RAM. For some processing
>>>>> steps I
>>>>> need
>>>>>      grids of that size in the memory, which is why I have 256
>>>>> GB
>>>>>      installed.
>>>>>
>>>>>      Normally, I use the raster package and not
>>>>> rgdal::readGDAL(). This
>>>>>      was
>>>>>      just a desperate attempt to find the source of the problem.
>>>>>
>>>>>      This is what I use in my code:
>>>>>
>>>>>      rDem = raster(sFileNameTiff)
>>>>>      mDem = raster::as.matrix(rDem)
>>>>>
>>>>>      But maybe this is the same...
>>>>>
>>>>>      Any further suggestions are much appreciated!
>>>>>
>>>>>      Thanks again!
>>>>>
>>>>>      Best,
>>>>>
>>>>>      Thorsten
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>      Am 27.04.2020 um 14:50 schrieb Roger Bivand:
>>>>>     > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
>>>>>     >
>>>>>     >> Dear all,
>>>>>     >>
>>>>>     >> my problem is that I want to read a big geotiff raster
>>>>> dataset
>>>>>      into R
>>>>>     >> and convert it to a matrix, which does not work.
>>>>>     >> The file is big but there is sufficient memory. I need
>>>>> all the
>>>>>      data
>>>>>     >> in the memory at the same time.
>>>>>     >>
>>>>>     >> The error occurs under R 3.6.3 as well as 4.0.0 using
>>>>> Ubuntu
>>>>> 20.04
>>>>>     >> LTS with the latest version of the packages (see session
>>>>> info
>>>>>      below)
>>>>>     >> and 256GB RAM installed.
>>>>>     >>
>>>>>     >> When loading the raster dataset using rgdal (via readGDAL
>>>>> or
>>>>>     >> raster::readAll) I get the follwoing error in R 4.0.0:
>>>>>     >>
>>>>>     >> ```
>>>>>     >> Error in rgdal::getRasterData(con, offset = offs,
>>>>> region.dim =
>>>>>      reg,
>>>>>     >> band = object at data@band) :
>>>>>     >>   long vectors not supported yet: memory.c:3782
>>>>>     >> ```
>>>>>     >
>>>>>     > On a 16GB Fedora platform:
>>>>>     >
>>>>>     >> library(raster) # 3.1-5
>>>>>     >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
>>>>> extent(c(0,
>>>>>      72000,
>>>>>     > 0,
>>>>>     > + 48000))) # all fine
>>>>>     >> rDemTest
>>>>>     > class      : RasterLayer
>>>>>     > dimensions : 48000, 72000, 3.456e+09  (nrow, ncol, ncell)
>>>>>     > resolution : 1, 1  (x, y)
>>>>>     > extent     : 0, 72000, 0, 48000  (xmin, xmax, ymin, ymax)
>>>>>     > crs        : NA
>>>>>     >
>>>>>     >> values(rDemTest) = 1
>>>>>     > Error: cannot allocate vector of size 25.7 Gb
>>>>>     >
>>>>>     > So you are deceiving yourself into thinking that all is
>>>>> fine at
>>>>>      this
>>>>>     > point. Please try to instantiate an example that can be
>>>>>      reproduced on
>>>>>     > a machine with 8GB RAM.
>>>>>     >
>>>>>     > Further note that rgdal::readGDAL() is not how you handle
>>>>> very
>>>>>      large
>>>>>     > objects in files, and never has been. raster can handle
>>>>> blocks
>>>>>      of data
>>>>>     > from bands in file; stars and gdalcubes can use proxy=TRUE
>>>>> for the
>>>>>     > same purpose. Why did you choose rgdal::readGDAL() when
>>>>> this is
>>>>> not
>>>>>     > its purpose?
>>>>>     >
>>>>>     > You did not say how much RAM is on your platform.
>>>>>     >
>>>>>     > Roger
>>>>>     >
>>>>>     >>
>>>>>     >> In R 3.6.3 is is "... memory.c:3717"
>>>>>     >>
>>>>>     >> However, I can load the same file with the tiff package
>>>>> and a
>>>>>      file of
>>>>>     >> the same size in the native raster package format (*.grd)
>>>>> with
>>>>> the
>>>>>     >> raster package but again not with the rgdal package.
>>>>>     >>
>>>>>     >> gdalinfo (gdalUtils) does not complain (see below).
>>>>> Hence, Even
>>>>>     >> Rouault assumes the problem is related to rgdal and not
>>>>> gdal
>>>>>     >> (
>>>>> https://github.com/OSGeo/gdal/issues/2442
>>>>> ).
>>>>>     >>
>>>>>     >> Below you find reproducible code, which generates a
>>>>> raster file,
>>>>>     >> saves the two formats (.tiff and .grd) and tries to read
>>>>> them
>>>>> with
>>>>>     >> the different packages.
>>>>>     >>
>>>>>     >> Is this a known limitation? Any help is greatly
>>>>> appreciated!
>>>>>     >>
>>>>>     >> Thanks a lot in advance!
>>>>>     >>
>>>>>     >> Best wishes and stay healthy,
>>>>>     >> Thorsten
>>>>>     >>
>>>>>     >>
>>>>>     >>
>>>>>     >> ### Steps to reproduce the problem.
>>>>>     >>
>>>>>     >> R code:
>>>>>     >>
>>>>>     >> ```
>>>>>     >> library(rgdal) # 1.4-8
>>>>>     >> library(raster) # 3.1-5
>>>>>     >> library(tiff) # 0.1-5
>>>>>     >>
>>>>>     >> ## generate and manipulate a big raster dataset
>>>>>     >> # - generate
>>>>>     >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
>>>>> extent(c(0,
>>>>>     >> 72000, 0, 48000))) # all fine
>>>>>     >>
>>>>>     >> # - manipulate
>>>>>     >> values(rDemTest) = 1 # all fine
>>>>>     >>
>>>>>     >> # - convert
>>>>>     >> mDemTest = raster::as.matrix(rDemTest) # all fine
>>>>>     >> str(mDemTest)
>>>>>     >>
>>>>>     >> ## save a big dataset
>>>>>     >>
>>>>>     >> # - as raster/gdal
>>>>>     >> sFileNameTiff = "BigData.tif"
>>>>>     >> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite =
>>>>> TRUE,
>>>>>     >> NAflag = -9999) # all fine
>>>>>     >>
>>>>>     >> # - as raster native
>>>>>     >> sFileNameNative = "BigData.grd"
>>>>>     >> writeRaster(rDemTest, sFileNameNative, "raster",
>>>>> overwrite =
>>>>> TRUE,
>>>>>     >> NAflag = -9999) # all fine
>>>>>     >>
>>>>>     >>
>>>>>     >> ## load the big raster datasets with different packages
>>>>> and
>>>>> options
>>>>>     >> # - load the tiff data with the gdal package via the
>>>>> raster
>>>>> package
>>>>>     >> rDem = raster(sFileNameTiff) # all fine
>>>>>     >> extent(rDem) # all fine
>>>>>     >> mDem = raster::as.matrix(rDem) # error
>>>>>     >> rDem = readAll(rDem) # error
>>>>>     >>
>>>>>     >> # - load the native raster data with the raster package
>>>>>     >> rDem = raster(sFileNameNative) # all fine
>>>>>     >> extent(rDem) # all fine
>>>>>     >> mDem = raster::as.matrix(rDem) # all fine
>>>>>     >> str(mDem)
>>>>>     >>
>>>>>     >> # - load the tiff data with the tiff package
>>>>>     >> mDem = readTIFF(sFileNameTiff) # all fine
>>>>>     >> str(mDem)
>>>>>     >>
>>>>>     >> # - load the tiff data with the gdal package
>>>>>     >> sfDem = readGDAL(sFileNameTiff) # error
>>>>>     >>
>>>>>     >> # - load the native raster data with the gdal package
>>>>>     >> sfDem = readGDAL(sFileNameNative) # error
>>>>>     >>
>>>>>     >> ```
>>>>>     >>
>>>>>     >>
>>>>>     >> ### Startup messages when rgdal is attached (requested by
>>>>> Roger
>>>>>      Bivand)
>>>>>     >>>  library(rgdal)
>>>>>     >> rgdal: version: 1.4-8, (SVN revision 845)
>>>>>     >>  Geospatial Data Abstraction Library extensions to R
>>>>>      successfully loaded
>>>>>     >>  Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
>>>>>     >>  Path to GDAL shared files:
>>>>>     >>  GDAL binary built with GEOS: TRUE
>>>>>     >>  Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020,
>>>>>      [PJ_VERSION:
>>>>>     >> 631]
>>>>>     >>  Path to PROJ.4 shared files: (autodetected)
>>>>>     >>  Linking to sp version: 1.4-1
>>>>>     >>
>>>>>     >>
>>>>>     >> ### Session info
>>>>>     >>>  sessionInfo()
>>>>>     >> R version 4.0.0 (2020-04-24)
>>>>>     >> Platform: x86_64-pc-linux-gnu (64-bit)
>>>>>     >> Running under: Ubuntu 20.04 LTS
>>>>>     >>
>>>>>     >> Matrix products: default
>>>>>     >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-
>>>>> pthread/libblas.so.3
>>>>>     >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-
>>>>> pthread/liblapack.so.3
>>>>>     >>
>>>>>     >> locale:
>>>>>     >>  [1] LC_CTYPE=de_DE.UTF-8       LC_NUMERIC=C
>>>>> LC_TIME=de_DE.UTF-8
>>>>>     >>  [4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
>>>>>     >> LC_MESSAGES=de_DE.UTF-8
>>>>>     >>  [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C LC_ADDRESS=C
>>>>>     >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
>>>>>     >> LC_IDENTIFICATION=C
>>>>>     >>
>>>>>     >> attached base packages:
>>>>>     >> [1] stats     graphics  grDevices utils datasets methods
>>>>> base
>>>>>     >>
>>>>>     >> other attached packages:
>>>>>     >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8       tiff_0.1-5
>>>>> raster_3.1-5
>>>>>     >> sp_1.4-1
>>>>>     >>
>>>>>     >> loaded via a namespace (and not attached):
>>>>>     >>  [1] compiler_4.0.0    tools_4.0.0 Rcpp_1.0.4.6
>>>>>     >> R.methodsS3_1.8.0 codetools_0.2-16
>>>>>     >>  [6] grid_4.0.0        iterators_1.0.12 foreach_1.5.0
>>>>>     >> R.utils_2.9.2     R.oo_1.23.0
>>>>>     >> [11] lattice_0.20-41
>>>>>     >>
>>>>>     >>
>>>>>     >> ### gdalInfo
>>>>>     >>>  gdalinfo(sFileNameTiff)
>>>>>     >>  [1] "Driver: GTiff/GeoTIFF"
>>>>>     >>  [2] "Files: BigData.tif"
>>>>>     >>  [3] "Size is 72000, 48000"
>>>>>     >>  [4] "Origin = (0.000000000000000,48000.000000000000000)"
>>>>>     >>  [5] "Pixel Size = (1.000000000000000,-
>>>>> 1.000000000000000)"
>>>>>     >>  [6] "Image Structure Metadata:"
>>>>>     >>  [7] "  COMPRESSION=LZW"
>>>>>     >>  [8] "  INTERLEAVE=BAND"
>>>>>     >>  [9] "Corner Coordinates:"
>>>>>     >> [10] "Upper Left  (       0.000,   48000.000) "
>>>>>     >> [11] "Lower Left  (   0.0000000,   0.0000000) "
>>>>>     >> [12] "Upper Right (   72000.000,   48000.000) "
>>>>>     >> [13] "Lower Right (   72000.000,       0.000) "
>>>>>     >> [14] "Center      (   36000.000,   24000.000) "
>>>>>     >> [15] "Band 1 Block=72000x1 Type=Float32,
>>>>> ColorInterp=Gray"
>>>>>     >> [16] "  Min=1.000 Max=1.000 "
>>>>>     >> [17] "  Minimum=1.000, Maximum=1.000, Mean=nan,
>>>>> StdDev=nan"
>>>>>     >> [18] "  NoData Value=-9999"
>>>>>     >> [19] "  Metadata:"
>>>>>     >> [20] "    STATISTICS_MAXIMUM=1"
>>>>>     >> [21] "    STATISTICS_MEAN=nan"
>>>>>     >> [22] "    STATISTICS_MINIMUM=1"
>>>>>     >> [23] "    STATISTICS_STDDEV=nan"
>>>>>     >>
>>>>>     >> _______________________________________________
>>>>>     >> R-sig-Geo mailing list
>>>>>     >>
>>>>> R-sig-Geo at r-project.org
>>>>>   <mailto:
>>>>> R-sig-Geo at r-project.org
>>>>>     >>
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>
>>>>>     >>
>>>>>     >>
>>>>>     >
>>>>>
>>>>>      _______________________________________________
>>>>>      R-sig-Geo mailing list
>>>>>      
>>>>> R-sig-Geo at r-project.org
>>>>>   <mailto:
>>>>> R-sig-Geo at r-project.org
>>>>>      
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>
>>>>>
>>>>      [[alternative HTML version deleted]]
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>>
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>
>>>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>>
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From Roger@B|v@nd @end|ng |rom nhh@no  Tue Apr 28 19:41:10 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Tue, 28 Apr 2020 19:41:10 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <726ef749a271278c327218f88eab0a64b53f5000.camel@wu.ac.at>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
 <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
 <0262d49b-ae9c-1540-5cb8-1f1490d58090@gmail.com>
 <726ef749a271278c327218f88eab0a64b53f5000.camel@wu.ac.at>
Message-ID: <alpine.LFD.2.21.2004281927080.4172689@reclus.nhh.no>

On Tue, 28 Apr 2020, Mathias Moser wrote:

> Dear all,
>
> sorry if this is an obvious observation (or even completely wrong), but
> I got interested in what's happening here: I think you are hitting the
> long vector limit of R [1] and from a look at rgdal's code this happens
> because it uses 32-bit types INTSXP/REALSXP in RGDAL_GetRasterData()
> which are limited to 2^31-1 n. Making getRasterData() work for your
> data set would probably require patching rgdal for long vector support.

This looks probable, I'd got to the same point, as now I can max out swap 
on assigning values. Changes to lines 1574 and 1664 in 
src/gdal-bindings.cpp committed to SVN, revision 961, will be installable 
with

https://r-forge.r-project.org/R/?group_id=884 and if status green,
install.packages("rgdal", repos="http://R-Forge.R-project.org")

in about 2 hours (R-Forge builds tarballs, slowly), or source tree now by

svn checkout svn://scm.r-forge.r-project.org/svnroot/rgdal/

I cannot check this because I have no access to a platform with enough 
RAM, so I need help here. I haven't been able to confirm that 
LENGTH(sRStorage) returns an R_xlen_t, or double, in lines 1672, 1685 or 
1693. Is there a way of generating a large file using a GDAL app, perhaps, 
then I could just try reading a larger file if LENGTH plays up?

Roger

>
> (read_gdal_data() of stars _seems_ to use R_xlen_t instead to
> accomodate for 52bits [2]).
>
> Best wishes,
>
> Mathias
>
>
> [1]
> https://cloud.r-project.org/doc/manuals/r-patched/R-ints.html#Long-vectors
> [2]
> https://github.com/r-spatial/sf/blob/ea1bd716769ab8140d3451e3d902cfc79bc895d5/src/stars.cpp#L172
>
>
> On Tue, 2020-04-28 at 13:39 +0200, Thorsten Behrens wrote:
>> Roger and Mike,
>>
>> I really appreciate your help on this!
>>
>> I had a look at getRasterData(). It results in the same error. Hence,
>> I
>> made further tests where I compared grids with the following numbers
>> of
>> cols and rows:
>>
>> nPx = floor(sqrt(2^31 -1)) # 46340
>>
>> and
>>
>> nPx = ceiling(sqrt(2^31 -1)) # 46341
>>
>> The result is clear. Raster data with 46340 * 46340 px can be loaded
>> with getRasterData() and with raster(), raster::as.matrix(), whereas
>> datasets with 46341 * 46341 px cannot and result in the error:
>>
>> Error in getRasterData(gdCeil, band = 1) :
>> long vectors not supported yet: memory.c:3782
>>
>> read_stars() works for both. You find the corresponding code below.
>>
>> Are there any other option I can try?
>>
>> Thorsten
>>
>>
>> Reproducible code:
>>
>> ## generate raster datasets
>> # 46340 * 46340 grid dataset
>> sFileNameFloor = "Floor.tif"
>>
>> nPx = floor(sqrt(2^31 -1)) # 46340
>> nPx
>>
>> rFloor = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
>> nPx)))
>> values(rFloor) = 1
>>
>> writeRaster(rFloor, sFileNameFloor, "GTiff", overwrite = TRUE, NAflag
>> =
>> -9999)
>>
>>
>> # 46341 * 46341 grid dataset
>> sFileNameCeil = "Ceil.tif"
>>
>> nPx = ceiling(sqrt(2^31 -1))
>> nPx
>>
>> rCeil = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
>> nPx)))
>> values(rCeil) = 1
>>
>> writeRaster(rCeil, sFileNameCeil, "GTiff", overwrite = TRUE, NAflag
>> =
>> -9999)
>>
>>
>> ## load raster datasets with different methods
>>
>> # load Ceil
>> gdCeil = GDAL.open(sFileNameCeil)
>> dim(gdCeil)
>>
>> vnCeil = getRasterData(gdCeil, band = 1) # error
>>
>> GDAL.close(gdCeil)
>> str(vnCeil)
>>
>> stCeil = read_stars(sFileNameCeil) # all fine
>> str(stCeil[[1]])
>>
>> rCeil = raster(sFileNameCeil)
>> mCeil = raster::as.matrix(rCeil) # error
>> str(mCeil)
>>
>>
>> # load Floor
>> gdFloor = GDAL.open(sFileNameFloor)
>> dim(gdFloor)
>>
>> vnData = getRasterData(gdFloor, band = 1) # all fine
>>
>> GDAL.close(gdFloor)
>> str(vnData)
>>
>> stFloor= read_stars(sFileNameFloor) # all fine
>> str(stFloor[[1]])
>>
>> rFloor = raster(sFileNameFloor)
>> mFloor = raster::as.matrix(rFloor) # all fine
>> str(mFloor)
>>
>>
>>
>>
>> Am 28.04.2020 um 12:10 schrieb Roger Bivand:
>>> On Tue, 28 Apr 2020, Thorsten Behrens wrote:
>>>
>>>> Michael,
>>>>
>>>> Thanks for the hint, it seems to work! Real-world tests will
>>>> follow in
>>>> the next few days...
>>>>
>>>> So it definitely seems to be a problem of rgdal. It would be
>>>> great if it
>>>> could still be solved.
>>>
>>> Not rgdal, but your use of it. Try looking at a sequence of
>>>
>>> file <- system.file("pictures/SP27GTIF.TIF", package="rgdal")
>>> obj <- GDAL.open(file)
>>> (dims <- dim(obj))
>>> band <- 1
>>> data_vector <- getRasterData(obj, band)
>>> GDAL.close(obj)
>>> str(data_vector)
>>>
>>> This does not create any more complicated objects, just a matrix.
>>> In
>>> some cases, the rows in the matrix are ordered S -> N, so it may
>>> appear the wrong way up.
>>>
>>> rgdal::getRasterData() is lightweight, and has many arguments
>>> which
>>> may be helpful. rgdal::readGDAL() is heavyweight, creating a
>>> SpatialGridDataFrame object. This involves much copying of data,
>>> but
>>> the output object can be used for example in mapping or analysis
>>> without further conversion. My guess is that
>>> rgdal::getRasterData()
>>> gives you your matrix directly. Look at the R code to see how
>>> as.is=
>>> etc. work (files may include scale and offset values - recently a
>>> user
>>> was confused that scale and offset were "magically" applied to
>>> convert
>>> Uint16 values to degrees Kelvin on reading). For example, if as.is
>>> ==
>>> TRUE or scale == 1 and offset == 0, no copying of the input matrix
>>> occurs because it is not converted. If you could check this route,
>>> others following this thread could also benefit; if I'm wrong,
>>> that
>>> would also be good to know.
>>>
>>> Roger
>>>
>>>
>>>> Best,
>>>>
>>>> Thorsten
>>>>
>>>>
>>>>
>>>> Am 27.04.2020 um 15:58 schrieb Michael Sumner:
>>>>> Try stars it worked for me on a test
>>>>>
>>>>> On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
>>>>> <
>>>>> thorsten.m.behrens at gmail.com
>>>>>  <mailto:
>>>>> thorsten.m.behrens at gmail.com
>>>>>>>
>>>>> wrote:
>>>>>
>>>>>     Roger,
>>>>>
>>>>>     thanks a lot for your reply!
>>>>>
>>>>>     I have 256GB RAM installed (mentioned it somewhere). And
>>>>> there,
>>>>>     all is
>>>>>     fine when I run:
>>>>>
>>>>>     rDemTest = raster(nrow = 48000, ncol = 72000, ext =
>>>>> extent(c(0,
>>>>> 72000,
>>>>>
>>>>>     values(rDemTest) = 1
>>>>>
>>>>>     When limiting the memory to about 8GB with
>>>>>     ulimit::memory_limit(8000),
>>>>>     the max size which can be allocated seems to be around
>>>>> 10000 x
>>>>>     10000px.
>>>>>     In this case all tests run fine. Unfortunately it seems to
>>>>> be
>>>>>     related to
>>>>>     the size of the grid (48000 x 72000) and therefore the
>>>>> problem
>>>>>     can't be
>>>>>     reproduced on machines with 8GB RAM. For some processing
>>>>> steps I
>>>>> need
>>>>>     grids of that size in the memory, which is why I have 256
>>>>> GB
>>>>>     installed.
>>>>>
>>>>>     Normally, I use the raster package and not
>>>>> rgdal::readGDAL(). This
>>>>>     was
>>>>>     just a desperate attempt to find the source of the problem.
>>>>>
>>>>>     This is what I use in my code:
>>>>>
>>>>>     rDem = raster(sFileNameTiff)
>>>>>     mDem = raster::as.matrix(rDem)
>>>>>
>>>>>     But maybe this is the same...
>>>>>
>>>>>     Any further suggestions are much appreciated!
>>>>>
>>>>>     Thanks again!
>>>>>
>>>>>     Best,
>>>>>
>>>>>     Thorsten
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>     Am 27.04.2020 um 14:50 schrieb Roger Bivand:
>>>>>   > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
>>>>>   >
>>>>>   >> Dear all,
>>>>>   >>
>>>>>   >> my problem is that I want to read a big geotiff raster
>>>>> dataset
>>>>>     into R
>>>>>   >> and convert it to a matrix, which does not work.
>>>>>   >> The file is big but there is sufficient memory. I need
>>>>> all the
>>>>>     data
>>>>>   >> in the memory at the same time.
>>>>>   >>
>>>>>   >> The error occurs under R 3.6.3 as well as 4.0.0 using
>>>>> Ubuntu
>>>>> 20.04
>>>>>   >> LTS with the latest version of the packages (see session
>>>>> info
>>>>>     below)
>>>>>   >> and 256GB RAM installed.
>>>>>   >>
>>>>>   >> When loading the raster dataset using rgdal (via readGDAL
>>>>> or
>>>>>   >> raster::readAll) I get the follwoing error in R 4.0.0:
>>>>>   >>
>>>>>   >> ```
>>>>>   >> Error in rgdal::getRasterData(con, offset = offs,
>>>>> region.dim =
>>>>>     reg,
>>>>>   >> band = object at data@band) :
>>>>>   >>   long vectors not supported yet: memory.c:3782
>>>>>   >> ```
>>>>>   >
>>>>>   > On a 16GB Fedora platform:
>>>>>   >
>>>>>   >> library(raster) # 3.1-5
>>>>>   >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
>>>>> extent(c(0,
>>>>>     72000,
>>>>>   > 0,
>>>>>   > + 48000))) # all fine
>>>>>   >> rDemTest
>>>>>   > class      : RasterLayer
>>>>>   > dimensions : 48000, 72000, 3.456e+09  (nrow, ncol, ncell)
>>>>>   > resolution : 1, 1  (x, y)
>>>>>   > extent     : 0, 72000, 0, 48000  (xmin, xmax, ymin, ymax)
>>>>>   > crs        : NA
>>>>>   >
>>>>>   >> values(rDemTest) = 1
>>>>>   > Error: cannot allocate vector of size 25.7 Gb
>>>>>   >
>>>>>   > So you are deceiving yourself into thinking that all is
>>>>> fine at
>>>>>     this
>>>>>   > point. Please try to instantiate an example that can be
>>>>>     reproduced on
>>>>>   > a machine with 8GB RAM.
>>>>>   >
>>>>>   > Further note that rgdal::readGDAL() is not how you handle
>>>>> very
>>>>>     large
>>>>>   > objects in files, and never has been. raster can handle
>>>>> blocks
>>>>>     of data
>>>>>   > from bands in file; stars and gdalcubes can use proxy=TRUE
>>>>> for the
>>>>>   > same purpose. Why did you choose rgdal::readGDAL() when
>>>>> this is
>>>>> not
>>>>>   > its purpose?
>>>>>   >
>>>>>   > You did not say how much RAM is on your platform.
>>>>>   >
>>>>>   > Roger
>>>>>   >
>>>>>   >>
>>>>>   >> In R 3.6.3 is is "... memory.c:3717"
>>>>>   >>
>>>>>   >> However, I can load the same file with the tiff package
>>>>> and a
>>>>>     file of
>>>>>   >> the same size in the native raster package format (*.grd)
>>>>> with
>>>>> the
>>>>>   >> raster package but again not with the rgdal package.
>>>>>   >>
>>>>>   >> gdalinfo (gdalUtils) does not complain (see below).
>>>>> Hence, Even
>>>>>   >> Rouault assumes the problem is related to rgdal and not
>>>>> gdal
>>>>>   >> (
>>>>> https://github.com/OSGeo/gdal/issues/2442
>>>>> ).
>>>>>   >>
>>>>>   >> Below you find reproducible code, which generates a
>>>>> raster file,
>>>>>   >> saves the two formats (.tiff and .grd) and tries to read
>>>>> them
>>>>> with
>>>>>   >> the different packages.
>>>>>   >>
>>>>>   >> Is this a known limitation? Any help is greatly
>>>>> appreciated!
>>>>>   >>
>>>>>   >> Thanks a lot in advance!
>>>>>   >>
>>>>>   >> Best wishes and stay healthy,
>>>>>   >> Thorsten
>>>>>   >>
>>>>>   >>
>>>>>   >>
>>>>>   >> ### Steps to reproduce the problem.
>>>>>   >>
>>>>>   >> R code:
>>>>>   >>
>>>>>   >> ```
>>>>>   >> library(rgdal) # 1.4-8
>>>>>   >> library(raster) # 3.1-5
>>>>>   >> library(tiff) # 0.1-5
>>>>>   >>
>>>>>   >> ## generate and manipulate a big raster dataset
>>>>>   >> # - generate
>>>>>   >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
>>>>> extent(c(0,
>>>>>   >> 72000, 0, 48000))) # all fine
>>>>>   >>
>>>>>   >> # - manipulate
>>>>>   >> values(rDemTest) = 1 # all fine
>>>>>   >>
>>>>>   >> # - convert
>>>>>   >> mDemTest = raster::as.matrix(rDemTest) # all fine
>>>>>   >> str(mDemTest)
>>>>>   >>
>>>>>   >> ## save a big dataset
>>>>>   >>
>>>>>   >> # - as raster/gdal
>>>>>   >> sFileNameTiff = "BigData.tif"
>>>>>   >> writeRaster(rDemTest, sFileNameTiff, "GTiff", overwrite =
>>>>> TRUE,
>>>>>   >> NAflag = -9999) # all fine
>>>>>   >>
>>>>>   >> # - as raster native
>>>>>   >> sFileNameNative = "BigData.grd"
>>>>>   >> writeRaster(rDemTest, sFileNameNative, "raster",
>>>>> overwrite =
>>>>> TRUE,
>>>>>   >> NAflag = -9999) # all fine
>>>>>   >>
>>>>>   >>
>>>>>   >> ## load the big raster datasets with different packages
>>>>> and
>>>>> options
>>>>>   >> # - load the tiff data with the gdal package via the
>>>>> raster
>>>>> package
>>>>>   >> rDem = raster(sFileNameTiff) # all fine
>>>>>   >> extent(rDem) # all fine
>>>>>   >> mDem = raster::as.matrix(rDem) # error
>>>>>   >> rDem = readAll(rDem) # error
>>>>>   >>
>>>>>   >> # - load the native raster data with the raster package
>>>>>   >> rDem = raster(sFileNameNative) # all fine
>>>>>   >> extent(rDem) # all fine
>>>>>   >> mDem = raster::as.matrix(rDem) # all fine
>>>>>   >> str(mDem)
>>>>>   >>
>>>>>   >> # - load the tiff data with the tiff package
>>>>>   >> mDem = readTIFF(sFileNameTiff) # all fine
>>>>>   >> str(mDem)
>>>>>   >>
>>>>>   >> # - load the tiff data with the gdal package
>>>>>   >> sfDem = readGDAL(sFileNameTiff) # error
>>>>>   >>
>>>>>   >> # - load the native raster data with the gdal package
>>>>>   >> sfDem = readGDAL(sFileNameNative) # error
>>>>>   >>
>>>>>   >> ```
>>>>>   >>
>>>>>   >>
>>>>>   >> ### Startup messages when rgdal is attached (requested by
>>>>> Roger
>>>>>     Bivand)
>>>>>   >>>  library(rgdal)
>>>>>   >> rgdal: version: 1.4-8, (SVN revision 845)
>>>>>   >>  Geospatial Data Abstraction Library extensions to R
>>>>>     successfully loaded
>>>>>   >>  Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
>>>>>   >>  Path to GDAL shared files:
>>>>>   >>  GDAL binary built with GEOS: TRUE
>>>>>   >>  Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th, 2020,
>>>>>     [PJ_VERSION:
>>>>>   >> 631]
>>>>>   >>  Path to PROJ.4 shared files: (autodetected)
>>>>>   >>  Linking to sp version: 1.4-1
>>>>>   >>
>>>>>   >>
>>>>>   >> ### Session info
>>>>>   >>>  sessionInfo()
>>>>>   >> R version 4.0.0 (2020-04-24)
>>>>>   >> Platform: x86_64-pc-linux-gnu (64-bit)
>>>>>   >> Running under: Ubuntu 20.04 LTS
>>>>>   >>
>>>>>   >> Matrix products: default
>>>>>   >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-
>>>>> pthread/libblas.so.3
>>>>>   >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-
>>>>> pthread/liblapack.so.3
>>>>>   >>
>>>>>   >> locale:
>>>>>   >>  [1] LC_CTYPE=de_DE.UTF-8       LC_NUMERIC=C
>>>>> LC_TIME=de_DE.UTF-8
>>>>>   >>  [4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
>>>>>   >> LC_MESSAGES=de_DE.UTF-8
>>>>>   >>  [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C LC_ADDRESS=C
>>>>>   >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
>>>>>   >> LC_IDENTIFICATION=C
>>>>>   >>
>>>>>   >> attached base packages:
>>>>>   >> [1] stats     graphics  grDevices utils datasets methods
>>>>> base
>>>>>   >>
>>>>>   >> other attached packages:
>>>>>   >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8       tiff_0.1-5
>>>>> raster_3.1-5
>>>>>   >> sp_1.4-1
>>>>>   >>
>>>>>   >> loaded via a namespace (and not attached):
>>>>>   >>  [1] compiler_4.0.0    tools_4.0.0 Rcpp_1.0.4.6
>>>>>   >> R.methodsS3_1.8.0 codetools_0.2-16
>>>>>   >>  [6] grid_4.0.0        iterators_1.0.12 foreach_1.5.0
>>>>>   >> R.utils_2.9.2     R.oo_1.23.0
>>>>>   >> [11] lattice_0.20-41
>>>>>   >>
>>>>>   >>
>>>>>   >> ### gdalInfo
>>>>>   >>>  gdalinfo(sFileNameTiff)
>>>>>   >>  [1] "Driver: GTiff/GeoTIFF"
>>>>>   >>  [2] "Files: BigData.tif"
>>>>>   >>  [3] "Size is 72000, 48000"
>>>>>   >>  [4] "Origin = (0.000000000000000,48000.000000000000000)"
>>>>>   >>  [5] "Pixel Size = (1.000000000000000,-
>>>>> 1.000000000000000)"
>>>>>   >>  [6] "Image Structure Metadata:"
>>>>>   >>  [7] "  COMPRESSION=LZW"
>>>>>   >>  [8] "  INTERLEAVE=BAND"
>>>>>   >>  [9] "Corner Coordinates:"
>>>>>   >> [10] "Upper Left  (       0.000,   48000.000) "
>>>>>   >> [11] "Lower Left  (   0.0000000,   0.0000000) "
>>>>>   >> [12] "Upper Right (   72000.000,   48000.000) "
>>>>>   >> [13] "Lower Right (   72000.000,       0.000) "
>>>>>   >> [14] "Center      (   36000.000,   24000.000) "
>>>>>   >> [15] "Band 1 Block=72000x1 Type=Float32,
>>>>> ColorInterp=Gray"
>>>>>   >> [16] "  Min=1.000 Max=1.000 "
>>>>>   >> [17] "  Minimum=1.000, Maximum=1.000, Mean=nan,
>>>>> StdDev=nan"
>>>>>   >> [18] "  NoData Value=-9999"
>>>>>   >> [19] "  Metadata:"
>>>>>   >> [20] "    STATISTICS_MAXIMUM=1"
>>>>>   >> [21] "    STATISTICS_MEAN=nan"
>>>>>   >> [22] "    STATISTICS_MINIMUM=1"
>>>>>   >> [23] "    STATISTICS_STDDEV=nan"
>>>>>   >>
>>>>>   >> _______________________________________________
>>>>>   >> R-sig-Geo mailing list
>>>>>   >>
>>>>> R-sig-Geo at r-project.org
>>>>>  <mailto:
>>>>> R-sig-Geo at r-project.org
>>>>>>
>>>>>   >>
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>
>>>>>   >>
>>>>>   >>
>>>>>   >
>>>>>
>>>>>     _______________________________________________
>>>>>     R-sig-Geo mailing list
>>>>>
>>>>> R-sig-Geo at r-project.org
>>>>>  <mailto:
>>>>> R-sig-Geo at r-project.org
>>>>>>
>>>>>
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>
>>>>>
>>>>
>>>>     [[alternative HTML version deleted]]
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>>
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>
>>>>
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>>
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From m@tmo@er @end|ng |rom wu@@c@@t  Tue Apr 28 22:14:18 2020
From: m@tmo@er @end|ng |rom wu@@c@@t (Mathias Moser)
Date: Tue, 28 Apr 2020 22:14:18 +0200
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <alpine.LFD.2.21.2004281927080.4172689@reclus.nhh.no>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
 <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
 <0262d49b-ae9c-1540-5cb8-1f1490d58090@gmail.com>
 <726ef749a271278c327218f88eab0a64b53f5000.camel@wu.ac.at>
 <alpine.LFD.2.21.2004281927080.4172689@reclus.nhh.no>
Message-ID: <5e58bb186a84424e6d2da0a58a38066c3a1ec09f.camel@wu.ac.at>

> I cannot check this because I have no access to a platform with
> enough 
> RAM, so I need help here. I haven't been able to confirm that 
> LENGTH(sRStorage) returns an R_xlen_t, or double, in lines 1672, 1685
> or 
> 1693. Is there a way of generating a large file using a GDAL app,
> perhaps, 
> then I could just try reading a larger file if LENGTH plays up?

LENGTH() can not handle the R_xlen_t and again throws a long vector
error. I have replaced the three occurrences with XLENGTH() and tested
using Thorsten's Ceil.tif file, looks good so far:

> > library(rgdal)
> Loading required package: sp
> rgdal: version: 1.5-8, (SVN revision (unknown))
>  Geospatial Data Abstraction Library extensions to R successfully
> loaded
>  Loaded GDAL runtime: GDAL 3.0.1, released 2019/06/28
>  Path to GDAL shared files: /usr/local/share/gdal
>  GDAL binary built with GEOS: TRUE 
>  Loaded PROJ runtime: Rel. 6.2.0, September 1st, 2019, [PJ_VERSION:
> 620]
>  Path to PROJ shared files: /usr/local/share/proj
>  Linking to sp version: 1.4-1 
> > mCeil = raster::as.matrix(raster::raster("Ceil.tif"))
> > str(mCeil)
>  num [1:46341, 1:46341] 1 1 1 1 1 1 1 1 1 1 ...

HTH, best wishes,

Mathias

> 
> > (read_gdal_data() of stars _seems_ to use R_xlen_t instead to
> > accomodate for 52bits [2]).
> > 
> > Best wishes,
> > 
> > Mathias
> > 
> > 
> > [1]
> > https://cloud.r-project.org/doc/manuals/r-patched/R-ints.html#Long-vectors
> > 
> > [2]
> > https://github.com/r-spatial/sf/blob/ea1bd716769ab8140d3451e3d902cfc79bc895d5/src/stars.cpp#L172
> > 
> > 
> > 
> > On Tue, 2020-04-28 at 13:39 +0200, Thorsten Behrens wrote:
> > > Roger and Mike,
> > > 
> > > I really appreciate your help on this!
> > > 
> > > I had a look at getRasterData(). It results in the same error.
> > > Hence,
> > > I
> > > made further tests where I compared grids with the following
> > > numbers
> > > of
> > > cols and rows:
> > > 
> > > nPx = floor(sqrt(2^31 -1)) # 46340
> > > 
> > > and
> > > 
> > > nPx = ceiling(sqrt(2^31 -1)) # 46341
> > > 
> > > The result is clear. Raster data with 46340 * 46340 px can be
> > > loaded
> > > with getRasterData() and with raster(), raster::as.matrix(),
> > > whereas
> > > datasets with 46341 * 46341 px cannot and result in the error:
> > > 
> > > Error in getRasterData(gdCeil, band = 1) :
> > > long vectors not supported yet: memory.c:3782
> > > 
> > > read_stars() works for both. You find the corresponding code
> > > below.
> > > 
> > > Are there any other option I can try?
> > > 
> > > Thorsten
> > > 
> > > 
> > > Reproducible code:
> > > 
> > > ## generate raster datasets
> > > # 46340 * 46340 grid dataset
> > > sFileNameFloor = "Floor.tif"
> > > 
> > > nPx = floor(sqrt(2^31 -1)) # 46340
> > > nPx
> > > 
> > > rFloor = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
> > > nPx)))
> > > values(rFloor) = 1
> > > 
> > > writeRaster(rFloor, sFileNameFloor, "GTiff", overwrite = TRUE,
> > > NAflag
> > > =
> > > -9999)
> > > 
> > > 
> > > # 46341 * 46341 grid dataset
> > > sFileNameCeil = "Ceil.tif"
> > > 
> > > nPx = ceiling(sqrt(2^31 -1))
> > > nPx
> > > 
> > > rCeil = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
> > > nPx)))
> > > values(rCeil) = 1
> > > 
> > > writeRaster(rCeil, sFileNameCeil, "GTiff", overwrite = TRUE,
> > > NAflag
> > > =
> > > -9999)
> > > 
> > > 
> > > ## load raster datasets with different methods
> > > 
> > > # load Ceil
> > > gdCeil = GDAL.open(sFileNameCeil)
> > > dim(gdCeil)
> > > 
> > > vnCeil = getRasterData(gdCeil, band = 1) # error
> > > 
> > > GDAL.close(gdCeil)
> > > str(vnCeil)
> > > 
> > > stCeil = read_stars(sFileNameCeil) # all fine
> > > str(stCeil[[1]])
> > > 
> > > rCeil = raster(sFileNameCeil)
> > > mCeil = raster::as.matrix(rCeil) # error
> > > str(mCeil)
> > > 
> > > 
> > > # load Floor
> > > gdFloor = GDAL.open(sFileNameFloor)
> > > dim(gdFloor)
> > > 
> > > vnData = getRasterData(gdFloor, band = 1) # all fine
> > > 
> > > GDAL.close(gdFloor)
> > > str(vnData)
> > > 
> > > stFloor= read_stars(sFileNameFloor) # all fine
> > > str(stFloor[[1]])
> > > 
> > > rFloor = raster(sFileNameFloor)
> > > mFloor = raster::as.matrix(rFloor) # all fine
> > > str(mFloor)
> > > 
> > > 
> > > 
> > > 
> > > Am 28.04.2020 um 12:10 schrieb Roger Bivand:
> > > > On Tue, 28 Apr 2020, Thorsten Behrens wrote:
> > > > 
> > > > > Michael,
> > > > > 
> > > > > Thanks for the hint, it seems to work! Real-world tests will
> > > > > follow in
> > > > > the next few days...
> > > > > 
> > > > > So it definitely seems to be a problem of rgdal. It would be
> > > > > great if it
> > > > > could still be solved.
> > > > 
> > > > Not rgdal, but your use of it. Try looking at a sequence of
> > > > 
> > > > file <- system.file("pictures/SP27GTIF.TIF", package="rgdal")
> > > > obj <- GDAL.open(file)
> > > > (dims <- dim(obj))
> > > > band <- 1
> > > > data_vector <- getRasterData(obj, band)
> > > > GDAL.close(obj)
> > > > str(data_vector)
> > > > 
> > > > This does not create any more complicated objects, just a
> > > > matrix.
> > > > In
> > > > some cases, the rows in the matrix are ordered S -> N, so it
> > > > may
> > > > appear the wrong way up.
> > > > 
> > > > rgdal::getRasterData() is lightweight, and has many arguments
> > > > which
> > > > may be helpful. rgdal::readGDAL() is heavyweight, creating a
> > > > SpatialGridDataFrame object. This involves much copying of
> > > > data,
> > > > but
> > > > the output object can be used for example in mapping or
> > > > analysis
> > > > without further conversion. My guess is that
> > > > rgdal::getRasterData()
> > > > gives you your matrix directly. Look at the R code to see how
> > > > as.is=
> > > > etc. work (files may include scale and offset values - recently
> > > > a
> > > > user
> > > > was confused that scale and offset were "magically" applied to
> > > > convert
> > > > Uint16 values to degrees Kelvin on reading). For example, if
> > > > as.is
> > > > ==
> > > > TRUE or scale == 1 and offset == 0, no copying of the input
> > > > matrix
> > > > occurs because it is not converted. If you could check this
> > > > route,
> > > > others following this thread could also benefit; if I'm wrong,
> > > > that
> > > > would also be good to know.
> > > > 
> > > > Roger
> > > > 
> > > > 
> > > > > Best,
> > > > > 
> > > > > Thorsten
> > > > > 
> > > > > 
> > > > > 
> > > > > Am 27.04.2020 um 15:58 schrieb Michael Sumner:
> > > > > > Try stars it worked for me on a test
> > > > > > 
> > > > > > On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
> > > > > > <
> > > > > > thorsten.m.behrens at gmail.com
> > > > > > 
> > > > > >  <mailto:
> > > > > > thorsten.m.behrens at gmail.com
> > > > > > 
> > > > > > 
> > > > > > wrote:
> > > > > > 
> > > > > >     Roger,
> > > > > > 
> > > > > >     thanks a lot for your reply!
> > > > > > 
> > > > > >     I have 256GB RAM installed (mentioned it somewhere).
> > > > > > And
> > > > > > there,
> > > > > >     all is
> > > > > >     fine when I run:
> > > > > > 
> > > > > >     rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > > > extent(c(0,
> > > > > > 72000,
> > > > > > 
> > > > > >     values(rDemTest) = 1
> > > > > > 
> > > > > >     When limiting the memory to about 8GB with
> > > > > >     ulimit::memory_limit(8000),
> > > > > >     the max size which can be allocated seems to be around
> > > > > > 10000 x
> > > > > >     10000px.
> > > > > >     In this case all tests run fine. Unfortunately it seems
> > > > > > to
> > > > > > be
> > > > > >     related to
> > > > > >     the size of the grid (48000 x 72000) and therefore the
> > > > > > problem
> > > > > >     can't be
> > > > > >     reproduced on machines with 8GB RAM. For some
> > > > > > processing
> > > > > > steps I
> > > > > > need
> > > > > >     grids of that size in the memory, which is why I have
> > > > > > 256
> > > > > > GB
> > > > > >     installed.
> > > > > > 
> > > > > >     Normally, I use the raster package and not
> > > > > > rgdal::readGDAL(). This
> > > > > >     was
> > > > > >     just a desperate attempt to find the source of the
> > > > > > problem.
> > > > > > 
> > > > > >     This is what I use in my code:
> > > > > > 
> > > > > >     rDem = raster(sFileNameTiff)
> > > > > >     mDem = raster::as.matrix(rDem)
> > > > > > 
> > > > > >     But maybe this is the same...
> > > > > > 
> > > > > >     Any further suggestions are much appreciated!
> > > > > > 
> > > > > >     Thanks again!
> > > > > > 
> > > > > >     Best,
> > > > > > 
> > > > > >     Thorsten
> > > > > > 
> > > > > > 
> > > > > > 
> > > > > > 
> > > > > >     Am 27.04.2020 um 14:50 schrieb Roger Bivand:
> > > > > >   > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
> > > > > >   >
> > > > > >   >> Dear all,
> > > > > >   >>
> > > > > >   >> my problem is that I want to read a big geotiff raster
> > > > > > dataset
> > > > > >     into R
> > > > > >   >> and convert it to a matrix, which does not work.
> > > > > >   >> The file is big but there is sufficient memory. I need
> > > > > > all the
> > > > > >     data
> > > > > >   >> in the memory at the same time.
> > > > > >   >>
> > > > > >   >> The error occurs under R 3.6.3 as well as 4.0.0 using
> > > > > > Ubuntu
> > > > > > 20.04
> > > > > >   >> LTS with the latest version of the packages (see
> > > > > > session
> > > > > > info
> > > > > >     below)
> > > > > >   >> and 256GB RAM installed.
> > > > > >   >>
> > > > > >   >> When loading the raster dataset using rgdal (via
> > > > > > readGDAL
> > > > > > or
> > > > > >   >> raster::readAll) I get the follwoing error in R 4.0.0:
> > > > > >   >>
> > > > > >   >> ```
> > > > > >   >> Error in rgdal::getRasterData(con, offset = offs,
> > > > > > region.dim =
> > > > > >     reg,
> > > > > >   >> band = object at data@band) :
> > > > > >   >>   long vectors not supported yet: memory.c:3782
> > > > > >   >> ```
> > > > > >   >
> > > > > >   > On a 16GB Fedora platform:
> > > > > >   >
> > > > > >   >> library(raster) # 3.1-5
> > > > > >   >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > > > extent(c(0,
> > > > > >     72000,
> > > > > >   > 0,
> > > > > >   > + 48000))) # all fine
> > > > > >   >> rDemTest
> > > > > >   > class      : RasterLayer
> > > > > >   > dimensions : 48000, 72000, 3.456e+09  (nrow, ncol,
> > > > > > ncell)
> > > > > >   > resolution : 1, 1  (x, y)
> > > > > >   > extent     : 0, 72000, 0, 48000  (xmin, xmax, ymin,
> > > > > > ymax)
> > > > > >   > crs        : NA
> > > > > >   >
> > > > > >   >> values(rDemTest) = 1
> > > > > >   > Error: cannot allocate vector of size 25.7 Gb
> > > > > >   >
> > > > > >   > So you are deceiving yourself into thinking that all is
> > > > > > fine at
> > > > > >     this
> > > > > >   > point. Please try to instantiate an example that can be
> > > > > >     reproduced on
> > > > > >   > a machine with 8GB RAM.
> > > > > >   >
> > > > > >   > Further note that rgdal::readGDAL() is not how you
> > > > > > handle
> > > > > > very
> > > > > >     large
> > > > > >   > objects in files, and never has been. raster can handle
> > > > > > blocks
> > > > > >     of data
> > > > > >   > from bands in file; stars and gdalcubes can use
> > > > > > proxy=TRUE
> > > > > > for the
> > > > > >   > same purpose. Why did you choose rgdal::readGDAL() when
> > > > > > this is
> > > > > > not
> > > > > >   > its purpose?
> > > > > >   >
> > > > > >   > You did not say how much RAM is on your platform.
> > > > > >   >
> > > > > >   > Roger
> > > > > >   >
> > > > > >   >>
> > > > > >   >> In R 3.6.3 is is "... memory.c:3717"
> > > > > >   >>
> > > > > >   >> However, I can load the same file with the tiff
> > > > > > package
> > > > > > and a
> > > > > >     file of
> > > > > >   >> the same size in the native raster package format
> > > > > > (*.grd)
> > > > > > with
> > > > > > the
> > > > > >   >> raster package but again not with the rgdal package.
> > > > > >   >>
> > > > > >   >> gdalinfo (gdalUtils) does not complain (see below).
> > > > > > Hence, Even
> > > > > >   >> Rouault assumes the problem is related to rgdal and
> > > > > > not
> > > > > > gdal
> > > > > >   >> (
> > > > > > https://github.com/OSGeo/gdal/issues/2442
> > > > > > 
> > > > > > ).
> > > > > >   >>
> > > > > >   >> Below you find reproducible code, which generates a
> > > > > > raster file,
> > > > > >   >> saves the two formats (.tiff and .grd) and tries to
> > > > > > read
> > > > > > them
> > > > > > with
> > > > > >   >> the different packages.
> > > > > >   >>
> > > > > >   >> Is this a known limitation? Any help is greatly
> > > > > > appreciated!
> > > > > >   >>
> > > > > >   >> Thanks a lot in advance!
> > > > > >   >>
> > > > > >   >> Best wishes and stay healthy,
> > > > > >   >> Thorsten
> > > > > >   >>
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ### Steps to reproduce the problem.
> > > > > >   >>
> > > > > >   >> R code:
> > > > > >   >>
> > > > > >   >> ```
> > > > > >   >> library(rgdal) # 1.4-8
> > > > > >   >> library(raster) # 3.1-5
> > > > > >   >> library(tiff) # 0.1-5
> > > > > >   >>
> > > > > >   >> ## generate and manipulate a big raster dataset
> > > > > >   >> # - generate
> > > > > >   >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > > > extent(c(0,
> > > > > >   >> 72000, 0, 48000))) # all fine
> > > > > >   >>
> > > > > >   >> # - manipulate
> > > > > >   >> values(rDemTest) = 1 # all fine
> > > > > >   >>
> > > > > >   >> # - convert
> > > > > >   >> mDemTest = raster::as.matrix(rDemTest) # all fine
> > > > > >   >> str(mDemTest)
> > > > > >   >>
> > > > > >   >> ## save a big dataset
> > > > > >   >>
> > > > > >   >> # - as raster/gdal
> > > > > >   >> sFileNameTiff = "BigData.tif"
> > > > > >   >> writeRaster(rDemTest, sFileNameTiff, "GTiff",
> > > > > > overwrite =
> > > > > > TRUE,
> > > > > >   >> NAflag = -9999) # all fine
> > > > > >   >>
> > > > > >   >> # - as raster native
> > > > > >   >> sFileNameNative = "BigData.grd"
> > > > > >   >> writeRaster(rDemTest, sFileNameNative, "raster",
> > > > > > overwrite =
> > > > > > TRUE,
> > > > > >   >> NAflag = -9999) # all fine
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ## load the big raster datasets with different
> > > > > > packages
> > > > > > and
> > > > > > options
> > > > > >   >> # - load the tiff data with the gdal package via the
> > > > > > raster
> > > > > > package
> > > > > >   >> rDem = raster(sFileNameTiff) # all fine
> > > > > >   >> extent(rDem) # all fine
> > > > > >   >> mDem = raster::as.matrix(rDem) # error
> > > > > >   >> rDem = readAll(rDem) # error
> > > > > >   >>
> > > > > >   >> # - load the native raster data with the raster
> > > > > > package
> > > > > >   >> rDem = raster(sFileNameNative) # all fine
> > > > > >   >> extent(rDem) # all fine
> > > > > >   >> mDem = raster::as.matrix(rDem) # all fine
> > > > > >   >> str(mDem)
> > > > > >   >>
> > > > > >   >> # - load the tiff data with the tiff package
> > > > > >   >> mDem = readTIFF(sFileNameTiff) # all fine
> > > > > >   >> str(mDem)
> > > > > >   >>
> > > > > >   >> # - load the tiff data with the gdal package
> > > > > >   >> sfDem = readGDAL(sFileNameTiff) # error
> > > > > >   >>
> > > > > >   >> # - load the native raster data with the gdal package
> > > > > >   >> sfDem = readGDAL(sFileNameNative) # error
> > > > > >   >>
> > > > > >   >> ```
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ### Startup messages when rgdal is attached (requested
> > > > > > by
> > > > > > Roger
> > > > > >     Bivand)
> > > > > >   >>>  library(rgdal)
> > > > > >   >> rgdal: version: 1.4-8, (SVN revision 845)
> > > > > >   >>  Geospatial Data Abstraction Library extensions to R
> > > > > >     successfully loaded
> > > > > >   >>  Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
> > > > > >   >>  Path to GDAL shared files:
> > > > > >   >>  GDAL binary built with GEOS: TRUE
> > > > > >   >>  Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th,
> > > > > > 2020,
> > > > > >     [PJ_VERSION:
> > > > > >   >> 631]
> > > > > >   >>  Path to PROJ.4 shared files: (autodetected)
> > > > > >   >>  Linking to sp version: 1.4-1
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ### Session info
> > > > > >   >>>  sessionInfo()
> > > > > >   >> R version 4.0.0 (2020-04-24)
> > > > > >   >> Platform: x86_64-pc-linux-gnu (64-bit)
> > > > > >   >> Running under: Ubuntu 20.04 LTS
> > > > > >   >>
> > > > > >   >> Matrix products: default
> > > > > >   >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-
> > > > > > pthread/libblas.so.3
> > > > > >   >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-
> > > > > > pthread/liblapack.so.3
> > > > > >   >>
> > > > > >   >> locale:
> > > > > >   >>  [1] LC_CTYPE=de_DE.UTF-8       LC_NUMERIC=C
> > > > > > LC_TIME=de_DE.UTF-8
> > > > > >   >>  [4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
> > > > > >   >> LC_MESSAGES=de_DE.UTF-8
> > > > > >   >>  [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C LC_ADDRESS=C
> > > > > >   >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
> > > > > >   >> LC_IDENTIFICATION=C
> > > > > >   >>
> > > > > >   >> attached base packages:
> > > > > >   >> [1] stats     graphics  grDevices utils datasets
> > > > > > methods
> > > > > > base
> > > > > >   >>
> > > > > >   >> other attached packages:
> > > > > >   >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8       tiff_0.1-5
> > > > > > raster_3.1-5
> > > > > >   >> sp_1.4-1
> > > > > >   >>
> > > > > >   >> loaded via a namespace (and not attached):
> > > > > >   >>  [1] compiler_4.0.0    tools_4.0.0 Rcpp_1.0.4.6
> > > > > >   >> R.methodsS3_1.8.0 codetools_0.2-16
> > > > > >   >>  [6] grid_4.0.0        iterators_1.0.12 foreach_1.5.0
> > > > > >   >> R.utils_2.9.2     R.oo_1.23.0
> > > > > >   >> [11] lattice_0.20-41
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ### gdalInfo
> > > > > >   >>>  gdalinfo(sFileNameTiff)
> > > > > >   >>  [1] "Driver: GTiff/GeoTIFF"
> > > > > >   >>  [2] "Files: BigData.tif"
> > > > > >   >>  [3] "Size is 72000, 48000"
> > > > > >   >>  [4] "Origin =
> > > > > > (0.000000000000000,48000.000000000000000)"
> > > > > >   >>  [5] "Pixel Size = (1.000000000000000,-
> > > > > > 1.000000000000000)"
> > > > > >   >>  [6] "Image Structure Metadata:"
> > > > > >   >>  [7] "  COMPRESSION=LZW"
> > > > > >   >>  [8] "  INTERLEAVE=BAND"
> > > > > >   >>  [9] "Corner Coordinates:"
> > > > > >   >> [10] "Upper Left  (       0.000,   48000.000) "
> > > > > >   >> [11] "Lower Left  (   0.0000000,   0.0000000) "
> > > > > >   >> [12] "Upper Right (   72000.000,   48000.000) "
> > > > > >   >> [13] "Lower Right (   72000.000,       0.000) "
> > > > > >   >> [14] "Center      (   36000.000,   24000.000) "
> > > > > >   >> [15] "Band 1 Block=72000x1 Type=Float32,
> > > > > > ColorInterp=Gray"
> > > > > >   >> [16] "  Min=1.000 Max=1.000 "
> > > > > >   >> [17] "  Minimum=1.000, Maximum=1.000, Mean=nan,
> > > > > > StdDev=nan"
> > > > > >   >> [18] "  NoData Value=-9999"
> > > > > >   >> [19] "  Metadata:"
> > > > > >   >> [20] "    STATISTICS_MAXIMUM=1"
> > > > > >   >> [21] "    STATISTICS_MEAN=nan"
> > > > > >   >> [22] "    STATISTICS_MINIMUM=1"
> > > > > >   >> [23] "    STATISTICS_STDDEV=nan"
> > > > > >   >>
> > > > > >   >> _______________________________________________
> > > > > >   >> R-sig-Geo mailing list
> > > > > >   >>
> > > > > > R-sig-Geo at r-project.org
> > > > > > 
> > > > > >  <mailto:
> > > > > > R-sig-Geo at r-project.org
> > > > > > 
> > > > > > 
> > > > > >   >>
> > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > > > 
> > > > > > 
> > > > > >   >>
> > > > > >   >>
> > > > > >   >
> > > > > > 
> > > > > >     _______________________________________________
> > > > > >     R-sig-Geo mailing list
> > > > > > 
> > > > > > R-sig-Geo at r-project.org
> > > > > > 
> > > > > >  <mailto:
> > > > > > R-sig-Geo at r-project.org
> > > > > > 
> > > > > > 
> > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > > > 
> > > > > > 
> > > > > > 
> > > > > 
> > > > >     [[alternative HTML version deleted]]
> > > > > 
> > > > > _______________________________________________
> > > > > R-sig-Geo mailing list
> > > > > R-sig-Geo at r-project.org
> > > > > 
> > > > > 
> > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > > 
> > > > > 
> > > > > 
> > > 
> > > _______________________________________________
> > > R-sig-Geo mailing list
> > > R-sig-Geo at r-project.org
> > > 
> > > 
> > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > 
> > > 
> > 
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > 
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > 
> >


From Roger@B|v@nd @end|ng |rom nhh@no  Wed Apr 29 11:26:40 2020
From: Roger@B|v@nd @end|ng |rom nhh@no (Roger Bivand)
Date: Wed, 29 Apr 2020 09:26:40 +0000
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <5e58bb186a84424e6d2da0a58a38066c3a1ec09f.camel@wu.ac.at>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa+tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
 <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
 <0262d49b-ae9c-1540-5cb8-1f1490d58090@gmail.com>
 <726ef749a271278c327218f88eab0a64b53f5000.camel@wu.ac.at>
 <alpine.LFD.2.21.2004281927080.4172689@reclus.nhh.no>,
 <5e58bb186a84424e6d2da0a58a38066c3a1ec09f.camel@wu.ac.at>
Message-ID: <f9d079135fbe48b99f61a839d092b836@nhh.no>

Thanks, as I thought. Committed to R-forge as SVN rev. 962. Really we'd need a test rig for reading, manipulation in sp/rgdal and raster, and writing, to be sure that all int assumptions that need conversion to R_xlen_t.

Roger

--
Roger Bivand
Norwegian School of Economics
Helleveien 30, 5045 Bergen, Norway
Roger.Bivand at nhh.no


________________________________________
Fra: Mathias Moser <matmoser at wu.ac.at>
Sendt: tirsdag 28. april 2020 22.14
Til: Roger Bivand
Kopi: RsigGeo
Emne: Re: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R 4.0.0/3.6.3, Ubuntu 20.04)

> I cannot check this because I have no access to a platform with
> enough
> RAM, so I need help here. I haven't been able to confirm that
> LENGTH(sRStorage) returns an R_xlen_t, or double, in lines 1672, 1685
> or
> 1693. Is there a way of generating a large file using a GDAL app,
> perhaps,
> then I could just try reading a larger file if LENGTH plays up?

LENGTH() can not handle the R_xlen_t and again throws a long vector
error. I have replaced the three occurrences with XLENGTH() and tested
using Thorsten's Ceil.tif file, looks good so far:

> > library(rgdal)
> Loading required package: sp
> rgdal: version: 1.5-8, (SVN revision (unknown))
>  Geospatial Data Abstraction Library extensions to R successfully
> loaded
>  Loaded GDAL runtime: GDAL 3.0.1, released 2019/06/28
>  Path to GDAL shared files: /usr/local/share/gdal
>  GDAL binary built with GEOS: TRUE
>  Loaded PROJ runtime: Rel. 6.2.0, September 1st, 2019, [PJ_VERSION:
> 620]
>  Path to PROJ shared files: /usr/local/share/proj
>  Linking to sp version: 1.4-1
> > mCeil = raster::as.matrix(raster::raster("Ceil.tif"))
> > str(mCeil)
>  num [1:46341, 1:46341] 1 1 1 1 1 1 1 1 1 1 ...

HTH, best wishes,

Mathias

>
> > (read_gdal_data() of stars _seems_ to use R_xlen_t instead to
> > accomodate for 52bits [2]).
> >
> > Best wishes,
> >
> > Mathias
> >
> >
> > [1]
> > https://cloud.r-project.org/doc/manuals/r-patched/R-ints.html#Long-vectors
> >
> > [2]
> > https://github.com/r-spatial/sf/blob/ea1bd716769ab8140d3451e3d902cfc79bc895d5/src/stars.cpp#L172
> >
> >
> >
> > On Tue, 2020-04-28 at 13:39 +0200, Thorsten Behrens wrote:
> > > Roger and Mike,
> > >
> > > I really appreciate your help on this!
> > >
> > > I had a look at getRasterData(). It results in the same error.
> > > Hence,
> > > I
> > > made further tests where I compared grids with the following
> > > numbers
> > > of
> > > cols and rows:
> > >
> > > nPx = floor(sqrt(2^31 -1)) # 46340
> > >
> > > and
> > >
> > > nPx = ceiling(sqrt(2^31 -1)) # 46341
> > >
> > > The result is clear. Raster data with 46340 * 46340 px can be
> > > loaded
> > > with getRasterData() and with raster(), raster::as.matrix(),
> > > whereas
> > > datasets with 46341 * 46341 px cannot and result in the error:
> > >
> > > Error in getRasterData(gdCeil, band = 1) :
> > > long vectors not supported yet: memory.c:3782
> > >
> > > read_stars() works for both. You find the corresponding code
> > > below.
> > >
> > > Are there any other option I can try?
> > >
> > > Thorsten
> > >
> > >
> > > Reproducible code:
> > >
> > > ## generate raster datasets
> > > # 46340 * 46340 grid dataset
> > > sFileNameFloor = "Floor.tif"
> > >
> > > nPx = floor(sqrt(2^31 -1)) # 46340
> > > nPx
> > >
> > > rFloor = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
> > > nPx)))
> > > values(rFloor) = 1
> > >
> > > writeRaster(rFloor, sFileNameFloor, "GTiff", overwrite = TRUE,
> > > NAflag
> > > =
> > > -9999)
> > >
> > >
> > > # 46341 * 46341 grid dataset
> > > sFileNameCeil = "Ceil.tif"
> > >
> > > nPx = ceiling(sqrt(2^31 -1))
> > > nPx
> > >
> > > rCeil = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
> > > nPx)))
> > > values(rCeil) = 1
> > >
> > > writeRaster(rCeil, sFileNameCeil, "GTiff", overwrite = TRUE,
> > > NAflag
> > > =
> > > -9999)
> > >
> > >
> > > ## load raster datasets with different methods
> > >
> > > # load Ceil
> > > gdCeil = GDAL.open(sFileNameCeil)
> > > dim(gdCeil)
> > >
> > > vnCeil = getRasterData(gdCeil, band = 1) # error
> > >
> > > GDAL.close(gdCeil)
> > > str(vnCeil)
> > >
> > > stCeil = read_stars(sFileNameCeil) # all fine
> > > str(stCeil[[1]])
> > >
> > > rCeil = raster(sFileNameCeil)
> > > mCeil = raster::as.matrix(rCeil) # error
> > > str(mCeil)
> > >
> > >
> > > # load Floor
> > > gdFloor = GDAL.open(sFileNameFloor)
> > > dim(gdFloor)
> > >
> > > vnData = getRasterData(gdFloor, band = 1) # all fine
> > >
> > > GDAL.close(gdFloor)
> > > str(vnData)
> > >
> > > stFloor= read_stars(sFileNameFloor) # all fine
> > > str(stFloor[[1]])
> > >
> > > rFloor = raster(sFileNameFloor)
> > > mFloor = raster::as.matrix(rFloor) # all fine
> > > str(mFloor)
> > >
> > >
> > >
> > >
> > > Am 28.04.2020 um 12:10 schrieb Roger Bivand:
> > > > On Tue, 28 Apr 2020, Thorsten Behrens wrote:
> > > >
> > > > > Michael,
> > > > >
> > > > > Thanks for the hint, it seems to work! Real-world tests will
> > > > > follow in
> > > > > the next few days...
> > > > >
> > > > > So it definitely seems to be a problem of rgdal. It would be
> > > > > great if it
> > > > > could still be solved.
> > > >
> > > > Not rgdal, but your use of it. Try looking at a sequence of
> > > >
> > > > file <- system.file("pictures/SP27GTIF.TIF", package="rgdal")
> > > > obj <- GDAL.open(file)
> > > > (dims <- dim(obj))
> > > > band <- 1
> > > > data_vector <- getRasterData(obj, band)
> > > > GDAL.close(obj)
> > > > str(data_vector)
> > > >
> > > > This does not create any more complicated objects, just a
> > > > matrix.
> > > > In
> > > > some cases, the rows in the matrix are ordered S -> N, so it
> > > > may
> > > > appear the wrong way up.
> > > >
> > > > rgdal::getRasterData() is lightweight, and has many arguments
> > > > which
> > > > may be helpful. rgdal::readGDAL() is heavyweight, creating a
> > > > SpatialGridDataFrame object. This involves much copying of
> > > > data,
> > > > but
> > > > the output object can be used for example in mapping or
> > > > analysis
> > > > without further conversion. My guess is that
> > > > rgdal::getRasterData()
> > > > gives you your matrix directly. Look at the R code to see how
> > > > as.is=
> > > > etc. work (files may include scale and offset values - recently
> > > > a
> > > > user
> > > > was confused that scale and offset were "magically" applied to
> > > > convert
> > > > Uint16 values to degrees Kelvin on reading). For example, if
> > > > as.is
> > > > ==
> > > > TRUE or scale == 1 and offset == 0, no copying of the input
> > > > matrix
> > > > occurs because it is not converted. If you could check this
> > > > route,
> > > > others following this thread could also benefit; if I'm wrong,
> > > > that
> > > > would also be good to know.
> > > >
> > > > Roger
> > > >
> > > >
> > > > > Best,
> > > > >
> > > > > Thorsten
> > > > >
> > > > >
> > > > >
> > > > > Am 27.04.2020 um 15:58 schrieb Michael Sumner:
> > > > > > Try stars it worked for me on a test
> > > > > >
> > > > > > On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
> > > > > > <
> > > > > > thorsten.m.behrens at gmail.com
> > > > > >
> > > > > >  <mailto:
> > > > > > thorsten.m.behrens at gmail.com
> > > > > >
> > > > > >
> > > > > > wrote:
> > > > > >
> > > > > >     Roger,
> > > > > >
> > > > > >     thanks a lot for your reply!
> > > > > >
> > > > > >     I have 256GB RAM installed (mentioned it somewhere).
> > > > > > And
> > > > > > there,
> > > > > >     all is
> > > > > >     fine when I run:
> > > > > >
> > > > > >     rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > > > extent(c(0,
> > > > > > 72000,
> > > > > >
> > > > > >     values(rDemTest) = 1
> > > > > >
> > > > > >     When limiting the memory to about 8GB with
> > > > > >     ulimit::memory_limit(8000),
> > > > > >     the max size which can be allocated seems to be around
> > > > > > 10000 x
> > > > > >     10000px.
> > > > > >     In this case all tests run fine. Unfortunately it seems
> > > > > > to
> > > > > > be
> > > > > >     related to
> > > > > >     the size of the grid (48000 x 72000) and therefore the
> > > > > > problem
> > > > > >     can't be
> > > > > >     reproduced on machines with 8GB RAM. For some
> > > > > > processing
> > > > > > steps I
> > > > > > need
> > > > > >     grids of that size in the memory, which is why I have
> > > > > > 256
> > > > > > GB
> > > > > >     installed.
> > > > > >
> > > > > >     Normally, I use the raster package and not
> > > > > > rgdal::readGDAL(). This
> > > > > >     was
> > > > > >     just a desperate attempt to find the source of the
> > > > > > problem.
> > > > > >
> > > > > >     This is what I use in my code:
> > > > > >
> > > > > >     rDem = raster(sFileNameTiff)
> > > > > >     mDem = raster::as.matrix(rDem)
> > > > > >
> > > > > >     But maybe this is the same...
> > > > > >
> > > > > >     Any further suggestions are much appreciated!
> > > > > >
> > > > > >     Thanks again!
> > > > > >
> > > > > >     Best,
> > > > > >
> > > > > >     Thorsten
> > > > > >
> > > > > >
> > > > > >
> > > > > >
> > > > > >     Am 27.04.2020 um 14:50 schrieb Roger Bivand:
> > > > > >   > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
> > > > > >   >
> > > > > >   >> Dear all,
> > > > > >   >>
> > > > > >   >> my problem is that I want to read a big geotiff raster
> > > > > > dataset
> > > > > >     into R
> > > > > >   >> and convert it to a matrix, which does not work.
> > > > > >   >> The file is big but there is sufficient memory. I need
> > > > > > all the
> > > > > >     data
> > > > > >   >> in the memory at the same time.
> > > > > >   >>
> > > > > >   >> The error occurs under R 3.6.3 as well as 4.0.0 using
> > > > > > Ubuntu
> > > > > > 20.04
> > > > > >   >> LTS with the latest version of the packages (see
> > > > > > session
> > > > > > info
> > > > > >     below)
> > > > > >   >> and 256GB RAM installed.
> > > > > >   >>
> > > > > >   >> When loading the raster dataset using rgdal (via
> > > > > > readGDAL
> > > > > > or
> > > > > >   >> raster::readAll) I get the follwoing error in R 4.0.0:
> > > > > >   >>
> > > > > >   >> ```
> > > > > >   >> Error in rgdal::getRasterData(con, offset = offs,
> > > > > > region.dim =
> > > > > >     reg,
> > > > > >   >> band = object at data@band) :
> > > > > >   >>   long vectors not supported yet: memory.c:3782
> > > > > >   >> ```
> > > > > >   >
> > > > > >   > On a 16GB Fedora platform:
> > > > > >   >
> > > > > >   >> library(raster) # 3.1-5
> > > > > >   >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > > > extent(c(0,
> > > > > >     72000,
> > > > > >   > 0,
> > > > > >   > + 48000))) # all fine
> > > > > >   >> rDemTest
> > > > > >   > class      : RasterLayer
> > > > > >   > dimensions : 48000, 72000, 3.456e+09  (nrow, ncol,
> > > > > > ncell)
> > > > > >   > resolution : 1, 1  (x, y)
> > > > > >   > extent     : 0, 72000, 0, 48000  (xmin, xmax, ymin,
> > > > > > ymax)
> > > > > >   > crs        : NA
> > > > > >   >
> > > > > >   >> values(rDemTest) = 1
> > > > > >   > Error: cannot allocate vector of size 25.7 Gb
> > > > > >   >
> > > > > >   > So you are deceiving yourself into thinking that all is
> > > > > > fine at
> > > > > >     this
> > > > > >   > point. Please try to instantiate an example that can be
> > > > > >     reproduced on
> > > > > >   > a machine with 8GB RAM.
> > > > > >   >
> > > > > >   > Further note that rgdal::readGDAL() is not how you
> > > > > > handle
> > > > > > very
> > > > > >     large
> > > > > >   > objects in files, and never has been. raster can handle
> > > > > > blocks
> > > > > >     of data
> > > > > >   > from bands in file; stars and gdalcubes can use
> > > > > > proxy=TRUE
> > > > > > for the
> > > > > >   > same purpose. Why did you choose rgdal::readGDAL() when
> > > > > > this is
> > > > > > not
> > > > > >   > its purpose?
> > > > > >   >
> > > > > >   > You did not say how much RAM is on your platform.
> > > > > >   >
> > > > > >   > Roger
> > > > > >   >
> > > > > >   >>
> > > > > >   >> In R 3.6.3 is is "... memory.c:3717"
> > > > > >   >>
> > > > > >   >> However, I can load the same file with the tiff
> > > > > > package
> > > > > > and a
> > > > > >     file of
> > > > > >   >> the same size in the native raster package format
> > > > > > (*.grd)
> > > > > > with
> > > > > > the
> > > > > >   >> raster package but again not with the rgdal package.
> > > > > >   >>
> > > > > >   >> gdalinfo (gdalUtils) does not complain (see below).
> > > > > > Hence, Even
> > > > > >   >> Rouault assumes the problem is related to rgdal and
> > > > > > not
> > > > > > gdal
> > > > > >   >> (
> > > > > > https://github.com/OSGeo/gdal/issues/2442
> > > > > >
> > > > > > ).
> > > > > >   >>
> > > > > >   >> Below you find reproducible code, which generates a
> > > > > > raster file,
> > > > > >   >> saves the two formats (.tiff and .grd) and tries to
> > > > > > read
> > > > > > them
> > > > > > with
> > > > > >   >> the different packages.
> > > > > >   >>
> > > > > >   >> Is this a known limitation? Any help is greatly
> > > > > > appreciated!
> > > > > >   >>
> > > > > >   >> Thanks a lot in advance!
> > > > > >   >>
> > > > > >   >> Best wishes and stay healthy,
> > > > > >   >> Thorsten
> > > > > >   >>
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ### Steps to reproduce the problem.
> > > > > >   >>
> > > > > >   >> R code:
> > > > > >   >>
> > > > > >   >> ```
> > > > > >   >> library(rgdal) # 1.4-8
> > > > > >   >> library(raster) # 3.1-5
> > > > > >   >> library(tiff) # 0.1-5
> > > > > >   >>
> > > > > >   >> ## generate and manipulate a big raster dataset
> > > > > >   >> # - generate
> > > > > >   >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > > > extent(c(0,
> > > > > >   >> 72000, 0, 48000))) # all fine
> > > > > >   >>
> > > > > >   >> # - manipulate
> > > > > >   >> values(rDemTest) = 1 # all fine
> > > > > >   >>
> > > > > >   >> # - convert
> > > > > >   >> mDemTest = raster::as.matrix(rDemTest) # all fine
> > > > > >   >> str(mDemTest)
> > > > > >   >>
> > > > > >   >> ## save a big dataset
> > > > > >   >>
> > > > > >   >> # - as raster/gdal
> > > > > >   >> sFileNameTiff = "BigData.tif"
> > > > > >   >> writeRaster(rDemTest, sFileNameTiff, "GTiff",
> > > > > > overwrite =
> > > > > > TRUE,
> > > > > >   >> NAflag = -9999) # all fine
> > > > > >   >>
> > > > > >   >> # - as raster native
> > > > > >   >> sFileNameNative = "BigData.grd"
> > > > > >   >> writeRaster(rDemTest, sFileNameNative, "raster",
> > > > > > overwrite =
> > > > > > TRUE,
> > > > > >   >> NAflag = -9999) # all fine
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ## load the big raster datasets with different
> > > > > > packages
> > > > > > and
> > > > > > options
> > > > > >   >> # - load the tiff data with the gdal package via the
> > > > > > raster
> > > > > > package
> > > > > >   >> rDem = raster(sFileNameTiff) # all fine
> > > > > >   >> extent(rDem) # all fine
> > > > > >   >> mDem = raster::as.matrix(rDem) # error
> > > > > >   >> rDem = readAll(rDem) # error
> > > > > >   >>
> > > > > >   >> # - load the native raster data with the raster
> > > > > > package
> > > > > >   >> rDem = raster(sFileNameNative) # all fine
> > > > > >   >> extent(rDem) # all fine
> > > > > >   >> mDem = raster::as.matrix(rDem) # all fine
> > > > > >   >> str(mDem)
> > > > > >   >>
> > > > > >   >> # - load the tiff data with the tiff package
> > > > > >   >> mDem = readTIFF(sFileNameTiff) # all fine
> > > > > >   >> str(mDem)
> > > > > >   >>
> > > > > >   >> # - load the tiff data with the gdal package
> > > > > >   >> sfDem = readGDAL(sFileNameTiff) # error
> > > > > >   >>
> > > > > >   >> # - load the native raster data with the gdal package
> > > > > >   >> sfDem = readGDAL(sFileNameNative) # error
> > > > > >   >>
> > > > > >   >> ```
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ### Startup messages when rgdal is attached (requested
> > > > > > by
> > > > > > Roger
> > > > > >     Bivand)
> > > > > >   >>>  library(rgdal)
> > > > > >   >> rgdal: version: 1.4-8, (SVN revision 845)
> > > > > >   >>  Geospatial Data Abstraction Library extensions to R
> > > > > >     successfully loaded
> > > > > >   >>  Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
> > > > > >   >>  Path to GDAL shared files:
> > > > > >   >>  GDAL binary built with GEOS: TRUE
> > > > > >   >>  Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th,
> > > > > > 2020,
> > > > > >     [PJ_VERSION:
> > > > > >   >> 631]
> > > > > >   >>  Path to PROJ.4 shared files: (autodetected)
> > > > > >   >>  Linking to sp version: 1.4-1
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ### Session info
> > > > > >   >>>  sessionInfo()
> > > > > >   >> R version 4.0.0 (2020-04-24)
> > > > > >   >> Platform: x86_64-pc-linux-gnu (64-bit)
> > > > > >   >> Running under: Ubuntu 20.04 LTS
> > > > > >   >>
> > > > > >   >> Matrix products: default
> > > > > >   >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-
> > > > > > pthread/libblas.so.3
> > > > > >   >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-
> > > > > > pthread/liblapack.so.3
> > > > > >   >>
> > > > > >   >> locale:
> > > > > >   >>  [1] LC_CTYPE=de_DE.UTF-8       LC_NUMERIC=C
> > > > > > LC_TIME=de_DE.UTF-8
> > > > > >   >>  [4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
> > > > > >   >> LC_MESSAGES=de_DE.UTF-8
> > > > > >   >>  [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C LC_ADDRESS=C
> > > > > >   >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
> > > > > >   >> LC_IDENTIFICATION=C
> > > > > >   >>
> > > > > >   >> attached base packages:
> > > > > >   >> [1] stats     graphics  grDevices utils datasets
> > > > > > methods
> > > > > > base
> > > > > >   >>
> > > > > >   >> other attached packages:
> > > > > >   >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8       tiff_0.1-5
> > > > > > raster_3.1-5
> > > > > >   >> sp_1.4-1
> > > > > >   >>
> > > > > >   >> loaded via a namespace (and not attached):
> > > > > >   >>  [1] compiler_4.0.0    tools_4.0.0 Rcpp_1.0.4.6
> > > > > >   >> R.methodsS3_1.8.0 codetools_0.2-16
> > > > > >   >>  [6] grid_4.0.0        iterators_1.0.12 foreach_1.5.0
> > > > > >   >> R.utils_2.9.2     R.oo_1.23.0
> > > > > >   >> [11] lattice_0.20-41
> > > > > >   >>
> > > > > >   >>
> > > > > >   >> ### gdalInfo
> > > > > >   >>>  gdalinfo(sFileNameTiff)
> > > > > >   >>  [1] "Driver: GTiff/GeoTIFF"
> > > > > >   >>  [2] "Files: BigData.tif"
> > > > > >   >>  [3] "Size is 72000, 48000"
> > > > > >   >>  [4] "Origin =
> > > > > > (0.000000000000000,48000.000000000000000)"
> > > > > >   >>  [5] "Pixel Size = (1.000000000000000,-
> > > > > > 1.000000000000000)"
> > > > > >   >>  [6] "Image Structure Metadata:"
> > > > > >   >>  [7] "  COMPRESSION=LZW"
> > > > > >   >>  [8] "  INTERLEAVE=BAND"
> > > > > >   >>  [9] "Corner Coordinates:"
> > > > > >   >> [10] "Upper Left  (       0.000,   48000.000) "
> > > > > >   >> [11] "Lower Left  (   0.0000000,   0.0000000) "
> > > > > >   >> [12] "Upper Right (   72000.000,   48000.000) "
> > > > > >   >> [13] "Lower Right (   72000.000,       0.000) "
> > > > > >   >> [14] "Center      (   36000.000,   24000.000) "
> > > > > >   >> [15] "Band 1 Block=72000x1 Type=Float32,
> > > > > > ColorInterp=Gray"
> > > > > >   >> [16] "  Min=1.000 Max=1.000 "
> > > > > >   >> [17] "  Minimum=1.000, Maximum=1.000, Mean=nan,
> > > > > > StdDev=nan"
> > > > > >   >> [18] "  NoData Value=-9999"
> > > > > >   >> [19] "  Metadata:"
> > > > > >   >> [20] "    STATISTICS_MAXIMUM=1"
> > > > > >   >> [21] "    STATISTICS_MEAN=nan"
> > > > > >   >> [22] "    STATISTICS_MINIMUM=1"
> > > > > >   >> [23] "    STATISTICS_STDDEV=nan"
> > > > > >   >>
> > > > > >   >> _______________________________________________
> > > > > >   >> R-sig-Geo mailing list
> > > > > >   >>
> > > > > > R-sig-Geo at r-project.org
> > > > > >
> > > > > >  <mailto:
> > > > > > R-sig-Geo at r-project.org
> > > > > >
> > > > > >
> > > > > >   >>
> > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > > >
> > > > > >
> > > > > >   >>
> > > > > >   >>
> > > > > >   >
> > > > > >
> > > > > >     _______________________________________________
> > > > > >     R-sig-Geo mailing list
> > > > > >
> > > > > > R-sig-Geo at r-project.org
> > > > > >
> > > > > >  <mailto:
> > > > > > R-sig-Geo at r-project.org
> > > > > >
> > > > > >
> > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > > >
> > > > > >
> > > > > >
> > > > >
> > > > >     [[alternative HTML version deleted]]
> > > > >
> > > > > _______________________________________________
> > > > > R-sig-Geo mailing list
> > > > > R-sig-Geo at r-project.org
> > > > >
> > > > >
> > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > >
> > > > >
> > > > >
> > >
> > > _______________________________________________
> > > R-sig-Geo mailing list
> > > R-sig-Geo at r-project.org
> > >
> > >
> > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > >
> > >
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> >
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
> >


From thor@ten@m@behren@ @end|ng |rom gm@||@com  Wed Apr 29 12:23:37 2020
From: thor@ten@m@behren@ @end|ng |rom gm@||@com (Thorsten Behrens)
Date: Wed, 29 Apr 2020 10:23:37 +0000 (UTC)
Subject: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R
 4.0.0/3.6.3, Ubuntu 20.04)
In-Reply-To: <f9d079135fbe48b99f61a839d092b836@nhh.no>
References: <d51d17e2-6913-06bb-1aee-114d6a47f2b0@gmail.com>
 <alpine.LFD.2.21.2004271440080.4086529@reclus.nhh.no>
 <75d7b5c7-a025-aaae-4baa-cd21b30d6a26@gmail.com>
 <CAAcGz98JLg_fqn9rYxJQqdYfwUeL_RDRdCa tUpffScSfu=NAg@mail.gmail.com>
 <46af82df-46c8-d9f1-60b7-28cee9c6c747@gmail.com>
 <alpine.LFD.2.21.2004281144270.4169873@reclus.nhh.no>
 <0262d49b-ae9c-1540-5cb8-1f1490d58090@gmail.com>
 <726ef749a271278c327218f88eab0a64b53f5000.camel@wu.ac.at>
 <alpine.LFD.2.21.2004281927080.4172689@reclus.nhh.no>
 <5e58bb186a84424e6d2da0a58a38066c3a1ec09f.camel@wu.ac.at>
 <f9d079135fbe48b99f61a839d092b836@nhh.no>
Message-ID: <0b78704c-5467-4ace-b5ed-8d8ea6f250eb@localhost>

Roger and Mathias,

I tried the latest version (rev 962) and it works! Perfect!

Thanks a lot!

Cheers,
Thorsten


29.04.2020 11:27:18 Roger Bivand <Roger.Bivand at nhh.no>:

> Thanks, as I thought. Committed to R-forge as SVN rev. 962. Really we'd need a test rig for reading, manipulation in sp/rgdal and raster, and writing, to be sure that all int assumptions that need conversion to R_xlen_t.
> 
> Roger
> 
> -- 
> Roger Bivand
> Norwegian School of Economics
> Helleveien 30, 5045 Bergen, Norway
> Roger.Bivand at nhh.no
> 
> 
> ________________________________________
> Fra: Mathias Moser <matmoser at wu.ac.at>
> Sendt: tirsdag 28. april 2020 22.14
> Til: Roger Bivand
> Kopi: RsigGeo
> Emne: Re: [R-sig-Geo] rgdal: problem reading a bigger raster dataset (R 4.0.0/3.6.3, Ubuntu 20.04)
> 
> 
> > I cannot check this because I have no access to a platform with
> > enough
> > RAM, so I need help here. I haven't been able to confirm that
> > LENGTH(sRStorage) returns an R_xlen_t, or double, in lines 1672, 1685
> > or
> > 1693. Is there a way of generating a large file using a GDAL app,
> > perhaps,
> > then I could just try reading a larger file if LENGTH plays up?
> > 
> 
> LENGTH() can not handle the R_xlen_t and again throws a long vector
> error. I have replaced the three occurrences with XLENGTH() and tested
> using Thorsten's Ceil.tif file, looks good so far:
> 
> 
> > 
> > > library(rgdal)
> > > 
> > Loading required package: sp
> > rgdal: version: 1.5-8, (SVN revision (unknown))
> > Geospatial Data Abstraction Library extensions to R successfully
> > loaded
> > Loaded GDAL runtime: GDAL 3.0.1, released 2019/06/28
> > Path to GDAL shared files: /usr/local/share/gdal
> > GDAL binary built with GEOS: TRUE
> > Loaded PROJ runtime: Rel. 6.2.0, September 1st, 2019, [PJ_VERSION:
> > 620]
> > Path to PROJ shared files: /usr/local/share/proj
> > Linking to sp version: 1.4-1
> > 
> > > mCeil = raster::as.matrix(raster::raster("Ceil.tif"))
> > > str(mCeil)
> > > 
> > num [1:46341, 1:46341] 1 1 1 1 1 1 1 1 1 1 ...
> > 
> 
> HTH, best wishes,
> 
> Mathias
> 
> 
> > 
> > 
> > > (read_gdal_data() of stars _seems_ to use R_xlen_t instead to
> > > accomodate for 52bits [2]).
> > > 
> > > Best wishes,
> > > 
> > > Mathias
> > > 
> > > 
> > > [1]
> > > https://cloud.r-project.org/doc/manuals/r-patched/R-ints.html#Long-vectors
> > > 
> > > [2]
> > > https://github.com/r-spatial/sf/blob/ea1bd716769ab8140d3451e3d902cfc79bc895d5/src/stars.cpp#L172
> > > 
> > > 
> > > 
> > > On Tue, 2020-04-28 at 13:39 +0200, Thorsten Behrens wrote:
> > > 
> > > > Roger and Mike,
> > > > 
> > > > I really appreciate your help on this!
> > > > 
> > > > I had a look at getRasterData(). It results in the same error.
> > > > Hence,
> > > > I
> > > > made further tests where I compared grids with the following
> > > > numbers
> > > > of
> > > > cols and rows:
> > > > 
> > > > nPx = floor(sqrt(2^31 -1)) # 46340
> > > > 
> > > > and
> > > > 
> > > > nPx = ceiling(sqrt(2^31 -1)) # 46341
> > > > 
> > > > The result is clear. Raster data with 46340 * 46340 px can be
> > > > loaded
> > > > with getRasterData() and with raster(), raster::as.matrix(),
> > > > whereas
> > > > datasets with 46341 * 46341 px cannot and result in the error:
> > > > 
> > > > Error in getRasterData(gdCeil, band = 1) :
> > > > long vectors not supported yet: memory.c:3782
> > > > 
> > > > read_stars() works for both. You find the corresponding code
> > > > below.
> > > > 
> > > > Are there any other option I can try?
> > > > 
> > > > Thorsten
> > > > 
> > > > 
> > > > Reproducible code:
> > > > 
> > > > ## generate raster datasets
> > > > # 46340 * 46340 grid dataset
> > > > sFileNameFloor = "Floor.tif"
> > > > 
> > > > nPx = floor(sqrt(2^31 -1)) # 46340
> > > > nPx
> > > > 
> > > > rFloor = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
> > > > nPx)))
> > > > values(rFloor) = 1
> > > > 
> > > > writeRaster(rFloor, sFileNameFloor, "GTiff", overwrite = TRUE,
> > > > NAflag
> > > > =
> > > > -9999)
> > > > 
> > > > 
> > > > # 46341 * 46341 grid dataset
> > > > sFileNameCeil = "Ceil.tif"
> > > > 
> > > > nPx = ceiling(sqrt(2^31 -1))
> > > > nPx
> > > > 
> > > > rCeil = raster(nrow = nPx, ncol = nPx, ext = extent(c(0, nPx, 0,
> > > > nPx)))
> > > > values(rCeil) = 1
> > > > 
> > > > writeRaster(rCeil, sFileNameCeil, "GTiff", overwrite = TRUE,
> > > > NAflag
> > > > =
> > > > -9999)
> > > > 
> > > > 
> > > > ## load raster datasets with different methods
> > > > 
> > > > # load Ceil
> > > > gdCeil = GDAL.open(sFileNameCeil)
> > > > dim(gdCeil)
> > > > 
> > > > vnCeil = getRasterData(gdCeil, band = 1) # error
> > > > 
> > > > GDAL.close(gdCeil)
> > > > str(vnCeil)
> > > > 
> > > > stCeil = read_stars(sFileNameCeil) # all fine
> > > > str(stCeil[[1]])
> > > > 
> > > > rCeil = raster(sFileNameCeil)
> > > > mCeil = raster::as.matrix(rCeil) # error
> > > > str(mCeil)
> > > > 
> > > > 
> > > > # load Floor
> > > > gdFloor = GDAL.open(sFileNameFloor)
> > > > dim(gdFloor)
> > > > 
> > > > vnData = getRasterData(gdFloor, band = 1) # all fine
> > > > 
> > > > GDAL.close(gdFloor)
> > > > str(vnData)
> > > > 
> > > > stFloor= read_stars(sFileNameFloor) # all fine
> > > > str(stFloor[[1]])
> > > > 
> > > > rFloor = raster(sFileNameFloor)
> > > > mFloor = raster::as.matrix(rFloor) # all fine
> > > > str(mFloor)
> > > > 
> > > > 
> > > > 
> > > > 
> > > > Am 28.04.2020 um 12:10 schrieb Roger Bivand:
> > > > 
> > > > > On Tue, 28 Apr 2020, Thorsten Behrens wrote:
> > > > > 
> > > > > 
> > > > > > Michael,
> > > > > > 
> > > > > > Thanks for the hint, it seems to work! Real-world tests will
> > > > > > follow in
> > > > > > the next few days...
> > > > > > 
> > > > > > So it definitely seems to be a problem of rgdal. It would be
> > > > > > great if it
> > > > > > could still be solved.
> > > > > > 
> > > > > 
> > > > > Not rgdal, but your use of it. Try looking at a sequence of
> > > > > 
> > > > > file <- system.file("pictures/SP27GTIF.TIF", package="rgdal")
> > > > > obj <- GDAL.open(file)
> > > > > (dims <- dim(obj))
> > > > > band <- 1
> > > > > data_vector <- getRasterData(obj, band)
> > > > > GDAL.close(obj)
> > > > > str(data_vector)
> > > > > 
> > > > > This does not create any more complicated objects, just a
> > > > > matrix.
> > > > > In
> > > > > some cases, the rows in the matrix are ordered S -> N, so it
> > > > > may
> > > > > appear the wrong way up.
> > > > > 
> > > > > rgdal::getRasterData() is lightweight, and has many arguments
> > > > > which
> > > > > may be helpful. rgdal::readGDAL() is heavyweight, creating a
> > > > > SpatialGridDataFrame object. This involves much copying of
> > > > > data,
> > > > > but
> > > > > the output object can be used for example in mapping or
> > > > > analysis
> > > > > without further conversion. My guess is that
> > > > > rgdal::getRasterData()
> > > > > gives you your matrix directly. Look at the R code to see how
> > > > > as.is=
> > > > > etc. work (files may include scale and offset values - recently
> > > > > a
> > > > > user
> > > > > was confused that scale and offset were "magically" applied to
> > > > > convert
> > > > > Uint16 values to degrees Kelvin on reading). For example, if
> > > > > as.is
> > > > > ==
> > > > > TRUE or scale == 1 and offset == 0, no copying of the input
> > > > > matrix
> > > > > occurs because it is not converted. If you could check this
> > > > > route,
> > > > > others following this thread could also benefit; if I'm wrong,
> > > > > that
> > > > > would also be good to know.
> > > > > 
> > > > > Roger
> > > > > 
> > > > > 
> > > > > 
> > > > > > Best,
> > > > > > 
> > > > > > Thorsten
> > > > > > 
> > > > > > 
> > > > > > 
> > > > > > Am 27.04.2020 um 15:58 schrieb Michael Sumner:
> > > > > > 
> > > > > > > Try stars it worked for me on a test
> > > > > > > 
> > > > > > > On Mon., 27 Apr. 2020, 23:54 Thorsten Behrens,
> > > > > > > <
> > > > > > > thorsten.m.behrens at gmail.com
> > > > > > > 
> > > > > > > <mailto:
> > > > > > > thorsten.m.behrens at gmail.com
> > > > > > > 
> > > > > > > 
> > > > > > > wrote:
> > > > > > > 
> > > > > > > Roger,
> > > > > > > 
> > > > > > > thanks a lot for your reply!
> > > > > > > 
> > > > > > > I have 256GB RAM installed (mentioned it somewhere).
> > > > > > > And
> > > > > > > there,
> > > > > > > all is
> > > > > > > fine when I run:
> > > > > > > 
> > > > > > > rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > > > > extent(c(0,
> > > > > > > 72000,
> > > > > > > 
> > > > > > > values(rDemTest) = 1
> > > > > > > 
> > > > > > > When limiting the memory to about 8GB with
> > > > > > > ulimit::memory_limit(8000),
> > > > > > > the max size which can be allocated seems to be around
> > > > > > > 10000 x
> > > > > > > 10000px.
> > > > > > > In this case all tests run fine. Unfortunately it seems
> > > > > > > to
> > > > > > > be
> > > > > > > related to
> > > > > > > the size of the grid (48000 x 72000) and therefore the
> > > > > > > problem
> > > > > > > can't be
> > > > > > > reproduced on machines with 8GB RAM. For some
> > > > > > > processing
> > > > > > > steps I
> > > > > > > need
> > > > > > > grids of that size in the memory, which is why I have
> > > > > > > 256
> > > > > > > GB
> > > > > > > installed.
> > > > > > > 
> > > > > > > Normally, I use the raster package and not
> > > > > > > rgdal::readGDAL(). This
> > > > > > > was
> > > > > > > just a desperate attempt to find the source of the
> > > > > > > problem.
> > > > > > > 
> > > > > > > This is what I use in my code:
> > > > > > > 
> > > > > > > rDem = raster(sFileNameTiff)
> > > > > > > mDem = raster::as.matrix(rDem)
> > > > > > > 
> > > > > > > But maybe this is the same...
> > > > > > > 
> > > > > > > Any further suggestions are much appreciated!
> > > > > > > 
> > > > > > > Thanks again!
> > > > > > > 
> > > > > > > Best,
> > > > > > > 
> > > > > > > Thorsten
> > > > > > > 
> > > > > > > 
> > > > > > > 
> > > > > > > 
> > > > > > > Am 27.04.2020 um 14:50 schrieb Roger Bivand:
> > > > > > > > On Mon, 27 Apr 2020, Thorsten Behrens wrote:
> > > > > > > >
> > > > > > > >> Dear all,
> > > > > > > >>
> > > > > > > >> my problem is that I want to read a big geotiff raster
> > > > > > > dataset
> > > > > > > into R
> > > > > > > >> and convert it to a matrix, which does not work.
> > > > > > > >> The file is big but there is sufficient memory. I need
> > > > > > > all the
> > > > > > > data
> > > > > > > >> in the memory at the same time.
> > > > > > > >>
> > > > > > > >> The error occurs under R 3.6.3 as well as 4.0.0 using
> > > > > > > Ubuntu
> > > > > > > 20.04
> > > > > > > >> LTS with the latest version of the packages (see
> > > > > > > session
> > > > > > > info
> > > > > > > below)
> > > > > > > >> and 256GB RAM installed.
> > > > > > > >>
> > > > > > > >> When loading the raster dataset using rgdal (via
> > > > > > > readGDAL
> > > > > > > or
> > > > > > > >> raster::readAll) I get the follwoing error in R 4.0.0:
> > > > > > > >>
> > > > > > > >> ```
> > > > > > > >> Error in rgdal::getRasterData(con, offset = offs,
> > > > > > > region.dim =
> > > > > > > reg,
> > > > > > > >> band = object at data@band) :
> > > > > > > >> long vectors not supported yet: memory.c:3782
> > > > > > > >> ```
> > > > > > > >
> > > > > > > > On a 16GB Fedora platform:
> > > > > > > >
> > > > > > > >> library(raster) # 3.1-5
> > > > > > > >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > > > > extent(c(0,
> > > > > > > 72000,
> > > > > > > > 0,
> > > > > > > > + 48000))) # all fine
> > > > > > > >> rDemTest
> > > > > > > > class : RasterLayer
> > > > > > > > dimensions : 48000, 72000, 3.456e+09 (nrow, ncol,
> > > > > > > ncell)
> > > > > > > > resolution : 1, 1 (x, y)
> > > > > > > > extent : 0, 72000, 0, 48000 (xmin, xmax, ymin,
> > > > > > > ymax)
> > > > > > > > crs : NA
> > > > > > > >
> > > > > > > >> values(rDemTest) = 1
> > > > > > > > Error: cannot allocate vector of size 25.7 Gb
> > > > > > > >
> > > > > > > > So you are deceiving yourself into thinking that all is
> > > > > > > fine at
> > > > > > > this
> > > > > > > > point. Please try to instantiate an example that can be
> > > > > > > reproduced on
> > > > > > > > a machine with 8GB RAM.
> > > > > > > >
> > > > > > > > Further note that rgdal::readGDAL() is not how you
> > > > > > > handle
> > > > > > > very
> > > > > > > large
> > > > > > > > objects in files, and never has been. raster can handle
> > > > > > > blocks
> > > > > > > of data
> > > > > > > > from bands in file; stars and gdalcubes can use
> > > > > > > proxy=TRUE
> > > > > > > for the
> > > > > > > > same purpose. Why did you choose rgdal::readGDAL() when
> > > > > > > this is
> > > > > > > not
> > > > > > > > its purpose?
> > > > > > > >
> > > > > > > > You did not say how much RAM is on your platform.
> > > > > > > >
> > > > > > > > Roger
> > > > > > > >
> > > > > > > >>
> > > > > > > >> In R 3.6.3 is is "... memory.c:3717"
> > > > > > > >>
> > > > > > > >> However, I can load the same file with the tiff
> > > > > > > package
> > > > > > > and a
> > > > > > > file of
> > > > > > > >> the same size in the native raster package format
> > > > > > > (*.grd)
> > > > > > > with
> > > > > > > the
> > > > > > > >> raster package but again not with the rgdal package.
> > > > > > > >>
> > > > > > > >> gdalinfo (gdalUtils) does not complain (see below).
> > > > > > > Hence, Even
> > > > > > > >> Rouault assumes the problem is related to rgdal and
> > > > > > > not
> > > > > > > gdal
> > > > > > > >> (
> > > > > > > https://github.com/OSGeo/gdal/issues/2442
> > > > > > > 
> > > > > > > ).
> > > > > > > >>
> > > > > > > >> Below you find reproducible code, which generates a
> > > > > > > raster file,
> > > > > > > >> saves the two formats (.tiff and .grd) and tries to
> > > > > > > read
> > > > > > > them
> > > > > > > with
> > > > > > > >> the different packages.
> > > > > > > >>
> > > > > > > >> Is this a known limitation? Any help is greatly
> > > > > > > appreciated!
> > > > > > > >>
> > > > > > > >> Thanks a lot in advance!
> > > > > > > >>
> > > > > > > >> Best wishes and stay healthy,
> > > > > > > >> Thorsten
> > > > > > > >>
> > > > > > > >>
> > > > > > > >>
> > > > > > > >> ### Steps to reproduce the problem.
> > > > > > > >>
> > > > > > > >> R code:
> > > > > > > >>
> > > > > > > >> ```
> > > > > > > >> library(rgdal) # 1.4-8
> > > > > > > >> library(raster) # 3.1-5
> > > > > > > >> library(tiff) # 0.1-5
> > > > > > > >>
> > > > > > > >> ## generate and manipulate a big raster dataset
> > > > > > > >> # - generate
> > > > > > > >> rDemTest = raster(nrow = 48000, ncol = 72000, ext =
> > > > > > > extent(c(0,
> > > > > > > >> 72000, 0, 48000))) # all fine
> > > > > > > >>
> > > > > > > >> # - manipulate
> > > > > > > >> values(rDemTest) = 1 # all fine
> > > > > > > >>
> > > > > > > >> # - convert
> > > > > > > >> mDemTest = raster::as.matrix(rDemTest) # all fine
> > > > > > > >> str(mDemTest)
> > > > > > > >>
> > > > > > > >> ## save a big dataset
> > > > > > > >>
> > > > > > > >> # - as raster/gdal
> > > > > > > >> sFileNameTiff = "BigData.tif"
> > > > > > > >> writeRaster(rDemTest, sFileNameTiff, "GTiff",
> > > > > > > overwrite =
> > > > > > > TRUE,
> > > > > > > >> NAflag = -9999) # all fine
> > > > > > > >>
> > > > > > > >> # - as raster native
> > > > > > > >> sFileNameNative = "BigData.grd"
> > > > > > > >> writeRaster(rDemTest, sFileNameNative, "raster",
> > > > > > > overwrite =
> > > > > > > TRUE,
> > > > > > > >> NAflag = -9999) # all fine
> > > > > > > >>
> > > > > > > >>
> > > > > > > >> ## load the big raster datasets with different
> > > > > > > packages
> > > > > > > and
> > > > > > > options
> > > > > > > >> # - load the tiff data with the gdal package via the
> > > > > > > raster
> > > > > > > package
> > > > > > > >> rDem = raster(sFileNameTiff) # all fine
> > > > > > > >> extent(rDem) # all fine
> > > > > > > >> mDem = raster::as.matrix(rDem) # error
> > > > > > > >> rDem = readAll(rDem) # error
> > > > > > > >>
> > > > > > > >> # - load the native raster data with the raster
> > > > > > > package
> > > > > > > >> rDem = raster(sFileNameNative) # all fine
> > > > > > > >> extent(rDem) # all fine
> > > > > > > >> mDem = raster::as.matrix(rDem) # all fine
> > > > > > > >> str(mDem)
> > > > > > > >>
> > > > > > > >> # - load the tiff data with the tiff package
> > > > > > > >> mDem = readTIFF(sFileNameTiff) # all fine
> > > > > > > >> str(mDem)
> > > > > > > >>
> > > > > > > >> # - load the tiff data with the gdal package
> > > > > > > >> sfDem = readGDAL(sFileNameTiff) # error
> > > > > > > >>
> > > > > > > >> # - load the native raster data with the gdal package
> > > > > > > >> sfDem = readGDAL(sFileNameNative) # error
> > > > > > > >>
> > > > > > > >> ```
> > > > > > > >>
> > > > > > > >>
> > > > > > > >> ### Startup messages when rgdal is attached (requested
> > > > > > > by
> > > > > > > Roger
> > > > > > > Bivand)
> > > > > > > >>> library(rgdal)
> > > > > > > >> rgdal: version: 1.4-8, (SVN revision 845)
> > > > > > > >> Geospatial Data Abstraction Library extensions to R
> > > > > > > successfully loaded
> > > > > > > >> Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
> > > > > > > >> Path to GDAL shared files:
> > > > > > > >> GDAL binary built with GEOS: TRUE
> > > > > > > >> Loaded PROJ.4 runtime: Rel. 6.3.1, February 10th,
> > > > > > > 2020,
> > > > > > > [PJ_VERSION:
> > > > > > > >> 631]
> > > > > > > >> Path to PROJ.4 shared files: (autodetected)
> > > > > > > >> Linking to sp version: 1.4-1
> > > > > > > >>
> > > > > > > >>
> > > > > > > >> ### Session info
> > > > > > > >>> sessionInfo()
> > > > > > > >> R version 4.0.0 (2020-04-24)
> > > > > > > >> Platform: x86_64-pc-linux-gnu (64-bit)
> > > > > > > >> Running under: Ubuntu 20.04 LTS
> > > > > > > >>
> > > > > > > >> Matrix products: default
> > > > > > > >> BLAS: /usr/lib/x86_64-linux-gnu/openblas-
> > > > > > > pthread/libblas.so.3
> > > > > > > >> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-
> > > > > > > pthread/liblapack.so.3
> > > > > > > >>
> > > > > > > >> locale:
> > > > > > > >> [1] LC_CTYPE=de_DE.UTF-8 LC_NUMERIC=C
> > > > > > > LC_TIME=de_DE.UTF-8
> > > > > > > >> [4] LC_COLLATE=de_DE.UTF-8 LC_MONETARY=de_DE.UTF-8
> > > > > > > >> LC_MESSAGES=de_DE.UTF-8
> > > > > > > >> [7] LC_PAPER=de_DE.UTF-8 LC_NAME=C LC_ADDRESS=C
> > > > > > > >> [10] LC_TELEPHONE=C LC_MEASUREMENT=de_DE.UTF-8
> > > > > > > >> LC_IDENTIFICATION=C
> > > > > > > >>
> > > > > > > >> attached base packages:
> > > > > > > >> [1] stats graphics grDevices utils datasets
> > > > > > > methods
> > > > > > > base
> > > > > > > >>
> > > > > > > >> other attached packages:
> > > > > > > >> [1] gdalUtils_2.0.3.2 rgdal_1.4-8 tiff_0.1-5
> > > > > > > raster_3.1-5
> > > > > > > >> sp_1.4-1
> > > > > > > >>
> > > > > > > >> loaded via a namespace (and not attached):
> > > > > > > >> [1] compiler_4.0.0 tools_4.0.0 Rcpp_1.0.4.6
> > > > > > > >> R.methodsS3_1.8.0 codetools_0.2-16
> > > > > > > >> [6] grid_4.0.0 iterators_1.0.12 foreach_1.5.0
> > > > > > > >> R.utils_2.9.2 R.oo_1.23.0
> > > > > > > >> [11] lattice_0.20-41
> > > > > > > >>
> > > > > > > >>
> > > > > > > >> ### gdalInfo
> > > > > > > >>> gdalinfo(sFileNameTiff)
> > > > > > > >> [1] "Driver: GTiff/GeoTIFF"
> > > > > > > >> [2] "Files: BigData.tif"
> > > > > > > >> [3] "Size is 72000, 48000"
> > > > > > > >> [4] "Origin =
> > > > > > > (0.000000000000000,48000.000000000000000)"
> > > > > > > >> [5] "Pixel Size = (1.000000000000000,-
> > > > > > > 1.000000000000000)"
> > > > > > > >> [6] "Image Structure Metadata:"
> > > > > > > >> [7] " COMPRESSION=LZW"
> > > > > > > >> [8] " INTERLEAVE=BAND"
> > > > > > > >> [9] "Corner Coordinates:"
> > > > > > > >> [10] "Upper Left ( 0.000, 48000.000) "
> > > > > > > >> [11] "Lower Left ( 0.0000000, 0.0000000) "
> > > > > > > >> [12] "Upper Right ( 72000.000, 48000.000) "
> > > > > > > >> [13] "Lower Right ( 72000.000, 0.000) "
> > > > > > > >> [14] "Center ( 36000.000, 24000.000) "
> > > > > > > >> [15] "Band 1 Block=72000x1 Type=Float32,
> > > > > > > ColorInterp=Gray"
> > > > > > > >> [16] " Min=1.000 Max=1.000 "
> > > > > > > >> [17] " Minimum=1.000, Maximum=1.000, Mean=nan,
> > > > > > > StdDev=nan"
> > > > > > > >> [18] " NoData Value=-9999"
> > > > > > > >> [19] " Metadata:"
> > > > > > > >> [20] " STATISTICS_MAXIMUM=1"
> > > > > > > >> [21] " STATISTICS_MEAN=nan"
> > > > > > > >> [22] " STATISTICS_MINIMUM=1"
> > > > > > > >> [23] " STATISTICS_STDDEV=nan"
> > > > > > > >>
> > > > > > > >> _______________________________________________
> > > > > > > >> R-sig-Geo mailing list
> > > > > > > >>
> > > > > > > R-sig-Geo at r-project.org
> > > > > > > 
> > > > > > > <mailto:
> > > > > > > R-sig-Geo at r-project.org
> > > > > > > 
> > > > > > > 
> > > > > > > >>
> > > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > > > > 
> > > > > > > 
> > > > > > > >>
> > > > > > > >>
> > > > > > > >
> > > > > > > 
> > > > > > > _______________________________________________
> > > > > > > R-sig-Geo mailing list
> > > > > > > 
> > > > > > > R-sig-Geo at r-project.org
> > > > > > > 
> > > > > > > <mailto:
> > > > > > > R-sig-Geo at r-project.org
> > > > > > > 
> > > > > > > 
> > > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > > > > 
> > > > > > > 
> > > > > > > 
> > > > > > > 
> > > > > > 
> > > > > > [[alternative HTML version deleted]]
> > > > > > 
> > > > > > _______________________________________________
> > > > > > R-sig-Geo mailing list
> > > > > > R-sig-Geo at r-project.org
> > > > > > 
> > > > > > 
> > > > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > > > 
> > > > > > 
> > > > > > 
> > > > > > 
> > > > > 
> > > > 
> > > > _______________________________________________
> > > > R-sig-Geo mailing list
> > > > R-sig-Geo at r-project.org
> > > > 
> > > > 
> > > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > > 
> > > > 
> > > > 
> > > 
> > > _______________________________________________
> > > R-sig-Geo mailing list
> > > R-sig-Geo at r-project.org
> > > 
> > > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > > 
> > > 
> > > 
> > 
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 
>


From edzer@pebe@m@ @end|ng |rom un|-muen@ter@de  Wed Apr 29 13:56:15 2020
From: edzer@pebe@m@ @end|ng |rom un|-muen@ter@de (Edzer Pebesma)
Date: Wed, 29 Apr 2020 13:56:15 +0200
Subject: [R-sig-Geo] R 4.0.0 Windows binaries for devel sf w/GDAL3&PROJ6
In-Reply-To: <alpine.LFD.2.21.2004271729080.4142306@reclus.nhh.no>
References: <alpine.LFD.2.21.2004271729080.4142306@reclus.nhh.no>
Message-ID: <36817b66-6d13-9fe8-64a4-5068e2562a41@uni-muenster.de>

Similar to sp and rgdal, upcoming sf CRAN windows binaries will use GDAL
3.0.4, PROJ 6.3.1, and GEOS 3.8.0. You can try a beta-version of sf
0.9-3 now by installing it with:

install.packages("sf", repos = "https://edzer.github.io/drat", type =
"win.binary")

Comments are welcome here, or as issues on github.
-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48149 Muenster, Germany
Phone: +49 251 8333081

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pEpkey.asc
Type: application/pgp-keys
Size: 3110 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20200429/a1db26c0/attachment.bin>

From jru85yebe @end|ng |rom hotm@||@com  Thu Apr 30 00:33:45 2020
From: jru85yebe @end|ng |rom hotm@||@com (=?utf-8?Q?Jes=C3=BAs_Rojo?=)
Date: Thu, 30 Apr 2020 00:33:45 +0200
Subject: [R-sig-Geo] Help: assign crs to RasterBrick
In-Reply-To: <VI1P194MB0558E097A213BB0E1680DA94B4AE0@VI1P194MB0558.EURP194.PROD.OUTLOOK.COM>
References: <VI1P194MB0558E097A213BB0E1680DA94B4AE0@VI1P194MB0558.EURP194.PROD.OUTLOOK.COM>
Message-ID: <VI1P194MB0558FAAE37D58CE5FB3961F7B4AD0@VI1P194MB0558.EURP194.PROD.OUTLOOK.COM>


> Hello everyone
> I have a flipped RasterBrick without crs assigned (crs = NA):
> plot(a[[100]]
> <PastedGraphic-2.tiff>
> I would like to fill the map and assign the correct coordinate systems, that it has been said to me to be specifically:
> 
> "+init=EPSG:3034 +proj=lcc +lat_1=35 +lat_2=65 +lat_0=50 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs?
> 
> I try to solve with the next commands for the raster library:
> 
> In a first step I have flipped the map, and it has been right with:
> 
> a <- t(flip(a, direction='y' ))
> 
> But I have problems with the assignments of the suitable crs.
> 
> crs(a) <- "+init=EPSG:3034 +proj=lcc +lat_1=35 +lat_2=65 +lat_0=50 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs?
> 
> Because although the map assigns crs = ?+init = EPSG:3034?, the map doesn?t seem georreferenced, because the starting point of the map is (0,0). My final objective is  to transform the crs to "+proj=longlat +datum=WGS84?
> 
> A <- projectRaster(a, crs = "+proj=longlat +datum=WGS84")
> <PastedGraphic-1.tiff>
> I will be grateful some kind of help. Do I need more additional information? Any step is wrong?
> Thank you so much
> Jes?s Rojo


From md@umner @end|ng |rom gm@||@com  Thu Apr 30 01:14:46 2020
From: md@umner @end|ng |rom gm@||@com (Michael Sumner)
Date: Thu, 30 Apr 2020 09:14:46 +1000
Subject: [R-sig-Geo] Help: assign crs to RasterBrick
In-Reply-To: <VI1P194MB0558E097A213BB0E1680DA94B4AE0@VI1P194MB0558.EURP194.PROD.OUTLOOK.COM>
References: <VI1P194MB0558E097A213BB0E1680DA94B4AE0@VI1P194MB0558.EURP194.PROD.OUTLOOK.COM>
Message-ID: <CAAcGz99ZUpE4VTOxh-ghhm0koLVAwG4Aa74MBAK8qfy4cjXg6g@mail.gmail.com>

You need to also setExtent() of the raster. That's the coordinates that the
crs refers to xmin,xmax,ymin,ymax values in metres. Sometimes visual cues
can be used to derive these from an image, sometimes the grid is a commonly
used convention (a certain dimension, I.e. extent +resolution in a region).
It really needs the file source itself or some info from the provider where
the data was already a map.

Not much can be done from a picture alone though.

I'll have a look around sometimes wild guesses work because projection-use
is rarely bespoke.

Best




On Mon., 27 Apr. 2020, 01:21 Jes?s Rojo, <jru85yebe at hotmail.com> wrote:

> Hello everyone
> I have a flipped RasterBrick without crs assigned (crs = NA):
> plot(a[[100]]
> I would like to fill the map and assign the correct coordinate systems,
> that it has been said to me to be specifically:
>
> "+init=EPSG:3034 +proj=lcc +lat_1=35 +lat_2=65 +lat_0=50 +lon_0=10
> +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m
> +no_defs?
>
> I try to solve with the next commands for the raster library:
>
> In a first step I have flipped the map, and it has been right with:
>
> a <- t(flip(a, direction='y' ))
>
> But I have problems with the assignments of the suitable crs.
>
> crs(a) <- "+init=EPSG:3034 +proj=lcc +lat_1=35 +lat_2=65 +lat_0=50
> +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0
> +units=m +no_defs?
>
> Because although the map assigns crs = ?+init = EPSG:3034?, the map
> doesn?t seem georreferenced, because the starting point of the map is
> (0,0). My final objective is  to transform the crs to "+proj=longlat
> +datum=WGS84?
>
> A <- projectRaster(a, crs = "+proj=longlat +datum=WGS84")
> I will be grateful some kind of help. Do I need more additional
> information? Any step is wrong?
> Thank you so much
> Jes?s Rojo
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20200430/53c42adb/attachment.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-2.tiff
Type: image/tiff
Size: 15216 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20200430/53c42adb/attachment.tiff>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.tiff
Type: image/tiff
Size: 15528 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20200430/53c42adb/attachment-0001.tiff>

From jm@rt|nez19 @end|ng |rom u@@d@edu@do  Thu Apr 30 03:33:15 2020
From: jm@rt|nez19 @end|ng |rom u@@d@edu@do (Jose Ramon Martinez Batlle)
Date: Wed, 29 Apr 2020 21:33:15 -0400
Subject: [R-sig-Geo] Inference of local Gi*
In-Reply-To: <alpine.LFD.2.21.2004270954160.4084293@reclus.nhh.no>
References: <a905fe5f78a5ec9f5ffa26a27c421543e864fa32.camel@epfl.ch>
 <CAAUfc+2bhpVj-6dDzxZDTo5hSTs_PXXVt6aJj+eR8sjaY-4TYw@mail.gmail.com>
 <alpine.LFD.2.21.2004270954160.4084293@reclus.nhh.no>
Message-ID: <CAAUfc+0NMjVrDtCRRFg35K7PTMr-RRxcCtDRLHDhSEG7sKOM2A@mail.gmail.com>

Thanks Roger for your feedback and clarification.

Best regards.


El lun., 27 abr. 2020 a las 5:04, Roger Bivand (<Roger.Bivand at nhh.no>)
escribi?:

> On Sat, 25 Apr 2020, Jose Ramon Martinez Batlle wrote:
>
> > Dear Ana?s.
> >
> > I am sure more experienced members will give you a better answer, but
> until
> > that I will try to help.
> >
> > 1) If I understood correctly, the spatial objects have 15 000 and 30 000
> > points in each case study, respectively. If this is the case, I am afraid
> > that nb objects of such large datasets surely would have an impact on the
> > system performance when used in subsequent tasks. The best I can suggest
> is
> > to try some sort of spatial binning if possible (e.g. hexbins), but at
> the
> > same time accounting for the modifiable areal unit problem.
> >
> > 2) The spdep:localG help page states that "For inference, a
> Bonferroni-type
> > test is suggested in the references, where tables of critical values may
> be
> > found". The source mentioned is free access, and can be found here:
> >
> > Ord, J. K. and Getis, A. 1995 Local spatial autocorrelation statistics:
> > distributional issues and an application. Geographical Analysis, 27,
> 286?306
> >
> https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1538-4632.1995.tb00912.x
> >
> > Standard measures (critical values) for selected percentiles and number
> of
> > entities, are included in Table 3 of the cited reference. Since the
> values
> > returned from localG are Z-values, you can use them to determine whether
> > the critical value chosen is exceeded and thus infer significant local
> > spatial association for each entity.
>
> Thanks, Jos?, you are quite correct that false discovery rate problems are
> among the main reasons why so-called "hot-spot" analyses may be very
> misleading, in appearing to give an inferential basis for apparent map
> pattern.
>
> In our survey paper with David Wong referenced on ?localG,
> https://doi.org/10.1007/s11749-018-0599-x, we show that the analytical
> and
> bootstrap-based inferences are similar - the normality is related not to
> the underlying variable seen globally, but the the local behaviour of the
> statistic. For this reason, bootstrap permutation implementations are not
> included in spdep, though the code is available if need be. Please
> indicate whether users would like this code included for comparative
> purposes here or in a github issue on
> https://github.com/r-spatial/spdep/issues/.
>
> Further, the LOSH statistic, which is a measure of local spatial
> heteroscedasticity building on local G, provides a little insight into the
> problems raised for so-called "hot-spot" analyses by variability across
> the study area in the behaviour of the variable of interest. If, for
> example, the variable of interest is influenced by a background variable
> with a spatial pattern, we will probably find "hot-spots" which look like
> the omitted background variable on a map.
>
> While local G cannot take residuals of a linear model, local Moran's I can
> do so. For local G, we do not have exact case-by-case standard deviates;
> we do have these for local Moran's I as discussed in the article with
> David Wong, and they very typically reduce strongly the counts of
> apparently significant local statistcs even before adjusting p-values for
> FDR. Finally, only some local measures can adjust for global
> autocorrelation - unadjusted local measures also respond to the presence
> of global autocorrelation.
>
> On balance, judicious choice of class intervals in mapping a variable of
> interest may prove more helpful than trying to present wobbly inferences
> from ESDA.
>
> Hope this isn't too discouraging,
>
> Roger
>
>
> >
> > Kind regards.
> > Jos?
> >
> > El vie., 24 abr. 2020 a las 14:00, Ana?s Ladoy (<anais.ladoy at epfl.ch>)
> > escribi?:
> >
> >> Dear list members,
> >>
> >> I'm currently working on a point dataset, from which I want to conduct
> >> a Hot Spot Analysis with local Gi* statistics (Getis-Ord).
> >>
> >> I'm trying to find a way of computing its significance. I see two ways
> >> of computing significance in this case:
> >>
> >> 1) Compare the obtained local Gi from spdep::localG to a normal
> >> distribution. But here I have several questions :
> >> a) In my first case study (BMI value of 15 000 participants in a cohort
> >> study), the distribution of local Gi is far from normal (it is bimodal
> >> with a mode around very negative values and a mode around 0). However,
> >> I do need a normal distribution of Gi in order to compare it with a
> >> normal distribution, right? Or am I missing something here? What should
> >> I do in this case?
> >> b) In my second case study (Years of life lost for 30 000 individuals),
> >> the distribution of Gi returned by spdep::localG is approximately
> >> normal but the standard deviation is far from 1. In fact, in
> >> spdep::localG, the Gi values are supposedly standardized (from what I
> >> understood using an analytical mean and variance). Should I use these
> >> to compare to a normal distribution, or should I use raw G values
> >> (using return_internals=TRUE) and standardize them with the observed
> >> mean and variance of Gi? Does it cause a problem that my observed
> >> variance does not match the analytical variance?
> >>
> >> 2) Compute permutations
> >> However this is not implemented in R for localG. I tried using PySAL
> >> but the initial file is big and the weight file is huge, and my
> >> computer crashes. Any thoughts to solve this issue?
> >>
> >> Thank you for any feedback.
> >> Kind regards,
> >> Ana?s
> >>
> >> --
> >> Ana?s Ladoy
> >> PhD student, Laboratory of Geographic Information Systems, Swiss
> >> Federal Institute of Technology in Lausanne (EPFL), Switzerland.
> >>
> >> _______________________________________________
> >> R-sig-Geo mailing list
> >> R-sig-Geo at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>
> >
> >
> >
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en



-- 
*Jos? Ram?n Mart?nez Batlle*
*Investigador/Profesor Universidad Aut?noma de Santo Domingo (UASD)*
Correo electr?nico: jmartinez19 at uasd.edu.do
P?gina web: http://geografiafisica.org

	[[alternative HTML version deleted]]


From t|m@@ppe|h@n@ @end|ng |rom gm@||@com  Thu Apr 30 19:54:08 2020
From: t|m@@ppe|h@n@ @end|ng |rom gm@||@com (Tim Salabim)
Date: Thu, 30 Apr 2020 19:54:08 +0200
Subject: [R-sig-Geo] 
 Fwd: [Spatial-Ecology] Gecomputation web-seminars (GDAL, PKTOOLS, GRASS,
 HPC)
In-Reply-To: <CAKoiDH+0xe30Qr2YMC=5RzsUZOgH9FOwkVKrRBz0t3XaPFtq9g@mail.gmail.com>
References: <CAKoiDH+0xe30Qr2YMC=5RzsUZOgH9FOwkVKrRBz0t3XaPFtq9g@mail.gmail.com>
Message-ID: <CAMbH+HiZFaDv_r2JPAMTEawTH53M1gao-M7MyMeysK2-e5aUbA@mail.gmail.com>

See below for a set of online courses that might be interesting for some of
this lists subscribers.

Best
Tim

---------- Forwarded message ---------
From: Giuseppe Amatulli <giuseppe.amatulli at gmail.com>
Date: Thu, Apr 30, 2020, 17:49
Subject: [Spatial-Ecology] Gecomputation web-seminars (GDAL, PKTOOLS,
GRASS, HPC)
To: <spatial-ecology at lists.osgeo.org>


Dear Colleagues,

During the second week of May (Eastern Daylight Time), I will be teaching 4
web-seminars for enhancing *gecomputation skills to process large
geographic data*.
Each of these seminars will be held in both *English* and *Spanish*.
Participants will be given access to a cloud-based Linux virtual machine
that can be reached via an SSH tunnel.
Online free registration is provided below or in this hyperlink
<https://view.s10.exacttarget.com/?qs=19041bfa7521d2e931fc72d14ad1a14844ed5d698621a8cc5d6c34b29adec9b14f4d6bc8db15f1b08df380850cc0002c6e8b75eed41f67a60b8eabb984d4e341772e26106ea8d753f2939d3fbde912f6>
.
Please distribute the details of these seminars among your colleagues and
students.

Sincerely
Giuseppe Amatulli, Ph.D.

Research scientist at
School of Forestry & Environmental Studies
Center for Research Computing
Yale University
Teaching: http://spatial-ecology.net
Work:  https://environment.yale.edu/profile/giuseppe-amatulli/
To view this email as a web page, go here.
<https://view.S10.exacttarget.com/?qs=19041bfa7521d2e931fc72d14ad1a14844ed5d698621a8cc5d6c34b29adec9b14f4d6bc8db15f1b08df380850cc0002c6e8b75eed41f67a60b8eabb984d4e341772e26106ea8d753f2939d3fbde912f6>
[image: Yale Center for Research Computing]

Raster/Vector Processing using GDAL/OGR
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a5648ebf788c5a48f0b32b9687162c7cc16377a075daf4795bd4e5655083687663d31cb0bd576d6f5e7ffe32c39b6038c0b5615a3db185efdcd>
may 11, 2020
9:00 - 11:30 AM EDT (IN ENGLISH, via zoom)
1:00 - 3:30 PM EDT (En Espa?ol, via zoom)

The workshop covers geo-data processing tasks: cropping and re-projecting,
mosaicing, and filtering images, and how to script processes for complex
geo-functions.
REGISTER
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a5661ad07e9a8bc054b761b52265cf3d9e2eed5404ee84b0fdd3d0cbff2f896ca6ae9bd8cbaf81cbe733405accee86530b5140cb11a1c49cfe8>
[image: Globe with GDAL logo]
Image Processing using Pktools
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a563645cf07ff61648d66e5cff64d0d6fcbb36789065b1a672af3a7ed476118fa3ce91f73f682bb1d99943ee5cdb66dd897f85621faa5abc92a>
may 12, 2020
9:00 - 11:30 AM EDT (IN ENGLISH, Via Zoom)
1:00 - 3:30 PM EDT (En espa?ol, Via Zoom)
This workshop will focus on Processing Kernel for geospatial data (Pktools)
to perform remote sensing image analysis. The workshop will include
examples of mosaicing, filtering, histogram, masking, and raster
re-classification.
REGISTER
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a56f0079c6f30e5d37805e245e6c7596fe075f336e37b313d82da808246fa8168bb7e52e8c213249fa4b4f1aef0fe08dacef658cd3f4d402f8a>
[image: Globe with Pktools logo]
Introduction to GRASS GIS
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a56a12ee181e58dd9a60186607cc65af10fe32b61ccb07db501f4b95d210ef27b22cea6da00c624720d2e13cc4b75ea4ace0ad40f57ea1a0c65>
may 13, 2020
9:00 - 11:30 AM EDT (IN ENGLISH, Zoom)
1:00 - 3:30 PM EDT (En espa?ol, Via Zoom)
This workshop introduces students to the powerful GRASS GIS software to
manipulate raster and vector data, and covers using the graphical user
interface and simple Bash scripts to automate many common geo-data
processing tasks such as cropping and re-projecting images, and how to
script processes for complex geo-functions.
REGISTER
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a56860922368c969e67b08909d6ebd19464e5611220722973629abc57276f8c68d1e0d8b3cf38e9d8d83eb9e97091198dd94768eeb8b4441e15>
[image: Globe with GRASS logo]
GeoComputation with High Performance Computing
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a567652106f032c4bc2c42e5dbc587878576a027f7eefd9d45b13b4fa91430c9bb976b612956b8723f2fdbff99b716782971254aa3f0590883e>
may 14, 2020
9:00 - 11:30 AM EDT (IN ENGLISH, Zoom)
1:00 - 3:30 PM EDT (En espa?ol, Via Zoom)
This workshop introduces students to perform Geocomputation analysis in
High Performance Computing (HPC) that use the Slurm queuing system. Using
simple Bash scripts, we will show four main ways to tile an image, perform
a filter operation and reassemble back the image.
REGISTER
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a5648b1a8e5b0ad31206355cb842fa0bf4c1f5a459c2cadb70e019f27184cd37d0606dae6dcbb4fcc4b9db7a872d89700758be63db7b55df9cd>
[image: Globe with Bash logo]

[image: Yale University]
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a56d7821406633c8f9a035bac975b7646346f3210b8b1f8238eddf959b5a6d9cdbd70dd2b452160ab846bb3f14dc5e32c5f>
Yale Center for Research Computing: research.computing at yale.edu.
Copyright ? 2020 Yale University ? All rights reserved
[image: Twitter]
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a56895ad533ef9de2d9fadd83007501cac7385ce0859509fb4c91ed32f11d1d60820eedbf37cbe01d3dc37555f2f1010374>
Twitter
<http://cl.S10.exct.net/?qs=a85f232b8a2b9a56895ad533ef9de2d9fadd83007501cac7385ce0859509fb4c91ed32f11d1d60820eedbf37cbe01d3dc37555f2f1010374>

-- 
Giuseppe Amatulli, Ph.D.

Research scientist at
School of Forestry & Environmental Studies
Center for Research Computing
Yale University
New Haven, CT, USA
06511
Teaching: http://spatial-ecology.net
Work:  https://environment.yale.edu/profile/giuseppe-amatulli/
_______________________________________________
Spatial-Ecology mailing list
Spatial-Ecology at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/spatial-ecology

	[[alternative HTML version deleted]]


