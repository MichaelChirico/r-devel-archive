From thi_veloso at yahoo.com.br  Tue Dec  1 09:14:04 2015
From: thi_veloso at yahoo.com.br (Thiago V. dos Santos)
Date: Tue, 1 Dec 2015 08:14:04 +0000 (UTC)
Subject: [R-sig-Geo] How to calculate decadal average and percent change in
 raster stacks?
References: <1327213493.1564714.1448957644103.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <1327213493.1564714.1448957644103.JavaMail.yahoo@mail.yahoo.com>

Dear all,

I am working with yearly climate projections of rainfall that cover the period from 2010 to 2099:

library(raster)

# Create the date sequence
idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")

# Create raster stack and apply the date
r <- raster(ncol=360, nrow=180)
s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
s <- setZ(s, idx)
s

Given this raster stack, how can I calculate the average values per decade and percent change for each decade?

I define decades here as 2010-2019, 2020-2029, 2030-2039 and so on until 2090-2099.

I guess the real issue here is how to "split" a raster stack in decades. Any ideas?  
Thanks,
 -- Thiago V. dos Santos

PhD student
Land and Atmospheric Science
University of Minnesota


From vijaylulla at gmail.com  Tue Dec  1 10:22:12 2015
From: vijaylulla at gmail.com (Vijay Lulla)
Date: Tue, 1 Dec 2015 04:22:12 -0500
Subject: [R-sig-Geo] How to calculate decadal average and percent change
 in raster stacks?
In-Reply-To: <1327213493.1564714.1448957644103.JavaMail.yahoo@mail.yahoo.com>
References: <1327213493.1564714.1448957644103.JavaMail.yahoo.ref@mail.yahoo.com>
	<1327213493.1564714.1448957644103.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <CAKkiGbtDGgzO7jjUrQXWN-Nm_g9piiUwT4si+gjf2vAmJKDcYw@mail.gmail.com>

Maybe something like below?

R> avg_rainfall <- do.call(stack,lapply(1:9,function(x)
overlay(stack(s,bands=10*x+(0:9)),fun=mean)))
R> ss <- subset(avg_rainfall,1:9) #?raster::subset
R> st <- subset(avg_rainfall, 2:10)
R> pct_change <- 100 * (st-ss)/ss

HTH,
Vijay.

On Tue, Dec 1, 2015 at 3:14 AM, Thiago V. dos Santos
<thi_veloso at yahoo.com.br> wrote:
> Dear all,
>
> I am working with yearly climate projections of rainfall that cover the period from 2010 to 2099:
>
> library(raster)
>
> # Create the date sequence
> idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")
>
> # Create raster stack and apply the date
> r <- raster(ncol=360, nrow=180)
> s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
> s <- setZ(s, idx)
> s
>
> Given this raster stack, how can I calculate the average values per decade and percent change for each decade?
>
> I define decades here as 2010-2019, 2020-2029, 2030-2039 and so on until 2090-2099.
>
> I guess the real issue here is how to "split" a raster stack in decades. Any ideas?
> Thanks,
>  -- Thiago V. dos Santos
>
> PhD student
> Land and Atmospheric Science
> University of Minnesota
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From frtog at vestas.com  Tue Dec  1 10:23:24 2015
From: frtog at vestas.com (=?iso-8859-1?Q?Frede_Aakmann_T=F8gersen?=)
Date: Tue, 1 Dec 2015 09:23:24 +0000
Subject: [R-sig-Geo] How to calculate decadal average and percent change
 in raster stacks?
In-Reply-To: <1327213493.1564714.1448957644103.JavaMail.yahoo@mail.yahoo.com>
References: <1327213493.1564714.1448957644103.JavaMail.yahoo.ref@mail.yahoo.com>
	<1327213493.1564714.1448957644103.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <HE1PR04MB127616B6870DFE9F83DF3BA5DB0F0@HE1PR04MB1276.eurprd04.prod.outlook.com>

Hi Thiago

There is no split method for RasterStacks but there is a subset method.

Is this useful?


library(raster)

# Create the date sequence
idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")

# Create raster stack and apply the date
r <- raster(ncol=360, nrow=180)
s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
s <- setZ(s, idx)
s

decStart <- seq(2010, 2090, by = 10)

decades <- list()
for (strt in decStart)
    decades <- c(decades, list(seq(strt, (strt + 9), by = 1)))

ndx <- format(s at z$time, format = "%Y") %in% decades[[1]]

tmp <- subset(s, which(ndx))

tmp at z$time

Yours sincerely / Med venlig hilsen

Frede Aakmann T?gersen
Specialist, M.Sc., Ph.D.
Plant Performance & Modeling

Technology & Service Solutions
T +45 9730 5135
M +45 2547 6050
frtog at vestas.com
http://www.vestas.com

Company reg. name: Vestas Wind Systems A/S
This e-mail is subject to our e-mail disclaimer statement.
Please refer to www.vestas.com/legal/notice
If you have received this e-mail in error please contact the sender. 



-----Original Message-----
From: R-sig-Geo [mailto:r-sig-geo-bounces at r-project.org] On Behalf Of Thiago V. dos Santos
Sent: 1. december 2015 09:14
To: R-sig-geo Mailing List
Subject: [R-sig-Geo] How to calculate decadal average and percent change in raster stacks?

Dear all,

I am working with yearly climate projections of rainfall that cover the period from 2010 to 2099:

library(raster)

# Create the date sequence
idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")

# Create raster stack and apply the date
r <- raster(ncol=360, nrow=180)
s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
s <- setZ(s, idx)
s

Given this raster stack, how can I calculate the average values per decade and percent change for each decade?

I define decades here as 2010-2019, 2020-2029, 2030-2039 and so on until 2090-2099.

I guess the real issue here is how to "split" a raster stack in decades. Any ideas?  
Thanks,
 -- Thiago V. dos Santos

PhD student
Land and Atmospheric Science
University of Minnesota

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From loic.dutrieux at wur.nl  Tue Dec  1 11:38:45 2015
From: loic.dutrieux at wur.nl (=?UTF-8?Q?Lo=c3=afc_Dutrieux?=)
Date: Tue, 1 Dec 2015 11:38:45 +0100
Subject: [R-sig-Geo] How to calculate decadal average and percent change
 in raster stacks?
In-Reply-To: <1327213493.1564714.1448957644103.JavaMail.yahoo@mail.yahoo.com>
References: <1327213493.1564714.1448957644103.JavaMail.yahoo.ref@mail.yahoo.com>
	<1327213493.1564714.1448957644103.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <565D78B5.8070204@wur.nl>

Hi Thiago,

This should work for aggregating to decades.

library(raster)
library(lubridate)

# Create the date sequence
idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")

# Create raster stack and apply the date
r <- raster(ncol=360, nrow=180)
s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
s <- setZ(s, idx)

# Aggregate to decades
zApply(s, by = function(x) year(x) %/% 10 * 10, fun = mean)


By calculate percent change for each decade, do you mean between decades 
or within?

Cheers,
Lo?c



On 12/01/2015 09:14 AM, Thiago V. dos Santos wrote:
> Dear all,
>
> I am working with yearly climate projections of rainfall that cover the period from 2010 to 2099:
>
> library(raster)
>
> # Create the date sequence
> idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")
>
> # Create raster stack and apply the date
> r <- raster(ncol=360, nrow=180)
> s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
> s <- setZ(s, idx)
> s
>
> Given this raster stack, how can I calculate the average values per decade and percent change for each decade?
>
> I define decades here as 2010-2019, 2020-2029, 2030-2039 and so on until 2090-2099.
>
> I guess the real issue here is how to "split" a raster stack in decades. Any ideas?
> Thanks,
>   -- Thiago V. dos Santos
>
> PhD student
> Land and Atmospheric Science
> University of Minnesota
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


From milan.cisty at stuba.sk  Tue Dec  1 16:23:52 2015
From: milan.cisty at stuba.sk (Milan Cisty)
Date: Tue, 1 Dec 2015 16:23:52 +0100
Subject: [R-sig-Geo] save SpatialPolygonsDataFrame as dxf file
Message-ID: <003f01d12c4c$494d89d0$dbe89d70$@stuba.sk>

Hello,
I would like to save SpatialPolygonsDataFrame as dxf file. Sorry if I am
doing trivial mistake, but please what is wrong on this:

p = Polygon(coords = matrix(c(1,2,2,1,1,1,2,2), ncol = 2))    #this is
square 1x1
p1= Polygons(list(p), ID=1)
p2=SpatialPolygons(list(p1))
p3=SpatialPolygonsDataFrame(p2, data = as.data.frame("1"))
writeOGR(p3, dsn = "square.dxf", layer = "entities", driver="DXF")

and last command gave me following message:
Error in writeOGR(p3, dsn = "square.dxf", layer = "entities", driver =
"DXF") : 
  Creating Name field failed
(some dxf file was produced, but it has nothing drawn in it)
Thanks,
Milan


From Roger.Bivand at nhh.no  Tue Dec  1 18:41:33 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 1 Dec 2015 18:41:33 +0100
Subject: [R-sig-Geo] save SpatialPolygonsDataFrame as dxf file
In-Reply-To: <003f01d12c4c$494d89d0$dbe89d70$@stuba.sk>
References: <003f01d12c4c$494d89d0$dbe89d70$@stuba.sk>
Message-ID: <alpine.LFD.2.20.1512011834280.14771@reclus.nhh.no>

On Tue, 1 Dec 2015, Milan Cisty wrote:

> Hello,
> I would like to save SpatialPolygonsDataFrame as dxf file. Sorry if I am
> doing trivial mistake, but please what is wrong on this:
>
> p = Polygon(coords = matrix(c(1,2,2,1,1,1,2,2), ncol = 2))    #this is
> square 1x1
> p1= Polygons(list(p), ID=1)
> p2=SpatialPolygons(list(p1))
> p3=SpatialPolygonsDataFrame(p2, data = as.data.frame("1"))
> writeOGR(p3, dsn = "square.dxf", layer = "entities", driver="DXF")
>
> and last command gave me following message:
> Error in writeOGR(p3, dsn = "square.dxf", layer = "entities", driver =
> "DXF") :
>  Creating Name field failed
> (some dxf file was produced, but it has nothing drawn in it)

No idea, nor can I find any example of how to use the file creation 
driver. This isn't a driver in active use anywhere really. I think that 
the issue is that DXF doesn't want attributes associated with geometries - 
to judge from copying p3 to GRASS and writing with v.out.dxf. writeOGR 
needs attributes.

Roger

> Thanks,
> Milan
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From b.rowlingson at lancaster.ac.uk  Tue Dec  1 19:54:39 2015
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Tue, 1 Dec 2015 18:54:39 +0000
Subject: [R-sig-Geo] save SpatialPolygonsDataFrame as dxf file
In-Reply-To: <alpine.LFD.2.20.1512011834280.14771@reclus.nhh.no>
References: <003f01d12c4c$494d89d0$dbe89d70$@stuba.sk>
	<alpine.LFD.2.20.1512011834280.14771@reclus.nhh.no>
Message-ID: <CANVKczP8G-GmvUm7+E3QZa-Vxjoa-tCPTbCKzweQ_=cbghLLhg@mail.gmail.com>

ogr2ogr on the command line does a better job. Having saved the square
as a shapefile I can do this:

$ ogr2ogr -f "DXF" output.dxf foo.shp
ERROR 1: DXF layer does not support arbitrary field creation, field
'Foo' not created.

- an error, but a file is created with features in it... ogrinfo tells me:

$ ogrinfo -al output.dxf
INFO: Open of `output.dxf'
      using driver `DXF' successful.

Layer name: entities
Geometry: Unknown (any)
Feature Count: 1
Extent: (1.000000, 1.000000) - (2.000000, 2.000000)
Layer SRS WKT:
(unknown)
Layer: String (0.0)
SubClasses: String (0.0)
ExtendedEntity: String (0.0)
Linetype: String (0.0)
EntityHandle: String (0.0)
Text: String (0.0)
OGRFeature(entities):0
  Layer (String) = 0
  SubClasses (String) = AcDbEntity:AcDbHatch
  ExtendedEntity (String) = (null)
  Linetype (String) = (null)
  EntityHandle (String) = 20000
  Text (String) = SOLID
  Style = BRUSH(fc:#000000)
  POLYGON ((1 1,1 2,2 2,2 1,1 1))

It even reads back into R successfully:

 > dx = readOGR("output.dxf","entities")
OGR data source with driver: DXF
Source: "output.dxf", layer: "entities"
with 1 features
It has 6 fields


there may be some magic incantation to writeOGR to do this, but until
a wizard appears you might be able to get by by saving as shapefile
(or other) and converting on the command line.

Barry


On Tue, Dec 1, 2015 at 5:41 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> On Tue, 1 Dec 2015, Milan Cisty wrote:
>
>> Hello,
>> I would like to save SpatialPolygonsDataFrame as dxf file. Sorry if I am
>> doing trivial mistake, but please what is wrong on this:
>>
>> p = Polygon(coords = matrix(c(1,2,2,1,1,1,2,2), ncol = 2))    #this is
>> square 1x1
>> p1= Polygons(list(p), ID=1)
>> p2=SpatialPolygons(list(p1))
>> p3=SpatialPolygonsDataFrame(p2, data = as.data.frame("1"))
>> writeOGR(p3, dsn = "square.dxf", layer = "entities", driver="DXF")
>>
>> and last command gave me following message:
>> Error in writeOGR(p3, dsn = "square.dxf", layer = "entities", driver =
>> "DXF") :
>>  Creating Name field failed
>> (some dxf file was produced, but it has nothing drawn in it)
>
>
> No idea, nor can I find any example of how to use the file creation driver.
> This isn't a driver in active use anywhere really. I think that the issue is
> that DXF doesn't want attributes associated with geometries - to judge from
> copying p3 to GRASS and writing with v.out.dxf. writeOGR needs attributes.
>
> Roger
>
>> Thanks,
>> Milan
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; fax +47 55 95 91 00
> e-mail: Roger.Bivand at nhh.no
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From Roger.Bivand at nhh.no  Tue Dec  1 20:21:33 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 1 Dec 2015 20:21:33 +0100
Subject: [R-sig-Geo] save SpatialPolygonsDataFrame as dxf file
In-Reply-To: <CANVKczP8G-GmvUm7+E3QZa-Vxjoa-tCPTbCKzweQ_=cbghLLhg@mail.gmail.com>
References: <003f01d12c4c$494d89d0$dbe89d70$@stuba.sk>
	<alpine.LFD.2.20.1512011834280.14771@reclus.nhh.no>
	<CANVKczP8G-GmvUm7+E3QZa-Vxjoa-tCPTbCKzweQ_=cbghLLhg@mail.gmail.com>
Message-ID: <alpine.LFD.2.20.1512012005260.18827@reclus.nhh.no>

On Tue, 1 Dec 2015, Barry Rowlingson wrote:

> ogr2ogr on the command line does a better job. Having saved the square
> as a shapefile I can do this:
>
> $ ogr2ogr -f "DXF" output.dxf foo.shp
> ERROR 1: DXF layer does not support arbitrary field creation, field
> 'Foo' not created.

Right, thanks! Maybe gdalUtils::ogr2ogr? I got this far, but didn't check 
to see whether a file was there. So I guess writeOGR is receiving an error 
internally from the compiled code and gives up, while ogr2ogr creates the 
file and reports an error later on.

> writeOGR(p3, dsn = "square.sqlite", layer = "entities", driver="SQLite")
> library(gdalUtils)
> ogr2ogr("square.sqlite", "square.dxf", "entities", "DXF")
> dxf <- readOGR("square.dxf", "entities")

works, with the error, but the DXF file can be read by OGR - but by other 
software?

Roger



>
> - an error, but a file is created with features in it... ogrinfo tells me:
>
> $ ogrinfo -al output.dxf
> INFO: Open of `output.dxf'
>      using driver `DXF' successful.
>
> Layer name: entities
> Geometry: Unknown (any)
> Feature Count: 1
> Extent: (1.000000, 1.000000) - (2.000000, 2.000000)
> Layer SRS WKT:
> (unknown)
> Layer: String (0.0)
> SubClasses: String (0.0)
> ExtendedEntity: String (0.0)
> Linetype: String (0.0)
> EntityHandle: String (0.0)
> Text: String (0.0)
> OGRFeature(entities):0
>  Layer (String) = 0
>  SubClasses (String) = AcDbEntity:AcDbHatch
>  ExtendedEntity (String) = (null)
>  Linetype (String) = (null)
>  EntityHandle (String) = 20000
>  Text (String) = SOLID
>  Style = BRUSH(fc:#000000)
>  POLYGON ((1 1,1 2,2 2,2 1,1 1))
>
> It even reads back into R successfully:
>
> > dx = readOGR("output.dxf","entities")
> OGR data source with driver: DXF
> Source: "output.dxf", layer: "entities"
> with 1 features
> It has 6 fields
>
>
> there may be some magic incantation to writeOGR to do this, but until
> a wizard appears you might be able to get by by saving as shapefile
> (or other) and converting on the command line.
>
> Barry
>
>
> On Tue, Dec 1, 2015 at 5:41 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>> On Tue, 1 Dec 2015, Milan Cisty wrote:
>>
>>> Hello,
>>> I would like to save SpatialPolygonsDataFrame as dxf file. Sorry if I am
>>> doing trivial mistake, but please what is wrong on this:
>>>
>>> p = Polygon(coords = matrix(c(1,2,2,1,1,1,2,2), ncol = 2))    #this is
>>> square 1x1
>>> p1= Polygons(list(p), ID=1)
>>> p2=SpatialPolygons(list(p1))
>>> p3=SpatialPolygonsDataFrame(p2, data = as.data.frame("1"))
>>> writeOGR(p3, dsn = "square.dxf", layer = "entities", driver="DXF")
>>>
>>> and last command gave me following message:
>>> Error in writeOGR(p3, dsn = "square.dxf", layer = "entities", driver =
>>> "DXF") :
>>>  Creating Name field failed
>>> (some dxf file was produced, but it has nothing drawn in it)
>>
>>
>> No idea, nor can I find any example of how to use the file creation driver.
>> This isn't a driver in active use anywhere really. I think that the issue is
>> that DXF doesn't want attributes associated with geometries - to judge from
>> copying p3 to GRASS and writing with v.out.dxf. writeOGR needs attributes.
>>
>> Roger
>>
>>> Thanks,
>>> Milan
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; fax +47 55 95 91 00
>> e-mail: Roger.Bivand at nhh.no
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From thi_veloso at yahoo.com.br  Tue Dec  1 21:04:19 2015
From: thi_veloso at yahoo.com.br (Thiago V. dos Santos)
Date: Tue, 1 Dec 2015 20:04:19 +0000 (UTC)
Subject: [R-sig-Geo] How to calculate decadal average and percent change
 in raster stacks?
In-Reply-To: <565D78B5.8070204@wur.nl>
References: <1327213493.1564714.1448957644103.JavaMail.yahoo.ref@mail.yahoo.com>
	<1327213493.1564714.1448957644103.JavaMail.yahoo@mail.yahoo.com>
	<565D78B5.8070204@wur.nl>
Message-ID: <1861464895.10811666.1449000259028.JavaMail.yahoo@mail.yahoo.com>

Thanks you all for the responses. Each of them provided very good tips on how to address my problem.

Lo?c, answering your question: the percent change would be within the 9-year period of each decade. Thanks for your response, it was really concise.
 Greetings,
 -- Thiago V. dos Santos

PhD student
Land and Atmospheric Science
University of Minnesota



On Tuesday, December 1, 2015 4:40 AM, Lo?c Dutrieux <loic.dutrieux at wur.nl> wrote:
Hi Thiago,

This should work for aggregating to decades.

library(raster)
library(lubridate)

# Create the date sequence
idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")

# Create raster stack and apply the date
r <- raster(ncol=360, nrow=180)
s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
s <- setZ(s, idx)

# Aggregate to decades
zApply(s, by = function(x) year(x) %/% 10 * 10, fun = mean)


By calculate percent change for each decade, do you mean between decades 
or within?

Cheers,
Lo?c



On 12/01/2015 09:14 AM, Thiago V. dos Santos wrote:
> Dear all,
>
> I am working with yearly climate projections of rainfall that cover the period from 2010 to 2099:
>
> library(raster)
>
> # Create the date sequence
> idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")
>
> # Create raster stack and apply the date
> r <- raster(ncol=360, nrow=180)
> s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
> s <- setZ(s, idx)
> s
>
> Given this raster stack, how can I calculate the average values per decade and percent change for each decade?
>
> I define decades here as 2010-2019, 2020-2029, 2030-2039 and so on until 2090-2099.
>
> I guess the real issue here is how to "split" a raster stack in decades. Any ideas?
> Thanks,
>   -- Thiago V. dos Santos
>
> PhD student
> Land and Atmospheric Science
> University of Minnesota
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

>

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From thi_veloso at yahoo.com.br  Tue Dec  1 21:24:46 2015
From: thi_veloso at yahoo.com.br (Thiago V. dos Santos)
Date: Tue, 1 Dec 2015 20:24:46 +0000 (UTC)
Subject: [R-sig-Geo] How to calculate decadal average and percent change
 in raster stacks?
In-Reply-To: <1861464895.10811666.1449000259028.JavaMail.yahoo@mail.yahoo.com>
References: <1327213493.1564714.1448957644103.JavaMail.yahoo.ref@mail.yahoo.com>
	<1327213493.1564714.1448957644103.JavaMail.yahoo@mail.yahoo.com>
	<565D78B5.8070204@wur.nl>
	<1861464895.10811666.1449000259028.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <731764016.10968041.1449001486986.JavaMail.yahoo@mail.yahoo.com>

Oh, I should have said "10-year period", and not "9-year period".

This is because the first year of the decade should be accounted for, i.e. 2010 (including) to 2019.
 Greetings,
 -- Thiago V. dos Santos

PhD student
Land and Atmospheric Science
University of Minnesota



On Tuesday, December 1, 2015 2:04 PM, Thiago V. dos Santos <thi_veloso at yahoo.com.br> wrote:
Thanks you all for the responses. Each of them provided very good tips on how to address my problem.

Lo?c, answering your question: the percent change would be within the 9-year period of each decade. Thanks for your response, it was really concise.
Greetings,
-- Thiago V. dos Santos

PhD student
Land and Atmospheric Science
University of Minnesota




On Tuesday, December 1, 2015 4:40 AM, Lo?c Dutrieux <loic.dutrieux at wur.nl> wrote:
Hi Thiago,

This should work for aggregating to decades.

library(raster)
library(lubridate)

# Create the date sequence
idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")

# Create raster stack and apply the date
r <- raster(ncol=360, nrow=180)
s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
s <- setZ(s, idx)

# Aggregate to decades
zApply(s, by = function(x) year(x) %/% 10 * 10, fun = mean)


By calculate percent change for each decade, do you mean between decades 
or within?

Cheers,
Lo?c



On 12/01/2015 09:14 AM, Thiago V. dos Santos wrote:
> Dear all,
>
> I am working with yearly climate projections of rainfall that cover the period from 2010 to 2099:
>
> library(raster)
>
> # Create the date sequence
> idx <- seq(as.Date("2010/1/1"), as.Date("2099/12/31"), by = "year")
>
> # Create raster stack and apply the date
> r <- raster(ncol=360, nrow=180)
> s <- stack(lapply(1:length(idx), function(x) setValues(r, runif(ncell(r)))))
> s <- setZ(s, idx)
> s
>
> Given this raster stack, how can I calculate the average values per decade and percent change for each decade?
>
> I define decades here as 2010-2019, 2020-2029, 2030-2039 and so on until 2090-2099.
>
> I guess the real issue here is how to "split" a raster stack in decades. Any ideas?
> Thanks,
>   -- Thiago V. dos Santos
>
> PhD student
> Land and Atmospheric Science
> University of Minnesota
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

>

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From thi_veloso at yahoo.com.br  Wed Dec  2 15:23:01 2015
From: thi_veloso at yahoo.com.br (Thiago V. dos Santos)
Date: Wed, 2 Dec 2015 14:23:01 +0000 (UTC)
Subject: [R-sig-Geo] Take mean of list of raster stacks
References: <669661525.11276619.1449066181281.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>

Hi all,

I have a list with five raster stacks, each of them containing 9 layers:

> models.list
$CanESM2
class : RasterBrick 
dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
resolution : 0.5, 0.5 (x, y)
extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
min values : 137.51260, 103.75805, 85.07232, 114.59114, 88.59638, 82.38541, 98.64818, 91.78697, 74.57888 
max values : 526.1966, 490.5268, 537.6004, 536.0648, 526.3977, 509.5332, 557.7880, 503.1330, 531.5689 


$`GFDL-ESM2M`
class : RasterBrick 
dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
resolution : 0.5, 0.5 (x, y)
extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
min values : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968, 78.61677, 91.31480, 84.72990, 77.58408 
max values : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369, 543.8348, 532.9768, 524.7191, 525.7651 


$inmcm4
class : RasterBrick 
dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
resolution : 0.5, 0.5 (x, y)
extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
min values : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747, 131.2129, 205.0893, 149.3376, 164.3868 
max values : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148, 523.1451, 534.9090, 561.0131, 551.4501 


$`MRI-CGCM3`
class : RasterBrick 
dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
resolution : 0.5, 0.5 (x, y)
extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
min values : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720, 172.5434, 195.4526, 160.2298, 182.6004 
max values : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307, 671.9138, 669.0936, 665.2333, 669.0399 


$`NorESM1-M`
class : RasterBrick 
dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
resolution : 0.5, 0.5 (x, y)
extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
min values : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985, 149.3203, 156.6462, 153.4485, 116.1606 
max values : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222, 601.7283, 617.0612, 603.3071, 645.2594 

What I need to do is to come out with a single stack, also with 9 layers, that is composed by the mean of the correspondent layers of all elements in the list.

For example, the first layer of the resulting stack would be the average of the first layer of the five elements of the list.

In terms of code, it would be something like this:

1st layer of result stack <- mean (1st layer of 1st element, 1st layer of 2nd element, 1st layer of 3rd element, 1st layer of 4th element, 1st layer of 5th element)

2nd layer of result stack <- mean (2nd layer of 1st element, 2nd layer of 2nd element, 2nd layer of 3rd element, 2nd layer of 4th element, 2nd layer of 5th element)

3rd layer of result stack <- mean (3rd layer of 1st element, 3rd layer of 2nd element, 3rd layer of 3rd element, 3rd layer of 4th element, 3rd layer of 5th element)

...

8th layer of result stack <- mean (8th layer of 1st element, 8th layer of 2nd element, 8th layer of 3rd element, 8th layer of 4th element, 8th layer of 5th element)

9th layer of result stack <- mean (9th layer of 1st element, 9th layer of 2nd element, 9th layer of 3rd element, 9th layer of 4th element, 9th layer of 5th element)

Any hints on how I can accomplish that?

Greetings,
-- Thiago V. dos Santos

PhD student
Land and Atmospheric Science
University of Minnesota


From lyndon.estes at gmail.com  Wed Dec  2 15:39:45 2015
From: lyndon.estes at gmail.com (lyndon.estes at gmail.com)
Date: Wed, 02 Dec 2015 06:39:45 -0800 (PST)
Subject: [R-sig-Geo] Take mean of list of raster stacks
In-Reply-To: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>
References: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <1449067185734.cd5997fd@Nodemailer>

Hi Thiago,?




Done in haste, but I think this might do it (it?s on an 8X8 problem though):?





stlist <- lapply(1:8, function(x) {

?rl <- stack(lapply(1:8, function(y) {

? ?r <- raster(nrow = 10, ncol = 10)

? ?r[] <- sample(1:100, size = ncell(r), replace = TRUE)

? ?r

?}))

?rl

})

names(stlist) <- paste0("s", 1:8)




stack(lapply(1:8, function(x) {

? calc(stack(lapply(1:8, function(y) stlist[[y]][[x]])), mean)

}))




Hope this helps.?




Cheers, Lyndon




?
Sent from Mailbox

On Wed, Dec 2, 2015 at 9:23 AM, Thiago V. dos Santos
<thi_veloso at yahoo.com.br> wrote:

> Hi all,
> I have a list with five raster stacks, each of them containing 9 layers:
>> models.list
> $CanESM2
> class : RasterBrick 
> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
> resolution : 0.5, 0.5 (x, y)
> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
> data source : in memory
> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
> min values : 137.51260, 103.75805, 85.07232, 114.59114, 88.59638, 82.38541, 98.64818, 91.78697, 74.57888 
> max values : 526.1966, 490.5268, 537.6004, 536.0648, 526.3977, 509.5332, 557.7880, 503.1330, 531.5689 
> $`GFDL-ESM2M`
> class : RasterBrick 
> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
> resolution : 0.5, 0.5 (x, y)
> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
> data source : in memory
> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
> min values : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968, 78.61677, 91.31480, 84.72990, 77.58408 
> max values : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369, 543.8348, 532.9768, 524.7191, 525.7651 
> $inmcm4
> class : RasterBrick 
> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
> resolution : 0.5, 0.5 (x, y)
> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
> data source : in memory
> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
> min values : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747, 131.2129, 205.0893, 149.3376, 164.3868 
> max values : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148, 523.1451, 534.9090, 561.0131, 551.4501 
> $`MRI-CGCM3`
> class : RasterBrick 
> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
> resolution : 0.5, 0.5 (x, y)
> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
> data source : in memory
> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
> min values : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720, 172.5434, 195.4526, 160.2298, 182.6004 
> max values : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307, 671.9138, 669.0936, 665.2333, 669.0399 
> $`NorESM1-M`
> class : RasterBrick 
> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
> resolution : 0.5, 0.5 (x, y)
> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
> data source : in memory
> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9 
> min values : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985, 149.3203, 156.6462, 153.4485, 116.1606 
> max values : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222, 601.7283, 617.0612, 603.3071, 645.2594 
> What I need to do is to come out with a single stack, also with 9 layers, that is composed by the mean of the correspondent layers of all elements in the list.
> For example, the first layer of the resulting stack would be the average of the first layer of the five elements of the list.
> In terms of code, it would be something like this:
> 1st layer of result stack <- mean (1st layer of 1st element, 1st layer of 2nd element, 1st layer of 3rd element, 1st layer of 4th element, 1st layer of 5th element)
> 2nd layer of result stack <- mean (2nd layer of 1st element, 2nd layer of 2nd element, 2nd layer of 3rd element, 2nd layer of 4th element, 2nd layer of 5th element)
> 3rd layer of result stack <- mean (3rd layer of 1st element, 3rd layer of 2nd element, 3rd layer of 3rd element, 3rd layer of 4th element, 3rd layer of 5th element)
> ...
> 8th layer of result stack <- mean (8th layer of 1st element, 8th layer of 2nd element, 8th layer of 3rd element, 8th layer of 4th element, 8th layer of 5th element)
> 9th layer of result stack <- mean (9th layer of 1st element, 9th layer of 2nd element, 9th layer of 3rd element, 9th layer of 4th element, 9th layer of 5th element)
> Any hints on how I can accomplish that?
> Greetings,
> -- Thiago V. dos Santos
> PhD student
> Land and Atmospheric Science
> University of Minnesota
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
	[[alternative HTML version deleted]]


From milan.cisty at stuba.sk  Wed Dec  2 16:59:59 2015
From: milan.cisty at stuba.sk (Milan Cisty)
Date: Wed, 2 Dec 2015 16:59:59 +0100
Subject: [R-sig-Geo] save SpatialPolygonsDataFrame as dxf file
Message-ID: <000201d12d1a$7f5a02a0$7e0e07e0$@stuba.sk>

Thank for help. I did only one small correction, because solution from Roger
produce so called hatch objects in dxf. I used nlt = "MULTILINESTRING"
switch to prevent it. Final code is:

library(sp)
p = Polygon(coords = matrix(c(1,2,2,1,1,1,1,2,2,1), ncol = 2))
p1= Polygons(list(p), ID=1)
p2=SpatialPolygons(list(p1))
p3=SpatialPolygonsDataFrame(p2, data = as.data.frame("1"))
library(rgdal)
library(gdalUtils)
writeOGR(p3, dsn = "square1", layer = "entities", driver="GMT")  #layer MUST
be entities and final GMT is then called entities
ogr2ogr("entities.gmt", "square.dxf", "entities", "DXF", nlt =
"MULTILINESTRING")

Ends with error message but square.dxf is possible to open in AutoCAD, it is
dxf 2004 file. Only little beauty bug is that polygon is not closed. And of
course, only geometry is in final dxf file.
Thanks,
Milan

-----Original Message-----
From: Roger Bivand [mailto:Roger.Bivand at nhh.no] 
Sent: Tuesday, December 01, 2015 8:22 PM
To: Barry Rowlingson <b.rowlingson at lancaster.ac.uk>
Cc: Milan Cisty <milan.cisty at stuba.sk>; r-sig-geo <r-sig-geo at r-project.org>
Subject: Re: [R-sig-Geo] save SpatialPolygonsDataFrame as dxf file

On Tue, 1 Dec 2015, Barry Rowlingson wrote:

> ogr2ogr on the command line does a better job. Having saved the square 
> as a shapefile I can do this:
>
> $ ogr2ogr -f "DXF" output.dxf foo.shp
> ERROR 1: DXF layer does not support arbitrary field creation, field 
> 'Foo' not created.

Right, thanks! Maybe gdalUtils::ogr2ogr? I got this far, but didn't check to
see whether a file was there. So I guess writeOGR is receiving an error
internally from the compiled code and gives up, while ogr2ogr creates the
file and reports an error later on.

> writeOGR(p3, dsn = "square.sqlite", layer = "entities", 
> driver="SQLite")
> library(gdalUtils)
> ogr2ogr("square.sqlite", "square.dxf", "entities", "DXF") dxf <- 
> readOGR("square.dxf", "entities")

works, with the error, but the DXF file can be read by OGR - but by other
software?

Roger



>
> - an error, but a file is created with features in it... ogrinfo tells me:
>
> $ ogrinfo -al output.dxf
> INFO: Open of `output.dxf'
>      using driver `DXF' successful.
>
> Layer name: entities
> Geometry: Unknown (any)
> Feature Count: 1
> Extent: (1.000000, 1.000000) - (2.000000, 2.000000) Layer SRS WKT:
> (unknown)
> Layer: String (0.0)
> SubClasses: String (0.0)
> ExtendedEntity: String (0.0)
> Linetype: String (0.0)
> EntityHandle: String (0.0)
> Text: String (0.0)
> OGRFeature(entities):0
>  Layer (String) = 0
>  SubClasses (String) = AcDbEntity:AcDbHatch  ExtendedEntity (String) = 
> (null)  Linetype (String) = (null)  EntityHandle (String) = 20000  
> Text (String) = SOLID  Style = BRUSH(fc:#000000)  POLYGON ((1 1,1 2,2 
> 2,2 1,1 1))
>
> It even reads back into R successfully:
>
> > dx = readOGR("output.dxf","entities")
> OGR data source with driver: DXF
> Source: "output.dxf", layer: "entities"
> with 1 features
> It has 6 fields
>
>
> there may be some magic incantation to writeOGR to do this, but until 
> a wizard appears you might be able to get by by saving as shapefile 
> (or other) and converting on the command line.
>
> Barry
>
>
> On Tue, Dec 1, 2015 at 5:41 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>> On Tue, 1 Dec 2015, Milan Cisty wrote:
>>
>>> Hello,
>>> I would like to save SpatialPolygonsDataFrame as dxf file. Sorry if 
>>> I am doing trivial mistake, but please what is wrong on this:
>>>
>>> p = Polygon(coords = matrix(c(1,2,2,1,1,1,2,2), ncol = 2))    #this is
>>> square 1x1
>>> p1= Polygons(list(p), ID=1)
>>> p2=SpatialPolygons(list(p1))
>>> p3=SpatialPolygonsDataFrame(p2, data = as.data.frame("1")) 
>>> writeOGR(p3, dsn = "square.dxf", layer = "entities", driver="DXF")
>>>
>>> and last command gave me following message:
>>> Error in writeOGR(p3, dsn = "square.dxf", layer = "entities", driver 
>>> =
>>> "DXF") :
>>>  Creating Name field failed
>>> (some dxf file was produced, but it has nothing drawn in it)
>>
>>
>> No idea, nor can I find any example of how to use the file creation
driver.
>> This isn't a driver in active use anywhere really. I think that the 
>> issue is that DXF doesn't want attributes associated with geometries 
>> - to judge from copying p3 to GRASS and writing with v.out.dxf. writeOGR
needs attributes.
>>
>> Roger
>>
>>> Thanks,
>>> Milan
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics, Helleveien 
>> 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; fax +47 55 95 91 00
>> e-mail: Roger.Bivand at nhh.no
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

--
Roger Bivand
Department of Economics, Norwegian School of Economics, Helleveien 30,
N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From loic.dutrieux at wur.nl  Wed Dec  2 17:26:42 2015
From: loic.dutrieux at wur.nl (=?UTF-8?Q?Lo=c3=afc_Dutrieux?=)
Date: Wed, 2 Dec 2015 17:26:42 +0100
Subject: [R-sig-Geo] Take mean of list of raster stacks
In-Reply-To: <1449067185734.cd5997fd@Nodemailer>
References: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>
	<1449067185734.cd5997fd@Nodemailer>
Message-ID: <565F1BC2.3090004@wur.nl>

Hi Thiago,

Otherwise overlay wrapped in do.call seems to work.

See example below:

Cheers,
Lo?c

library(raster)

# Create multiple raterStacks
s1 <- stack(system.file("external/rlogo.grd", package="raster"))
s2 <- s1 * 2
s3 <- s1 * 3
s4 <- s1 * 4

# Create a unnamed list (not sure why it didn't work with a named list)
l <- list(s1, s2, s3, s4, fun = mean)

# do.call call
do.call(what = raster::overlay, args = l)



On 12/02/2015 03:39 PM, lyndon.estes at gmail.com wrote:
> Hi Thiago,
>
>
>
>
> Done in haste, but I think this might do it (it?s on an 8X8 problem though):
>
>
>
>
>
> stlist <- lapply(1:8, function(x) {
>
>   rl <- stack(lapply(1:8, function(y) {
>
>     r <- raster(nrow = 10, ncol = 10)
>
>     r[] <- sample(1:100, size = ncell(r), replace = TRUE)
>
>     r
>
>   }))
>
>   rl
>
> })
>
> names(stlist) <- paste0("s", 1:8)
>
>
>
>
> stack(lapply(1:8, function(x) {
>
>    calc(stack(lapply(1:8, function(y) stlist[[y]][[x]])), mean)
>
> }))
>
>
>
>
> Hope this helps.
>
>
>
>
> Cheers, Lyndon
>
>
>
>
> ?
> Sent from Mailbox
>
> On Wed, Dec 2, 2015 at 9:23 AM, Thiago V. dos Santos
> <thi_veloso at yahoo.com.br> wrote:
>
>> Hi all,
>> I have a list with five raster stacks, each of them containing 9 layers:
>>> models.list
>> $CanESM2
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 137.51260, 103.75805, 85.07232, 114.59114, 88.59638, 82.38541, 98.64818, 91.78697, 74.57888
>> max values : 526.1966, 490.5268, 537.6004, 536.0648, 526.3977, 509.5332, 557.7880, 503.1330, 531.5689
>> $`GFDL-ESM2M`
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968, 78.61677, 91.31480, 84.72990, 77.58408
>> max values : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369, 543.8348, 532.9768, 524.7191, 525.7651
>> $inmcm4
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747, 131.2129, 205.0893, 149.3376, 164.3868
>> max values : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148, 523.1451, 534.9090, 561.0131, 551.4501
>> $`MRI-CGCM3`
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720, 172.5434, 195.4526, 160.2298, 182.6004
>> max values : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307, 671.9138, 669.0936, 665.2333, 669.0399
>> $`NorESM1-M`
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985, 149.3203, 156.6462, 153.4485, 116.1606
>> max values : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222, 601.7283, 617.0612, 603.3071, 645.2594
>> What I need to do is to come out with a single stack, also with 9 layers, that is composed by the mean of the correspondent layers of all elements in the list.
>> For example, the first layer of the resulting stack would be the average of the first layer of the five elements of the list.
>> In terms of code, it would be something like this:
>> 1st layer of result stack <- mean (1st layer of 1st element, 1st layer of 2nd element, 1st layer of 3rd element, 1st layer of 4th element, 1st layer of 5th element)
>> 2nd layer of result stack <- mean (2nd layer of 1st element, 2nd layer of 2nd element, 2nd layer of 3rd element, 2nd layer of 4th element, 2nd layer of 5th element)
>> 3rd layer of result stack <- mean (3rd layer of 1st element, 3rd layer of 2nd element, 3rd layer of 3rd element, 3rd layer of 4th element, 3rd layer of 5th element)
>> ...
>> 8th layer of result stack <- mean (8th layer of 1st element, 8th layer of 2nd element, 8th layer of 3rd element, 8th layer of 4th element, 8th layer of 5th element)
>> 9th layer of result stack <- mean (9th layer of 1st element, 9th layer of 2nd element, 9th layer of 3rd element, 9th layer of 4th element, 9th layer of 5th element)
>> Any hints on how I can accomplish that?
>> Greetings,
>> -- Thiago V. dos Santos
>> PhD student
>> Land and Atmospheric Science
>> University of Minnesota
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


From vijaylulla at gmail.com  Wed Dec  2 18:17:41 2015
From: vijaylulla at gmail.com (Vijay Lulla)
Date: Wed, 2 Dec 2015 12:17:41 -0500
Subject: [R-sig-Geo] Take mean of list of raster stacks
In-Reply-To: <565F1BC2.3090004@wur.nl>
References: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>
	<1449067185734.cd5997fd@Nodemailer> <565F1BC2.3090004@wur.nl>
Message-ID: <CAKkiGbsT6GG9if3LijR_6faRqheX8Zosc92dQcdb+D3FwUrwiQ@mail.gmail.com>

Nice use of do.call Loic (Sorry, don't know how to do the accents).  I
wasn't aware that you can send in a list to args!  So, thanks for it.

Now here's my quesiton.  If I change the statement

l <- list(s1,s2,s3,s4,fun=mean)
to
l <- list(s1=s1,s2=s2,s3=s3,s4=s4,fun=mean) # similar to Thiago's models.list

I get an error with missing "overlay" function for signature
"missing","missing".  I tried to find some ways around it but have had
no luck.  This is due to R's S3/S4 object system and how function
arguments are passed, I think.  I don't understand the S4 system that
well.  Basically, how would I use a list with names in do.call with
raster::overlay?

On Wed, Dec 2, 2015 at 11:26 AM, Lo?c Dutrieux <loic.dutrieux at wur.nl> wrote:
> Hi Thiago,
>
> Otherwise overlay wrapped in do.call seems to work.
>
> See example below:
>
> Cheers,
> Lo?c
>
> library(raster)
>
> # Create multiple raterStacks
> s1 <- stack(system.file("external/rlogo.grd", package="raster"))
> s2 <- s1 * 2
> s3 <- s1 * 3
> s4 <- s1 * 4
>
> # Create a unnamed list (not sure why it didn't work with a named list)
> l <- list(s1, s2, s3, s4, fun = mean)
>
> # do.call call
> do.call(what = raster::overlay, args = l)
>
>
>
>
> On 12/02/2015 03:39 PM, lyndon.estes at gmail.com wrote:
>>
>> Hi Thiago,
>>
>>
>>
>>
>> Done in haste, but I think this might do it (it?s on an 8X8 problem
>> though):
>>
>>
>>
>>
>>
>> stlist <- lapply(1:8, function(x) {
>>
>>   rl <- stack(lapply(1:8, function(y) {
>>
>>     r <- raster(nrow = 10, ncol = 10)
>>
>>     r[] <- sample(1:100, size = ncell(r), replace = TRUE)
>>
>>     r
>>
>>   }))
>>
>>   rl
>>
>> })
>>
>> names(stlist) <- paste0("s", 1:8)
>>
>>
>>
>>
>> stack(lapply(1:8, function(x) {
>>
>>    calc(stack(lapply(1:8, function(y) stlist[[y]][[x]])), mean)
>>
>> }))
>>
>>
>>
>>
>> Hope this helps.
>>
>>
>>
>>
>> Cheers, Lyndon
>>
>>
>>
>>
>> ?
>> Sent from Mailbox
>>
>> On Wed, Dec 2, 2015 at 9:23 AM, Thiago V. dos Santos
>> <thi_veloso at yahoo.com.br> wrote:
>>
>>> Hi all,
>>> I have a list with five raster stacks, each of them containing 9 layers:
>>>>
>>>> models.list
>>>
>>> $CanESM2
>>> class : RasterBrick
>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>> resolution : 0.5, 0.5 (x, y)
>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>> data source : in memory
>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>> layer.8, layer.9
>>> min values : 137.51260, 103.75805, 85.07232, 114.59114, 88.59638,
>>> 82.38541, 98.64818, 91.78697, 74.57888
>>> max values : 526.1966, 490.5268, 537.6004, 536.0648, 526.3977, 509.5332,
>>> 557.7880, 503.1330, 531.5689
>>> $`GFDL-ESM2M`
>>> class : RasterBrick
>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>> resolution : 0.5, 0.5 (x, y)
>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>> data source : in memory
>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>> layer.8, layer.9
>>> min values : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968, 78.61677,
>>> 91.31480, 84.72990, 77.58408
>>> max values : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369, 543.8348,
>>> 532.9768, 524.7191, 525.7651
>>> $inmcm4
>>> class : RasterBrick
>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>> resolution : 0.5, 0.5 (x, y)
>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>> data source : in memory
>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>> layer.8, layer.9
>>> min values : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747, 131.2129,
>>> 205.0893, 149.3376, 164.3868
>>> max values : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148, 523.1451,
>>> 534.9090, 561.0131, 551.4501
>>> $`MRI-CGCM3`
>>> class : RasterBrick
>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>> resolution : 0.5, 0.5 (x, y)
>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>> data source : in memory
>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>> layer.8, layer.9
>>> min values : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720, 172.5434,
>>> 195.4526, 160.2298, 182.6004
>>> max values : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307, 671.9138,
>>> 669.0936, 665.2333, 669.0399
>>> $`NorESM1-M`
>>> class : RasterBrick
>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>> resolution : 0.5, 0.5 (x, y)
>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>> data source : in memory
>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>> layer.8, layer.9
>>> min values : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985, 149.3203,
>>> 156.6462, 153.4485, 116.1606
>>> max values : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222, 601.7283,
>>> 617.0612, 603.3071, 645.2594
>>> What I need to do is to come out with a single stack, also with 9 layers,
>>> that is composed by the mean of the correspondent layers of all elements in
>>> the list.
>>> For example, the first layer of the resulting stack would be the average
>>> of the first layer of the five elements of the list.
>>> In terms of code, it would be something like this:
>>> 1st layer of result stack <- mean (1st layer of 1st element, 1st layer of
>>> 2nd element, 1st layer of 3rd element, 1st layer of 4th element, 1st layer
>>> of 5th element)
>>> 2nd layer of result stack <- mean (2nd layer of 1st element, 2nd layer of
>>> 2nd element, 2nd layer of 3rd element, 2nd layer of 4th element, 2nd layer
>>> of 5th element)
>>> 3rd layer of result stack <- mean (3rd layer of 1st element, 3rd layer of
>>> 2nd element, 3rd layer of 3rd element, 3rd layer of 4th element, 3rd layer
>>> of 5th element)
>>> ...
>>> 8th layer of result stack <- mean (8th layer of 1st element, 8th layer of
>>> 2nd element, 8th layer of 3rd element, 8th layer of 4th element, 8th layer
>>> of 5th element)
>>> 9th layer of result stack <- mean (9th layer of 1st element, 9th layer of
>>> 2nd element, 9th layer of 3rd element, 9th layer of 4th element, 9th layer
>>> of 5th element)
>>> Any hints on how I can accomplish that?
>>> Greetings,
>>> -- Thiago V. dos Santos
>>> PhD student
>>> Land and Atmospheric Science
>>> University of Minnesota
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From loic.dutrieux at wur.nl  Wed Dec  2 18:28:53 2015
From: loic.dutrieux at wur.nl (=?UTF-8?Q?Lo=c3=afc_Dutrieux?=)
Date: Wed, 2 Dec 2015 18:28:53 +0100
Subject: [R-sig-Geo] Take mean of list of raster stacks
In-Reply-To: <CAKkiGbsT6GG9if3LijR_6faRqheX8Zosc92dQcdb+D3FwUrwiQ@mail.gmail.com>
References: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>
	<1449067185734.cd5997fd@Nodemailer> <565F1BC2.3090004@wur.nl>
	<CAKkiGbsT6GG9if3LijR_6faRqheX8Zosc92dQcdb+D3FwUrwiQ@mail.gmail.com>
Message-ID: <565F2A55.6040700@wur.nl>

Hi Vijay,

I was also wondering about that. The reason I think is that the first 
raster* object passed to overlay must be named x= (or unnamed)

So that
l <- list(x = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)

works but,

l <- list(s1 = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)

doesn't.

Cheers,
Lo?c

On 12/02/2015 06:17 PM, Vijay Lulla wrote:
> Nice use of do.call Loic (Sorry, don't know how to do the accents).  I
> wasn't aware that you can send in a list to args!  So, thanks for it.
>
> Now here's my quesiton.  If I change the statement
>
> l <- list(s1,s2,s3,s4,fun=mean)
> to
> l <- list(s1=s1,s2=s2,s3=s3,s4=s4,fun=mean) # similar to Thiago's models.list
>
> I get an error with missing "overlay" function for signature
> "missing","missing".  I tried to find some ways around it but have had
> no luck.  This is due to R's S3/S4 object system and how function
> arguments are passed, I think.  I don't understand the S4 system that
> well.  Basically, how would I use a list with names in do.call with
> raster::overlay?
>
> On Wed, Dec 2, 2015 at 11:26 AM, Lo?c Dutrieux <loic.dutrieux at wur.nl> wrote:
>> Hi Thiago,
>>
>> Otherwise overlay wrapped in do.call seems to work.
>>
>> See example below:
>>
>> Cheers,
>> Lo?c
>>
>> library(raster)
>>
>> # Create multiple raterStacks
>> s1 <- stack(system.file("external/rlogo.grd", package="raster"))
>> s2 <- s1 * 2
>> s3 <- s1 * 3
>> s4 <- s1 * 4
>>
>> # Create a unnamed list (not sure why it didn't work with a named list)
>> l <- list(s1, s2, s3, s4, fun = mean)
>>
>> # do.call call
>> do.call(what = raster::overlay, args = l)
>>
>>
>>
>>
>> On 12/02/2015 03:39 PM, lyndon.estes at gmail.com wrote:
>>>
>>> Hi Thiago,
>>>
>>>
>>>
>>>
>>> Done in haste, but I think this might do it (it?s on an 8X8 problem
>>> though):
>>>
>>>
>>>
>>>
>>>
>>> stlist <- lapply(1:8, function(x) {
>>>
>>>    rl <- stack(lapply(1:8, function(y) {
>>>
>>>      r <- raster(nrow = 10, ncol = 10)
>>>
>>>      r[] <- sample(1:100, size = ncell(r), replace = TRUE)
>>>
>>>      r
>>>
>>>    }))
>>>
>>>    rl
>>>
>>> })
>>>
>>> names(stlist) <- paste0("s", 1:8)
>>>
>>>
>>>
>>>
>>> stack(lapply(1:8, function(x) {
>>>
>>>     calc(stack(lapply(1:8, function(y) stlist[[y]][[x]])), mean)
>>>
>>> }))
>>>
>>>
>>>
>>>
>>> Hope this helps.
>>>
>>>
>>>
>>>
>>> Cheers, Lyndon
>>>
>>>
>>>
>>>
>>> ?
>>> Sent from Mailbox
>>>
>>> On Wed, Dec 2, 2015 at 9:23 AM, Thiago V. dos Santos
>>> <thi_veloso at yahoo.com.br> wrote:
>>>
>>>> Hi all,
>>>> I have a list with five raster stacks, each of them containing 9 layers:
>>>>>
>>>>> models.list
>>>>
>>>> $CanESM2
>>>> class : RasterBrick
>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>> resolution : 0.5, 0.5 (x, y)
>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>> data source : in memory
>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>> layer.8, layer.9
>>>> min values : 137.51260, 103.75805, 85.07232, 114.59114, 88.59638,
>>>> 82.38541, 98.64818, 91.78697, 74.57888
>>>> max values : 526.1966, 490.5268, 537.6004, 536.0648, 526.3977, 509.5332,
>>>> 557.7880, 503.1330, 531.5689
>>>> $`GFDL-ESM2M`
>>>> class : RasterBrick
>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>> resolution : 0.5, 0.5 (x, y)
>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>> data source : in memory
>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>> layer.8, layer.9
>>>> min values : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968, 78.61677,
>>>> 91.31480, 84.72990, 77.58408
>>>> max values : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369, 543.8348,
>>>> 532.9768, 524.7191, 525.7651
>>>> $inmcm4
>>>> class : RasterBrick
>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>> resolution : 0.5, 0.5 (x, y)
>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>> data source : in memory
>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>> layer.8, layer.9
>>>> min values : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747, 131.2129,
>>>> 205.0893, 149.3376, 164.3868
>>>> max values : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148, 523.1451,
>>>> 534.9090, 561.0131, 551.4501
>>>> $`MRI-CGCM3`
>>>> class : RasterBrick
>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>> resolution : 0.5, 0.5 (x, y)
>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>> data source : in memory
>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>> layer.8, layer.9
>>>> min values : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720, 172.5434,
>>>> 195.4526, 160.2298, 182.6004
>>>> max values : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307, 671.9138,
>>>> 669.0936, 665.2333, 669.0399
>>>> $`NorESM1-M`
>>>> class : RasterBrick
>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>> resolution : 0.5, 0.5 (x, y)
>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>> data source : in memory
>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>> layer.8, layer.9
>>>> min values : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985, 149.3203,
>>>> 156.6462, 153.4485, 116.1606
>>>> max values : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222, 601.7283,
>>>> 617.0612, 603.3071, 645.2594
>>>> What I need to do is to come out with a single stack, also with 9 layers,
>>>> that is composed by the mean of the correspondent layers of all elements in
>>>> the list.
>>>> For example, the first layer of the resulting stack would be the average
>>>> of the first layer of the five elements of the list.
>>>> In terms of code, it would be something like this:
>>>> 1st layer of result stack <- mean (1st layer of 1st element, 1st layer of
>>>> 2nd element, 1st layer of 3rd element, 1st layer of 4th element, 1st layer
>>>> of 5th element)
>>>> 2nd layer of result stack <- mean (2nd layer of 1st element, 2nd layer of
>>>> 2nd element, 2nd layer of 3rd element, 2nd layer of 4th element, 2nd layer
>>>> of 5th element)
>>>> 3rd layer of result stack <- mean (3rd layer of 1st element, 3rd layer of
>>>> 2nd element, 3rd layer of 3rd element, 3rd layer of 4th element, 3rd layer
>>>> of 5th element)
>>>> ...
>>>> 8th layer of result stack <- mean (8th layer of 1st element, 8th layer of
>>>> 2nd element, 8th layer of 3rd element, 8th layer of 4th element, 8th layer
>>>> of 5th element)
>>>> 9th layer of result stack <- mean (9th layer of 1st element, 9th layer of
>>>> 2nd element, 9th layer of 3rd element, 9th layer of 4th element, 9th layer
>>>> of 5th element)
>>>> Any hints on how I can accomplish that?
>>>> Greetings,
>>>> -- Thiago V. dos Santos
>>>> PhD student
>>>> Land and Atmospheric Science
>>>> University of Minnesota
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>>          [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From edzer.pebesma at uni-muenster.de  Wed Dec  2 18:50:20 2015
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Wed, 2 Dec 2015 18:50:20 +0100
Subject: [R-sig-Geo] Take mean of list of raster stacks
In-Reply-To: <565F2A55.6040700@wur.nl>
References: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>
	<1449067185734.cd5997fd@Nodemailer> <565F1BC2.3090004@wur.nl>
	<CAKkiGbsT6GG9if3LijR_6faRqheX8Zosc92dQcdb+D3FwUrwiQ@mail.gmail.com>
	<565F2A55.6040700@wur.nl>
Message-ID: <565F2F5C.3020208@uni-muenster.de>



On 02/12/15 18:28, Lo?c Dutrieux wrote:
> Hi Vijay,
> 
> I was also wondering about that. The reason I think is that the first
> raster* object passed to overlay must be named x= (or unnamed)
> 
> So that
> l <- list(x = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)
> 
> works but,
> 
> l <- list(s1 = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)
> 
> doesn't.

That is right: the signature of raster::overlay is

     overlay(x, y, ..., fun, filename="", recycle=TRUE)

and the do.call call with the named list resolves in a call to overlay
of the form

      overlay(s1 = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)

which has missing x and y. Not naming the arguments passes s1 to x, s2
to y and the others to ... allowing overlay to choose the right method.

> 
> Cheers,
> Lo?c
> 
> On 12/02/2015 06:17 PM, Vijay Lulla wrote:
>> Nice use of do.call Loic (Sorry, don't know how to do the accents).  I
>> wasn't aware that you can send in a list to args!  So, thanks for it.
>>
>> Now here's my quesiton.  If I change the statement
>>
>> l <- list(s1,s2,s3,s4,fun=mean)
>> to
>> l <- list(s1=s1,s2=s2,s3=s3,s4=s4,fun=mean) # similar to Thiago's
>> models.list
>>
>> I get an error with missing "overlay" function for signature
>> "missing","missing".  I tried to find some ways around it but have had
>> no luck.  This is due to R's S3/S4 object system and how function
>> arguments are passed, I think.  I don't understand the S4 system that
>> well.  Basically, how would I use a list with names in do.call with
>> raster::overlay?
>>
>> On Wed, Dec 2, 2015 at 11:26 AM, Lo?c Dutrieux <loic.dutrieux at wur.nl>
>> wrote:
>>> Hi Thiago,
>>>
>>> Otherwise overlay wrapped in do.call seems to work.
>>>
>>> See example below:
>>>
>>> Cheers,
>>> Lo?c
>>>
>>> library(raster)
>>>
>>> # Create multiple raterStacks
>>> s1 <- stack(system.file("external/rlogo.grd", package="raster"))
>>> s2 <- s1 * 2
>>> s3 <- s1 * 3
>>> s4 <- s1 * 4
>>>
>>> # Create a unnamed list (not sure why it didn't work with a named list)
>>> l <- list(s1, s2, s3, s4, fun = mean)
>>>
>>> # do.call call
>>> do.call(what = raster::overlay, args = l)
>>>
>>>
>>>
>>>
>>> On 12/02/2015 03:39 PM, lyndon.estes at gmail.com wrote:
>>>>
>>>> Hi Thiago,
>>>>
>>>>
>>>>
>>>>
>>>> Done in haste, but I think this might do it (it?s on an 8X8 problem
>>>> though):
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> stlist <- lapply(1:8, function(x) {
>>>>
>>>>    rl <- stack(lapply(1:8, function(y) {
>>>>
>>>>      r <- raster(nrow = 10, ncol = 10)
>>>>
>>>>      r[] <- sample(1:100, size = ncell(r), replace = TRUE)
>>>>
>>>>      r
>>>>
>>>>    }))
>>>>
>>>>    rl
>>>>
>>>> })
>>>>
>>>> names(stlist) <- paste0("s", 1:8)
>>>>
>>>>
>>>>
>>>>
>>>> stack(lapply(1:8, function(x) {
>>>>
>>>>     calc(stack(lapply(1:8, function(y) stlist[[y]][[x]])), mean)
>>>>
>>>> }))
>>>>
>>>>
>>>>
>>>>
>>>> Hope this helps.
>>>>
>>>>
>>>>
>>>>
>>>> Cheers, Lyndon
>>>>
>>>>
>>>>
>>>>
>>>> ?
>>>> Sent from Mailbox
>>>>
>>>> On Wed, Dec 2, 2015 at 9:23 AM, Thiago V. dos Santos
>>>> <thi_veloso at yahoo.com.br> wrote:
>>>>
>>>>> Hi all,
>>>>> I have a list with five raster stacks, each of them containing 9
>>>>> layers:
>>>>>>
>>>>>> models.list
>>>>>
>>>>> $CanESM2
>>>>> class : RasterBrick
>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>> resolution : 0.5, 0.5 (x, y)
>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>> data source : in memory
>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>> layer.8, layer.9
>>>>> min values : 137.51260, 103.75805, 85.07232, 114.59114, 88.59638,
>>>>> 82.38541, 98.64818, 91.78697, 74.57888
>>>>> max values : 526.1966, 490.5268, 537.6004, 536.0648, 526.3977,
>>>>> 509.5332,
>>>>> 557.7880, 503.1330, 531.5689
>>>>> $`GFDL-ESM2M`
>>>>> class : RasterBrick
>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>> resolution : 0.5, 0.5 (x, y)
>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>> data source : in memory
>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>> layer.8, layer.9
>>>>> min values : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968,
>>>>> 78.61677,
>>>>> 91.31480, 84.72990, 77.58408
>>>>> max values : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369,
>>>>> 543.8348,
>>>>> 532.9768, 524.7191, 525.7651
>>>>> $inmcm4
>>>>> class : RasterBrick
>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>> resolution : 0.5, 0.5 (x, y)
>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>> data source : in memory
>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>> layer.8, layer.9
>>>>> min values : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747,
>>>>> 131.2129,
>>>>> 205.0893, 149.3376, 164.3868
>>>>> max values : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148,
>>>>> 523.1451,
>>>>> 534.9090, 561.0131, 551.4501
>>>>> $`MRI-CGCM3`
>>>>> class : RasterBrick
>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>> resolution : 0.5, 0.5 (x, y)
>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>> data source : in memory
>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>> layer.8, layer.9
>>>>> min values : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720,
>>>>> 172.5434,
>>>>> 195.4526, 160.2298, 182.6004
>>>>> max values : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307,
>>>>> 671.9138,
>>>>> 669.0936, 665.2333, 669.0399
>>>>> $`NorESM1-M`
>>>>> class : RasterBrick
>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>> resolution : 0.5, 0.5 (x, y)
>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>> data source : in memory
>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>> layer.8, layer.9
>>>>> min values : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985,
>>>>> 149.3203,
>>>>> 156.6462, 153.4485, 116.1606
>>>>> max values : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222,
>>>>> 601.7283,
>>>>> 617.0612, 603.3071, 645.2594
>>>>> What I need to do is to come out with a single stack, also with 9
>>>>> layers,
>>>>> that is composed by the mean of the correspondent layers of all
>>>>> elements in
>>>>> the list.
>>>>> For example, the first layer of the resulting stack would be the
>>>>> average
>>>>> of the first layer of the five elements of the list.
>>>>> In terms of code, it would be something like this:
>>>>> 1st layer of result stack <- mean (1st layer of 1st element, 1st
>>>>> layer of
>>>>> 2nd element, 1st layer of 3rd element, 1st layer of 4th element,
>>>>> 1st layer
>>>>> of 5th element)
>>>>> 2nd layer of result stack <- mean (2nd layer of 1st element, 2nd
>>>>> layer of
>>>>> 2nd element, 2nd layer of 3rd element, 2nd layer of 4th element,
>>>>> 2nd layer
>>>>> of 5th element)
>>>>> 3rd layer of result stack <- mean (3rd layer of 1st element, 3rd
>>>>> layer of
>>>>> 2nd element, 3rd layer of 3rd element, 3rd layer of 4th element,
>>>>> 3rd layer
>>>>> of 5th element)
>>>>> ...
>>>>> 8th layer of result stack <- mean (8th layer of 1st element, 8th
>>>>> layer of
>>>>> 2nd element, 8th layer of 3rd element, 8th layer of 4th element,
>>>>> 8th layer
>>>>> of 5th element)
>>>>> 9th layer of result stack <- mean (9th layer of 1st element, 9th
>>>>> layer of
>>>>> 2nd element, 9th layer of 3rd element, 9th layer of 4th element,
>>>>> 9th layer
>>>>> of 5th element)
>>>>> Any hints on how I can accomplish that?
>>>>> Greetings,
>>>>> -- Thiago V. dos Santos
>>>>> PhD student
>>>>> Land and Atmospheric Science
>>>>> University of Minnesota
>>>>> _______________________________________________
>>>>> R-sig-Geo mailing list
>>>>> R-sig-Geo at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>
>>>>          [[alternative HTML version deleted]]
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi),  University of M?nster,
Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/
Spatial Statistics Society http://www.spatialstatistics.info

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151202/347ec22d/attachment.bin>

From vijaylulla at gmail.com  Wed Dec  2 19:48:56 2015
From: vijaylulla at gmail.com (Vijay Lulla)
Date: Wed, 2 Dec 2015 13:48:56 -0500
Subject: [R-sig-Geo] Take mean of list of raster stacks
In-Reply-To: <565F2F5C.3020208@uni-muenster.de>
References: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>
	<1449067185734.cd5997fd@Nodemailer> <565F1BC2.3090004@wur.nl>
	<CAKkiGbsT6GG9if3LijR_6faRqheX8Zosc92dQcdb+D3FwUrwiQ@mail.gmail.com>
	<565F2A55.6040700@wur.nl> <565F2F5C.3020208@uni-muenster.de>
Message-ID: <CAKkiGbsU6QY8Jc2Nm_irBdPheR9ntwPFm+WEa2_v9At6utJURw@mail.gmail.com>

Thanks Edzer.  Makes sense!  Is there an easier way to inspect what
specific function will be resolved to with a particular call other
than "getMethod"?  For e.g., considering our discussion, how would I
have used getMethod (or some other method) to learn how
raster::overlay is being called (i.e. actual arguments and what the
final call would look like)?  Julia has a great macro @which which
does the resolution and shows you what specific method will be called.
Check out @which 1 + 2 vs @which 1 + 2 + 3 vs @which 1 + 2 + 3 + 4 vs
@which 1 + (2 + (3 + 4)) on a julia interpreter.  We need something
like this for R, especially for spatial objects.

Regardless, thanks for your explanation.  It's very helpful.
Cordially,
Vijay.

On Wed, Dec 2, 2015 at 12:50 PM, Edzer Pebesma
<edzer.pebesma at uni-muenster.de> wrote:
>
>
> On 02/12/15 18:28, Lo?c Dutrieux wrote:
>> Hi Vijay,
>>
>> I was also wondering about that. The reason I think is that the first
>> raster* object passed to overlay must be named x= (or unnamed)
>>
>> So that
>> l <- list(x = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)
>>
>> works but,
>>
>> l <- list(s1 = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)
>>
>> doesn't.
>
> That is right: the signature of raster::overlay is
>
>      overlay(x, y, ..., fun, filename="", recycle=TRUE)
>
> and the do.call call with the named list resolves in a call to overlay
> of the form
>
>       overlay(s1 = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)
>
> which has missing x and y. Not naming the arguments passes s1 to x, s2
> to y and the others to ... allowing overlay to choose the right method.
>
>>
>> Cheers,
>> Lo?c
>>
>> On 12/02/2015 06:17 PM, Vijay Lulla wrote:
>>> Nice use of do.call Loic (Sorry, don't know how to do the accents).  I
>>> wasn't aware that you can send in a list to args!  So, thanks for it.
>>>
>>> Now here's my quesiton.  If I change the statement
>>>
>>> l <- list(s1,s2,s3,s4,fun=mean)
>>> to
>>> l <- list(s1=s1,s2=s2,s3=s3,s4=s4,fun=mean) # similar to Thiago's
>>> models.list
>>>
>>> I get an error with missing "overlay" function for signature
>>> "missing","missing".  I tried to find some ways around it but have had
>>> no luck.  This is due to R's S3/S4 object system and how function
>>> arguments are passed, I think.  I don't understand the S4 system that
>>> well.  Basically, how would I use a list with names in do.call with
>>> raster::overlay?
>>>
>>> On Wed, Dec 2, 2015 at 11:26 AM, Lo?c Dutrieux <loic.dutrieux at wur.nl>
>>> wrote:
>>>> Hi Thiago,
>>>>
>>>> Otherwise overlay wrapped in do.call seems to work.
>>>>
>>>> See example below:
>>>>
>>>> Cheers,
>>>> Lo?c
>>>>
>>>> library(raster)
>>>>
>>>> # Create multiple raterStacks
>>>> s1 <- stack(system.file("external/rlogo.grd", package="raster"))
>>>> s2 <- s1 * 2
>>>> s3 <- s1 * 3
>>>> s4 <- s1 * 4
>>>>
>>>> # Create a unnamed list (not sure why it didn't work with a named list)
>>>> l <- list(s1, s2, s3, s4, fun = mean)
>>>>
>>>> # do.call call
>>>> do.call(what = raster::overlay, args = l)
>>>>
>>>>
>>>>
>>>>
>>>> On 12/02/2015 03:39 PM, lyndon.estes at gmail.com wrote:
>>>>>
>>>>> Hi Thiago,
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> Done in haste, but I think this might do it (it?s on an 8X8 problem
>>>>> though):
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> stlist <- lapply(1:8, function(x) {
>>>>>
>>>>>    rl <- stack(lapply(1:8, function(y) {
>>>>>
>>>>>      r <- raster(nrow = 10, ncol = 10)
>>>>>
>>>>>      r[] <- sample(1:100, size = ncell(r), replace = TRUE)
>>>>>
>>>>>      r
>>>>>
>>>>>    }))
>>>>>
>>>>>    rl
>>>>>
>>>>> })
>>>>>
>>>>> names(stlist) <- paste0("s", 1:8)
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> stack(lapply(1:8, function(x) {
>>>>>
>>>>>     calc(stack(lapply(1:8, function(y) stlist[[y]][[x]])), mean)
>>>>>
>>>>> }))
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> Hope this helps.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> Cheers, Lyndon
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> ?
>>>>> Sent from Mailbox
>>>>>
>>>>> On Wed, Dec 2, 2015 at 9:23 AM, Thiago V. dos Santos
>>>>> <thi_veloso at yahoo.com.br> wrote:
>>>>>
>>>>>> Hi all,
>>>>>> I have a list with five raster stacks, each of them containing 9
>>>>>> layers:
>>>>>>>
>>>>>>> models.list
>>>>>>
>>>>>> $CanESM2
>>>>>> class : RasterBrick
>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>> data source : in memory
>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>> layer.8, layer.9
>>>>>> min values : 137.51260, 103.75805, 85.07232, 114.59114, 88.59638,
>>>>>> 82.38541, 98.64818, 91.78697, 74.57888
>>>>>> max values : 526.1966, 490.5268, 537.6004, 536.0648, 526.3977,
>>>>>> 509.5332,
>>>>>> 557.7880, 503.1330, 531.5689
>>>>>> $`GFDL-ESM2M`
>>>>>> class : RasterBrick
>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>> data source : in memory
>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>> layer.8, layer.9
>>>>>> min values : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968,
>>>>>> 78.61677,
>>>>>> 91.31480, 84.72990, 77.58408
>>>>>> max values : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369,
>>>>>> 543.8348,
>>>>>> 532.9768, 524.7191, 525.7651
>>>>>> $inmcm4
>>>>>> class : RasterBrick
>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>> data source : in memory
>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>> layer.8, layer.9
>>>>>> min values : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747,
>>>>>> 131.2129,
>>>>>> 205.0893, 149.3376, 164.3868
>>>>>> max values : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148,
>>>>>> 523.1451,
>>>>>> 534.9090, 561.0131, 551.4501
>>>>>> $`MRI-CGCM3`
>>>>>> class : RasterBrick
>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>> data source : in memory
>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>> layer.8, layer.9
>>>>>> min values : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720,
>>>>>> 172.5434,
>>>>>> 195.4526, 160.2298, 182.6004
>>>>>> max values : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307,
>>>>>> 671.9138,
>>>>>> 669.0936, 665.2333, 669.0399
>>>>>> $`NorESM1-M`
>>>>>> class : RasterBrick
>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>> data source : in memory
>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>> layer.8, layer.9
>>>>>> min values : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985,
>>>>>> 149.3203,
>>>>>> 156.6462, 153.4485, 116.1606
>>>>>> max values : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222,
>>>>>> 601.7283,
>>>>>> 617.0612, 603.3071, 645.2594
>>>>>> What I need to do is to come out with a single stack, also with 9
>>>>>> layers,
>>>>>> that is composed by the mean of the correspondent layers of all
>>>>>> elements in
>>>>>> the list.
>>>>>> For example, the first layer of the resulting stack would be the
>>>>>> average
>>>>>> of the first layer of the five elements of the list.
>>>>>> In terms of code, it would be something like this:
>>>>>> 1st layer of result stack <- mean (1st layer of 1st element, 1st
>>>>>> layer of
>>>>>> 2nd element, 1st layer of 3rd element, 1st layer of 4th element,
>>>>>> 1st layer
>>>>>> of 5th element)
>>>>>> 2nd layer of result stack <- mean (2nd layer of 1st element, 2nd
>>>>>> layer of
>>>>>> 2nd element, 2nd layer of 3rd element, 2nd layer of 4th element,
>>>>>> 2nd layer
>>>>>> of 5th element)
>>>>>> 3rd layer of result stack <- mean (3rd layer of 1st element, 3rd
>>>>>> layer of
>>>>>> 2nd element, 3rd layer of 3rd element, 3rd layer of 4th element,
>>>>>> 3rd layer
>>>>>> of 5th element)
>>>>>> ...
>>>>>> 8th layer of result stack <- mean (8th layer of 1st element, 8th
>>>>>> layer of
>>>>>> 2nd element, 8th layer of 3rd element, 8th layer of 4th element,
>>>>>> 8th layer
>>>>>> of 5th element)
>>>>>> 9th layer of result stack <- mean (9th layer of 1st element, 9th
>>>>>> layer of
>>>>>> 2nd element, 9th layer of 3rd element, 9th layer of 4th element,
>>>>>> 9th layer
>>>>>> of 5th element)
>>>>>> Any hints on how I can accomplish that?
>>>>>> Greetings,
>>>>>> -- Thiago V. dos Santos
>>>>>> PhD student
>>>>>> Land and Atmospheric Science
>>>>>> University of Minnesota
>>>>>> _______________________________________________
>>>>>> R-sig-Geo mailing list
>>>>>> R-sig-Geo at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>
>>>>>          [[alternative HTML version deleted]]
>>>>>
>>>>> _______________________________________________
>>>>> R-sig-Geo mailing list
>>>>> R-sig-Geo at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
> --
> Edzer Pebesma
> Institute for Geoinformatics (ifgi),  University of M?nster,
> Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
> Journal of Statistical Software:   http://www.jstatsoft.org/
> Computers & Geosciences:   http://elsevier.com/locate/cageo/
> Spatial Statistics Society http://www.spatialstatistics.info
>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From edzer.pebesma at uni-muenster.de  Wed Dec  2 20:06:30 2015
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Wed, 2 Dec 2015 20:06:30 +0100
Subject: [R-sig-Geo] Take mean of list of raster stacks
In-Reply-To: <CAKkiGbsU6QY8Jc2Nm_irBdPheR9ntwPFm+WEa2_v9At6utJURw@mail.gmail.com>
References: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>
	<1449067185734.cd5997fd@Nodemailer> <565F1BC2.3090004@wur.nl>
	<CAKkiGbsT6GG9if3LijR_6faRqheX8Zosc92dQcdb+D3FwUrwiQ@mail.gmail.com>
	<565F2A55.6040700@wur.nl> <565F2F5C.3020208@uni-muenster.de>
	<CAKkiGbsU6QY8Jc2Nm_irBdPheR9ntwPFm+WEa2_v9At6utJURw@mail.gmail.com>
Message-ID: <565F4136.6080406@uni-muenster.de>

This is a little off-topic for this list, but I usually do something like:

> library(raster)
Loading required package: sp
> overlay # what is overlay? Ah, it is an S4 method:
standardGeneric for "overlay" defined from package "raster"

function (x, y, ...)
standardGeneric("overlay")
<bytecode: 0x41c5a48>
<environment: 0x41d9d48>
Methods may be defined for arguments: x, y
Use  showMethods("overlay")  for currently available ones.
> showMethods("overlay") # which methods are available?
Function: overlay (package raster)
x="Raster", y="missing"
x="Raster", y="Raster"

> getMethod("overlay", c("Raster", "missing")) # a function called
Method Definition:

function (x, y, ...)
... # rest omitted

Not nearly as nice as julia, thanks for the pointer to @which!

On 02/12/15 19:48, Vijay Lulla wrote:
> Thanks Edzer.  Makes sense!  Is there an easier way to inspect what
> specific function will be resolved to with a particular call other
> than "getMethod"?  For e.g., considering our discussion, how would I
> have used getMethod (or some other method) to learn how
> raster::overlay is being called (i.e. actual arguments and what the
> final call would look like)?  Julia has a great macro @which which
> does the resolution and shows you what specific method will be called.
> Check out @which 1 + 2 vs @which 1 + 2 + 3 vs @which 1 + 2 + 3 + 4 vs
> @which 1 + (2 + (3 + 4)) on a julia interpreter.  We need something
> like this for R, especially for spatial objects.
> 
> Regardless, thanks for your explanation.  It's very helpful.
> Cordially,
> Vijay.
> 
> On Wed, Dec 2, 2015 at 12:50 PM, Edzer Pebesma
> <edzer.pebesma at uni-muenster.de> wrote:
>>
>>
>> On 02/12/15 18:28, Lo?c Dutrieux wrote:
>>> Hi Vijay,
>>>
>>> I was also wondering about that. The reason I think is that the first
>>> raster* object passed to overlay must be named x= (or unnamed)
>>>
>>> So that
>>> l <- list(x = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)
>>>
>>> works but,
>>>
>>> l <- list(s1 = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)
>>>
>>> doesn't.
>>
>> That is right: the signature of raster::overlay is
>>
>>      overlay(x, y, ..., fun, filename="", recycle=TRUE)
>>
>> and the do.call call with the named list resolves in a call to overlay
>> of the form
>>
>>       overlay(s1 = s1, s2 = s2, s3 = s3, s4 = s4, fun = mean)
>>
>> which has missing x and y. Not naming the arguments passes s1 to x, s2
>> to y and the others to ... allowing overlay to choose the right method.
>>
>>>
>>> Cheers,
>>> Lo?c
>>>
>>> On 12/02/2015 06:17 PM, Vijay Lulla wrote:
>>>> Nice use of do.call Loic (Sorry, don't know how to do the accents).  I
>>>> wasn't aware that you can send in a list to args!  So, thanks for it.
>>>>
>>>> Now here's my quesiton.  If I change the statement
>>>>
>>>> l <- list(s1,s2,s3,s4,fun=mean)
>>>> to
>>>> l <- list(s1=s1,s2=s2,s3=s3,s4=s4,fun=mean) # similar to Thiago's
>>>> models.list
>>>>
>>>> I get an error with missing "overlay" function for signature
>>>> "missing","missing".  I tried to find some ways around it but have had
>>>> no luck.  This is due to R's S3/S4 object system and how function
>>>> arguments are passed, I think.  I don't understand the S4 system that
>>>> well.  Basically, how would I use a list with names in do.call with
>>>> raster::overlay?
>>>>
>>>> On Wed, Dec 2, 2015 at 11:26 AM, Lo?c Dutrieux <loic.dutrieux at wur.nl>
>>>> wrote:
>>>>> Hi Thiago,
>>>>>
>>>>> Otherwise overlay wrapped in do.call seems to work.
>>>>>
>>>>> See example below:
>>>>>
>>>>> Cheers,
>>>>> Lo?c
>>>>>
>>>>> library(raster)
>>>>>
>>>>> # Create multiple raterStacks
>>>>> s1 <- stack(system.file("external/rlogo.grd", package="raster"))
>>>>> s2 <- s1 * 2
>>>>> s3 <- s1 * 3
>>>>> s4 <- s1 * 4
>>>>>
>>>>> # Create a unnamed list (not sure why it didn't work with a named list)
>>>>> l <- list(s1, s2, s3, s4, fun = mean)
>>>>>
>>>>> # do.call call
>>>>> do.call(what = raster::overlay, args = l)
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On 12/02/2015 03:39 PM, lyndon.estes at gmail.com wrote:
>>>>>>
>>>>>> Hi Thiago,
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> Done in haste, but I think this might do it (it?s on an 8X8 problem
>>>>>> though):
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> stlist <- lapply(1:8, function(x) {
>>>>>>
>>>>>>    rl <- stack(lapply(1:8, function(y) {
>>>>>>
>>>>>>      r <- raster(nrow = 10, ncol = 10)
>>>>>>
>>>>>>      r[] <- sample(1:100, size = ncell(r), replace = TRUE)
>>>>>>
>>>>>>      r
>>>>>>
>>>>>>    }))
>>>>>>
>>>>>>    rl
>>>>>>
>>>>>> })
>>>>>>
>>>>>> names(stlist) <- paste0("s", 1:8)
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> stack(lapply(1:8, function(x) {
>>>>>>
>>>>>>     calc(stack(lapply(1:8, function(y) stlist[[y]][[x]])), mean)
>>>>>>
>>>>>> }))
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> Hope this helps.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> Cheers, Lyndon
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> ?
>>>>>> Sent from Mailbox
>>>>>>
>>>>>> On Wed, Dec 2, 2015 at 9:23 AM, Thiago V. dos Santos
>>>>>> <thi_veloso at yahoo.com.br> wrote:
>>>>>>
>>>>>>> Hi all,
>>>>>>> I have a list with five raster stacks, each of them containing 9
>>>>>>> layers:
>>>>>>>>
>>>>>>>> models.list
>>>>>>>
>>>>>>> $CanESM2
>>>>>>> class : RasterBrick
>>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>>> data source : in memory
>>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>>> layer.8, layer.9
>>>>>>> min values : 137.51260, 103.75805, 85.07232, 114.59114, 88.59638,
>>>>>>> 82.38541, 98.64818, 91.78697, 74.57888
>>>>>>> max values : 526.1966, 490.5268, 537.6004, 536.0648, 526.3977,
>>>>>>> 509.5332,
>>>>>>> 557.7880, 503.1330, 531.5689
>>>>>>> $`GFDL-ESM2M`
>>>>>>> class : RasterBrick
>>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>>> data source : in memory
>>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>>> layer.8, layer.9
>>>>>>> min values : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968,
>>>>>>> 78.61677,
>>>>>>> 91.31480, 84.72990, 77.58408
>>>>>>> max values : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369,
>>>>>>> 543.8348,
>>>>>>> 532.9768, 524.7191, 525.7651
>>>>>>> $inmcm4
>>>>>>> class : RasterBrick
>>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>>> data source : in memory
>>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>>> layer.8, layer.9
>>>>>>> min values : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747,
>>>>>>> 131.2129,
>>>>>>> 205.0893, 149.3376, 164.3868
>>>>>>> max values : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148,
>>>>>>> 523.1451,
>>>>>>> 534.9090, 561.0131, 551.4501
>>>>>>> $`MRI-CGCM3`
>>>>>>> class : RasterBrick
>>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>>> data source : in memory
>>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>>> layer.8, layer.9
>>>>>>> min values : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720,
>>>>>>> 172.5434,
>>>>>>> 195.4526, 160.2298, 182.6004
>>>>>>> max values : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307,
>>>>>>> 671.9138,
>>>>>>> 669.0936, 665.2333, 669.0399
>>>>>>> $`NorESM1-M`
>>>>>>> class : RasterBrick
>>>>>>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>>>>>>> resolution : 0.5, 0.5 (x, y)
>>>>>>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>>>>>>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>>>>>>> data source : in memory
>>>>>>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7,
>>>>>>> layer.8, layer.9
>>>>>>> min values : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985,
>>>>>>> 149.3203,
>>>>>>> 156.6462, 153.4485, 116.1606
>>>>>>> max values : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222,
>>>>>>> 601.7283,
>>>>>>> 617.0612, 603.3071, 645.2594
>>>>>>> What I need to do is to come out with a single stack, also with 9
>>>>>>> layers,
>>>>>>> that is composed by the mean of the correspondent layers of all
>>>>>>> elements in
>>>>>>> the list.
>>>>>>> For example, the first layer of the resulting stack would be the
>>>>>>> average
>>>>>>> of the first layer of the five elements of the list.
>>>>>>> In terms of code, it would be something like this:
>>>>>>> 1st layer of result stack <- mean (1st layer of 1st element, 1st
>>>>>>> layer of
>>>>>>> 2nd element, 1st layer of 3rd element, 1st layer of 4th element,
>>>>>>> 1st layer
>>>>>>> of 5th element)
>>>>>>> 2nd layer of result stack <- mean (2nd layer of 1st element, 2nd
>>>>>>> layer of
>>>>>>> 2nd element, 2nd layer of 3rd element, 2nd layer of 4th element,
>>>>>>> 2nd layer
>>>>>>> of 5th element)
>>>>>>> 3rd layer of result stack <- mean (3rd layer of 1st element, 3rd
>>>>>>> layer of
>>>>>>> 2nd element, 3rd layer of 3rd element, 3rd layer of 4th element,
>>>>>>> 3rd layer
>>>>>>> of 5th element)
>>>>>>> ...
>>>>>>> 8th layer of result stack <- mean (8th layer of 1st element, 8th
>>>>>>> layer of
>>>>>>> 2nd element, 8th layer of 3rd element, 8th layer of 4th element,
>>>>>>> 8th layer
>>>>>>> of 5th element)
>>>>>>> 9th layer of result stack <- mean (9th layer of 1st element, 9th
>>>>>>> layer of
>>>>>>> 2nd element, 9th layer of 3rd element, 9th layer of 4th element,
>>>>>>> 9th layer
>>>>>>> of 5th element)
>>>>>>> Any hints on how I can accomplish that?
>>>>>>> Greetings,
>>>>>>> -- Thiago V. dos Santos
>>>>>>> PhD student
>>>>>>> Land and Atmospheric Science
>>>>>>> University of Minnesota
>>>>>>> _______________________________________________
>>>>>>> R-sig-Geo mailing list
>>>>>>> R-sig-Geo at r-project.org
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>>
>>>>>>          [[alternative HTML version deleted]]
>>>>>>
>>>>>> _______________________________________________
>>>>>> R-sig-Geo mailing list
>>>>>> R-sig-Geo at r-project.org
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> R-sig-Geo mailing list
>>>>> R-sig-Geo at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>> --
>> Edzer Pebesma
>> Institute for Geoinformatics (ifgi),  University of M?nster,
>> Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
>> Journal of Statistical Software:   http://www.jstatsoft.org/
>> Computers & Geosciences:   http://elsevier.com/locate/cageo/
>> Spatial Statistics Society http://www.spatialstatistics.info
>>
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi),  University of M?nster,
Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/
Spatial Statistics Society http://www.spatialstatistics.info

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151202/e5463db8/attachment.bin>

From w1malik at gmail.com  Thu Dec  3 08:14:19 2015
From: w1malik at gmail.com (Waseem Ali)
Date: Thu, 3 Dec 2015 12:14:19 +0500
Subject: [R-sig-Geo] How to download MODIS data using MODISTools library
Message-ID: <SNT151-W702F4C528D0AA6B99BA9F2EB0D0@phx.gbl>

I want to download MODIS product MOD13Q1 to use the Scientific Data Sets (SDS) layers of "250m_16_days_EVI", "250m_16_days_pixel_reliability". MODISTools library in R software provides the capability to download the MODIS data from LP DAAC data center.I have read the MODISTools pdf guide which provides the basic understanding of how to use the library to subset the MOD13Q1 data layers by using the points location. The following subset function which I want to use:library(`MODISTools`)MODISSubsets(LoadDat = modis.subset, Products = "MOD13Q1",Bands = c("250m_16_days_EVI", "250m_16_days_pixel_reliability"),Size = c(1,1))Here LoadDat = modis.subset is the data frame of latitude and longitude points in decimal format and according to Size = c(1,1) parameter that is used to extract the 1 Km left and 1 Km right from the focal point as extent. But I want to used the extent of whole study area likelat <- c(23.6947, 37.0894)long <- c(60.8786,  79.3074)period <- data.frame(lat=lat,long=long, start.date=2013,end.date=2014,id=1)MODISSubsets(LoadDat = period, Products = "MOD13Q1", Bands = "250m_16_days_EVI", "250m_16_days_pixel_reliability", Size = c(0,0), TimeSeriesLength = 1)But here I am confused about using Size parameter that is used to extract the point values. How can I use it to extract all the available data in this extent? And second one is can I use this point information in ASCII file to display a raster in R software? I don't want to download the full tile which contains 250MB and in my case this will be 250GB data if I download all the available data starting from 2000 to 2015.
Waseem Ali 
 		 	   		  
	[[alternative HTML version deleted]]


From kridox at ymail.com  Thu Dec  3 09:04:45 2015
From: kridox at ymail.com (Pascal Oettli)
Date: Thu, 3 Dec 2015 17:04:45 +0900
Subject: [R-sig-Geo] How to download MODIS data using MODISTools library
In-Reply-To: <SNT151-W702F4C528D0AA6B99BA9F2EB0D0@phx.gbl>
References: <SNT151-W702F4C528D0AA6B99BA9F2EB0D0@phx.gbl>
Message-ID: <CAAcyNCzb3P=qkX=0=Kh1nxQogaY4cO+af21LD2wfgc8Mwb_s4A@mail.gmail.com>

You already asked this question here:
http://gis.stackexchange.com/questions/172378/how-to-download-the-modis-data-from-r-using-modistools-library.

Please avoid to cross-post.

Regards,
Pascal

On Thu, Dec 3, 2015 at 4:14 PM, Waseem Ali <w1malik at gmail.com> wrote:
> I want to download MODIS product MOD13Q1 to use the Scientific Data Sets (SDS) layers of "250m_16_days_EVI", "250m_16_days_pixel_reliability". MODISTools library in R software provides the capability to download the MODIS data from LP DAAC data center.I have read the MODISTools pdf guide which provides the basic understanding of how to use the library to subset the MOD13Q1 data layers by using the points location. The following subset function which I want to use:library(`MODISTools`)MODISSubsets(LoadDat = modis.subset, Products = "MOD13Q1",Bands = c("250m_16_days_EVI", "250m_16_days_pixel_reliability"),Size = c(1,1))Here LoadDat = modis.subset is the data frame of latitude and longitude points in decimal format and according to Size = c(1,1) parameter that is used to extract the 1 Km left and 1 Km right from the focal point as extent. But I want to used the extent of whole study area likelat <- c(23.6947, 37.0894)long <- c(60.8786,  79.3074)period <- data.frame(lat=lat,long!
>  =long, start.date=2013,end.date=2014,id=1)MODISSubsets(LoadDat = period, Products = "MOD13Q1", Bands = "250m_16_days_EVI", "250m_16_days_pixel_reliability", Size = c(0,0), TimeSeriesLength = 1)But here I am confused about using Size parameter that is used to extract the point values. How can I use it to extract all the available data in this extent? And second one is can I use this point information in ASCII file to display a raster in R software? I don't want to download the full tile which contains 250MB and in my case this will be 250GB data if I download all the available data starting from 2000 to 2015.
> Waseem Ali
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo



-- 
Pascal Oettli
Project Scientist
JAMSTEC
Yokohama, Japan


From rubenfcasal at gmail.com  Fri Dec  4 13:29:41 2015
From: rubenfcasal at gmail.com (rubenfcasal)
Date: Fri, 4 Dec 2015 13:29:41 +0100
Subject: [R-sig-Geo] gstat::krige() - regression kriging vs. kriging
 with external drift
In-Reply-To: <20151129193537.Horde.UNixyQU7_yw2I3OJ20Bezw6@spatial-analyst.net>
References: <000901d11efa$026b78b0$07426a10$@gmail.com>
	<56557569.6020500@uni-muenster.de>
	<20151129193537.Horde.UNixyQU7_yw2I3OJ20Bezw6@spatial-analyst.net>
Message-ID: <56618735.2030102@gmail.com>

As I am interested in the topic, I find those comments very useful and I 
also want to share my thoughts?

 From my point of view UK (Universal Kriging) is a particular case of RK 
(Regression kriging), UK assumes a linear trend (where spatial 
coordinates could be used as explanatory variables) . Estimating the 
trend and computing simple kriging predictions of the residuals is 
equivalent to UK when a linear trend is assumed (and this trend is 
estimated efficiently; e.g. Cressie, 1993, section 3.4.5). Note that in 
most cases ordinary kriging is used instead (e.g if you don't include " 
beta = 0" in "gstat::krige(residuals ~ 1, [...])" ).
Regression Kriging is also called Residual Kriging and I would prefer 
the latter to avoid confusion with other kriging methods that make use 
of regression techniques.

I don't use the name "Kriging with External Drift" (KED), but I 
understand that this method considers a linear trend and it is a 
particular case of UK. Note that the trend could be modelled nonlinearly 
(or even nonparametrically, see package npsp), so I would preferably say 
"Kriging with a linear drift".

Note also that kriging methods assume that the variogram is known. In 
practice, it should be estimated and it is usually done through the 
residuals, but this is independent of the kriging algorithm?

So I would use (in order of preference): Universal Kriging, Residual 
Kriging (assuming a linear trend) or Kriging with a linear trend.

Best Regards,

Ruben Fernandez-Casal


El 29/11/2015 a las 20:35, Tomislav Hengl escribi?:
>
> I usually use "Kriging with External Drift (KED)" and "Universal 
> kriging" as synonyms. I think "Universal kriging" is the oldest term 
> (Matheron, 1963), but then 'universal' can seem a bit vague.
>
> Regression-kriging (RK) is when you krige the residuals and add them 
> to the trend (hence predict 'm' and 'e' separately). Edzer (gstat) 
> implements mainly KED/UK, but then you need the regression residuals 
> to estimate the variogram (I guess getting the residuals before you 
> fit variogram is unavoidable). Both RK and KED/UK are equivalent i.e. 
> give exactly the same predictions under same input settings 
> (http://dx.doi.org/10.1016/j.cageo.2007.05.001), so this is where many 
> get confused (two paths to the same destination).
>
> The code you have sent is definitively RK.
>
> The real difference between RK and KED is that with RK you can use 
> different modelling techniques including random forest and similar. As 
> long as the residuals are normal, you can then add interpolated 
> residuals back to the trend.
>
> HTH,
>
> T. Hengl
>
> Quoting Edzer Pebesma <edzer.pebesma at uni-muenster.de>:
>
>> On 14/11/15 17:32, Bede-Fazekas ?kos wrote:
>>> Dear List, dear Edzer,
>>> is it correct if I use the term "regression kriging" when I run this
>>> function?:
>>> kriged_value <- gstat::krige(z ~ x + y, [...])@data$var1.pred
>>>
>>> Or should I call it "kriging with external drift" (or "universal 
>>> kriging" if
>>> x and y are coordinates), and use the term "regression kriging" only 
>>> in the
>>> case of running this?:
>>> linear_model <- lm(z ~ x + y, [...])
>>> residuals <- linear_model$residuals
>>> kriged_residuals <- gstat::krige(residuals ~ 1, [...])@data$var1.pred
>>> kriged_value <- linear_model$fitted.values + kriged_residuals
>>>
>>
>> For what it's worth, my opinion:
>>
>> I would call it universal kriging, in line with the software you're
>> using (which I wrote):
>>
>>> x = krige(zinc~x+y, meuse, meuse.grid, m)
>> [using universal kriging]
>>
>> Most of the (older) literature associates external drift kriging with a
>> single external drift variable (e.g. Goovaerts), and universal kriging
>> with using coordinates as covariates.
>>
>> The statistician might call everything best linear unbiased prediction
>> under the the general linear model y = X beta + e, with a spatial
>> covariance function describing the covariance of e, and in that
>> perspective both methods are equivalent.
>>
>> I'm not the person to tell what regression kriging is and what it is
>> not, but it might include the above models as well as those where trend
>> fitting and residuals are done in different steps, and potentially under
>> different assumptions for e.
>>
>> -- 
>> Edzer Pebesma
>> Institute for Geoinformatics (ifgi),  University of M?nster,
>> Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
>> Journal of Statistical Software:   http://www.jstatsoft.org/
>> Computers & Geosciences:   http://elsevier.com/locate/cageo/
>> Spatial Statistics Society http://www.spatialstatistics.info
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From paul.harris at rothamsted.ac.uk  Fri Dec  4 15:01:28 2015
From: paul.harris at rothamsted.ac.uk (Paul Harris)
Date: Fri, 4 Dec 2015 14:01:28 +0000
Subject: [R-sig-Geo] gstat::krige() - regression kriging vs. kriging
 with external drift
In-Reply-To: <2f6e4350-7c94-46a9-b98b-ce77aa09a0d4@ROTHEX1.rothamsted.ac.uk>
References: <000901d11efa$026b78b0$07426a10$@gmail.com>
	<56557569.6020500@uni-muenster.de>
	<20151129193537.Horde.UNixyQU7_yw2I3OJ20Bezw6@spatial-analyst.net>
	<2f6e4350-7c94-46a9-b98b-ce77aa09a0d4@ROTHEX1.rothamsted.ac.uk>
Message-ID: <AM2PR01MB0769E430EAA8EFD0926B891AD80C0@AM2PR01MB0769.eurprd01.prod.exchangelabs.com>

Hi there
Adding to this?

UK/KED and RK are only equivalent when a global kriging neighbourhood is specified.

If using local kriging neigbourhoods (and assuming quasi-stationarity) then KED/UK can model non-stationary trends (as now the local trend components are filtered out using constraints),
whereas RK doesn?t as it is still using its stationary global trend component in its classic guise (with RK, only the residuals are predicted locally when local neighbourhoods are specified).

However, as noted by Tom, RK is much more flexible in that non-linear trend components can be used.  Median Polish Kriging was probably the first kriging method like this.
KED/UK are always limited to linear trends.

Cheers Harry

-----Original Message-----
From: R-sig-Geo [mailto:r-sig-geo-bounces at r-project.org] On Behalf Of rubenfcasal
Sent: 04 December 2015 12:30
To: r-sig-geo at r-project.org
Subject: Re: [R-sig-Geo] gstat::krige() - regression kriging vs. kriging with external drift

As I am interested in the topic, I find those comments very useful and I also want to share my thoughts?

 From my point of view UK (Universal Kriging) is a particular case of RK (Regression kriging), UK assumes a linear trend (where spatial coordinates could be used as explanatory variables) . Estimating the trend and computing simple kriging predictions of the residuals is equivalent to UK when a linear trend is assumed (and this trend is estimated efficiently; e.g. Cressie, 1993, section 3.4.5). Note that in most cases ordinary kriging is used instead (e.g if you don't include "
beta = 0" in "gstat::krige(residuals ~ 1, [...])" ).
Regression Kriging is also called Residual Kriging and I would prefer the latter to avoid confusion with other kriging methods that make use of regression techniques.

I don't use the name "Kriging with External Drift" (KED), but I understand that this method considers a linear trend and it is a particular case of UK. Note that the trend could be modelled nonlinearly (or even nonparametrically, see package npsp), so I would preferably say "Kriging with a linear drift".

Note also that kriging methods assume that the variogram is known. In practice, it should be estimated and it is usually done through the residuals, but this is independent of the kriging algorithm?

So I would use (in order of preference): Universal Kriging, Residual Kriging (assuming a linear trend) or Kriging with a linear trend.

Best Regards,

Ruben Fernandez-Casal


El 29/11/2015 a las 20:35, Tomislav Hengl escribi?:
>
> I usually use "Kriging with External Drift (KED)" and "Universal
> kriging" as synonyms. I think "Universal kriging" is the oldest term
> (Matheron, 1963), but then 'universal' can seem a bit vague.
>
> Regression-kriging (RK) is when you krige the residuals and add them
> to the trend (hence predict 'm' and 'e' separately). Edzer (gstat)
> implements mainly KED/UK, but then you need the regression residuals
> to estimate the variogram (I guess getting the residuals before you
> fit variogram is unavoidable). Both RK and KED/UK are equivalent i.e.
> give exactly the same predictions under same input settings
> (http://dx.doi.org/10.1016/j.cageo.2007.05.001), so this is where many
> get confused (two paths to the same destination).
>
> The code you have sent is definitively RK.
>
> The real difference between RK and KED is that with RK you can use
> different modelling techniques including random forest and similar. As
> long as the residuals are normal, you can then add interpolated
> residuals back to the trend.
>
> HTH,
>
> T. Hengl
>
> Quoting Edzer Pebesma <edzer.pebesma at uni-muenster.de>:
>
>> On 14/11/15 17:32, Bede-Fazekas ?kos wrote:
>>> Dear List, dear Edzer,
>>> is it correct if I use the term "regression kriging" when I run this
>>> function?:
>>> kriged_value <- gstat::krige(z ~ x + y, [...])@data$var1.pred
>>>
>>> Or should I call it "kriging with external drift" (or "universal
>>> kriging" if x and y are coordinates), and use the term "regression
>>> kriging" only in the case of running this?:
>>> linear_model <- lm(z ~ x + y, [...]) residuals <-
>>> linear_model$residuals kriged_residuals <- gstat::krige(residuals ~
>>> 1, [...])@data$var1.pred kriged_value <- linear_model$fitted.values
>>> + kriged_residuals
>>>
>>
>> For what it's worth, my opinion:
>>
>> I would call it universal kriging, in line with the software you're
>> using (which I wrote):
>>
>>> x = krige(zinc~x+y, meuse, meuse.grid, m)
>> [using universal kriging]
>>
>> Most of the (older) literature associates external drift kriging with
>> a single external drift variable (e.g. Goovaerts), and universal
>> kriging with using coordinates as covariates.
>>
>> The statistician might call everything best linear unbiased
>> prediction under the the general linear model y = X beta + e, with a
>> spatial covariance function describing the covariance of e, and in
>> that perspective both methods are equivalent.
>>
>> I'm not the person to tell what regression kriging is and what it is
>> not, but it might include the above models as well as those where
>> trend fitting and residuals are done in different steps, and
>> potentially under different assumptions for e.
>>
>> --
>> Edzer Pebesma
>> Institute for Geoinformatics (ifgi),  University of M?nster,
>> Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
>> Journal of Statistical Software:   http://www.jstatsoft.org/
>> Computers & Geosciences:   http://elsevier.com/locate/cageo/
>> Spatial Statistics Society http://www.spatialstatistics.info
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


Rothamsted Research is a company limited by guarantee, registered in England at Harpenden, Hertfordshire, AL5 2JQ under the registration number 2393175 and a not for profit charity number 802038.



From bastien.tran at gmail.com  Fri Dec  4 16:49:33 2015
From: bastien.tran at gmail.com (Bastien Tran)
Date: Fri, 4 Dec 2015 16:49:33 +0100
Subject: [R-sig-Geo] Extract points from SpatialLines objects along with the
 corresponding Lines' ID
Message-ID: <CALktS8W4_DVozwG7izDDfLEn1FvF43ea5d1rFNDVDm2=UiUJdw@mail.gmail.com>

Dear all,

I am trying to extract the points that compose a SpatialLines object along
with the Line's ID (provided when Lines() is called).

Hoping it makes my question clearer this is what I am currently able to get
(using the SpatialLines example):

> library(sp)
> l1 = cbind(c(1,2,3),c(3,2,2))
> Sl1 = Line(l1)
> S1 = Lines(list(Sl1), ID=c("a"))
>
> l2 = cbind(c(1,2,3),c(3,1.5,1))
> Sl2 = Line(l2)
> S2 = Lines(list(Sl2), ID="b")
>
>
> L1 = SpatialLines(list(S1,S2))
>
> sapply(slot(L1, "lines"), function(x) lapply(slot(x, "Lines"),
function(y) slot(y, "coords")))
[[1]]
     [,1] [,2]
[1,]    1    3
[2,]    2    2
[3,]    3    2

[[2]]
     [,1] [,2]
[1,]    1  3.0
[2,]    2  1.5
[3,]    3  1.0

But I would rather like to obtain something like this:

[[1]]
     [,1] [,2] [,3]
[1,] "1"  "3"  "a"
[2,] "2"  "2"  "a"
[3,] "3"  "2"  "a"

[[2]]
     [,1] [,2]  [,3]
[1,] "1"  "3"   "b"
[2,] "2"  "1.5" "b"
[3,] "3"  "1"   "b"

If possible I would like to avoid type conversions and get a data.frame
directly though I could indeed recreate one with these matrices, without
information loss I assume.

Thank you in advance for any tips.

Best regards,
Bastien

	[[alternative HTML version deleted]]


From Frederic.Pons at cerema.fr  Fri Dec  4 17:03:44 2015
From: Frederic.Pons at cerema.fr (PONS Frederic - CEREMA/DTerMed/DREC/SRILH)
Date: Fri, 04 Dec 2015 17:03:44 +0100
Subject: [R-sig-Geo] Extract points from SpatialLines objects along with
 the corresponding Lines' ID
In-Reply-To: <CALktS8W4_DVozwG7izDDfLEn1FvF43ea5d1rFNDVDm2=UiUJdw@mail.gmail.com>
References: <CALktS8W4_DVozwG7izDDfLEn1FvF43ea5d1rFNDVDm2=UiUJdw@mail.gmail.com>
Message-ID: <5661B960.3010900@cerema.fr>

Dear

I think it is not possible because you can have one attribute for more 
than one geometry...

Best regards
*Fr?d?ric Pons *
*Expert hydraulique sur les inondations et al?as c?tiers
**DREC/Service Risques Inondations Littoraux et Hydraulique **- T?l.: 
(33)4 42 24 76 68 *
*Direction Territoriale M?diterran?e
*
Centre d'?tudes et d'expertise sur les risques, l'environnement, la 
mobilit? et l'am?nagement
www.cerema.fr <http://www.cerema.fr>
Le 04/12/2015 16:49, "> Bastien Tran (par Internet, d?p?t 
r-sig-geo-bounces at r-project.org)" a ?crit :
> Dear all,
>
> I am trying to extract the points that compose a SpatialLines object along
> with the Line's ID (provided when Lines() is called).
>
> Hoping it makes my question clearer this is what I am currently able to get
> (using the SpatialLines example):
>
>> library(sp)
>> l1 = cbind(c(1,2,3),c(3,2,2))
>> Sl1 = Line(l1)
>> S1 = Lines(list(Sl1), ID=c("a"))
>>
>> l2 = cbind(c(1,2,3),c(3,1.5,1))
>> Sl2 = Line(l2)
>> S2 = Lines(list(Sl2), ID="b")
>>
>>
>> L1 = SpatialLines(list(S1,S2))
>>
>> sapply(slot(L1, "lines"), function(x) lapply(slot(x, "Lines"),
> function(y) slot(y, "coords")))
> [[1]]
>       [,1] [,2]
> [1,]    1    3
> [2,]    2    2
> [3,]    3    2
>
> [[2]]
>       [,1] [,2]
> [1,]    1  3.0
> [2,]    2  1.5
> [3,]    3  1.0
>
> But I would rather like to obtain something like this:
>
> [[1]]
>       [,1] [,2] [,3]
> [1,] "1"  "3"  "a"
> [2,] "2"  "2"  "a"
> [3,] "3"  "2"  "a"
>
> [[2]]
>       [,1] [,2]  [,3]
> [1,] "1"  "3"   "b"
> [2,] "2"  "1.5" "b"
> [3,] "3"  "1"   "b"
>
> If possible I would like to avoid type conversions and get a data.frame
> directly though I could indeed recreate one with these matrices, without
> information loss I assume.
>
> Thank you in advance for any tips.
>
> Best regards,
> Bastien
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151204/f472f882/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cerema.png
Type: image/png
Size: 6094 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151204/f472f882/attachment.png>

From jworrall at fs.fed.us  Fri Dec  4 19:26:03 2015
From: jworrall at fs.fed.us (Worrall, James -FS)
Date: Fri, 4 Dec 2015 18:26:03 +0000
Subject: [R-sig-Geo] rgdal 1.1-1 bug?
Message-ID: <558ED6D2BF4F5742885443480CC85E330184C942@001FSN2MPN1-062.001f.mgd2.msft.net>


We have been happily using rgdal to read and write ESRI Shapefiles.  Recently my colleague began using it.  We noticed that after saving and reopening files, many polygons had been reconfigured, as if the order of the vertices had become jumbled and there were many straight lines cutting across the polygon.  I'm not sure if an image can be pasted in this list but I'll try.
I did the same thing on my computer and the problem did not occur.  We found that I had an older version of rgdal, 1.0-7.  When I updated it to 1.1-1, the problem occurred just as it had with her.
Simply opening and saving a shapefile causes the problem and essentially jumbles the shapefile.  The bug, if it is one, was introduced after 1.0-7
I will attach images of one complex polygon, before and after saving with writeOGR.
Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151204/d4282c6a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.gif
Type: image/gif
Size: 92 bytes
Desc: image001.gif
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151204/d4282c6a/attachment.gif>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: after.png
Type: image/png
Size: 11986 bytes
Desc: after.png
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151204/d4282c6a/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: before.png
Type: image/png
Size: 8770 bytes
Desc: before.png
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151204/d4282c6a/attachment-0001.png>

From mdsumner at gmail.com  Fri Dec  4 23:34:23 2015
From: mdsumner at gmail.com (Michael Sumner)
Date: Fri, 04 Dec 2015 22:34:23 +0000
Subject: [R-sig-Geo] rgdal 1.1-1 bug?
In-Reply-To: <558ED6D2BF4F5742885443480CC85E330184C942@001FSN2MPN1-062.001f.mgd2.msft.net>
References: <558ED6D2BF4F5742885443480CC85E330184C942@001FSN2MPN1-062.001f.mgd2.msft.net>
Message-ID: <CAAcGz9_bTh+Pn9A-TLU6aDM4wzpRZcTawpjL7aVfx=EBXCq_7w@mail.gmail.com>

On Sat, 5 Dec 2015 at 05:26 Worrall, James -FS <jworrall at fs.fed.us> wrote:

> [image: image001.gif]
>
> We have been happily using rgdal to read and write ESRI Shapefiles.
> Recently my colleague began using it.  We noticed that after saving and
> reopening files, many polygons had been reconfigured, as if the order of
> the vertices had become jumbled and there were many straight lines cutting
> across the polygon.  I?m not sure if an image can be pasted in this list
> but I?ll try.
>
> I did the same thing on my computer and the problem did not occur.  We
> found that I had an older version of rgdal, 1.0-7.  When I updated it to
> 1.1-1, the problem occurred just as it had with her.
>
> Simply opening and saving a shapefile causes the problem and essentially
> jumbles the shapefile.  The bug, if it is one, was introduced after 1.0-7
>




I can't reproduce this. Can you provide a reproducible example?  Also,
"opening and saving a shapefiles" is not the way to describe what is done
in the usual rgdal workflow, so it's not clear what you did. Here's what I
tried:

library(maptools)
data(wrld_simpl)

library(rgdal)
#rgdal: version: 1.1-1, (SVN revision 572)
# Geospatial Data Abstraction Library extensions to R successfully loaded
# Loaded GDAL runtime: GDAL 1.11.2, released 2015/02/10
# Path to GDAL shared files: E:/inst/R/R/library/rgdal/gdal
# GDAL does not use iconv for recoding strings.
# Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491]
# Path to PROJ.4 shared files: E:/inst/R/R/library/rgdal/proj
# Linking to sp version: 1.2-1


writeOGR(wrld_simpl, ".", "1.1-1", "ESRI Shapefile")
x1 <- readOGR(".", "1.1-1")
plot(x1)  ## all good


 sessionInfo()
R version 3.2.2 Patched (2015-08-27 r69201)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 8.1 x64 (build 9600)

locale:
[1] LC_COLLATE=English_Australia.1252  LC_CTYPE=English_Australia.1252
[3] LC_MONETARY=English_Australia.1252 LC_NUMERIC=C
[5] LC_TIME=English_Australia.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] rgdal_1.1-1     maptools_0.8-37 sp_1.2-1

loaded via a namespace (and not attached):
[1] tools_3.2.2     foreign_0.8-66  grid_3.2.2      lattice_0.20-33


Cheers, Mike.




> I will attach images of one complex polygon, before and after saving with
> writeOGR.
>
> Jim
>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151204/2cfa3e18/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.gif
Type: image/gif
Size: 92 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151204/2cfa3e18/attachment.gif>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.gif
Type: image/gif
Size: 92 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151204/2cfa3e18/attachment-0001.gif>

From tephilippi at gmail.com  Sat Dec  5 00:00:01 2015
From: tephilippi at gmail.com (Tom Philippi)
Date: Fri, 4 Dec 2015 15:00:01 -0800
Subject: [R-sig-Geo] rgdal 1.1-1 bug?
In-Reply-To: <CAAcGz9_bTh+Pn9A-TLU6aDM4wzpRZcTawpjL7aVfx=EBXCq_7w@mail.gmail.com>
References: <558ED6D2BF4F5742885443480CC85E330184C942@001FSN2MPN1-062.001f.mgd2.msft.net>
	<CAAcGz9_bTh+Pn9A-TLU6aDM4wzpRZcTawpjL7aVfx=EBXCq_7w@mail.gmail.com>
Message-ID: <CALyPt8wLBfK8WRZsvRvH5WFozKZe0ur58zAC5N1w_FMX7WW2=A@mail.gmail.com>

James & all--
With your shapefile I can reproduce your problem under Windows 7x64 in R
3.2.2 rgdal_1.1-1 sp_1.2-1, but not R 3.1.2 rgdal_0.9-3 sp_1.1-1 or
earlier.  Both rgdals are linked to gdal 1.11.2 released 2015/02/10.
I also can reproduce the issue writing to & reading from GeoJSON instead of
shapefiles.  Files written by rgdal 1.1-1 have the lines connecting holes
when read by rgdal_0.9-3, but files written by rgdal_0.9-3 are read fine by
1.1-1.

The rarity about the shapefile in question is that it has 57 holes in the
same polygon, which (along with the lines connecting holes) suggests that
the issue might be related to SpatialPolygons not assigning holes to
specific (non-hole) polygons, see:
http://finzi.psych.upenn.edu/R/library/rgeos/html/comment-functions.html

I don't have time (or ability) to go much further right now in terms of
finding the change, but perhaps someone else can?

Tom 2

On Fri, Dec 4, 2015 at 2:34 PM, Michael Sumner <mdsumner at gmail.com> wrote:

>
>
> On Sat, 5 Dec 2015 at 05:26 Worrall, James -FS <jworrall at fs.fed.us> wrote:
>
>> [image: image001.gif]
>>
>> We have been happily using rgdal to read and write ESRI Shapefiles.
>> Recently my colleague began using it.  We noticed that after saving and
>> reopening files, many polygons had been reconfigured, as if the order of
>> the vertices had become jumbled and there were many straight lines cutting
>> across the polygon.  I?m not sure if an image can be pasted in this list
>> but I?ll try.
>>
>> I did the same thing on my computer and the problem did not occur.  We
>> found that I had an older version of rgdal, 1.0-7.  When I updated it to
>> 1.1-1, the problem occurred just as it had with her.
>>
>> Simply opening and saving a shapefile causes the problem and essentially
>> jumbles the shapefile.  The bug, if it is one, was introduced after 1.0-7
>>
>
>
>
>
> I can't reproduce this. Can you provide a reproducible example?  Also,
> "opening and saving a shapefiles" is not the way to describe what is done
> in the usual rgdal workflow, so it's not clear what you did. Here's what I
> tried:
>
> library(maptools)
> data(wrld_simpl)
>
> library(rgdal)
> #rgdal: version: 1.1-1, (SVN revision 572)
> # Geospatial Data Abstraction Library extensions to R successfully loaded
> # Loaded GDAL runtime: GDAL 1.11.2, released 2015/02/10
> # Path to GDAL shared files: E:/inst/R/R/library/rgdal/gdal
> # GDAL does not use iconv for recoding strings.
> # Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491]
> # Path to PROJ.4 shared files: E:/inst/R/R/library/rgdal/proj
> # Linking to sp version: 1.2-1
>
>
> writeOGR(wrld_simpl, ".", "1.1-1", "ESRI Shapefile")
> x1 <- readOGR(".", "1.1-1")
> plot(x1)  ## all good
>
>
>  sessionInfo()
> R version 3.2.2 Patched (2015-08-27 r69201)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 8.1 x64 (build 9600)
>
> locale:
> [1] LC_COLLATE=English_Australia.1252  LC_CTYPE=English_Australia.1252
> [3] LC_MONETARY=English_Australia.1252 LC_NUMERIC=C
> [5] LC_TIME=English_Australia.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] rgdal_1.1-1     maptools_0.8-37 sp_1.2-1
>
> loaded via a namespace (and not attached):
> [1] tools_3.2.2     foreign_0.8-66  grid_3.2.2      lattice_0.20-33
>
>
> Cheers, Mike.
>
>
>
>
>> I will attach images of one complex polygon, before and after saving with
>> writeOGR.
>>
>> Jim
>>
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From edzer.pebesma at uni-muenster.de  Sat Dec  5 11:31:48 2015
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Sat, 5 Dec 2015 11:31:48 +0100
Subject: [R-sig-Geo] Extract points from SpatialLines objects along with
 the corresponding Lines' ID
In-Reply-To: <CALktS8W4_DVozwG7izDDfLEn1FvF43ea5d1rFNDVDm2=UiUJdw@mail.gmail.com>
References: <CALktS8W4_DVozwG7izDDfLEn1FvF43ea5d1rFNDVDm2=UiUJdw@mail.gmail.com>
Message-ID: <5662BD14.6050107@uni-muenster.de>



On 04/12/15 16:49, Bastien Tran wrote:
> Dear all,
> 
> I am trying to extract the points that compose a SpatialLines object along
> with the Line's ID (provided when Lines() is called).
> 
> Hoping it makes my question clearer this is what I am currently able to get
> (using the SpatialLines example):
> 
>> library(sp)
>> l1 = cbind(c(1,2,3),c(3,2,2))
>> Sl1 = Line(l1)
>> S1 = Lines(list(Sl1), ID=c("a"))
>>
>> l2 = cbind(c(1,2,3),c(3,1.5,1))
>> Sl2 = Line(l2)
>> S2 = Lines(list(Sl2), ID="b")
>>
>>
>> L1 = SpatialLines(list(S1,S2))

Try:

> as(as(L1, "SpatialPointsDataFrame"), "data.frame")
  Lines.NR Lines.ID Line.NR coords.x1 coords.x2
1        1        a       1         1       3.0
2        1        a       1         2       2.0
3        1        a       1         3       2.0
4        2        b       1         1       3.0
5        2        b       1         2       1.5
6        2        b       1         3       1.0

or alternatively:

> as(L1, "SpatialMultiPoints")@coords
$a
     [,1] [,2]
[1,]    1    3
[2,]    2    2
[3,]    3    2

$b
     [,1] [,2]
[1,]    1  3.0
[2,]    2  1.5
[3,]    3  1.0





>>
>> sapply(slot(L1, "lines"), function(x) lapply(slot(x, "Lines"),
> function(y) slot(y, "coords")))
> [[1]]
>      [,1] [,2]
> [1,]    1    3
> [2,]    2    2
> [3,]    3    2
> 
> [[2]]
>      [,1] [,2]
> [1,]    1  3.0
> [2,]    2  1.5
> [3,]    3  1.0
> 
> But I would rather like to obtain something like this:
> 
> [[1]]
>      [,1] [,2] [,3]
> [1,] "1"  "3"  "a"
> [2,] "2"  "2"  "a"
> [3,] "3"  "2"  "a"
> 
> [[2]]
>      [,1] [,2]  [,3]
> [1,] "1"  "3"   "b"
> [2,] "2"  "1.5" "b"
> [3,] "3"  "1"   "b"
> 
> If possible I would like to avoid type conversions and get a data.frame
> directly though I could indeed recreate one with these matrices, without
> information loss I assume.
> 
> Thank you in advance for any tips.
> 
> Best regards,
> Bastien
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi),  University of M?nster,
Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/
Spatial Statistics Society http://www.spatialstatistics.info

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151205/d0686df4/attachment.bin>

From Roger.Bivand at nhh.no  Sat Dec  5 11:49:49 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sat, 5 Dec 2015 11:49:49 +0100
Subject: [R-sig-Geo] rgdal 1.1-1 bug?
In-Reply-To: <CALyPt8wLBfK8WRZsvRvH5WFozKZe0ur58zAC5N1w_FMX7WW2=A@mail.gmail.com>
References: <558ED6D2BF4F5742885443480CC85E330184C942@001FSN2MPN1-062.001f.mgd2.msft.net>
	<CAAcGz9_bTh+Pn9A-TLU6aDM4wzpRZcTawpjL7aVfx=EBXCq_7w@mail.gmail.com>
	<CALyPt8wLBfK8WRZsvRvH5WFozKZe0ur58zAC5N1w_FMX7WW2=A@mail.gmail.com>
Message-ID: <alpine.LFD.2.20.1512051138380.10870@reclus.nhh.no>

On Sat, 5 Dec 2015, Tom Philippi wrote:

> James & all--

If you make the offending shapefile available, I'll look at this in a week 
or so (no time before then). The possible change is from:

https://stat.ethz.ch/pipermail/r-sig-geo/2015-November/023656.html

and affected writing - before Shapefiles were written as-is, from 1.1-1 
all output geometries without comments are put through 
OGRGeometryFactory::organizePolygons() in GDAL/OGR. This may be a 
case in which the OGR function fails to organise the polygons in the 
intended fashion. I have a build of rgdal 1.1-2 for Windows using GDAL 
2.0.1 (thanks again to Brian Ripley) which you may try, but it will most 
likely not change anything. Also, we don't know whether the input data 
(Polygons objects) have comments or not, but if read through readOGR(), 
the Shapefile driver also runs OGRGeometryFactory::organizePolygons() on 
read.

I need access to the offending shapefile to see whether alternative 
settings to OGRGeometryFactory::organizePolygons(), or a user option to 
avoid this very sensible function with possibly bad data, might alleviate 
the problem. Please put on URL or attach offlist.

Roger

> With your shapefile I can reproduce your problem under Windows 7x64 in R
> 3.2.2 rgdal_1.1-1 sp_1.2-1, but not R 3.1.2 rgdal_0.9-3 sp_1.1-1 or
> earlier.  Both rgdals are linked to gdal 1.11.2 released 2015/02/10.
> I also can reproduce the issue writing to & reading from GeoJSON instead of
> shapefiles.  Files written by rgdal 1.1-1 have the lines connecting holes
> when read by rgdal_0.9-3, but files written by rgdal_0.9-3 are read fine by
> 1.1-1.
>
> The rarity about the shapefile in question is that it has 57 holes in the
> same polygon, which (along with the lines connecting holes) suggests that
> the issue might be related to SpatialPolygons not assigning holes to
> specific (non-hole) polygons, see:
> http://finzi.psych.upenn.edu/R/library/rgeos/html/comment-functions.html
>
> I don't have time (or ability) to go much further right now in terms of
> finding the change, but perhaps someone else can?
>
> Tom 2
>
> On Fri, Dec 4, 2015 at 2:34 PM, Michael Sumner <mdsumner at gmail.com> wrote:
>
>>
>>
>> On Sat, 5 Dec 2015 at 05:26 Worrall, James -FS <jworrall at fs.fed.us> wrote:
>>
>>> [image: image001.gif]
>>>
>>> We have been happily using rgdal to read and write ESRI Shapefiles.
>>> Recently my colleague began using it.  We noticed that after saving and
>>> reopening files, many polygons had been reconfigured, as if the order of
>>> the vertices had become jumbled and there were many straight lines cutting
>>> across the polygon.  I?m not sure if an image can be pasted in this list
>>> but I?ll try.
>>>
>>> I did the same thing on my computer and the problem did not occur.  We
>>> found that I had an older version of rgdal, 1.0-7.  When I updated it to
>>> 1.1-1, the problem occurred just as it had with her.
>>>
>>> Simply opening and saving a shapefile causes the problem and essentially
>>> jumbles the shapefile.  The bug, if it is one, was introduced after 1.0-7
>>>
>>
>>
>>
>>
>> I can't reproduce this. Can you provide a reproducible example?  Also,
>> "opening and saving a shapefiles" is not the way to describe what is done
>> in the usual rgdal workflow, so it's not clear what you did. Here's what I
>> tried:
>>
>> library(maptools)
>> data(wrld_simpl)
>>
>> library(rgdal)
>> #rgdal: version: 1.1-1, (SVN revision 572)
>> # Geospatial Data Abstraction Library extensions to R successfully loaded
>> # Loaded GDAL runtime: GDAL 1.11.2, released 2015/02/10
>> # Path to GDAL shared files: E:/inst/R/R/library/rgdal/gdal
>> # GDAL does not use iconv for recoding strings.
>> # Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491]
>> # Path to PROJ.4 shared files: E:/inst/R/R/library/rgdal/proj
>> # Linking to sp version: 1.2-1
>>
>>
>> writeOGR(wrld_simpl, ".", "1.1-1", "ESRI Shapefile")
>> x1 <- readOGR(".", "1.1-1")
>> plot(x1)  ## all good
>>
>>
>>  sessionInfo()
>> R version 3.2.2 Patched (2015-08-27 r69201)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows 8.1 x64 (build 9600)
>>
>> locale:
>> [1] LC_COLLATE=English_Australia.1252  LC_CTYPE=English_Australia.1252
>> [3] LC_MONETARY=English_Australia.1252 LC_NUMERIC=C
>> [5] LC_TIME=English_Australia.1252
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> other attached packages:
>> [1] rgdal_1.1-1     maptools_0.8-37 sp_1.2-1
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.2.2     foreign_0.8-66  grid_3.2.2      lattice_0.20-33
>>
>>
>> Cheers, Mike.
>>
>>
>>
>>
>>> I will attach images of one complex polygon, before and after saving with
>>> writeOGR.
>>>
>>> Jim
>>>
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no

From kent3737 at gmail.com  Sat Dec  5 22:37:30 2015
From: kent3737 at gmail.com (Kent Johnson)
Date: Sat, 5 Dec 2015 16:37:30 -0500
Subject: [R-sig-Geo] SpatialMultiPoints suggestions
Message-ID: <CAPP0wyjnJvvXY4MBNPMBG_N=30ROF4an0=cqG1QiunOaTkmSLA@mail.gmail.com>

Hi,

I am starting to use SpatialMultiPointsDataFrame to hold lat/lon/altitude
data and metadata from airplane tracks. A couple of observations:

- The documentation for SpatialMultiPoints {sp} seem to be incorrect. It
say that the 'coords' argument is a "numeric matrix or data.frame with
coordinates (each row is a point)". In fact the argument seems to be a list
of such matrices, as shown in the example code.

- rbind() is not implemented for SpatialMultiPoints*; perhaps it is an
oversight, as the other Spatial* classes have implementations of rbind().
Here is my attempt:

rbind.SpatialMultiPoints <- function(...) {
dots = list(...)
names(dots) <- NULL
stopifnot(identicalCRS(dots))
SpatialMultiPoints(do.call(c, lapply(dots, slot, name="coords")),
CRS(proj4string(dots[[1]])))
}

rbind.SpatialMultiPointsDataFrame <- function(...) {
dots = list(...)
names(dots) <- NULL
sp = do.call(rbind, lapply(dots, function(x) as(x, "SpatialMultiPoints")))
df = do.call(rbind, lapply(dots, function(x) x at data))
SpatialMultiPointsDataFrame(sp, df)
}


HTH,
Kent

	[[alternative HTML version deleted]]


From thi_veloso at yahoo.com.br  Sat Dec  5 23:03:28 2015
From: thi_veloso at yahoo.com.br (Thiago V. dos Santos)
Date: Sat, 5 Dec 2015 22:03:28 +0000 (UTC)
Subject: [R-sig-Geo] Take mean of list of raster stacks
In-Reply-To: <565F1BC2.3090004@wur.nl>
References: <669661525.11276619.1449066181281.JavaMail.yahoo@mail.yahoo.com>
	<1449067185734.cd5997fd@Nodemailer> <565F1BC2.3090004@wur.nl>
Message-ID: <1761133801.12910210.1449353008343.JavaMail.yahoo@mail.yahoo.com>

Thank you Lyndon and Lo?c for the responses to my question.

Lyndon's solution worked fine, but Lo?c's did not. I guess the reason why it didn't work was already discussed on this topic. Again, just for the sake of future reference, this is the raster stack list I am working with:


> models.list$CanESM2
class       : RasterBrick 
dimensions  : 23, 19, 437, 9  (nrow, ncol, ncell, nlayers)
resolution  : 0.5, 0.5  (x, y)
extent      : -57.5, -48, -34, -22.5  (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names       :   layer.1,   layer.2,   layer.3,   layer.4,   layer.5,   layer.6,   layer.7,   layer.8,   layer.9 
min values  : 137.51260, 103.75805,  85.07232, 114.59114,  88.59638,  82.38541,  98.64818,  91.78697,  74.57888 
max values  :  526.1966,  490.5268,  537.6004,  536.0648,  526.3977,  509.5332,  557.7880,  503.1330,  531.5689 


$`GFDL-ESM2M`
class       : RasterBrick 
dimensions  : 23, 19, 437, 9  (nrow, ncol, ncell, nlayers)
resolution  : 0.5, 0.5  (x, y)
extent      : -57.5, -48, -34, -22.5  (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names       :  layer.1,  layer.2,  layer.3,  layer.4,  layer.5,  layer.6,  layer.7,  layer.8,  layer.9 
min values  : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968, 78.61677, 91.31480, 84.72990, 77.58408 
max values  : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369, 543.8348, 532.9768, 524.7191, 525.7651 


$inmcm4
class       : RasterBrick 
dimensions  : 23, 19, 437, 9  (nrow, ncol, ncell, nlayers)
resolution  : 0.5, 0.5  (x, y)
extent      : -57.5, -48, -34, -22.5  (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names       :  layer.1,  layer.2,  layer.3,  layer.4,  layer.5,  layer.6,  layer.7,  layer.8,  layer.9 
min values  : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747, 131.2129, 205.0893, 149.3376, 164.3868 
max values  : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148, 523.1451, 534.9090, 561.0131, 551.4501 


$`MRI-CGCM3`
class       : RasterBrick 
dimensions  : 23, 19, 437, 9  (nrow, ncol, ncell, nlayers)
resolution  : 0.5, 0.5  (x, y)
extent      : -57.5, -48, -34, -22.5  (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names       :  layer.1,  layer.2,  layer.3,  layer.4,  layer.5,  layer.6,  layer.7,  layer.8,  layer.9 
min values  : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720, 172.5434, 195.4526, 160.2298, 182.6004 
max values  : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307, 671.9138, 669.0936, 665.2333, 669.0399 


$`NorESM1-M`
class       : RasterBrick 
dimensions  : 23, 19, 437, 9  (nrow, ncol, ncell, nlayers)
resolution  : 0.5, 0.5  (x, y)
extent      : -57.5, -48, -34, -22.5  (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
data source : in memory
names       :  layer.1,  layer.2,  layer.3,  layer.4,  layer.5,  layer.6,  layer.7,  layer.8,  layer.9 
min values  : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985, 149.3203, 156.6462, 153.4485, 116.1606 
max values  : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222, 601.7283, 617.0612, 603.3071, 645.2594 




Each element of this list is collected at the end of a loop where I perform several operations on the raster stack.
By the way, thanks also to everyone else who provided very insightful follow-ups to Lo?c's answer.
 
Greetings,
 -- Thiago V. dos Santos

PhD student
Land and Atmospheric Science
University of Minnesota



On Wednesday, December 2, 2015 10:30 AM, Lo?c Dutrieux <loic.dutrieux at wur.nl> wrote:



Hi Thiago,

Otherwise overlay wrapped in do.call seems to work.

See example below:

Cheers,
Lo?c

library(raster)

# Create multiple raterStacks
s1 <- stack(system.file("external/rlogo.grd", package="raster"))
s2 <- s1 * 2
s3 <- s1 * 3
s4 <- s1 * 4

# Create a unnamed list (not sure why it didn't work with a named list)
l <- list(s1, s2, s3, s4, fun = mean)

# do.call call
do.call(what = raster::overlay, args = l)



On 12/02/2015 03:39 PM, lyndon.estes at gmail.com wrote:
> Hi Thiago,
>
>
>
>
> Done in haste, but I think this might do it (it?s on an 8X8 problem though):
>
>
>
>
>
> stlist <- lapply(1:8, function(x) {
>
>   rl <- stack(lapply(1:8, function(y) {
>
>     r <- raster(nrow = 10, ncol = 10)
>
>     r[] <- sample(1:100, size = ncell(r), replace = TRUE)
>
>     r
>
>   }))
>
>   rl
>
> })
>
> names(stlist) <- paste0("s", 1:8)
>
>
>
>
> stack(lapply(1:8, function(x) {
>
>    calc(stack(lapply(1:8, function(y) stlist[[y]][[x]])), mean)
>
> }))
>
>
>
>
> Hope this helps.
>
>
>
>
> Cheers, Lyndon
>
>
>
>
> ?
> Sent from Mailbox
>
> On Wed, Dec 2, 2015 at 9:23 AM, Thiago V. dos Santos
> <thi_veloso at yahoo.com.br> wrote:
>
>> Hi all,
>> I have a list with five raster stacks, each of them containing 9 layers:
>>> models.list
>> $CanESM2
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 137.51260, 103.75805, 85.07232, 114.59114, 88.59638, 82.38541, 98.64818, 91.78697, 74.57888
>> max values : 526.1966, 490.5268, 537.6004, 536.0648, 526.3977, 509.5332, 557.7880, 503.1330, 531.5689
>> $`GFDL-ESM2M`
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 99.87192, 84.49617, 82.04732, 91.23503, 82.46968, 78.61677, 91.31480, 84.72990, 77.58408
>> max values : 549.9278, 550.9575, 555.1746, 542.2581, 526.9369, 543.8348, 532.9768, 524.7191, 525.7651
>> $inmcm4
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 153.1610, 180.0696, 165.8414, 155.4981, 210.9747, 131.2129, 205.0893, 149.3376, 164.3868
>> max values : 548.4998, 521.2526, 532.5670, 551.9284, 561.8148, 523.1451, 534.9090, 561.0131, 551.4501
>> $`MRI-CGCM3`
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 206.9614, 205.4357, 173.1827, 139.5373, 169.0720, 172.5434, 195.4526, 160.2298, 182.6004
>> max values : 687.7671, 686.6686, 689.2235, 687.3547, 645.3307, 671.9138, 669.0936, 665.2333, 669.0399
>> $`NorESM1-M`
>> class : RasterBrick
>> dimensions : 23, 19, 437, 9 (nrow, ncol, ncell, nlayers)
>> resolution : 0.5, 0.5 (x, y)
>> extent : -57.5, -48, -34, -22.5 (xmin, xmax, ymin, ymax)
>> coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0
>> data source : in memory
>> names : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6, layer.7, layer.8, layer.9
>> min values : 211.6625, 185.8265, 187.7064, 187.3369, 186.3985, 149.3203, 156.6462, 153.4485, 116.1606
>> max values : 605.5658, 603.2598, 569.0408, 599.4353, 589.8222, 601.7283, 617.0612, 603.3071, 645.2594
>> What I need to do is to come out with a single stack, also with 9 layers, that is composed by the mean of the correspondent layers of all elements in the list.
>> For example, the first layer of the resulting stack would be the average of the first layer of the five elements of the list.
>> In terms of code, it would be something like this:
>> 1st layer of result stack <- mean (1st layer of 1st element, 1st layer of 2nd element, 1st layer of 3rd element, 1st layer of 4th element, 1st layer of 5th element)
>> 2nd layer of result stack <- mean (2nd layer of 1st element, 2nd layer of 2nd element, 2nd layer of 3rd element, 2nd layer of 4th element, 2nd layer of 5th element)
>> 3rd layer of result stack <- mean (3rd layer of 1st element, 3rd layer of 2nd element, 3rd layer of 3rd element, 3rd layer of 4th element, 3rd layer of 5th element)
>> ...
>> 8th layer of result stack <- mean (8th layer of 1st element, 8th layer of 2nd element, 8th layer of 3rd element, 8th layer of 4th element, 8th layer of 5th element)
>> 9th layer of result stack <- mean (9th layer of 1st element, 9th layer of 2nd element, 9th layer of 3rd element, 9th layer of 4th element, 9th layer of 5th element)
>> Any hints on how I can accomplish that?
>> Greetings,
>> -- Thiago V. dos Santos
>> PhD student
>> Land and Atmospheric Science
>> University of Minnesota
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>     [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

>

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From edzer.pebesma at uni-muenster.de  Sun Dec  6 00:08:05 2015
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Sun, 6 Dec 2015 00:08:05 +0100
Subject: [R-sig-Geo] SpatialMultiPoints suggestions
In-Reply-To: <CAPP0wyjnJvvXY4MBNPMBG_N=30ROF4an0=cqG1QiunOaTkmSLA@mail.gmail.com>
References: <CAPP0wyjnJvvXY4MBNPMBG_N=30ROF4an0=cqG1QiunOaTkmSLA@mail.gmail.com>
Message-ID: <56636E55.3090001@uni-muenster.de>

Thanks -- patch committed to r-forge.

On 05/12/15 22:37, Kent Johnson wrote:
> Hi,
> 
> I am starting to use SpatialMultiPointsDataFrame to hold lat/lon/altitude
> data and metadata from airplane tracks. A couple of observations:
> 
> - The documentation for SpatialMultiPoints {sp} seem to be incorrect. It
> say that the 'coords' argument is a "numeric matrix or data.frame with
> coordinates (each row is a point)". In fact the argument seems to be a list
> of such matrices, as shown in the example code.
> 
> - rbind() is not implemented for SpatialMultiPoints*; perhaps it is an
> oversight, as the other Spatial* classes have implementations of rbind().
> Here is my attempt:
> 
> rbind.SpatialMultiPoints <- function(...) {
> dots = list(...)
> names(dots) <- NULL
> stopifnot(identicalCRS(dots))
> SpatialMultiPoints(do.call(c, lapply(dots, slot, name="coords")),
> CRS(proj4string(dots[[1]])))
> }
> 
> rbind.SpatialMultiPointsDataFrame <- function(...) {
> dots = list(...)
> names(dots) <- NULL
> sp = do.call(rbind, lapply(dots, function(x) as(x, "SpatialMultiPoints")))
> df = do.call(rbind, lapply(dots, function(x) x at data))
> SpatialMultiPointsDataFrame(sp, df)
> }
> 
> 
> HTH,
> Kent
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi),  University of M?nster,
Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/
Spatial Statistics Society http://www.spatialstatistics.info

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151206/9ad60695/attachment.bin>

From jworrall at fs.fed.us  Mon Dec  7 17:40:53 2015
From: jworrall at fs.fed.us (Worrall, James -FS)
Date: Mon, 7 Dec 2015 16:40:53 +0000
Subject: [R-sig-Geo] rgdal 1.1-1 bug?
In-Reply-To: <alpine.LFD.2.20.1512051138380.10870@reclus.nhh.no>
References: <558ED6D2BF4F5742885443480CC85E330184C942@001FSN2MPN1-062.001f.mgd2.msft.net>
	<CAAcGz9_bTh+Pn9A-TLU6aDM4wzpRZcTawpjL7aVfx=EBXCq_7w@mail.gmail.com>
	<CALyPt8wLBfK8WRZsvRvH5WFozKZe0ur58zAC5N1w_FMX7WW2=A@mail.gmail.com>
	<alpine.LFD.2.20.1512051138380.10870@reclus.nhh.no>
Message-ID: <558ED6D2BF4F5742885443480CC85E330184CA78@001FSN2MPN1-062.001f.mgd2.msft.net>

Thank you Tom and Roger for your attention to this issue.

Here is a link to a zipfile (17 MB).  It contains two folders/shapefiles.  One is the single big polygon with many holes that I had sent to Tom.  The other is the shapefile it was extracted from, with many additional polygons showing similar problems.  

https://www.dropbox.com/s/xkp8sdoccg6jyg4/offending_shapefile.zip?dl=0

These shapefiles are from Arc and have never been written by writeOGR, so should be fine when first opened.

For now, I have been unable to revert to the earlier version of rgdal as R complains that it doesn't match the R version.
Jim

-----Original Message-----
From: R-sig-Geo [mailto:r-sig-geo-bounces at r-project.org] On Behalf Of Roger Bivand
Sent: Saturday, December 05, 2015 3:50 AM
To: Tom Philippi
Cc: r-sig-geo at r-project.org
Subject: Re: [R-sig-Geo] rgdal 1.1-1 bug?

On Sat, 5 Dec 2015, Tom Philippi wrote:

> James & all--

If you make the offending shapefile available, I'll look at this in a week or so (no time before then). The possible change is from:

https://stat.ethz.ch/pipermail/r-sig-geo/2015-November/023656.html

and affected writing - before Shapefiles were written as-is, from 1.1-1 all output geometries without comments are put through
OGRGeometryFactory::organizePolygons() in GDAL/OGR. This may be a case in which the OGR function fails to organise the polygons in the intended fashion. I have a build of rgdal 1.1-2 for Windows using GDAL
2.0.1 (thanks again to Brian Ripley) which you may try, but it will most likely not change anything. Also, we don't know whether the input data (Polygons objects) have comments or not, but if read through readOGR(), the Shapefile driver also runs OGRGeometryFactory::organizePolygons() on read.

I need access to the offending shapefile to see whether alternative settings to OGRGeometryFactory::organizePolygons(), or a user option to avoid this very sensible function with possibly bad data, might alleviate the problem. Please put on URL or attach offlist.

Roger

> With your shapefile I can reproduce your problem under Windows 7x64 in 
> R
> 3.2.2 rgdal_1.1-1 sp_1.2-1, but not R 3.1.2 rgdal_0.9-3 sp_1.1-1 or 
> earlier.  Both rgdals are linked to gdal 1.11.2 released 2015/02/10.
> I also can reproduce the issue writing to & reading from GeoJSON 
> instead of shapefiles.  Files written by rgdal 1.1-1 have the lines 
> connecting holes when read by rgdal_0.9-3, but files written by 
> rgdal_0.9-3 are read fine by 1.1-1.
>
> The rarity about the shapefile in question is that it has 57 holes in 
> the same polygon, which (along with the lines connecting holes) 
> suggests that the issue might be related to SpatialPolygons not 
> assigning holes to specific (non-hole) polygons, see:
> http://finzi.psych.upenn.edu/R/library/rgeos/html/comment-functions.ht
> ml
>
> I don't have time (or ability) to go much further right now in terms 
> of finding the change, but perhaps someone else can?
>
> Tom 2
>
> On Fri, Dec 4, 2015 at 2:34 PM, Michael Sumner <mdsumner at gmail.com> wrote:
>
>>
>>
>> On Sat, 5 Dec 2015 at 05:26 Worrall, James -FS <jworrall at fs.fed.us> wrote:
>>
>>> [image: image001.gif]
>>>
>>> We have been happily using rgdal to read and write ESRI Shapefiles.
>>> Recently my colleague began using it.  We noticed that after saving 
>>> and reopening files, many polygons had been reconfigured, as if the 
>>> order of the vertices had become jumbled and there were many 
>>> straight lines cutting across the polygon.  I?m not sure if an image 
>>> can be pasted in this list but I?ll try.
>>>
>>> I did the same thing on my computer and the problem did not occur.  
>>> We found that I had an older version of rgdal, 1.0-7.  When I 
>>> updated it to 1.1-1, the problem occurred just as it had with her.
>>>
>>> Simply opening and saving a shapefile causes the problem and 
>>> essentially jumbles the shapefile.  The bug, if it is one, was 
>>> introduced after 1.0-7
>>>
>>
>>
>>
>>
>> I can't reproduce this. Can you provide a reproducible example?  
>> Also, "opening and saving a shapefiles" is not the way to describe 
>> what is done in the usual rgdal workflow, so it's not clear what you 
>> did. Here's what I
>> tried:
>>
>> library(maptools)
>> data(wrld_simpl)
>>
>> library(rgdal)
>> #rgdal: version: 1.1-1, (SVN revision 572) # Geospatial Data 
>> Abstraction Library extensions to R successfully loaded # Loaded GDAL 
>> runtime: GDAL 1.11.2, released 2015/02/10 # Path to GDAL shared 
>> files: E:/inst/R/R/library/rgdal/gdal # GDAL does not use iconv for 
>> recoding strings.
>> # Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491] 
>> # Path to PROJ.4 shared files: E:/inst/R/R/library/rgdal/proj # 
>> Linking to sp version: 1.2-1
>>
>>
>> writeOGR(wrld_simpl, ".", "1.1-1", "ESRI Shapefile")
>> x1 <- readOGR(".", "1.1-1")
>> plot(x1)  ## all good
>>
>>
>>  sessionInfo()
>> R version 3.2.2 Patched (2015-08-27 r69201)
>> Platform: x86_64-w64-mingw32/x64 (64-bit) Running under: Windows 8.1 
>> x64 (build 9600)
>>
>> locale:
>> [1] LC_COLLATE=English_Australia.1252  
>> LC_CTYPE=English_Australia.1252 [3] 
>> LC_MONETARY=English_Australia.1252 LC_NUMERIC=C [5] 
>> LC_TIME=English_Australia.1252
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> other attached packages:
>> [1] rgdal_1.1-1     maptools_0.8-37 sp_1.2-1
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.2.2     foreign_0.8-66  grid_3.2.2      lattice_0.20-33
>>
>>
>> Cheers, Mike.
>>
>>
>>
>>
>>> I will attach images of one complex polygon, before and after saving 
>>> with writeOGR.
>>>
>>> Jim
>>>
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

--
Roger Bivand
Department of Economics, Norwegian School of Economics, Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From bastien.tran at gmail.com  Tue Dec  8 15:11:56 2015
From: bastien.tran at gmail.com (Bastien Tran)
Date: Tue, 8 Dec 2015 15:11:56 +0100
Subject: [R-sig-Geo] Extract points from SpatialLines objects along with
 the corresponding Lines' ID
Message-ID: <CALktS8WMXATaxZqJpDwG_VtVuD-ZAmVbqavR3CPCVfnMjkjqUQ@mail.gmail.com>

Thank you Fr?d?ric and Edzer for your replies.

Fr?d?ric, I didn't get your point but I am new to the sp library, it
will be clearer to me when I catch up.

The first solution provided by Edzer works great for me, and the
second one will quite likely be useful at some point.

Thanks again.

Best regards,

Bastien


From milan.kili11 at gmail.com  Wed Dec  9 11:34:04 2015
From: milan.kili11 at gmail.com (Milan Kilibarda)
Date: Wed, 9 Dec 2015 11:34:04 +0100
Subject: [R-sig-Geo] The first call for GeoMLA workshop and conference,
	21-24 June 2016, Belgrade
Message-ID: <CAPSaU--a4LdmK6Rkbg=kj92haW7OvfP5+bqdiLbfwZ=Diw+Z8Q@mail.gmail.com>

Dear colleagues,


In the period 21-24 June 2016, we are organizing an International
conference and a series of workshops entitled:

"GeoMLA: Geostatistics and Machine Learning Applications in Climate
and Environmental Sciences".

Location: University of Belgrade - Faculty of Civil Engineering Belgrade, Serbia

URL: http://geomla.org

This conference builds up on the previous DailyMeteo meeting
(http://www.sciencedirect.com/science/journal/22116753/14/part/PA)
that has focused on Spatio-temporal modeling of meteo data. Likewise,
the GeoMLA conference and workshops in Belgrade 2016 aim at bringing
together leading researchers in the field of Climate/Environmental
modeling, detection and analysis, and especially those focusing on
bridging gaps between Geostatistics and Machine Learning
methods/techniques for use in Atmospheric and Environmental Sciences.


The meeting will open with three parallel workshops (21-22 June 2016)
run as software tutorials:

- Mikhail Kanevski: "Machine learning of geospatial data: achievements
and new trends"

- Tomislav Hengl: "Automated mapping in 2D, 3D, and 2D+T using machine learning"

- Milan Kilibarda: "Spatial and spatio-temporal prediction and
visualisation of climate elements in R"


These workshops will be accompanied by the demonstrations and
practicals (hands-on-software training) using topo-climatic, pollution
and natural hazards real data case studies.

After the workshops we will run a two-days conference (23-24 June
2016) with several keynote speakers / leading researchers in the
field:


- prof. dr. Mikhail Kanevski, Universite de Lausanne, Facult? des
g?osciences et de l'environnement, Lausanne, Switzerland

- prof. dr. Wolfgang Wagner, Technical University of Wien, Department
of Geodesy and geoinformation

- dr. Ivana Cvijanovi?, Lawrence Livermore National Laboratory, CA USA

- dr. Ole Einar Tveito, Norwegian Meteorological Institute,
Climatology Division, Oslo Norway

- Dr. Andreas Papritz, ETH Zurich, , Department of Environmental Systems Science


The conference sessions will include topics on advances in climate
science, modeling of climate data, spatio-temporal climate variations,
meteo data sets, as well as geostatistical and machine learning
applications in climate science, spatial interpolation of climate
data, climate mapping.


Contributions will be published in the conference proceedings and
distributed at the conference. A selection of extended abstracts will
be invited for submission in a special issue.


All other information about the conference can be found at: http://geomla.org


IMPORTANT DEADLINES:


March 1st 2016 - abstract submission

April 15 th 2016 - early registration deadline


We are looking forward to seeing you in Belgrade!

-- 
Dr. Milan Kilibarda
Assistant professor
University of Belgrade,
Faculty of Civil Engineering,
Department of Geodesy and Geoinformatics,
Address: Bulevar kralja Aleksandra 73  11000 Belgrade, Serbia,
Mail:  kili at grf.bg.ac.rs
Web: http://www.grf.bg.ac.rs/fakultet/pro/e?nid=168 ;
http://osgl.grf.bg.ac.rs/ ;  http://dailymeteo.org/
Pub: http://scholar.google.com/citations?user=Zl2MZ3AAAAAJ&hl=en
tel:+381 11 3218630


From bastien.tran at gmail.com  Wed Dec  9 15:53:01 2015
From: bastien.tran at gmail.com (Bastien Tran)
Date: Wed, 9 Dec 2015 15:53:01 +0100
Subject: [R-sig-Geo] Change Lines'IDs within a SpatialLines object
Message-ID: <CALktS8WFC6Wck5HAezGoO1nd5gXdYRRK5BfNEBRHDoS4s6cu1w@mail.gmail.com>

Dear all,

I intend to make "copies" of SpatialLines object meaning I would like
to get the same geometry but with different IDs for the Lines.

For instance using L1 from the SpatialLines example I would like to go from:

> str(L1)
Formal class 'SpatialLines' [package "sp"] with 3 slots
  ..@ lines      :List of 2
  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
  .. .. .. ..@ Lines:List of 1
  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 2 2
  .. .. .. ..@ ID   : chr "a"
  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
  .. .. .. ..@ Lines:List of 1
  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 1.5 1
  .. .. .. ..@ ID   : chr "b"
  ..@ bbox       : num [1:2, 1:2] 1 1 3 3
  .. ..- attr(*, "dimnames")=List of 2
  .. .. ..$ : chr [1:2] "x" "y"
  .. .. ..$ : chr [1:2] "min" "max"
  ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot
  .. .. ..@ projargs: chr NA

to

> str(L1)
Formal class 'SpatialLines' [package "sp"] with 3 slots
  ..@ lines      :List of 2
  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
  .. .. .. ..@ Lines:List of 1
  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 2 2
  .. .. .. ..@ ID   : chr "c"
  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
  .. .. .. ..@ Lines:List of 1
  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 1.5 1
  .. .. .. ..@ ID   : chr "d"
  ..@ bbox       : num [1:2, 1:2] 1 1 3 3
  .. ..- attr(*, "dimnames")=List of 2
  .. .. ..$ : chr [1:2] "x" "y"
  .. .. ..$ : chr [1:2] "min" "max"
  ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot
  .. .. ..@ projargs: chr NA


Is there a way to do so without rebuilding the SpatialLine object with
updated Lines objects (same Lines new IDs)? I assume it is possible to
update each ID slot directly in L1 somehow.

I expected something like

sapply(slot(L1, "lines"), function(x) assign(slot(x, "ID"),
paste0("copyof",slot(x, "ID")))

to do so but I am certainly missing something about assignments in S4 objects.

Thank you for any help.

Best regards,

Bastien Tran


From Roger.Bivand at nhh.no  Wed Dec  9 17:40:33 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 9 Dec 2015 17:40:33 +0100
Subject: [R-sig-Geo] Change Lines'IDs within a SpatialLines object
In-Reply-To: <CALktS8WFC6Wck5HAezGoO1nd5gXdYRRK5BfNEBRHDoS4s6cu1w@mail.gmail.com>
References: <CALktS8WFC6Wck5HAezGoO1nd5gXdYRRK5BfNEBRHDoS4s6cu1w@mail.gmail.com>
Message-ID: <alpine.LFD.2.20.1512091739220.7116@reclus.nhh.no>

On Wed, 9 Dec 2015, Bastien Tran wrote:

> Dear all,
>
> I intend to make "copies" of SpatialLines object meaning I would like
> to get the same geometry but with different IDs for the Lines.

Please use row.names(), so here:

row.names(L1) <- c("c", "d")

If L1 was a SpatialLinesDataFrame, the row.names of the data slot would 
also be updated.

Roger

>
> For instance using L1 from the SpatialLines example I would like to go from:
>
>> str(L1)
> Formal class 'SpatialLines' [package "sp"] with 3 slots
>  ..@ lines      :List of 2
>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>  .. .. .. ..@ Lines:List of 1
>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 2 2
>  .. .. .. ..@ ID   : chr "a"
>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>  .. .. .. ..@ Lines:List of 1
>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 1.5 1
>  .. .. .. ..@ ID   : chr "b"
>  ..@ bbox       : num [1:2, 1:2] 1 1 3 3
>  .. ..- attr(*, "dimnames")=List of 2
>  .. .. ..$ : chr [1:2] "x" "y"
>  .. .. ..$ : chr [1:2] "min" "max"
>  ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot
>  .. .. ..@ projargs: chr NA
>
> to
>
>> str(L1)
> Formal class 'SpatialLines' [package "sp"] with 3 slots
>  ..@ lines      :List of 2
>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>  .. .. .. ..@ Lines:List of 1
>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 2 2
>  .. .. .. ..@ ID   : chr "c"
>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>  .. .. .. ..@ Lines:List of 1
>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 1.5 1
>  .. .. .. ..@ ID   : chr "d"
>  ..@ bbox       : num [1:2, 1:2] 1 1 3 3
>  .. ..- attr(*, "dimnames")=List of 2
>  .. .. ..$ : chr [1:2] "x" "y"
>  .. .. ..$ : chr [1:2] "min" "max"
>  ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot
>  .. .. ..@ projargs: chr NA
>
>
> Is there a way to do so without rebuilding the SpatialLine object with
> updated Lines objects (same Lines new IDs)? I assume it is possible to
> update each ID slot directly in L1 somehow.
>
> I expected something like
>
> sapply(slot(L1, "lines"), function(x) assign(slot(x, "ID"),
> paste0("copyof",slot(x, "ID")))
>
> to do so but I am certainly missing something about assignments in S4 objects.
>
> Thank you for any help.
>
> Best regards,
>
> Bastien Tran
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From bastien.tran at gmail.com  Thu Dec 10 11:24:00 2015
From: bastien.tran at gmail.com (Bastien Tran)
Date: Thu, 10 Dec 2015 11:24:00 +0100
Subject: [R-sig-Geo] Change Lines'IDs within a SpatialLines object
In-Reply-To: <alpine.LFD.2.20.1512091739220.7116@reclus.nhh.no>
References: <CALktS8WFC6Wck5HAezGoO1nd5gXdYRRK5BfNEBRHDoS4s6cu1w@mail.gmail.com>
	<alpine.LFD.2.20.1512091739220.7116@reclus.nhh.no>
Message-ID: <CALktS8Vsj8G+86VC9Ub2RL3fb-FFBaTa0vof=kgB3EFxJhzZ1g@mail.gmail.com>

Thank you very much Roger, it is really helpful.

I had no idea SpatialLines (or SpatialPolygons) objects could be
manipulated this way. If I may ask, to which extent these objects can
be treated as data frames (I understand they are not?)? I may have
missed it but I haven't seen such thing in the documentation.

Incidentally I think your answer made me understand what
SpatialLinesDataFrame are (I used to think it was a different way to
store the shape's geometry but it is more about linking
attributes/variables to shapes ID's if I am correct).  It will serve
my purpose quite aptly.

Thanks a lot again, I already had more answers than I asked for.

Best regards,
Bastien

2015-12-09 17:40 GMT+01:00 Roger Bivand <Roger.Bivand at nhh.no>:
> On Wed, 9 Dec 2015, Bastien Tran wrote:
>
>> Dear all,
>>
>> I intend to make "copies" of SpatialLines object meaning I would like
>> to get the same geometry but with different IDs for the Lines.
>
>
> Please use row.names(), so here:
>
> row.names(L1) <- c("c", "d")
>
> If L1 was a SpatialLinesDataFrame, the row.names of the data slot would also
> be updated.
>
> Roger
>
>>
>> For instance using L1 from the SpatialLines example I would like to go
>> from:
>>
>>> str(L1)
>>
>> Formal class 'SpatialLines' [package "sp"] with 3 slots
>>  ..@ lines      :List of 2
>>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>>  .. .. .. ..@ Lines:List of 1
>>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 2 2
>>  .. .. .. ..@ ID   : chr "a"
>>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>>  .. .. .. ..@ Lines:List of 1
>>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 1.5 1
>>  .. .. .. ..@ ID   : chr "b"
>>  ..@ bbox       : num [1:2, 1:2] 1 1 3 3
>>  .. ..- attr(*, "dimnames")=List of 2
>>  .. .. ..$ : chr [1:2] "x" "y"
>>  .. .. ..$ : chr [1:2] "min" "max"
>>  ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot
>>  .. .. ..@ projargs: chr NA
>>
>> to
>>
>>> str(L1)
>>
>> Formal class 'SpatialLines' [package "sp"] with 3 slots
>>  ..@ lines      :List of 2
>>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>>  .. .. .. ..@ Lines:List of 1
>>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 2 2
>>  .. .. .. ..@ ID   : chr "c"
>>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>>  .. .. .. ..@ Lines:List of 1
>>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 1.5 1
>>  .. .. .. ..@ ID   : chr "d"
>>  ..@ bbox       : num [1:2, 1:2] 1 1 3 3
>>  .. ..- attr(*, "dimnames")=List of 2
>>  .. .. ..$ : chr [1:2] "x" "y"
>>  .. .. ..$ : chr [1:2] "min" "max"
>>  ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot
>>  .. .. ..@ projargs: chr NA
>>
>>
>> Is there a way to do so without rebuilding the SpatialLine object with
>> updated Lines objects (same Lines new IDs)? I assume it is possible to
>> update each ID slot directly in L1 somehow.
>>
>> I expected something like
>>
>> sapply(slot(L1, "lines"), function(x) assign(slot(x, "ID"),
>> paste0("copyof",slot(x, "ID")))
>>
>> to do so but I am certainly missing something about assignments in S4
>> objects.
>>
>> Thank you for any help.
>>
>> Best regards,
>>
>> Bastien Tran
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; fax +47 55 95 91 00
> e-mail: Roger.Bivand at nhh.no
>


From Roger.Bivand at nhh.no  Thu Dec 10 11:36:33 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 10 Dec 2015 11:36:33 +0100
Subject: [R-sig-Geo] Change Lines'IDs within a SpatialLines object
In-Reply-To: <CALktS8Vsj8G+86VC9Ub2RL3fb-FFBaTa0vof=kgB3EFxJhzZ1g@mail.gmail.com>
References: <CALktS8WFC6Wck5HAezGoO1nd5gXdYRRK5BfNEBRHDoS4s6cu1w@mail.gmail.com>
	<alpine.LFD.2.20.1512091739220.7116@reclus.nhh.no>
	<CALktS8Vsj8G+86VC9Ub2RL3fb-FFBaTa0vof=kgB3EFxJhzZ1g@mail.gmail.com>
Message-ID: <alpine.LFD.2.20.1512101133220.3021@reclus.nhh.no>

On Thu, 10 Dec 2015, Bastien Tran wrote:

> Thank you very much Roger, it is really helpful.
>
> I had no idea SpatialLines (or SpatialPolygons) objects could be
> manipulated this way. If I may ask, to which extent these objects can
> be treated as data frames (I understand they are not?)? I may have
> missed it but I haven't seen such thing in the documentation.

Yes, in principle Spatial*DataFrames should "behave like" data.frame 
objects, although not do for all methods that work for data.frame objects. 
Crucially, they can almost always be used in the data= argument to 
model fitting functions.

Roger

>
> Incidentally I think your answer made me understand what
> SpatialLinesDataFrame are (I used to think it was a different way to
> store the shape's geometry but it is more about linking
> attributes/variables to shapes ID's if I am correct).  It will serve
> my purpose quite aptly.
>
> Thanks a lot again, I already had more answers than I asked for.
>
> Best regards,
> Bastien
>
> 2015-12-09 17:40 GMT+01:00 Roger Bivand <Roger.Bivand at nhh.no>:
>> On Wed, 9 Dec 2015, Bastien Tran wrote:
>>
>>> Dear all,
>>>
>>> I intend to make "copies" of SpatialLines object meaning I would like
>>> to get the same geometry but with different IDs for the Lines.
>>
>>
>> Please use row.names(), so here:
>>
>> row.names(L1) <- c("c", "d")
>>
>> If L1 was a SpatialLinesDataFrame, the row.names of the data slot would also
>> be updated.
>>
>> Roger
>>
>>>
>>> For instance using L1 from the SpatialLines example I would like to go
>>> from:
>>>
>>>> str(L1)
>>>
>>> Formal class 'SpatialLines' [package "sp"] with 3 slots
>>>  ..@ lines      :List of 2
>>>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>>>  .. .. .. ..@ Lines:List of 1
>>>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>>>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 2 2
>>>  .. .. .. ..@ ID   : chr "a"
>>>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>>>  .. .. .. ..@ Lines:List of 1
>>>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>>>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 1.5 1
>>>  .. .. .. ..@ ID   : chr "b"
>>>  ..@ bbox       : num [1:2, 1:2] 1 1 3 3
>>>  .. ..- attr(*, "dimnames")=List of 2
>>>  .. .. ..$ : chr [1:2] "x" "y"
>>>  .. .. ..$ : chr [1:2] "min" "max"
>>>  ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot
>>>  .. .. ..@ projargs: chr NA
>>>
>>> to
>>>
>>>> str(L1)
>>>
>>> Formal class 'SpatialLines' [package "sp"] with 3 slots
>>>  ..@ lines      :List of 2
>>>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>>>  .. .. .. ..@ Lines:List of 1
>>>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>>>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 2 2
>>>  .. .. .. ..@ ID   : chr "c"
>>>  .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots
>>>  .. .. .. ..@ Lines:List of 1
>>>  .. .. .. .. ..$ :Formal class 'Line' [package "sp"] with 1 slot
>>>  .. .. .. .. .. .. ..@ coords: num [1:3, 1:2] 1 2 3 3 1.5 1
>>>  .. .. .. ..@ ID   : chr "d"
>>>  ..@ bbox       : num [1:2, 1:2] 1 1 3 3
>>>  .. ..- attr(*, "dimnames")=List of 2
>>>  .. .. ..$ : chr [1:2] "x" "y"
>>>  .. .. ..$ : chr [1:2] "min" "max"
>>>  ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot
>>>  .. .. ..@ projargs: chr NA
>>>
>>>
>>> Is there a way to do so without rebuilding the SpatialLine object with
>>> updated Lines objects (same Lines new IDs)? I assume it is possible to
>>> update each ID slot directly in L1 somehow.
>>>
>>> I expected something like
>>>
>>> sapply(slot(L1, "lines"), function(x) assign(slot(x, "ID"),
>>> paste0("copyof",slot(x, "ID")))
>>>
>>> to do so but I am certainly missing something about assignments in S4
>>> objects.
>>>
>>> Thank you for any help.
>>>
>>> Best regards,
>>>
>>> Bastien Tran
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; fax +47 55 95 91 00
>> e-mail: Roger.Bivand at nhh.no
>>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From maogui.hu at gmail.com  Thu Dec 10 11:42:55 2015
From: maogui.hu at gmail.com (maogui.hu)
Date: Thu, 10 Dec 2015 18:42:55 +0800
Subject: [R-sig-Geo] rgeo cannot be loaded on clusters (Redhat enterprise
	5.8)
Message-ID: <2015121018425158014214@gmail.com>

Dear all,
When I tried to load rgeos  on a cluster environment (redhat enterprise 5.8; R 3.1), it succeeded when I makeCluster() on local node, but failed when makeCluster() on different nodes: 

library(parallel)
cl1 <- makeCluster(2)                    # login node
clusterEvalQ(cl1, library(rgeos))    # success

cl2 <- makeCluster(rep("b01n02.cluster.com",2)) 
clusterEvalQ(cl2, library(rgeos))    # failed: "Error in checkForRemoteErrors(lapply(cl, recvResult)): 2 nodes produced errors; first error: package or namespace load failed for geos".

I'm not sure whether it is a bug.



Maogui Hu

	[[alternative HTML version deleted]]


From stephen.stewart85 at gmail.com  Fri Dec 11 08:09:28 2015
From: stephen.stewart85 at gmail.com (Stephen Stewart)
Date: Fri, 11 Dec 2015 18:09:28 +1100
Subject: [R-sig-Geo] Creating Raster Brick - Very Slow
Message-ID: <CAJefdj4oCbAEr_gQ72y1u8u+hafxtwnDucZ_1QTq4JraqOnuGQ@mail.gmail.com>

Hi everyone!

I am currently building 8 raster bricks that are made up of 12,000 raster
files of approximately 500kb each, however it is running incredibly slow!
The code I am using is as follows:

library(raster)
setwd("c:/files")
files <- list.files(getwd(),pattern=".tif")
stack <- stack(files)
brick <- brick(stack,filename = "c:/files/my_raster_brick.tif",format =
"GTiff")

I was wondering if there was a brick equivalent of quick.stack or something
to speed up the process? Alternatively, something outside of R perhaps that
may be more efficient? It is looking like it will take around 50 days per
brick at this rate!

I want to be able to quickly extract vectors of values (using
my_raster_brick[row,col]) so stacks are out of the question as they are way
too slow.

Thanks and have a great break!

Cheers,

Steve

	[[alternative HTML version deleted]]


From markpayneatwork at gmail.com  Fri Dec 11 09:03:55 2015
From: markpayneatwork at gmail.com (Mark R Payne)
Date: Fri, 11 Dec 2015 09:03:55 +0100
Subject: [R-sig-Geo] raster: stackApply problems..
Message-ID: <CAGBzUO_3=s-3rR+ZwRzouBn+VgwJ5NyiBZCwKbCXFRdggN5rxQ@mail.gmail.com>

Hi,

[reposted from r-help]

I am trying to use stackApply() to perform averages over subsets of a
brick. However, I am struggling with the indices argument, and how it
should be interpreted. Here is a simple working example illustrating my
problem:

r <- raster()
r[] <- 1

inp <- brick(r,r,r,r,r,r)*(1:6)
res <- stackApply(inp,c(2,2,3,3,1,1),mean)

Now if we look at the values of each object:

> inp
names       : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6
min values  :       1,       2,       3,       4,       5,       6
max values  :       1,       2,       3,       4,       5,       6

> res
names       : layer.1, layer.2, layer.3
min values  :     3.5,     5.5,     1.5
max values  :     3.5,     5.5,     1.5

Now, the problem is that the names and order of the layers in "res" don't
line up with the indices that I provided. You can do the maths in your head
- e.g. the first two layers of "inp" have values of 1 and 2, so their mean
should be 1.5 - however, this is ending up as layer 3 in "res".

So how should the indices argument be interpreted in this context?

Suggestion: A more intuitive format for the "indices" argument in
stackApply might be as a factor - this way the order is implict and
stackApply ends up working similar to split() or tapply()...

Best wishes,

Mark

	[[alternative HTML version deleted]]


From gerard.heuvelink at wur.nl  Fri Dec 11 15:29:08 2015
From: gerard.heuvelink at wur.nl (Heuvelink, Gerard)
Date: Fri, 11 Dec 2015 14:29:08 +0000
Subject: [R-sig-Geo] FW: gstat now uses Lapack / failing cokriging
In-Reply-To: <618d0599ec514d048f1574d1779c291d@scomp5296.wurnet.nl>
References: <618d0599ec514d048f1574d1779c291d@scomp5296.wurnet.nl>
Message-ID: <bafbd98ceb384537a9fa497d42460faf@scomp5296.wurnet.nl>

Hi Edzer,

I checked the Ver Hoef and Cressie (1993) paper but could not find a reference to deriving the cross-covariance from the cross-variogram as "C(h)=C(0)-gamma(h) with C(0)=max(0, sum of the positive sill values)". I did notice that their paper is mostly about the pseudo cross-variogram (defined in Eq. 9), while we and presumably gstat as well work with the 'normal' cross-variogram (Eq. 8).

I think the proper relation is Cij(h)=Cij(0)-Vij(h), where Cij(h)=E[(Zi(s)-E[Zi(s)])*(Zj(s+h)-E[Zj(s+h)])] is the cross-covariance and Vij(h)=0.5*E[(Zi(s)-Zi(s+h))*(Zj(s)-Zj(s+h))] is the normal cross-variogram. This relation is valid if Z is second-order stationary (conditions 1 and 2 on page 220 of VH&C) and satisfies the symmetric cross-covariance condition (i.e. Cij(h)=Cij(-h), condition 3 on the same page). I would recommend that you implement this relation instead of "C(h)=C(0)-gamma(h) with C(0)=max(0, sum of the positive sill values)".

What I still do not understand is that the 'old' version of gstat did not complain about our Allier example, because using the alternative derivation of the cross-covariance from the cross-variogram produces a kriging system that is not positive-definite.

Gerard

-----Original Message-----
From: R-sig-Geo [mailto:r-sig-geo-bounces at r-project.org] On Behalf Of r-sig-geo-request at r-project.org
Sent: 18 November 2015 12:00
To: r-sig-geo at r-project.org
Subject: R-sig-Geo Digest, Vol 147, Issue 17

Send R-sig-Geo mailing list submissions to
	r-sig-geo at r-project.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://stat.ethz.ch/mailman/listinfo/r-sig-geo
or, via email, send a message with subject or body 'help' to
	r-sig-geo-request at r-project.org

You can reach the person managing the list at
	r-sig-geo-owner at r-project.org

When replying, please edit your Subject line so it is more specific than "Re: Contents of R-sig-Geo digest..."


Today's Topics:

   1. Re: gstat now uses Lapack / failing cokriging (Bruin, Sytze de)
   2. Re: gstat now uses Lapack / failing cokriging (Edzer Pebesma)
   3. issues with NAs when using resample function (Beth Forrestel)
   4. Re: issues with NAs when using resample function (Stephen Stewart)
   5. grass ascii support in the raster package (Cornel Pop)


----------------------------------------------------------------------

Message: 1
Date: Tue, 17 Nov 2015 17:14:22 +0000
From: "Bruin, Sytze de" <sytze.debruin at wur.nl>
To: "'r-sig-geo at r-project.org'" <r-sig-geo at r-project.org>
Subject: Re: [R-sig-Geo] gstat now uses Lapack / failing cokriging
Message-ID: <4d812a6858d942f589a5502e117b1234 at scomp5295.wurnet.nl>
Content-Type: text/plain; charset="us-ascii"

Hi Edzer, thanks for your prompt reply. I tried reproducing your matrix r but got a different result, i.e. a valid covariance matrix. The cross-covariances are different. Using the same example as above, my code is as follows:

library(sp)
library(gstat)

# some data
x <- c(215, 330, 410, 470, 545)
y <- c(230, 310, 330, 340, 365)
fc <- c(0.211, 0.251, 0.281, 0.262, 0.242) por <- c(0.438, 0.457, 0.419, 0.430, 0.468) Allier <- data.frame(x, y, fc, por)
coordinates(Allier) = ~x+y

# gstat object for co-kriging using linear model of co-regionalization g <- gstat(id=c("fc"), formula=fc~1, data=Allier,
            model=vgm(0.00247, "Sph", 480, 0.00166)) g <- gstat(g, id="por", formula=por~1, data=Allier,
            model=vgm(0.00239, "Sph", 480, 0.00118)) g <- gstat(g, id=c("fc", "por"),
            model=vgm(0.00151, "Sph", 480, -0.00124))


dists <- spDists(Allier)
r11 <- variogramLine(g$model$fc, dist_vector = dists, covariance = T)
r12 <- variogramLine(g$model$fc.por, dist_vector = dists, covariance = T)
r22 <- variogramLine(g$model$por, dist_vector = dists, covariance = T) r <- cbind(r11, r12) r <- rbind(r, cbind(r12, r22))

> r
              [,1]         [,2]         [,3]         [,4]         [,5]         [,6]         [,7]
 [1,] 0.0041300000 0.0014193874 0.0008959951 0.0005655821 0.0002240733 0.0002700000 0.0008677227  [2,] 0.0014193874 0.0041300000 0.0018397575 0.0013976206 0.0008790828 0.0008677227 0.0002700000  [3,] 0.0008959951 0.0018397575 0.0041300000 0.0020030001 0.0014238096 0.0005477541 0.0011247100  [4,] 0.0005655821 0.0013976206 0.0020030001 0.0041300000 0.0018652970 0.0003457607 0.0008544158  [5,] 0.0002240733 0.0008790828 0.0014238096 0.0018652970 0.0041300000 0.0001369841 0.0005374150  [6,] 0.0002700000 0.0008677227 0.0005477541 0.0003457607 0.0001369841 0.0035700000 0.0013734154  [7,] 0.0008677227 0.0002700000 0.0011247100 0.0008544158 0.0005374150 0.0013734154 0.0035700000  [8,] 0.0005477541 0.0011247100 0.0002700000 0.0012245061 0.0008704261 0.0008669750 0.0017801702  [9,] 0.0003457607 0.0008544158 0.0012245061 0.0002700000 0.0011403233 0.0005472637 0.0013523535 [10,] 0.0001369841 0.0005374150 0.0008704261 0.0011403233 0.0002700000 0.0002168159 0.0008506105
              [,8]         [,9]        [,10]
 [1,] 0.0005477541 0.0003457607 0.0001369841  [2,] 0.0011247100 0.0008544158 0.0005374150  [3,] 0.0002700000 0.0012245061 0.0008704261  [4,] 0.0012245061 0.0002700000 0.0011403233  [5,] 0.0008704261 0.0011403233 0.0002700000  [6,] 0.0008669750 0.0005472637 0.0002168159  [7,] 0.0017801702 0.0013523535 0.0008506105  [8,] 0.0035700000 0.0019381256 0.0013776943  [9,] 0.0019381256 0.0035700000 0.0018048825 [10,] 0.0013776943 0.0018048825 0.0035700000

> eigen(r)$values
 [1] 0.0124609506 0.0055040132 0.0046425761 0.0035980843 0.0031064016 0.0028989486 0.0028042439  [8] 0.0018107335 0.0010254131 0.0006486352



------------------------------

Message: 2
Date: Tue, 17 Nov 2015 20:38:33 +0100
From: Edzer Pebesma <edzer.pebesma at uni-muenster.de>
To: r-sig-geo at r-project.org
Cc: "Heuvelink, Gerard" <Gerard.Heuvelink at wur.nl>
Subject: Re: [R-sig-Geo] gstat now uses Lapack / failing cokriging
Message-ID: <564B8239.6080401 at uni-muenster.de>
Content-Type: text/plain; charset="windows-1252"


On 17/11/15 18:14, Bruin, Sytze de wrote:
> Hi Edzer, thanks for your prompt reply. I tried reproducing your matrix r but got a different result, i.e. a valid covariance matrix. The cross-covariances are different. Using the same example as above, my code is as follows:
> 
> library(sp)
> library(gstat)
> 
> # some data
> x <- c(215, 330, 410, 470, 545)
> y <- c(230, 310, 330, 340, 365)
> fc <- c(0.211, 0.251, 0.281, 0.262, 0.242) por <- c(0.438, 0.457, 
> 0.419, 0.430, 0.468) Allier <- data.frame(x, y, fc, por)
> coordinates(Allier) = ~x+y
> 
> # gstat object for co-kriging using linear model of co-regionalization 
> g <- gstat(id=c("fc"), formula=fc~1, data=Allier,
>             model=vgm(0.00247, "Sph", 480, 0.00166)) g <- gstat(g, 
> id="por", formula=por~1, data=Allier,
>             model=vgm(0.00239, "Sph", 480, 0.00118)) g <- gstat(g, 
> id=c("fc", "por"),
>             model=vgm(0.00151, "Sph", 480, -0.00124))
> 
> 
> dists <- spDists(Allier)
> r11 <- variogramLine(g$model$fc, dist_vector = dists, covariance = T)
> r12 <- variogramLine(g$model$fc.por, dist_vector = dists, covariance =
> T)
> r22 <- variogramLine(g$model$por, dist_vector = dists, covariance = T) 
> r <- cbind(r11, r12) r <- rbind(r, cbind(r12, r22))
> 
>> r
>               [,1]         [,2]         [,3]         [,4]         [,5]         [,6]         [,7]
>  [1,] 0.0041300000 0.0014193874 0.0008959951 0.0005655821 0.0002240733
> 0.0002700000 0.0008677227  [2,] 0.0014193874 0.0041300000 0.0018397575
> 0.0013976206 0.0008790828 0.0008677227 0.0002700000  [3,] 0.0008959951
> 0.0018397575 0.0041300000 0.0020030001 0.0014238096 0.0005477541
> 0.0011247100  [4,] 0.0005655821 0.0013976206 0.0020030001 0.0041300000
> 0.0018652970 0.0003457607 0.0008544158  [5,] 0.0002240733 0.0008790828
> 0.0014238096 0.0018652970 0.0041300000 0.0001369841 0.0005374150  [6,]
> 0.0002700000 0.0008677227 0.0005477541 0.0003457607 0.0001369841
> 0.0035700000 0.0013734154  [7,] 0.0008677227 0.0002700000 0.0011247100
> 0.0008544158 0.0005374150 0.0013734154 0.0035700000  [8,] 0.0005477541 0.0011247100 0.0002700000 0.0012245061 0.0008704261 0.0008669750 0.0017801702  [9,] 0.0003457607 0.0008544158 0.0012245061 0.0002700000 0.0011403233 0.0005472637 0.0013523535 [10,] 0.0001369841 0.0005374150 0.0008704261 0.0011403233 0.0002700000 0.0002168159 0.0008506105
>               [,8]         [,9]        [,10]
>  [1,] 0.0005477541 0.0003457607 0.0001369841  [2,] 0.0011247100
> 0.0008544158 0.0005374150  [3,] 0.0002700000 0.0012245061 0.0008704261 
> [4,] 0.0012245061 0.0002700000 0.0011403233  [5,] 0.0008704261
> 0.0011403233 0.0002700000  [6,] 0.0008669750 0.0005472637 0.0002168159 
> [7,] 0.0017801702 0.0013523535 0.0008506105  [8,] 0.0035700000
> 0.0019381256 0.0013776943  [9,] 0.0019381256 0.0035700000 0.0018048825 
> [10,] 0.0013776943 0.0018048825 0.0035700000
> 
>> eigen(r)$values
>  [1] 0.0124609506 0.0055040132 0.0046425761 0.0035980843 0.0031064016
> 0.0028989486 0.0028042439  [8] 0.0018107335 0.0010254131 0.0006486352
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

Building upon your earlier example,

predict(g, SpatialPoints(data.frame(x=450, y=350)), debug = 32)

gives you the generalized covariance matrix that is used for the cokriging, which I looked at. gstat computes generalized covariances as
C(0)-gamma(h) with C(0) = max(0, sum of the positive sill values), instead of the sill of all sill values. If one of the sill components is negative, this matters.

I looked in the Ver Hoef & Cressie 1993 paper, but couldn't find out which one is right. Maybe Gerard can also take a look at it; the fix would be trivial.

--
Edzer Pebesma
Institute for Geoinformatics (ifgi),  University of M?nster, Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/
Spatial Statistics Society http://www.spatialstatistics.info

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151117/d7d023d9/attachment-0001.bin>


From r.hijmans at gmail.com  Sat Dec 12 20:55:52 2015
From: r.hijmans at gmail.com (Robert J. Hijmans)
Date: Sat, 12 Dec 2015 11:55:52 -0800
Subject: [R-sig-Geo] raster: stackApply problems..
In-Reply-To: <CAGBzUO_3=s-3rR+ZwRzouBn+VgwJ5NyiBZCwKbCXFRdggN5rxQ@mail.gmail.com>
References: <CAGBzUO_3=s-3rR+ZwRzouBn+VgwJ5NyiBZCwKbCXFRdggN5rxQ@mail.gmail.com>
Message-ID: <CANtt_hyWNboN_Pc4hZMSunc_WODW3LEBruNotZ6zAXU0gGTm1g@mail.gmail.com>

Mark,

Thanks for that clear report. This unexpected order of the layers
returned by stackApply is due to a bug which only reveals itself if
"unique(indices)"  is not sorted from 1 to n.
This has been fixed in version 2.5-1 (you can now also use a factor
variable, but that should not matter). This version should be
available here soon: https://r-forge.r-project.org/R/?group_id=294

Robert


On Fri, Dec 11, 2015 at 12:03 AM, Mark R Payne
<markpayneatwork at gmail.com> wrote:
> Hi,
>
> [reposted from r-help]
>
> I am trying to use stackApply() to perform averages over subsets of a
> brick. However, I am struggling with the indices argument, and how it
> should be interpreted. Here is a simple working example illustrating my
> problem:
>
> r <- raster()
> r[] <- 1
>
> inp <- brick(r,r,r,r,r,r)*(1:6)
> res <- stackApply(inp,c(2,2,3,3,1,1),mean)
>
> Now if we look at the values of each object:
>
>> inp
> names       : layer.1, layer.2, layer.3, layer.4, layer.5, layer.6
> min values  :       1,       2,       3,       4,       5,       6
> max values  :       1,       2,       3,       4,       5,       6
>
>> res
> names       : layer.1, layer.2, layer.3
> min values  :     3.5,     5.5,     1.5
> max values  :     3.5,     5.5,     1.5
>
> Now, the problem is that the names and order of the layers in "res" don't
> line up with the indices that I provided. You can do the maths in your head
> - e.g. the first two layers of "inp" have values of 1 and 2, so their mean
> should be 1.5 - however, this is ending up as layer 3 in "res".
>
> So how should the indices argument be interpreted in this context?
>
> Suggestion: A more intuitive format for the "indices" argument in
> stackApply might be as a factor - this way the order is implict and
> stackApply ends up working similar to split() or tapply()...
>
> Best wishes,
>
> Mark
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From hengl at spatial-analyst.net  Sun Dec 13 16:38:14 2015
From: hengl at spatial-analyst.net (Tomislav Hengl)
Date: Sun, 13 Dec 2015 16:38:14 +0100
Subject: [R-sig-Geo] "Open Source software and web-based apps for soil data",
 session at EGU 2016
Message-ID: <566D90E6.6030700@spatial-analyst.net>


If you daily work with soil data / if you are developer of functions and 
apps for soil data and soil maps, please join us at the EGU 2016 (Vienna 
| Austria | 17?22 April 2016) for a session on:

"Open Source software and web-based apps for soil data"
SSS11 ? Soils Statistics and Informatics
Deadline for receipt of abstracts: 13 Jan 2016, 13:00 CET
URL: http://meetingorganizer.copernicus.org/egu2016/

Conveners:
T. (Tom) Hengl (ISRIC) and D. (Dylan) Beaudette (USDA-NRCS)
Flyer: http://gsif.isric.org/zipped/EGU_session_SSS11.5_ESSI1.6.jpg


From azm at uow.edu.au  Mon Dec 14 01:18:53 2015
From: azm at uow.edu.au (Andrew Zammit Mangion)
Date: Mon, 14 Dec 2015 00:18:53 +0000
Subject: [R-sig-Geo] gstat now uses Lapack / failing cokriging
In-Reply-To: <bafbd98ceb384537a9fa497d42460faf@scomp5296.wurnet.nl>
References: <618d0599ec514d048f1574d1779c291d@scomp5296.wurnet.nl>,
	<bafbd98ceb384537a9fa497d42460faf@scomp5296.wurnet.nl>
Message-ID: <1450052325363.12086@uow.edu.au>

Hi Gerard,
  Just a small comment on the use of pseudo- vs. normal- cross-semivariograms. Normal cross-semivariograms may yield nonoptimal weights for cokriging, as shown in the example of Ver Hoef and Cressie (1993), and I believe it's a nomenclature problem that the 'pseudo' one is that which should be used. A quick look at the gstat documentation I see that the pseudo cross-semivariogram is what is used but maybe Edzer can confirm.

Best,
Andrew

-----------------------------------------------------------------------------
Andrew Zammit Mangion, 
School of Mathematics and Applied Statistics, 
University of Wollongong NSW 2522
------------------------------------------------------------------------------
________________________________________
From: R-sig-Geo <r-sig-geo-bounces at r-project.org> on behalf of Heuvelink, Gerard <gerard.heuvelink at wur.nl>
Sent: 12 December 2015 01:29
To: 'r-sig-geo at r-project.org'
Cc: Bruin, Sytze de
Subject: [R-sig-Geo] FW: gstat now uses Lapack / failing cokriging

Hi Edzer,

I checked the Ver Hoef and Cressie (1993) paper but could not find a reference to deriving the cross-covariance from the cross-variogram as "C(h)=C(0)-gamma(h) with C(0)=max(0, sum of the positive sill values)". I did notice that their paper is mostly about the pseudo cross-variogram (defined in Eq. 9), while we and presumably gstat as well work with the 'normal' cross-variogram (Eq. 8).

I think the proper relation is Cij(h)=Cij(0)-Vij(h), where Cij(h)=E[(Zi(s)-E[Zi(s)])*(Zj(s+h)-E[Zj(s+h)])] is the cross-covariance and Vij(h)=0.5*E[(Zi(s)-Zi(s+h))*(Zj(s)-Zj(s+h))] is the normal cross-variogram. This relation is valid if Z is second-order stationary (conditions 1 and 2 on page 220 of VH&C) and satisfies the symmetric cross-covariance condition (i.e. Cij(h)=Cij(-h), condition 3 on the same page). I would recommend that you implement this relation instead of "C(h)=C(0)-gamma(h) with C(0)=max(0, sum of the positive sill values)".

What I still do not understand is that the 'old' version of gstat did not complain about our Allier example, because using the alternative derivation of the cross-covariance from the cross-variogram produces a kriging system that is not positive-definite.

Gerard

-----Original Message-----
From: R-sig-Geo [mailto:r-sig-geo-bounces at r-project.org] On Behalf Of r-sig-geo-request at r-project.org
Sent: 18 November 2015 12:00
To: r-sig-geo at r-project.org
Subject: R-sig-Geo Digest, Vol 147, Issue 17

Send R-sig-Geo mailing list submissions to
        r-sig-geo at r-project.org

To subscribe or unsubscribe via the World Wide Web, visit
        https://stat.ethz.ch/mailman/listinfo/r-sig-geo
or, via email, send a message with subject or body 'help' to
        r-sig-geo-request at r-project.org

You can reach the person managing the list at
        r-sig-geo-owner at r-project.org

When replying, please edit your Subject line so it is more specific than "Re: Contents of R-sig-Geo digest..."


Today's Topics:

   1. Re: gstat now uses Lapack / failing cokriging (Bruin, Sytze de)
   2. Re: gstat now uses Lapack / failing cokriging (Edzer Pebesma)
   3. issues with NAs when using resample function (Beth Forrestel)
   4. Re: issues with NAs when using resample function (Stephen Stewart)
   5. grass ascii support in the raster package (Cornel Pop)


----------------------------------------------------------------------

Message: 1
Date: Tue, 17 Nov 2015 17:14:22 +0000
From: "Bruin, Sytze de" <sytze.debruin at wur.nl>
To: "'r-sig-geo at r-project.org'" <r-sig-geo at r-project.org>
Subject: Re: [R-sig-Geo] gstat now uses Lapack / failing cokriging
Message-ID: <4d812a6858d942f589a5502e117b1234 at scomp5295.wurnet.nl>
Content-Type: text/plain; charset="us-ascii"

Hi Edzer, thanks for your prompt reply. I tried reproducing your matrix r but got a different result, i.e. a valid covariance matrix. The cross-covariances are different. Using the same example as above, my code is as follows:

library(sp)
library(gstat)

# some data
x <- c(215, 330, 410, 470, 545)
y <- c(230, 310, 330, 340, 365)
fc <- c(0.211, 0.251, 0.281, 0.262, 0.242) por <- c(0.438, 0.457, 0.419, 0.430, 0.468) Allier <- data.frame(x, y, fc, por)
coordinates(Allier) = ~x+y

# gstat object for co-kriging using linear model of co-regionalization g <- gstat(id=c("fc"), formula=fc~1, data=Allier,
            model=vgm(0.00247, "Sph", 480, 0.00166)) g <- gstat(g, id="por", formula=por~1, data=Allier,
            model=vgm(0.00239, "Sph", 480, 0.00118)) g <- gstat(g, id=c("fc", "por"),
            model=vgm(0.00151, "Sph", 480, -0.00124))


dists <- spDists(Allier)
r11 <- variogramLine(g$model$fc, dist_vector = dists, covariance = T)
r12 <- variogramLine(g$model$fc.por, dist_vector = dists, covariance = T)
r22 <- variogramLine(g$model$por, dist_vector = dists, covariance = T) r <- cbind(r11, r12) r <- rbind(r, cbind(r12, r22))

> r
              [,1]         [,2]         [,3]         [,4]         [,5]         [,6]         [,7]
 [1,] 0.0041300000 0.0014193874 0.0008959951 0.0005655821 0.0002240733 0.0002700000 0.0008677227  [2,] 0.0014193874 0.0041300000 0.0018397575 0.0013976206 0.0008790828 0.0008677227 0.0002700000  [3,] 0.0008959951 0.0018397575 0.0041300000 0.0020030001 0.0014238096 0.0005477541 0.0011247100  [4,] 0.0005655821 0.0013976206 0.0020030001 0.0041300000 0.0018652970 0.0003457607 0.0008544158  [5,] 0.0002240733 0.0008790828 0.0014238096 0.0018652970 0.0041300000 0.0001369841 0.0005374150  [6,] 0.0002700000 0.0008677227 0.0005477541 0.0003457607 0.0001369841 0.0035700000 0.0013734154  [7,] 0.0008677227 0.0002700000 0.0011247100 0.0008544158 0.0005374150 0.0013734154 0.0035700000  [8,] 0.0005477541 0.0011247100 0.0002700000 0.0012245061 0.0008704261 0.0008669750 0.0017801702  [9,] 0.0003457607 0.0008544158 0.0012245061 0.0002700000 0.0011403233 0.0005472637 0.0013523535 [10,] 0.0001369841 0.0005374150 0.0008704261 0.0011403233 0.0002700000 0.0002168159 0.0008506105
              [,8]         [,9]        [,10]
 [1,] 0.0005477541 0.0003457607 0.0001369841  [2,] 0.0011247100 0.0008544158 0.0005374150  [3,] 0.0002700000 0.0012245061 0.0008704261  [4,] 0.0012245061 0.0002700000 0.0011403233  [5,] 0.0008704261 0.0011403233 0.0002700000  [6,] 0.0008669750 0.0005472637 0.0002168159  [7,] 0.0017801702 0.0013523535 0.0008506105  [8,] 0.0035700000 0.0019381256 0.0013776943  [9,] 0.0019381256 0.0035700000 0.0018048825 [10,] 0.0013776943 0.0018048825 0.0035700000

> eigen(r)$values
 [1] 0.0124609506 0.0055040132 0.0046425761 0.0035980843 0.0031064016 0.0028989486 0.0028042439  [8] 0.0018107335 0.0010254131 0.0006486352



------------------------------

Message: 2
Date: Tue, 17 Nov 2015 20:38:33 +0100
From: Edzer Pebesma <edzer.pebesma at uni-muenster.de>
To: r-sig-geo at r-project.org
Cc: "Heuvelink, Gerard" <Gerard.Heuvelink at wur.nl>
Subject: Re: [R-sig-Geo] gstat now uses Lapack / failing cokriging
Message-ID: <564B8239.6080401 at uni-muenster.de>
Content-Type: text/plain; charset="windows-1252"


On 17/11/15 18:14, Bruin, Sytze de wrote:
> Hi Edzer, thanks for your prompt reply. I tried reproducing your matrix r but got a different result, i.e. a valid covariance matrix. The cross-covariances are different. Using the same example as above, my code is as follows:
>
> library(sp)
> library(gstat)
>
> # some data
> x <- c(215, 330, 410, 470, 545)
> y <- c(230, 310, 330, 340, 365)
> fc <- c(0.211, 0.251, 0.281, 0.262, 0.242) por <- c(0.438, 0.457,
> 0.419, 0.430, 0.468) Allier <- data.frame(x, y, fc, por)
> coordinates(Allier) = ~x+y
>
> # gstat object for co-kriging using linear model of co-regionalization
> g <- gstat(id=c("fc"), formula=fc~1, data=Allier,
>             model=vgm(0.00247, "Sph", 480, 0.00166)) g <- gstat(g,
> id="por", formula=por~1, data=Allier,
>             model=vgm(0.00239, "Sph", 480, 0.00118)) g <- gstat(g,
> id=c("fc", "por"),
>             model=vgm(0.00151, "Sph", 480, -0.00124))
>
>
> dists <- spDists(Allier)
> r11 <- variogramLine(g$model$fc, dist_vector = dists, covariance = T)
> r12 <- variogramLine(g$model$fc.por, dist_vector = dists, covariance =
> T)
> r22 <- variogramLine(g$model$por, dist_vector = dists, covariance = T)
> r <- cbind(r11, r12) r <- rbind(r, cbind(r12, r22))
>
>> r
>               [,1]         [,2]         [,3]         [,4]         [,5]         [,6]         [,7]
>  [1,] 0.0041300000 0.0014193874 0.0008959951 0.0005655821 0.0002240733
> 0.0002700000 0.0008677227  [2,] 0.0014193874 0.0041300000 0.0018397575
> 0.0013976206 0.0008790828 0.0008677227 0.0002700000  [3,] 0.0008959951
> 0.0018397575 0.0041300000 0.0020030001 0.0014238096 0.0005477541
> 0.0011247100  [4,] 0.0005655821 0.0013976206 0.0020030001 0.0041300000
> 0.0018652970 0.0003457607 0.0008544158  [5,] 0.0002240733 0.0008790828
> 0.0014238096 0.0018652970 0.0041300000 0.0001369841 0.0005374150  [6,]
> 0.0002700000 0.0008677227 0.0005477541 0.0003457607 0.0001369841
> 0.0035700000 0.0013734154  [7,] 0.0008677227 0.0002700000 0.0011247100
> 0.0008544158 0.0005374150 0.0013734154 0.0035700000  [8,] 0.0005477541 0.0011247100 0.0002700000 0.0012245061 0.0008704261 0.0008669750 0.0017801702  [9,] 0.0003457607 0.0008544158 0.0012245061 0.0002700000 0.0011403233 0.0005472637 0.0013523535 [10,] 0.0001369841 0.0005374150 0.0008704261 0.0011403233 0.0002700000 0.0002168159 0.0008506105
>               [,8]         [,9]        [,10]
>  [1,] 0.0005477541 0.0003457607 0.0001369841  [2,] 0.0011247100
> 0.0008544158 0.0005374150  [3,] 0.0002700000 0.0012245061 0.0008704261
> [4,] 0.0012245061 0.0002700000 0.0011403233  [5,] 0.0008704261
> 0.0011403233 0.0002700000  [6,] 0.0008669750 0.0005472637 0.0002168159
> [7,] 0.0017801702 0.0013523535 0.0008506105  [8,] 0.0035700000
> 0.0019381256 0.0013776943  [9,] 0.0019381256 0.0035700000 0.0018048825
> [10,] 0.0013776943 0.0018048825 0.0035700000
>
>> eigen(r)$values
>  [1] 0.0124609506 0.0055040132 0.0046425761 0.0035980843 0.0031064016
> 0.0028989486 0.0028042439  [8] 0.0018107335 0.0010254131 0.0006486352
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

Building upon your earlier example,

predict(g, SpatialPoints(data.frame(x=450, y=350)), debug = 32)

gives you the generalized covariance matrix that is used for the cokriging, which I looked at. gstat computes generalized covariances as
C(0)-gamma(h) with C(0) = max(0, sum of the positive sill values), instead of the sill of all sill values. If one of the sill components is negative, this matters.

I looked in the Ver Hoef & Cressie 1993 paper, but couldn't find out which one is right. Maybe Gerard can also take a look at it; the fix would be trivial.

--
Edzer Pebesma
Institute for Geoinformatics (ifgi),  University of M?nster, Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/
Spatial Statistics Society http://www.spatialstatistics.info

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151117/d7d023d9/attachment-0001.bin>

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From edzer.pebesma at uni-muenster.de  Mon Dec 14 10:13:44 2015
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Mon, 14 Dec 2015 10:13:44 +0100
Subject: [R-sig-Geo] FW: gstat now uses Lapack / failing cokriging
In-Reply-To: <bafbd98ceb384537a9fa497d42460faf@scomp5296.wurnet.nl>
References: <618d0599ec514d048f1574d1779c291d@scomp5296.wurnet.nl>
	<bafbd98ceb384537a9fa497d42460faf@scomp5296.wurnet.nl>
Message-ID: <566E8848.3050104@uni-muenster.de>



On 11/12/15 15:29, Heuvelink, Gerard wrote:
> Hi Edzer,
> 
> I checked the Ver Hoef and Cressie (1993) paper but could not find a reference to deriving the cross-covariance from the cross-variogram as "C(h)=C(0)-gamma(h) with C(0)=max(0, sum of the positive sill values)". I did notice that their paper is mostly about the pseudo cross-variogram (defined in Eq. 9), while we and presumably gstat as well work with the 'normal' cross-variogram (Eq. 8).
> 
> I think the proper relation is Cij(h)=Cij(0)-Vij(h), where Cij(h)=E[(Zi(s)-E[Zi(s)])*(Zj(s+h)-E[Zj(s+h)])] is the cross-covariance and Vij(h)=0.5*E[(Zi(s)-Zi(s+h))*(Zj(s)-Zj(s+h))] is the normal cross-variogram. This relation is valid if Z is second-order stationary (conditions 1 and 2 on page 220 of VH&C) and satisfies the symmetric cross-covariance condition (i.e. Cij(h)=Cij(-h), condition 3 on the same page). I would recommend that you implement this relation instead of "C(h)=C(0)-gamma(h) with C(0)=max(0, sum of the positive sill values)".
> 

OK, I now changed this in 1.1-1 (r-forge); install from

https://r-forge.r-project.org/R/?group_id=378

> What I still do not understand is that the 'old' version of gstat did not complain about our Allier example, because using the alternative derivation of the cross-covariance from the cross-variogram produces a kriging system that is not positive-definite.
> 

Before 1.1-0 gstat used the LDL' decomposition, which "succeeds on some
indefinite matrices" (wikipedia).

I now kept Choleski the default (as in 1.1-0), and made LDL optional
(when set choleski=0 is passed to gstat()) for pre 1.1-0 compatibility; see

https://r-forge.r-project.org/scm/viewvc.php/pkg/tests/allier.R?view=markup&root=gstat

> Gerard
> 
> -----Original Message-----
> From: R-sig-Geo [mailto:r-sig-geo-bounces at r-project.org] On Behalf Of r-sig-geo-request at r-project.org
> Sent: 18 November 2015 12:00
> To: r-sig-geo at r-project.org
> Subject: R-sig-Geo Digest, Vol 147, Issue 17
> 
> Send R-sig-Geo mailing list submissions to
> 	r-sig-geo at r-project.org
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> 	https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> or, via email, send a message with subject or body 'help' to
> 	r-sig-geo-request at r-project.org
> 
> You can reach the person managing the list at
> 	r-sig-geo-owner at r-project.org
> 
> When replying, please edit your Subject line so it is more specific than "Re: Contents of R-sig-Geo digest..."
> 
> 
> Today's Topics:
> 
>    1. Re: gstat now uses Lapack / failing cokriging (Bruin, Sytze de)
>    2. Re: gstat now uses Lapack / failing cokriging (Edzer Pebesma)
>    3. issues with NAs when using resample function (Beth Forrestel)
>    4. Re: issues with NAs when using resample function (Stephen Stewart)
>    5. grass ascii support in the raster package (Cornel Pop)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Tue, 17 Nov 2015 17:14:22 +0000
> From: "Bruin, Sytze de" <sytze.debruin at wur.nl>
> To: "'r-sig-geo at r-project.org'" <r-sig-geo at r-project.org>
> Subject: Re: [R-sig-Geo] gstat now uses Lapack / failing cokriging
> Message-ID: <4d812a6858d942f589a5502e117b1234 at scomp5295.wurnet.nl>
> Content-Type: text/plain; charset="us-ascii"
> 
> Hi Edzer, thanks for your prompt reply. I tried reproducing your matrix r but got a different result, i.e. a valid covariance matrix. The cross-covariances are different. Using the same example as above, my code is as follows:
> 
> library(sp)
> library(gstat)
> 
> # some data
> x <- c(215, 330, 410, 470, 545)
> y <- c(230, 310, 330, 340, 365)
> fc <- c(0.211, 0.251, 0.281, 0.262, 0.242) por <- c(0.438, 0.457, 0.419, 0.430, 0.468) Allier <- data.frame(x, y, fc, por)
> coordinates(Allier) = ~x+y
> 
> # gstat object for co-kriging using linear model of co-regionalization g <- gstat(id=c("fc"), formula=fc~1, data=Allier,
>             model=vgm(0.00247, "Sph", 480, 0.00166)) g <- gstat(g, id="por", formula=por~1, data=Allier,
>             model=vgm(0.00239, "Sph", 480, 0.00118)) g <- gstat(g, id=c("fc", "por"),
>             model=vgm(0.00151, "Sph", 480, -0.00124))
> 
> 
> dists <- spDists(Allier)
> r11 <- variogramLine(g$model$fc, dist_vector = dists, covariance = T)
> r12 <- variogramLine(g$model$fc.por, dist_vector = dists, covariance = T)
> r22 <- variogramLine(g$model$por, dist_vector = dists, covariance = T) r <- cbind(r11, r12) r <- rbind(r, cbind(r12, r22))
> 
>> r
>               [,1]         [,2]         [,3]         [,4]         [,5]         [,6]         [,7]
>  [1,] 0.0041300000 0.0014193874 0.0008959951 0.0005655821 0.0002240733 0.0002700000 0.0008677227  [2,] 0.0014193874 0.0041300000 0.0018397575 0.0013976206 0.0008790828 0.0008677227 0.0002700000  [3,] 0.0008959951 0.0018397575 0.0041300000 0.0020030001 0.0014238096 0.0005477541 0.0011247100  [4,] 0.0005655821 0.0013976206 0.0020030001 0.0041300000 0.0018652970 0.0003457607 0.0008544158  [5,] 0.0002240733 0.0008790828 0.0014238096 0.0018652970 0.0041300000 0.0001369841 0.0005374150  [6,] 0.0002700000 0.0008677227 0.0005477541 0.0003457607 0.0001369841 0.0035700000 0.0013734154  [7,] 0.0008677227 0.0002700000 0.0011247100 0.0008544158 0.0005374150 0.0013734154 0.0035700000  [8,] 0.0005477541 0.0011247100 0.0002700000 0.0012245061 0.0008704261 0.0008669750 0.0017801702  [9,] 0.0003457607 0.0008544158 0.0012245061 0.0002700000 0.0011403233 0.0005472637 0.0013523535 [10,] 0.0001369841 0.0005374150 0.0008704261 0.0011403233 0.0002700000 0.0002168159 0.0008506105
>               [,8]         [,9]        [,10]
>  [1,] 0.0005477541 0.0003457607 0.0001369841  [2,] 0.0011247100 0.0008544158 0.0005374150  [3,] 0.0002700000 0.0012245061 0.0008704261  [4,] 0.0012245061 0.0002700000 0.0011403233  [5,] 0.0008704261 0.0011403233 0.0002700000  [6,] 0.0008669750 0.0005472637 0.0002168159  [7,] 0.0017801702 0.0013523535 0.0008506105  [8,] 0.0035700000 0.0019381256 0.0013776943  [9,] 0.0019381256 0.0035700000 0.0018048825 [10,] 0.0013776943 0.0018048825 0.0035700000
> 
>> eigen(r)$values
>  [1] 0.0124609506 0.0055040132 0.0046425761 0.0035980843 0.0031064016 0.0028989486 0.0028042439  [8] 0.0018107335 0.0010254131 0.0006486352
> 
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Tue, 17 Nov 2015 20:38:33 +0100
> From: Edzer Pebesma <edzer.pebesma at uni-muenster.de>
> To: r-sig-geo at r-project.org
> Cc: "Heuvelink, Gerard" <Gerard.Heuvelink at wur.nl>
> Subject: Re: [R-sig-Geo] gstat now uses Lapack / failing cokriging
> Message-ID: <564B8239.6080401 at uni-muenster.de>
> Content-Type: text/plain; charset="windows-1252"
> 
> 
> On 17/11/15 18:14, Bruin, Sytze de wrote:
>> Hi Edzer, thanks for your prompt reply. I tried reproducing your matrix r but got a different result, i.e. a valid covariance matrix. The cross-covariances are different. Using the same example as above, my code is as follows:
>>
>> library(sp)
>> library(gstat)
>>
>> # some data
>> x <- c(215, 330, 410, 470, 545)
>> y <- c(230, 310, 330, 340, 365)
>> fc <- c(0.211, 0.251, 0.281, 0.262, 0.242) por <- c(0.438, 0.457, 
>> 0.419, 0.430, 0.468) Allier <- data.frame(x, y, fc, por)
>> coordinates(Allier) = ~x+y
>>
>> # gstat object for co-kriging using linear model of co-regionalization 
>> g <- gstat(id=c("fc"), formula=fc~1, data=Allier,
>>             model=vgm(0.00247, "Sph", 480, 0.00166)) g <- gstat(g, 
>> id="por", formula=por~1, data=Allier,
>>             model=vgm(0.00239, "Sph", 480, 0.00118)) g <- gstat(g, 
>> id=c("fc", "por"),
>>             model=vgm(0.00151, "Sph", 480, -0.00124))
>>
>>
>> dists <- spDists(Allier)
>> r11 <- variogramLine(g$model$fc, dist_vector = dists, covariance = T)
>> r12 <- variogramLine(g$model$fc.por, dist_vector = dists, covariance =
>> T)
>> r22 <- variogramLine(g$model$por, dist_vector = dists, covariance = T) 
>> r <- cbind(r11, r12) r <- rbind(r, cbind(r12, r22))
>>
>>> r
>>               [,1]         [,2]         [,3]         [,4]         [,5]         [,6]         [,7]
>>  [1,] 0.0041300000 0.0014193874 0.0008959951 0.0005655821 0.0002240733
>> 0.0002700000 0.0008677227  [2,] 0.0014193874 0.0041300000 0.0018397575
>> 0.0013976206 0.0008790828 0.0008677227 0.0002700000  [3,] 0.0008959951
>> 0.0018397575 0.0041300000 0.0020030001 0.0014238096 0.0005477541
>> 0.0011247100  [4,] 0.0005655821 0.0013976206 0.0020030001 0.0041300000
>> 0.0018652970 0.0003457607 0.0008544158  [5,] 0.0002240733 0.0008790828
>> 0.0014238096 0.0018652970 0.0041300000 0.0001369841 0.0005374150  [6,]
>> 0.0002700000 0.0008677227 0.0005477541 0.0003457607 0.0001369841
>> 0.0035700000 0.0013734154  [7,] 0.0008677227 0.0002700000 0.0011247100
>> 0.0008544158 0.0005374150 0.0013734154 0.0035700000  [8,] 0.0005477541 0.0011247100 0.0002700000 0.0012245061 0.0008704261 0.0008669750 0.0017801702  [9,] 0.0003457607 0.0008544158 0.0012245061 0.0002700000 0.0011403233 0.0005472637 0.0013523535 [10,] 0.0001369841 0.0005374150 0.0008704261 0.0011403233 0.0002700000 0.0002168159 0.0008506105
>>               [,8]         [,9]        [,10]
>>  [1,] 0.0005477541 0.0003457607 0.0001369841  [2,] 0.0011247100
>> 0.0008544158 0.0005374150  [3,] 0.0002700000 0.0012245061 0.0008704261 
>> [4,] 0.0012245061 0.0002700000 0.0011403233  [5,] 0.0008704261
>> 0.0011403233 0.0002700000  [6,] 0.0008669750 0.0005472637 0.0002168159 
>> [7,] 0.0017801702 0.0013523535 0.0008506105  [8,] 0.0035700000
>> 0.0019381256 0.0013776943  [9,] 0.0019381256 0.0035700000 0.0018048825 
>> [10,] 0.0013776943 0.0018048825 0.0035700000
>>
>>> eigen(r)$values
>>  [1] 0.0124609506 0.0055040132 0.0046425761 0.0035980843 0.0031064016
>> 0.0028989486 0.0028042439  [8] 0.0018107335 0.0010254131 0.0006486352
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
> 
> Building upon your earlier example,
> 
> predict(g, SpatialPoints(data.frame(x=450, y=350)), debug = 32)
> 
> gives you the generalized covariance matrix that is used for the cokriging, which I looked at. gstat computes generalized covariances as
> C(0)-gamma(h) with C(0) = max(0, sum of the positive sill values), instead of the sill of all sill values. If one of the sill components is negative, this matters.
> 
> I looked in the Ver Hoef & Cressie 1993 paper, but couldn't find out which one is right. Maybe Gerard can also take a look at it; the fix would be trivial.
> 
> --
> Edzer Pebesma
> Institute for Geoinformatics (ifgi),  University of M?nster, Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
> Journal of Statistical Software:   http://www.jstatsoft.org/
> Computers & Geosciences:   http://elsevier.com/locate/cageo/
> Spatial Statistics Society http://www.spatialstatistics.info
> 
> -------------- next part --------------
> A non-text attachment was scrubbed...
> Name: signature.asc
> Type: application/pgp-signature
> Size: 490 bytes
> Desc: OpenPGP digital signature
> URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151117/d7d023d9/attachment-0001.bin>
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Edzer Pebesma
Institute for Geoinformatics (ifgi),  University of M?nster,
Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/
Spatial Statistics Society http://www.spatialstatistics.info

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151214/453c92a1/attachment.bin>

From gerard.heuvelink at wur.nl  Mon Dec 14 15:54:13 2015
From: gerard.heuvelink at wur.nl (Heuvelink, Gerard)
Date: Mon, 14 Dec 2015 14:54:13 +0000
Subject: [R-sig-Geo] gstat now uses Lapack / failing cokriging
Message-ID: <60ce3e5730b94387a5703a35a2048fee@scomp5296.wurnet.nl>

Hi Andrew and Edzer,

I checked the gstat manual: on page 70 it writes that it uses the 'classic' normal cross-variogram when the two variables have the same number of observations and identical coordinates and order, and that in all other cases it uses the pseudo cross-variogram. In the example that Sytze and I used it must then have used the normal cross-variogram.

Personally I am not in favour of using the pseudo cross-variogram because it messes up the measurement units (it is defined as Gij(sk-sl) = 0.5*E[(Zi(sk) - Zj(sl))^2], where for example Zi might be rainfall in mm and Zj temperature in Kelvin), but I also see the problems with the normal cross-variogram in that it cannot reproduce non-symmetric cross-covariance functions and can only be estimated from paired observations at locations where both variables were measured. Note that the suboptimal performance when using the normal cross-variogram as reported in Ver Hoef and Cressie only occurs when the cross-covariance function is non-symmetric (i.e. when in their example parameter DELTA is not equal to zero).

When gstat estimates the pseudo cross-variogram then I think that it should derive from it the cross-covariances as Cij(sk-sl) = 0.5*Cii(0) + 0.5*Cjj(0) - Gij(sk-sl) (Ver Hoef and Cressie page 234), i.e. it should use the average of the sill values of the two variograms and not max(0, sum of the positive sill values).

Gerard

-----Original Message-----
From: R-sig-Geo [mailto:r-sig-geo-bounces at r-project.org] On Behalf Of r-sig-geo-request at r-project.org
Sent: 14 December 2015 12:00
To: r-sig-geo at r-project.org
Subject: R-sig-Geo Digest, Vol 148, Issue 12

Send R-sig-Geo mailing list submissions to
	r-sig-geo at r-project.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://stat.ethz.ch/mailman/listinfo/r-sig-geo
or, via email, send a message with subject or body 'help' to
	r-sig-geo-request at r-project.org

You can reach the person managing the list at
	r-sig-geo-owner at r-project.org

When replying, please edit your Subject line so it is more specific than "Re: Contents of R-sig-Geo digest..."


Today's Topics:

   1. "Open Source software and web-based apps for soil data",
      session at EGU 2016 (Tomislav Hengl)
   2. Re: gstat now uses Lapack / failing cokriging
      (Andrew Zammit Mangion)
   3. Re: FW: gstat now uses Lapack / failing cokriging (Edzer Pebesma)


------------------------------

Message: 2
Date: Mon, 14 Dec 2015 00:18:53 +0000
From: Andrew Zammit Mangion <azm at uow.edu.au>
To: "'r-sig-geo at r-project.org'" <r-sig-geo at r-project.org>
Subject: Re: [R-sig-Geo] gstat now uses Lapack / failing cokriging
Message-ID: <1450052325363.12086 at uow.edu.au>
Content-Type: text/plain; charset="iso-8859-1"

Hi Gerard,
  Just a small comment on the use of pseudo- vs. normal- cross-semivariograms. Normal cross-semivariograms may yield nonoptimal weights for cokriging, as shown in the example of Ver Hoef and Cressie (1993), and I believe it's a nomenclature problem that the 'pseudo' one is that which should be used. A quick look at the gstat documentation I see that the pseudo cross-semivariogram is what is used but maybe Edzer can confirm.

Best,
Andrew

-----------------------------------------------------------------------------
Andrew Zammit Mangion, 
School of Mathematics and Applied Statistics, 
University of Wollongong NSW 2522
------------------------------------------------------------------------------
________________________________________
From: R-sig-Geo <r-sig-geo-bounces at r-project.org> on behalf of Heuvelink, Gerard <gerard.heuvelink at wur.nl>
Sent: 12 December 2015 01:29
To: 'r-sig-geo at r-project.org'
Cc: Bruin, Sytze de
Subject: [R-sig-Geo] FW: gstat now uses Lapack / failing cokriging

Hi Edzer,

I checked the Ver Hoef and Cressie (1993) paper but could not find a reference to deriving the cross-covariance from the cross-variogram as "C(h)=C(0)-gamma(h) with C(0)=max(0, sum of the positive sill values)". I did notice that their paper is mostly about the pseudo cross-variogram (defined in Eq. 9), while we and presumably gstat as well work with the 'normal' cross-variogram (Eq. 8).

I think the proper relation is Cij(h)=Cij(0)-Vij(h), where Cij(h)=E[(Zi(s)-E[Zi(s)])*(Zj(s+h)-E[Zj(s+h)])] is the cross-covariance and Vij(h)=0.5*E[(Zi(s)-Zi(s+h))*(Zj(s)-Zj(s+h))] is the normal cross-variogram. This relation is valid if Z is second-order stationary (conditions 1 and 2 on page 220 of VH&C) and satisfies the symmetric cross-covariance condition (i.e. Cij(h)=Cij(-h), condition 3 on the same page). I would recommend that you implement this relation instead of "C(h)=C(0)-gamma(h) with C(0)=max(0, sum of the positive sill values)".

What I still do not understand is that the 'old' version of gstat did not complain about our Allier example, because using the alternative derivation of the cross-covariance from the cross-variogram produces a kriging system that is not positive-definite.

Gerard


From nickeubank at gmail.com  Mon Dec 14 19:09:01 2015
From: nickeubank at gmail.com (Nick Eubank)
Date: Mon, 14 Dec 2015 18:09:01 +0000
Subject: [R-sig-Geo] R GIS Tutorials
Message-ID: <CAFWQgOm17GW8Esn3NXodWeo2-FQfDsqTKW9z226bLX=_Jo0xcQ@mail.gmail.com>

Hello All!

We recently converted our graduate class on spatial analysis in political
science from ArcGIS to R, and in the process wrote a full set of
stand-alone tutorials I wanted to share: http://www.nickeubank.com/gis-in-r/

The tutorials are all Creative Commons share-and-share-alike licensed, so
please feel free to use and modify as you see fit! You can also find the
source docs on github at https://github.com/nickeubank/gis_in_r , so if you
find anything you think could be improved (and are familiar with git),
please pass it back as a pull-request so I can add it for future users!
This is based on my own experiences and those of colleagues, so I'm sure
there's much collective wisdom that could still be added to improve the
materials.

Thanks!

Nick

	[[alternative HTML version deleted]]


From hengl at spatial-analyst.net  Tue Dec 15 18:57:35 2015
From: hengl at spatial-analyst.net (Tomislav Hengl)
Date: Tue, 15 Dec 2015 18:57:35 +0100
Subject: [R-sig-Geo] Error in trim(as.character(x)) in raster::projectRaster
Message-ID: <20151215185735.Horde.908ETIlj689YajujGeV-zD9@lin18.mojsite.com>


I am getting some problems with using the raster::projectRaster  
function (trim function within that function). The example from  
package does not run any more:

pr1 <- projectRaster(r, crs=newproj)

Loading required package: rgdal
rgdal: version: 1.1-1, (SVN revision 572)
  Geospatial Data Abstraction Library extensions to R successfully loaded
  Loaded GDAL runtime: GDAL 1.11.2, released 2015/02/10
  Path to GDAL shared files: C:/Program Files/R/R-devel/library/rgdal/gdal
  GDAL does not use iconv for recoding strings.
  Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491]
  Path to PROJ.4 shared files: C:/Program Files/R/R-devel/library/rgdal/proj
  Linking to sp version: 1.2-1
Error in trim(as.character(x)) :
   error in evaluating the argument 'x' in selecting a method for  
function 'trim': Error in as.vector(ln) : argument "mode" is missing,  
with no default

My session info:

R Under development (unstable) (2015-12-14 r69775)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

locale:
[1] LC_COLLATE=Dutch_Netherlands.1252  LC_CTYPE=Dutch_Netherlands.1252  
    LC_MONETARY=Dutch_Netherlands.1252
[4] LC_NUMERIC=C                       LC_TIME=Dutch_Netherlands.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] rgdal_1.1-1   raster_2.4-30 sp_1.2-1

loaded via a namespace (and not attached):
[1] tools_3.3.0     Rcpp_0.12.2     grid_3.3.0      lattice_0.20-33


From strimas at zoology.ubc.ca  Tue Dec 15 19:53:00 2015
From: strimas at zoology.ubc.ca (Matt Strimas-Mackey)
Date: Tue, 15 Dec 2015 10:53:00 -0800
Subject: [R-sig-Geo] Excessive whitespace in saved images from sp::plot()
Message-ID: <CAHb9yCDhy1P0pEvHGJV+9938G8HYDzcg9B5zxVSDTp=ovRZqqw@mail.gmail.com>

I'm trying to plot simple SpatialPolygons objects using the basic
plot() command from sp and save these as png or svg. For context, this
is part of a rmarkdown report that will eventually go on the web, so
the saving of images will be done automatically via knitr. Since this
involves images, I've put the code and images online:
https://github.com/mstrimas/mstrimas.github.io/tree/master/_source/print-problems

My problem is excessive whitespace around the plots:

library(sp)
par(mar=c(0, 0, 0, 0))
png('png-dev-400x400.png', width = 400, height = 400)
plot(square, axes = F)
dev.off()

But only when saving with a direct call to png() or svg(). Plotting,
then saving interactively via RStudio or with

dev.print(png, 'dev-print-400x400.png', width = 400, height = 400)

yields a nice plot with no whitespace.

I only encounter this problem when plotting spatial objects, which is
why I'm posting here. Since these are simple polygons with no
attributes, I'd prefer to avoid using spplot(). Also, I've tried this
on 2 machines: a Mac and a PC running Ubuntu, in both cases running
the latest version of R and the sp package.

Thanks!

M


From mdsumner at gmail.com  Tue Dec 15 20:48:25 2015
From: mdsumner at gmail.com (Michael Sumner)
Date: Wed, 16 Dec 2015 06:48:25 +1100
Subject: [R-sig-Geo] Excessive whitespace in saved images from sp::plot()
In-Reply-To: <CAHb9yCDhy1P0pEvHGJV+9938G8HYDzcg9B5zxVSDTp=ovRZqqw@mail.gmail.com>
References: <CAHb9yCDhy1P0pEvHGJV+9938G8HYDzcg9B5zxVSDTp=ovRZqqw@mail.gmail.com>
Message-ID: <CAAcGz9_M44knJB-DKW05e7CR8v1Fyd3Y13c7NkFd2-uLSC+CEA@mail.gmail.com>

Try changing the aspect ratio, asp="" from memory to 'fill the device'. You
might also need par(xpd=NA) or similar to remove the axis buffering.

R and sp generally plot within a figure space, rendering to a "world space"
within a file is not directly supported (writeGDAL and writeRaster do this,
but not for rendering 'layers'). But with careful handling you can do it.

I think external georeferencing would be required for downstream spatial
use, but I am hoping to be corrected on that point(?)

Cheers, Mike

On Wednesday, December 16, 2015, Matt Strimas-Mackey <strimas at zoology.ubc.ca>
wrote:
> I'm trying to plot simple SpatialPolygons objects using the basic
> plot() command from sp and save these as png or svg. For context, this
> is part of a rmarkdown report that will eventually go on the web, so
> the saving of images will be done automatically via knitr. Since this
> involves images, I've put the code and images online:
>
https://github.com/mstrimas/mstrimas.github.io/tree/master/_source/print-problems
>
> My problem is excessive whitespace around the plots:
>
> library(sp)
> par(mar=c(0, 0, 0, 0))
> png('png-dev-400x400.png', width = 400, height = 400)
> plot(square, axes = F)
> dev.off()
>
> But only when saving with a direct call to png() or svg(). Plotting,
> then saving interactively via RStudio or with
>
> dev.print(png, 'dev-print-400x400.png', width = 400, height = 400)
>
> yields a nice plot with no whitespace.
>
> I only encounter this problem when plotting spatial objects, which is
> why I'm posting here. Since these are simple polygons with no
> attributes, I'd prefer to avoid using spplot(). Also, I've tried this
> on 2 machines: a Mac and a PC running Ubuntu, in both cases running
> the latest version of R and the sp package.
>
> Thanks!
>
> M
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com

	[[alternative HTML version deleted]]


From tech_dev at wildintellect.com  Tue Dec 15 21:40:14 2015
From: tech_dev at wildintellect.com (Alex M)
Date: Tue, 15 Dec 2015 12:40:14 -0800
Subject: [R-sig-Geo] Creating Raster Brick - Very Slow
In-Reply-To: <CAJefdj4oCbAEr_gQ72y1u8u+hafxtwnDucZ_1QTq4JraqOnuGQ@mail.gmail.com>
References: <CAJefdj4oCbAEr_gQ72y1u8u+hafxtwnDucZ_1QTq4JraqOnuGQ@mail.gmail.com>
Message-ID: <56707AAE.5060503@wildintellect.com>

Just to be sure, before suggesting possible solutions, you have 12,000
rasters of identical extent (e.g. bands or time slices of the same place)?

Thanks,
Alex

On 12/10/2015 11:09 PM, Stephen Stewart wrote:
> Hi everyone!
> 
> I am currently building 8 raster bricks that are made up of 12,000 raster
> files of approximately 500kb each, however it is running incredibly slow!
> The code I am using is as follows:
> 
> library(raster)
> setwd("c:/files")
> files <- list.files(getwd(),pattern=".tif")
> stack <- stack(files)
> brick <- brick(stack,filename = "c:/files/my_raster_brick.tif",format =
> "GTiff")
> 
> I was wondering if there was a brick equivalent of quick.stack or something
> to speed up the process? Alternatively, something outside of R perhaps that
> may be more efficient? It is looking like it will take around 50 days per
> brick at this rate!
> 
> I want to be able to quickly extract vectors of values (using
> my_raster_brick[row,col]) so stacks are out of the question as they are way
> too slow.
> 
> Thanks and have a great break!
> 
> Cheers,
> 
> Steve
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>


From strimas at zoology.ubc.ca  Tue Dec 15 23:22:27 2015
From: strimas at zoology.ubc.ca (Matt Strimas-Mackey)
Date: Tue, 15 Dec 2015 14:22:27 -0800
Subject: [R-sig-Geo] Excessive whitespace in saved images from sp::plot()
In-Reply-To: <CAAcGz9_M44knJB-DKW05e7CR8v1Fyd3Y13c7NkFd2-uLSC+CEA@mail.gmail.com>
References: <CAHb9yCDhy1P0pEvHGJV+9938G8HYDzcg9B5zxVSDTp=ovRZqqw@mail.gmail.com>
	<CAAcGz9_M44knJB-DKW05e7CR8v1Fyd3Y13c7NkFd2-uLSC+CEA@mail.gmail.com>
Message-ID: <CAHb9yCC1ZncPnwA08QthVkM==tqjz9xcfp3XRfwerZvNXv2jpA@mail.gmail.com>

Thanks for the suggestions.

Here's what I tried based on what you said:
par(mar=c(0, 0, 0, 0))
png('plot.png')
plot(square, axes = F, lwd = 2, asp = "", xpd = NA)
dev.off()

Unfortunately, this didn't make any difference...  Any other thoughts?


Thanks!

M

On Tue, Dec 15, 2015 at 11:48 AM, Michael Sumner <mdsumner at gmail.com> wrote:

> Try changing the aspect ratio, asp="" from memory to 'fill the device'.
> You might also need par(xpd=NA) or similar to remove the axis buffering.
>
> R and sp generally plot within a figure space, rendering to a "world
> space" within a file is not directly supported (writeGDAL and writeRaster
> do this, but not for rendering 'layers'). But with careful handling you can
> do it.
>
> I think external georeferencing would be required for downstream spatial
> use, but I am hoping to be corrected on that point(?)
>
> Cheers, Mike
>
>
> On Wednesday, December 16, 2015, Matt Strimas-Mackey <
> strimas at zoology.ubc.ca> wrote:
> > I'm trying to plot simple SpatialPolygons objects using the basic
> > plot() command from sp and save these as png or svg. For context, this
> > is part of a rmarkdown report that will eventually go on the web, so
> > the saving of images will be done automatically via knitr. Since this
> > involves images, I've put the code and images online:
> >
> https://github.com/mstrimas/mstrimas.github.io/tree/master/_source/print-problems
> >
> > My problem is excessive whitespace around the plots:
> >
> > library(sp)
> > par(mar=c(0, 0, 0, 0))
> > png('png-dev-400x400.png', width = 400, height = 400)
> > plot(square, axes = F)
> > dev.off()
> >
> > But only when saving with a direct call to png() or svg(). Plotting,
> > then saving interactively via RStudio or with
> >
> > dev.print(png, 'dev-print-400x400.png', width = 400, height = 400)
> >
> > yields a nice plot with no whitespace.
> >
> > I only encounter this problem when plotting spatial objects, which is
> > why I'm posting here. Since these are simple polygons with no
> > attributes, I'd prefer to avoid using spplot(). Also, I've tried this
> > on 2 machines: a Mac and a PC running Ubuntu, in both cases running
> > the latest version of R and the sp package.
> >
> > Thanks!
> >
> > M
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >
>
> --
> Michael Sumner
> Software and Database Engineer
> Australian Antarctic Division
> Hobart, Australia
> e-mail: mdsumner at gmail.com
>

	[[alternative HTML version deleted]]


From mdsumner at gmail.com  Tue Dec 15 23:45:08 2015
From: mdsumner at gmail.com (Michael Sumner)
Date: Wed, 16 Dec 2015 09:45:08 +1100
Subject: [R-sig-Geo] Creating Raster Brick - Very Slow
In-Reply-To: <CAJefdj4oCbAEr_gQ72y1u8u+hafxtwnDucZ_1QTq4JraqOnuGQ@mail.gmail.com>
References: <CAJefdj4oCbAEr_gQ72y1u8u+hafxtwnDucZ_1QTq4JraqOnuGQ@mail.gmail.com>
Message-ID: <CAAcGz99jSeUsUxxZ1P+q-j6rEGnV4_6rJKJcGUCm8NwsHXhe-Q@mail.gmail.com>

On Friday, December 11, 2015, Stephen Stewart <stephen.stewart85 at gmail.com>
wrote:
> Hi everyone!
>
> I am currently building 8 raster bricks that are made up of 12,000 raster
> files of approximately 500kb each, however it is running incredibly slow!

Try writing to a different physical device (hard drive) than the one you
read from, or use readAll to get the whole stack in memory before the write
step.

M
> The code I am using is as follows:
>
> library(raster)
> setwd("c:/files")
> files <- list.files(getwd(),pattern=".tif")
> stack <- stack(files)
> brick <- brick(stack,filename = "c:/files/my_raster_brick.tif",format =
> "GTiff")
>
> I was wondering if there was a brick equivalent of quick.stack or
something
> to speed up the process? Alternatively, something outside of R perhaps
that
> may be more efficient? It is looking like it will take around 50 days per
> brick at this rate!
>
> I want to be able to quickly extract vectors of values (using
> my_raster_brick[row,col]) so stacks are out of the question as they are
way
> too slow.
>
> Thanks and have a great break!
>
> Cheers,
>
> Steve
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com

	[[alternative HTML version deleted]]


From tim.appelhans at gmail.com  Wed Dec 16 11:29:13 2015
From: tim.appelhans at gmail.com (Tim Appelhans)
Date: Wed, 16 Dec 2015 11:29:13 +0100
Subject: [R-sig-Geo] mapview 1.0.0
Message-ID: <56713CF9.2080509@gmail.com>

Dear all,

we are happy to announce that mapview 1.0.0 has been released on CRAN.
Together with Florian Detsch (R, Rcpp), Christoph Reudenbach (js) and 
Stefan Woellauer (js) we have put together a powerful tool for 
on-the-fly mapping of spatial data during the workflow.

In addition to the existing functionality described in my earlier mail, 
we have:

1) made the whole code a lot faster, so rendering should be much quicker 
now.

2) added "big data" support for vector data.
It is now possible to view even very large vector objects without any 
hassle.
This is possible due to the inclusion of special .js functionality. This 
means that when working with large Spatial* objects mapview does not use 
leaflet for R, but its own functions. This also means that leaflet 
integration is not possible for big data. In a nutshell, big data 
support is achieved by separating drawing of the geometries and parsing 
of the underlying data. This means that in order to query the attributes 
of your objects you will need to zoom in a bit. For polygons and lines 
the features will turn magenta once they are queryable, for points the 
query-radius around the points is restricted quite a bit.
As an example, on my machine (ubuntu 14.04 64-bit, 7.5 GB RAM, Intel? 
Core? i5-4300U CPU @ 1.90GHz ? 4, 500GB SSD) 2.1 Mio. points take about 
30 sec. to render and the interactive behaviour of zooming and panning 
is smooth and feels just like dealing with only a handful of points.

For those who are interested in trying yourself, here's a bit of code to 
create an artificial SpatialPointsDataFrame with a bit more than 2.1 
Mio. points (to change the size simply change the number of repeats in 
the first line. BE AWARE THAT FROM ABOUT 5 MIO POINTS THINGS MAY WELL 
BREAK!!



library(ggplot2)
library(rgdal)
library(mapview)

data(diamonds)

### blow diamonds up a bit
big <- diamonds[rep(seq_len(nrow(diamonds)), 40), ]
big$cut <- as.character(big$cut)
big$color <- as.character(big$color)
big$clarity <- as.character(big$clarity)

### provide some random positions
big$x <- rnorm(nrow(big), 0, 10)
big$y <- rnorm(nrow(big), 0, 10)
coordinates(big) <- ~x+y
proj4string(big) <- CRS("+init=epsg:4326")

### view it
mapview(big)




3) added a spplot() method to produce a static version of the 
interactive map. Note, this feature is in its infancy so only has very 
limited flexibility at the moment.

4) added mapviewOptions(), similar to rasterOptions() to set and 
retrieve options session-wide. This means you can now easily set your 
favorite background maps or color schemes (among other things) permanently.

5) added a couple of convenient functions:
    slideview() - to compare two images in a before-after fashion 
(similar to wxGUI Map Swipe in GRASS)
    plainview() - an image viewer to view Raster* objects without the 
map background. This means that you can view rather large rasters with 
arbitrary CRS without too much hassle as no re-projection is necessary.

6) added an alias function "mapview()" with a small "v" as typing was 
quite confusing before. Now it's mapview with a small v all the way from 
loading the package to viewing the data.

Unfortunately we have also BROKEN BACKWARD-COMPATIBILITY.
Due to the inclusion of lattice (levelplot) logic when dealing with 
col.regions, we decided to make argument naming more similar to existing 
spatial graphics standards. Therefore, some argument names have changed:
    - "layer.opacity" is now "alpha.regions"
    - "weight" is now "cex" for points and "lwd" for lines
We hope this does not cause too many inconveniences.

These are the major enhancement/changes of mapview in this release.

We have also updated the demo at

http://environmentalinformatics-marburg.github.io/web-presentations/20150723_mapView.html


As always, don't hesitate to contact us for questions, feedback and/or 
suggestions.

Formal bug reports and feature requests should be filed at
https://github.com/environmentalinformatics-marburg/mapview/issues

Best,
Tim, Flo, Chris and Stefan


-- 
#####################################
Tim Appelhans
Department of Geography
Environmental Informatics
Philipps Universit?t Marburg
Deutschhausstra?e 12
Raum 00A08
35032 Marburg (Paketpost: 35037 Marburg)
Germany

Tel +49 (0) 6421 28-25957

http://environmentalinformatics-marburg.de/


From strimas at zoology.ubc.ca  Wed Dec 16 19:35:29 2015
From: strimas at zoology.ubc.ca (Matt Strimas-Mackey)
Date: Wed, 16 Dec 2015 10:35:29 -0800
Subject: [R-sig-Geo] Excessive whitespace in saved images from sp::plot()
In-Reply-To: <CAHb9yCC1ZncPnwA08QthVkM==tqjz9xcfp3XRfwerZvNXv2jpA@mail.gmail.com>
References: <CAHb9yCDhy1P0pEvHGJV+9938G8HYDzcg9B5zxVSDTp=ovRZqqw@mail.gmail.com>
	<CAAcGz9_M44knJB-DKW05e7CR8v1Fyd3Y13c7NkFd2-uLSC+CEA@mail.gmail.com>
	<CAHb9yCC1ZncPnwA08QthVkM==tqjz9xcfp3XRfwerZvNXv2jpA@mail.gmail.com>
Message-ID: <CAHb9yCBvO91+0eCpar3q0Czy97JmzczjWzhUV+2_yoWzJ98_Hg@mail.gmail.com>

After messing around with parameters aimlessly I managed to solve my
problem.

The key seems to be that par(mar=c(0, 0, 0, 0)) needs to come AFTER
png('plot.png')
as in:
png('plot.png')
par(mar=c(0, 0, 0, 0))
plot(square, axes = F, lwd = 2, asp = "", xpd = NA)
dev.off()

I have no idea why this is the case, but it works!

M

On Tue, Dec 15, 2015 at 2:22 PM, Matt Strimas-Mackey <strimas at zoology.ubc.ca
> wrote:

> Thanks for the suggestions.
>
> Here's what I tried based on what you said:
> par(mar=c(0, 0, 0, 0))
> png('plot.png')
> plot(square, axes = F, lwd = 2, asp = "", xpd = NA)
> dev.off()
>
> Unfortunately, this didn't make any difference...  Any other thoughts?
>
>
> Thanks!
>
> M
>
> On Tue, Dec 15, 2015 at 11:48 AM, Michael Sumner <mdsumner at gmail.com>
> wrote:
>
>> Try changing the aspect ratio, asp="" from memory to 'fill the device'.
>> You might also need par(xpd=NA) or similar to remove the axis buffering.
>>
>> R and sp generally plot within a figure space, rendering to a "world
>> space" within a file is not directly supported (writeGDAL and writeRaster
>> do this, but not for rendering 'layers'). But with careful handling you can
>> do it.
>>
>> I think external georeferencing would be required for downstream spatial
>> use, but I am hoping to be corrected on that point(?)
>>
>> Cheers, Mike
>>
>>
>> On Wednesday, December 16, 2015, Matt Strimas-Mackey <
>> strimas at zoology.ubc.ca> wrote:
>> > I'm trying to plot simple SpatialPolygons objects using the basic
>> > plot() command from sp and save these as png or svg. For context, this
>> > is part of a rmarkdown report that will eventually go on the web, so
>> > the saving of images will be done automatically via knitr. Since this
>> > involves images, I've put the code and images online:
>> >
>> https://github.com/mstrimas/mstrimas.github.io/tree/master/_source/print-problems
>> >
>> > My problem is excessive whitespace around the plots:
>> >
>> > library(sp)
>> > par(mar=c(0, 0, 0, 0))
>> > png('png-dev-400x400.png', width = 400, height = 400)
>> > plot(square, axes = F)
>> > dev.off()
>> >
>> > But only when saving with a direct call to png() or svg(). Plotting,
>> > then saving interactively via RStudio or with
>> >
>> > dev.print(png, 'dev-print-400x400.png', width = 400, height = 400)
>> >
>> > yields a nice plot with no whitespace.
>> >
>> > I only encounter this problem when plotting spatial objects, which is
>> > why I'm posting here. Since these are simple polygons with no
>> > attributes, I'd prefer to avoid using spplot(). Also, I've tried this
>> > on 2 machines: a Mac and a PC running Ubuntu, in both cases running
>> > the latest version of R and the sp package.
>> >
>> > Thanks!
>> >
>> > M
>> >
>> > _______________________________________________
>> > R-sig-Geo mailing list
>> > R-sig-Geo at r-project.org
>> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>> >
>>
>> --
>> Michael Sumner
>> Software and Database Engineer
>> Australian Antarctic Division
>> Hobart, Australia
>> e-mail: mdsumner at gmail.com
>>
>
>

	[[alternative HTML version deleted]]


From edzer.pebesma at uni-muenster.de  Wed Dec 16 22:20:32 2015
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Wed, 16 Dec 2015 22:20:32 +0100
Subject: [R-sig-Geo] Excessive whitespace in saved images from sp::plot()
In-Reply-To: <CAHb9yCBvO91+0eCpar3q0Czy97JmzczjWzhUV+2_yoWzJ98_Hg@mail.gmail.com>
References: <CAHb9yCDhy1P0pEvHGJV+9938G8HYDzcg9B5zxVSDTp=ovRZqqw@mail.gmail.com>
	<CAAcGz9_M44knJB-DKW05e7CR8v1Fyd3Y13c7NkFd2-uLSC+CEA@mail.gmail.com>
	<CAHb9yCC1ZncPnwA08QthVkM==tqjz9xcfp3XRfwerZvNXv2jpA@mail.gmail.com>
	<CAHb9yCBvO91+0eCpar3q0Czy97JmzczjWzhUV+2_yoWzJ98_Hg@mail.gmail.com>
Message-ID: <5671D5A0.7020809@uni-muenster.de>



On 16/12/15 19:35, Matt Strimas-Mackey wrote:
> After messing around with parameters aimlessly I managed to solve my
> problem.
> 
> The key seems to be that par(mar=c(0, 0, 0, 0)) needs to come AFTER
> png('plot.png')
> as in:
> png('plot.png')
> par(mar=c(0, 0, 0, 0))
> plot(square, axes = F, lwd = 2, asp = "", xpd = NA)
> dev.off()
> 
> I have no idea why this is the case, but it works!

https://en.wikipedia.org/wiki/Side_effect_(computer_science)

> 
> M
> 
> On Tue, Dec 15, 2015 at 2:22 PM, Matt Strimas-Mackey <strimas at zoology.ubc.ca
>> wrote:
> 
>> Thanks for the suggestions.
>>
>> Here's what I tried based on what you said:
>> par(mar=c(0, 0, 0, 0))
>> png('plot.png')
>> plot(square, axes = F, lwd = 2, asp = "", xpd = NA)
>> dev.off()
>>
>> Unfortunately, this didn't make any difference...  Any other thoughts?
>>
>>
>> Thanks!
>>
>> M
>>
>> On Tue, Dec 15, 2015 at 11:48 AM, Michael Sumner <mdsumner at gmail.com>
>> wrote:
>>
>>> Try changing the aspect ratio, asp="" from memory to 'fill the device'.
>>> You might also need par(xpd=NA) or similar to remove the axis buffering.
>>>
>>> R and sp generally plot within a figure space, rendering to a "world
>>> space" within a file is not directly supported (writeGDAL and writeRaster
>>> do this, but not for rendering 'layers'). But with careful handling you can
>>> do it.
>>>
>>> I think external georeferencing would be required for downstream spatial
>>> use, but I am hoping to be corrected on that point(?)
>>>
>>> Cheers, Mike
>>>
>>>
>>> On Wednesday, December 16, 2015, Matt Strimas-Mackey <
>>> strimas at zoology.ubc.ca> wrote:
>>>> I'm trying to plot simple SpatialPolygons objects using the basic
>>>> plot() command from sp and save these as png or svg. For context, this
>>>> is part of a rmarkdown report that will eventually go on the web, so
>>>> the saving of images will be done automatically via knitr. Since this
>>>> involves images, I've put the code and images online:
>>>>
>>> https://github.com/mstrimas/mstrimas.github.io/tree/master/_source/print-problems
>>>>
>>>> My problem is excessive whitespace around the plots:
>>>>
>>>> library(sp)
>>>> par(mar=c(0, 0, 0, 0))
>>>> png('png-dev-400x400.png', width = 400, height = 400)
>>>> plot(square, axes = F)
>>>> dev.off()
>>>>
>>>> But only when saving with a direct call to png() or svg(). Plotting,
>>>> then saving interactively via RStudio or with
>>>>
>>>> dev.print(png, 'dev-print-400x400.png', width = 400, height = 400)
>>>>
>>>> yields a nice plot with no whitespace.
>>>>
>>>> I only encounter this problem when plotting spatial objects, which is
>>>> why I'm posting here. Since these are simple polygons with no
>>>> attributes, I'd prefer to avoid using spplot(). Also, I've tried this
>>>> on 2 machines: a Mac and a PC running Ubuntu, in both cases running
>>>> the latest version of R and the sp package.
>>>>
>>>> Thanks!
>>>>
>>>> M
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>
>>>
>>> --
>>> Michael Sumner
>>> Software and Database Engineer
>>> Australian Antarctic Division
>>> Hobart, Australia
>>> e-mail: mdsumner at gmail.com
>>>
>>
>>
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Edzer Pebesma
Institute for Geoinformatics  (ifgi),  University of M?nster
Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/
Spatial Statistics Society http://www.spatialstatistics.info

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151216/c2ff1562/attachment.bin>

From Virgilio.Gomez at uclm.es  Wed Dec 16 23:24:57 2015
From: Virgilio.Gomez at uclm.es (VIRGILIO GOMEZ RUBIO)
Date: Wed, 16 Dec 2015 22:24:57 +0000
Subject: [R-sig-Geo] Excessive whitespace in saved images from sp::plot()
In-Reply-To: <CAHb9yCBvO91+0eCpar3q0Czy97JmzczjWzhUV+2_yoWzJ98_Hg@mail.gmail.com>
References: <CAHb9yCDhy1P0pEvHGJV+9938G8HYDzcg9B5zxVSDTp=ovRZqqw@mail.gmail.com>
	<CAAcGz9_M44knJB-DKW05e7CR8v1Fyd3Y13c7NkFd2-uLSC+CEA@mail.gmail.com>
	<CAHb9yCC1ZncPnwA08QthVkM==tqjz9xcfp3XRfwerZvNXv2jpA@mail.gmail.com>
	<CAHb9yCBvO91+0eCpar3q0Czy97JmzczjWzhUV+2_yoWzJ98_Hg@mail.gmail.com>
Message-ID: <43AA06FC-2CBC-4615-8D50-DB746E3678AD@uclm.es>


> El 16/12/2015, a las 19:35, Matt Strimas-Mackey <strimas at zoology.ubc.ca> escribi?:
> 
> After messing around with parameters aimlessly I managed to solve my
> problem.
> 
> The key seems to be that par(mar=c(0, 0, 0, 0)) needs to come AFTER
> png('plot.png')
> as in:
> png('plot.png')
> par(mar=c(0, 0, 0, 0))
> plot(square, axes = F, lwd = 2, asp = "", xpd = NA)
> dev.off()
> 
> I have no idea why this is the case, but it works!


Matt,

png() opens a new device with different settings:

> par(mar = c(0, 0, 0, 0))
> par()$mar
[1] 0 0 0 0
> png(file = "test.png")
> par()$mar
[1] 5.1 4.1 4.1 2.1

That is why you need to call par() after png().

Best,

Virgilio

From sh_didar62 at yahoo.com  Tue Dec 22 07:30:40 2015
From: sh_didar62 at yahoo.com (shohre didari)
Date: Tue, 22 Dec 2015 06:30:40 +0000 (UTC)
Subject: [R-sig-Geo] spatio-temporal kriging
References: <462778255.1686632.1450765840244.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <462778255.1686632.1450765840244.JavaMail.yahoo@mail.yahoo.com>

Dear all
I am using spatio-temporal ?regression kriging for estimation of my air temperaturedata. After removing the trend in data with a linear model, I calculate theresiduals. I found empirical semivariogram and fit a sum metric model to it ( Iattach the plot of them). It shows spatio-temporal dependency among theresiduals. But, when I used the variogram for spatio-temporal kriging estimationof the residuals and add them back to the linear model result, it increases theerror of the estimation. Shouldn?t this method decrease the error of estimation?Does anybody know why this is happened?What should I do to resolve this problem?
I really appreciate any helpThanks in advance
Shohreh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151222/40a32a5b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Sum metric variogram.pdf
Type: application/pdf
Size: 13932 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151222/40a32a5b/attachment.pdf>

From mathieu.rajerison at gmail.com  Tue Dec 22 10:57:09 2015
From: mathieu.rajerison at gmail.com (Mathieu Rajerison)
Date: Tue, 22 Dec 2015 10:57:09 +0100
Subject: [R-sig-Geo] Needing to speed up a process involving calc() and
	cover() raster functions
Message-ID: <CAGfc75nOUaZCz1sCb2dGetEsy4yt5VD6ko-zPTm3Q96ZAnOdcA@mail.gmail.com>

Hi,


I use RSToolBox to classify a RGB raster.

I have a resulting RasterBrick which has as many layer as end members, in
my case 3 for different tones of blue.

I reclassify each band with calc to extract the pixels which have a small
angle mapping value. The threshold used is different depending on the
endmember layer.

I finally assembly all the bands with the cover function.

I needed to increase the memory limit assigned to R to have it worked. I
suspect that my code could be optimized, but I don't know in which way.

Here is the part of my code, that I think, could be optilmized, if you want
to have a look and give some advice :

# RECLASSIFY
# classified is the classified RasterStack
# here I change the values of each band to 1 or NA depending on the
spectral angle mapping value.
# Is calc() slower than reclassify() for this purpose as I have only one
threshold value ?

threshs = c(.1,.2,.1)
for (i in 1:nlayers(classified )) {

    clas = classified[[i]]
    thresh=threshs[i]

    out[[i]] = calc(clas, function(x) {x[x >= thresh] = NA;
                                       x[x < thresh] = 1;
                                       return(x)})
  }

# COVERING
  r = out[[1]]
  for(i in 2:length(out)) {
    r = cover(out[[i]], r)   ## I cover by iteration
  }

plot(r) # r is the final combined raster

================================================================
My sessionInfo() :
> sessionInfo()
R version 3.1.2 (2014-10-31)
Platform: x86_64-w64-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252
 LC_MONETARY=French_France.1252
[4] LC_NUMERIC=C                   LC_TIME=French_France.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
 [1] R.utils_2.1.0        R.oo_1.19.0          R.methodsS3_1.7.0
 igraph_1.0.1         scatterplot3d_0.3-36
 [6] gdalUtils_2.0.1.7    spdep_0.5-88         Matrix_1.2-2
maptools_0.8-34      spgrass6_0.8-8
[11] XML_3.98-1.3         rgeos_0.3-8          FNN_1.1
 rgdal_0.9-2          RStoolbox_0.1.1
[16] raster_2.3-40        sp_1.0-17

loaded via a namespace (and not attached):
 [1] boot_1.3-13        car_2.0-25         caret_6.0-57       coda_0.18-1
     codetools_0.2-9    colorspace_1.2-6
 [7] deldir_0.1-9       digest_0.6.8       doParallel_1.0.8   foreach_1.4.2
     foreign_0.8-61     geosphere_1.4-3
[13] ggplot2_1.0.1      grid_3.1.2         gtable_0.1.2
iterators_1.0.7    lattice_0.20-29    LearnBayes_2.15
[19] lme4_1.1-10        magrittr_1.5       MASS_7.3-35
 MatrixModels_0.4-1 mgcv_1.8-3         minqa_1.2.4
[25] munsell_0.4.2      nlme_3.1-118       nloptr_1.0.4       nnet_7.3-8
      parallel_3.1.2     pbkrtest_0.4-2
[31] plyr_1.8.3         proto_0.3-10       quantreg_5.19      Rcpp_0.12.0
     reshape2_1.4.1     scales_0.2.5
[37] SparseM_1.7        splines_3.1.2      stats4_3.1.2       stringi_0.5-5
     stringr_1.0.0      tools_3.1.2

============================================================
Best,

Mathieu

	[[alternative HTML version deleted]]


From Roger.Bivand at nhh.no  Tue Dec 22 11:43:40 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 22 Dec 2015 11:43:40 +0100
Subject: [R-sig-Geo] rgdal 1.1-1 bug?
In-Reply-To: <558ED6D2BF4F5742885443480CC85E330184CA78@001FSN2MPN1-062.001f.mgd2.msft.net>
References: <558ED6D2BF4F5742885443480CC85E330184C942@001FSN2MPN1-062.001f.mgd2.msft.net>
	<CAAcGz9_bTh+Pn9A-TLU6aDM4wzpRZcTawpjL7aVfx=EBXCq_7w@mail.gmail.com>
	<CALyPt8wLBfK8WRZsvRvH5WFozKZe0ur58zAC5N1w_FMX7WW2=A@mail.gmail.com>
	<alpine.LFD.2.20.1512051138380.10870@reclus.nhh.no>
	<558ED6D2BF4F5742885443480CC85E330184CA78@001FSN2MPN1-062.001f.mgd2.msft.net>
Message-ID: <alpine.LFD.2.20.1512221137590.19356@reclus.nhh.no>

On Mon, 7 Dec 2015, Worrall, James -FS wrote:

> Thank you Tom and Roger for your attention to this issue.
>
> Here is a link to a zipfile (17 MB).  It contains two 
> folders/shapefiles.  One is the single big polygon with many holes that 
> I had sent to Tom.  The other is the shapefile it was extracted from, 
> with many additional polygons showing similar problems.
>
> https://www.dropbox.com/s/xkp8sdoccg6jyg4/offending_shapefile.zip?dl=0
>
> These shapefiles are from Arc and have never been written by writeOGR, 
> so should be fine when first opened.

Using these files, it was possible to track and fix the bug, introduced in 
release 1.1-1 while fixing a different problem. Thanks to Jim and Tom for 
assistance and patience. Version 1.1-3 contains the fix and has been 
released on CRAN (source and Windows binary packages). OSX users needing 
the new version will have to install from source until the CRAN OSX build 
train catches up.

Also thanks to Brian Ripley and Uwe Ligges, the CRAN Windows binary is now 
built using GDAL 2.0.1, and also includes SQLite-based drivers.

Roger

>
> For now, I have been unable to revert to the earlier version of rgdal as 
> R complains that it doesn't match the R version.

> Jim
>
> -----Original Message-----
> From: R-sig-Geo [mailto:r-sig-geo-bounces at r-project.org] On Behalf Of Roger Bivand
> Sent: Saturday, December 05, 2015 3:50 AM
> To: Tom Philippi
> Cc: r-sig-geo at r-project.org
> Subject: Re: [R-sig-Geo] rgdal 1.1-1 bug?
>
> On Sat, 5 Dec 2015, Tom Philippi wrote:
>
>> James & all--
>
> If you make the offending shapefile available, I'll look at this in a week or so (no time before then). The possible change is from:
>
> https://stat.ethz.ch/pipermail/r-sig-geo/2015-November/023656.html
>
> and affected writing - before Shapefiles were written as-is, from 1.1-1 all output geometries without comments are put through
> OGRGeometryFactory::organizePolygons() in GDAL/OGR. This may be a case in which the OGR function fails to organise the polygons in the intended fashion. I have a build of rgdal 1.1-2 for Windows using GDAL
> 2.0.1 (thanks again to Brian Ripley) which you may try, but it will most likely not change anything. Also, we don't know whether the input data (Polygons objects) have comments or not, but if read through readOGR(), the Shapefile driver also runs OGRGeometryFactory::organizePolygons() on read.
>
> I need access to the offending shapefile to see whether alternative settings to OGRGeometryFactory::organizePolygons(), or a user option to avoid this very sensible function with possibly bad data, might alleviate the problem. Please put on URL or attach offlist.
>
> Roger
>
>> With your shapefile I can reproduce your problem under Windows 7x64 in
>> R
>> 3.2.2 rgdal_1.1-1 sp_1.2-1, but not R 3.1.2 rgdal_0.9-3 sp_1.1-1 or
>> earlier.  Both rgdals are linked to gdal 1.11.2 released 2015/02/10.
>> I also can reproduce the issue writing to & reading from GeoJSON
>> instead of shapefiles.  Files written by rgdal 1.1-1 have the lines
>> connecting holes when read by rgdal_0.9-3, but files written by
>> rgdal_0.9-3 are read fine by 1.1-1.
>>
>> The rarity about the shapefile in question is that it has 57 holes in
>> the same polygon, which (along with the lines connecting holes)
>> suggests that the issue might be related to SpatialPolygons not
>> assigning holes to specific (non-hole) polygons, see:
>> http://finzi.psych.upenn.edu/R/library/rgeos/html/comment-functions.ht
>> ml
>>
>> I don't have time (or ability) to go much further right now in terms
>> of finding the change, but perhaps someone else can?
>>
>> Tom 2
>>
>> On Fri, Dec 4, 2015 at 2:34 PM, Michael Sumner <mdsumner at gmail.com> wrote:
>>
>>>
>>>
>>> On Sat, 5 Dec 2015 at 05:26 Worrall, James -FS <jworrall at fs.fed.us> wrote:
>>>
>>>> [image: image001.gif]
>>>>
>>>> We have been happily using rgdal to read and write ESRI Shapefiles.
>>>> Recently my colleague began using it.  We noticed that after saving
>>>> and reopening files, many polygons had been reconfigured, as if the
>>>> order of the vertices had become jumbled and there were many
>>>> straight lines cutting across the polygon.  I?m not sure if an image
>>>> can be pasted in this list but I?ll try.
>>>>
>>>> I did the same thing on my computer and the problem did not occur.
>>>> We found that I had an older version of rgdal, 1.0-7.  When I
>>>> updated it to 1.1-1, the problem occurred just as it had with her.
>>>>
>>>> Simply opening and saving a shapefile causes the problem and
>>>> essentially jumbles the shapefile.  The bug, if it is one, was
>>>> introduced after 1.0-7
>>>>
>>>
>>>
>>>
>>>
>>> I can't reproduce this. Can you provide a reproducible example?
>>> Also, "opening and saving a shapefiles" is not the way to describe
>>> what is done in the usual rgdal workflow, so it's not clear what you
>>> did. Here's what I
>>> tried:
>>>
>>> library(maptools)
>>> data(wrld_simpl)
>>>
>>> library(rgdal)
>>> #rgdal: version: 1.1-1, (SVN revision 572) # Geospatial Data
>>> Abstraction Library extensions to R successfully loaded # Loaded GDAL
>>> runtime: GDAL 1.11.2, released 2015/02/10 # Path to GDAL shared
>>> files: E:/inst/R/R/library/rgdal/gdal # GDAL does not use iconv for
>>> recoding strings.
>>> # Loaded PROJ.4 runtime: Rel. 4.9.1, 04 March 2015, [PJ_VERSION: 491]
>>> # Path to PROJ.4 shared files: E:/inst/R/R/library/rgdal/proj #
>>> Linking to sp version: 1.2-1
>>>
>>>
>>> writeOGR(wrld_simpl, ".", "1.1-1", "ESRI Shapefile")
>>> x1 <- readOGR(".", "1.1-1")
>>> plot(x1)  ## all good
>>>
>>>
>>>  sessionInfo()
>>> R version 3.2.2 Patched (2015-08-27 r69201)
>>> Platform: x86_64-w64-mingw32/x64 (64-bit) Running under: Windows 8.1
>>> x64 (build 9600)
>>>
>>> locale:
>>> [1] LC_COLLATE=English_Australia.1252
>>> LC_CTYPE=English_Australia.1252 [3]
>>> LC_MONETARY=English_Australia.1252 LC_NUMERIC=C [5]
>>> LC_TIME=English_Australia.1252
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>
>>> other attached packages:
>>> [1] rgdal_1.1-1     maptools_0.8-37 sp_1.2-1
>>>
>>> loaded via a namespace (and not attached):
>>> [1] tools_3.2.2     foreign_0.8-66  grid_3.2.2      lattice_0.20-33
>>>
>>>
>>> Cheers, Mike.
>>>
>>>
>>>
>>>
>>>> I will attach images of one complex polygon, before and after saving
>>>> with writeOGR.
>>>>
>>>> Jim
>>>>
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>
>> 	[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics, Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; fax +47 55 95 91 00
> e-mail: Roger.Bivand at nhh.no
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no

From benjamin.leutner at uni-wuerzburg.de  Tue Dec 22 14:09:12 2015
From: benjamin.leutner at uni-wuerzburg.de (Benjamin Leutner)
Date: Tue, 22 Dec 2015 14:09:12 +0100
Subject: [R-sig-Geo] Needing to speed up a process involving calc() and
 cover() raster functions
In-Reply-To: <CAGfc75nOUaZCz1sCb2dGetEsy4yt5VD6ko-zPTm3Q96ZAnOdcA@mail.gmail.com>
References: <CAGfc75nOUaZCz1sCb2dGetEsy4yt5VD6ko-zPTm3Q96ZAnOdcA@mail.gmail.com>
Message-ID: <56794B78.7000806@uni-wuerzburg.de>

Hi Mathieu,

your question is rather difficult to understand. From the context I 
gather that you are referring to the results of the sam() function from 
RStoolbox.
Further, I assume you want to threshold each layer for a maximum 
spectral angle  and then find the class with the minimum spectral angle 
per pixel, right?

In this case you could do:

out   <- stack(lapply(1:nlayers(classified), function(i) 
clamp(classified[[i]], upper = threshs[[i]], useValues = FALSE)))
class <- which.min(out)

Cheers,
Benjamin

On 22.12.2015 10:57, Mathieu Rajerison wrote:
> Hi,
>
>
> I use RSToolBox to classify a RGB raster.
>
> I have a resulting RasterBrick which has as many layer as end members, in
> my case 3 for different tones of blue.
>
> I reclassify each band with calc to extract the pixels which have a small
> angle mapping value. The threshold used is different depending on the
> endmember layer.
>
> I finally assembly all the bands with the cover function.
>
> I needed to increase the memory limit assigned to R to have it worked. I
> suspect that my code could be optimized, but I don't know in which way.
>
> Here is the part of my code, that I think, could be optilmized, if you want
> to have a look and give some advice :
>
> # RECLASSIFY
> # classified is the classified RasterStack
> # here I change the values of each band to 1 or NA depending on the
> spectral angle mapping value.
> # Is calc() slower than reclassify() for this purpose as I have only one
> threshold value ?
>
> threshs = c(.1,.2,.1)
> for (i in 1:nlayers(classified )) {
>
>      clas = classified[[i]]
>      thresh=threshs[i]
>
>      out[[i]] = calc(clas, function(x) {x[x >= thresh] = NA;
>                                         x[x < thresh] = 1;
>                                         return(x)})
>    }
>
> # COVERING
>    r = out[[1]]
>    for(i in 2:length(out)) {
>      r = cover(out[[i]], r)   ## I cover by iteration
>    }
>
> plot(r) # r is the final combined raster
>
> ================================================================
> My sessionInfo() :
>> sessionInfo()
> R version 3.1.2 (2014-10-31)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> locale:
> [1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252
>   LC_MONETARY=French_France.1252
> [4] LC_NUMERIC=C                   LC_TIME=French_France.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
>   [1] R.utils_2.1.0        R.oo_1.19.0          R.methodsS3_1.7.0
>   igraph_1.0.1         scatterplot3d_0.3-36
>   [6] gdalUtils_2.0.1.7    spdep_0.5-88         Matrix_1.2-2
> maptools_0.8-34      spgrass6_0.8-8
> [11] XML_3.98-1.3         rgeos_0.3-8          FNN_1.1
>   rgdal_0.9-2          RStoolbox_0.1.1
> [16] raster_2.3-40        sp_1.0-17
>
> loaded via a namespace (and not attached):
>   [1] boot_1.3-13        car_2.0-25         caret_6.0-57       coda_0.18-1
>       codetools_0.2-9    colorspace_1.2-6
>   [7] deldir_0.1-9       digest_0.6.8       doParallel_1.0.8   foreach_1.4.2
>       foreign_0.8-61     geosphere_1.4-3
> [13] ggplot2_1.0.1      grid_3.1.2         gtable_0.1.2
> iterators_1.0.7    lattice_0.20-29    LearnBayes_2.15
> [19] lme4_1.1-10        magrittr_1.5       MASS_7.3-35
>   MatrixModels_0.4-1 mgcv_1.8-3         minqa_1.2.4
> [25] munsell_0.4.2      nlme_3.1-118       nloptr_1.0.4       nnet_7.3-8
>        parallel_3.1.2     pbkrtest_0.4-2
> [31] plyr_1.8.3         proto_0.3-10       quantreg_5.19      Rcpp_0.12.0
>       reshape2_1.4.1     scales_0.2.5
> [37] SparseM_1.7        splines_3.1.2      stats4_3.1.2       stringi_0.5-5
>       stringr_1.0.0      tools_3.1.2
>
> ============================================================
> Best,
>
> Mathieu
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Benjamin Leutner M.Sc.

Department of Remote Sensing
University of Wuerzburg
Campus Hubland Nord 86
97074 Wuerzburg, Germany

Tel: +49-(0)931-31 89594
Fax: +49-(0)931-31 89594-0
Email: benjamin.leutner at uni-wuerzburg.de
Web: http://www.fernerkundung.uni-wuerzburg.de


From mathieu.rajerison at gmail.com  Wed Dec 23 15:04:47 2015
From: mathieu.rajerison at gmail.com (Mathieu Rajerison)
Date: Wed, 23 Dec 2015 15:04:47 +0100
Subject: [R-sig-Geo] Needing to speed up a process involving calc() and
 cover() raster functions
In-Reply-To: <56794B78.7000806@uni-wuerzburg.de>
References: <CAGfc75nOUaZCz1sCb2dGetEsy4yt5VD6ko-zPTm3Q96ZAnOdcA@mail.gmail.com>
	<56794B78.7000806@uni-wuerzburg.de>
Message-ID: <CAGfc75mptd2Cu0qGwOL4S5mrtx-+s8E2d2cBOMSO5ykwnBuj2Q@mail.gmail.com>

Hi Benjamin,

Thanks for your answer

Sorry for not being precise. Actually, I want to threshold each band given
thresholds. I give the 1 value to each pixel, in each band, that is below
the threshold value.

Then, I want to cover all these bands into one, in order to combine all the
layers.

I tried different functions. Here are the different performances, if you
want to have a look. Te second function below is the fastest one. If you
think you have better, do not hesitate.

## FIRST FUNCTION

  fun1 = function() {
    threshs = c(.1,.2,.1)
    tamis = raster(classified); tamis[] = 0
    out = stack(lapply(1:nlayers(classified), function(i)
cover(clamp(classified[[i]], upper = threshs[[i]], useValues = FALSE),
tamis)))
    r = calc(out, sum)
    r[r[]==0] = NA; r[which(!is.na(r[]))] = 1
  }

## SECOND

  fun2 = function() {
    threshs = c(.1,.2,.1)
    out = lapply(1:nlayers(classified), function(i) clamp(classified[[i]],
upper = threshs[[i]], useValues = FALSE))
    r = out[[1]]
    for(i in 2:length(out)) {
      r = cover(out[[i]], r)
    }
    r[which(!is.na(r[]))] = 1
  }

## THIRD

  fun3 = function() {
    threshs = c(.1,.2,.1)
    out=lapply(1:nlayers(classified), function(i) {
      out[[i]] = calc(classified[[i]], function(x) {x[x >= threshs[i]] = NA;
                                                    x[x < threshs[i]] = 1;
                                                    return(x)})
    })
    r = out[[1]]
    for(i in 2:length(out)) {
      r = cover(out[[i]], r)
    }
  }

  system.time(fun1())
  system.time(fun2())
  system.time(fun3())

> system.time(fun1())
   user  system elapsed
  63.05    2.67   65.81
>   system.time(fun2())
   user  system elapsed
  43.14    0.88  * 44.52 *
>   system.time(fun3())
   user  system elapsed
  48.67    1.51   50.62


Best,

Mathieu



2015-12-22 14:09 GMT+01:00 Benjamin Leutner <
benjamin.leutner at uni-wuerzburg.de>:

> Hi Mathieu,
>
> your question is rather difficult to understand. From the context I gather
> that you are referring to the results of the sam() function from RStoolbox.
> Further, I assume you want to threshold each layer for a maximum spectral
> angle  and then find the class with the minimum spectral angle per pixel,
> right?
>
> In this case you could do:
>
> out   <- stack(lapply(1:nlayers(classified), function(i)
> clamp(classified[[i]], upper = threshs[[i]], useValues = FALSE)))
> class <- which.min(out)
>
> Cheers,
> Benjamin
>
>
> On 22.12.2015 10:57, Mathieu Rajerison wrote:
>
>> Hi,
>>
>>
>> I use RSToolBox to classify a RGB raster.
>>
>> I have a resulting RasterBrick which has as many layer as end members, in
>> my case 3 for different tones of blue.
>>
>> I reclassify each band with calc to extract the pixels which have a small
>> angle mapping value. The threshold used is different depending on the
>> endmember layer.
>>
>> I finally assembly all the bands with the cover function.
>>
>> I needed to increase the memory limit assigned to R to have it worked. I
>> suspect that my code could be optimized, but I don't know in which way.
>>
>> Here is the part of my code, that I think, could be optilmized, if you
>> want
>> to have a look and give some advice :
>>
>> # RECLASSIFY
>> # classified is the classified RasterStack
>> # here I change the values of each band to 1 or NA depending on the
>> spectral angle mapping value.
>> # Is calc() slower than reclassify() for this purpose as I have only one
>> threshold value ?
>>
>> threshs = c(.1,.2,.1)
>> for (i in 1:nlayers(classified )) {
>>
>>      clas = classified[[i]]
>>      thresh=threshs[i]
>>
>>      out[[i]] = calc(clas, function(x) {x[x >= thresh] = NA;
>>                                         x[x < thresh] = 1;
>>                                         return(x)})
>>    }
>>
>> # COVERING
>>    r = out[[1]]
>>    for(i in 2:length(out)) {
>>      r = cover(out[[i]], r)   ## I cover by iteration
>>    }
>>
>> plot(r) # r is the final combined raster
>>
>> ================================================================
>> My sessionInfo() :
>>
>>> sessionInfo()
>>>
>> R version 3.1.2 (2014-10-31)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>
>> locale:
>> [1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252
>>   LC_MONETARY=French_France.1252
>> [4] LC_NUMERIC=C                   LC_TIME=French_France.1252
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> other attached packages:
>>   [1] R.utils_2.1.0        R.oo_1.19.0          R.methodsS3_1.7.0
>>   igraph_1.0.1         scatterplot3d_0.3-36
>>   [6] gdalUtils_2.0.1.7    spdep_0.5-88         Matrix_1.2-2
>> maptools_0.8-34      spgrass6_0.8-8
>> [11] XML_3.98-1.3         rgeos_0.3-8          FNN_1.1
>>   rgdal_0.9-2          RStoolbox_0.1.1
>> [16] raster_2.3-40        sp_1.0-17
>>
>> loaded via a namespace (and not attached):
>>   [1] boot_1.3-13        car_2.0-25         caret_6.0-57       coda_0.18-1
>>       codetools_0.2-9    colorspace_1.2-6
>>   [7] deldir_0.1-9       digest_0.6.8       doParallel_1.0.8
>>  foreach_1.4.2
>>       foreign_0.8-61     geosphere_1.4-3
>> [13] ggplot2_1.0.1      grid_3.1.2         gtable_0.1.2
>> iterators_1.0.7    lattice_0.20-29    LearnBayes_2.15
>> [19] lme4_1.1-10        magrittr_1.5       MASS_7.3-35
>>   MatrixModels_0.4-1 mgcv_1.8-3         minqa_1.2.4
>> [25] munsell_0.4.2      nlme_3.1-118       nloptr_1.0.4       nnet_7.3-8
>>        parallel_3.1.2     pbkrtest_0.4-2
>> [31] plyr_1.8.3         proto_0.3-10       quantreg_5.19      Rcpp_0.12.0
>>       reshape2_1.4.1     scales_0.2.5
>> [37] SparseM_1.7        splines_3.1.2      stats4_3.1.2
>>  stringi_0.5-5
>>       stringr_1.0.0      tools_3.1.2
>>
>> ============================================================
>> Best,
>>
>> Mathieu
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>>
> --
> Benjamin Leutner M.Sc.
>
> Department of Remote Sensing
> University of Wuerzburg
> Campus Hubland Nord 86
> 97074 Wuerzburg, Germany
>
> Tel: +49-(0)931-31 89594
> Fax: +49-(0)931-31 89594-0
> Email: benjamin.leutner at uni-wuerzburg.de
> Web: http://www.fernerkundung.uni-wuerzburg.de
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From paul.lantos at duke.edu  Wed Dec 23 15:37:04 2015
From: paul.lantos at duke.edu (Paul Lantos)
Date: Wed, 23 Dec 2015 14:37:04 +0000
Subject: [R-sig-Geo] Prepping data for FlexScan
Message-ID: <CY1PR05MB1915134C77AC5951E2F94A5CB5E60@CY1PR05MB1915.namprd05.prod.outlook.com>

Hi,

 I'm trying to prepare data for FlexScan to use the flexible cluster scan statistic, and I'm having difficulty getting data in the right format.


 The problem seems to be in the creation of a neighbor matrix file. I've been using a point data source, creating thiessen polygons (in ArcGIS), then exporting as a shapefile to R where in spdep I create an nb object using poly2nb. I've then exported it using the nb2inla function.


 But FlexScan does not seem to like the neighbor matrix file I've created, it gives me a generic error.


 Has anyone successfully prepared data for FlexScan? Is there an alternative flexible scanning statistic? I am unaware of an R package that performs flexible cluster analysis, and I am not interested in circular or elliptical clusters (which I can do easily enough in SatScan).


Thanks,

Paul


______________________________________
Paul M. Lantos, M.D., FIDSA, FAAP, FACP
    Pediatric Infectious Diseases
    Hospital Medicine
Depts of Internal Medicine and Pediatrics
Duke University Medical Center

______________________________________

This message and any included attachments are confidential and are intended only for the addressee(s).  The information contained herein may be confidential under the attorney/client privilege and/or the quality assurance and peer review privilege.  Unauthorized review, forwarding, printing, copying or otherwise distributing or using such information is prohibited and may be unlawful.  If you have received this message in error, please notify the sender promptly by email or telephone and delete the message.

	[[alternative HTML version deleted]]


From paul.lantos at duke.edu  Wed Dec 23 17:44:11 2015
From: paul.lantos at duke.edu (Paul Lantos)
Date: Wed, 23 Dec 2015 16:44:11 +0000
Subject: [R-sig-Geo] offsetting overlapping points
Message-ID: <CY1PR05MB19155D8BBC9DDF10727FEDC9B5E60@CY1PR05MB1915.namprd05.prod.outlook.com>

Hi,

 I have a point dataset in which some points overlap. I'd like to find a way to randomly offset these points within a certain tolerance so that none perfectly overlap. I can't find a way to do this within ArcGIS. I'd like to find a way to either impose a grid and randomize all points that fall in each grid cell, or specify a tolerance (i.e. offset each point randomly by a certain number of map distance units and not allow both x and y to be identical for any one point).


Thanks!

Paul


______________________________________
Paul M. Lantos, M.D., FIDSA, FAAP, FACP
    Pediatric Infectious Diseases
    Hospital Medicine
Depts of Internal Medicine and Pediatrics
Duke University Medical Center

______________________________________

This message and any included attachments are confidential and are intended only for the addressee(s).  The information contained herein may be confidential under the attorney/client privilege and/or the quality assurance and peer review privilege.  Unauthorized review, forwarding, printing, copying or otherwise distributing or using such information is prohibited and may be unlawful.  If you have received this message in error, please notify the sender promptly by email or telephone and delete the message.

	[[alternative HTML version deleted]]


From benjamin.leutner at uni-wuerzburg.de  Wed Dec 23 18:04:00 2015
From: benjamin.leutner at uni-wuerzburg.de (Benjamin Leutner)
Date: Wed, 23 Dec 2015 18:04:00 +0100
Subject: [R-sig-Geo] Needing to speed up a process involving calc() and
 cover() raster functions
In-Reply-To: <CAGfc75mptd2Cu0qGwOL4S5mrtx-+s8E2d2cBOMSO5ykwnBuj2Q@mail.gmail.com>
References: <CAGfc75nOUaZCz1sCb2dGetEsy4yt5VD6ko-zPTm3Q96ZAnOdcA@mail.gmail.com>
	<56794B78.7000806@uni-wuerzburg.de>
	<CAGfc75mptd2Cu0qGwOL4S5mrtx-+s8E2d2cBOMSO5ykwnBuj2Q@mail.gmail.com>
Message-ID: <567AD400.5090704@uni-wuerzburg.de>

so, essentially what you want is pixels which have NAs throughout all 
layers (i.e. are above the thresholds) set to NA and the rest set to 1.
although, I don't quite see the use-case, but this is how you could do 
it a little faster:

library(Rcpp) ## You need RcppArmadillo also installed
cppFunction("
                 arma::vec allNA(arma::mat x, arma::vec tr){
                 arma::vec out(x.n_rows);
                 out.fill(NA_REAL);
                  for(int i = 0; i < tr.n_elem; i++) {
                        out.elem(find(x.col(i) < tr(i))).ones();
                 }
                 return out;
                 }
                 ", depends = "RcppArmadillo")


r <- calc(classified, function(x){allNA(x,tr=threshs)}, forcefun=T)


-
Benjamin



On 23.12.2015 15:04, Mathieu Rajerison wrote:
> Hi Benjamin,
>
> Thanks for your answer
>
> Sorry for not being precise. Actually, I want to threshold each band 
> given thresholds. I give the 1 value to each pixel, in each band, that 
> is below the threshold value.
>
> Then, I want to cover all these bands into one, in order to combine 
> all the layers.
>
> I tried different functions. Here are the different performances, if 
> you want to have a look. Te second function below is the fastest one. 
> If you think you have better, do not hesitate.
>
> ## FIRST FUNCTION
>
>   fun1 = function() {
>     threshs = c(.1,.2,.1)
>     tamis = raster(classified); tamis[] = 0
>     out = stack(lapply(1:nlayers(classified), function(i) 
> cover(clamp(classified[[i]], upper = threshs[[i]], useValues = FALSE), 
> tamis)))
>     r = calc(out, sum)
>     r[r[]==0] = NA; r[which(!is.na <http://is.na>(r[]))] = 1
>   }
>
> ## SECOND
>
>   fun2 = function() {
>     threshs = c(.1,.2,.1)
>     out = lapply(1:nlayers(classified), function(i) 
> clamp(classified[[i]], upper = threshs[[i]], useValues = FALSE))
>     r = out[[1]]
>     for(i in 2:length(out)) {
>       r = cover(out[[i]], r)
>     }
>     r[which(!is.na <http://is.na>(r[]))] = 1
>   }
> ## THIRD
>
>   fun3 = function() {
>     threshs = c(.1,.2,.1)
>     out=lapply(1:nlayers(classified), function(i) {
>       out[[i]] = calc(classified[[i]], function(x) {x[x >= threshs[i]] 
> = NA;
>                                                     x[x < threshs[i]] = 1;
> return(x)})
>     })
>     r = out[[1]]
>     for(i in 2:length(out)) {
>       r = cover(out[[i]], r)
>     }
>   }
>   system.time(fun1())
>   system.time(fun2())
>   system.time(fun3())
>
> > system.time(fun1())
>    user  system elapsed
>   63.05    2.67   65.81
> >   system.time(fun2())
>    user  system elapsed
>   43.14    0.88 *44.52 *
> >   system.time(fun3())
>    user  system elapsed
>   48.67    1.51   50.62
>
>
> Best,
>
> Mathieu
>
>
>
> 2015-12-22 14:09 GMT+01:00 Benjamin Leutner 
> <benjamin.leutner at uni-wuerzburg.de 
> <mailto:benjamin.leutner at uni-wuerzburg.de>>:
>
>     Hi Mathieu,
>
>     your question is rather difficult to understand. From the context
>     I gather that you are referring to the results of the sam()
>     function from RStoolbox.
>     Further, I assume you want to threshold each layer for a maximum
>     spectral angle  and then find the class with the minimum spectral
>     angle per pixel, right?
>
>     In this case you could do:
>
>     out   <- stack(lapply(1:nlayers(classified), function(i)
>     clamp(classified[[i]], upper = threshs[[i]], useValues = FALSE)))
>     class <- which.min(out)
>
>     Cheers,
>     Benjamin
>
>
>     On 22.12.2015 10:57, Mathieu Rajerison wrote:
>
>         Hi,
>
>
>         I use RSToolBox to classify a RGB raster.
>
>         I have a resulting RasterBrick which has as many layer as end
>         members, in
>         my case 3 for different tones of blue.
>
>         I reclassify each band with calc to extract the pixels which
>         have a small
>         angle mapping value. The threshold used is different depending
>         on the
>         endmember layer.
>
>         I finally assembly all the bands with the cover function.
>
>         I needed to increase the memory limit assigned to R to have it
>         worked. I
>         suspect that my code could be optimized, but I don't know in
>         which way.
>
>         Here is the part of my code, that I think, could be
>         optilmized, if you want
>         to have a look and give some advice :
>
>         # RECLASSIFY
>         # classified is the classified RasterStack
>         # here I change the values of each band to 1 or NA depending
>         on the
>         spectral angle mapping value.
>         # Is calc() slower than reclassify() for this purpose as I
>         have only one
>         threshold value ?
>
>         threshs = c(.1,.2,.1)
>         for (i in 1:nlayers(classified )) {
>
>              clas = classified[[i]]
>              thresh=threshs[i]
>
>              out[[i]] = calc(clas, function(x) {x[x >= thresh] = NA;
>                                                 x[x < thresh] = 1;
>                                                 return(x)})
>            }
>
>         # COVERING
>            r = out[[1]]
>            for(i in 2:length(out)) {
>              r = cover(out[[i]], r)   ## I cover by iteration
>            }
>
>         plot(r) # r is the final combined raster
>
>         ================================================================
>         My sessionInfo() :
>
>             sessionInfo()
>
>         R version 3.1.2 (2014-10-31)
>         Platform: x86_64-w64-mingw32/x64 (64-bit)
>
>         locale:
>         [1] LC_COLLATE=French_France.1252 LC_CTYPE=French_France.1252
>           LC_MONETARY=French_France.1252
>         [4] LC_NUMERIC=C  LC_TIME=French_France.1252
>
>         attached base packages:
>         [1] stats     graphics  grDevices utils     datasets methods 
>          base
>
>         other attached packages:
>           [1] R.utils_2.1.0        R.oo_1.19.0 R.methodsS3_1.7.0
>           igraph_1.0.1         scatterplot3d_0.3-36
>           [6] gdalUtils_2.0.1.7    spdep_0.5-88  Matrix_1.2-2
>         maptools_0.8-34      spgrass6_0.8-8
>         [11] XML_3.98-1.3         rgeos_0.3-8          FNN_1.1
>           rgdal_0.9-2          RStoolbox_0.1.1
>         [16] raster_2.3-40        sp_1.0-17
>
>         loaded via a namespace (and not attached):
>           [1] boot_1.3-13        car_2.0-25  caret_6.0-57     
>          coda_0.18-1
>               codetools_0.2-9    colorspace_1.2-6
>           [7] deldir_0.1-9       digest_0.6.8  doParallel_1.0.8 
>          foreach_1.4.2
>               foreign_0.8-61     geosphere_1.4-3
>         [13] ggplot2_1.0.1      grid_3.1.2  gtable_0.1.2
>         iterators_1.0.7    lattice_0.20-29    LearnBayes_2.15
>         [19] lme4_1.1-10        magrittr_1.5       MASS_7.3-35
>           MatrixModels_0.4-1 mgcv_1.8-3         minqa_1.2.4
>         [25] munsell_0.4.2      nlme_3.1-118  nloptr_1.0.4     
>          nnet_7.3-8
>                parallel_3.1.2     pbkrtest_0.4-2
>         [31] plyr_1.8.3         proto_0.3-10  quantreg_5.19     
>         Rcpp_0.12.0
>               reshape2_1.4.1     scales_0.2.5
>         [37] SparseM_1.7        splines_3.1.2 stats4_3.1.2     
>          stringi_0.5-5
>               stringr_1.0.0      tools_3.1.2
>
>         ============================================================
>         Best,
>
>         Mathieu
>
>                 [[alternative HTML version deleted]]
>
>         _______________________________________________
>         R-sig-Geo mailing list
>         R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>         https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>
>     -- 
>     Benjamin Leutner M.Sc.
>
>     Department of Remote Sensing
>     University of Wuerzburg
>     Campus Hubland Nord 86
>     97074 Wuerzburg, Germany
>
>     Tel: +49-(0)931-31 89594 <tel:%2B49-%280%29931-31%2089594>
>     Fax: +49-(0)931-31 89594-0 <tel:%2B49-%280%29931-31%2089594-0>
>     Email: benjamin.leutner at uni-wuerzburg.de
>     <mailto:benjamin.leutner at uni-wuerzburg.de>
>     Web: http://www.fernerkundung.uni-wuerzburg.de
>
>     _______________________________________________
>     R-sig-Geo mailing list
>     R-sig-Geo at r-project.org <mailto:R-sig-Geo at r-project.org>
>     https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>

-- 
Benjamin Leutner M.Sc.

Department of Remote Sensing
University of Wuerzburg
Campus Hubland Nord 86
97074 Wuerzburg, Germany

Tel: +49-(0)931-31 89594
Fax: +49-(0)931-31 89594-0
Email: benjamin.leutner at uni-wuerzburg.de
Web: http://www.fernerkundung.uni-wuerzburg.de


	[[alternative HTML version deleted]]


From macqueen1 at llnl.gov  Wed Dec 23 18:55:52 2015
From: macqueen1 at llnl.gov (MacQueen, Don)
Date: Wed, 23 Dec 2015 17:55:52 +0000
Subject: [R-sig-Geo] offsetting overlapping points
Message-ID: <D2A01F78.14A156%macqueen1@llnl.gov>

I don't know of a function for precisely what you're looking for, but in
the "roll your own" department, have you looked at the jitter() function?

You would probably have to run it separately on x and y, and tinker with
its arguments that control the offset. But it certainly should be doable.

-Don

-- 
Don MacQueen

Lawrence Livermore National Laboratory
7000 East Ave., L-627
Livermore, CA 94550
925-423-1062





On 12/23/15, 8:44 AM, "R-sig-Geo on behalf of Paul Lantos"
<r-sig-geo-bounces at r-project.org on behalf of paul.lantos at duke.edu> wrote:

>Hi,
>
> I have a point dataset in which some points overlap. I'd like to find a
>way to randomly offset these points within a certain tolerance so that
>none perfectly overlap. I can't find a way to do this within ArcGIS. I'd
>like to find a way to either impose a grid and randomize all points that
>fall in each grid cell, or specify a tolerance (i.e. offset each point
>randomly by a certain number of map distance units and not allow both x
>and y to be identical for any one point).
>
>
>Thanks!
>
>Paul
>
>
>______________________________________
>Paul M. Lantos, M.D., FIDSA, FAAP, FACP
>    Pediatric Infectious Diseases
>    Hospital Medicine
>Depts of Internal Medicine and Pediatrics
>Duke University Medical Center
>
>______________________________________
>
>This message and any included attachments are confidential and are
>intended only for the addressee(s).  The information contained herein may
>be confidential under the attorney/client privilege and/or the quality
>assurance and peer review privilege.  Unauthorized review, forwarding,
>printing, copying or otherwise distributing or using such information is
>prohibited and may be unlawful.  If you have received this message in
>error, please notify the sender promptly by email or telephone and delete
>the message.
>
>	[[alternative HTML version deleted]]
>
>_______________________________________________
>R-sig-Geo mailing list
>R-sig-Geo at r-project.org
>https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From dfamaral at gmail.com  Wed Dec 23 22:02:23 2015
From: dfamaral at gmail.com (Daniel Furlan Amaral)
Date: Wed, 23 Dec 2015 19:02:23 -0200
Subject: [R-sig-Geo] spml package and impacts calcultion
Message-ID: <CAPiOR57CJ7PFHWTneUm2WdwbwWDA9dTfkT5n6hcibVHXk4xKhA@mail.gmail.com>

Dear all,

Does anyone know about packages or commands to calculate direct, indirect
and total impacts? I didn't find it on spml package.

Thank you.

	[[alternative HTML version deleted]]


From edzer.pebesma at uni-muenster.de  Wed Dec 23 22:17:44 2015
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Wed, 23 Dec 2015 22:17:44 +0100
Subject: [R-sig-Geo] spml package and impacts calcultion
In-Reply-To: <CAPiOR57CJ7PFHWTneUm2WdwbwWDA9dTfkT5n6hcibVHXk4xKhA@mail.gmail.com>
References: <CAPiOR57CJ7PFHWTneUm2WdwbwWDA9dTfkT5n6hcibVHXk4xKhA@mail.gmail.com>
Message-ID: <567B0F78.9030106@uni-muenster.de>



On 23/12/15 22:02, Daniel Furlan Amaral wrote:
> Dear all,
> 
> Does anyone know about packages or commands to calculate direct, indirect
> and total impacts? I didn't find it on spml package.

package spdep has impacts methods for some models, see ?impacts :

> library(spdep)
Loading required package: Matrix
> methods(impacts)
[1] impacts.gmsar* impacts.sarlm* impacts.stsls*

> 
> Thank you.
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> 

-- 
Edzer Pebesma
Institute for Geoinformatics  (ifgi),  University of M?nster
Heisenbergstra?e 2, 48149 M?nster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/
Spatial Statistics Society http://www.spatialstatistics.info

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-sig-geo/attachments/20151223/37121c80/attachment.bin>

From Roger.Bivand at nhh.no  Wed Dec 23 23:39:01 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 23 Dec 2015 23:39:01 +0100
Subject: [R-sig-Geo] spml package and impacts calcultion
In-Reply-To: <567B0F78.9030106@uni-muenster.de>
References: <CAPiOR57CJ7PFHWTneUm2WdwbwWDA9dTfkT5n6hcibVHXk4xKhA@mail.gmail.com>
	<567B0F78.9030106@uni-muenster.de>
Message-ID: <alpine.LFD.2.20.1512232333340.20265@reclus.nhh.no>

On Wed, 23 Dec 2015, Edzer Pebesma wrote:

>
>
> On 23/12/15 22:02, Daniel Furlan Amaral wrote:
>> Dear all,
>>
>> Does anyone know about packages or commands to calculate direct, indirect
>> and total impacts? I didn't find it on spml package.
>
> package spdep has impacts methods for some models, see ?impacts :
>
>> library(spdep)
> Loading required package: Matrix
>> methods(impacts)
> [1] impacts.gmsar* impacts.sarlm* impacts.stsls*
>

and model fitting functions in the splm package use those in their own 
method:

> library(splm)
> methods(impacts)
[1] impacts.gmsar* impacts.sarlm* impacts.splm*  impacts.stsls*

so use that method in the same way.

Roger

>>
>> Thank you.
>>
>> 	[[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From r.hijmans at gmail.com  Fri Dec 25 06:46:25 2015
From: r.hijmans at gmail.com (Robert J. Hijmans)
Date: Thu, 24 Dec 2015 21:46:25 -0800
Subject: [R-sig-Geo] Needing to speed up a process involving calc() and
 cover() raster functions
In-Reply-To: <CAGfc75nOUaZCz1sCb2dGetEsy4yt5VD6ko-zPTm3Q96ZAnOdcA@mail.gmail.com>
References: <CAGfc75nOUaZCz1sCb2dGetEsy4yt5VD6ko-zPTm3Q96ZAnOdcA@mail.gmail.com>
Message-ID: <CANtt_hy5G1PtE3qf-nBDvEjZrxhoR8g0JFhc+nk=evV0hHqwgw@mail.gmail.com>

How about this:

b <- brick(system.file("external/rlogo.grd", package="raster"))
classified <- b / 255

threshs <- c(.1, .3, .5)
x <- classified < threshs
y <- max(x, na.rm=TRUE)
z <- reclassify(y, cbind(0, NA))


Robert


On Tue, Dec 22, 2015 at 1:57 AM, Mathieu Rajerison
<mathieu.rajerison at gmail.com> wrote:
> Hi,
>
>
> I use RSToolBox to classify a RGB raster.
>
> I have a resulting RasterBrick which has as many layer as end members, in
> my case 3 for different tones of blue.
>
> I reclassify each band with calc to extract the pixels which have a small
> angle mapping value. The threshold used is different depending on the
> endmember layer.
>
> I finally assembly all the bands with the cover function.
>
> I needed to increase the memory limit assigned to R to have it worked. I
> suspect that my code could be optimized, but I don't know in which way.
>
> Here is the part of my code, that I think, could be optilmized, if you want
> to have a look and give some advice :
>
> # RECLASSIFY
> # classified is the classified RasterStack
> # here I change the values of each band to 1 or NA depending on the
> spectral angle mapping value.
> # Is calc() slower than reclassify() for this purpose as I have only one
> threshold value ?
>
> threshs = c(.1,.2,.1)
> for (i in 1:nlayers(classified )) {
>
>     clas = classified[[i]]
>     thresh=threshs[i]
>
>     out[[i]] = calc(clas, function(x) {x[x >= thresh] = NA;
>                                        x[x < thresh] = 1;
>                                        return(x)})
>   }
>
> # COVERING
>   r = out[[1]]
>   for(i in 2:length(out)) {
>     r = cover(out[[i]], r)   ## I cover by iteration
>   }
>
> plot(r) # r is the final combined raster
>
> ================================================================
> My sessionInfo() :
>> sessionInfo()
> R version 3.1.2 (2014-10-31)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
>
> locale:
> [1] LC_COLLATE=French_France.1252  LC_CTYPE=French_France.1252
>  LC_MONETARY=French_France.1252
> [4] LC_NUMERIC=C                   LC_TIME=French_France.1252
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
>  [1] R.utils_2.1.0        R.oo_1.19.0          R.methodsS3_1.7.0
>  igraph_1.0.1         scatterplot3d_0.3-36
>  [6] gdalUtils_2.0.1.7    spdep_0.5-88         Matrix_1.2-2
> maptools_0.8-34      spgrass6_0.8-8
> [11] XML_3.98-1.3         rgeos_0.3-8          FNN_1.1
>  rgdal_0.9-2          RStoolbox_0.1.1
> [16] raster_2.3-40        sp_1.0-17
>
> loaded via a namespace (and not attached):
>  [1] boot_1.3-13        car_2.0-25         caret_6.0-57       coda_0.18-1
>      codetools_0.2-9    colorspace_1.2-6
>  [7] deldir_0.1-9       digest_0.6.8       doParallel_1.0.8   foreach_1.4.2
>      foreign_0.8-61     geosphere_1.4-3
> [13] ggplot2_1.0.1      grid_3.1.2         gtable_0.1.2
> iterators_1.0.7    lattice_0.20-29    LearnBayes_2.15
> [19] lme4_1.1-10        magrittr_1.5       MASS_7.3-35
>  MatrixModels_0.4-1 mgcv_1.8-3         minqa_1.2.4
> [25] munsell_0.4.2      nlme_3.1-118       nloptr_1.0.4       nnet_7.3-8
>       parallel_3.1.2     pbkrtest_0.4-2
> [31] plyr_1.8.3         proto_0.3-10       quantreg_5.19      Rcpp_0.12.0
>      reshape2_1.4.1     scales_0.2.5
> [37] SparseM_1.7        splines_3.1.2      stats4_3.1.2       stringi_0.5-5
>      stringr_1.0.0      tools_3.1.2
>
> ============================================================
> Best,
>
> Mathieu
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From dfamaral at gmail.com  Mon Dec 28 14:57:34 2015
From: dfamaral at gmail.com (Daniel Furlan Amaral)
Date: Mon, 28 Dec 2015 11:57:34 -0200
Subject: [R-sig-Geo] spml package and impacts calcultion
In-Reply-To: <alpine.LFD.2.20.1512232333340.20265@reclus.nhh.no>
References: <CAPiOR57CJ7PFHWTneUm2WdwbwWDA9dTfkT5n6hcibVHXk4xKhA@mail.gmail.com>
	<567B0F78.9030106@uni-muenster.de>
	<alpine.LFD.2.20.1512232333340.20265@reclus.nhh.no>
Message-ID: <CAPiOR54GduSeE4uc91c7Fd+PRF0-4mUofvFvyTt3bO2R4Y4bAQ@mail.gmail.com>

Thank you, Mr. Roger.

Best regards,

Daniel.

2015-12-23 20:39 GMT-02:00 Roger Bivand <Roger.Bivand at nhh.no>:

> On Wed, 23 Dec 2015, Edzer Pebesma wrote:
>
>
>>
>> On 23/12/15 22:02, Daniel Furlan Amaral wrote:
>>
>>> Dear all,
>>>
>>> Does anyone know about packages or commands to calculate direct, indirect
>>> and total impacts? I didn't find it on spml package.
>>>
>>
>> package spdep has impacts methods for some models, see ?impacts :
>>
>> library(spdep)
>>>
>> Loading required package: Matrix
>>
>>> methods(impacts)
>>>
>> [1] impacts.gmsar* impacts.sarlm* impacts.stsls*
>>
>>
> and model fitting functions in the splm package use those in their own
> method:
>
> library(splm)
>> methods(impacts)
>>
> [1] impacts.gmsar* impacts.sarlm* impacts.splm*  impacts.stsls*
>
> so use that method in the same way.
>
> Roger
>
>
>>> Thank you.
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>
>>>
>>
>>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; fax +47 55 95 91 00
> e-mail: Roger.Bivand at nhh.no
>
>

	[[alternative HTML version deleted]]


From dfamaral at gmail.com  Mon Dec 28 20:32:06 2015
From: dfamaral at gmail.com (Daniel Furlan Amaral)
Date: Mon, 28 Dec 2015 17:32:06 -0200
Subject: [R-sig-Geo] spml package and impacts calcultion
In-Reply-To: <CAPiOR54GduSeE4uc91c7Fd+PRF0-4mUofvFvyTt3bO2R4Y4bAQ@mail.gmail.com>
References: <CAPiOR57CJ7PFHWTneUm2WdwbwWDA9dTfkT5n6hcibVHXk4xKhA@mail.gmail.com>
	<567B0F78.9030106@uni-muenster.de>
	<alpine.LFD.2.20.1512232333340.20265@reclus.nhh.no>
	<CAPiOR54GduSeE4uc91c7Fd+PRF0-4mUofvFvyTt3bO2R4Y4bAQ@mail.gmail.com>
Message-ID: <CAPiOR55d6_WvWQqO+ytHOEM-aiwfrWrK1=FDdW4Xd6kQKS3ZjQ@mail.gmail.com>

Hi,

I would like to present some other questions I can't solve.

1) I have to estimate a Spatial Durbin Panel Model (SDM) and a Spatial
Durbin Error Model (SDEM). The problem is that the command *lag.listw* does
not work for panel datasets and results in an error message:



*Wx <- lag.listw(W, x)Error in lag.listw(W, x) : object lengths differ*
Is there any command in spml (or any other package) to create spatial lag
of regressors automatically? Or I need to do it manually?

2) Is there any control for heteroskedasticity for Spatial Panel Models in
splm (or any other package)?

3) I need the log-Likelihood method for SAR, SEM and SARAR panel models. If
I follow the method described in

http://r-sig-geo.2731867.n2.nabble.com/spml-and-logLik-help-td7581581.html

, SEM estimations get an error, so I decided to use the option quiet =
FALSE. Doing this, I got a function value: -34101.08. The value to report
in the paper should be -ln(34101.08), i.e, 10.43708?

4) I need to calculate impacts from Spatial Error Model:

*efsem <- spml(fm, data = tb, index = "Cod_mun", listw = W, model =
"within", spatial.error = "b", lag = FALSE, quiet = FALSE)*


*impsem <- impacts(efsem, listw = W, style="W", time = 10)*
But I receive this error message:


*Error in impacts.splm(efsem, listw = W, style = "W", time = 10): object
type not recognized*
Does anyone know how to calculate impacts for panel SEM?

Thank you.



2015-12-28 11:57 GMT-02:00 Daniel Furlan Amaral <dfamaral at gmail.com>:

> Thank you, Mr. Roger.
>
> Best regards,
>
> Daniel.
>
> 2015-12-23 20:39 GMT-02:00 Roger Bivand <Roger.Bivand at nhh.no>:
>
>> On Wed, 23 Dec 2015, Edzer Pebesma wrote:
>>
>>
>>>
>>> On 23/12/15 22:02, Daniel Furlan Amaral wrote:
>>>
>>>> Dear all,
>>>>
>>>> Does anyone know about packages or commands to calculate direct,
>>>> indirect
>>>> and total impacts? I didn't find it on spml package.
>>>>
>>>
>>> package spdep has impacts methods for some models, see ?impacts :
>>>
>>> library(spdep)
>>>>
>>> Loading required package: Matrix
>>>
>>>> methods(impacts)
>>>>
>>> [1] impacts.gmsar* impacts.sarlm* impacts.stsls*
>>>
>>>
>> and model fitting functions in the splm package use those in their own
>> method:
>>
>> library(splm)
>>> methods(impacts)
>>>
>> [1] impacts.gmsar* impacts.sarlm* impacts.splm*  impacts.stsls*
>>
>> so use that method in the same way.
>>
>> Roger
>>
>>
>>>> Thank you.
>>>>
>>>>         [[alternative HTML version deleted]]
>>>>
>>>> _______________________________________________
>>>> R-sig-Geo mailing list
>>>> R-sig-Geo at r-project.org
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>
>>>>
>>>
>>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; fax +47 55 95 91 00
>> e-mail: Roger.Bivand at nhh.no
>>
>>
>

	[[alternative HTML version deleted]]


From Roger.Bivand at nhh.no  Mon Dec 28 22:13:36 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 28 Dec 2015 22:13:36 +0100
Subject: [R-sig-Geo] spml package and impacts calcultion
In-Reply-To: <CAPiOR55d6_WvWQqO+ytHOEM-aiwfrWrK1=FDdW4Xd6kQKS3ZjQ@mail.gmail.com>
References: <CAPiOR57CJ7PFHWTneUm2WdwbwWDA9dTfkT5n6hcibVHXk4xKhA@mail.gmail.com>
	<567B0F78.9030106@uni-muenster.de>
	<alpine.LFD.2.20.1512232333340.20265@reclus.nhh.no>
	<CAPiOR54GduSeE4uc91c7Fd+PRF0-4mUofvFvyTt3bO2R4Y4bAQ@mail.gmail.com>
	<CAPiOR55d6_WvWQqO+ytHOEM-aiwfrWrK1=FDdW4Xd6kQKS3ZjQ@mail.gmail.com>
Message-ID: <alpine.LFD.2.20.1512282148500.9611@reclus.nhh.no>

Please consider contacting the authors of the splm package (I am not an 
author or maintainer of the package); when posting to the list, write to 
the list rather than an individual recipient first; you are also 
extending an existing thread with content that isn't directly relevant.

Consider contibuting a modification to spdep::create_WX(), possibly by 
using a Kronecker product on the sparse representation of the listw object 
to inject the time periods.

For example, use:

library(spdep)
data(columbus)
listw <- nb2listw(col.gal.nb, style="W")
summary(listw)
W <- as(listw, "CsparseMatrix")
class(W)
dim(W)
image(W)
I <- Diagonal(3)
class(I)
W1 <- kronecker(I, W)
class(W1)
image(W1)
listw1 <- mat2listw(W1, style="W")
summary(listw1)

for three time periods. Do use trial cases and check that you do not 
generate spurious lags. In the present implementations (I think in the 
Matrix package), it seems hard to pass through row/column IDs.

Hope this clarifies,

Roger


On Mon, 28 Dec 2015, Daniel Furlan Amaral wrote:

> Hi,
>
> I would like to present some other questions I can't solve.
>
> 1) I have to estimate a Spatial Durbin Panel Model (SDM) and a Spatial
> Durbin Error Model (SDEM). The problem is that the command *lag.listw* does
> not work for panel datasets and results in an error message:
>
>
>
> *Wx <- lag.listw(W, x)Error in lag.listw(W, x) : object lengths differ*
> Is there any command in spml (or any other package) to create spatial lag
> of regressors automatically? Or I need to do it manually?
>
> 2) Is there any control for heteroskedasticity for Spatial Panel Models in
> splm (or any other package)?
>
> 3) I need the log-Likelihood method for SAR, SEM and SARAR panel models. If
> I follow the method described in
>
> http://r-sig-geo.2731867.n2.nabble.com/spml-and-logLik-help-td7581581.html
>
> , SEM estimations get an error, so I decided to use the option quiet =
> FALSE. Doing this, I got a function value: -34101.08. The value to report
> in the paper should be -ln(34101.08), i.e, 10.43708?
>
> 4) I need to calculate impacts from Spatial Error Model:
>
> *efsem <- spml(fm, data = tb, index = "Cod_mun", listw = W, model =
> "within", spatial.error = "b", lag = FALSE, quiet = FALSE)*
>
>
> *impsem <- impacts(efsem, listw = W, style="W", time = 10)*
> But I receive this error message:
>
>
> *Error in impacts.splm(efsem, listw = W, style = "W", time = 10): object
> type not recognized*
> Does anyone know how to calculate impacts for panel SEM?
>
> Thank you.
>
>
>
> 2015-12-28 11:57 GMT-02:00 Daniel Furlan Amaral <dfamaral at gmail.com>:
>
>> Thank you, Mr. Roger.
>>
>> Best regards,
>>
>> Daniel.
>>
>> 2015-12-23 20:39 GMT-02:00 Roger Bivand <Roger.Bivand at nhh.no>:
>>
>>> On Wed, 23 Dec 2015, Edzer Pebesma wrote:
>>>
>>>
>>>>
>>>> On 23/12/15 22:02, Daniel Furlan Amaral wrote:
>>>>
>>>>> Dear all,
>>>>>
>>>>> Does anyone know about packages or commands to calculate direct,
>>>>> indirect
>>>>> and total impacts? I didn't find it on spml package.
>>>>>
>>>>
>>>> package spdep has impacts methods for some models, see ?impacts :
>>>>
>>>> library(spdep)
>>>>>
>>>> Loading required package: Matrix
>>>>
>>>>> methods(impacts)
>>>>>
>>>> [1] impacts.gmsar* impacts.sarlm* impacts.stsls*
>>>>
>>>>
>>> and model fitting functions in the splm package use those in their own
>>> method:
>>>
>>> library(splm)
>>>> methods(impacts)
>>>>
>>> [1] impacts.gmsar* impacts.sarlm* impacts.splm*  impacts.stsls*
>>>
>>> so use that method in the same way.
>>>
>>> Roger
>>>
>>>
>>>>> Thank you.
>>>>>
>>>>>         [[alternative HTML version deleted]]
>>>>>
>>>>> _______________________________________________
>>>>> R-sig-Geo mailing list
>>>>> R-sig-Geo at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>
>>>>>
>>>>
>>>>
>>> --
>>> Roger Bivand
>>> Department of Economics, Norwegian School of Economics,
>>> Helleveien 30, N-5045 Bergen, Norway.
>>> voice: +47 55 95 93 55; fax +47 55 95 91 00
>>> e-mail: Roger.Bivand at nhh.no
>>>
>>>
>>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From Roger.Bivand at nhh.no  Mon Dec 28 23:23:16 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 28 Dec 2015 23:23:16 +0100
Subject: [R-sig-Geo] Prepping data for FlexScan
In-Reply-To: <CY1PR05MB1915134C77AC5951E2F94A5CB5E60@CY1PR05MB1915.namprd05.prod.outlook.com>
References: <CY1PR05MB1915134C77AC5951E2F94A5CB5E60@CY1PR05MB1915.namprd05.prod.outlook.com>
Message-ID: <alpine.LFD.2.20.1512282320190.9611@reclus.nhh.no>

Please provide a link to the documentation of what FlexScan expects to 
read and possibly your script, output file, and a sample correctly 
formatted file; it appears it is not actively used here (at this time of 
year anyway). Is this a case where the OS line feed/carriage return may 
make a difference?

Roger

On Wed, 23 Dec 2015, Paul Lantos wrote:

> Hi,
>
> I'm trying to prepare data for FlexScan to use the flexible cluster scan 
> statistic, and I'm having difficulty getting data in the right format.
>
>
> The problem seems to be in the creation of a neighbor matrix file. I've 
> been using a point data source, creating thiessen polygons (in ArcGIS), 
> then exporting as a shapefile to R where in spdep I create an nb object 
> using poly2nb. I've then exported it using the nb2inla function.
>
>
> But FlexScan does not seem to like the neighbor matrix file I've 
> created, it gives me a generic error.
>
>
>
>
> Thanks,
>
> Paul
>
>
> ______________________________________
> Paul M. Lantos, M.D., FIDSA, FAAP, FACP
>    Pediatric Infectious Diseases
>    Hospital Medicine
> Depts of Internal Medicine and Pediatrics
> Duke University Medical Center
>
> ______________________________________
>
> This message and any included attachments are confidential and are 
> intended only for the addressee(s).  The information contained herein 
> may be confidential under the attorney/client privilege and/or the 
> quality assurance and peer review privilege.  Unauthorized review, 
> forwarding, printing, copying or otherwise distributing or using such 
> information is prohibited and may be unlawful.  If you have received 
> this message in error, please notify the sender promptly by email or 
> telephone and delete the message.
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From b.rowlingson at lancaster.ac.uk  Tue Dec 29 12:05:54 2015
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Tue, 29 Dec 2015 11:05:54 +0000
Subject: [R-sig-Geo] Prepping data for FlexScan
In-Reply-To: <alpine.LFD.2.20.1512282320190.9611@reclus.nhh.no>
References: <CY1PR05MB1915134C77AC5951E2F94A5CB5E60@CY1PR05MB1915.namprd05.prod.outlook.com>
	<alpine.LFD.2.20.1512282320190.9611@reclus.nhh.no>
Message-ID: <CANVKczMaBmGt6xnhFANJA4xXNTuFyUxPWdDkZAguo5Uueg4eoQ@mail.gmail.com>

FlexScan seems to be distributed as a closed-source Windows-binary
only piece of software:

https://sites.google.com/site/flexscansoftware/home

which raises lots of "avoid at all costs" red flags for me.

The methodology is published and could be re-implemented as an R
package by a smart enough programmer... Are we too late for a Google
SoC project?

Barry


On Mon, Dec 28, 2015 at 10:23 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> Please provide a link to the documentation of what FlexScan expects to read
> and possibly your script, output file, and a sample correctly formatted
> file; it appears it is not actively used here (at this time of year anyway).
> Is this a case where the OS line feed/carriage return may make a difference?
>
> Roger
>
> On Wed, 23 Dec 2015, Paul Lantos wrote:
>
>> Hi,
>>
>> I'm trying to prepare data for FlexScan to use the flexible cluster scan
>> statistic, and I'm having difficulty getting data in the right format.
>>
>>
>> The problem seems to be in the creation of a neighbor matrix file. I've
>> been using a point data source, creating thiessen polygons (in ArcGIS), then
>> exporting as a shapefile to R where in spdep I create an nb object using
>> poly2nb. I've then exported it using the nb2inla function.
>>
>>
>> But FlexScan does not seem to like the neighbor matrix file I've created,
>> it gives me a generic error.
>>
>>
>>
>>
>> Thanks,
>>
>> Paul
>>
>>
>> ______________________________________
>> Paul M. Lantos, M.D., FIDSA, FAAP, FACP
>>    Pediatric Infectious Diseases
>>    Hospital Medicine
>> Depts of Internal Medicine and Pediatrics
>> Duke University Medical Center
>>
>> ______________________________________
>>
>> This message and any included attachments are confidential and are
>> intended only for the addressee(s).  The information contained herein may be
>> confidential under the attorney/client privilege and/or the quality
>> assurance and peer review privilege.  Unauthorized review, forwarding,
>> printing, copying or otherwise distributing or using such information is
>> prohibited and may be unlawful.  If you have received this message in error,
>> please notify the sender promptly by email or telephone and delete the
>> message.
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; fax +47 55 95 91 00
> e-mail: Roger.Bivand at nhh.no
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From paul.lantos at duke.edu  Tue Dec 29 12:40:54 2015
From: paul.lantos at duke.edu (Paul Lantos)
Date: Tue, 29 Dec 2015 11:40:54 +0000
Subject: [R-sig-Geo] Prepping data for FlexScan
In-Reply-To: <CANVKczMaBmGt6xnhFANJA4xXNTuFyUxPWdDkZAguo5Uueg4eoQ@mail.gmail.com>
References: <CY1PR05MB1915134C77AC5951E2F94A5CB5E60@CY1PR05MB1915.namprd05.prod.outlook.com>
	<alpine.LFD.2.20.1512282320190.9611@reclus.nhh.no>
	<CANVKczMaBmGt6xnhFANJA4xXNTuFyUxPWdDkZAguo5Uueg4eoQ@mail.gmail.com>
Message-ID: <CY1PR05MB191511127B69C1EB8C894089B5FC0@CY1PR05MB1915.namprd05.prod.outlook.com>

Here is the link to the user manual; there is an image of the matrix definition file on page 9.

https://sites.google.com/site/flexscansoftware/download_e/FleXScan%20User%20Guide_e31.pdf?attredirects=0&d=1

Martin Kulldorff is on at least one of the publications with the Japanese group that designed FlexScan, which is a sign in its favor. He's never incorporated it into SatScan, however.

Paul


-----Original Message-----
From: b.rowlingson at gmail.com [mailto:b.rowlingson at gmail.com] On Behalf Of Barry Rowlingson
Sent: Tuesday, December 29, 2015 6:06 AM
To: Roger Bivand <Roger.Bivand at nhh.no>
Cc: Paul Lantos <paul.lantos at dm.duke.edu>; r-sig-geo at r-project.org
Subject: Re: [R-sig-Geo] Prepping data for FlexScan

FlexScan seems to be distributed as a closed-source Windows-binary only piece of software:

https://sites.google.com/site/flexscansoftware/home

which raises lots of "avoid at all costs" red flags for me.

The methodology is published and could be re-implemented as an R package by a smart enough programmer... Are we too late for a Google SoC project?

Barry


On Mon, Dec 28, 2015 at 10:23 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> Please provide a link to the documentation of what FlexScan expects to 
> read and possibly your script, output file, and a sample correctly 
> formatted file; it appears it is not actively used here (at this time of year anyway).
> Is this a case where the OS line feed/carriage return may make a difference?
>
> Roger
>
> On Wed, 23 Dec 2015, Paul Lantos wrote:
>
>> Hi,
>>
>> I'm trying to prepare data for FlexScan to use the flexible cluster 
>> scan statistic, and I'm having difficulty getting data in the right format.
>>
>>
>> The problem seems to be in the creation of a neighbor matrix file. 
>> I've been using a point data source, creating thiessen polygons (in 
>> ArcGIS), then exporting as a shapefile to R where in spdep I create 
>> an nb object using poly2nb. I've then exported it using the nb2inla function.
>>
>>
>> But FlexScan does not seem to like the neighbor matrix file I've 
>> created, it gives me a generic error.
>>
>>
>>
>>
>> Thanks,
>>
>> Paul
>>
>>
>> ______________________________________
>> Paul M. Lantos, M.D., FIDSA, FAAP, FACP
>>    Pediatric Infectious Diseases
>>    Hospital Medicine
>> Depts of Internal Medicine and Pediatrics Duke University Medical 
>> Center
>>
>> ______________________________________
>>
>> This message and any included attachments are confidential and are 
>> intended only for the addressee(s).  The information contained herein 
>> may be confidential under the attorney/client privilege and/or the 
>> quality assurance and peer review privilege.  Unauthorized review, 
>> forwarding, printing, copying or otherwise distributing or using such 
>> information is prohibited and may be unlawful.  If you have received 
>> this message in error, please notify the sender promptly by email or 
>> telephone and delete the message.
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics, Helleveien 30, 
> N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; fax +47 55 95 91 00
> e-mail: Roger.Bivand at nhh.no
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

From s.m.mordue at newcastle.ac.uk  Tue Dec 29 12:56:09 2015
From: s.m.mordue at newcastle.ac.uk (Simone Mordue (PGR))
Date: Tue, 29 Dec 2015 11:56:09 +0000
Subject: [R-sig-Geo] Prepping data for FlexScan
In-Reply-To: <CY1PR05MB191511127B69C1EB8C894089B5FC0@CY1PR05MB1915.namprd05.prod.outlook.com>
References: <CY1PR05MB1915134C77AC5951E2F94A5CB5E60@CY1PR05MB1915.namprd05.prod.outlook.com>
	<alpine.LFD.2.20.1512282320190.9611@reclus.nhh.no>
	<CANVKczMaBmGt6xnhFANJA4xXNTuFyUxPWdDkZAguo5Uueg4eoQ@mail.gmail.com>,
	<CY1PR05MB191511127B69C1EB8C894089B5FC0@CY1PR05MB1915.namprd05.prod.outlook.com>
Message-ID: <F8CECEC3-51DF-4951-BF8F-7A4BBAF73EE5@newcastle.ac.uk>

Please unsubscribe me from the list.

Simone Mordue MSc.
Ph.D. student

BCES Modelling Group, Newcastle University
Telephone: 07840524435 l Email: s.m.mordue at ncl.ac.uk<mailto:s.m.mordue at ncl.ac.uk>
Research: http://www.researchgate.net/profile/Simone Mordue l Twitter: @SimoneMordue
Address: School of Biology, Ridley Building 2, Newcastle Upon Tyne. NE1 7RU

On 29 Dec 2015, at 11:42, Paul Lantos <paul.lantos at duke.edu<mailto:paul.lantos at duke.edu>> wrote:

Here is the link to the user manual; there is an image of the matrix definition file on page 9.

https://sites.google.com/site/flexscansoftware/download_e/FleXScan%20User%20Guide_e31.pdf?attredirects=0&d=1

Martin Kulldorff is on at least one of the publications with the Japanese group that designed FlexScan, which is a sign in its favor. He's never incorporated it into SatScan, however.

Paul


-----Original Message-----
From: b.rowlingson at gmail.com<mailto:b.rowlingson at gmail.com> [mailto:b.rowlingson at gmail.com] On Behalf Of Barry Rowlingson
Sent: Tuesday, December 29, 2015 6:06 AM
To: Roger Bivand <Roger.Bivand at nhh.no<mailto:Roger.Bivand at nhh.no>>
Cc: Paul Lantos <paul.lantos at dm.duke.edu<mailto:paul.lantos at dm.duke.edu>>; r-sig-geo at r-project.org<mailto:r-sig-geo at r-project.org>
Subject: Re: [R-sig-Geo] Prepping data for FlexScan

FlexScan seems to be distributed as a closed-source Windows-binary only piece of software:

https://sites.google.com/site/flexscansoftware/home

which raises lots of "avoid at all costs" red flags for me.

The methodology is published and could be re-implemented as an R package by a smart enough programmer... Are we too late for a Google SoC project?

Barry


On Mon, Dec 28, 2015 at 10:23 PM, Roger Bivand <Roger.Bivand at nhh.no<mailto:Roger.Bivand at nhh.no>> wrote:
Please provide a link to the documentation of what FlexScan expects to
read and possibly your script, output file, and a sample correctly
formatted file; it appears it is not actively used here (at this time of year anyway).
Is this a case where the OS line feed/carriage return may make a difference?

Roger

On Wed, 23 Dec 2015, Paul Lantos wrote:

Hi,

I'm trying to prepare data for FlexScan to use the flexible cluster
scan statistic, and I'm having difficulty getting data in the right format.


The problem seems to be in the creation of a neighbor matrix file.
I've been using a point data source, creating thiessen polygons (in
ArcGIS), then exporting as a shapefile to R where in spdep I create
an nb object using poly2nb. I've then exported it using the nb2inla function.


But FlexScan does not seem to like the neighbor matrix file I've
created, it gives me a generic error.




Thanks,

Paul


______________________________________
Paul M. Lantos, M.D., FIDSA, FAAP, FACP
  Pediatric Infectious Diseases
  Hospital Medicine
Depts of Internal Medicine and Pediatrics Duke University Medical
Center

______________________________________

This message and any included attachments are confidential and are
intended only for the addressee(s).  The information contained herein
may be confidential under the attorney/client privilege and/or the
quality assurance and peer review privilege.  Unauthorized review,
forwarding, printing, copying or otherwise distributing or using such
information is prohibited and may be unlawful.  If you have received
this message in error, please notify the sender promptly by email or
telephone and delete the message.

       [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org<mailto:R-sig-Geo at r-project.org>
https://stat.ethz.ch/mailman/listinfo/r-sig-geo


--
Roger Bivand
Department of Economics, Norwegian School of Economics, Helleveien 30,
N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no<mailto:Roger.Bivand at nhh.no>

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org<mailto:R-sig-Geo at r-project.org>
https://stat.ethz.ch/mailman/listinfo/r-sig-geo
_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org<mailto:R-sig-Geo at r-project.org>
https://stat.ethz.ch/mailman/listinfo/r-sig-geo

	[[alternative HTML version deleted]]


From Virgilio.Gomez at uclm.es  Tue Dec 29 13:02:02 2015
From: Virgilio.Gomez at uclm.es (VIRGILIO GOMEZ RUBIO)
Date: Tue, 29 Dec 2015 12:02:02 +0000
Subject: [R-sig-Geo] Prepping data for FlexScan
In-Reply-To: <CY1PR05MB191511127B69C1EB8C894089B5FC0@CY1PR05MB1915.namprd05.prod.outlook.com>
References: <CY1PR05MB1915134C77AC5951E2F94A5CB5E60@CY1PR05MB1915.namprd05.prod.outlook.com>
	<alpine.LFD.2.20.1512282320190.9611@reclus.nhh.no>
	<CANVKczMaBmGt6xnhFANJA4xXNTuFyUxPWdDkZAguo5Uueg4eoQ@mail.gmail.com>
	<CY1PR05MB191511127B69C1EB8C894089B5FC0@CY1PR05MB1915.namprd05.prod.outlook.com>
Message-ID: <94B6EC30-CC21-47B0-A543-0767A779A692@uclm.es>

Dear Paul,

> Here is the link to the user manual; there is an image of the matrix definition file on page 9.
> 
> https://sites.google.com/site/flexscansoftware/download_e/FleXScan%20User%20Guide_e31.pdf?attredirects=0&d=1
> 

It seems that all the files have the same format: ASCII file with values separated by a space. You can easily take a data.frame and get this type of output with write.table(). But you will need to feed it with the right variables, of course.

Also, you may want to check packages DCluster (on CRAN) and dclusterm (on r-forge). dclusterm is a model-based approach to cluster detection and will detect cluster after accounting for different types of covariates (quantitative and qualitative). FlexScan seems to only cope with categorical variables. We are working on dclusterm at the moment and we hope to make an official release on CRAN soon.

> Martin Kulldorff is on at least one of the publications with the Japanese group that designed FlexScan, which is a sign in its favor. He's never incorporated it into SatScan, however.

I think that Barry?s red flag is about Flexscan not being open-source?

In any case, this is probably something that could be included in DCluster and/or dclusterm. Not sure if this will be enough for a GSoC project but I will be happy to help.

Best,

Virgilio

From a.mosnier at gmail.com  Tue Dec 29 21:05:38 2015
From: a.mosnier at gmail.com (Arnaud Mosnier)
Date: Tue, 29 Dec 2015 15:05:38 -0500
Subject: [R-sig-Geo] Single side buffer in R
Message-ID: <CANkFkEfX3Pk49rgxAGFdWvXwYqKuLuTK2VJqe==+VVud6j4TQA@mail.gmail.com>

Dear spatial object users,

Is there a way to make a single side buffer (left or right) based on
SpatialLines?

Generally I use the trick consisting in cutting the buffer with the
expected width with a really small one, but in this case, it does not works
(see below).
I think that a single side buffer tool exists in Geos (but not via rgeos).
Is that kind of function available in another package?

Thanks

Arnaud


### Example

library(rgeos)
library(sp)
coords <- data.frame(matrix(c(rep(seq(0,10),each=2)), ncol=2, byrow=T))
colnames(coords) <- c("X","Y")
coordinates(coords) <- ~ X + Y
spL <- SpatialLines(list(as(coords,"Lines")))
plot(spL)
Buf <- gBuffer(spL, width=2, capStyle="FLAT")
Cut <- gBuffer(spL, width=0.001, capStyle="SQUARE")
out <- disaggregate(gDifference(Buf,Cut))
plot(out, col=c(1,2))
plot(spL, col="blue", add=T, lwd=2) # It works

coords <- data.frame(matrix(c(0,0,1,1,1.5,0,3,3,4,4), ncol=2, byrow=T))
colnames(coords) <- c("X","Y")
coordinates(coords) <- ~ X + Y
spL <- SpatialLines(list(as(coords,"Lines")))
plot(spL)
Buf <- gBuffer(spL, width=2, capStyle="FLAT")
Cut <- gBuffer(spL, width=0.001, capStyle="SQUARE")
out <- disaggregate(gDifference(Buf,Cut))
plot(out, col=c(1,2))
plot(spL, col="blue", add=T, lwd=2) # Now it is broken because the small
buffer does not cut the larger on all its length

	[[alternative HTML version deleted]]


From cvergara at proyectos.uct.cl  Thu Dec 31 04:31:18 2015
From: cvergara at proyectos.uct.cl (CRISTIAN ANDRES VERGARA FERNANDEZ)
Date: Thu, 31 Dec 2015 00:31:18 -0300
Subject: [R-sig-Geo] accuracy assessment of tematic maps in R
Message-ID: <CAD2SsrSS3mUKrimcD4zqG6uFU+9vW4oRyt4CbKv=6TaKWY-QLQ@mail.gmail.com>

Dear all,

I have done a number of land cover maps using support vector machine from
landsat 8. I would like to automatize an accuracy assessment procedure
based on a confusion matrix to evaluate the classification maps obtained. I
have not been able to easily find a package containing the confusion matrix
function. Would you recommend me a way to do this using R?

Many thanks in advance

-- 
-- 
Atte.,

*Mg. Cristi?n Andr?s Vergara Fern?ndez*

*ProfesionalLicenciado en Ciencias de los Recursos Naturales
RenovablesMagister en Biodiversidad: Conservaci?n y Evoluci?n *
Laboratorio de Planificaci?n Territorial
Universidad Cat?lica de Temuco

*Contacto: ** +56 9 62175676*


*Antes de imprimir este correo electr?nico piense bien si es necesario
hacerlo: El medio ambiente es responsabilidad de todos.*

	[[alternative HTML version deleted]]


From bfalevlist at gmail.com  Thu Dec 31 09:10:41 2015
From: bfalevlist at gmail.com (=?UTF-8?Q?Bede-Fazekas_=c3=81kos?=)
Date: Thu, 31 Dec 2015 09:10:41 +0100
Subject: [R-sig-Geo] accuracy assessment of tematic maps in R
In-Reply-To: <CAD2SsrSS3mUKrimcD4zqG6uFU+9vW4oRyt4CbKv=6TaKWY-QLQ@mail.gmail.com>
References: <CAD2SsrSS3mUKrimcD4zqG6uFU+9vW4oRyt4CbKv=6TaKWY-QLQ@mail.gmail.com>
Message-ID: <5684E301.1070602@gmail.com>

Dear Cristi?n,
there migt be several packages that can compute confusion matrix (aka. 
contingency table):
??contingency

One of them that I can recommend you is package 'ROCR' and functions 
ROCR::prediction() and ROCR::performance().

## Creates a ROCR::prediction object:
ROCR_object <- prediction(predictions = predicted_values, labels = 
observed_values)

## Calculates performance measures:
AUC_value <- performance(prediction.obj = ROCR_object, measure = 
"auc")@y.values[[1]]
TPR_value <- performance(prediction.obj = ROCR_object, measure = 
"tpr")@y.values[[1]]

## Calculates performance graphs:
ROC_curve <- performance(prediction.obj = ROCR_object, measure = "tpr", 
x.measure = "fpr")
precision_recall <- performance(prediction.obj = ROCR_object, measure = 
"prec", x.measure = "rec")
sensitivity_specificity <- performance(prediction.obj = ROCR_object, 
measure = "sens", x.measure = "spec")
plot(ROC_curve)
plot(precision_recall)
plot(sensitivity_specificity)

HTH,
?kos Bede-Fazekas
Hungary

2015.12.31. 4:31 keltez?ssel, CRISTIAN ANDRES VERGARA FERNANDEZ ?rta:
> Dear all,
>
> I have done a number of land cover maps using support vector machine from
> landsat 8. I would like to automatize an accuracy assessment procedure
> based on a confusion matrix to evaluate the classification maps obtained. I
> have not been able to easily find a package containing the confusion matrix
> function. Would you recommend me a way to do this using R?
>
> Many thanks in advance
>


From b.rowlingson at lancaster.ac.uk  Thu Dec 31 13:45:43 2015
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Thu, 31 Dec 2015 12:45:43 +0000
Subject: [R-sig-Geo] Single side buffer in R
In-Reply-To: <CANkFkEfX3Pk49rgxAGFdWvXwYqKuLuTK2VJqe==+VVud6j4TQA@mail.gmail.com>
References: <CANkFkEfX3Pk49rgxAGFdWvXwYqKuLuTK2VJqe==+VVud6j4TQA@mail.gmail.com>
Message-ID: <CANVKczPp8MkAUyo78ijc-TNfY8f47oo+qO7WDKp57CVF0JyUVw@mail.gmail.com>

What's happened here is that part of the RHS of the buffer (from the
acute angle segment) has wrapped round so far that it has overlapped
with the LHS of the buffer from the first segment. So there's an area
which is both on the LHS of the line and the RHS. What do you want it
to be?

You could just extend the ends of the last segments to infinity (and
beyond!!) and use that to cut the buffer, but an odd little end line
segment could mess this up. Fundamentally I don't think there's a
clear definition of what to do...

You probably have to decide more formally what constitutes the LHS and
RHS of your line segment, but I'm not sure in what terms you can make
this without ambiguity...

On Tue, Dec 29, 2015 at 8:05 PM, Arnaud Mosnier <a.mosnier at gmail.com> wrote:
> Dear spatial object users,
>
> Is there a way to make a single side buffer (left or right) based on
> SpatialLines?
>
> Generally I use the trick consisting in cutting the buffer with the
> expected width with a really small one, but in this case, it does not works
> (see below).
> I think that a single side buffer tool exists in Geos (but not via rgeos).
> Is that kind of function available in another package?
>
> Thanks
>
> Arnaud
>
>
> ### Example
>
> library(rgeos)
> library(sp)
> coords <- data.frame(matrix(c(rep(seq(0,10),each=2)), ncol=2, byrow=T))
> colnames(coords) <- c("X","Y")
> coordinates(coords) <- ~ X + Y
> spL <- SpatialLines(list(as(coords,"Lines")))
> plot(spL)
> Buf <- gBuffer(spL, width=2, capStyle="FLAT")
> Cut <- gBuffer(spL, width=0.001, capStyle="SQUARE")
> out <- disaggregate(gDifference(Buf,Cut))
> plot(out, col=c(1,2))
> plot(spL, col="blue", add=T, lwd=2) # It works
>
> coords <- data.frame(matrix(c(0,0,1,1,1.5,0,3,3,4,4), ncol=2, byrow=T))
> colnames(coords) <- c("X","Y")
> coordinates(coords) <- ~ X + Y
> spL <- SpatialLines(list(as(coords,"Lines")))
> plot(spL)
> Buf <- gBuffer(spL, width=2, capStyle="FLAT")
> Cut <- gBuffer(spL, width=0.001, capStyle="SQUARE")
> out <- disaggregate(gDifference(Buf,Cut))
> plot(out, col=c(1,2))
> plot(spL, col="blue", add=T, lwd=2) # Now it is broken because the small
> buffer does not cut the larger on all its length
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From amsantac at hotmail.com  Thu Dec 31 15:02:26 2015
From: amsantac at hotmail.com (Ali Santacruz)
Date: Thu, 31 Dec 2015 09:02:26 -0500
Subject: [R-sig-Geo] accuracy assessment of tematic maps in R
In-Reply-To: <5684E301.1070602@gmail.com>
References: <CAD2SsrSS3mUKrimcD4zqG6uFU+9vW4oRyt4CbKv=6TaKWY-QLQ@mail.gmail.com>,
	<5684E301.1070602@gmail.com>
Message-ID: <BLU184-W1230296086351C71BB148FC9FE0@phx.gbl>

 
Dear Cristian,
 
The confusion matrix can be produced using the crosstab function from the raster package or the crosstabm function from the diffeR package,
 
You may also want to take a look at the difference metrics for comparing maps based on the confusion matrix from the diffeR package. If you are also interested in producing ROC curves, check out the TOC package.
 
Best,
 
Ali

 
> To: r-sig-geo at r-project.org
> From: bfalevlist at gmail.com
> Date: Thu, 31 Dec 2015 09:10:41 +0100
> Subject: Re: [R-sig-Geo] accuracy assessment of tematic maps in R
> 
> Dear Cristi?n,
> there migt be several packages that can compute confusion matrix (aka. 
> contingency table):
> ??contingency
> 
> One of them that I can recommend you is package 'ROCR' and functions 
> ROCR::prediction() and ROCR::performance().
> 
> ## Creates a ROCR::prediction object:
> ROCR_object <- prediction(predictions = predicted_values, labels = 
> observed_values)
> 
> ## Calculates performance measures:
> AUC_value <- performance(prediction.obj = ROCR_object, measure = 
> "auc")@y.values[[1]]
> TPR_value <- performance(prediction.obj = ROCR_object, measure = 
> "tpr")@y.values[[1]]
> 
> ## Calculates performance graphs:
> ROC_curve <- performance(prediction.obj = ROCR_object, measure = "tpr", 
> x.measure = "fpr")
> precision_recall <- performance(prediction.obj = ROCR_object, measure = 
> "prec", x.measure = "rec")
> sensitivity_specificity <- performance(prediction.obj = ROCR_object, 
> measure = "sens", x.measure = "spec")
> plot(ROC_curve)
> plot(precision_recall)
> plot(sensitivity_specificity)
> 
> HTH,
> ?kos Bede-Fazekas
> Hungary
> 
> 2015.12.31. 4:31 keltez?ssel, CRISTIAN ANDRES VERGARA FERNANDEZ ?rta:
> > Dear all,
> >
> > I have done a number of land cover maps using support vector machine from
> > landsat 8. I would like to automatize an accuracy assessment procedure
> > based on a confusion matrix to evaluate the classification maps obtained. I
> > have not been able to easily find a package containing the confusion matrix
> > function. Would you recommend me a way to do this using R?
> >
> > Many thanks in advance
> >
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
 		 	   		  
	[[alternative HTML version deleted]]


From a.mosnier at gmail.com  Thu Dec 31 15:14:48 2015
From: a.mosnier at gmail.com (Arnaud Mosnier)
Date: Thu, 31 Dec 2015 09:14:48 -0500
Subject: [R-sig-Geo] Single side buffer in R
In-Reply-To: <CANVKczPp8MkAUyo78ijc-TNfY8f47oo+qO7WDKp57CVF0JyUVw@mail.gmail.com>
References: <CANkFkEfX3Pk49rgxAGFdWvXwYqKuLuTK2VJqe==+VVud6j4TQA@mail.gmail.com>
	<CANVKczPp8MkAUyo78ijc-TNfY8f47oo+qO7WDKp57CVF0JyUVw@mail.gmail.com>
Message-ID: <CANkFkEfPEXCkOxRzOm7Vr9Z4ouQcWEnWFfgeKVmx=6ax7-9_Mw@mail.gmail.com>

I solved part of my problem cutting my original line into segments each
time the line makes an angle larger than a defined value, thus, I have now
relatively straight segments on which I can use my previous methodology
(buffer cutting buffer).
But still, I would appreciate if someone can suggest a solution in order to
obtain directly (i.e without using the previous trick) a left or right
buffer based on a SpatialLine.

Thanks and Happy New Year !!!

Arnaud

2015-12-31 7:45 GMT-05:00 Barry Rowlingson <b.rowlingson at lancaster.ac.uk>:

> What's happened here is that part of the RHS of the buffer (from the
> acute angle segment) has wrapped round so far that it has overlapped
> with the LHS of the buffer from the first segment. So there's an area
> which is both on the LHS of the line and the RHS. What do you want it
> to be?
>
> You could just extend the ends of the last segments to infinity (and
> beyond!!) and use that to cut the buffer, but an odd little end line
> segment could mess this up. Fundamentally I don't think there's a
> clear definition of what to do...
>
> You probably have to decide more formally what constitutes the LHS and
> RHS of your line segment, but I'm not sure in what terms you can make
> this without ambiguity...
>
> On Tue, Dec 29, 2015 at 8:05 PM, Arnaud Mosnier <a.mosnier at gmail.com>
> wrote:
> > Dear spatial object users,
> >
> > Is there a way to make a single side buffer (left or right) based on
> > SpatialLines?
> >
> > Generally I use the trick consisting in cutting the buffer with the
> > expected width with a really small one, but in this case, it does not
> works
> > (see below).
> > I think that a single side buffer tool exists in Geos (but not via
> rgeos).
> > Is that kind of function available in another package?
> >
> > Thanks
> >
> > Arnaud
> >
> >
> > ### Example
> >
> > library(rgeos)
> > library(sp)
> > coords <- data.frame(matrix(c(rep(seq(0,10),each=2)), ncol=2, byrow=T))
> > colnames(coords) <- c("X","Y")
> > coordinates(coords) <- ~ X + Y
> > spL <- SpatialLines(list(as(coords,"Lines")))
> > plot(spL)
> > Buf <- gBuffer(spL, width=2, capStyle="FLAT")
> > Cut <- gBuffer(spL, width=0.001, capStyle="SQUARE")
> > out <- disaggregate(gDifference(Buf,Cut))
> > plot(out, col=c(1,2))
> > plot(spL, col="blue", add=T, lwd=2) # It works
> >
> > coords <- data.frame(matrix(c(0,0,1,1,1.5,0,3,3,4,4), ncol=2, byrow=T))
> > colnames(coords) <- c("X","Y")
> > coordinates(coords) <- ~ X + Y
> > spL <- SpatialLines(list(as(coords,"Lines")))
> > plot(spL)
> > Buf <- gBuffer(spL, width=2, capStyle="FLAT")
> > Cut <- gBuffer(spL, width=0.001, capStyle="SQUARE")
> > out <- disaggregate(gDifference(Buf,Cut))
> > plot(out, col=c(1,2))
> > plot(spL, col="blue", add=T, lwd=2) # Now it is broken because the small
> > buffer does not cut the larger on all its length
> >
> >         [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From tmeeha at gmail.com  Thu Dec 31 17:22:35 2015
From: tmeeha at gmail.com (Tim Meehan)
Date: Thu, 31 Dec 2015 09:22:35 -0700
Subject: [R-sig-Geo] accuracy assessment of tematic maps in R
In-Reply-To: <CAD2SsrSS3mUKrimcD4zqG6uFU+9vW4oRyt4CbKv=6TaKWY-QLQ@mail.gmail.com>
References: <CAD2SsrSS3mUKrimcD4zqG6uFU+9vW4oRyt4CbKv=6TaKWY-QLQ@mail.gmail.com>
Message-ID: <CAMTWOzrhhtgjxXbD0Cjo7QkFzkzWgEUqZ9fre545Xgrf5YVkNQ@mail.gmail.com>

You can try the confusion matrix functions in 'caret'.  Best, Tim

2015-12-30 20:31 GMT-07:00 CRISTIAN ANDRES VERGARA FERNANDEZ <
cvergara at proyectos.uct.cl>:

> Dear all,
>
> I have done a number of land cover maps using support vector machine from
> landsat 8. I would like to automatize an accuracy assessment procedure
> based on a confusion matrix to evaluate the classification maps obtained. I
> have not been able to easily find a package containing the confusion matrix
> function. Would you recommend me a way to do this using R?
>
> Many thanks in advance
>
> --
> --
> Atte.,
>
> *Mg. Cristi?n Andr?s Vergara Fern?ndez*
>
> *ProfesionalLicenciado en Ciencias de los Recursos Naturales
> RenovablesMagister en Biodiversidad: Conservaci?n y Evoluci?n *
> Laboratorio de Planificaci?n Territorial
> Universidad Cat?lica de Temuco
>
> *Contacto: ** +56 9 62175676*
>
>
> *Antes de imprimir este correo electr?nico piense bien si es necesario
> hacerlo: El medio ambiente es responsabilidad de todos.*
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

	[[alternative HTML version deleted]]


