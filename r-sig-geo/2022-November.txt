From n|ckmwr@y @end|ng |rom gm@||@com  Wed Nov  9 11:53:45 2022
From: n|ckmwr@y @end|ng |rom gm@||@com (Nick Wray)
Date: Wed, 9 Nov 2022 10:53:45 +0000
Subject: [R-sig-Geo] getting data from an nc file
Message-ID: <CABxY9BNs6Fz6M_0wHy37BRR420jWOhqqg6vEevsLdreQxrvBfQ@mail.gmail.com>

Hello

I am trying to get rainfall data from the UK chess-met site

https://catalogue.ceh.ac.uk/datastore/eidchub/2ab15bf0-ad08-415c-ba64-831168be7293/precip/

and here there are a large number of nc files eg

"chess-met_precip_gb_1km_daily_20150101-20150131.nc"

I?ve found various sources on the net for opening nc files, and getting the
data but when I try instructions like

nc_data<-nc_open("chess-met_precip_gb_1km_daily_20150101-20150131.nc")

lon <- ncvar_get(nc_data, "lon")

lon



the code works but all I get is a series of element numbers and no data:

[,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]     [,9]
[,10]    [,11]    [,12]

          [,13]    [,14]    [,15]    [,16]    [,17]    [,18]    [,19]
[,20]    [,21]    [,22]    [,23]    [,24]



And similarly for latitude

But if I open the nc file as a raster I get a raster precipitation plot of
Great Britain, which rather suggests that the lat and long values are in
there somewhere

Can anyone help with getting the actual data sets out of an nc file?

Thanks Nick Wray

	[[alternative HTML version deleted]]


From md@umner @end|ng |rom gm@||@com  Wed Nov  9 12:54:47 2022
From: md@umner @end|ng |rom gm@||@com (Michael Sumner)
Date: Wed, 9 Nov 2022 22:54:47 +1100
Subject: [R-sig-Geo] getting data from an nc file
In-Reply-To: <CABxY9BNs6Fz6M_0wHy37BRR420jWOhqqg6vEevsLdreQxrvBfQ@mail.gmail.com>
References: <CABxY9BNs6Fz6M_0wHy37BRR420jWOhqqg6vEevsLdreQxrvBfQ@mail.gmail.com>
Message-ID: <CAAcGz9-Nm_4rZ5aDsgT=C_6-OOyND1Fi_iBt9s0MLqxbpZ589g@mail.gmail.com>

have a look at the output of printing nc_data, you are looking for
dimensions that belong to a 2D (or higher) variable of interest .

They can be called anything, but longitude, lon, x, etc are common. you can
use ncdf4 functions to find them (without reading the output), but it's all
stored in a nested list in nc_data).

See ncmeta package for an alternative way to access the metadata.

Hth, Mike

On Wed, 9 Nov 2022, 21:54 Nick Wray, <nickmwray at gmail.com> wrote:

> Hello
>
> I am trying to get rainfall data from the UK chess-met site
>
>
> https://catalogue.ceh.ac.uk/datastore/eidchub/2ab15bf0-ad08-415c-ba64-831168be7293/precip/
>
> and here there are a large number of nc files eg
>
> "chess-met_precip_gb_1km_daily_20150101-20150131.nc"
>
> I?ve found various sources on the net for opening nc files, and getting the
> data but when I try instructions like
>
> nc_data<-nc_open("chess-met_precip_gb_1km_daily_20150101-20150131.nc")
>
> lon <- ncvar_get(nc_data, "lon")
>
> lon
>
>
>
> the code works but all I get is a series of element numbers and no data:
>
> [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]
>  [,9]
> [,10]    [,11]    [,12]
>
>           [,13]    [,14]    [,15]    [,16]    [,17]    [,18]    [,19]
> [,20]    [,21]    [,22]    [,23]    [,24]
>
>
>
> And similarly for latitude
>
> But if I open the nc file as a raster I get a raster precipitation plot of
> Great Britain, which rather suggests that the lat and long values are in
> there somewhere
>
> Can anyone help with getting the actual data sets out of an nc file?
>
> Thanks Nick Wray
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From g@@@uu| @end|ng |rom gm@||@com  Thu Nov 10 02:49:05 2022
From: g@@@uu| @end|ng |rom gm@||@com (ani jaya)
Date: Thu, 10 Nov 2022 10:49:05 +0900
Subject: [R-sig-Geo] getting data from an nc file
In-Reply-To: <CABxY9BNs6Fz6M_0wHy37BRR420jWOhqqg6vEevsLdreQxrvBfQ@mail.gmail.com>
References: <CABxY9BNs6Fz6M_0wHy37BRR420jWOhqqg6vEevsLdreQxrvBfQ@mail.gmail.com>
Message-ID: <CAHXS41zrq_nR72SLhqVo0eDq8KodoCqqJuPO3eYAsCBGBjZCnA@mail.gmail.com>

Maybe you are looking for something like this:

nc_data<-nc_open("chess-met_precip_gb_1km_daily_20150101-20150131.nc")
lon<-lon<-nc_data$dim$LON$vals
lat<-nc_data$dim$LAT$vals

or

lon<-ncvar_get(nc_data,nc_data$dim$LON)
lat<-ncvar_get(nc_data,nc_data$dim$LAT)

Note that the LON and LAT can be anything as Mike said. Hope it's helps.

Ani

On Wed, Nov 9, 2022 at 7:54 PM Nick Wray <nickmwray at gmail.com> wrote:
>
> Hello
>
> I am trying to get rainfall data from the UK chess-met site
>
> https://catalogue.ceh.ac.uk/datastore/eidchub/2ab15bf0-ad08-415c-ba64-831168be7293/precip/
>
> and here there are a large number of nc files eg
>
> "chess-met_precip_gb_1km_daily_20150101-20150131.nc"
>
> I?ve found various sources on the net for opening nc files, and getting the
> data but when I try instructions like
>
> nc_data<-nc_open("chess-met_precip_gb_1km_daily_20150101-20150131.nc")
>
> lon <- ncvar_get(nc_data, "lon")
>
> lon
>
>
>
> the code works but all I get is a series of element numbers and no data:
>
> [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]     [,9]
> [,10]    [,11]    [,12]
>
>           [,13]    [,14]    [,15]    [,16]    [,17]    [,18]    [,19]
> [,20]    [,21]    [,22]    [,23]    [,24]
>
>
>
> And similarly for latitude
>
> But if I open the nc file as a raster I get a raster precipitation plot of
> Great Britain, which rather suggests that the lat and long values are in
> there somewhere
>
> Can anyone help with getting the actual data sets out of an nc file?
>
> Thanks Nick Wray
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From v|@d@@m|h@e@e|95 @end|ng |rom gm@||@com  Thu Nov 10 04:25:18 2022
From: v|@d@@m|h@e@e|95 @end|ng |rom gm@||@com (Vlad Amihaesei)
Date: Wed, 9 Nov 2022 20:25:18 -0700
Subject: [R-sig-Geo] getting data from an nc file
In-Reply-To: <CAHXS41zrq_nR72SLhqVo0eDq8KodoCqqJuPO3eYAsCBGBjZCnA@mail.gmail.com>
References: <CABxY9BNs6Fz6M_0wHy37BRR420jWOhqqg6vEevsLdreQxrvBfQ@mail.gmail.com>
 <CAHXS41zrq_nR72SLhqVo0eDq8KodoCqqJuPO3eYAsCBGBjZCnA@mail.gmail.com>
Message-ID: <CAAQaj818hAnvep65w4Mu8i0FbqwCWy4sS13tdnQq-zquRhSZ7Q@mail.gmail.com>

Hi,

Or you can try witty terra library :

library(terra)

r <- terra::rast("chess-met_precip_gb_1km_daily_20150101-20150131.nc")
if the nc file has more than one parameters like precipitation,
temperature, humidity etc, try this:
r.sub <- terra::rast("chess-met_precip_gb_1km_daily_20150101-20150131.nc",
subds = "yourvarname")

or with raster library:
r1 <- raster::brick("chess-met_precip_gb_1km_daily_20150101-20150131.nc")
same,
r1.sub <- raster::brick("chess-met_precip_gb_1km_daily_20150101-20150131.nc",
varname  = "yourvarname")

I hope this helps.
Best,
Vlad Amihaesei



On Wed, Nov 9, 2022 at 6:49 PM ani jaya <gaaauul at gmail.com> wrote:

> Maybe you are looking for something like this:
>
> nc_data<-nc_open("chess-met_precip_gb_1km_daily_20150101-20150131.nc")
> lon<-lon<-nc_data$dim$LON$vals
> lat<-nc_data$dim$LAT$vals
>
> or
>
> lon<-ncvar_get(nc_data,nc_data$dim$LON)
> lat<-ncvar_get(nc_data,nc_data$dim$LAT)
>
> Note that the LON and LAT can be anything as Mike said. Hope it's helps.
>
> Ani
>
> On Wed, Nov 9, 2022 at 7:54 PM Nick Wray <nickmwray at gmail.com> wrote:
> >
> > Hello
> >
> > I am trying to get rainfall data from the UK chess-met site
> >
> >
> https://catalogue.ceh.ac.uk/datastore/eidchub/2ab15bf0-ad08-415c-ba64-831168be7293/precip/
> >
> > and here there are a large number of nc files eg
> >
> > "chess-met_precip_gb_1km_daily_20150101-20150131.nc"
> >
> > I?ve found various sources on the net for opening nc files, and getting
> the
> > data but when I try instructions like
> >
> > nc_data<-nc_open("chess-met_precip_gb_1km_daily_20150101-20150131.nc")
> >
> > lon <- ncvar_get(nc_data, "lon")
> >
> > lon
> >
> >
> >
> > the code works but all I get is a series of element numbers and no data:
> >
> > [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]
>  [,9]
> > [,10]    [,11]    [,12]
> >
> >           [,13]    [,14]    [,15]    [,16]    [,17]    [,18]    [,19]
> > [,20]    [,21]    [,22]    [,23]    [,24]
> >
> >
> >
> > And similarly for latitude
> >
> > But if I open the nc file as a raster I get a raster precipitation plot
> of
> > Great Britain, which rather suggests that the lat and long values are in
> > there somewhere
> >
> > Can anyone help with getting the actual data sets out of an nc file?
> >
> > Thanks Nick Wray
> >
> >         [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From roy@mende|@@ohn @end|ng |rom no@@@gov  Thu Nov 10 04:31:59 2022
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Wed, 9 Nov 2022 19:31:59 -0800
Subject: [R-sig-Geo] getting data from an nc file
In-Reply-To: <CABxY9BNs6Fz6M_0wHy37BRR420jWOhqqg6vEevsLdreQxrvBfQ@mail.gmail.com>
References: <CABxY9BNs6Fz6M_0wHy37BRR420jWOhqqg6vEevsLdreQxrvBfQ@mail.gmail.com>
Message-ID: <75165BF1-1485-4568-9C8B-F0B4EE67BDD6@noaa.gov>

Unfortunately you need to register to look at one of those files,  but what I could dig up on the internet suggest the data are on x,y coordinates.  You can find that just giving the command

nc_data 

or for more complete info

str(nc_data)

Also since they say they follow the CF conventions,  so that printout should contain information about the coordinate system.  I can't offhand find the description except a comment somewhere to be careful because of a use fo a different datum.  

HTH,

-Roy

> On Nov 9, 2022, at 2:53 AM, Nick Wray <nickmwray at gmail.com> wrote:
> 
> Hello
> 
> I am trying to get rainfall data from the UK chess-met site
> 
> https://catalogue.ceh.ac.uk/datastore/eidchub/2ab15bf0-ad08-415c-ba64-831168be7293/precip/
> 
> and here there are a large number of nc files eg
> 
> "chess-met_precip_gb_1km_daily_20150101-20150131.nc"
> 
> I?ve found various sources on the net for opening nc files, and getting the
> data but when I try instructions like
> 
> nc_data<-nc_open("chess-met_precip_gb_1km_daily_20150101-20150131.nc")
> 
> lon <- ncvar_get(nc_data, "lon")
> 
> lon
> 
> 
> 
> the code works but all I get is a series of element numbers and no data:
> 
> [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]     [,9]
> [,10]    [,11]    [,12]
> 
>          [,13]    [,14]    [,15]    [,16]    [,17]    [,18]    [,19]
> [,20]    [,21]    [,22]    [,23]    [,24]
> 
> 
> 
> And similarly for latitude
> 
> But if I open the nc file as a raster I get a raster precipitation plot of
> Great Britain, which rather suggests that the lat and long values are in
> there somewhere
> 
> Can anyone help with getting the actual data sets out of an nc file?
> 
> Thanks Nick Wray
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From m||uj|@b @end|ng |rom gm@||@com  Mon Nov 28 13:08:42 2022
From: m||uj|@b @end|ng |rom gm@||@com (Miluji Sb)
Date: Mon, 28 Nov 2022 13:08:42 +0100
Subject: [R-sig-Geo] Convert geojson file to R
Message-ID: <CAMLwc7P8X9LmKE9rRyaxruBqLtk8dhx6-GWtEroyRRT6XtGaeg@mail.gmail.com>

Greetings everyone,

I would like to convert the geojson file (
https://drive.google.com/file/d/18h3sOjZg5jp5euLTWRi5mC40Sja8TZDN/view?usp=sharing)
to a dataframe - essentially obtain which has coordinates matched to a
country.

I have tried the following;

###
states <- geojsonsf::geojson_sf("~/countrymasks.geojson")
geo <- geojsonsf::sf_geojson(states)
sf <- sf::st_read(geo, quiet = T )
df <- as.data.frame(sf::st_coordinates(sf) )
##

But I get the following output, I am a bit lost. Any help will be highly
appreciated.

Best,

  structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
-67.3397099999998, -67.3780199, -67.3221199999999), Y = c(-55.5655699999996,
-55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
-55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
"data.frame")

	[[alternative HTML version deleted]]


From jo@|@h@p@rry @end|ng |rom gm@||@com  Mon Nov 28 13:50:07 2022
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Mon, 28 Nov 2022 07:50:07 -0500
Subject: [R-sig-Geo] Convert geojson file to R
In-Reply-To: <CAMLwc7P8X9LmKE9rRyaxruBqLtk8dhx6-GWtEroyRRT6XtGaeg@mail.gmail.com>
References: <CAMLwc7P8X9LmKE9rRyaxruBqLtk8dhx6-GWtEroyRRT6XtGaeg@mail.gmail.com>
Message-ID: <CAL3ufUKKqO-zEgLL4P02O9Ro0BbwpE2g6rHUGO6MQ=MtWQbkiQ@mail.gmail.com>

You're going to want to read the file with sf.

Try object <- sf::st_read("~countrymasks.geojson")

On Mon, Nov 28, 2022 at 7:09 AM Miluji Sb <milujisb at gmail.com> wrote:

> Greetings everyone,
>
> I would like to convert the geojson file (
>
> https://drive.google.com/file/d/18h3sOjZg5jp5euLTWRi5mC40Sja8TZDN/view?usp=sharing
> )
> to a dataframe - essentially obtain which has coordinates matched to a
> country.
>
> I have tried the following;
>
> ###
> states <- geojsonsf::geojson_sf("~/countrymasks.geojson")
> geo <- geojsonsf::sf_geojson(states)
> sf <- sf::st_read(geo, quiet = T )
> df <- as.data.frame(sf::st_coordinates(sf) )
> ##
>
> But I get the following output, I am a bit lost. Any help will be highly
> appreciated.
>
> Best,
>
>   structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
> -67.3397099999998, -67.3780199, -67.3221199999999), Y =
> c(-55.5655699999996,
> -55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
> -55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
> 1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
> "data.frame")
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From m||uj|@b @end|ng |rom gm@||@com  Mon Nov 28 21:08:13 2022
From: m||uj|@b @end|ng |rom gm@||@com (Miluji Sb)
Date: Mon, 28 Nov 2022 21:08:13 +0100
Subject: [R-sig-Geo] Convert geojson file to R
In-Reply-To: <CAL3ufUKKqO-zEgLL4P02O9Ro0BbwpE2g6rHUGO6MQ=MtWQbkiQ@mail.gmail.com>
References: <CAMLwc7P8X9LmKE9rRyaxruBqLtk8dhx6-GWtEroyRRT6XtGaeg@mail.gmail.com>
 <CAL3ufUKKqO-zEgLL4P02O9Ro0BbwpE2g6rHUGO6MQ=MtWQbkiQ@mail.gmail.com>
Message-ID: <CAMLwc7Ms+ESrzqnghZbs0=6zEZaUjuf3eBOMqcRhZXE_NLe3yQ@mail.gmail.com>

Thank you for reply. When I try using sf, I get the following error;

Error in CPL_read_ogr(dsn, layer, query, as.character(options), quiet,  :
  attempt to set index 210/210 in SET_STRING_ELT.

Thanks again!

On Mon, Nov 28, 2022 at 1:50 PM Josiah Parry <josiah.parry at gmail.com> wrote:

> You're going to want to read the file with sf.
>
> Try object <- sf::st_read("~countrymasks.geojson")
>
> On Mon, Nov 28, 2022 at 7:09 AM Miluji Sb <milujisb at gmail.com> wrote:
>
>> Greetings everyone,
>>
>> I would like to convert the geojson file (
>>
>> https://drive.google.com/file/d/18h3sOjZg5jp5euLTWRi5mC40Sja8TZDN/view?usp=sharing
>> )
>> to a dataframe - essentially obtain which has coordinates matched to a
>> country.
>>
>> I have tried the following;
>>
>> ###
>> states <- geojsonsf::geojson_sf("~/countrymasks.geojson")
>> geo <- geojsonsf::sf_geojson(states)
>> sf <- sf::st_read(geo, quiet = T )
>> df <- as.data.frame(sf::st_coordinates(sf) )
>> ##
>>
>> But I get the following output, I am a bit lost. Any help will be highly
>> appreciated.
>>
>> Best,
>>
>>   structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
>> -67.3397099999998, -67.3780199, -67.3221199999999), Y =
>> c(-55.5655699999996,
>> -55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
>> -55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
>> 1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
>> "data.frame")
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-sig-Geo mailing list
>> R-sig-Geo at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
>

	[[alternative HTML version deleted]]


From b@row||ng@on @end|ng |rom gm@||@com  Mon Nov 28 23:12:56 2022
From: b@row||ng@on @end|ng |rom gm@||@com (Barry Rowlingson)
Date: Mon, 28 Nov 2022 22:12:56 +0000
Subject: [R-sig-Geo] Convert geojson file to R
In-Reply-To: <CAMLwc7Ms+ESrzqnghZbs0=6zEZaUjuf3eBOMqcRhZXE_NLe3yQ@mail.gmail.com>
References: <CAMLwc7P8X9LmKE9rRyaxruBqLtk8dhx6-GWtEroyRRT6XtGaeg@mail.gmail.com>
 <CAL3ufUKKqO-zEgLL4P02O9Ro0BbwpE2g6rHUGO6MQ=MtWQbkiQ@mail.gmail.com>
 <CAMLwc7Ms+ESrzqnghZbs0=6zEZaUjuf3eBOMqcRhZXE_NLe3yQ@mail.gmail.com>
Message-ID: <CANVKczNtUwJpuKr5R7KyyhOLp0q2GryZ02=eT_Ew-bNHcryvNg@mail.gmail.com>

This seems to be a weird bug in `st_read`. If you read it with an SQL
query that matches every row it works:

> js = st_read("./countrymasks.geojson", query="select * from countrymasks where 1 = 1")
Reading query `select * from countrymasks where 1 = 1' from data
source `/home/rowlings/Downloads/countrymasks.geojson' using driver
`GeoJSON'
Simple feature collection with 214 features and 15 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: -180 ymin: -55.79439 xmax: 180 ymax: 83.62742
Geodetic CRS:  WGS 84

But leave out the query and you get that C code level error. Another
equivalent query would be "select * from countrymasks" (without the
"where" clause) but this
triggers the error too. Very odd. Worth reporting as a bug?

Barry




On Mon, Nov 28, 2022 at 8:08 PM Miluji Sb <milujisb at gmail.com> wrote:
>
> Thank you for reply. When I try using sf, I get the following error;
>
> Error in CPL_read_ogr(dsn, layer, query, as.character(options), quiet,  :
>   attempt to set index 210/210 in SET_STRING_ELT.
>
> Thanks again!
>
> On Mon, Nov 28, 2022 at 1:50 PM Josiah Parry <josiah.parry at gmail.com> wrote:
>
> > You're going to want to read the file with sf.
> >
> > Try object <- sf::st_read("~countrymasks.geojson")
> >
> > On Mon, Nov 28, 2022 at 7:09 AM Miluji Sb <milujisb at gmail.com> wrote:
> >
> >> Greetings everyone,
> >>
> >> I would like to convert the geojson file (
> >>
> >> https://drive.google.com/file/d/18h3sOjZg5jp5euLTWRi5mC40Sja8TZDN/view?usp=sharing
> >> )
> >> to a dataframe - essentially obtain which has coordinates matched to a
> >> country.
> >>
> >> I have tried the following;
> >>
> >> ###
> >> states <- geojsonsf::geojson_sf("~/countrymasks.geojson")
> >> geo <- geojsonsf::sf_geojson(states)
> >> sf <- sf::st_read(geo, quiet = T )
> >> df <- as.data.frame(sf::st_coordinates(sf) )
> >> ##
> >>
> >> But I get the following output, I am a bit lost. Any help will be highly
> >> appreciated.
> >>
> >> Best,
> >>
> >>   structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
> >> -67.3397099999998, -67.3780199, -67.3221199999999), Y =
> >> c(-55.5655699999996,
> >> -55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
> >> -55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
> >> 1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
> >> "data.frame")
> >>
> >>         [[alternative HTML version deleted]]
> >>
> >> _______________________________________________
> >> R-sig-Geo mailing list
> >> R-sig-Geo at r-project.org
> >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>
> >
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From m||uj|@b @end|ng |rom gm@||@com  Tue Nov 29 00:58:30 2022
From: m||uj|@b @end|ng |rom gm@||@com (Miluji Sb)
Date: Tue, 29 Nov 2022 00:58:30 +0100
Subject: [R-sig-Geo] Convert geojson file to R
In-Reply-To: <CANVKczNtUwJpuKr5R7KyyhOLp0q2GryZ02=eT_Ew-bNHcryvNg@mail.gmail.com>
References: <CAMLwc7P8X9LmKE9rRyaxruBqLtk8dhx6-GWtEroyRRT6XtGaeg@mail.gmail.com>
 <CAL3ufUKKqO-zEgLL4P02O9Ro0BbwpE2g6rHUGO6MQ=MtWQbkiQ@mail.gmail.com>
 <CAMLwc7Ms+ESrzqnghZbs0=6zEZaUjuf3eBOMqcRhZXE_NLe3yQ@mail.gmail.com>
 <CANVKczNtUwJpuKr5R7KyyhOLp0q2GryZ02=eT_Ew-bNHcryvNg@mail.gmail.com>
Message-ID: <CAMLwc7OFX=5itswYmtEL+S9YK_gVGE2T_FF4V_5aiHGn7tyfug@mail.gmail.com>

Thank you. I will report this bug (I did not have the confidence to call
this a bug before).

Even using your code, I get the same output.

structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
-67.3397099999998, -67.3780199, -67.3221199999999), Y = c(-55.5655699999996,
-55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
-55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
"data.frame")

Thank you again.

On Mon, Nov 28, 2022 at 11:13 PM Barry Rowlingson <b.rowlingson at gmail.com>
wrote:

> This seems to be a weird bug in `st_read`. If you read it with an SQL
> query that matches every row it works:
>
> > js = st_read("./countrymasks.geojson", query="select * from countrymasks
> where 1 = 1")
> Reading query `select * from countrymasks where 1 = 1' from data
> source `/home/rowlings/Downloads/countrymasks.geojson' using driver
> `GeoJSON'
> Simple feature collection with 214 features and 15 fields
> Geometry type: MULTIPOLYGON
> Dimension:     XY
> Bounding box:  xmin: -180 ymin: -55.79439 xmax: 180 ymax: 83.62742
> Geodetic CRS:  WGS 84
>
> But leave out the query and you get that C code level error. Another
> equivalent query would be "select * from countrymasks" (without the
> "where" clause) but this
> triggers the error too. Very odd. Worth reporting as a bug?
>
> Barry
>
>
>
>
> On Mon, Nov 28, 2022 at 8:08 PM Miluji Sb <milujisb at gmail.com> wrote:
> >
> > Thank you for reply. When I try using sf, I get the following error;
> >
> > Error in CPL_read_ogr(dsn, layer, query, as.character(options), quiet,  :
> >   attempt to set index 210/210 in SET_STRING_ELT.
> >
> > Thanks again!
> >
> > On Mon, Nov 28, 2022 at 1:50 PM Josiah Parry <josiah.parry at gmail.com>
> wrote:
> >
> > > You're going to want to read the file with sf.
> > >
> > > Try object <- sf::st_read("~countrymasks.geojson")
> > >
> > > On Mon, Nov 28, 2022 at 7:09 AM Miluji Sb <milujisb at gmail.com> wrote:
> > >
> > >> Greetings everyone,
> > >>
> > >> I would like to convert the geojson file (
> > >>
> > >>
> https://drive.google.com/file/d/18h3sOjZg5jp5euLTWRi5mC40Sja8TZDN/view?usp=sharing
> > >> )
> > >> to a dataframe - essentially obtain which has coordinates matched to a
> > >> country.
> > >>
> > >> I have tried the following;
> > >>
> > >> ###
> > >> states <- geojsonsf::geojson_sf("~/countrymasks.geojson")
> > >> geo <- geojsonsf::sf_geojson(states)
> > >> sf <- sf::st_read(geo, quiet = T )
> > >> df <- as.data.frame(sf::st_coordinates(sf) )
> > >> ##
> > >>
> > >> But I get the following output, I am a bit lost. Any help will be
> highly
> > >> appreciated.
> > >>
> > >> Best,
> > >>
> > >>   structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
> > >> -67.3397099999998, -67.3780199, -67.3221199999999), Y =
> > >> c(-55.5655699999996,
> > >> -55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
> > >> -55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
> > >> 1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
> > >> "data.frame")
> > >>
> > >>         [[alternative HTML version deleted]]
> > >>
> > >> _______________________________________________
> > >> R-sig-Geo mailing list
> > >> R-sig-Geo at r-project.org
> > >> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> > >>
> > >
> >
> >         [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From edzer@pebe@m@ @end|ng |rom un|-muen@ter@de  Tue Nov 29 12:34:37 2022
From: edzer@pebe@m@ @end|ng |rom un|-muen@ter@de (Edzer Pebesma)
Date: Tue, 29 Nov 2022 12:34:37 +0100
Subject: [R-sig-Geo] Convert geojson file to R
In-Reply-To: <CAMLwc7OFX=5itswYmtEL+S9YK_gVGE2T_FF4V_5aiHGn7tyfug@mail.gmail.com>
References: <CAMLwc7P8X9LmKE9rRyaxruBqLtk8dhx6-GWtEroyRRT6XtGaeg@mail.gmail.com>
 <CAL3ufUKKqO-zEgLL4P02O9Ro0BbwpE2g6rHUGO6MQ=MtWQbkiQ@mail.gmail.com>
 <CAMLwc7Ms+ESrzqnghZbs0=6zEZaUjuf3eBOMqcRhZXE_NLe3yQ@mail.gmail.com>
 <CANVKczNtUwJpuKr5R7KyyhOLp0q2GryZ02=eT_Ew-bNHcryvNg@mail.gmail.com>
 <CAMLwc7OFX=5itswYmtEL+S9YK_gVGE2T_FF4V_5aiHGn7tyfug@mail.gmail.com>
Message-ID: <2d959cc3-a52d-8ec2-432c-f9662601f219@uni-muenster.de>

Interestingly, what seems to works is

readLines('countrymasks.geojson') |> st_read() -> r

with a warning:

Warning message:
In readLines("countrymasks.geojson") :
   incomplete final line found on 'countrymasks.geojson'


On 29/11/2022 00:58, Miluji Sb wrote:
> Thank you. I will report this bug (I did not have the confidence to call
> this a bug before).
> 
> Even using your code, I get the same output.
> 
> structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
> -67.3397099999998, -67.3780199, -67.3221199999999), Y = c(-55.5655699999996,
> -55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
> -55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
> 1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
> "data.frame")
> 
> Thank you again.
> 
> On Mon, Nov 28, 2022 at 11:13 PM Barry Rowlingson <b.rowlingson at gmail.com>
> wrote:
> 
>> This seems to be a weird bug in `st_read`. If you read it with an SQL
>> query that matches every row it works:
>>
>>> js = st_read("./countrymasks.geojson", query="select * from countrymasks
>> where 1 = 1")
>> Reading query `select * from countrymasks where 1 = 1' from data
>> source `/home/rowlings/Downloads/countrymasks.geojson' using driver
>> `GeoJSON'
>> Simple feature collection with 214 features and 15 fields
>> Geometry type: MULTIPOLYGON
>> Dimension:     XY
>> Bounding box:  xmin: -180 ymin: -55.79439 xmax: 180 ymax: 83.62742
>> Geodetic CRS:  WGS 84
>>
>> But leave out the query and you get that C code level error. Another
>> equivalent query would be "select * from countrymasks" (without the
>> "where" clause) but this
>> triggers the error too. Very odd. Worth reporting as a bug?
>>
>> Barry
>>
>>
>>
>>
>> On Mon, Nov 28, 2022 at 8:08 PM Miluji Sb <milujisb at gmail.com> wrote:
>>>
>>> Thank you for reply. When I try using sf, I get the following error;
>>>
>>> Error in CPL_read_ogr(dsn, layer, query, as.character(options), quiet,  :
>>>    attempt to set index 210/210 in SET_STRING_ELT.
>>>
>>> Thanks again!
>>>
>>> On Mon, Nov 28, 2022 at 1:50 PM Josiah Parry <josiah.parry at gmail.com>
>> wrote:
>>>
>>>> You're going to want to read the file with sf.
>>>>
>>>> Try object <- sf::st_read("~countrymasks.geojson")
>>>>
>>>> On Mon, Nov 28, 2022 at 7:09 AM Miluji Sb <milujisb at gmail.com> wrote:
>>>>
>>>>> Greetings everyone,
>>>>>
>>>>> I would like to convert the geojson file (
>>>>>
>>>>>
>> https://drive.google.com/file/d/18h3sOjZg5jp5euLTWRi5mC40Sja8TZDN/view?usp=sharing
>>>>> )
>>>>> to a dataframe - essentially obtain which has coordinates matched to a
>>>>> country.
>>>>>
>>>>> I have tried the following;
>>>>>
>>>>> ###
>>>>> states <- geojsonsf::geojson_sf("~/countrymasks.geojson")
>>>>> geo <- geojsonsf::sf_geojson(states)
>>>>> sf <- sf::st_read(geo, quiet = T )
>>>>> df <- as.data.frame(sf::st_coordinates(sf) )
>>>>> ##
>>>>>
>>>>> But I get the following output, I am a bit lost. Any help will be
>> highly
>>>>> appreciated.
>>>>>
>>>>> Best,
>>>>>
>>>>>    structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
>>>>> -67.3397099999998, -67.3780199, -67.3221199999999), Y =
>>>>> c(-55.5655699999996,
>>>>> -55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
>>>>> -55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
>>>>> 1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
>>>>> "data.frame")
>>>>>
>>>>>          [[alternative HTML version deleted]]
>>>>>
>>>>> _______________________________________________
>>>>> R-sig-Geo mailing list
>>>>> R-sig-Geo at r-project.org
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>>>>
>>>>
>>>
>>>          [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-sig-Geo mailing list
>>> R-sig-Geo at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>>
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081


From b@row||ng@on @end|ng |rom gm@||@com  Tue Nov 29 12:56:57 2022
From: b@row||ng@on @end|ng |rom gm@||@com (Barry Rowlingson)
Date: Tue, 29 Nov 2022 11:56:57 +0000
Subject: [R-sig-Geo] Convert geojson file to R
In-Reply-To: <2d959cc3-a52d-8ec2-432c-f9662601f219@uni-muenster.de>
References: <CAMLwc7P8X9LmKE9rRyaxruBqLtk8dhx6-GWtEroyRRT6XtGaeg@mail.gmail.com>
 <CAL3ufUKKqO-zEgLL4P02O9Ro0BbwpE2g6rHUGO6MQ=MtWQbkiQ@mail.gmail.com>
 <CAMLwc7Ms+ESrzqnghZbs0=6zEZaUjuf3eBOMqcRhZXE_NLe3yQ@mail.gmail.com>
 <CANVKczNtUwJpuKr5R7KyyhOLp0q2GryZ02=eT_Ew-bNHcryvNg@mail.gmail.com>
 <CAMLwc7OFX=5itswYmtEL+S9YK_gVGE2T_FF4V_5aiHGn7tyfug@mail.gmail.com>
 <2d959cc3-a52d-8ec2-432c-f9662601f219@uni-muenster.de>
Message-ID: <CANVKczP5TkmoKuCAbQpHMvNhCQEzw7G9wz8Uv2PC6KPfK8ubKw@mail.gmail.com>

Ah ha, its a file with no line endings. Count the lines, zero:

$ wc -l countrymasks.geojson
0 countrymasks.geojson

Although adding a line ending to the file still produces the error.
Hmm. Even running it through `json_pp` to get it on multiple lines
results in the error:


$ more countrymasks_pp.geojson
{
   "features" : [
      {
         "geometry" : {
            "coordinates" : [
...


> cm = sf::st_read("./countrymasks_pp.geojson")
Reading layer `countrymasks_pp' from data source
  `/nobackup/rowlings/Downloads/SO/countrymasks_pp.geojson' using
driver `GeoJSON'
Error in CPL_read_ogr(dsn, layer, query, as.character(options), quiet,  :
  attempt to set index 210/210 in SET_STRING_ELT

Weirdly weird, `ogrinfo` thinks there's 210 features, but `st_read`
with my "query" fix gets 214...


$ ogrinfo -so -al countrymasks_pp.geojson
INFO: Open of `countrymasks_pp.geojson'
      using driver `GeoJSON' successful.

Layer name: countrymasks_pp
Geometry: Unknown (any)
Feature Count: 210   <--- 210 features


> cm = sf::st_read("./countrymasks_pp.geojson", query="select * from countrymasks_pp where 1 = 1")
Reading query `select * from countrymasks_pp where 1 = 1'
from data source
`/nobackup/rowlings/Downloads/SO/countrymasks_pp.geojson' using driver
`GeoJSON'
Simple feature collection with 214 features and 15 fields
Geometry type: MULTIPOLYGON


I now notice some of the rows have incomplete property sets, for
example Paraguay has:

        "properties" : {
            "ISIPEDIA" : "PRY",
            "NAME" : "Paraguay",
            "an_crop" : "t",
            "an_range" : "t",
            "asap0_id" : 178,
            "asap_cntry" : "f",
            "g1_units" : 17,
            "isocode" : "PY",
            "km2_crop" : 80032,
            "km2_rang2" : 20908,
            "km2_tot" : 399367,
            "name0" : "Paraguay",
            "name0_shr" : "Paraguay"
         },

but Palestine has:

         "properties" : {
            "ISIPEDIA" : "PSE",
            "NAME" : "Palestine, State of",
            "isocode" : "PS",
            "km2_crop" : 84,
            "km2_rang2" : 3423,
            "km2_tot" : 6224,
            "name0" : "Palestine, State of"
         }

Then there "Caribbean island small states" which has a vector in its properties:

       "properties" : {
            "ISIPEDIA" : "CSID",
            "NAME" : "Caribbean island small states",
            "country_codes" : [
               "BRB",
               "DMA",
               "VIR",
               "BHS",
               "GRD",
               "ATG",
               "ANT",
               "LCA",
               "BLZ",
               "CYM",
               "VCT"
            ]

I wonder if these irregularities are causing odd problems with the
various gdal ways of parsing this...

Ugh. Let's all use geopackages....

B

On Tue, Nov 29, 2022 at 11:34 AM Edzer Pebesma
<edzer.pebesma at uni-muenster.de> wrote:
>
> Interestingly, what seems to works is
>
> readLines('countrymasks.geojson') |> st_read() -> r
>
> with a warning:
>
> Warning message:
> In readLines("countrymasks.geojson") :
>    incomplete final line found on 'countrymasks.geojson'
>
>
> On 29/11/2022 00:58, Miluji Sb wrote:
> > Thank you. I will report this bug (I did not have the confidence to call
> > this a bug before).
> >
> > Even using your code, I get the same output.
> >
> > structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
> > -67.3397099999998, -67.3780199, -67.3221199999999), Y = c(-55.5655699999996,
> > -55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
> > -55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
> > 1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
> > "data.frame")
> >
> > Thank you again.
> >
> > On Mon, Nov 28, 2022 at 11:13 PM Barry Rowlingson <b.rowlingson at gmail.com>
> > wrote:
> >
> >> This seems to be a weird bug in `st_read`. If you read it with an SQL
> >> query that matches every row it works:
> >>
> >>> js = st_read("./countrymasks.geojson", query="select * from countrymasks
> >> where 1 = 1")
> >> Reading query `select * from countrymasks where 1 = 1' from data
> >> source `/home/rowlings/Downloads/countrymasks.geojson' using driver
> >> `GeoJSON'
> >> Simple feature collection with 214 features and 15 fields
> >> Geometry type: MULTIPOLYGON
> >> Dimension:     XY
> >> Bounding box:  xmin: -180 ymin: -55.79439 xmax: 180 ymax: 83.62742
> >> Geodetic CRS:  WGS 84
> >>
> >> But leave out the query and you get that C code level error. Another
> >> equivalent query would be "select * from countrymasks" (without the
> >> "where" clause) but this
> >> triggers the error too. Very odd. Worth reporting as a bug?
> >>
> >> Barry
> >>
> >>
> >>
> >>
> >> On Mon, Nov 28, 2022 at 8:08 PM Miluji Sb <milujisb at gmail.com> wrote:
> >>>
> >>> Thank you for reply. When I try using sf, I get the following error;
> >>>
> >>> Error in CPL_read_ogr(dsn, layer, query, as.character(options), quiet,  :
> >>>    attempt to set index 210/210 in SET_STRING_ELT.
> >>>
> >>> Thanks again!
> >>>
> >>> On Mon, Nov 28, 2022 at 1:50 PM Josiah Parry <josiah.parry at gmail.com>
> >> wrote:
> >>>
> >>>> You're going to want to read the file with sf.
> >>>>
> >>>> Try object <- sf::st_read("~countrymasks.geojson")
> >>>>
> >>>> On Mon, Nov 28, 2022 at 7:09 AM Miluji Sb <milujisb at gmail.com> wrote:
> >>>>
> >>>>> Greetings everyone,
> >>>>>
> >>>>> I would like to convert the geojson file (
> >>>>>
> >>>>>
> >> https://drive.google.com/file/d/18h3sOjZg5jp5euLTWRi5mC40Sja8TZDN/view?usp=sharing
> >>>>> )
> >>>>> to a dataframe - essentially obtain which has coordinates matched to a
> >>>>> country.
> >>>>>
> >>>>> I have tried the following;
> >>>>>
> >>>>> ###
> >>>>> states <- geojsonsf::geojson_sf("~/countrymasks.geojson")
> >>>>> geo <- geojsonsf::sf_geojson(states)
> >>>>> sf <- sf::st_read(geo, quiet = T )
> >>>>> df <- as.data.frame(sf::st_coordinates(sf) )
> >>>>> ##
> >>>>>
> >>>>> But I get the following output, I am a bit lost. Any help will be
> >> highly
> >>>>> appreciated.
> >>>>>
> >>>>> Best,
> >>>>>
> >>>>>    structure(list(X = c(-67.3804401, -67.36091, -67.3805899999999,
> >>>>> -67.3397099999998, -67.3780199, -67.3221199999999), Y =
> >>>>> c(-55.5655699999996,
> >>>>> -55.5840098999999, -55.6004100000001, -55.6149699999997, -55.63521,
> >>>>> -55.6400899999997), L1 = c(1, 1, 1, 1, 1, 1), L2 = c(1, 1, 1,
> >>>>> 1, 1, 1), L3 = c(1, 1, 1, 1, 1, 1)), row.names = c(NA, 6L), class =
> >>>>> "data.frame")
> >>>>>
> >>>>>          [[alternative HTML version deleted]]
> >>>>>
> >>>>> _______________________________________________
> >>>>> R-sig-Geo mailing list
> >>>>> R-sig-Geo at r-project.org
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>>>>
> >>>>
> >>>
> >>>          [[alternative HTML version deleted]]
> >>>
> >>> _______________________________________________
> >>> R-sig-Geo mailing list
> >>> R-sig-Geo at r-project.org
> >>> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-sig-Geo mailing list
> > R-sig-Geo at r-project.org
> > https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
> --
> Edzer Pebesma
> Institute for Geoinformatics
> Heisenbergstrasse 2, 48151 Muenster, Germany
> Phone: +49 251 8333081
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


From n|ckmwr@y @end|ng |rom gm@||@com  Tue Nov 29 18:25:08 2022
From: n|ckmwr@y @end|ng |rom gm@||@com (Nick Wray)
Date: Tue, 29 Nov 2022 17:25:08 +0000
Subject: [R-sig-Geo] Coverting CRS in R to OSGB 1936
Message-ID: <CABxY9BNZP1qToLPeMb4Km_pi4iSjzY=qQw40UNq5kGbZBU_h8w@mail.gmail.com>

Hello   I have shapefile data (of the river Tweed catchment in N England
and Scotland) which I have been able to plot precipitation and temperature
data onto without too many problems.  These data have the OSGB 1936/British
National Grid  CRS projection.

But I now have a raster of land cover (from the Centre for Ecology and
Hydrology) covering the catchment area which I want to incorporate into my
processing.  I have downloaded the raster into R and its properties are

class      : RasterLayer
band       : 1  (of  5  bands)
dimensions : 4914, 8861, 43542954  (nrow, ncol, ncell)
resolution : 25, 25  (x, y)
extent     : 261400, 482925, 576750, 699600  (xmin, xmax, ymin, ymax)
crs        : +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000
+y_0=-100000 +ellps=airy +units=m +no_defs
source     : LCM.tif
names      : LCM
values     : 0, 255  (min, max)

So it has a different CRS - my question is - how (in R) can I reset the
raster CRS to be the same as my earlier data sets ie OSGB 1936 British
National Grid?  I haven't been able to find anything obvious on the net.
Thanks Nick Wray

	[[alternative HTML version deleted]]


From @|@b@@bo|uw@de @end|ng |rom m@||@mcg|||@c@  Tue Nov 29 18:59:47 2022
From: @|@b@@bo|uw@de @end|ng |rom m@||@mcg|||@c@ (Alaba Boluwade)
Date: Tue, 29 Nov 2022 17:59:47 +0000
Subject: [R-sig-Geo] Coverting CRS in R to OSGB 1936
In-Reply-To: <CABxY9BNZP1qToLPeMb4Km_pi4iSjzY=qQw40UNq5kGbZBU_h8w@mail.gmail.com>
References: <CABxY9BNZP1qToLPeMb4Km_pi4iSjzY=qQw40UNq5kGbZBU_h8w@mail.gmail.com>
Message-ID: <YT2PR01MB478374D1DACA5C3B69874891B3129@YT2PR01MB4783.CANPRD01.PROD.OUTLOOK.COM>

Try:

library(raster)

new_raster<-spTransform(old_raster,CRS("+proj=longlat +ellps=airy +no_defs"))

Good luck
Alaba

________________________________
From: R-sig-Geo <r-sig-geo-bounces at r-project.org> on behalf of Nick Wray <nickmwray at gmail.com>
Sent: November 29, 2022 10:25 AM
To: r-sig-geo at r-project.org <r-sig-geo at r-project.org>
Subject: [R-sig-Geo] Coverting CRS in R to OSGB 1936

Hello   I have shapefile data (of the river Tweed catchment in N England
and Scotland) which I have been able to plot precipitation and temperature
data onto without too many problems.  These data have the OSGB 1936/British
National Grid  CRS projection.

But I now have a raster of land cover (from the Centre for Ecology and
Hydrology) covering the catchment area which I want to incorporate into my
processing.  I have downloaded the raster into R and its properties are

class      : RasterLayer
band       : 1  (of  5  bands)
dimensions : 4914, 8861, 43542954  (nrow, ncol, ncell)
resolution : 25, 25  (x, y)
extent     : 261400, 482925, 576750, 699600  (xmin, xmax, ymin, ymax)
crs        : +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000
+y_0=-100000 +ellps=airy +units=m +no_defs
source     : LCM.tif
names      : LCM
values     : 0, 255  (min, max)

So it has a different CRS - my question is - how (in R) can I reset the
raster CRS to be the same as my earlier data sets ie OSGB 1936 British
National Grid?  I haven't been able to find anything obvious on the net.
Thanks Nick Wray

        [[alternative HTML version deleted]]

_______________________________________________
R-sig-Geo mailing list
R-sig-Geo at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-geo

	[[alternative HTML version deleted]]


From rob@rob|n@on @end|ng |rom bto@org  Tue Nov 29 19:17:02 2022
From: rob@rob|n@on @end|ng |rom bto@org (Rob Robinson)
Date: Tue, 29 Nov 2022 18:17:02 +0000
Subject: [R-sig-Geo] Coverting CRS in R to OSGB 1936
In-Reply-To: <YT2PR01MB478374D1DACA5C3B69874891B3129@YT2PR01MB4783.CANPRD01.PROD.OUTLOOK.COM>
References: <CABxY9BNZP1qToLPeMb4Km_pi4iSjzY=qQw40UNq5kGbZBU_h8w@mail.gmail.com>
 <YT2PR01MB478374D1DACA5C3B69874891B3129@YT2PR01MB4783.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <CAGcXcEZE5GwrFwUSpB2323sFRxGbhu9BsCOQqByG0MqQMBufJg@mail.gmail.com>

Or use
?stars::st_transform

The EPSG for OSGB36 is 27700 (https://epsg.io/27700), so something like...
newraster <- st_transform(raster, CRS=27700)
should work, but you might also want to look at st_warp() if you need a
regular grid in your new (OS) raster

Cheers
Rob

*************** Learn about Britain's Birds at www.bto.org/birdfacts
  ******************

Dr Rob Robinson, Associate Director - Research (he/him)
Hon Reader: Univ East Anglia | Visiting Researcher: Swiss Ornithological
Institute
British Trust for Ornithology, The Nunnery, Thetford, Norfolk, IP24 2PU
Ph: +44 (0)1842 750050       T: @btorobrob
E: rob.robinson at bto.org      W: www.bto.org/about-bto/our-staff/rob-robinson

======== "How can anyone be enlightened, when truth is so poorly lit"
========


On Tue, 29 Nov 2022 at 18:00, Alaba Boluwade <alaba.boluwade at mail.mcgill.ca>
wrote:

> Try:
>
> library(raster)
>
> new_raster<-spTransform(old_raster,CRS("+proj=longlat +ellps=airy
> +no_defs"))
>
> Good luck
> Alaba
>
> ________________________________
> From: R-sig-Geo <r-sig-geo-bounces at r-project.org> on behalf of Nick Wray <
> nickmwray at gmail.com>
> Sent: November 29, 2022 10:25 AM
> To: r-sig-geo at r-project.org <r-sig-geo at r-project.org>
> Subject: [R-sig-Geo] Coverting CRS in R to OSGB 1936
>
> Hello   I have shapefile data (of the river Tweed catchment in N England
> and Scotland) which I have been able to plot precipitation and temperature
> data onto without too many problems.  These data have the OSGB 1936/British
> National Grid  CRS projection.
>
> But I now have a raster of land cover (from the Centre for Ecology and
> Hydrology) covering the catchment area which I want to incorporate into my
> processing.  I have downloaded the raster into R and its properties are
>
> class      : RasterLayer
> band       : 1  (of  5  bands)
> dimensions : 4914, 8861, 43542954  (nrow, ncol, ncell)
> resolution : 25, 25  (x, y)
> extent     : 261400, 482925, 576750, 699600  (xmin, xmax, ymin, ymax)
> crs        : +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000
> +y_0=-100000 +ellps=airy +units=m +no_defs
> source     : LCM.tif
> names      : LCM
> values     : 0, 255  (min, max)
>
> So it has a different CRS - my question is - how (in R) can I reset the
> raster CRS to be the same as my earlier data sets ie OSGB 1936 British
> National Grid?  I haven't been able to find anything obvious on the net.
> Thanks Nick Wray
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo
>

	[[alternative HTML version deleted]]


From b@row||ng@on @end|ng |rom gm@||@com  Wed Nov 30 10:12:30 2022
From: b@row||ng@on @end|ng |rom gm@||@com (Barry Rowlingson)
Date: Wed, 30 Nov 2022 09:12:30 +0000
Subject: [R-sig-Geo] Coverting CRS in R to OSGB 1936
In-Reply-To: <CABxY9BNZP1qToLPeMb4Km_pi4iSjzY=qQw40UNq5kGbZBU_h8w@mail.gmail.com>
References: <CABxY9BNZP1qToLPeMb4Km_pi4iSjzY=qQw40UNq5kGbZBU_h8w@mail.gmail.com>
Message-ID: <CANVKczN=Ukmu+c1vnRHuWfU9S4ABOkR2zvbL7dbjEyksc_bYdg@mail.gmail.com>

As I said on gis.stackoverflow, these two things are probably in the
same CRS anyway.

But also some people have replied suggesting you transform the raster.
DONT! (Unless you really have to...). If your raster had been
something like 0.5 degree lat-long cells, then transforming it EPSG
27700 (GB grid) would be a "lossy" and non-reversible process. Far far
better to always transform *vector* data to a given raster CRS and
work there, since the vector coordinate transform is exact and
reversible (to very high precision in most cases).

If you have two rasters on different coordinate systems, eg one is 100
metre pixels in EPSG 27700 and the other is 0.05 degree in lat-long,
that's the time you have to carefully consider which one to use as
your basis and which one to warp.


On Tue, Nov 29, 2022 at 5:25 PM Nick Wray <nickmwray at gmail.com> wrote:
>
> Hello   I have shapefile data (of the river Tweed catchment in N England
> and Scotland) which I have been able to plot precipitation and temperature
> data onto without too many problems.  These data have the OSGB 1936/British
> National Grid  CRS projection.
>
> But I now have a raster of land cover (from the Centre for Ecology and
> Hydrology) covering the catchment area which I want to incorporate into my
> processing.  I have downloaded the raster into R and its properties are
>
> class      : RasterLayer
> band       : 1  (of  5  bands)
> dimensions : 4914, 8861, 43542954  (nrow, ncol, ncell)
> resolution : 25, 25  (x, y)
> extent     : 261400, 482925, 576750, 699600  (xmin, xmax, ymin, ymax)
> crs        : +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000
> +y_0=-100000 +ellps=airy +units=m +no_defs
> source     : LCM.tif
> names      : LCM
> values     : 0, 255  (min, max)
>
> So it has a different CRS - my question is - how (in R) can I reset the
> raster CRS to be the same as my earlier data sets ie OSGB 1936 British
> National Grid?  I haven't been able to find anything obvious on the net.
> Thanks Nick Wray
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-sig-Geo mailing list
> R-sig-Geo at r-project.org
> https://stat.ethz.ch/mailman/listinfo/r-sig-geo


