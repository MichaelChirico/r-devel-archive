From ||@@|nconnect|cut @end|ng |rom gm@||@com  Wed Jul  1 13:09:18 2020
From: ||@@|nconnect|cut @end|ng |rom gm@||@com (Lisa GM)
Date: Wed, 1 Jul 2020 13:09:18 +0200
Subject: [R-pkg-devel] R package does not find DLL routine
In-Reply-To: <20200628233953.1615607b@trisector>
References: <CAJh6MA7s75kmu1rdWJPA9WjwX5EOhxA2hyWYcr040dkPvGqkjA@mail.gmail.com>
 <20200628233953.1615607b@trisector>
Message-ID: <CAJh6MA5Q-BSkh5e8F2abr8LMZH0x6cxDwbah55ZtQhNpqxSmnA@mail.gmail.com>

Dear Dirk, dear Ivan,

thanks for your suggestions. I agree that R packages aren't meant to be
build that way, and even though this is an academic project but since the
source code wasn't written by me it is not my decision if, where and when
to publish it openly. In any case, directly linking to a DLL seems quite
unstable and I just came across the option to do a system call to an
executable instead which appears to maybe be the most straight forward
solution for me.

Thanks a lot for your time and effort.
Best,
Lisa


On Sun, Jun 28, 2020 at 10:39 PM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Sun, 28 Jun 2020 12:43:53 +0200
> Lisa GM <lisainconnecticut at gmail.com> wrote:
>
> >  "sum_c" not resolved from current namespace (sum)
>
> As mentioned by Dirk Eddelbuettel, this is not the way R packages are
> supposed to be built [*], but if you are absolutely positive you cannot
> build the DLL from source together with the package or link your
> package to externally installed DLL (as done by packages curl, rgdal,
> and many others), it still seems to be possible. I have been able to
> get a dummy package to work like this:
>
> .onLoad <- function(libname, pkgname)
>  library.dynam('dynl', pkgname, libname, TRUE)
>
> .onUnload <- function(libpath)
>  library.dynam.unload('dynl', libpath)
>
> do <- function()
>  .C('do_hello', x = as.integer(1L), y = as.numeric(2), PACKAGE = 'dynl')
>
> (Note the extra PACKAGE argument required in absence of native routine
> registration or useDynLib(...) declarations in NAMESPACE)
>
> I placed the DLL itself in file.path('inst', 'libs',
> paste0('dynl', .Platform$dynlib.ext)) under the package source
> directory and made sure that it exports a C function
> void do_hello(int * x, double * y).
>
> Needless to say, this goes against CRAN and Bioconductor policies. The
> preferred approach is described in Writing R Extensions, section 1.2.
>
> --
> Best regards,
> Ivan
>
> [*] See <https://cran.r-project.org/doc/manuals/R-exts.html> sections
> 1.5.4 and 5.4 for preparing C functions to be called from an R package.
> The Rcpp package does wrap all this in a very convenient way, see the
> Rcpp.package.skeleton function.
>

	[[alternative HTML version deleted]]


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Wed Jul  1 19:46:13 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Wed, 1 Jul 2020 19:46:13 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
Message-ID: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>

Good evening,

My package bit 4.0.2 (https://github.com/truecluster/bit) is being 
rejected by CRAN checks with warning:


 >Check: Rd cross-references, Result: WARNING
 >  Non-file package-anchored link(s) in documentation object 'clone.Rd':
 >    '[ff]{clone.ff}'
 >
 >  See section 'Cross-references' in the 'Writing R Extensions' manual.

although clone.ff is in clone.ff.rd as confirmed by

 > help("clone.ff","ff")[[1]]
[1] "/home/mypc/R/x86_64-pc-linux-gnu-library/4.0/ff/help/clone.ff"

I asked the maintainers to explain what is wrong and what to do and got 
no answer. Does someone here can help?

Best regards

Jens




On 16.06.20 22:31, G?bor Cs?rdi wrote:
> This is how to look up the filename. The first "sp" is the topic name,
> the second is the package name.
> 
>> help("sp", "sp")[[1]]
> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> 
> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> 
> Gabor
> 
> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>
>> Hi
>>
>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>
>> By following this thread, I corrected my cross-references to external packages but I got stymied by
>> the one I hoped to give to the  "sp" package for Spatial data
>>
>> _________
>>
>> Here is the history:
>>
>> I tried
>>     \link[sp:sp]{sp}
>> which failed here:
>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>> Status: 1 WARNING
>>
>>
>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>    \link[sp]{sp}
>> and  failed here:
>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>> Status: 1 WARNING
>>
>>
>> So to complete the possibilities as I understand them,  I just now tried
>>     \link{sp}
>> which, as might be expected, failed here:
>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>> Status: 1 WARNING
>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>
>> _________
>>
>>
>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>
>> Without further advice, I think I am just going to remove the link to "sp".
>> It really is just a courtesy link to the package description for "sp".
>>
>> Thanks in advance for your thoughts.
>>
>> Wayne
>>
>>
>>
>>
>> ?-----Original Message-----
>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>> Date: Tuesday, June 16, 2020 at 9:27 AM
>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>> Cc: List r-package-devel <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>
>>      I think that the current behaviour is documented in WRE:
>>
>>      "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>      \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>      These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>      help system will resolve the link at run time) or in the normally undesirable event that more
>>      than one package offers help on a topic7 (in which case the present package has precedence so
>>      this is only needed to refer to other packages). They are currently only used in HTML help
>>      (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>      than the topic (since there is no way to know which topics are in which files in an uninstalled
>>      package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>      if it does not find file foo.html."
>>
>>      Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>      i.e. to start looking first for the topic and then for a file.
>>
>>      Georgi Boshnakov
>>
>>      -----Original Message-----
>>      From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>      Sent: 16 June 2020 13:44
>>      To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>      Cc: List r-package-devel <r-package-devel at r-project.org>
>>      Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>
>>      On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>      >
>>      > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>      > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>      > >
>>      > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>      > >      > newly enforced, it has been enforced since the help system began.  What
>>      > >      > I think is new is that there are now tests for it.  Previously those
>>      > >      > links just wouldn't work.
>>      > >
>>      > >      > Duncan Murdoch
>>      > >
>>      > > Yes, to all... including Duncan's agreement with G?bor.
>>      > >
>>      > > Also, Duncan M earlier did mention that he had wanted to
>>      > > *change* the link-to-file behavior for these cases (when he wrote
>>      > > most of the Rd2html source code) but somehow did not get it.
>>      >
>>      > Actually, I don't think I pushed for this change at the time (or at
>>      > least I didn't push much).  I just wish now that I had, because I
>>      > think it will be harder to do it now than it would have been then.
>>      >
>>      > Duncan
>>
>>      I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>
>>      * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>      * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>      * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>
>>      Is there anything else?
>>
>>      Gabor
>>
>>      [...]
>>
>>      ______________________________________________
>>      R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>      ______________________________________________
>>      R-package-devel at r-project.org mailing list
>>      https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Jul  1 20:10:24 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 1 Jul 2020 19:10:24 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
Message-ID: <CABtg=Km7XCyg+0mcz8bfwC8FThDOw9=1zUgzPW_S2vYzg=fvSQ@mail.gmail.com>

Linking to the manual _file_ is now enforced on CRAN. Here is how to
get the file name:

> help("clone.ff", package = "ff")[[1]]
[1] "/Users/gaborcsardi/Library/R/4.0/library/ff/help/clone"

So in this case you need to link to 'clone'.

Btw. since you already use roxygen2, you could also turn on markdown
support, and then [ff::clone.ff()] automatically creates the right
links in the latest version of roxygen2.

Gabor

On Wed, Jul 1, 2020 at 6:46 PM Dr. Jens Oehlschl?gel
<jens.oehlschlaegel at truecluster.com> wrote:
>
> Good evening,
>
> My package bit 4.0.2 (https://github.com/truecluster/bit) is being
> rejected by CRAN checks with warning:
>
>
>  >Check: Rd cross-references, Result: WARNING
>  >  Non-file package-anchored link(s) in documentation object 'clone.Rd':
>  >    '[ff]{clone.ff}'
>  >
>  >  See section 'Cross-references' in the 'Writing R Extensions' manual.
>
> although clone.ff is in clone.ff.rd as confirmed by
>
>  > help("clone.ff","ff")[[1]]
> [1] "/home/mypc/R/x86_64-pc-linux-gnu-library/4.0/ff/help/clone.ff"
>
> I asked the maintainers to explain what is wrong and what to do and got
> no answer. Does someone here can help?
>
> Best regards
>
> Jens
>
>
>
>
> On 16.06.20 22:31, G?bor Cs?rdi wrote:
> > This is how to look up the filename. The first "sp" is the topic name,
> > the second is the package name.
> >
> >> help("sp", "sp")[[1]]
> > [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> >
> > So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> >
> > Gabor
> >
> > On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
> >>
> >> Hi
> >>
> >> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
> >>
> >> By following this thread, I corrected my cross-references to external packages but I got stymied by
> >> the one I hoped to give to the  "sp" package for Spatial data
> >>
> >> _________
> >>
> >> Here is the history:
> >>
> >> I tried
> >>     \link[sp:sp]{sp}
> >> which failed here:
> >> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
> >> Status: 1 WARNING
> >>
> >>
> >> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
> >>    \link[sp]{sp}
> >> and  failed here:
> >> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
> >> Status: 1 WARNING
> >>
> >>
> >> So to complete the possibilities as I understand them,  I just now tried
> >>     \link{sp}
> >> which, as might be expected, failed here:
> >> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
> >> Status: 1 WARNING
> >> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
> >>
> >> _________
> >>
> >>
> >> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
> >> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
> >>
> >> Without further advice, I think I am just going to remove the link to "sp".
> >> It really is just a courtesy link to the package description for "sp".
> >>
> >> Thanks in advance for your thoughts.
> >>
> >> Wayne
> >>
> >>
> >>
> >>
> >> ?-----Original Message-----
> >> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> >> Date: Tuesday, June 16, 2020 at 9:27 AM
> >> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
> >> Cc: List r-package-devel <r-package-devel at r-project.org>
> >> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>
> >>      I think that the current behaviour is documented in WRE:
> >>
> >>      "...There are two other forms of optional argument specified as \link[pkg]{foo} and
> >>      \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
> >>      These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
> >>      help system will resolve the link at run time) or in the normally undesirable event that more
> >>      than one package offers help on a topic7 (in which case the present package has precedence so
> >>      this is only needed to refer to other packages). They are currently only used in HTML help
> >>      (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
> >>      than the topic (since there is no way to know which topics are in which files in an uninstalled
> >>      package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
> >>      if it does not find file foo.html."
> >>
> >>      Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
> >>      i.e. to start looking first for the topic and then for a file.
> >>
> >>      Georgi Boshnakov
> >>
> >>      -----Original Message-----
> >>      From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> >>      Sent: 16 June 2020 13:44
> >>      To: Duncan Murdoch <murdoch.duncan at gmail.com>
> >>      Cc: List r-package-devel <r-package-devel at r-project.org>
> >>      Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>
> >>      On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>      >
> >>      > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> >>      > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
> >>      > >
> >>      > >      > I agree with almost everything you wrote, except one thing:  this isn't
> >>      > >      > newly enforced, it has been enforced since the help system began.  What
> >>      > >      > I think is new is that there are now tests for it.  Previously those
> >>      > >      > links just wouldn't work.
> >>      > >
> >>      > >      > Duncan Murdoch
> >>      > >
> >>      > > Yes, to all... including Duncan's agreement with G?bor.
> >>      > >
> >>      > > Also, Duncan M earlier did mention that he had wanted to
> >>      > > *change* the link-to-file behavior for these cases (when he wrote
> >>      > > most of the Rd2html source code) but somehow did not get it.
> >>      >
> >>      > Actually, I don't think I pushed for this change at the time (or at
> >>      > least I didn't push much).  I just wish now that I had, because I
> >>      > think it will be harder to do it now than it would have been then.
> >>      >
> >>      > Duncan
> >>
> >>      I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
> >>
> >>      * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
> >>      * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
> >>      * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
> >>
> >>      Is there anything else?
> >>
> >>      Gabor
> >>
> >>      [...]
> >>
> >>      ______________________________________________
> >>      R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>      ______________________________________________
> >>      R-package-devel at r-project.org mailing list
> >>      https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul  1 20:14:11 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 1 Jul 2020 14:14:11 -0400
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
Message-ID: <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>

On 01/07/2020 1:46 p.m., Dr. Jens Oehlschl?gel wrote:
> Good evening,
> 
> My package bit 4.0.2 (https://github.com/truecluster/bit) is being
> rejected by CRAN checks with warning:
> 
> 
>   >Check: Rd cross-references, Result: WARNING
>   >  Non-file package-anchored link(s) in documentation object 'clone.Rd':
>   >    '[ff]{clone.ff}'
>   >
>   >  See section 'Cross-references' in the 'Writing R Extensions' manual.
> 
> although clone.ff is in clone.ff.rd as confirmed by
> 
>   > help("clone.ff","ff")[[1]]
> [1] "/home/mypc/R/x86_64-pc-linux-gnu-library/4.0/ff/help/clone.ff"
> 
> I asked the maintainers to explain what is wrong and what to do and got
> no answer. Does someone here can help?

It's actually in ff/man/clone.rd, not clone.ff.rd.  There is no 
ff/man/clone.ff.rd file.

Duncan Murdoch

> 
> Best regards
> 
> Jens
> 
> 
> 
> 
> On 16.06.20 22:31, G?bor Cs?rdi wrote:
>> This is how to look up the filename. The first "sp" is the topic name,
>> the second is the package name.
>>
>>> help("sp", "sp")[[1]]
>> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>>
>> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>>
>> Gabor
>>
>> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>>
>>> Hi
>>>
>>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>>
>>> By following this thread, I corrected my cross-references to external packages but I got stymied by
>>> the one I hoped to give to the  "sp" package for Spatial data
>>>
>>> _________
>>>
>>> Here is the history:
>>>
>>> I tried
>>>      \link[sp:sp]{sp}
>>> which failed here:
>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>>> Status: 1 WARNING
>>>
>>>
>>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>>     \link[sp]{sp}
>>> and  failed here:
>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>>> Status: 1 WARNING
>>>
>>>
>>> So to complete the possibilities as I understand them,  I just now tried
>>>      \link{sp}
>>> which, as might be expected, failed here:
>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>>> Status: 1 WARNING
>>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>>
>>> _________
>>>
>>>
>>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>>
>>> Without further advice, I think I am just going to remove the link to "sp".
>>> It really is just a courtesy link to the package description for "sp".
>>>
>>> Thanks in advance for your thoughts.
>>>
>>> Wayne
>>>
>>>
>>>
>>>
>>> ?-----Original Message-----
>>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>>> Date: Tuesday, June 16, 2020 at 9:27 AM
>>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>>> Cc: List r-package-devel <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>
>>>       I think that the current behaviour is documented in WRE:
>>>
>>>       "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>>       \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>>       These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>>       help system will resolve the link at run time) or in the normally undesirable event that more
>>>       than one package offers help on a topic7 (in which case the present package has precedence so
>>>       this is only needed to refer to other packages). They are currently only used in HTML help
>>>       (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>>       than the topic (since there is no way to know which topics are in which files in an uninstalled
>>>       package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>>       if it does not find file foo.html."
>>>
>>>       Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>>       i.e. to start looking first for the topic and then for a file.
>>>
>>>       Georgi Boshnakov
>>>
>>>       -----Original Message-----
>>>       From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>>       Sent: 16 June 2020 13:44
>>>       To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>>       Cc: List r-package-devel <r-package-devel at r-project.org>
>>>       Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>
>>>       On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>       >
>>>       > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>>       > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>>       > >
>>>       > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>>       > >      > newly enforced, it has been enforced since the help system began.  What
>>>       > >      > I think is new is that there are now tests for it.  Previously those
>>>       > >      > links just wouldn't work.
>>>       > >
>>>       > >      > Duncan Murdoch
>>>       > >
>>>       > > Yes, to all... including Duncan's agreement with G?bor.
>>>       > >
>>>       > > Also, Duncan M earlier did mention that he had wanted to
>>>       > > *change* the link-to-file behavior for these cases (when he wrote
>>>       > > most of the Rd2html source code) but somehow did not get it.
>>>       >
>>>       > Actually, I don't think I pushed for this change at the time (or at
>>>       > least I didn't push much).  I just wish now that I had, because I
>>>       > think it will be harder to do it now than it would have been then.
>>>       >
>>>       > Duncan
>>>
>>>       I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>>
>>>       * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>>       * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>>       * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>>
>>>       Is there anything else?
>>>
>>>       Gabor
>>>
>>>       [...]
>>>
>>>       ______________________________________________
>>>       R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>       ______________________________________________
>>>       R-package-devel at r-project.org mailing list
>>>       https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From j@goreck| @end|ng |rom w|t@edu@p|  Thu Jul  2 11:04:17 2020
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Thu, 2 Jul 2020 10:04:17 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
Message-ID: <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>

Hi,
What is the recommended way to test for those issues locally?
If it is tested during cran submission, then seems reasonable to be enabled
just by --as-cran switch. Is it?
Thanks

On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca> wrote:

> Thank you!
>
> ?-----Original Message-----
> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
> Date: Tuesday, June 16, 2020 at 4:32 PM
> To: Wayne Oldford <rwoldford at uwaterloo.ca>
> Cc: List r-package-devel <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] check cross-references error: Non-file
> package-anchored link(s)
>
>     This is how to look up the filename. The first "sp" is the topic name,
>     the second is the package name.
>
>     > help("sp", "sp")[[1]]
>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>
>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>
>     Gabor
>
>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca>
> wrote:
>     >
>     > Hi
>     >
>     > I got caught by this new test this week in trying to push an updated
> release of the loon package to CRAN.
>     >
>     > By following this thread, I corrected my cross-references to
> external packages but I got stymied by
>     > the one I hoped to give to the  "sp" package for Spatial data
>     >
>     > _________
>     >
>     > Here is the history:
>     >
>     > I tried
>     >    \link[sp:sp]{sp}
>     > which failed here:
>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log
> >
>     > Status: 1 WARNING
>     >
>     >
>     > That was meant to correct an earlier attempt (it did for other links
> to "scales" for example) where I had tried
>     >   \link[sp]{sp}
>     > and  failed here:
>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log
> >
>     > Status: 1 WARNING
>     >
>     >
>     > So to complete the possibilities as I understand them,  I just now
> tried
>     >    \link{sp}
>     > which, as might be expected, failed here:
>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log
> >
>     > Status: 1 WARNING
>     > As expected, error here was different:  "Missing  link"  as opposed
> to "Non-file package-anchored link"
>     >
>     > _________
>     >
>     >
>     > I am not sure whether I have missed a subtlety in WRE or that the
> peculiar circumstance
>     > where the package, the topic, and the file name are all identical
> (sp) is some weird boundary case.
>     >
>     > Without further advice, I think I am just going to remove the link
> to "sp".
>     > It really is just a courtesy link to the package description for
> "sp".
>     >
>     > Thanks in advance for your thoughts.
>     >
>     > Wayne
>     >
>     >
>     >
>     >
>     > -----Original Message-----
>     > From: R-package-devel <r-package-devel-bounces at r-project.org> on
> behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>     > Date: Tuesday, June 16, 2020 at 9:27 AM
>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <
> murdoch.duncan at gmail.com>
>     > Cc: List r-package-devel <r-package-devel at r-project.org>
>     > Subject: Re: [R-pkg-devel] check cross-references error: Non-file
> package-anchored link(s)
>     >
>     >     I think that the current behaviour is documented in WRE:
>     >
>     >     "...There are two other forms of optional argument specified as
> \link[pkg]{foo} and
>     >     \link[pkg:bar]{foo} to link to the package pkg, to files
> foo.html and bar.html respectively.
>     >     These are rarely needed, perhaps to refer to not-yet-installed
> packages (but there the HTML
>     >     help system will resolve the link at run time) or in the
> normally undesirable event that more
>     >     than one package offers help on a topic7 (in which case the
> present package has precedence so
>     >     this is only needed to refer to other packages). They are
> currently only used in HTML help
>     >     (and ignored for hyperlinks in LATEX conversions of help pages),
> and link to the file rather
>     >     than the topic (since there is no way to know which topics are
> in which files in an uninstalled
>     >     package) ...   Because they have been frequently misused, the
> HTML help system looks for topic foo in package pkg
>     >     if it does not find file foo.html."
>     >
>     >     Unless I am missing something, it seems that it would be
> relatively painless to reverse the logic of the current behaviour of the
> help system,
>     >     i.e. to start looking first for the topic and then for a file.
>     >
>     >     Georgi Boshnakov
>     >
>     >     -----Original Message-----
>     >     From: R-package-devel <r-package-devel-bounces at r-project.org>
> On Behalf Of G?bor Cs?rdi
>     >     Sent: 16 June 2020 13:44
>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
>     >     Subject: Re: [R-pkg-devel] check cross-references error:
> Non-file package-anchored link(s)
>     >
>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <
> murdoch.duncan at gmail.com> wrote:
>     >     >
>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400
> writes:
>     >     > >
>     >     > >      > I agree with almost everything you wrote, except one
> thing:  this isn't
>     >     > >      > newly enforced, it has been enforced since the help
> system began.  What
>     >     > >      > I think is new is that there are now tests for it.
> Previously those
>     >     > >      > links just wouldn't work.
>     >     > >
>     >     > >      > Duncan Murdoch
>     >     > >
>     >     > > Yes, to all... including Duncan's agreement with G?bor.
>     >     > >
>     >     > > Also, Duncan M earlier did mention that he had wanted to
>     >     > > *change* the link-to-file behavior for these cases (when he
> wrote
>     >     > > most of the Rd2html source code) but somehow did not get it.
>     >     >
>     >     > Actually, I don't think I pushed for this change at the time
> (or at
>     >     > least I didn't push much).  I just wish now that I had,
> because I
>     >     > think it will be harder to do it now than it would have been
> then.
>     >     >
>     >     > Duncan
>     >
>     >     I am not entirely sure, but maybe just documenting the current
> behaviour and undoing 78674 could work. With some tweaks? E.g.
>     >
>     >     * updating R-exts to say that \link[pkg:topic]{text} will link
> to `topic.html` in `pkg` first (for historical reasons), and falls back to
> searching for `topic` in `pkg` at render time.
>     >     * updating Rd2HTML to look for the topic and use it in the link,
> instead of throwing a warning, in it cannot find `topic.html`
>     >     * removing the `R CMD check` warning for non-file links, that
> was added in 78674 :)
>     >
>     >     Is there anything else?
>     >
>     >     Gabor
>     >
>     >     [...]
>     >
>     >     ______________________________________________
>     >     R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     >     ______________________________________________
>     >     R-package-devel at r-project.org mailing list
>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     >
>     >
>     > ______________________________________________
>     > R-package-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Jul  2 11:20:00 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 2 Jul 2020 10:20:00 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
 <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
Message-ID: <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>

You can set the _R_CHECK_XREFS_MIND_SUSPECT_ANCHORS_=true env var and
use R-devel.

Alternatively, and you don't need R-devel for this, you can run R CMD
--html INSTALL on your package, and then look for messages that
contain "treated as a topic", e.g.

    curl_fds                                html
Rd warning: /Users/gaborcsardi/works/processx/man/curl_fds.Rd:11: file
link ?multi_fdset? in package ?curl? does not exist and so has been
treated as a topic

Gabor


On Thu, Jul 2, 2020 at 10:06 AM Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
>
> Hi,
> What is the recommended way to test for those issues locally?
> If it is tested during cran submission, then seems reasonable to be enabled just by --as-cran switch. Is it?
> Thanks
>
> On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca> wrote:
>>
>> Thank you!
>>
>> ?-----Original Message-----
>> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
>> Date: Tuesday, June 16, 2020 at 4:32 PM
>> To: Wayne Oldford <rwoldford at uwaterloo.ca>
>> Cc: List r-package-devel <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>
>>     This is how to look up the filename. The first "sp" is the topic name,
>>     the second is the package name.
>>
>>     > help("sp", "sp")[[1]]
>>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>>
>>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>>
>>     Gabor
>>
>>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>     >
>>     > Hi
>>     >
>>     > I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>     >
>>     > By following this thread, I corrected my cross-references to external packages but I got stymied by
>>     > the one I hoped to give to the  "sp" package for Spatial data
>>     >
>>     > _________
>>     >
>>     > Here is the history:
>>     >
>>     > I tried
>>     >    \link[sp:sp]{sp}
>>     > which failed here:
>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>>     > Status: 1 WARNING
>>     >
>>     >
>>     > That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>     >   \link[sp]{sp}
>>     > and  failed here:
>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>>     > Status: 1 WARNING
>>     >
>>     >
>>     > So to complete the possibilities as I understand them,  I just now tried
>>     >    \link{sp}
>>     > which, as might be expected, failed here:
>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>>     > Status: 1 WARNING
>>     > As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>     >
>>     > _________
>>     >
>>     >
>>     > I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>>     > where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>     >
>>     > Without further advice, I think I am just going to remove the link to "sp".
>>     > It really is just a courtesy link to the package description for "sp".
>>     >
>>     > Thanks in advance for your thoughts.
>>     >
>>     > Wayne
>>     >
>>     >
>>     >
>>     >
>>     > -----Original Message-----
>>     > From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>>     > Date: Tuesday, June 16, 2020 at 9:27 AM
>>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>>     > Cc: List r-package-devel <r-package-devel at r-project.org>
>>     > Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>     >
>>     >     I think that the current behaviour is documented in WRE:
>>     >
>>     >     "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>     >     \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>     >     These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>     >     help system will resolve the link at run time) or in the normally undesirable event that more
>>     >     than one package offers help on a topic7 (in which case the present package has precedence so
>>     >     this is only needed to refer to other packages). They are currently only used in HTML help
>>     >     (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>     >     than the topic (since there is no way to know which topics are in which files in an uninstalled
>>     >     package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>     >     if it does not find file foo.html."
>>     >
>>     >     Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>     >     i.e. to start looking first for the topic and then for a file.
>>     >
>>     >     Georgi Boshnakov
>>     >
>>     >     -----Original Message-----
>>     >     From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>     >     Sent: 16 June 2020 13:44
>>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
>>     >     Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>     >
>>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>     >     >
>>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>     >     > >
>>     >     > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>     >     > >      > newly enforced, it has been enforced since the help system began.  What
>>     >     > >      > I think is new is that there are now tests for it.  Previously those
>>     >     > >      > links just wouldn't work.
>>     >     > >
>>     >     > >      > Duncan Murdoch
>>     >     > >
>>     >     > > Yes, to all... including Duncan's agreement with G?bor.
>>     >     > >
>>     >     > > Also, Duncan M earlier did mention that he had wanted to
>>     >     > > *change* the link-to-file behavior for these cases (when he wrote
>>     >     > > most of the Rd2html source code) but somehow did not get it.
>>     >     >
>>     >     > Actually, I don't think I pushed for this change at the time (or at
>>     >     > least I didn't push much).  I just wish now that I had, because I
>>     >     > think it will be harder to do it now than it would have been then.
>>     >     >
>>     >     > Duncan
>>     >
>>     >     I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>     >
>>     >     * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>     >     * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>     >     * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>     >
>>     >     Is there anything else?
>>     >
>>     >     Gabor
>>     >
>>     >     [...]
>>     >
>>     >     ______________________________________________
>>     >     R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>     >     ______________________________________________
>>     >     R-package-devel at r-project.org mailing list
>>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>     >
>>     >
>>     > ______________________________________________
>>     > R-package-devel at r-project.org mailing list
>>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Thu Jul  2 12:47:28 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Thu, 2 Jul 2020 12:47:28 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
Message-ID: <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>

Thanks Gabor and Duncan,

> It's actually in ff/man/clone.rd, not clone.ff.rd.  There is no 
> ff/man/clone.ff.rd file.

but there *is* clone.ff.rd in the >= 4.0.0 versions of the packages bit/bit64/ff.

Hence the check warning is a false alarm resulting from checking bit 4.0.2 (GitHub.com/truecluster) against ff 2.2-14.2 (CRAN) instead of checking it against the also submitted ff 4.0.2 (GitHub.com/truecluster).

So all I can and will do is waiting that CRAN maintainers install and check again.

Best

Jens



> 
> Duncan Murdoch
> 
> > 
> > Best regards
> > 
> > Jens
> > 
> > 
> > 
> > 
> > On 16.06.20 22:31, G?bor Cs?rdi wrote:
> >> This is how to look up the filename. The first "sp" is the topic name,
> >> the second is the package name.
> >>
> >>> help("sp", "sp")[[1]]
> >> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> >>
> >> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> >>
> >> Gabor
> >>
> >> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
> >>>
> >>> Hi
> >>>
> >>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
> >>>
> >>> By following this thread, I corrected my cross-references to external packages but I got stymied by
> >>> the one I hoped to give to the  "sp" package for Spatial data
> >>>
> >>> _________
> >>>
> >>> Here is the history:
> >>>
> >>> I tried
> >>>      \link[sp:sp]{sp}
> >>> which failed here:
> >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
> >>> Status: 1 WARNING
> >>>
> >>>
> >>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
> >>>     \link[sp]{sp}
> >>> and  failed here:
> >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
> >>> Status: 1 WARNING
> >>>
> >>>
> >>> So to complete the possibilities as I understand them,  I just now tried
> >>>      \link{sp}
> >>> which, as might be expected, failed here:
> >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
> >>> Status: 1 WARNING
> >>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
> >>>
> >>> _________
> >>>
> >>>
> >>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
> >>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
> >>>
> >>> Without further advice, I think I am just going to remove the link to "sp".
> >>> It really is just a courtesy link to the package description for "sp".
> >>>
> >>> Thanks in advance for your thoughts.
> >>>
> >>> Wayne
> >>>
> >>>
> >>>
> >>>
> >>> ?-----Original Message-----
> >>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> >>> Date: Tuesday, June 16, 2020 at 9:27 AM
> >>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
> >>> Cc: List r-package-devel <r-package-devel at r-project.org>
> >>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>>
> >>>       I think that the current behaviour is documented in WRE:
> >>>
> >>>       "...There are two other forms of optional argument specified as \link[pkg]{foo} and
> >>>       \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
> >>>       These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
> >>>       help system will resolve the link at run time) or in the normally undesirable event that more
> >>>       than one package offers help on a topic7 (in which case the present package has precedence so
> >>>       this is only needed to refer to other packages). They are currently only used in HTML help
> >>>       (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
> >>>       than the topic (since there is no way to know which topics are in which files in an uninstalled
> >>>       package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
> >>>       if it does not find file foo.html."
> >>>
> >>>       Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
> >>>       i.e. to start looking first for the topic and then for a file.
> >>>
> >>>       Georgi Boshnakov
> >>>
> >>>       -----Original Message-----
> >>>       From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> >>>       Sent: 16 June 2020 13:44
> >>>       To: Duncan Murdoch <murdoch.duncan at gmail.com>
> >>>       Cc: List r-package-devel <r-package-devel at r-project.org>
> >>>       Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>>
> >>>       On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>>       >
> >>>       > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> >>>       > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
> >>>       > >
> >>>       > >      > I agree with almost everything you wrote, except one thing:  this isn't
> >>>       > >      > newly enforced, it has been enforced since the help system began.  What
> >>>       > >      > I think is new is that there are now tests for it.  Previously those
> >>>       > >      > links just wouldn't work.
> >>>       > >
> >>>       > >      > Duncan Murdoch
> >>>       > >
> >>>       > > Yes, to all... including Duncan's agreement with G?bor.
> >>>       > >
> >>>       > > Also, Duncan M earlier did mention that he had wanted to
> >>>       > > *change* the link-to-file behavior for these cases (when he wrote
> >>>       > > most of the Rd2html source code) but somehow did not get it.
> >>>       >
> >>>       > Actually, I don't think I pushed for this change at the time (or at
> >>>       > least I didn't push much).  I just wish now that I had, because I
> >>>       > think it will be harder to do it now than it would have been then.
> >>>       >
> >>>       > Duncan
> >>>
> >>>       I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
> >>>
> >>>       * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
> >>>       * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
> >>>       * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
> >>>
> >>>       Is there anything else?
> >>>
> >>>       Gabor
> >>>
> >>>       [...]
> >>>
> >>>       ______________________________________________
> >>>       R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>       ______________________________________________
> >>>       R-package-devel at r-project.org mailing list
> >>>       https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > 
> 
>


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Jul  2 12:59:47 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 2 Jul 2020 11:59:47 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
Message-ID: <CABtg=K=6sBv=YLifa8wW=kAs9CYmvyKA2t19025M8+W-kOKodQ@mail.gmail.com>

Yes, this is one consequence of the newly enforced check. Now you can
choose which version of the ff package you want to be compatible with.
In the GH version a manual file was renamed and this is now a breaking
change, so you cannot be compatible with both.

Gabor

On Thu, Jul 2, 2020 at 11:47 AM Dr. Jens Oehlschl?gel
<jens.oehlschlaegel at truecluster.com> wrote:
>
> Thanks Gabor and Duncan,
>
> > It's actually in ff/man/clone.rd, not clone.ff.rd.  There is no
> > ff/man/clone.ff.rd file.
>
> but there *is* clone.ff.rd in the >= 4.0.0 versions of the packages bit/bit64/ff.
>
> Hence the check warning is a false alarm resulting from checking bit 4.0.2 (GitHub.com/truecluster) against ff 2.2-14.2 (CRAN) instead of checking it against the also submitted ff 4.0.2 (GitHub.com/truecluster).
>
> So all I can and will do is waiting that CRAN maintainers install and check again.
>
> Best
>
> Jens
>
>
>
> >
> > Duncan Murdoch
> >
> > >
> > > Best regards
> > >
> > > Jens
> > >
> > >
> > >
> > >
> > > On 16.06.20 22:31, G?bor Cs?rdi wrote:
> > >> This is how to look up the filename. The first "sp" is the topic name,
> > >> the second is the package name.
> > >>
> > >>> help("sp", "sp")[[1]]
> > >> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> > >>
> > >> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> > >>
> > >> Gabor
> > >>
> > >> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
> > >>>
> > >>> Hi
> > >>>
> > >>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
> > >>>
> > >>> By following this thread, I corrected my cross-references to external packages but I got stymied by
> > >>> the one I hoped to give to the  "sp" package for Spatial data
> > >>>
> > >>> _________
> > >>>
> > >>> Here is the history:
> > >>>
> > >>> I tried
> > >>>      \link[sp:sp]{sp}
> > >>> which failed here:
> > >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
> > >>> Status: 1 WARNING
> > >>>
> > >>>
> > >>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
> > >>>     \link[sp]{sp}
> > >>> and  failed here:
> > >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
> > >>> Status: 1 WARNING
> > >>>
> > >>>
> > >>> So to complete the possibilities as I understand them,  I just now tried
> > >>>      \link{sp}
> > >>> which, as might be expected, failed here:
> > >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
> > >>> Status: 1 WARNING
> > >>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
> > >>>
> > >>> _________
> > >>>
> > >>>
> > >>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
> > >>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
> > >>>
> > >>> Without further advice, I think I am just going to remove the link to "sp".
> > >>> It really is just a courtesy link to the package description for "sp".
> > >>>
> > >>> Thanks in advance for your thoughts.
> > >>>
> > >>> Wayne
> > >>>
> > >>>
> > >>>
> > >>>
> > >>> ?-----Original Message-----
> > >>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> > >>> Date: Tuesday, June 16, 2020 at 9:27 AM
> > >>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
> > >>> Cc: List r-package-devel <r-package-devel at r-project.org>
> > >>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> > >>>
> > >>>       I think that the current behaviour is documented in WRE:
> > >>>
> > >>>       "...There are two other forms of optional argument specified as \link[pkg]{foo} and
> > >>>       \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
> > >>>       These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
> > >>>       help system will resolve the link at run time) or in the normally undesirable event that more
> > >>>       than one package offers help on a topic7 (in which case the present package has precedence so
> > >>>       this is only needed to refer to other packages). They are currently only used in HTML help
> > >>>       (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
> > >>>       than the topic (since there is no way to know which topics are in which files in an uninstalled
> > >>>       package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
> > >>>       if it does not find file foo.html."
> > >>>
> > >>>       Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
> > >>>       i.e. to start looking first for the topic and then for a file.
> > >>>
> > >>>       Georgi Boshnakov
> > >>>
> > >>>       -----Original Message-----
> > >>>       From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> > >>>       Sent: 16 June 2020 13:44
> > >>>       To: Duncan Murdoch <murdoch.duncan at gmail.com>
> > >>>       Cc: List r-package-devel <r-package-devel at r-project.org>
> > >>>       Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> > >>>
> > >>>       On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> > >>>       >
> > >>>       > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> > >>>       > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
> > >>>       > >
> > >>>       > >      > I agree with almost everything you wrote, except one thing:  this isn't
> > >>>       > >      > newly enforced, it has been enforced since the help system began.  What
> > >>>       > >      > I think is new is that there are now tests for it.  Previously those
> > >>>       > >      > links just wouldn't work.
> > >>>       > >
> > >>>       > >      > Duncan Murdoch
> > >>>       > >
> > >>>       > > Yes, to all... including Duncan's agreement with G?bor.
> > >>>       > >
> > >>>       > > Also, Duncan M earlier did mention that he had wanted to
> > >>>       > > *change* the link-to-file behavior for these cases (when he wrote
> > >>>       > > most of the Rd2html source code) but somehow did not get it.
> > >>>       >
> > >>>       > Actually, I don't think I pushed for this change at the time (or at
> > >>>       > least I didn't push much).  I just wish now that I had, because I
> > >>>       > think it will be harder to do it now than it would have been then.
> > >>>       >
> > >>>       > Duncan
> > >>>
> > >>>       I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
> > >>>
> > >>>       * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
> > >>>       * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
> > >>>       * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
> > >>>
> > >>>       Is there anything else?
> > >>>
> > >>>       Gabor
> > >>>
> > >>>       [...]
> > >>>
> > >>>       ______________________________________________
> > >>>       R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>>       ______________________________________________
> > >>>       R-package-devel at r-project.org mailing list
> > >>>       https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>>
> > >>>
> > >>> ______________________________________________
> > >>> R-package-devel at r-project.org mailing list
> > >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >> ______________________________________________
> > >> R-package-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >
> >
> >


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul  2 13:26:02 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jul 2020 07:26:02 -0400
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
Message-ID: <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>

There are a few ways to deal with this, but waiting for ff to be updated 
is probably easiest.

However, maybe ff can't be updated until bit is updated.  Here are some 
possibilities:

One way is to make bit depend on a particular version of ff.  That may 
cause a deadlock if both are being updated at once, but I think CRAN 
should be able to deal with it if they are informed of the issue.

Another way is to use R code in the Rd file to select which link to use. 
  For example, instead of \link[ff]{clone.ff}, you could use

\Sexpr[results=rd,stage=render]{clonelink()}

where clonelink() is a function that generates either 
"\link[ff]{clone.ff}" or "\link[ff:clone]{clone.ff}" depending on the 
detected installed version of ff.

Another choice that is nearly as easy as doing nothing is to include no 
link at all in this update, and make it a link again in the next update 
when the new ff is available.

Duncan Murdoch

On 02/07/2020 6:47 a.m., Dr. Jens Oehlschl?gel wrote:
> Thanks Gabor and Duncan,
> 
>> It's actually in ff/man/clone.rd, not clone.ff.rd.  There is no
>> ff/man/clone.ff.rd file.
> 
> but there *is* clone.ff.rd in the >= 4.0.0 versions of the packages bit/bit64/ff.
> 
> Hence the check warning is a false alarm resulting from checking bit 4.0.2 (GitHub.com/truecluster) against ff 2.2-14.2 (CRAN) instead of checking it against the also submitted ff 4.0.2 (GitHub.com/truecluster).
> 
> So all I can and will do is waiting that CRAN maintainers install and check again.
> 
> Best
> 
> Jens
> 
> 
> 
>>
>> Duncan Murdoch
>>
>>>
>>> Best regards
>>>
>>> Jens
>>>
>>>
>>>
>>>
>>> On 16.06.20 22:31, G?bor Cs?rdi wrote:
>>>> This is how to look up the filename. The first "sp" is the topic name,
>>>> the second is the package name.
>>>>
>>>>> help("sp", "sp")[[1]]
>>>> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>>>>
>>>> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>>>>
>>>> Gabor
>>>>
>>>> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>>>>
>>>>> Hi
>>>>>
>>>>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>>>>
>>>>> By following this thread, I corrected my cross-references to external packages but I got stymied by
>>>>> the one I hoped to give to the  "sp" package for Spatial data
>>>>>
>>>>> _________
>>>>>
>>>>> Here is the history:
>>>>>
>>>>> I tried
>>>>>       \link[sp:sp]{sp}
>>>>> which failed here:
>>>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>>>>> Status: 1 WARNING
>>>>>
>>>>>
>>>>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>>>>      \link[sp]{sp}
>>>>> and  failed here:
>>>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>>>>> Status: 1 WARNING
>>>>>
>>>>>
>>>>> So to complete the possibilities as I understand them,  I just now tried
>>>>>       \link{sp}
>>>>> which, as might be expected, failed here:
>>>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>>>>> Status: 1 WARNING
>>>>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>>>>
>>>>> _________
>>>>>
>>>>>
>>>>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>>>>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>>>>
>>>>> Without further advice, I think I am just going to remove the link to "sp".
>>>>> It really is just a courtesy link to the package description for "sp".
>>>>>
>>>>> Thanks in advance for your thoughts.
>>>>>
>>>>> Wayne
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> ?-----Original Message-----
>>>>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>>>>> Date: Tuesday, June 16, 2020 at 9:27 AM
>>>>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>> Cc: List r-package-devel <r-package-devel at r-project.org>
>>>>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>>>
>>>>>        I think that the current behaviour is documented in WRE:
>>>>>
>>>>>        "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>>>>        \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>>>>        These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>>>>        help system will resolve the link at run time) or in the normally undesirable event that more
>>>>>        than one package offers help on a topic7 (in which case the present package has precedence so
>>>>>        this is only needed to refer to other packages). They are currently only used in HTML help
>>>>>        (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>>>>        than the topic (since there is no way to know which topics are in which files in an uninstalled
>>>>>        package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>>>>        if it does not find file foo.html."
>>>>>
>>>>>        Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>>>>        i.e. to start looking first for the topic and then for a file.
>>>>>
>>>>>        Georgi Boshnakov
>>>>>
>>>>>        -----Original Message-----
>>>>>        From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>>>>        Sent: 16 June 2020 13:44
>>>>>        To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>>        Cc: List r-package-devel <r-package-devel at r-project.org>
>>>>>        Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>>>
>>>>>        On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>>        >
>>>>>        > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>>>>        > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>>>>        > >
>>>>>        > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>>>>        > >      > newly enforced, it has been enforced since the help system began.  What
>>>>>        > >      > I think is new is that there are now tests for it.  Previously those
>>>>>        > >      > links just wouldn't work.
>>>>>        > >
>>>>>        > >      > Duncan Murdoch
>>>>>        > >
>>>>>        > > Yes, to all... including Duncan's agreement with G?bor.
>>>>>        > >
>>>>>        > > Also, Duncan M earlier did mention that he had wanted to
>>>>>        > > *change* the link-to-file behavior for these cases (when he wrote
>>>>>        > > most of the Rd2html source code) but somehow did not get it.
>>>>>        >
>>>>>        > Actually, I don't think I pushed for this change at the time (or at
>>>>>        > least I didn't push much).  I just wish now that I had, because I
>>>>>        > think it will be harder to do it now than it would have been then.
>>>>>        >
>>>>>        > Duncan
>>>>>
>>>>>        I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>>>>
>>>>>        * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>>>>        * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>>>>        * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>>>>
>>>>>        Is there anything else?
>>>>>
>>>>>        Gabor
>>>>>
>>>>>        [...]
>>>>>
>>>>>        ______________________________________________
>>>>>        R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>        ______________________________________________
>>>>>        R-package-devel at r-project.org mailing list
>>>>>        https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>>


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Thu Jul  2 13:49:57 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Thu, 2 Jul 2020 13:49:57 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
 <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
Message-ID: <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>

Duncan,

> One way is to make bit depend on a particular version of ff.  That may
> cause a deadlock if both are being updated at once, but I think CRAN
> should be able to deal with it if they are informed of the issue.

Exactly that I have done: I submitted all three packages bit/bit64/ff in version 4.0.2 and made them dependend on Version >= 4.0.0.
And yes, the maintainers have been informed about the issue.

Best

Jens


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul  2 15:23:30 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jul 2020 09:23:30 -0400
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
 <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
 <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>
Message-ID: <92d2b852-f02b-e974-3da0-34f94af70467@gmail.com>

On 02/07/2020 7:49 a.m., Dr. Jens Oehlschl?gel wrote:
> Duncan,
> 
>> One way is to make bit depend on a particular version of ff.  That may
>> cause a deadlock if both are being updated at once, but I think CRAN
>> should be able to deal with it if they are informed of the issue.
> 
> Exactly that I have done: I submitted all three packages bit/bit64/ff in version 4.0.2 and made them dependend on Version >= 4.0.0.
> And yes, the maintainers have been informed about the issue.

I'm not sure that's what I meant, but I can't be sure, since I haven't 
seen your source.  What I meant is a package dependency, i.e. the 
existing ff on CRAN is version 2.2-14.2 and it depends on bit without 
saying what version of bit is needed.  The existing bit is 1.1-15.2 with 
no dependency on ff.

So you can force the new ff to use the new bit by giving the version 
number, e.g.

Depends:  bit (>= 2.0)

but it's not so obvious how to make the new bit depend on the new ff.
There's no way to say that the dependency is only to a help page, and 
circular strong dependencies are messy, so I'd suggest you use one of 
the other options I offered:  a dynamic link in the Rd file, or no link 
at all.

Duncan Murdoch


From j@goreck| @end|ng |rom w|t@edu@p|  Thu Jul  2 16:24:26 2020
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Thu, 2 Jul 2020 15:24:26 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
 <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
 <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
Message-ID: <CAOO9MKVXvYvQrTdQPUM+DWENGjhwi16ORDE0BtxNoz-YwanuRg@mail.gmail.com>

Thank you Gabor

On Thu, Jul 2, 2020 at 10:20 AM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>
> You can set the _R_CHECK_XREFS_MIND_SUSPECT_ANCHORS_=true env var and
> use R-devel.
>
> Alternatively, and you don't need R-devel for this, you can run R CMD
> --html INSTALL on your package, and then look for messages that
> contain "treated as a topic", e.g.
>
>     curl_fds                                html
> Rd warning: /Users/gaborcsardi/works/processx/man/curl_fds.Rd:11: file
> link ?multi_fdset? in package ?curl? does not exist and so has been
> treated as a topic
>
> Gabor
>
>
> On Thu, Jul 2, 2020 at 10:06 AM Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
> >
> > Hi,
> > What is the recommended way to test for those issues locally?
> > If it is tested during cran submission, then seems reasonable to be enabled just by --as-cran switch. Is it?
> > Thanks
> >
> > On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca> wrote:
> >>
> >> Thank you!
> >>
> >> ?-----Original Message-----
> >> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
> >> Date: Tuesday, June 16, 2020 at 4:32 PM
> >> To: Wayne Oldford <rwoldford at uwaterloo.ca>
> >> Cc: List r-package-devel <r-package-devel at r-project.org>
> >> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>
> >>     This is how to look up the filename. The first "sp" is the topic name,
> >>     the second is the package name.
> >>
> >>     > help("sp", "sp")[[1]]
> >>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> >>
> >>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> >>
> >>     Gabor
> >>
> >>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
> >>     >
> >>     > Hi
> >>     >
> >>     > I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
> >>     >
> >>     > By following this thread, I corrected my cross-references to external packages but I got stymied by
> >>     > the one I hoped to give to the  "sp" package for Spatial data
> >>     >
> >>     > _________
> >>     >
> >>     > Here is the history:
> >>     >
> >>     > I tried
> >>     >    \link[sp:sp]{sp}
> >>     > which failed here:
> >>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
> >>     > Status: 1 WARNING
> >>     >
> >>     >
> >>     > That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
> >>     >   \link[sp]{sp}
> >>     > and  failed here:
> >>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
> >>     > Status: 1 WARNING
> >>     >
> >>     >
> >>     > So to complete the possibilities as I understand them,  I just now tried
> >>     >    \link{sp}
> >>     > which, as might be expected, failed here:
> >>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
> >>     > Status: 1 WARNING
> >>     > As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
> >>     >
> >>     > _________
> >>     >
> >>     >
> >>     > I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
> >>     > where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
> >>     >
> >>     > Without further advice, I think I am just going to remove the link to "sp".
> >>     > It really is just a courtesy link to the package description for "sp".
> >>     >
> >>     > Thanks in advance for your thoughts.
> >>     >
> >>     > Wayne
> >>     >
> >>     >
> >>     >
> >>     >
> >>     > -----Original Message-----
> >>     > From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> >>     > Date: Tuesday, June 16, 2020 at 9:27 AM
> >>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
> >>     > Cc: List r-package-devel <r-package-devel at r-project.org>
> >>     > Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>     >
> >>     >     I think that the current behaviour is documented in WRE:
> >>     >
> >>     >     "...There are two other forms of optional argument specified as \link[pkg]{foo} and
> >>     >     \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
> >>     >     These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
> >>     >     help system will resolve the link at run time) or in the normally undesirable event that more
> >>     >     than one package offers help on a topic7 (in which case the present package has precedence so
> >>     >     this is only needed to refer to other packages). They are currently only used in HTML help
> >>     >     (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
> >>     >     than the topic (since there is no way to know which topics are in which files in an uninstalled
> >>     >     package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
> >>     >     if it does not find file foo.html."
> >>     >
> >>     >     Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
> >>     >     i.e. to start looking first for the topic and then for a file.
> >>     >
> >>     >     Georgi Boshnakov
> >>     >
> >>     >     -----Original Message-----
> >>     >     From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> >>     >     Sent: 16 June 2020 13:44
> >>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
> >>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
> >>     >     Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>     >
> >>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>     >     >
> >>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> >>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
> >>     >     > >
> >>     >     > >      > I agree with almost everything you wrote, except one thing:  this isn't
> >>     >     > >      > newly enforced, it has been enforced since the help system began.  What
> >>     >     > >      > I think is new is that there are now tests for it.  Previously those
> >>     >     > >      > links just wouldn't work.
> >>     >     > >
> >>     >     > >      > Duncan Murdoch
> >>     >     > >
> >>     >     > > Yes, to all... including Duncan's agreement with G?bor.
> >>     >     > >
> >>     >     > > Also, Duncan M earlier did mention that he had wanted to
> >>     >     > > *change* the link-to-file behavior for these cases (when he wrote
> >>     >     > > most of the Rd2html source code) but somehow did not get it.
> >>     >     >
> >>     >     > Actually, I don't think I pushed for this change at the time (or at
> >>     >     > least I didn't push much).  I just wish now that I had, because I
> >>     >     > think it will be harder to do it now than it would have been then.
> >>     >     >
> >>     >     > Duncan
> >>     >
> >>     >     I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
> >>     >
> >>     >     * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
> >>     >     * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
> >>     >     * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
> >>     >
> >>     >     Is there anything else?
> >>     >
> >>     >     Gabor
> >>     >
> >>     >     [...]
> >>     >
> >>     >     ______________________________________________
> >>     >     R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>     >     ______________________________________________
> >>     >     R-package-devel at r-project.org mailing list
> >>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>     >
> >>     >
> >>     > ______________________________________________
> >>     > R-package-devel at r-project.org mailing list
> >>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Thu Jul  2 16:41:47 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Thu, 2 Jul 2020 16:41:47 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <92d2b852-f02b-e974-3da0-34f94af70467@gmail.com>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
 <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
 <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>
 <92d2b852-f02b-e974-3da0-34f94af70467@gmail.com>
Message-ID: <trinity-4af2fe83-20b6-482b-8c7d-e92d793ddfb2-1593700907797@3c-app-webde-bap46>

Thank you for the advice Duncan,

But let's not get carried away here: we are talking about a *warning* that only arises if two packages are checked together that are never meant to be installed together.
The new packages contain weeks of improvement-work, and I am not going to add back-and-forth-trick-work just to circumvent some warnings that arise only at the point of switching from old to new.

If there is a problem when checking the new packages together that's a different story and worth taking care about. I didn't find such problems.

Kind regards


Jens



> Gesendet: Donnerstag, 02. Juli 2020 um 15:23 Uhr
> Von: "Duncan Murdoch" <murdoch.duncan at gmail.com>
> An: "Dr. Jens Oehlschl?gel" <jens.oehlschlaegel at truecluster.com>, r-package-devel at r-project.org
> Betreff: Re: Aw: Re: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>
> On 02/07/2020 7:49 a.m., Dr. Jens Oehlschl?gel wrote:
> > Duncan,
> > 
> >> One way is to make bit depend on a particular version of ff.  That may
> >> cause a deadlock if both are being updated at once, but I think CRAN
> >> should be able to deal with it if they are informed of the issue.
> > 
> > Exactly that I have done: I submitted all three packages bit/bit64/ff in version 4.0.2 and made them dependend on Version >= 4.0.0.
> > And yes, the maintainers have been informed about the issue.
> 
> I'm not sure that's what I meant, but I can't be sure, since I haven't 
> seen your source.  What I meant is a package dependency, i.e. the 
> existing ff on CRAN is version 2.2-14.2 and it depends on bit without 
> saying what version of bit is needed.  The existing bit is 1.1-15.2 with 
> no dependency on ff.
> 
> So you can force the new ff to use the new bit by giving the version 
> number, e.g.
> 
> Depends:  bit (>= 2.0)
> 
> but it's not so obvious how to make the new bit depend on the new ff.
> There's no way to say that the dependency is only to a help page, and 
> circular strong dependencies are messy, so I'd suggest you use one of 
> the other options I offered:  a dynamic link in the Rd file, or no link 
> at all.
> 
> Duncan Murdoch
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul  2 19:12:31 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jul 2020 13:12:31 -0400
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-4af2fe83-20b6-482b-8c7d-e92d793ddfb2-1593700907797@3c-app-webde-bap46>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
 <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
 <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>
 <92d2b852-f02b-e974-3da0-34f94af70467@gmail.com>
 <trinity-4af2fe83-20b6-482b-8c7d-e92d793ddfb2-1593700907797@3c-app-webde-bap46>
Message-ID: <227a92b9-f710-62f1-f617-c2eb11798f5f@gmail.com>

On 02/07/2020 10:41 a.m., Dr. Jens Oehlschl?gel wrote:
> Thank you for the advice Duncan,
> 
> But let's not get carried away here: we are talking about a *warning* that only arises if two packages are checked together that are never meant to be installed together.
> The new packages contain weeks of improvement-work, and I am not going to add back-and-forth-trick-work just to circumvent some warnings that arise only at the point of switching from old to new.

That's a choice, but your package might face auto-rejection on CRAN. 
Asking CRAN to handle your update manually means extra work for them; if 
there's a simple way to handle it without that (and I've given you two 
to choose from), it seems kind of selfish not to use it.

BTW, assuming you got the two packages on CRAN, it wouldn't be hard for 
a user to install the new bit without updating ff:  just have both 
installed before your update, then ask to update bit.  Since it doesn't 
depend on ff, it won't trigger an ff update.  You can't expect R to know 
they were never meant to be installed together unless you record that 
fact in the dependencies in the DESCRIPTION file.

Duncan Murdoch


> 
> If there is a problem when checking the new packages together that's a different story and worth taking care about. I didn't find such problems.
> 
> Kind regards
> 
> 
> Jens
> 
> 
> 
>> Gesendet: Donnerstag, 02. Juli 2020 um 15:23 Uhr
>> Von: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>> An: "Dr. Jens Oehlschl?gel" <jens.oehlschlaegel at truecluster.com>, r-package-devel at r-project.org
>> Betreff: Re: Aw: Re: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>
>> On 02/07/2020 7:49 a.m., Dr. Jens Oehlschl?gel wrote:
>>> Duncan,
>>>
>>>> One way is to make bit depend on a particular version of ff.  That may
>>>> cause a deadlock if both are being updated at once, but I think CRAN
>>>> should be able to deal with it if they are informed of the issue.
>>>
>>> Exactly that I have done: I submitted all three packages bit/bit64/ff in version 4.0.2 and made them dependend on Version >= 4.0.0.
>>> And yes, the maintainers have been informed about the issue.
>>
>> I'm not sure that's what I meant, but I can't be sure, since I haven't
>> seen your source.  What I meant is a package dependency, i.e. the
>> existing ff on CRAN is version 2.2-14.2 and it depends on bit without
>> saying what version of bit is needed.  The existing bit is 1.1-15.2 with
>> no dependency on ff.
>>
>> So you can force the new ff to use the new bit by giving the version
>> number, e.g.
>>
>> Depends:  bit (>= 2.0)
>>
>> but it's not so obvious how to make the new bit depend on the new ff.
>> There's no way to say that the dependency is only to a help page, and
>> circular strong dependencies are messy, so I'd suggest you use one of
>> the other options I offered:  a dynamic link in the Rd file, or no link
>> at all.
>>
>> Duncan Murdoch
>>


From wdun|@p @end|ng |rom t|bco@com  Thu Jul  2 19:25:56 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Thu, 2 Jul 2020 10:25:56 -0700
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <CAOO9MKVXvYvQrTdQPUM+DWENGjhwi16ORDE0BtxNoz-YwanuRg@mail.gmail.com>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
 <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
 <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
 <CAOO9MKVXvYvQrTdQPUM+DWENGjhwi16ORDE0BtxNoz-YwanuRg@mail.gmail.com>
Message-ID: <CAF8bMcauSpMGDEAjhxPDhONzwOm6nYSqCpdsJXguLV3OBtda3w@mail.gmail.com>

On Linux you can use 'ltrace' to get a list of all the environment
variables that R looks up.  E.g., do the following in 'script' so all the
output is stored in a file ('typescript') and later look around in it for
the getenv calls.

$ R-devel --debugger=ltrace --debugger-args="-f -e getenv"
...
[pid 25055] libR.so->getenv("R_HOME")
 = "/home/R/R-devel/lib/R"
[pid 25055] libR.so->getenv("R_TRANSLATIONS")
 = nil
[pid 25055] libR.so->getenv("R_PLATFORM")
 = nil
...
> tools:::.check_packages(c("testFixup_0.1.tar.gz", "--as-cran"))[pid
25055] libR.so->getenv("_R_NS_LOAD_")                                   =
nil
[pid 25055] libR.so->getenv("_R_CHECK_ELAPSED_TIMEOUT_")
  = nil
[pid 25055] libR.so->getenv("R_CHECK_ENVIRON")
  = nil
[pid 25055] libreadline.so.6->getenv("HOME")
  = "/homes/bill"
[pid 25055] libR.so->getenv("_R_CHECK_TIMINGS_")
  = nil
[pid 25055] libR.so->getenv("R_ENABLE_JIT")
 = nil
[pid 25055] libR.so->getenv("R_HOME")
 = "/home/R/R-devel/lib/R"
[pid 25055] libR.so->getenv("_R_CHECK_USE_INSTALL_LOG_")
  = nil
[pid 25055] libR.so->getenv("_R_CHECK_SUBDIRS_NOCASE_")
 = nil
[pid 25055] libR.so->getenv("_R_CHECK_ALL_NON_ISO_C_")
  = nil
... hundreds more lines ...
> q("no")


Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Thu, Jul 2, 2020 at 7:24 AM Jan Gorecki <j.gorecki at wit.edu.pl> wrote:

> Thank you Gabor
>
> On Thu, Jul 2, 2020 at 10:20 AM G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> >
> > You can set the _R_CHECK_XREFS_MIND_SUSPECT_ANCHORS_=true env var and
> > use R-devel.
> >
> > Alternatively, and you don't need R-devel for this, you can run R CMD
> > --html INSTALL on your package, and then look for messages that
> > contain "treated as a topic", e.g.
> >
> >     curl_fds                                html
> > Rd warning: /Users/gaborcsardi/works/processx/man/curl_fds.Rd:11: file
> > link ?multi_fdset? in package ?curl? does not exist and so has been
> > treated as a topic
> >
> > Gabor
> >
> >
> > On Thu, Jul 2, 2020 at 10:06 AM Jan Gorecki <j.gorecki at wit.edu.pl>
> wrote:
> > >
> > > Hi,
> > > What is the recommended way to test for those issues locally?
> > > If it is tested during cran submission, then seems reasonable to be
> enabled just by --as-cran switch. Is it?
> > > Thanks
> > >
> > > On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca>
> wrote:
> > >>
> > >> Thank you!
> > >>
> > >> ?-----Original Message-----
> > >> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
> > >> Date: Tuesday, June 16, 2020 at 4:32 PM
> > >> To: Wayne Oldford <rwoldford at uwaterloo.ca>
> > >> Cc: List r-package-devel <r-package-devel at r-project.org>
> > >> Subject: Re: [R-pkg-devel] check cross-references error: Non-file
> package-anchored link(s)
> > >>
> > >>     This is how to look up the filename. The first "sp" is the topic
> name,
> > >>     the second is the package name.
> > >>
> > >>     > help("sp", "sp")[[1]]
> > >>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> > >>
> > >>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> > >>
> > >>     Gabor
> > >>
> > >>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <
> rwoldford at uwaterloo.ca> wrote:
> > >>     >
> > >>     > Hi
> > >>     >
> > >>     > I got caught by this new test this week in trying to push an
> updated release of the loon package to CRAN.
> > >>     >
> > >>     > By following this thread, I corrected my cross-references to
> external packages but I got stymied by
> > >>     > the one I hoped to give to the  "sp" package for Spatial data
> > >>     >
> > >>     > _________
> > >>     >
> > >>     > Here is the history:
> > >>     >
> > >>     > I tried
> > >>     >    \link[sp:sp]{sp}
> > >>     > which failed here:
> > >>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log
> >
> > >>     > Status: 1 WARNING
> > >>     >
> > >>     >
> > >>     > That was meant to correct an earlier attempt (it did for other
> links to "scales" for example) where I had tried
> > >>     >   \link[sp]{sp}
> > >>     > and  failed here:
> > >>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log
> >
> > >>     > Status: 1 WARNING
> > >>     >
> > >>     >
> > >>     > So to complete the possibilities as I understand them,  I just
> now tried
> > >>     >    \link{sp}
> > >>     > which, as might be expected, failed here:
> > >>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log
> >
> > >>     > Status: 1 WARNING
> > >>     > As expected, error here was different:  "Missing  link"  as
> opposed to "Non-file package-anchored link"
> > >>     >
> > >>     > _________
> > >>     >
> > >>     >
> > >>     > I am not sure whether I have missed a subtlety in WRE or that
> the peculiar circumstance
> > >>     > where the package, the topic, and the file name are all
> identical (sp) is some weird boundary case.
> > >>     >
> > >>     > Without further advice, I think I am just going to remove the
> link to "sp".
> > >>     > It really is just a courtesy link to the package description
> for "sp".
> > >>     >
> > >>     > Thanks in advance for your thoughts.
> > >>     >
> > >>     > Wayne
> > >>     >
> > >>     >
> > >>     >
> > >>     >
> > >>     > -----Original Message-----
> > >>     > From: R-package-devel <r-package-devel-bounces at r-project.org>
> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> > >>     > Date: Tuesday, June 16, 2020 at 9:27 AM
> > >>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <
> murdoch.duncan at gmail.com>
> > >>     > Cc: List r-package-devel <r-package-devel at r-project.org>
> > >>     > Subject: Re: [R-pkg-devel] check cross-references error:
> Non-file package-anchored link(s)
> > >>     >
> > >>     >     I think that the current behaviour is documented in WRE:
> > >>     >
> > >>     >     "...There are two other forms of optional argument
> specified as \link[pkg]{foo} and
> > >>     >     \link[pkg:bar]{foo} to link to the package pkg, to files
> foo.html and bar.html respectively.
> > >>     >     These are rarely needed, perhaps to refer to
> not-yet-installed packages (but there the HTML
> > >>     >     help system will resolve the link at run time) or in the
> normally undesirable event that more
> > >>     >     than one package offers help on a topic7 (in which case the
> present package has precedence so
> > >>     >     this is only needed to refer to other packages). They are
> currently only used in HTML help
> > >>     >     (and ignored for hyperlinks in LATEX conversions of help
> pages), and link to the file rather
> > >>     >     than the topic (since there is no way to know which topics
> are in which files in an uninstalled
> > >>     >     package) ...   Because they have been frequently misused,
> the HTML help system looks for topic foo in package pkg
> > >>     >     if it does not find file foo.html."
> > >>     >
> > >>     >     Unless I am missing something, it seems that it would be
> relatively painless to reverse the logic of the current behaviour of the
> help system,
> > >>     >     i.e. to start looking first for the topic and then for a
> file.
> > >>     >
> > >>     >     Georgi Boshnakov
> > >>     >
> > >>     >     -----Original Message-----
> > >>     >     From: R-package-devel <
> r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> > >>     >     Sent: 16 June 2020 13:44
> > >>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
> > >>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
> > >>     >     Subject: Re: [R-pkg-devel] check cross-references error:
> Non-file package-anchored link(s)
> > >>     >
> > >>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <
> murdoch.duncan at gmail.com> wrote:
> > >>     >     >
> > >>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> > >>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03
> -0400 writes:
> > >>     >     > >
> > >>     >     > >      > I agree with almost everything you wrote, except
> one thing:  this isn't
> > >>     >     > >      > newly enforced, it has been enforced since the
> help system began.  What
> > >>     >     > >      > I think is new is that there are now tests for
> it.  Previously those
> > >>     >     > >      > links just wouldn't work.
> > >>     >     > >
> > >>     >     > >      > Duncan Murdoch
> > >>     >     > >
> > >>     >     > > Yes, to all... including Duncan's agreement with G?bor.
> > >>     >     > >
> > >>     >     > > Also, Duncan M earlier did mention that he had wanted to
> > >>     >     > > *change* the link-to-file behavior for these cases
> (when he wrote
> > >>     >     > > most of the Rd2html source code) but somehow did not
> get it.
> > >>     >     >
> > >>     >     > Actually, I don't think I pushed for this change at the
> time (or at
> > >>     >     > least I didn't push much).  I just wish now that I had,
> because I
> > >>     >     > think it will be harder to do it now than it would have
> been then.
> > >>     >     >
> > >>     >     > Duncan
> > >>     >
> > >>     >     I am not entirely sure, but maybe just documenting the
> current behaviour and undoing 78674 could work. With some tweaks? E.g.
> > >>     >
> > >>     >     * updating R-exts to say that \link[pkg:topic]{text} will
> link to `topic.html` in `pkg` first (for historical reasons), and falls
> back to searching for `topic` in `pkg` at render time.
> > >>     >     * updating Rd2HTML to look for the topic and use it in the
> link, instead of throwing a warning, in it cannot find `topic.html`
> > >>     >     * removing the `R CMD check` warning for non-file links,
> that was added in 78674 :)
> > >>     >
> > >>     >     Is there anything else?
> > >>     >
> > >>     >     Gabor
> > >>     >
> > >>     >     [...]
> > >>     >
> > >>     >     ______________________________________________
> > >>     >     R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>     >     ______________________________________________
> > >>     >     R-package-devel at r-project.org mailing list
> > >>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>     >
> > >>     >
> > >>     > ______________________________________________
> > >>     > R-package-devel at r-project.org mailing list
> > >>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >>
> > >> ______________________________________________
> > >> R-package-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From p@u|@@@v@ry @end|ng |rom un|v-|comte@|r  Fri Jul  3 10:15:29 2020
From: p@u|@@@v@ry @end|ng |rom un|v-|comte@|r (Paul SAVARY)
Date: Fri, 3 Jul 2020 10:15:29 +0200 (CEST)
Subject: [R-pkg-devel] Making possible the use of external java codes by
 downloading it
In-Reply-To: <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
Message-ID: <45330124.94581060.1593764129400.JavaMail.zimbra@univ-fcomte.fr>

Hello everyone,

I would like to include external java codes (.jar files) to a package in order to speed up some computations.
However, this would increase the package size above 5 Mb and this code would not be working for users without java installation. 

Instead, I could include a default parameter in the function calling another R package making the same computation but more slowly. It would be best for users without java on their computer.
Besides, I could allow users to download the external java code from a stable url, and include in the R function all the arguments to launch this java code (wrapper for the java code). When downloaded, the jar file should be copied directly into the extdata directory in the user computer if possible.

Does it seem feasible to you? 

Many thanks 
Regards
Paul


From R@|ner @end|ng |rom krug@@de  Fri Jul  3 10:33:15 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Fri, 3 Jul 2020 10:33:15 +0200
Subject: [R-pkg-devel] Making possible the use of external java codes by
 downloading it
In-Reply-To: <45330124.94581060.1593764129400.JavaMail.zimbra@univ-fcomte.fr>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <45330124.94581060.1593764129400.JavaMail.zimbra@univ-fcomte.fr>
Message-ID: <CB9E3E13-C558-4813-965F-59ACB9535040@krugs.de>

Please check out the recent thread "Proper CRAN way - How to handle dependency of java jar file?? About a week ago - I asked essentially the same questions.

Cheers,

Rainer



> On 3 Jul 2020, at 10:15, Paul SAVARY <paul.savary at univ-fcomte.fr> wrote:
> 
> Hello everyone,
> 
> I would like to include external java codes (.jar files) to a package in order to speed up some computations.
> However, this would increase the package size above 5 Mb and this code would not be working for users without java installation. 
> 
> Instead, I could include a default parameter in the function calling another R package making the same computation but more slowly. It would be best for users without java on their computer.
> Besides, I could allow users to download the external java code from a stable url, and include in the R function all the arguments to launch this java code (wrapper for the java code). When downloaded, the jar file should be copied directly into the extdata directory in the user computer if possible.
> 
> Does it seem feasible to you? 
> 
> Many thanks 
> Regards
> Paul
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From R@|ner @end|ng |rom krug@@de  Fri Jul  3 11:15:31 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Fri, 3 Jul 2020 11:15:31 +0200
Subject: [R-pkg-devel] Making possible the use of external java codes by
 downloading it
In-Reply-To: <591372017.94667437.1593767351072.JavaMail.zimbra@univ-fcomte.fr>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <45330124.94581060.1593764129400.JavaMail.zimbra@univ-fcomte.fr>
 <CB9E3E13-C558-4813-965F-59ACB9535040@krugs.de>
 <591372017.94667437.1593767351072.JavaMail.zimbra@univ-fcomte.fr>
Message-ID: <DBB59807-C98A-4978-A8E3-CB0A6804D1D4@krugs.de>

Pleas keep the list in CC so that they know tat you have a solution. Thanks.

There is the function ?Sys.which()? which returns the full path to an executable. Although in many cases correct, it can be that Java is installed but not in the path. So I have a variable called ?java.path? which is used when java is called - the default is set to `java.path <- Sys.which("java?)`

Plesase see https://github.com/rkrug/plantuml/blob/dev/R/aaa.R <https://github.com/rkrug/plantuml/blob/dev/R/aaa.R> and https://github.com/rkrug/plantuml/blob/dev/R/options.R <https://github.com/rkrug/plantuml/blob/dev/R/options.R> how I implemented it.



> On 3 Jul 2020, at 11:09, Paul SAVARY <paul.savary at univ-fcomte.fr> wrote:
> 
> I thank you Rainer.
> 
> Then, I think I will allow users to download the .jar file from an url into the user data directory.
> I get the path to this directory with "rappdirs::user_data_dir()".
> 
> Do you know how to check if java is installed on their machine?
> 
> I thought about using something like that:
> 
> jv <- system2("java", args = c("-version"))
> if(jv != 0){
>   stop("You have to install java on your machine.")
> }
> 
> Cheers
> Paul
> 
> De: "Rainer M Krug" <Rainer at krugs.de>
> ?: "Paul SAVARY" <paul.savary at univ-fcomte.fr>
> Cc: "r-package-devel" <r-package-devel at r-project.org>
> Envoy?: Vendredi 3 Juillet 2020 10:33:15
> Objet: Re: [R-pkg-devel] Making possible the use of external java codes by downloading it
> 
> Please check out the recent thread "Proper CRAN way - How to handle dependency of java jar file?? About a week ago - I asked essentially the same questions.
> 
> Cheers,
> 
> Rainer
> 
> 
> 
> On 3 Jul 2020, at 10:15, Paul SAVARY <paul.savary at univ-fcomte.fr <mailto:paul.savary at univ-fcomte.fr>> wrote:
> 
> Hello everyone,
> 
> I would like to include external java codes (.jar files) to a package in order to speed up some computations.
> However, this would increase the package size above 5 Mb and this code would not be working for users without java installation. 
> 
> Instead, I could include a default parameter in the function calling another R package making the same computation but more slowly. It would be best for users without java on their computer.
> Besides, I could allow users to download the external java code from a stable url, and include in the R function all the arguments to launch this java code (wrapper for the java code). When downloaded, the jar file should be copied directly into the extdata directory in the user computer if possible.
> 
> Does it seem feasible to you? 
> 
> Many thanks 
> Regards
> Paul
> 
> ______________________________________________
> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:	+41 (0)44 635 47 64
> Cell:       	+41 (0)78 630 66 57
> email: ? ? ?Rainer.Krug at uzh.ch <mailto:Rainer.Krug at uzh.ch>
> 		Rainer at krugs.de <mailto:Rainer at krugs.de>
> Skype:     RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From m@rt|n@@m|th @end|ng |rom durh@m@@c@uk  Fri Jul  3 12:17:55 2020
From: m@rt|n@@m|th @end|ng |rom durh@m@@c@uk (Martin R. Smith)
Date: Fri, 3 Jul 2020 11:17:55 +0100
Subject: [R-pkg-devel] Debugging Clang ASAN errors
Message-ID: <CANotEPucEjpDT+1rJwmQBU3G_Nz9JQDopPwmynqOdtP3WtEmaA@mail.gmail.com>

A package I recently had accepted to CRAN is throwing up a "memory not
mapped" segfault on CRAN's post-acceptance fedora-clang ASAN test.  This
error does not occur with debian-clang or gcc.
(Check results:
https://cran.r-project.org/web/checks/check_results_TBRDist.html)

I found a similar issue in the r-packages archives (
https://stat.ethz.ch/pipermail/r-package-devel/2018q3/002907.html). The
suggestion in that case was that the issue may have been a false positive,
a possibility that is consistent with a "HINT" in the output log.

I optimistically suspect that this is the case here too: my package is an R
wrapper to a mature C library, and the segmentation fault arises during a
routine operation with simple input, not in some obscure corner case.  So
question one is: how might I confirm that this is indeed a false positive?

If it's not a false positive, then this raises the question of how I might
reproduce it, as a Windows user without access to a machine running Fedora.
rhub::check_with_sanitizers() uses debian, and returns 'success':
https://builder.r-hub.io/status/TBRDist_1.0.0.9000.tar.gz-b965d74e18dd4bdc8e51e4254ee3699a
Rocker (https://github.com/rocker-org/rocker) only offers a debian (not
fedora) environment, so looks like it will not reproduce the error.

Any thoughts would be gratefully received!

Thanks,

Martin


--

*Dr. Martin R. Smith*
Assistant Professor in Palaeontology
Durham University
Department of Earth Sciences
Mountjoy Site, South Road, Durham, DH1 3LE United Kingdom

*T*: +44 (0)191 334 2320
*M*: +44 (0)774 353 7510
*E*: martin.smith at durham.ac.uk

community.dur.ac.uk/martin.smith
twitter.com/PalaeoSmith

The information in this e-mail and any attachments is co...{{dropped:13}}


From |uc@r @end|ng |rom |edor@project@org  Fri Jul  3 12:36:03 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Fri, 3 Jul 2020 12:36:03 +0200
Subject: [R-pkg-devel] Debugging Clang ASAN errors
In-Reply-To: <CANotEPucEjpDT+1rJwmQBU3G_Nz9JQDopPwmynqOdtP3WtEmaA@mail.gmail.com>
References: <CANotEPucEjpDT+1rJwmQBU3G_Nz9JQDopPwmynqOdtP3WtEmaA@mail.gmail.com>
Message-ID: <CALEXWq3Gw8bFD8D=WZyVKGuHb_wK4vYW_-bNsf6kJC95=k3CGw@mail.gmail.com>

On Fri, 3 Jul 2020 at 12:19, Martin R. Smith <martin.smith at durham.ac.uk> wrote:
>
> A package I recently had accepted to CRAN is throwing up a "memory not
> mapped" segfault on CRAN's post-acceptance fedora-clang ASAN test.  This
> error does not occur with debian-clang or gcc.
> (Check results:
> https://cran.r-project.org/web/checks/check_results_TBRDist.html)
>
> I found a similar issue in the r-packages archives (
> https://stat.ethz.ch/pipermail/r-package-devel/2018q3/002907.html). The
> suggestion in that case was that the issue may have been a false positive,
> a possibility that is consistent with a "HINT" in the output log.
>
> I optimistically suspect that this is the case here too: my package is an R
> wrapper to a mature C library, and the segmentation fault arises during a
> routine operation with simple input, not in some obscure corner case.  So
> question one is: how might I confirm that this is indeed a false positive?
>
> If it's not a false positive, then this raises the question of how I might
> reproduce it, as a Windows user without access to a machine running Fedora.
> rhub::check_with_sanitizers() uses debian, and returns 'success':
> https://builder.r-hub.io/status/TBRDist_1.0.0.9000.tar.gz-b965d74e18dd4bdc8e51e4254ee3699a
> Rocker (https://github.com/rocker-org/rocker) only offers a debian (not
> fedora) environment, so looks like it will not reproduce the error.
>
> Any thoughts would be gratefully received!

The error points to this spot:
https://github.com/ms609/uspr-r/blob/04ecc6f6d26d7db957dc7da2d7753e0cec040a92/tbr.h#L2973

If I'm reading this correctly, if the match happens at the beginning
of the loop, then this is decrementing an iterator to
sibling_pairs.begin(), which doesn't sound good. This can't really
have an impact, because there's a break afterwards, but the library
shouldn't be doing that anyway.

-- 
I?aki ?car


From @eb@meyer @end|ng |rom |@u@de  Fri Jul  3 14:24:51 2020
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Fri, 3 Jul 2020 14:24:51 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
 <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
 <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
Message-ID: <460be38f-d4c0-387a-fb75-ae50b437169e@fau.de>

Has the discussion about potential updates to Rd2HTML come to an end?
Should I be prepared to fix non-file package-anchored links in
(non-roxygen) packages I maintain, i.e., look up the help file structure
of the referenced packages?

I don't yet believe that R has really given up on supporting
developer-friendly, direct and simple links to

             _topic_       rather than            _file_

\link[rgeos]{gIntersection}     -> \link[rgeos]{topo-bin-gIntersection}

\link[colorspace]{heat_hcl}     -> \link[colorspace]{rainbow_hcl}

\link[RColorBrewer]{brewer.pal} -> \link[RColorBrewer]{ColorBrewer}

\link[gridExtra]{grid.arrange}  -> link[gridExtra]{arrangeGrob}

\link[ggplot2]{geom_line}       -> \link[ggplot2]{geom_path}

for pointing to other packages which are only in Suggests and thus not
necessarily installed at install-time of the referencing package.

Topic-based links to external functions are so much more intuitive. I do
not understand why there should be a penalty for clearly identifying the
target package as opposed to just writing \link{topic} and hoping that
the intended package will be found by the help system at run time.

	Sebastian


Am 02.07.20 um 11:20 schrieb G?bor Cs?rdi:
> You can set the _R_CHECK_XREFS_MIND_SUSPECT_ANCHORS_=true env var and
> use R-devel.
> 
> Alternatively, and you don't need R-devel for this, you can run R CMD
> --html INSTALL on your package, and then look for messages that
> contain "treated as a topic", e.g.
> 
>     curl_fds                                html
> Rd warning: /Users/gaborcsardi/works/processx/man/curl_fds.Rd:11: file
> link ?multi_fdset? in package ?curl? does not exist and so has been
> treated as a topic
> 
> Gabor
> 
> 
> On Thu, Jul 2, 2020 at 10:06 AM Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
>>
>> Hi,
>> What is the recommended way to test for those issues locally?
>> If it is tested during cran submission, then seems reasonable to be enabled just by --as-cran switch. Is it?
>> Thanks
>>
>> On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca> wrote:
>>>
>>> Thank you!
>>>
>>> ?-----Original Message-----
>>> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
>>> Date: Tuesday, June 16, 2020 at 4:32 PM
>>> To: Wayne Oldford <rwoldford at uwaterloo.ca>
>>> Cc: List r-package-devel <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>
>>>     This is how to look up the filename. The first "sp" is the topic name,
>>>     the second is the package name.
>>>
>>>     > help("sp", "sp")[[1]]
>>>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>>>
>>>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>>>
>>>     Gabor
>>>
>>>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>>     >
>>>     > Hi
>>>     >
>>>     > I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>>     >
>>>     > By following this thread, I corrected my cross-references to external packages but I got stymied by
>>>     > the one I hoped to give to the  "sp" package for Spatial data
>>>     >
>>>     > _________
>>>     >
>>>     > Here is the history:
>>>     >
>>>     > I tried
>>>     >    \link[sp:sp]{sp}
>>>     > which failed here:
>>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>>>     > Status: 1 WARNING
>>>     >
>>>     >
>>>     > That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>>     >   \link[sp]{sp}
>>>     > and  failed here:
>>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>>>     > Status: 1 WARNING
>>>     >
>>>     >
>>>     > So to complete the possibilities as I understand them,  I just now tried
>>>     >    \link{sp}
>>>     > which, as might be expected, failed here:
>>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>>>     > Status: 1 WARNING
>>>     > As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>>     >
>>>     > _________
>>>     >
>>>     >
>>>     > I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>>>     > where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>>     >
>>>     > Without further advice, I think I am just going to remove the link to "sp".
>>>     > It really is just a courtesy link to the package description for "sp".
>>>     >
>>>     > Thanks in advance for your thoughts.
>>>     >
>>>     > Wayne
>>>     >
>>>     >
>>>     >
>>>     >
>>>     > -----Original Message-----
>>>     > From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>>>     > Date: Tuesday, June 16, 2020 at 9:27 AM
>>>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>>>     > Cc: List r-package-devel <r-package-devel at r-project.org>
>>>     > Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>     >
>>>     >     I think that the current behaviour is documented in WRE:
>>>     >
>>>     >     "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>>     >     \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>>     >     These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>>     >     help system will resolve the link at run time) or in the normally undesirable event that more
>>>     >     than one package offers help on a topic7 (in which case the present package has precedence so
>>>     >     this is only needed to refer to other packages). They are currently only used in HTML help
>>>     >     (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>>     >     than the topic (since there is no way to know which topics are in which files in an uninstalled
>>>     >     package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>>     >     if it does not find file foo.html."
>>>     >
>>>     >     Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>>     >     i.e. to start looking first for the topic and then for a file.
>>>     >
>>>     >     Georgi Boshnakov
>>>     >
>>>     >     -----Original Message-----
>>>     >     From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>>     >     Sent: 16 June 2020 13:44
>>>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
>>>     >     Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>     >
>>>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>     >     >
>>>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>>     >     > >
>>>     >     > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>>     >     > >      > newly enforced, it has been enforced since the help system began.  What
>>>     >     > >      > I think is new is that there are now tests for it.  Previously those
>>>     >     > >      > links just wouldn't work.
>>>     >     > >
>>>     >     > >      > Duncan Murdoch
>>>     >     > >
>>>     >     > > Yes, to all... including Duncan's agreement with G?bor.
>>>     >     > >
>>>     >     > > Also, Duncan M earlier did mention that he had wanted to
>>>     >     > > *change* the link-to-file behavior for these cases (when he wrote
>>>     >     > > most of the Rd2html source code) but somehow did not get it.
>>>     >     >
>>>     >     > Actually, I don't think I pushed for this change at the time (or at
>>>     >     > least I didn't push much).  I just wish now that I had, because I
>>>     >     > think it will be harder to do it now than it would have been then.
>>>     >     >
>>>     >     > Duncan
>>>     >
>>>     >     I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>>     >
>>>     >     * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>>     >     * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>>     >     * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>>     >
>>>     >     Is there anything else?
>>>     >
>>>     >     Gabor
>>>     >
>>>     >     [...]
>>>     >
>>>     >     ______________________________________________
>>>     >     R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>     >     ______________________________________________
>>>     >     R-package-devel at r-project.org mailing list
>>>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>     >
>>>     >
>>>     > ______________________________________________
>>>     > R-package-devel at r-project.org mailing list
>>>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From |@|@ye @end|ng |rom un@w@edu@@u  Fri Jul  3 02:15:27 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Fri, 3 Jul 2020 00:15:27 +0000
Subject: [R-pkg-devel] =?windows-1252?q?warning=3A_type_of_=91zhpevx=5F?=
 =?windows-1252?q?=92_does_not_match_original_declaration_=5B-Wlto-type-mi?=
 =?windows-1252?q?smatch=5D?=
Message-ID: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>

Dear all,

The problem:
I struggle to solve a WARNING that is shown on the CRAN system but not on my side when I use "R-devel check --as-cran IndependenceTests". This seems to be related to the declaration of a LAPACK Fortran subroutine (zhpevx) that I call from C.

I could not find any hint on Google allowing me to solve the issue. I read the following sections of the "Writing R Extensions" manual (but could not understand how to solve the problem):

  *   4.5 Using Link Time Optimization
  *   6.6 Calling C from Fortran and vice versa

Maybe the solution is obvious, but not to me.

The warning shown on CRAN is:
checking whether package ?IndependenceTests? can be installed ...
[11s/11s] WARNING
Found the following significant warnings:
    myzhpevx.cpp:13:23: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Other feedback I received from the CRAN team:
Professor Brian Ripley suggested the two pieces of advice below (which I believe to have followed):

  *   For registering/interfacing Fortran calls,
       gfortran -c -fc-prototypes-external
is the best way to extract a prototype (with gfortran >= 9.2).  If this
includes int_least32_t, see the comment below on Fortran-LOGICAL.
hint).
  *
 Fortran subroutines correspond to C void functions

What is the current state of my source code:
I have a Fortran subroutine (defined in the file src/zhpevx.f at line 232):
      SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
     $     abstol, m, w, z, ldz, work, rwork, iwork,
     $     ifail, info )

This subroutine is declared (in file myzhpevx.cpp at line 13) as follows:
          void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);

Source package can be downloaded here:
http://biostatisticien.eu/IndependenceTests_0.5.tar.gz

My system:
Linux Debian 10 Buster
Last version of R-devel

Many thanks in advance for your help.

Best regards,

Pierre Lafaye de Micheaux

Associate Professor UNSW Sydney
Co-op Academic Coordinator for Data Science & Decisions and Advanced Maths

Tel.: (00.[+612]) 9385 7029                                      School of Mathematics and Statistics
http://web.maths.unsw.edu.au/~lafaye/            UNSW Sydney, NSW 2052, AUSTRALIA

Beginning of all science is the surprise that things are what they are (Aristotle). C'est par l'exemple et la coh?rence qu'on arrive ? convaincre (P. Rabhi).

	[[alternative HTML version deleted]]


From @t@t@pnu @end|ng |rom gm@||@com  Sat Jul  4 14:46:09 2020
From: @t@t@pnu @end|ng |rom gm@||@com (Applied Statistics Laboratory)
Date: Sat, 4 Jul 2020 21:46:09 +0900
Subject: [R-pkg-devel] NOTE from checking for detritus in the temp directory
Message-ID: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>

Dear All,

I got a NOTE from CRAN:







** checking for detritus in the temp directory ... NOTEFound the following
files/directories:  ?calibre_4.99.6_tmp_lezpx205?
?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
Here is the log file for the CRAN check. (At the bottom, you can find the
above NOTE.)

https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log



When I checked my package, there was no detritus in the temp dir. I tested
my package using the command below:

 > rhub::platforms()
 > rhub::check_for_cran(platforms = "debian-clang-devel")
 > rhub::check_for_cran(platforms = "debian-gcc-devel" )
 > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
 > rhub::check_for_cran(platforms = "debian-gcc-patched" )
 > rhub::check_for_cran(platforms = "debian-gcc-release" )

As shown below, it says "OK"

https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/

Please help me if you know how to fix the detritus issue in the temp dir.

Thanks,
CP

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Sat Jul  4 14:48:03 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sat, 4 Jul 2020 13:48:03 +0100
Subject: [R-pkg-devel] 
 NOTE from checking for detritus in the temp directory
In-Reply-To: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
References: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
Message-ID: <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>

Most likely this is because you start a web browser in your examples
or tests. Try to find where that happens, and don't run it that
example or test case on CRAN.

Gabor

On Sat, Jul 4, 2020 at 1:46 PM Applied Statistics Laboratory
<stat.pnu at gmail.com> wrote:
>
> Dear All,
>
> I got a NOTE from CRAN:
>
>
>
>
>
>
>
> ** checking for detritus in the temp directory ... NOTEFound the following
> files/directories:  ?calibre_4.99.6_tmp_lezpx205?
> ?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
> ?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
> Here is the log file for the CRAN check. (At the bottom, you can find the
> above NOTE.)
>
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
>
>
>
> When I checked my package, there was no detritus in the temp dir. I tested
> my package using the command below:
>
>  > rhub::platforms()
>  > rhub::check_for_cran(platforms = "debian-clang-devel")
>  > rhub::check_for_cran(platforms = "debian-gcc-devel" )
>  > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
>  > rhub::check_for_cran(platforms = "debian-gcc-patched" )
>  > rhub::check_for_cran(platforms = "debian-gcc-release" )
>
> As shown below, it says "OK"
>
> https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/
>
> Please help me if you know how to fix the detritus issue in the temp dir.
>
> Thanks,
> CP
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @t@t@pnu @end|ng |rom gm@||@com  Sun Jul  5 01:51:40 2020
From: @t@t@pnu @end|ng |rom gm@||@com (Applied Statistics Laboratory)
Date: Sun, 5 Jul 2020 08:51:40 +0900
Subject: [R-pkg-devel] 
 NOTE from checking for detritus in the temp directory
In-Reply-To: <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>
References: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
 <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>
Message-ID: <CAGfdMNvgYh0Q5=UCpTmScVKudn8Suu04Fb56w2naz1rNm-8xUg@mail.gmail.com>

Thanks G?bor,

I removed all the URLs in the *.Rd files and resubmitted to CRAN.

I got the same NOTE again as below:

After removing the URLs in the *.Rd :
https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200704_161730/Debian/00check.log


Just in case, the below is the NOTE before removing the ULRs in the Rd:
https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log


I have this trouble after adding vignettes.
So my guess is that this NOTE may be from vignette.
I checked the package using  rhub::check_for_cran  with all the platforms.
They do not have this kind of issue.
Only CRAN produces this NOTE. My vignette is written in *.Rnw (essentially
the same as LaTeX format).
When the vignette file is compiled, some aux files are generated. So, I
think that CRAN may not delete aux files properly.

Thanks,
CP



On Sat, Jul 4, 2020 at 9:48 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> Most likely this is because you start a web browser in your examples
> or tests. Try to find where that happens, and don't run it that
> example or test case on CRAN.
>
> Gabor
>
> On Sat, Jul 4, 2020 at 1:46 PM Applied Statistics Laboratory
> <stat.pnu at gmail.com> wrote:
> >
> > Dear All,
> >
> > I got a NOTE from CRAN:
> >
> >
> >
> >
> >
> >
> >
> > ** checking for detritus in the temp directory ... NOTEFound the
> following
> > files/directories:  ?calibre_4.99.6_tmp_lezpx205?
> > ?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
> > ?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
> > Here is the log file for the CRAN check. (At the bottom, you can find the
> > above NOTE.)
> >
> >
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
> >
> >
> >
> > When I checked my package, there was no detritus in the temp dir. I
> tested
> > my package using the command below:
> >
> >  > rhub::platforms()
> >  > rhub::check_for_cran(platforms = "debian-clang-devel")
> >  > rhub::check_for_cran(platforms = "debian-gcc-devel" )
> >  > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
> >  > rhub::check_for_cran(platforms = "debian-gcc-patched" )
> >  > rhub::check_for_cran(platforms = "debian-gcc-release" )
> >
> > As shown below, it says "OK"
> >
> >
> https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/
> >
> > Please help me if you know how to fix the detritus issue in the temp dir.
> >
> > Thanks,
> > CP
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Applied Statistics Laboratory

https://sites.google.com/view/appliedstatlab

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Sun Jul  5 02:52:10 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sun, 5 Jul 2020 01:52:10 +0100
Subject: [R-pkg-devel] 
 NOTE from checking for detritus in the temp directory
In-Reply-To: <CAGfdMNvgYh0Q5=UCpTmScVKudn8Suu04Fb56w2naz1rNm-8xUg@mail.gmail.com>
References: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
 <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>
 <CAGfdMNvgYh0Q5=UCpTmScVKudn8Suu04Fb56w2naz1rNm-8xUg@mail.gmail.com>
Message-ID: <CABtg=K=yCMHs3yhdGHq1wudwM-VG=CS0y4S9F38v1xFTM6OKfw@mail.gmail.com>

URLs are fine, the problem is with opening external programs like a
web browser or a PDF viewer. I think you do that here:

https://github.com/AppliedStat/R/blob/8e4173da8917caf0f4f68d4056902075fb9013c2/rQCC/man/factors.cc.Rd#L118
https://github.com/AppliedStat/R/blob/8e4173da8917caf0f4f68d4056902075fb9013c2/rQCC/man/rcc.Rd#L297

Maybe at other places as well.

If you want to open the vignette from the example, maybe you can try
something like

if (interactive()) vignette("factors.cc", package="rQCC")

so it does not run in R CMD check.

Gabor

On Sun, Jul 5, 2020 at 12:51 AM Applied Statistics Laboratory
<stat.pnu at gmail.com> wrote:
>
> Thanks G?bor,
>
> I removed all the URLs in the *.Rd files and resubmitted to CRAN.
>
> I got the same NOTE again as below:
>
> After removing the URLs in the *.Rd :
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200704_161730/Debian/00check.log
>
> Just in case, the below is the NOTE before removing the ULRs in the Rd:
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
>
> I have this trouble after adding vignettes.
> So my guess is that this NOTE may be from vignette.
> I checked the package using  rhub::check_for_cran  with all the platforms. They do not have this kind of issue.
> Only CRAN produces this NOTE. My vignette is written in *.Rnw (essentially the same as LaTeX format).
> When the vignette file is compiled, some aux files are generated. So, I think that CRAN may not delete aux files properly.
>
> Thanks,
> CP
>
>
>
> On Sat, Jul 4, 2020 at 9:48 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>
>> Most likely this is because you start a web browser in your examples
>> or tests. Try to find where that happens, and don't run it that
>> example or test case on CRAN.
>>
>> Gabor
>>
>> On Sat, Jul 4, 2020 at 1:46 PM Applied Statistics Laboratory
>> <stat.pnu at gmail.com> wrote:
>> >
>> > Dear All,
>> >
>> > I got a NOTE from CRAN:
>> >
>> >
>> >
>> >
>> >
>> >
>> >
>> > ** checking for detritus in the temp directory ... NOTEFound the following
>> > files/directories:  ?calibre_4.99.6_tmp_lezpx205?
>> > ?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
>> > ?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
>> > Here is the log file for the CRAN check. (At the bottom, you can find the
>> > above NOTE.)
>> >
>> > https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
>> >
>> >
>> >
>> > When I checked my package, there was no detritus in the temp dir. I tested
>> > my package using the command below:
>> >
>> >  > rhub::platforms()
>> >  > rhub::check_for_cran(platforms = "debian-clang-devel")
>> >  > rhub::check_for_cran(platforms = "debian-gcc-devel" )
>> >  > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
>> >  > rhub::check_for_cran(platforms = "debian-gcc-patched" )
>> >  > rhub::check_for_cran(platforms = "debian-gcc-release" )
>> >
>> > As shown below, it says "OK"
>> >
>> > https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/
>> >
>> > Please help me if you know how to fix the detritus issue in the temp dir.
>> >
>> > Thanks,
>> > CP
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> Applied Statistics Laboratory
>
> https://sites.google.com/view/appliedstatlab


From @t@tpnu @end|ng |rom gm@||@com  Sun Jul  5 07:32:37 2020
From: @t@tpnu @end|ng |rom gm@||@com (Applied Statistics Laboratory)
Date: Sun, 5 Jul 2020 14:32:37 +0900
Subject: [R-pkg-devel] 
 NOTE from checking for detritus in the temp directory
In-Reply-To: <CABtg=K=yCMHs3yhdGHq1wudwM-VG=CS0y4S9F38v1xFTM6OKfw@mail.gmail.com>
References: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
 <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>
 <CAGfdMNvgYh0Q5=UCpTmScVKudn8Suu04Fb56w2naz1rNm-8xUg@mail.gmail.com>
 <CABtg=K=yCMHs3yhdGHq1wudwM-VG=CS0y4S9F38v1xFTM6OKfw@mail.gmail.com>
Message-ID: <CAGfdMNvOdgfDcp2BnDCnsuRFEGGt8WC9U=qudvvubOKHwN9m7A@mail.gmail.com>

Dear G?bor,

Thanks so much for your suggestions. Now my problems are solved.

Best wishes,
CP


On Sun, Jul 5, 2020 at 9:52 AM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> URLs are fine, the problem is with opening external programs like a
> web browser or a PDF viewer. I think you do that here:
>
>
> https://github.com/AppliedStat/R/blob/8e4173da8917caf0f4f68d4056902075fb9013c2/rQCC/man/factors.cc.Rd#L118
>
> https://github.com/AppliedStat/R/blob/8e4173da8917caf0f4f68d4056902075fb9013c2/rQCC/man/rcc.Rd#L297
>
> Maybe at other places as well.
>
> If you want to open the vignette from the example, maybe you can try
> something like
>
> if (interactive()) vignette("factors.cc", package="rQCC")
>
> so it does not run in R CMD check.
>
> Gabor
>
> On Sun, Jul 5, 2020 at 12:51 AM Applied Statistics Laboratory
> <stat.pnu at gmail.com> wrote:
> >
> > Thanks G?bor,
> >
> > I removed all the URLs in the *.Rd files and resubmitted to CRAN.
> >
> > I got the same NOTE again as below:
> >
> > After removing the URLs in the *.Rd :
> >
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200704_161730/Debian/00check.log
> >
> > Just in case, the below is the NOTE before removing the ULRs in the Rd:
> >
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
> >
> > I have this trouble after adding vignettes.
> > So my guess is that this NOTE may be from vignette.
> > I checked the package using  rhub::check_for_cran  with all the
> platforms. They do not have this kind of issue.
> > Only CRAN produces this NOTE. My vignette is written in *.Rnw
> (essentially the same as LaTeX format).
> > When the vignette file is compiled, some aux files are generated. So, I
> think that CRAN may not delete aux files properly.
> >
> > Thanks,
> > CP
> >
> >
> >
> > On Sat, Jul 4, 2020 at 9:48 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> >>
> >> Most likely this is because you start a web browser in your examples
> >> or tests. Try to find where that happens, and don't run it that
> >> example or test case on CRAN.
> >>
> >> Gabor
> >>
> >> On Sat, Jul 4, 2020 at 1:46 PM Applied Statistics Laboratory
> >> <stat.pnu at gmail.com> wrote:
> >> >
> >> > Dear All,
> >> >
> >> > I got a NOTE from CRAN:
> >> >
> >> >
> >> >
> >> >
> >> >
> >> >
> >> >
> >> > ** checking for detritus in the temp directory ... NOTEFound the
> following
> >> > files/directories:  ?calibre_4.99.6_tmp_lezpx205?
> >> > ?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
> >> > ?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
> >> > Here is the log file for the CRAN check. (At the bottom, you can find
> the
> >> > above NOTE.)
> >> >
> >> >
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
> >> >
> >> >
> >> >
> >> > When I checked my package, there was no detritus in the temp dir. I
> tested
> >> > my package using the command below:
> >> >
> >> >  > rhub::platforms()
> >> >  > rhub::check_for_cran(platforms = "debian-clang-devel")
> >> >  > rhub::check_for_cran(platforms = "debian-gcc-devel" )
> >> >  > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
> >> >  > rhub::check_for_cran(platforms = "debian-gcc-patched" )
> >> >  > rhub::check_for_cran(platforms = "debian-gcc-release" )
> >> >
> >> > As shown below, it says "OK"
> >> >
> >> >
> https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/
> >> >
> >> > Please help me if you know how to fix the detritus issue in the temp
> dir.
> >> >
> >> > Thanks,
> >> > CP
> >> >
> >> >         [[alternative HTML version deleted]]
> >> >
> >> > ______________________________________________
> >> > R-package-devel at r-project.org mailing list
> >> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >
> >
> > --
> > Applied Statistics Laboratory
> >
> > https://sites.google.com/view/appliedstatlab
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jul  6 22:11:57 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 6 Jul 2020 23:11:57 +0300
Subject: [R-pkg-devel] 
 =?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
 =?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-mismatch=5D?=
In-Reply-To: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <20200706231157.22ed7b92@trisector>

On Fri, 3 Jul 2020 00:15:27 +0000
Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:

>Found the following significant warnings:
>    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> original declaration [-Wlto-type-mismatch]

I managed to reproduce the warning on R-devel r78607 built with
--enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):

myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:7: note: type mismatch in parameter 20
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^
zhpevx.f:232:7: note: type ?int? should match type ?size_t?
/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
 typedef __SIZE_TYPE__ size_t;
                       ^
zhpevx.f:232:7: note: ?zhpevx? was previously declared here
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^

Do you have access to the notes produced by the compiler in addition
to the warnings? Do they spell the same difference?

If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
while gfortran < 8 uses int instead of size_t for hidden size arguments,
it doesn't make a practical difference.

-- 
Best regards,
Ivan


From |@|@ye @end|ng |rom un@w@edu@@u  Tue Jul  7 00:13:01 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Mon, 6 Jul 2020 22:13:01 +0000
Subject: [R-pkg-devel] 
 =?windows-1252?q?warning=3A_type_of_=91zhpevx=5F?=
 =?windows-1252?q?=92_does_not_match_original_declaration_=5B-Wlto-type-mi?=
 =?windows-1252?q?smatch=5D?=
In-Reply-To: <20200706231157.22ed7b92@trisector>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <20200706231157.22ed7b92@trisector>
Message-ID: <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>

Dear Ivan,

Thank you very much for your response.

I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)

My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.

Thank you in advance for any other advice.

Best regards,
Pierre
________________________________
From: Ivan Krylov <krylov.r00t at gmail.com>
Sent: Tuesday, 7 July 2020 06:11
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

On Fri, 3 Jul 2020 00:15:27 +0000
Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:

>Found the following significant warnings:
>    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> original declaration [-Wlto-type-mismatch]

I managed to reproduce the warning on R-devel r78607 built with
--enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):

myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:7: note: type mismatch in parameter 20
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^
zhpevx.f:232:7: note: type ?int? should match type ?size_t?
/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
 typedef __SIZE_TYPE__ size_t;
                       ^
zhpevx.f:232:7: note: ?zhpevx? was previously declared here
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^

Do you have access to the notes produced by the compiler in addition
to the warnings? Do they spell the same difference?

If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
while gfortran < 8 uses int instead of size_t for hidden size arguments,
it doesn't make a practical difference.

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From wdun|@p @end|ng |rom t|bco@com  Tue Jul  7 00:36:04 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Mon, 6 Jul 2020 15:36:04 -0700
Subject: [R-pkg-devel] 
	=?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
	=?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-misma?=
	=?utf-8?q?tch=5D?=
In-Reply-To: <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>

Have you tried what is recommended in
https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
?

<quote>
For arguments of CHARACTER type, the character length is passed as a
hidden argument at the end of the argument list. For deferred-length
strings, the value is passed by reference, otherwise by value. The
character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
Fortran). Note that this is different to older versions of the GNU
Fortran compiler, where the type of the hidden character length
argument was a C int. In order to retain compatibility with older
versions, one can e.g. for the following Fortran procedure

subroutine fstrlen (s, a)
   character(len=*) :: s
   integer :: a
   print*, len(s)
end subroutine fstrlen

define the corresponding C prototype as follows:

#if __GNUC__ > 7
typedef size_t fortran_charlen_t;
#else
typedef int fortran_charlen_t;
#endif

void fstrlen_ (char*, int*, fortran_charlen_t);

In order to avoid such compiler-specific details, for new code it is
instead recommended to use the ISO_C_BINDING feature.

Note with C binding, CHARACTER(len=1) result variables are returned
according to the platform ABI and no hidden length argument is used
for dummy arguments; with VALUE, those variables are passed by value.
</quote>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au> wrote:
>
> Dear Ivan,
>
> Thank you very much for your response.
>
> I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
>
> My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
>
> Thank you in advance for any other advice.
>
> Best regards,
> Pierre
> ________________________________
> From: Ivan Krylov <krylov.r00t at gmail.com>
> Sent: Tuesday, 7 July 2020 06:11
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> On Fri, 3 Jul 2020 00:15:27 +0000
> Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
>
> >Found the following significant warnings:
> >    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> > original declaration [-Wlto-type-mismatch]
>
> I managed to reproduce the warning on R-devel r78607 built with
> --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
>
> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>                 ^
> zhpevx.f:232:7: note: type mismatch in parameter 20
>        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>        ^
> zhpevx.f:232:7: note: type ?int? should match type ?size_t?
> /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
>  typedef __SIZE_TYPE__ size_t;
>                        ^
> zhpevx.f:232:7: note: ?zhpevx? was previously declared here
>        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>        ^
>
> Do you have access to the notes produced by the compiler in addition
> to the warnings? Do they spell the same difference?
>
> If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
> while gfortran < 8 uses int instead of size_t for hidden size arguments,
> it doesn't make a practical difference.
>
> --
> Best regards,
> Ivan
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |@|@ye @end|ng |rom un@w@edu@@u  Tue Jul  7 01:38:57 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Mon, 6 Jul 2020 23:38:57 +0000
Subject: [R-pkg-devel] 
 =?windows-1252?q?warning=3A_type_of_=91zhpevx=5F?=
 =?windows-1252?q?=92_does_not_match_original_declaration_=5B-Wlto-type-mi?=
 =?windows-1252?q?smatch=5D?=
In-Reply-To: <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
Message-ID: <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>

Hello Bill,

Thank you for your insight.

First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:

<quote>
myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
</quote>

What I did is the following:

<quote>
void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);

 char cjobz[2];
 strncpy(cjobz, jobz[0], 1);
 cjobz[1] = '\0';
 char crange[2];
 strncpy(crange, range[0], 1);
 crange[1] = '\0';
 char cuplo[2];
 strncpy(cuplo, uplo[0], 1);
 cuplo[1] = '\0';

 F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
  w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
</quote>

Do you see anything wrong with the above?

Thank you

Best
Pierre

________________________________
From: William Dunlap <wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 08:36
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Have you tried what is recommended in
https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
?

<quote>
For arguments of CHARACTER type, the character length is passed as a
hidden argument at the end of the argument list. For deferred-length
strings, the value is passed by reference, otherwise by value. The
character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
Fortran). Note that this is different to older versions of the GNU
Fortran compiler, where the type of the hidden character length
argument was a C int. In order to retain compatibility with older
versions, one can e.g. for the following Fortran procedure

subroutine fstrlen (s, a)
   character(len=*) :: s
   integer :: a
   print*, len(s)
end subroutine fstrlen

define the corresponding C prototype as follows:

#if __GNUC__ > 7
typedef size_t fortran_charlen_t;
#else
typedef int fortran_charlen_t;
#endif

void fstrlen_ (char*, int*, fortran_charlen_t);

In order to avoid such compiler-specific details, for new code it is
instead recommended to use the ISO_C_BINDING feature.

Note with C binding, CHARACTER(len=1) result variables are returned
according to the platform ABI and no hidden length argument is used
for dummy arguments; with VALUE, those variables are passed by value.
</quote>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au> wrote:
>
> Dear Ivan,
>
> Thank you very much for your response.
>
> I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
>
> My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
>
> Thank you in advance for any other advice.
>
> Best regards,
> Pierre
> ________________________________
> From: Ivan Krylov <krylov.r00t at gmail.com>
> Sent: Tuesday, 7 July 2020 06:11
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> On Fri, 3 Jul 2020 00:15:27 +0000
> Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
>
> >Found the following significant warnings:
> >    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> > original declaration [-Wlto-type-mismatch]
>
> I managed to reproduce the warning on R-devel r78607 built with
> --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
>
> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>                 ^
> zhpevx.f:232:7: note: type mismatch in parameter 20
>        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>        ^
> zhpevx.f:232:7: note: type ?int? should match type ?size_t?
> /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
>  typedef __SIZE_TYPE__ size_t;
>                        ^
> zhpevx.f:232:7: note: ?zhpevx? was previously declared here
>        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>        ^
>
> Do you have access to the notes produced by the compiler in addition
> to the warnings? Do they spell the same difference?
>
> If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
> while gfortran < 8 uses int instead of size_t for hidden size arguments,
> it doesn't make a practical difference.
>
> --
> Best regards,
> Ivan
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From wdun|@p @end|ng |rom t|bco@com  Tue Jul  7 03:46:15 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Mon, 6 Jul 2020 18:46:15 -0700
Subject: [R-pkg-devel] 
	=?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
	=?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-misma?=
	=?utf-8?q?tch=5D?=
In-Reply-To: <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>

With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
-flto flag I get the sort of error messages that you report.

c:\tmp\fortran>cat main.c
#include <string.h>
#include <stdio.h>

#ifdef USE_INT
typedef int FC_LEN_T;
#endif
#ifdef USE_LONG
typedef long int FC_LEN_T;
#endif
#ifdef USE_LONG_LONG
typedef long long int FC_LEN_T;
#endif

extern void sub_(char* word, double *ret, FC_LEN_T word_len);

int main(int argc, char* argv[])
{
    if (argc == 2) {
        double ret = 3. ;
        FC_LEN_T word_len = strlen(argv[1]);
        sub_(argv[1], &ret, word_len);
        printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
        return 0;
    } else {
        return -1;
    }
}

c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
<no warnings or notes>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au> wrote:
>
> Hello Bill,
>
> Thank you for your insight.
>
> First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:
>
> <quote>
> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
> </quote>
>
> What I did is the following:
>
> <quote>
> void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>       const int *n, Rcomplex *ap, const double *vl,
>       const double *vu, const int *il, const int *iu,
>       const double *abstol, int *m, double *w,
>       Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>       int *iwork, int *ifail, int *info,
>       FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
>
>  char cjobz[2];
>  strncpy(cjobz, jobz[0], 1);
>  cjobz[1] = '\0';
>  char crange[2];
>  strncpy(crange, range[0], 1);
>  crange[1] = '\0';
>  char cuplo[2];
>  strncpy(cuplo, uplo[0], 1);
>  cuplo[1] = '\0';
>
>  F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
>   w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
> </quote>
>
> Do you see anything wrong with the above?
>
> Thank you
>
> Best
> Pierre
>
> ________________________________
> From: William Dunlap <wdunlap at tibco.com>
> Sent: Tuesday, 7 July 2020 08:36
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> Have you tried what is recommended in
> https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
> ?
>
> <quote>
> For arguments of CHARACTER type, the character length is passed as a
> hidden argument at the end of the argument list. For deferred-length
> strings, the value is passed by reference, otherwise by value. The
> character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
> Fortran). Note that this is different to older versions of the GNU
> Fortran compiler, where the type of the hidden character length
> argument was a C int. In order to retain compatibility with older
> versions, one can e.g. for the following Fortran procedure
>
> subroutine fstrlen (s, a)
>    character(len=*) :: s
>    integer :: a
>    print*, len(s)
> end subroutine fstrlen
>
> define the corresponding C prototype as follows:
>
> #if __GNUC__ > 7
> typedef size_t fortran_charlen_t;
> #else
> typedef int fortran_charlen_t;
> #endif
>
> void fstrlen_ (char*, int*, fortran_charlen_t);
>
> In order to avoid such compiler-specific details, for new code it is
> instead recommended to use the ISO_C_BINDING feature.
>
> Note with C binding, CHARACTER(len=1) result variables are returned
> according to the platform ABI and no hidden length argument is used
> for dummy arguments; with VALUE, those variables are passed by value.
> </quote>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
> <lafaye at unsw.edu.au> wrote:
> >
> > Dear Ivan,
> >
> > Thank you very much for your response.
> >
> > I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
> >
> > My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
> >
> > Thank you in advance for any other advice.
> >
> > Best regards,
> > Pierre
> > ________________________________
> > From: Ivan Krylov <krylov.r00t at gmail.com>
> > Sent: Tuesday, 7 July 2020 06:11
> > To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> > Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> > Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
> >
> > On Fri, 3 Jul 2020 00:15:27 +0000
> > Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
> >
> > >Found the following significant warnings:
> > >    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> > > original declaration [-Wlto-type-mismatch]
> >
> > I managed to reproduce the warning on R-devel r78607 built with
> > --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
> >
> > myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
> >            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
> >                 ^
> > zhpevx.f:232:7: note: type mismatch in parameter 20
> >        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
> >        ^
> > zhpevx.f:232:7: note: type ?int? should match type ?size_t?
> > /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
> >  typedef __SIZE_TYPE__ size_t;
> >                        ^
> > zhpevx.f:232:7: note: ?zhpevx? was previously declared here
> >        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
> >        ^
> >
> > Do you have access to the notes produced by the compiler in addition
> > to the warnings? Do they spell the same difference?
> >
> > If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
> > while gfortran < 8 uses int instead of size_t for hidden size arguments,
> > it doesn't make a practical difference.
> >
> > --
> > Best regards,
> > Ivan
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |@|@ye @end|ng |rom un@w@edu@@u  Tue Jul  7 05:00:23 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Tue, 7 Jul 2020 03:00:23 +0000
Subject: [R-pkg-devel] 
 =?windows-1252?q?warning=3A_type_of_=91zhpevx=5F?=
 =?windows-1252?q?=92_does_not_match_original_declaration_=5B-Wlto-type-mi?=
 =?windows-1252?q?smatch=5D?=
In-Reply-To: <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
Message-ID: <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>

My file myzhpevx.cpp starts with:

<quote>
#define USE_FC_LEN_T
#include <R.h>
#include "Rmath.h"

#ifdef FC_LEN_T
extern "C" {

  void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
     double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
     double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
     int *iwork, int *ifail, int *info) {

          void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
</quote>

So if I understand correctly what you are saying, you suggest that FC_LEN_T was not correctly defined by the CRAN team?

Should I just write something like (adding the middle instruction below to my existing code above)?:

<quote>
#ifdef FC_LEN_T
typedef long long int FC_LEN_T;
extern "C" {
</quote>

Thank you
Pierre
________________________________
From: William Dunlap <wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 11:46
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
-flto flag I get the sort of error messages that you report.

c:\tmp\fortran>cat main.c
#include <string.h>
#include <stdio.h>

#ifdef USE_INT
typedef int FC_LEN_T;
#endif
#ifdef USE_LONG
typedef long int FC_LEN_T;
#endif
#ifdef USE_LONG_LONG
typedef long long int FC_LEN_T;
#endif

extern void sub_(char* word, double *ret, FC_LEN_T word_len);

int main(int argc, char* argv[])
{
    if (argc == 2) {
        double ret = 3. ;
        FC_LEN_T word_len = strlen(argv[1]);
        sub_(argv[1], &ret, word_len);
        printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
        return 0;
    } else {
        return -1;
    }
}

c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
<no warnings or notes>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au> wrote:
>
> Hello Bill,
>
> Thank you for your insight.
>
> First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:
>
> <quote>
> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
> </quote>
>
> What I did is the following:
>
> <quote>
> void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>       const int *n, Rcomplex *ap, const double *vl,
>       const double *vu, const int *il, const int *iu,
>       const double *abstol, int *m, double *w,
>       Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>       int *iwork, int *ifail, int *info,
>       FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
>
>  char cjobz[2];
>  strncpy(cjobz, jobz[0], 1);
>  cjobz[1] = '\0';
>  char crange[2];
>  strncpy(crange, range[0], 1);
>  crange[1] = '\0';
>  char cuplo[2];
>  strncpy(cuplo, uplo[0], 1);
>  cuplo[1] = '\0';
>
>  F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
>   w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
> </quote>
>
> Do you see anything wrong with the above?
>
> Thank you
>
> Best
> Pierre
>
> ________________________________
> From: William Dunlap <wdunlap at tibco.com>
> Sent: Tuesday, 7 July 2020 08:36
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> Have you tried what is recommended in
> https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
> ?
>
> <quote>
> For arguments of CHARACTER type, the character length is passed as a
> hidden argument at the end of the argument list. For deferred-length
> strings, the value is passed by reference, otherwise by value. The
> character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
> Fortran). Note that this is different to older versions of the GNU
> Fortran compiler, where the type of the hidden character length
> argument was a C int. In order to retain compatibility with older
> versions, one can e.g. for the following Fortran procedure
>
> subroutine fstrlen (s, a)
>    character(len=*) :: s
>    integer :: a
>    print*, len(s)
> end subroutine fstrlen
>
> define the corresponding C prototype as follows:
>
> #if __GNUC__ > 7
> typedef size_t fortran_charlen_t;
> #else
> typedef int fortran_charlen_t;
> #endif
>
> void fstrlen_ (char*, int*, fortran_charlen_t);
>
> In order to avoid such compiler-specific details, for new code it is
> instead recommended to use the ISO_C_BINDING feature.
>
> Note with C binding, CHARACTER(len=1) result variables are returned
> according to the platform ABI and no hidden length argument is used
> for dummy arguments; with VALUE, those variables are passed by value.
> </quote>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
> <lafaye at unsw.edu.au> wrote:
> >
> > Dear Ivan,
> >
> > Thank you very much for your response.
> >
> > I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
> >
> > My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
> >
> > Thank you in advance for any other advice.
> >
> > Best regards,
> > Pierre
> > ________________________________
> > From: Ivan Krylov <krylov.r00t at gmail.com>
> > Sent: Tuesday, 7 July 2020 06:11
> > To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> > Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> > Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
> >
> > On Fri, 3 Jul 2020 00:15:27 +0000
> > Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
> >
> > >Found the following significant warnings:
> > >    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> > > original declaration [-Wlto-type-mismatch]
> >
> > I managed to reproduce the warning on R-devel r78607 built with
> > --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
> >
> > myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
> >            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
> >                 ^
> > zhpevx.f:232:7: note: type mismatch in parameter 20
> >        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
> >        ^
> > zhpevx.f:232:7: note: type ?int? should match type ?size_t?
> > /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
> >  typedef __SIZE_TYPE__ size_t;
> >                        ^
> > zhpevx.f:232:7: note: ?zhpevx? was previously declared here
> >        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
> >        ^
> >
> > Do you have access to the notes produced by the compiler in addition
> > to the warnings? Do they spell the same difference?
> >
> > If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
> > while gfortran < 8 uses int instead of size_t for hidden size arguments,
> > it doesn't make a practical difference.
> >
> > --
> > Best regards,
> > Ivan
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue Jul  7 07:43:19 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 7 Jul 2020 07:43:19 +0200
Subject: [R-pkg-devel] 
 =?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
 =?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-mismatch=5D?=
In-Reply-To: <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>

My recommendation would be to try to minimize the example (package) as 
much as possible so that it still has the problem, and then try to 
investigate why exactly/where is the type mismatch. This is what helped 
me debug similar issues - sometimes it was hard to tell from the Fortran 
warnings where exactly the mismatched declarations were and why they 
were mismatched.

This process of minimization can already reveal the true source of the 
problem, and if not, others may try to debug for you using the minimal 
example. A useful tool is the Fortran option -fc-prototypes-external 
(see WRE for more details) and I've also used dumps of the compiler tree 
before (-fdump-tree-all, more in GCC documentation).

Best
Tomas

On 7/7/20 5:00 AM, Pierre Lafaye de Micheaux wrote:
> My file myzhpevx.cpp starts with:
>
> <quote>
> #define USE_FC_LEN_T
> #include <R.h>
> #include "Rmath.h"
>
> #ifdef FC_LEN_T
> extern "C" {
>
>    void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
>       double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
>       double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
>       int *iwork, int *ifail, int *info) {
>
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>        const int *n, Rcomplex *ap, const double *vl,
>        const double *vu, const int *il, const int *iu,
>        const double *abstol, int *m, double *w,
>        Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>        int *iwork, int *ifail, int *info,
>        FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
> </quote>
>
> So if I understand correctly what you are saying, you suggest that FC_LEN_T was not correctly defined by the CRAN team?
>
> Should I just write something like (adding the middle instruction below to my existing code above)?:
>
> <quote>
> #ifdef FC_LEN_T
> typedef long long int FC_LEN_T;
> extern "C" {
> </quote>
>
> Thank you
> Pierre
> ________________________________
> From: William Dunlap <wdunlap at tibco.com>
> Sent: Tuesday, 7 July 2020 11:46
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
> rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
> -flto flag I get the sort of error messages that you report.
>
> c:\tmp\fortran>cat main.c
> #include <string.h>
> #include <stdio.h>
>
> #ifdef USE_INT
> typedef int FC_LEN_T;
> #endif
> #ifdef USE_LONG
> typedef long int FC_LEN_T;
> #endif
> #ifdef USE_LONG_LONG
> typedef long long int FC_LEN_T;
> #endif
>
> extern void sub_(char* word, double *ret, FC_LEN_T word_len);
>
> int main(int argc, char* argv[])
> {
>      if (argc == 2) {
>          double ret = 3. ;
>          FC_LEN_T word_len = strlen(argv[1]);
>          sub_(argv[1], &ret, word_len);
>          printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
>          return 0;
>      } else {
>          return -1;
>      }
> }
>
> c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
> main.c:14:13: warning: type of 'sub_' does not match original
> declaration [-Wlto-type-mismatch]
>   extern void sub_(char* word, double *ret, FC_LEN_T word_len);
>               ^
> sub.f:1:1: note: type mismatch in parameter 3
>         subroutine sub(word, ret)
>   ^
> sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
> sub.f:1:1: note: 'sub' was previously declared here
> sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used
>
> c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
> main.c:14:13: warning: type of 'sub_' does not match original
> declaration [-Wlto-type-mismatch]
>   extern void sub_(char* word, double *ret, FC_LEN_T word_len);
>               ^
> sub.f:1:1: note: type mismatch in parameter 3
>         subroutine sub(word, ret)
>   ^
> sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
> sub.f:1:1: note: 'sub' was previously declared here
> sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used
>
> c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
> <no warnings or notes>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
> <lafaye at unsw.edu.au> wrote:
>> Hello Bill,
>>
>> Thank you for your insight.
>>
>> First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:
>>
>> <quote>
>> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>             void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>> </quote>
>>
>> What I did is the following:
>>
>> <quote>
>> void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>>        const int *n, Rcomplex *ap, const double *vl,
>>        const double *vu, const int *il, const int *iu,
>>        const double *abstol, int *m, double *w,
>>        Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>>        int *iwork, int *ifail, int *info,
>>        FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
>>
>>   char cjobz[2];
>>   strncpy(cjobz, jobz[0], 1);
>>   cjobz[1] = '\0';
>>   char crange[2];
>>   strncpy(crange, range[0], 1);
>>   crange[1] = '\0';
>>   char cuplo[2];
>>   strncpy(cuplo, uplo[0], 1);
>>   cuplo[1] = '\0';
>>
>>   F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
>>    w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
>> </quote>
>>
>> Do you see anything wrong with the above?
>>
>> Thank you
>>
>> Best
>> Pierre
>>
>> ________________________________
>> From: William Dunlap <wdunlap at tibco.com>
>> Sent: Tuesday, 7 July 2020 08:36
>> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
>> Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>
>> Have you tried what is recommended in
>> https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
>> ?
>>
>> <quote>
>> For arguments of CHARACTER type, the character length is passed as a
>> hidden argument at the end of the argument list. For deferred-length
>> strings, the value is passed by reference, otherwise by value. The
>> character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
>> Fortran). Note that this is different to older versions of the GNU
>> Fortran compiler, where the type of the hidden character length
>> argument was a C int. In order to retain compatibility with older
>> versions, one can e.g. for the following Fortran procedure
>>
>> subroutine fstrlen (s, a)
>>     character(len=*) :: s
>>     integer :: a
>>     print*, len(s)
>> end subroutine fstrlen
>>
>> define the corresponding C prototype as follows:
>>
>> #if __GNUC__ > 7
>> typedef size_t fortran_charlen_t;
>> #else
>> typedef int fortran_charlen_t;
>> #endif
>>
>> void fstrlen_ (char*, int*, fortran_charlen_t);
>>
>> In order to avoid such compiler-specific details, for new code it is
>> instead recommended to use the ISO_C_BINDING feature.
>>
>> Note with C binding, CHARACTER(len=1) result variables are returned
>> according to the platform ABI and no hidden length argument is used
>> for dummy arguments; with VALUE, those variables are passed by value.
>> </quote>
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>>
>> On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
>> <lafaye at unsw.edu.au> wrote:
>>> Dear Ivan,
>>>
>>> Thank you very much for your response.
>>>
>>> I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
>>>
>>> My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
>>>
>>> Thank you in advance for any other advice.
>>>
>>> Best regards,
>>> Pierre
>>> ________________________________
>>> From: Ivan Krylov <krylov.r00t at gmail.com>
>>> Sent: Tuesday, 7 July 2020 06:11
>>> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
>>> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>>
>>> On Fri, 3 Jul 2020 00:15:27 +0000
>>> Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
>>>
>>>> Found the following significant warnings:
>>>>     myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
>>>> original declaration [-Wlto-type-mismatch]
>>> I managed to reproduce the warning on R-devel r78607 built with
>>> --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
>>>
>>> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>>             void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>>>                  ^
>>> zhpevx.f:232:7: note: type mismatch in parameter 20
>>>         SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>>>         ^
>>> zhpevx.f:232:7: note: type ?int? should match type ?size_t?
>>> /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
>>>   typedef __SIZE_TYPE__ size_t;
>>>                         ^
>>> zhpevx.f:232:7: note: ?zhpevx? was previously declared here
>>>         SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>>>         ^
>>>
>>> Do you have access to the notes produced by the compiler in addition
>>> to the warnings? Do they spell the same difference?
>>>
>>> If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
>>> while gfortran < 8 uses int instead of size_t for hidden size arguments,
>>> it doesn't make a practical difference.
>>>
>>> --
>>> Best regards,
>>> Ivan
>>>
>>>          [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 	[[alternative HTML version deleted]]
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul  7 15:44:09 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 7 Jul 2020 16:44:09 +0300
Subject: [R-pkg-devel] 
 =?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
 =?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-mismatch=5D?=
In-Reply-To: <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <20200707164409.56336125@trisector>

On Tue, 7 Jul 2020 03:00:23 +0000
Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:

>Should I just write something like (adding the middle instruction
>below to my existing code above)?:
>
>#ifdef FC_LEN_T
>typedef long long int FC_LEN_T;

No, I don't think that would help.

What _might_ help is adapting the incantation from [*] to redefine
FC_LEN_T to int on older GCC:

#if defined(__GNUC__) && __GNUC__ < 7
 /* Rconfig.h #define doesn't match the actual type
  * of hidden length argument in old gfortran */
 #define FC_LEN_T int
#else
 /* Otherwise we use the #define from Rconfig.h */
 #define USE_FC_LEN_T
#endif
/* Your code starts here */
#include <R.h>
/* ... */

Another option that _should_ help is rewriting zhpevxC in Fortran
2003 using its bind(c) feature. The C interoperability would ensure that
the resulting function is callable from C, while the fact that it's
written in Fortran should make it safe to call other Fortran functions:

subroutine zhpevxC(jobz, range, uplo, n, ap, vl, vu, il, iu, &
                   abstol, m, w, z, ldz, work, rwork, iwork, &
                   ifail, info) bind(c, name='zhpevxC')
 use, intrinsic :: iso_c_binding, only: c_char, c_int, c_double, &
                                        c_double_complex

 character(kind = c_char) :: jobz, range, uplo
 integer(kind = c_int) :: il, info, iu, ldz, m, n
 real(kind = c_double) :: abstol, vl, vu
 integer(kind = c_int) :: ifail( * ), iwork( * )
 real(kind = c_double) :: rwork( * ), w( * )
 complex(kind = c_double_complex) :: ap( * ), work( * ), z( ldz, * )

 call zhpevx(JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU, &
             abstol, m, w, z, ldz, work, rwork, iwork, &
             ifail, info)

end subroutine

A subroutine defined like this can be represented by the following C++
prototype: 

extern "C" void zhpevx(
	char * JOBZ, char * RANGE, char * UPLO, int * N,
	std::complex<double> * AP, double * VL, double * VU, int * IL,
	int * IU, double * abstol, int * m, double * w,
	std::complex<double> * z, int * ldz, std::complex<double> *
	work, double * rwork, int * iwork, int * ifail, int * info
);

This is the approach described in WRE 6.6.1 Fortran character strings
near the code block with the definition of subroutine c_dgemm.

-- 
Best regards,
Ivan

[*]
https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html


From g|t@demont @end|ng |rom gm@||@com  Tue Jul  7 19:30:08 2020
From: g|t@demont @end|ng |rom gm@||@com (git demont)
Date: Tue, 7 Jul 2020 19:30:08 +0200
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
Message-ID: <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>

Hi all,

Sorry for asking again, but I got absolutely no advice on how to
correctly refer to extra copyrights and authors files in package
DESCRIPTION.
I know this can be considered as impolite and I don't want to do so.
So, I waited one week until sending the present message and I promise I
will not send another to ask for the same thing after this one.

Best,
Yohann




On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:

> Hi all,
>
> I am developing a package called 'IFC'.
> https://github.com/gitdemont/IFC/
> <https://github.com/gitdemont/IFC/tree/v0.0.7>
>
> Last submission (v0.0.7) was almost the final one to get it CRAN
> https://github.com/gitdemont/IFC/tree/v0.0.7
> It was manually checked and it should be accepted if I removed a dontrun
> (that I unfortunately forgot).
>
> For the next submission ( I hope it will be the good one ), in addition to
> fixing the dontrun, I would like to include a small modification that was
> not asked. I would like to avoid another round of submission/review by
> introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
> inviting users to refer to files for copyrights and authorship. "See file
> inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders and
> authors"
>
> However, I am not sure whether I should say 'inst/COPYRIGHTS' and
> 'inst/AUTHORS' because these files are in the 'inst/' directory of the
> built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
> (without inst/) because once installed these files will be at the root of
> IFC library directory.
> The same question olds for "Copyright: file inst/COPYRIGHTS".
>
> In CRAN policies, one can read:
> "Where copyrights are held by an entity other than the package authors,
> this should preferably be indicated via ?cph? roles in the ?Authors at R?
> field, or using a ?Copyright? field (if necessary referring to an
> inst/COPYRIGHTS file)."
> In 'RcppMsgPack' for instance we have:
> - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a full
> list of copyright holders and contributors to 'msgpack-c'."
> - in the copyrights: "inst/COPYRIGHTS".
>
> Best,
> Yohann
>

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Tue Jul  7 19:51:12 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 7 Jul 2020 18:51:12 +0100
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
 <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
Message-ID: <CABtg=KkaCq48PFFM-xSyyAw_+YysQKdmLJDH93irL92+WZeqzA@mail.gmail.com>

HI,

here is an example from a package that was accepted relatively recently:
https://github.com/r-lib/presser/blob/master/DESCRIPTION#L8-L11

Gabor

On Tue, Jul 7, 2020 at 6:30 PM git demont <git.demont at gmail.com> wrote:
>
> Hi all,
>
> Sorry for asking again, but I got absolutely no advice on how to
> correctly refer to extra copyrights and authors files in package
> DESCRIPTION.
> I know this can be considered as impolite and I don't want to do so.
> So, I waited one week until sending the present message and I promise I
> will not send another to ask for the same thing after this one.
>
> Best,
> Yohann
>
>
>
>
> On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:
>
> > Hi all,
> >
> > I am developing a package called 'IFC'.
> > https://github.com/gitdemont/IFC/
> > <https://github.com/gitdemont/IFC/tree/v0.0.7>
> >
> > Last submission (v0.0.7) was almost the final one to get it CRAN
> > https://github.com/gitdemont/IFC/tree/v0.0.7
> > It was manually checked and it should be accepted if I removed a dontrun
> > (that I unfortunately forgot).
> >
> > For the next submission ( I hope it will be the good one ), in addition to
> > fixing the dontrun, I would like to include a small modification that was
> > not asked. I would like to avoid another round of submission/review by
> > introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
> > inviting users to refer to files for copyrights and authorship. "See file
> > inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders and
> > authors"
> >
> > However, I am not sure whether I should say 'inst/COPYRIGHTS' and
> > 'inst/AUTHORS' because these files are in the 'inst/' directory of the
> > built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
> > (without inst/) because once installed these files will be at the root of
> > IFC library directory.
> > The same question olds for "Copyright: file inst/COPYRIGHTS".
> >
> > In CRAN policies, one can read:
> > "Where copyrights are held by an entity other than the package authors,
> > this should preferably be indicated via ?cph? roles in the ?Authors at R?
> > field, or using a ?Copyright? field (if necessary referring to an
> > inst/COPYRIGHTS file)."
> > In 'RcppMsgPack' for instance we have:
> > - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a full
> > list of copyright holders and contributors to 'msgpack-c'."
> > - in the copyrights: "inst/COPYRIGHTS".
> >
> > Best,
> > Yohann
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r|||ght79 @end|ng |rom gm@||@com  Tue Jul  7 19:55:26 2020
From: r|||ght79 @end|ng |rom gm@||@com (Robert M. Flight)
Date: Tue, 7 Jul 2020 13:55:26 -0400
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CABtg=KkaCq48PFFM-xSyyAw_+YysQKdmLJDH93irL92+WZeqzA@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
 <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
 <CABtg=KkaCq48PFFM-xSyyAw_+YysQKdmLJDH93irL92+WZeqzA@mail.gmail.com>
Message-ID: <CAJLyBTU8HAA-t26gp2PWZQ1ObUiUP_pDU8JECOY09p43OReqcA@mail.gmail.com>

Yohann,

Here is a description of the strategy I used a couple of years ago.

https://rmflight.github.io/post/licensing-r-packages-that-include-others-code/

-Robert

On Tue, Jul 7, 2020 at 1:52 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> HI,
>
> here is an example from a package that was accepted relatively recently:
> https://github.com/r-lib/presser/blob/master/DESCRIPTION#L8-L11
>
> Gabor
>
> On Tue, Jul 7, 2020 at 6:30 PM git demont <git.demont at gmail.com> wrote:
> >
> > Hi all,
> >
> > Sorry for asking again, but I got absolutely no advice on how to
> > correctly refer to extra copyrights and authors files in package
> > DESCRIPTION.
> > I know this can be considered as impolite and I don't want to do so.
> > So, I waited one week until sending the present message and I promise I
> > will not send another to ask for the same thing after this one.
> >
> > Best,
> > Yohann
> >
> >
> >
> >
> > On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:
> >
> > > Hi all,
> > >
> > > I am developing a package called 'IFC'.
> > > https://github.com/gitdemont/IFC/
> > > <https://github.com/gitdemont/IFC/tree/v0.0.7>
> > >
> > > Last submission (v0.0.7) was almost the final one to get it CRAN
> > > https://github.com/gitdemont/IFC/tree/v0.0.7
> > > It was manually checked and it should be accepted if I removed a
> dontrun
> > > (that I unfortunately forgot).
> > >
> > > For the next submission ( I hope it will be the good one ), in
> addition to
> > > fixing the dontrun, I would like to include a small modification that
> was
> > > not asked. I would like to avoid another round of submission/review by
> > > introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
> > > inviting users to refer to files for copyrights and authorship. "See
> file
> > > inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders
> and
> > > authors"
> > >
> > > However, I am not sure whether I should say 'inst/COPYRIGHTS' and
> > > 'inst/AUTHORS' because these files are in the 'inst/' directory of the
> > > built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
> > > (without inst/) because once installed these files will be at the root
> of
> > > IFC library directory.
> > > The same question olds for "Copyright: file inst/COPYRIGHTS".
> > >
> > > In CRAN policies, one can read:
> > > "Where copyrights are held by an entity other than the package authors,
> > > this should preferably be indicated via ?cph? roles in the ?Authors at R?
> > > field, or using a ?Copyright? field (if necessary referring to an
> > > inst/COPYRIGHTS file)."
> > > In 'RcppMsgPack' for instance we have:
> > > - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a
> full
> > > list of copyright holders and contributors to 'msgpack-c'."
> > > - in the copyrights: "inst/COPYRIGHTS".
> > >
> > > Best,
> > > Yohann
> > >
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From d|cko@@hm@dou @end|ng |rom gm@||@com  Tue Jul  7 19:56:44 2020
From: d|cko@@hm@dou @end|ng |rom gm@||@com (Ahmadou Dicko)
Date: Tue, 7 Jul 2020 17:56:44 +0000
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
 <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
Message-ID: <CAP8THHUvHiVS1iMTo9-P9hnOFZZ-GDJpY8s2kCVXqoH2t=CUVg@mail.gmail.com>

Hi Yohann,

I had a similar situation with my first package.
I used Author + Maintainer field instead Authors at R and I added the
inst/AUTHORS to Author and my email to the Maintainer field.
In the list of author names (and I have a lot of them in cgal4h), make sure
that you also define the different roles (i.e ctb, cph, etc).
You can access the metadata here and the Gitlab repository there

https://CRAN.R-project.org/package=cgal4h

Hope it helps.

Ahmadou



On Tue, Jul 7, 2020 at 5:30 PM git demont <git.demont at gmail.com> wrote:

> Hi all,
>
> Sorry for asking again, but I got absolutely no advice on how to
> correctly refer to extra copyrights and authors files in package
> DESCRIPTION.
> I know this can be considered as impolite and I don't want to do so.
> So, I waited one week until sending the present message and I promise I
> will not send another to ask for the same thing after this one.
>
> Best,
> Yohann
>
>
>
>
> On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:
>
> > Hi all,
> >
> > I am developing a package called 'IFC'.
> > https://github.com/gitdemont/IFC/
> > <https://github.com/gitdemont/IFC/tree/v0.0.7>
> >
> > Last submission (v0.0.7) was almost the final one to get it CRAN
> > https://github.com/gitdemont/IFC/tree/v0.0.7
> > It was manually checked and it should be accepted if I removed a dontrun
> > (that I unfortunately forgot).
> >
> > For the next submission ( I hope it will be the good one ), in addition
> to
> > fixing the dontrun, I would like to include a small modification that was
> > not asked. I would like to avoid another round of submission/review by
> > introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
> > inviting users to refer to files for copyrights and authorship. "See file
> > inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders and
> > authors"
> >
> > However, I am not sure whether I should say 'inst/COPYRIGHTS' and
> > 'inst/AUTHORS' because these files are in the 'inst/' directory of the
> > built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
> > (without inst/) because once installed these files will be at the root of
> > IFC library directory.
> > The same question olds for "Copyright: file inst/COPYRIGHTS".
> >
> > In CRAN policies, one can read:
> > "Where copyrights are held by an entity other than the package authors,
> > this should preferably be indicated via ?cph? roles in the ?Authors at R?
> > field, or using a ?Copyright? field (if necessary referring to an
> > inst/COPYRIGHTS file)."
> > In 'RcppMsgPack' for instance we have:
> > - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a
> full
> > list of copyright holders and contributors to 'msgpack-c'."
> > - in the copyrights: "inst/COPYRIGHTS".
> >
> > Best,
> > Yohann
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Ahmadou H. DICKO, PhD

Statistical consultant
Mobile: (+221) 77 123 81 69
Skype: dicko.ahmadou.h
Twitter : @dickoah
Gitlab: gitlab/dickoa
Github: github/dickoa

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed Jul  8 03:11:00 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 7 Jul 2020 18:11:00 -0700
Subject: [R-pkg-devel] How do you Rd reference parallel::mclapply() so it
 works also on Windows?
Message-ID: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>

Here's another "Non-file package-anchored link(s) ..." issue.  I'd
like to reference parallel::mclapply() in my help pages.  With the new
R-devel requirements, you have to link to the file and not the topic.
However, there is no cross-platform stable file reference for
parallel::mclapply();

# According to R on Linux
> basename(help("mclapply", package="parallel"))
[1] "mclapply"

# According to R on Windows
> basename(help("mclapply", package="parallel"))
[1] "mcdummies"

How can I provide a \link{} reference to the help("mclapply",
package="parallel") documentation?

Thanks,

Henrik


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jul  8 07:18:53 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 8 Jul 2020 07:18:53 +0200
Subject: [R-pkg-devel] 
 How do you Rd reference parallel::mclapply() so it
 works also on Windows?
In-Reply-To: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
References: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
Message-ID: <ac9ce809-eebb-1591-dab9-a05daebaeaed@statistik.tu-dortmund.de>

Not nice, but you may follow the way described in subsection 
"Platform-specific documentation" in WRE.

Best,
Uwe


On 08.07.2020 03:11, Henrik Bengtsson wrote:
> Here's another "Non-file package-anchored link(s) ..." issue.  I'd
> like to reference parallel::mclapply() in my help pages.  With the new
> R-devel requirements, you have to link to the file and not the topic.
> However, there is no cross-platform stable file reference for
> parallel::mclapply();
> 
> # According to R on Linux
>> basename(help("mclapply", package="parallel"))
> [1] "mclapply"
> 
> # According to R on Windows
>> basename(help("mclapply", package="parallel"))
> [1] "mcdummies"
> 
> How can I provide a \link{} reference to the help("mclapply",
> package="parallel") documentation?
> 
> Thanks,
> 
> Henrik
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Jul  8 09:11:33 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 8 Jul 2020 09:11:33 +0200
Subject: [R-pkg-devel] 
 How do you Rd reference parallel::mclapply() so it
 works also on Windows?
In-Reply-To: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
References: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
Message-ID: <24325.29093.732066.164810@stat.math.ethz.ch>

>>>>> Henrik Bengtsson 
>>>>>     on Tue, 7 Jul 2020 18:11:00 -0700 writes:

    > Here's another "Non-file package-anchored link(s) ..."
    > issue.  I'd like to reference parallel::mclapply() in my
    > help pages.  With the new R-devel requirements, you have
    > to link to the file and not the topic.  However, there is
    > no cross-platform stable file reference for
    > parallel::mclapply();

    > # According to R on Linux
    >> basename(help("mclapply", package="parallel"))
    > [1] "mclapply"

    > # According to R on Windows
    >> basename(help("mclapply", package="parallel"))
    > [1] "mcdummies"

Indeed, another example, why we should move away from the
'file' instead of 'topic' (<-> \alias{.}) paradigm and requirement.

I'm optimistic we will do that soonish ...

Apropos: Today starts the virtual [useR! 2020] conference with
	 an R-core Keynote and an R-core Panel for asking
	 questions :

  https://user2020.r-project.org/program/agenda/ 

  https://twitter.com/useR2020stl/status/1280655009714233346?s=20

Martin


    > How can I provide a \link{} reference to the
    > help("mclapply", package="parallel") documentation?

    > Thanks,
    > Henrik


From g|t@demont @end|ng |rom gm@||@com  Wed Jul  8 10:15:50 2020
From: g|t@demont @end|ng |rom gm@||@com (git demont)
Date: Wed, 8 Jul 2020 10:15:50 +0200
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CAP8THHUvHiVS1iMTo9-P9hnOFZZ-GDJpY8s2kCVXqoH2t=CUVg@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
 <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
 <CAP8THHUvHiVS1iMTo9-P9hnOFZZ-GDJpY8s2kCVXqoH2t=CUVg@mail.gmail.com>
Message-ID: <CAGf8eshrE500Z3y79SXw1pG-XOupSZTb0UzsaeWPC5n+McY6XQ@mail.gmail.com>

Thank you Ahmadou, Robert and G?bor,

In package 'presser'  G?bor used no dedicated AUTHORS file but use
'comment' and 'role' tag of Authors at R to mention their contribution and
refer to further comments in file (e.g.  inst/credits/redoc.md, src/md5.h)

Robert, also described a strategy using Authors at R

Ahmadou, used something similar to what I have done in the 'IFC' package I
want to submit on CRAN, with extra AUTHORS and COPYRIGHTS files found in
inst/ directory of its 'cgal4h' package. Then, he used "Author: file
inst/AUTHORS" and "Copyright: file inst/COPYRIGHTS" in DESCRIPTION file to
refer to these files.

In 'RcppMsgPack' package, I was using as an example in my 1st message,
extra AUTHORS and COPYRIGHTS files found in 'inst/' directory were also
used.
DESCRIPTION file contains:
- Author: Travers Ching and Dirk Eddelbuettel; the authors and contributors
of MsgPack
- Copyright: file inst/COPYRIGHTS

So, as far as I understand from your replies, there seems to be no general
rule on how to do it.
But it seems that when Author: or Copyright: is used in DESCRIPTION and
refer to a file then 'inst/' directory should be prepend to the file name
(e.g.  Copyright: file inst/COPYRIGHTS)

In next submission I will use in DESCRIPTION:
Authors at R and have a 'inst/AUTHORS' file
Copyright: file inst/COPYRIGHTS  and have a 'inst/COPYRIGHTS' file
Description: <the description of my 'IFC' package> + See file 'COPYRIGHTS'
and file 'AUTHORS' for a list of copyright holders and authors

Thanks a lot for your help,
Yohann

On Tue, Jul 7, 2020 at 7:56 PM Ahmadou Dicko <dicko.ahmadou at gmail.com>
wrote:

> Hi Yohann,
>
> I had a similar situation with my first package.
> I used Author + Maintainer field instead Authors at R and I added the
> inst/AUTHORS to Author and my email to the Maintainer field.
> In the list of author names (and I have a lot of them in cgal4h), make
> sure that you also define the different roles (i.e ctb, cph, etc).
> You can access the metadata here and the Gitlab repository there
>
> https://CRAN.R-project.org/package=cgal4h
>
> Hope it helps.
>
> Ahmadou
>
>
>
> On Tue, Jul 7, 2020 at 5:30 PM git demont <git.demont at gmail.com> wrote:
>
>> Hi all,
>>
>> Sorry for asking again, but I got absolutely no advice on how to
>> correctly refer to extra copyrights and authors files in package
>> DESCRIPTION.
>> I know this can be considered as impolite and I don't want to do so.
>> So, I waited one week until sending the present message and I promise I
>> will not send another to ask for the same thing after this one.
>>
>> Best,
>> Yohann
>>
>>
>>
>>
>> On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:
>>
>> > Hi all,
>> >
>> > I am developing a package called 'IFC'.
>> > https://github.com/gitdemont/IFC/
>> > <https://github.com/gitdemont/IFC/tree/v0.0.7>
>> >
>> > Last submission (v0.0.7) was almost the final one to get it CRAN
>> > https://github.com/gitdemont/IFC/tree/v0.0.7
>> > It was manually checked and it should be accepted if I removed a dontrun
>> > (that I unfortunately forgot).
>> >
>> > For the next submission ( I hope it will be the good one ), in addition
>> to
>> > fixing the dontrun, I would like to include a small modification that
>> was
>> > not asked. I would like to avoid another round of submission/review by
>> > introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
>> > inviting users to refer to files for copyrights and authorship. "See
>> file
>> > inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders
>> and
>> > authors"
>> >
>> > However, I am not sure whether I should say 'inst/COPYRIGHTS' and
>> > 'inst/AUTHORS' because these files are in the 'inst/' directory of the
>> > built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
>> > (without inst/) because once installed these files will be at the root
>> of
>> > IFC library directory.
>> > The same question olds for "Copyright: file inst/COPYRIGHTS".
>> >
>> > In CRAN policies, one can read:
>> > "Where copyrights are held by an entity other than the package authors,
>> > this should preferably be indicated via ?cph? roles in the ?Authors at R?
>> > field, or using a ?Copyright? field (if necessary referring to an
>> > inst/COPYRIGHTS file)."
>> > In 'RcppMsgPack' for instance we have:
>> > - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a
>> full
>> > list of copyright holders and contributors to 'msgpack-c'."
>> > - in the copyrights: "inst/COPYRIGHTS".
>> >
>> > Best,
>> > Yohann
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>
> --
> Ahmadou H. DICKO, PhD
>
> Statistical consultant
> Mobile: (+221) 77 123 81 69
> Skype: dicko.ahmadou.h
> Twitter : @dickoah
> Gitlab: gitlab/dickoa
> Github: github/dickoa
>

	[[alternative HTML version deleted]]


From |@b@rto@96 @end|ng |rom gm@||@com  Wed Jul  8 11:06:31 2020
From: |@b@rto@96 @end|ng |rom gm@||@com (Frantisek Bartos)
Date: Wed, 8 Jul 2020 11:06:31 +0200
Subject: [R-pkg-devel] package installation and linking with JAGS
Message-ID: <CAK+wxiOXjMAd3CVfJMrT9Mh25EfrS7GbJfvhoJswa-xWZAWj6A@mail.gmail.com>

Hello,

we have written an R package that uses JAGS and requires a JAGS module
that's distributed with the package. We had a lot of problems making
the installation work across platforms and we adapted the way it's done in
'runjags' (it also contains a JAGS module). However, we are having two
problems:

1) the CMD CHECK returns this warning
Check: for GNU extensions in Makefiles, Result: WARNING
  Found the following file(s) containing GNU extensions:
    src/Makevars
    src/Makevars.in
  Portable Makefiles do not use GNU extensions such as +=, :=, $(shell),
  $(wildcard), ifeq ... endif, .NOTPARALLEL See section 'Writing portable
  packages' in the 'Writing R Extensions' manual.

2) the package installation works only from the source. For example,
devtools::install_github() returns an error since .o files are generated
inside of the package folder. A similar problem occurs when generating the
source .tar.gz, however, manually deleting the .o files from it fixes
the problem and it can be used for installing the package.

I wanted to ask how should I proceed. Can I submit the package to cran with
this warning? We verified that the installation from source works on
Windows, macOS, and Linux.

Thank you very much,
Franti?ek Barto?


github link: https://github.com/FBartos/RoBMA

the makevars.win file:
#Set a default value for JAGS_ROOT in case the user hasn't set it, this
location was specified by the CRAN-team (according to runjags, where I
copied this from)
JAGS_ROOT ?= c:/progra~1/JAGS/JAGS-4.3.0

## Use the old ABI to match JAGS 4.x compilation on Windows:
PKG_CXXFLAGS = -D_GLIBCXX_USE_CXX11_ABI=0

PKG_CPPFLAGS=-I"$(JAGS_ROOT)/include"
PKG_LIBS=-L"$(JAGS_ROOT)/${R_ARCH}/bin" -ljags-4 -ljrmath-0

# Actual sources and objects for RoBMA
SOURCES= $(wildcard *.cc) $(wildcard */*.cc)
OBJECTS=$(SOURCES:.cc=.o)

the makevars.in file:
PKG_CPPFLAGS=@JAGS_CFLAGS@
PKG_LIBS=@JAGS_LIBS@ @JAGS_RPATH@

SOURCES= $(wildcard *.cc) $(wildcard */*.cc)
OBJECTS=$(SOURCES:.cc=.o)

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul  8 14:20:42 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 8 Jul 2020 15:20:42 +0300
Subject: [R-pkg-devel] package installation and linking with JAGS
In-Reply-To: <CAK+wxiOXjMAd3CVfJMrT9Mh25EfrS7GbJfvhoJswa-xWZAWj6A@mail.gmail.com>
References: <CAK+wxiOXjMAd3CVfJMrT9Mh25EfrS7GbJfvhoJswa-xWZAWj6A@mail.gmail.com>
Message-ID: <20200708152042.12719910@trisector>

On Wed, 8 Jul 2020 11:06:31 +0200
Frantisek Bartos <f.bartos96 at gmail.com> wrote:

>Check: for GNU extensions in Makefiles, Result: WARNING

This warning is easy to deal with:

>JAGS_ROOT ?= c:/progra~1/JAGS/JAGS-4.3.0

Use plain "=" macro definitions, since others aren't considered portable
enough.

>SOURCES= $(wildcard *.cc) $(wildcard */*.cc)

Replace $(wildcard ...) with hard-coded lists of files.

See the POSIX standard [*], or, indeed, section 'Writing portable
packages' in WRE [**] for a list of Make features considered portable.

Alternatively, add "GNU make" to SystemRequirements: in your
DESCRIPTION. This will silence the warnings, but require the GNU
flavour of Make to install your package.

>2) the package installation works only from the source. For example,
>devtools::install_github() returns an error since .o files are
>generated inside of the package folder. A similar problem occurs when
>generating the source .tar.gz, however, manually deleting the .o files
>from it fixes the problem and it can be used for installing the
>package.

How do you build the source package before installing it? I tried to
git clone your package, then R CMD build . it, and got a perfectly valid
RoBMA_0.0.0.9000.tar.gz without any *.o files inside. I *think* that R
CMD INSTALL <directory> may be not a good idea, but you can add .*\.o$
to .Rbuildignore to prevent the object files from getting inside your
source package this way.

>	[[alternative HTML version deleted]]

Also, please don't post in HTML.

-- 
Best regards,
Ivan

[*]
https://pubs.opengroup.org/onlinepubs/9699919799/utilities/make.html

[**]
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Writing-portable-packages


From d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com  Wed Jul  8 18:23:41 2020
From: d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com (David Cortes)
Date: Wed, 08 Jul 2020 19:23:41 +0300
Subject: [R-pkg-devel] Valgrind warning on saveRDS,
 about object in external pointer
Message-ID: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>

Hello,

I am currently getting a valgrind warning in a package that I?ve
developed, which occurs on a call to R?s ?saveRDS?, and I am having a
very hard time trying to figure out what went wrong:
https://www.stats.ox.ac.uk/pub/bdr/memtests/valgrind/isotree/isotree-Ex.Rout

In more detail:
- The package creates a C++ struct which it accesses through the
external pointer system (Rcpp::Xptr).
- The warning is about an un-initialized value allocated in a call to
C++ std::vector::reserve, which is called on a C++ vector member of the
struct in the external pointer.
- The warning occurs on a call to R?s ?saveRDS?.

I had the idea  that ?saveRDS? wouldn?t do anything about external
pointers in an S3 object, and thus I am wondering why exactly does the
warning occur in ?saveRDS?.

Other than the external pointer, the C++ object is also serialized into
an R raw vector using the Cereal library (which occurs in an earlier R
command, before the problematic ?saveRDS?), and this vector is part of
the objects that get serialized in the call to R?s ?saveRDS?, but as
far as I know, it should not possible to get such a warning about the
original object after those bytes were copied over and only the new
copied bytes are accessed.

Any help is appreciated.

Sincerely,
David Cortes


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul  8 19:59:33 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 8 Jul 2020 20:59:33 +0300
Subject: [R-pkg-devel] Valgrind warning on saveRDS,
 about object in external pointer
In-Reply-To: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>
References: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>
Message-ID: <20200708205933.35092340@trisector>

On Wed, 08 Jul 2020 19:23:41 +0300
David Cortes <david.cortes.rivera at gmail.com> wrote:

>- The warning is about an un-initialized value allocated in a call to
>C++ std::vector::reserve, which is called on a C++ vector member of the
>struct in the external pointer.

I'm ready to admit that I didn't read the code well enough, but it
seems to me that the vector resized on line 752 resides in
std::vector<WorkerMemory> worker_memory allocated on lines 411-415 in
int fit_iforest(...) and then disposed of by the end of the function. I
don't see workspace.ix_arr being saved anywhere model_outputs(_ext). I
think that workspace.ix_arr shouldn't even exist by the time the lines
following isolation.forest(...) are executed.

Can you reproduce the warning on your own computer? It might be helpful
to run R -d 'valgrind --vgdb-error=1 --vgdb-stop-at=startup', follow
Valgrind's instructions to attach the debugger to it, type "continue"
into gdb, then trigger the warning in R and use gdb to gather more
information when Valgrind stops the process around the memory access
it considers uninitialised.

-- 
Best regards,
Ivan


From d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com  Wed Jul  8 21:43:13 2020
From: d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com (David Cortes)
Date: Wed, 08 Jul 2020 22:43:13 +0300
Subject: [R-pkg-devel] Valgrind warning on saveRDS,
 about object in external pointer
In-Reply-To: <20200708205933.35092340@trisector>
References: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>
 <20200708205933.35092340@trisector>
Message-ID: <7f384bde935815ee153885a566cd1515997d38e7.camel@gmail.com>

Thanks for answering.

I?m not able to reproduce the warning when trying R CMD check with
valgrind on my computer (tried compiling with gcc9 and clang9), nor
with the r-debug docker images from github (
https://github.com/wch/r-debug). However, from what I was told when
trying to upload a new version of the package, the warning still
persist in the CRAN servers when checking the newer version.

About the source code: it actually complains about line
fit_model.cpp:751 :
hplane_root->reserve(exp_nodes);

Which is part of the struct ?ModelOutputsExt *model_outputs? (the one
that gets serialized through Cereal into an R raw vector, later
serialized through ?saveRDS?).

The same std::vector in the struct is heavily used all throughout the
module, and in most cases it?s only used with std::vector::back and
std::vector::emplace_back (first emplace right after L751), so it?s
unlikely that it could have uninitialized elements with no complaints
from asan or valgrind when creating the S3 object that goes to
?saveRDS?.

Best regards,
David Cortes
On Wed, 2020-07-08 at 20:59 +0300, Ivan Krylov wrote:
> On Wed, 08 Jul 2020 19:23:41 +0300
> David Cortes <david.cortes.rivera at gmail.com> wrote:
> 
> > - The warning is about an un-initialized value allocated in a call
> > to
> > C++ std::vector::reserve, which is called on a C++ vector member of
> > the
> > struct in the external pointer.
> 
> I'm ready to admit that I didn't read the code well enough, but it
> seems to me that the vector resized on line 752 resides in
> std::vector<WorkerMemory> worker_memory allocated on lines 411-415 in
> int fit_iforest(...) and then disposed of by the end of the function.
> I
> don't see workspace.ix_arr being saved anywhere model_outputs(_ext).
> I
> think that workspace.ix_arr shouldn't even exist by the time the
> lines
> following isolation.forest(...) are executed.
> 
> Can you reproduce the warning on your own computer? It might be
> helpful
> to run R -d 'valgrind --vgdb-error=1 --vgdb-stop-at=startup', follow
> Valgrind's instructions to attach the debugger to it, type "continue"
> into gdb, then trigger the warning in R and use gdb to gather more
> information when Valgrind stops the process around the memory access
> it considers uninitialised.
>


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Jul  9 03:44:17 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 8 Jul 2020 18:44:17 -0700
Subject: [R-pkg-devel] 
 How do you Rd reference parallel::mclapply() so it
 works also on Windows?
In-Reply-To: <24325.33036.927213.996313@hornik.net>
References: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
 <24325.33036.927213.996313@hornik.net>
Message-ID: <CAFDcVCTU0bW6NrL6bqMgbESqtSOaP1-YJ0nkkyZGsCjMJ5Gz4A@mail.gmail.com>

On Wed, Jul 8, 2020 at 12:11 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
...
> Indeed, another example, why we should move away from the
> 'file' instead of 'topic' (<-> \alias{.}) paradigm and requirement.
>
> I'm optimistic we will do that soonish ...

On Wed, Jul 8, 2020 at 1:17 AM Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
...
> But perhaps simply wait for a few more days ...

Oh, this is good news.

I see that these new warnings have already been disabled in R-devel.

Thxs,

Henrik


On Wed, Jul 8, 2020 at 1:17 AM Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>
> >>>>> Henrik Bengtsson writes:
>
> > Here's another "Non-file package-anchored link(s) ..." issue.  I'd
> > like to reference parallel::mclapply() in my help pages.  With the new
> > R-devel requirements, you have to link to the file and not the topic.
> > However, there is no cross-platform stable file reference for
> > parallel::mclapply();
>
> > # According to R on Linux
> >> basename(help("mclapply", package="parallel"))
> > [1] "mclapply"
>
> > # According to R on Windows
> >> basename(help("mclapply", package="parallel"))
> > [1] "mcdummies"
>
> > How can I provide a \link{} reference to the help("mclapply",
> > package="parallel") documentation?
>
> See R-exts, either "Platform-specific documentation" or "Dynamic pages".
>
> But perhaps simply wait for a few more days ...
>
> Best
> -k
>
>
> > Thanks,
>
> > Henrik


From morg@n@em@||box @end|ng |rom gm@||@com  Fri Jul 10 11:39:17 2020
From: morg@n@em@||box @end|ng |rom gm@||@com (Morgan Morgan)
Date: Fri, 10 Jul 2020 10:39:17 +0100
Subject: [R-pkg-devel] ISNAN warning [-Wfloat-conversion]
Message-ID: <CAL0QV_MZhoLKRXHEJcyCZr+1MKTpK-0wfJvdg5ATSaQf731yHA@mail.gmail.com>

Hi,

Please see below warning from GCC (rtools 4.0).
I know that the flag "-Wconversion" is not used by default when building
packages in R but I was wondering if the below warning can be avoided by
changing the ISNAN function in the R C API?
The functions R_IsNaN and R_IsNA do not generate these warnings but they
also have  a different behaviour than ISNAN.

test_ISNAN = inline::cfunction(
  verbose = TRUE,
  language = "C",
  cppargs = "-Wconversion",
  sig = c(x = "SEXP"),
  body = "
  if (ISNAN(asReal(x))) {
    Rprintf(\"Hello\");
  }
  return R_NilValue;
")

Setting PKG_CPPFLAGS to -Wconversion
Compilation argument:
 C:/PROGRA~1/R/R-40~1.0/bin/x64/R CMD SHLIB filed40200e5009.c 2>
filed40200e5009.c.err.txt
"C:/rtools40/mingw64/bin/"gcc  -I"C:/PROGRA~1/R/R-40~1.0/include" -DNDEBUG
-Wconversion         -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2
-mstackrealign -c filed40200e5009.c -o filed40200e5009.o
In file included from C:/PROGRA~1/R/R-40~1.0/include/R.h:58,
                 from filed40200e5009.c:1:
filed40200e5009.c: In function 'filed40200e5009':
C:/PROGRA~1/R/R-40~1.0/include/Rinternals.h:1531:18: warning: conversion
from 'double' to 'float' may change value [-Wfloat-conversion]
 #define asReal   Rf_asReal
filed40200e5009.c:8:7: note: in expansion of macro 'ISNAN'
   if (ISNAN(asReal(x))) {
       ^~~~~
filed40200e5009.c:8:13: note: in expansion of macro 'asReal'
   if (ISNAN(asReal(x))) {
             ^~~~~~
C:/rtools40/mingw64/bin/gcc -shared -s -static-libgcc -o
filed40200e5009.dll tmp.def filed40200e5009.o
-LC:/PROGRA~1/R/R-40~1.0/bin/x64 -lR
Program source:
  1: #include <R.h>
  2: #include <Rdefines.h>
  3: #include <R_ext/Error.h>
  4:
  5:
  6: SEXP filed40200e5009 ( SEXP x ) {
  7:
  8:   if (ISNAN(asReal(x))) {
  9:     Rprintf("Hello");
 10:   }
 11:   return R_NilValue;
 12:
 13:   warning("your C program does not return anything!");
 14:   return R_NilValue;
 15: }

Thank you
Best regards,
Morgan

	[[alternative HTML version deleted]]


From p@kr|v|t@ky @end|ng |rom un@w@edu@@u  Sat Jul 11 01:51:52 2020
From: p@kr|v|t@ky @end|ng |rom un@w@edu@@u (Pavel N. Krivitsky)
Date: Sat, 11 Jul 2020 09:51:52 +1000
Subject: [R-pkg-devel] Getting two independent packages with identical S3
 generics to dispatch each other's methods
Message-ID: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>

Dear All,

I would like to have two packages that do not depend on each other that
have an identical generic to be able to dispatch to each other's (non-
conflicting) methods. If it is of interest, the background for why this
is needed is given at the end of this e-mail.

As it is, it looks like two packages that do not depend on each other
both define a generic, they do not see each other's S3 methods. 

For example, in the two attached minimal packages, which define and
export generic foo() (identical in both packages) and methods
foo.character() and foo.numeric() that are exported via S3method(), we
get,

> library(test.character)
> foo("a")
foo.character() called.
> library(test.numeric)
Attaching package: ?test.numeric?
The following object is masked from ?package:test.character?:
    foo
> foo(1)
foo.numeric() called.
> foo("a")
Error in UseMethod("foo") : 
  no applicable method for 'foo' applied to an object of class "character"

That is, test.numeric::foo() doesn't "see"
test.character:::foo.character() and vice versa. Is there a way to make
them see each other?

This issue has arisen before, e.g. at https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace .

The "clean" solution is, of course, to create a third package to define
the generic that the two packages could import (and, if necessary,
reexport). However, that involves creating an almost-empty package that
then has to be submitted to CRAN, maintained, and add some amount of
storage and computational overhead. Is there another way to do this
that is transparent to the end user?


# Background

This arose as a result of two packages (lme4 and ergm) both wanting to
implement a simulate.formula() method, causing conflicts when the user
wanted to use both at the same time.

ergm has a mechanism for dispatching based on the class of the LHS of
the formula. It does so by defining a generic, simulate_formula() which
evaluates the formula's LHS and dispatches a method (e.g.,
simulate_formula.<CLASS>()) based on that.

Since lme4 and ergm generally use different LHSs, we are thinking of
resolving the conflict by copying the LHS dispatching mechanism from
ergm to lme4, and then defining our own summary_formula methods as
needed.

			Thank you in advance,
			Pavel


-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.character_1.0.tar.gz
Type: application/x-compressed-tar
Size: 545 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20200711/0320f31c/attachment.bin>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.numeric_1.0.tar.gz
Type: application/x-compressed-tar
Size: 546 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20200711/0320f31c/attachment-0001.bin>

From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sat Jul 11 02:15:38 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 10 Jul 2020 17:15:38 -0700
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
Message-ID: <93262950-320C-41ED-8932-004E92EE7F25@dcn.davis.ca.us>

Perhaps:

https://cran.r-project.org/web/packages/generics/index.html


On July 10, 2020 4:51:52 PM PDT, "Pavel N. Krivitsky" <p.krivitsky at unsw.edu.au> wrote:
>Dear All,
>
>I would like to have two packages that do not depend on each other that
>have an identical generic to be able to dispatch to each other's (non-
>conflicting) methods. If it is of interest, the background for why this
>is needed is given at the end of this e-mail.
>
>As it is, it looks like two packages that do not depend on each other
>both define a generic, they do not see each other's S3 methods. 
>
>For example, in the two attached minimal packages, which define and
>export generic foo() (identical in both packages) and methods
>foo.character() and foo.numeric() that are exported via S3method(), we
>get,
>
>> library(test.character)
>> foo("a")
>foo.character() called.
>> library(test.numeric)
>Attaching package: ?test.numeric?
>The following object is masked from ?package:test.character?:
>    foo
>> foo(1)
>foo.numeric() called.
>> foo("a")
>Error in UseMethod("foo") : 
>no applicable method for 'foo' applied to an object of class
>"character"
>
>That is, test.numeric::foo() doesn't "see"
>test.character:::foo.character() and vice versa. Is there a way to make
>them see each other?
>
>This issue has arisen before, e.g. at
>https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace
>.
>
>The "clean" solution is, of course, to create a third package to define
>the generic that the two packages could import (and, if necessary,
>reexport). However, that involves creating an almost-empty package that
>then has to be submitted to CRAN, maintained, and add some amount of
>storage and computational overhead. Is there another way to do this
>that is transparent to the end user?
>
>
># Background
>
>This arose as a result of two packages (lme4 and ergm) both wanting to
>implement a simulate.formula() method, causing conflicts when the user
>wanted to use both at the same time.
>
>ergm has a mechanism for dispatching based on the class of the LHS of
>the formula. It does so by defining a generic, simulate_formula() which
>evaluates the formula's LHS and dispatches a method (e.g.,
>simulate_formula.<CLASS>()) based on that.
>
>Since lme4 and ergm generally use different LHSs, we are thinking of
>resolving the conflict by copying the LHS dispatching mechanism from
>ergm to lme4, and then defining our own summary_formula methods as
>needed.
>
>			Thank you in advance,
>			Pavel

-- 
Sent from my phone. Please excuse my brevity.


From wo||g@ng@v|echtb@uer @end|ng |rom m@@@tr|chtun|ver@|ty@n|  Sat Jul 11 08:09:11 2020
From: wo||g@ng@v|echtb@uer @end|ng |rom m@@@tr|chtun|ver@|ty@n| (Wolfgang Viechtbauer)
Date: Sat, 11 Jul 2020 08:09:11 +0200
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
Message-ID: <F09264EE-1DC5-484A-87A9-90D9C72AE8C4@maastrichtuniversity.nl>

Hi Pavel,

I asked essentially the same question a few weeks ago:

https://stat.ethz.ch/pipermail/r-package-devel/2020q2/005609.html

As Jeff already suggested, there is the generics package which might be of use.

Aside from this, I wasn't able to distill a workable solution from the discussion that did not involve adding dependencies to (one of) the two packages.

Best,
Wolfgang

On July 11, 2020 1:51:52 AM GMT+02:00, "Pavel N. Krivitsky" <p.krivitsky at unsw.edu.au> wrote:
>Dear All,
>
>I would like to have two packages that do not depend on each other that
>have an identical generic to be able to dispatch to each other's (non-
>conflicting) methods. If it is of interest, the background for why this
>is needed is given at the end of this e-mail.
>
>As it is, it looks like two packages that do not depend on each other
>both define a generic, they do not see each other's S3 methods. 
>
>For example, in the two attached minimal packages, which define and
>export generic foo() (identical in both packages) and methods
>foo.character() and foo.numeric() that are exported via S3method(), we
>get,
>
>> library(test.character)
>> foo("a")
>foo.character() called.
>> library(test.numeric)
>Attaching package: ?test.numeric?
>The following object is masked from ?package:test.character?:
>    foo
>> foo(1)
>foo.numeric() called.
>> foo("a")
>Error in UseMethod("foo") : 
>no applicable method for 'foo' applied to an object of class
>"character"
>
>That is, test.numeric::foo() doesn't "see"
>test.character:::foo.character() and vice versa. Is there a way to make
>them see each other?
>
>This issue has arisen before, e.g. at
>https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace
>.
>
>The "clean" solution is, of course, to create a third package to define
>the generic that the two packages could import (and, if necessary,
>reexport). However, that involves creating an almost-empty package that
>then has to be submitted to CRAN, maintained, and add some amount of
>storage and computational overhead. Is there another way to do this
>that is transparent to the end user?
>
>
># Background
>
>This arose as a result of two packages (lme4 and ergm) both wanting to
>implement a simulate.formula() method, causing conflicts when the user
>wanted to use both at the same time.
>
>ergm has a mechanism for dispatching based on the class of the LHS of
>the formula. It does so by defining a generic, simulate_formula() which
>evaluates the formula's LHS and dispatches a method (e.g.,
>simulate_formula.<CLASS>()) based on that.
>
>Since lme4 and ergm generally use different LHSs, we are thinking of
>resolving the conflict by copying the LHS dispatching mechanism from
>ergm to lme4, and then defining our own summary_formula methods as
>needed.
>
>			Thank you in advance,
>			Pavel


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jul 11 13:29:00 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 11 Jul 2020 07:29:00 -0400
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
Message-ID: <239d48a8-a7ee-30d6-d4b3-81a48e3a631a@gmail.com>

If the semantics of the two generics must remain identical in the 
future, then there is an implicit dependency between the code in the 
packages.  You should formalize this by using one of the dependency 
mechanisms that the language provides, i.e. the clean solution.

Duncan Murdoch

On 10/07/2020 7:51 p.m., Pavel N. Krivitsky wrote:
> Dear All,
> 
> I would like to have two packages that do not depend on each other that
> have an identical generic to be able to dispatch to each other's (non-
> conflicting) methods. If it is of interest, the background for why this
> is needed is given at the end of this e-mail.
> 
> As it is, it looks like two packages that do not depend on each other
> both define a generic, they do not see each other's S3 methods.
> 
> For example, in the two attached minimal packages, which define and
> export generic foo() (identical in both packages) and methods
> foo.character() and foo.numeric() that are exported via S3method(), we
> get,
> 
>> library(test.character)
>> foo("a")
> foo.character() called.
>> library(test.numeric)
> Attaching package: ?test.numeric?
> The following object is masked from ?package:test.character?:
>      foo
>> foo(1)
> foo.numeric() called.
>> foo("a")
> Error in UseMethod("foo") :
>    no applicable method for 'foo' applied to an object of class "character"
> 
> That is, test.numeric::foo() doesn't "see"
> test.character:::foo.character() and vice versa. Is there a way to make
> them see each other?
> 
> This issue has arisen before, e.g. at https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace .
> 
> The "clean" solution is, of course, to create a third package to define
> the generic that the two packages could import (and, if necessary,
> reexport). However, that involves creating an almost-empty package that
> then has to be submitted to CRAN, maintained, and add some amount of
> storage and computational overhead. Is there another way to do this
> that is transparent to the end user?
> 
> 
> # Background
> 
> This arose as a result of two packages (lme4 and ergm) both wanting to
> implement a simulate.formula() method, causing conflicts when the user
> wanted to use both at the same time.
> 
> ergm has a mechanism for dispatching based on the class of the LHS of
> the formula. It does so by defining a generic, simulate_formula() which
> evaluates the formula's LHS and dispatches a method (e.g.,
> simulate_formula.<CLASS>()) based on that.
> 
> Since lme4 and ergm generally use different LHSs, we are thinking of
> resolving the conflict by copying the LHS dispatching mechanism from
> ergm to lme4, and then defining our own summary_formula methods as
> needed.
> 
> 			Thank you in advance,
> 			Pavel
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From p@kr|v|t@ky @end|ng |rom un@w@edu@@u  Sat Jul 11 13:52:08 2020
From: p@kr|v|t@ky @end|ng |rom un@w@edu@@u (Pavel N. Krivitsky)
Date: Sat, 11 Jul 2020 21:52:08 +1000
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <239d48a8-a7ee-30d6-d4b3-81a48e3a631a@gmail.com>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
 <239d48a8-a7ee-30d6-d4b3-81a48e3a631a@gmail.com>
Message-ID: <e4b8cee0e80a721c0a70bb9ec9d9cd1650b07e11.camel@unsw.edu.au>

Dear Duncan et al.,

Firstly, my apologies for the duplicated query. It seems that I had
searched everywhere but the mailing list where I asked the question.

Secondly, I was wondering if I could get some indication whether CRAN
would accept a package with the following code and documentation (and
only that):

1) A number of exported generics of the form

summary_formula(object, ..., lhs),
simulate_formula(object, nsim=1, seed=NULL, ..., lhs),
etc.,

which expect a formula as their first argument, evaluate the LHS of the
formula, and dispatch based on the class of the result, which can also
be overridden by the lhs= argument.

2) Corresponding S3 methods summary.formula(), simulate.formula(), etc.
methods, that call the corresponding *_formula() generic.

I am familiar with the generics package, but I don't think it's a good
place for this functionality, because this is not the typical
dispatching behaviour, and because *.formula() exports are not
technically generics but S3 methods. In particular, as far as I know,
existing mechanisms make it easy to cherry-pick generics, but they
don't make it easy to cherry-pick methods.

				Best Regards,
				Pavel

On Sat, 2020-07-11 at 07:29 -0400, Duncan Murdoch wrote:
> If the semantics of the two generics must remain identical in the 
> future, then there is an implicit dependency between the code in the 
> packages.  You should formalize this by using one of the dependency 
> mechanisms that the language provides, i.e. the clean solution.
> 
> Duncan Murdoch
> 
> On 10/07/2020 7:51 p.m., Pavel N. Krivitsky wrote:
> > Dear All,
> > 
> > I would like to have two packages that do not depend on each other
> > that
> > have an identical generic to be able to dispatch to each other's
> > (non-
> > conflicting) methods. If it is of interest, the background for why
> > this
> > is needed is given at the end of this e-mail.
> > 
> > As it is, it looks like two packages that do not depend on each
> > other
> > both define a generic, they do not see each other's S3 methods.
> > 
> > For example, in the two attached minimal packages, which define and
> > export generic foo() (identical in both packages) and methods
> > foo.character() and foo.numeric() that are exported via S3method(),
> > we
> > get,
> > 
> > > library(test.character)
> > > foo("a")
> > foo.character() called.
> > > library(test.numeric)
> > Attaching package: ?test.numeric?
> > The following object is masked from ?package:test.character?:
> >      foo
> > > foo(1)
> > foo.numeric() called.
> > > foo("a")
> > Error in UseMethod("foo") :
> >    no applicable method for 'foo' applied to an object of class
> > "character"
> > 
> > That is, test.numeric::foo() doesn't "see"
> > test.character:::foo.character() and vice versa. Is there a way to
> > make
> > them see each other?
> > 
> > This issue has arisen before, e.g. at 
> > https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace
> > .
> > 
> > The "clean" solution is, of course, to create a third package to
> > define
> > the generic that the two packages could import (and, if necessary,
> > reexport). However, that involves creating an almost-empty package
> > that
> > then has to be submitted to CRAN, maintained, and add some amount
> > of
> > storage and computational overhead. Is there another way to do this
> > that is transparent to the end user?
> > 
> > 
> > # Background
> > 
> > This arose as a result of two packages (lme4 and ergm) both wanting
> > to
> > implement a simulate.formula() method, causing conflicts when the
> > user
> > wanted to use both at the same time.
> > 
> > ergm has a mechanism for dispatching based on the class of the LHS
> > of
> > the formula. It does so by defining a generic, simulate_formula()
> > which
> > evaluates the formula's LHS and dispatches a method (e.g.,
> > simulate_formula.<CLASS>()) based on that.
> > 
> > Since lme4 and ergm generally use different LHSs, we are thinking
> > of
> > resolving the conflict by copying the LHS dispatching mechanism
> > from
> > ergm to lme4, and then defining our own summary_formula methods as
> > needed.
> > 
> > 			Thank you in advance,
> > 			Pavel
> > 
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jul 11 14:34:09 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 11 Jul 2020 08:34:09 -0400
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <e4b8cee0e80a721c0a70bb9ec9d9cd1650b07e11.camel@unsw.edu.au>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
 <239d48a8-a7ee-30d6-d4b3-81a48e3a631a@gmail.com>
 <e4b8cee0e80a721c0a70bb9ec9d9cd1650b07e11.camel@unsw.edu.au>
Message-ID: <f213e207-c3d2-d9d7-e583-146693d7b69b@gmail.com>

On 11/07/2020 7:52 a.m., Pavel N. Krivitsky wrote:
> Dear Duncan et al.,
> 
> Firstly, my apologies for the duplicated query. It seems that I had
> searched everywhere but the mailing list where I asked the question.
> 
> Secondly, I was wondering if I could get some indication whether CRAN
> would accept a package with the following code and documentation (and
> only that):

I think it would depend on the documentation and the submission message. 
  You'll need to convince them not to reject your package under the "A 
package?s contribution has to be non-trivial" rule.  Explain why you 
can't put the generic in one of the existing packages and import it from 
there into the other one.  (I'd make ergm import lme4, since that only 
adds 5 packages that wouldn't otherwise be present:   "minqa" 
"nloptr"    "statmod"   "Rcpp"      "RcppEigen", and those are all 
reasonably popular packages.)

Duncan Murdoch




> 
> 1) A number of exported generics of the form
> 
> summary_formula(object, ..., lhs),
> simulate_formula(object, nsim=1, seed=NULL, ..., lhs),
> etc.,
> 
> which expect a formula as their first argument, evaluate the LHS of the
> formula, and dispatch based on the class of the result, which can also
> be overridden by the lhs= argument.
> 
> 2) Corresponding S3 methods summary.formula(), simulate.formula(), etc.
> methods, that call the corresponding *_formula() generic.
> 
> I am familiar with the generics package, but I don't think it's a good
> place for this functionality, because this is not the typical
> dispatching behaviour, and because *.formula() exports are not
> technically generics but S3 methods. In particular, as far as I know,
> existing mechanisms make it easy to cherry-pick generics, but they
> don't make it easy to cherry-pick methods.
> 
> 				Best Regards,
> 				Pavel
> 
> On Sat, 2020-07-11 at 07:29 -0400, Duncan Murdoch wrote:
>> If the semantics of the two generics must remain identical in the
>> future, then there is an implicit dependency between the code in the
>> packages.  You should formalize this by using one of the dependency
>> mechanisms that the language provides, i.e. the clean solution.
>>
>> Duncan Murdoch
>>
>> On 10/07/2020 7:51 p.m., Pavel N. Krivitsky wrote:
>>> Dear All,
>>>
>>> I would like to have two packages that do not depend on each other
>>> that
>>> have an identical generic to be able to dispatch to each other's
>>> (non-
>>> conflicting) methods. If it is of interest, the background for why
>>> this
>>> is needed is given at the end of this e-mail.
>>>
>>> As it is, it looks like two packages that do not depend on each
>>> other
>>> both define a generic, they do not see each other's S3 methods.
>>>
>>> For example, in the two attached minimal packages, which define and
>>> export generic foo() (identical in both packages) and methods
>>> foo.character() and foo.numeric() that are exported via S3method(),
>>> we
>>> get,
>>>
>>>> library(test.character)
>>>> foo("a")
>>> foo.character() called.
>>>> library(test.numeric)
>>> Attaching package: ?test.numeric?
>>> The following object is masked from ?package:test.character?:
>>>       foo
>>>> foo(1)
>>> foo.numeric() called.
>>>> foo("a")
>>> Error in UseMethod("foo") :
>>>     no applicable method for 'foo' applied to an object of class
>>> "character"
>>>
>>> That is, test.numeric::foo() doesn't "see"
>>> test.character:::foo.character() and vice versa. Is there a way to
>>> make
>>> them see each other?
>>>
>>> This issue has arisen before, e.g. at
>>> https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace
>>> .
>>>
>>> The "clean" solution is, of course, to create a third package to
>>> define
>>> the generic that the two packages could import (and, if necessary,
>>> reexport). However, that involves creating an almost-empty package
>>> that
>>> then has to be submitted to CRAN, maintained, and add some amount
>>> of
>>> storage and computational overhead. Is there another way to do this
>>> that is transparent to the end user?
>>>
>>>
>>> # Background
>>>
>>> This arose as a result of two packages (lme4 and ergm) both wanting
>>> to
>>> implement a simulate.formula() method, causing conflicts when the
>>> user
>>> wanted to use both at the same time.
>>>
>>> ergm has a mechanism for dispatching based on the class of the LHS
>>> of
>>> the formula. It does so by defining a generic, simulate_formula()
>>> which
>>> evaluates the formula's LHS and dispatches a method (e.g.,
>>> simulate_formula.<CLASS>()) based on that.
>>>
>>> Since lme4 and ergm generally use different LHSs, we are thinking
>>> of
>>> resolving the conflict by copying the LHS dispatching mechanism
>>> from
>>> ergm to lme4, and then defining our own summary_formula methods as
>>> needed.
>>>
>>> 			Thank you in advance,
>>> 			Pavel
>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>


From nnov|c@ @end|ng |rom gm@||@com  Sun Jul 12 17:55:12 2020
From: nnov|c@ @end|ng |rom gm@||@com (Novica Nakov)
Date: Sun, 12 Jul 2020 17:55:12 +0200
Subject: [R-pkg-devel] CRAN submission error package newscatcheR_0.1.0
Message-ID: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>

Hi,

I tried to submit a new version of the package to CRAN today and got an
email back about a pre-test error:

Windows: <
https://win-builder.r-project.org/incoming_pretest/newscatcheR_0.1.0_20200712_103032/Windows/00check.log
>
Status: 1 ERROR

The full logs are here: <
https://win-builder.r-project.org/incoming_pretest/newscatcheR_0.1.0_20200712_103032/
>

However, the winbuilder check didn't return any errors both on the R Under
development (unstable)  and R version 4.0.2 (2020-06-22) (logs:
https://win-builder.r-project.org/C38WY20VHvTO/ and
https://win-builder.r-project.org/aNK5eJQxxyGH/)

The package's code is here: https://github.com/discindo/newscatcheR

I am fairly new to packages and CRAN and I am not sure if the pre-tests are
doing the same thing as the winbuilder when sent from devtools.

When searching for a possible solution I found this thread that looks like
tibble might be causing the issue if it is not updated to 3.0.3 but I am
not sure (
https://community.rstudio.com/t/warning-messages-when-printing-tibbles/72622
).

Thanks for any help.
novica

	[[alternative HTML version deleted]]


From m@e||e@@@|mon @end|ng |rom y@hoo@@e  Mon Jul 13 08:17:30 2020
From: m@e||e@@@|mon @end|ng |rom y@hoo@@e (=?UTF-8?Q?Ma=C3=ABlle_SALMON?=)
Date: Mon, 13 Jul 2020 06:17:30 +0000 (UTC)
Subject: [R-pkg-devel] 
 Proper CRAN way - How to handle dependency of java jar file?
In-Reply-To: <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
Message-ID: <1250265904.886843.1594621050558@mail.yahoo.com>

Regarding where to save the jar file, you might be interested in "app dirs" (via tools::R_user_dir() in R from 4.0, the rappdirs package, the hoardr package) cf https://blog.r-hub.io/2020/03/12/user-preferences/#not-so-temporary-files3

Ma?lle.

Den tisdag 23 juni 2020 14:56:30 CEST, Rainer M Krug <rainer at krugs.de> skrev: 





Thanks Duncan.

> On 23 Jun 2020, at 14:35, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> Your assumption that .jar files are not allowed is wrong:? a number of packages contain them:? rscala, J4R, Rbgs, bartMachine, OpenStreetMap, ...? There's a specific mention about how to include them in the CRAN policy document:

That?s good to know.

> 
> "For Java .class and .jar files, the sources should be in a top-level java directory in the source package (or that directory should explain how they can be obtained)."

So a tet file in the inst/jar directory giving the link to the GitHub repo would be fine in this case?

> 
> If you still decide not to include your .jar file (maybe it is too big, for example),


I guess it would be stretching it a bit, as the jar file is 8.2 MB, and plantuml has regular continuous updates, so I would prefer to keep it dynamic.


> then I think your option 1 is unusable for those people who can't write to the library location because of permission problems. (Admin privileges are often necessary to install packages in the main library.)? Generally I think everyone can install packages somewhere, but users do really get confused when they have multiple library locations, possibly each containing a different version of a package.

So the suggested option would be to have a function, which 
1) ask the user to create a directory in the home folder 
2) download the jar file into that directory or, when no permission is granted, into the tmpdir()

Thanks, no major changes necessary for that,

Rainer


> 
> Duncan Murdoch
> 
> On 23/06/2020 8:18 a.m., Rainer M Krug wrote:
>> Hi
>> I have a package called `plantuml` (https://github.com/rkrug/plantuml) which converts plantuml code to UML graphs. It uses for this the java program https://plantuml.com which is Open Source.
>> As it is not allowed to distribute a binary with an R package, I use the approach of a function which downloads the jar file into the directory `system.file("jar/plantuml.jar", package = "plantuml?)`.
>> This works nicely, and at the moment, the function is called automatically before the plantuml.jar is used.
>> Now I would like to submit the package to CRAN. I can?t find the guidelines anymore, so I am asking here:
>> What is the appropriate way of handling this?
>> I can think of a at least two ways of making it obvious to the user, that a binary is downloaded:
>> 1) if the file plantuml.jar is not present, ask the user to run the function `updatePlantumlJar()` which downloads the jar to the original location in the package directory
>> 2) tell the user to download the file manually and to put it somewhere, where the package will find it
>> I would prefer the first version, as the plantuml.jar would be in the package directory, where usually nobody but the package is doing stuff.
>> Any suggestions on how I could make this ?CRAN conform??
>> Thanks a lot,
>> Rainer
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> Orcid ID: 0000-0002-7490-0066
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> Office:??? +41 (0)44 635 47 64
>> Cell:? ? ? ??? +41 (0)78 630 66 57
>> email:? ? ? Rainer.Krug at uzh.ch
>> ??? ??? Rainer at krugs.de
>> Skype:? ? RMkrug
>> PGP: 0x0F52F982
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> Orcid ID: 0000-0002-7490-0066
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> Office:??? +41 (0)44 635 47 64
>> Cell:? ? ? ??? +41 (0)78 630 66 57
>> email:? ? ? Rainer.Krug at uzh.ch
>> ??? ??? Rainer at krugs.de
>> Skype:? ? RMkrug
>> PGP: 0x0F52F982
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:??? +41 (0)44 635 47 64
Cell:? ? ? ??? +41 (0)78 630 66 57
email:? ? ? Rainer.Krug at uzh.ch
??? ??? Rainer at krugs.de
Skype:? ? RMkrug

PGP: 0x0F52F982




??? [[alternative HTML version deleted]]


______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Jul 13 08:57:39 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 13 Jul 2020 08:57:39 +0200
Subject: [R-pkg-devel] CRAN submission error package newscatcheR_0.1.0
In-Reply-To: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>
References: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>
Message-ID: <82161518-652d-b2b9-e34a-91e91b24dce0@statistik.tu-dortmund.de>

Something with the ellipsis installation on the check machines seems 
broken, this is something for the CRAN team (which I am a member of) and 
will be fixed.

Best,
Uwe Ligges

On 12.07.2020 17:55, Novica Nakov wrote:
> Hi,
> 
> I tried to submit a new version of the package to CRAN today and got an
> email back about a pre-test error:
> 
> Windows: <
> https://win-builder.r-project.org/incoming_pretest/newscatcheR_0.1.0_20200712_103032/Windows/00check.log
>>
> Status: 1 ERROR
> 
> The full logs are here: <
> https://win-builder.r-project.org/incoming_pretest/newscatcheR_0.1.0_20200712_103032/
>>
> 
> However, the winbuilder check didn't return any errors both on the R Under
> development (unstable)  and R version 4.0.2 (2020-06-22) (logs:
> https://win-builder.r-project.org/C38WY20VHvTO/ and
> https://win-builder.r-project.org/aNK5eJQxxyGH/)
> 
> The package's code is here: https://github.com/discindo/newscatcheR
> 
> I am fairly new to packages and CRAN and I am not sure if the pre-tests are
> doing the same thing as the winbuilder when sent from devtools.
> 
> When searching for a possible solution I found this thread that looks like
> tibble might be causing the issue if it is not updated to 3.0.3 but I am
> not sure (
> https://community.rstudio.com/t/warning-messages-when-printing-tibbles/72622
> ).
> 
> Thanks for any help.
> novica
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From nnov|c@ @end|ng |rom gm@||@com  Mon Jul 13 10:57:14 2020
From: nnov|c@ @end|ng |rom gm@||@com (Novica Nakov)
Date: Mon, 13 Jul 2020 10:57:14 +0200
Subject: [R-pkg-devel] CRAN submission error package newscatcheR_0.1.0
In-Reply-To: <82161518-652d-b2b9-e34a-91e91b24dce0@statistik.tu-dortmund.de>
References: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>
 <82161518-652d-b2b9-e34a-91e91b24dce0@statistik.tu-dortmund.de>
Message-ID: <CAEXeAobcmVd2AS6mRK2irhF3ArpXUq79Vt+XDdt4BkYUn+S-zQ@mail.gmail.com>

Hi,


Something with the ellipsis installation on the check machines seems
> broken, this is something for the CRAN team (which I am a member of) and
> will be fixed.
>

Should I wait for confirmation that the issue is fixed before resubmitting?

Thanks.
novica

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Jul 13 10:58:38 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 13 Jul 2020 10:58:38 +0200
Subject: [R-pkg-devel] CRAN submission error package newscatcheR_0.1.0
In-Reply-To: <CAEXeAobcmVd2AS6mRK2irhF3ArpXUq79Vt+XDdt4BkYUn+S-zQ@mail.gmail.com>
References: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>
 <82161518-652d-b2b9-e34a-91e91b24dce0@statistik.tu-dortmund.de>
 <CAEXeAobcmVd2AS6mRK2irhF3ArpXUq79Vt+XDdt4BkYUn+S-zQ@mail.gmail.com>
Message-ID: <83e6479c-8245-544a-b0dc-189f4a325dc0@statistik.tu-dortmund.de>

No need to resubmit, we will trigger new checks.

Best,
Uwe Ligges

On 13.07.2020 10:57, Novica Nakov wrote:
> Hi,
> 
> 
> Something with the ellipsis installation on the check machines seems
>> broken, this is something for the CRAN team (which I am a member of) and
>> will be fixed.
>>
> 
> Should I wait for confirmation that the issue is fixed before resubmitting?
> 
> Thanks.
> novica
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From R@|ner @end|ng |rom krug@@de  Mon Jul 13 11:15:10 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Mon, 13 Jul 2020 11:15:10 +0200
Subject: [R-pkg-devel] 
 Proper CRAN way - How to handle dependency of java jar file?
In-Reply-To: <1250265904.886843.1594621050558@mail.yahoo.com>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
 <1250265904.886843.1594621050558@mail.yahoo.com>
Message-ID: <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>

Thanks Ma?lle - that is exactly what I am doing at the moment.

Cheers,

Rainer


> On 13 Jul 2020, at 08:17, Ma?lle SALMON <maelle.salmon at yahoo.se> wrote:
> 
> Regarding where to save the jar file, you might be interested in "app dirs" (via tools::R_user_dir() in R from 4.0, the rappdirs package, the hoardr package) cf https://blog.r-hub.io/2020/03/12/user-preferences/#not-so-temporary-files3
> 
> Ma?lle.
> 
> Den tisdag 23 juni 2020 14:56:30 CEST, Rainer M Krug <rainer at krugs.de> skrev: 
> 
> 
> 
> 
> 
> Thanks Duncan.
> 
>> On 23 Jun 2020, at 14:35, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> 
>> Your assumption that .jar files are not allowed is wrong:  a number of packages contain them:  rscala, J4R, Rbgs, bartMachine, OpenStreetMap, ...  There's a specific mention about how to include them in the CRAN policy document:
> 
> That?s good to know.
> 
>> 
>> "For Java .class and .jar files, the sources should be in a top-level java directory in the source package (or that directory should explain how they can be obtained)."
> 
> So a tet file in the inst/jar directory giving the link to the GitHub repo would be fine in this case?
> 
>> 
>> If you still decide not to include your .jar file (maybe it is too big, for example),
> 
> 
> I guess it would be stretching it a bit, as the jar file is 8.2 MB, and plantuml has regular continuous updates, so I would prefer to keep it dynamic.
> 
> 
>> then I think your option 1 is unusable for those people who can't write to the library location because of permission problems. (Admin privileges are often necessary to install packages in the main library.)  Generally I think everyone can install packages somewhere, but users do really get confused when they have multiple library locations, possibly each containing a different version of a package.
> 
> So the suggested option would be to have a function, which 
> 1) ask the user to create a directory in the home folder 
> 2) download the jar file into that directory or, when no permission is granted, into the tmpdir()
> 
> Thanks, no major changes necessary for that,
> 
> Rainer
> 
> 
>> 
>> Duncan Murdoch
>> 
>> On 23/06/2020 8:18 a.m., Rainer M Krug wrote:
>>> Hi
>>> I have a package called `plantuml` (https://github.com/rkrug/plantuml) which converts plantuml code to UML graphs. It uses for this the java program https://plantuml.com which is Open Source.
>>> As it is not allowed to distribute a binary with an R package, I use the approach of a function which downloads the jar file into the directory `system.file("jar/plantuml.jar", package = "plantuml?)`.
>>> This works nicely, and at the moment, the function is called automatically before the plantuml.jar is used.
>>> Now I would like to submit the package to CRAN. I can?t find the guidelines anymore, so I am asking here:
>>> What is the appropriate way of handling this?
>>> I can think of a at least two ways of making it obvious to the user, that a binary is downloaded:
>>> 1) if the file plantuml.jar is not present, ask the user to run the function `updatePlantumlJar()` which downloads the jar to the original location in the package directory
>>> 2) tell the user to download the file manually and to put it somewhere, where the package will find it
>>> I would prefer the first version, as the plantuml.jar would be in the package directory, where usually nobody but the package is doing stuff.
>>> Any suggestions on how I could make this ?CRAN conform??
>>> Thanks a lot,
>>> Rainer
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> Orcid ID: 0000-0002-7490-0066
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> Office:    +41 (0)44 635 47 64
>>> Cell:          +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>         Rainer at krugs.de
>>> Skype:    RMkrug
>>> PGP: 0x0F52F982
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> Orcid ID: 0000-0002-7490-0066
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> Office:    +41 (0)44 635 47 64
>>> Cell:          +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>         Rainer at krugs.de
>>> Skype:    RMkrug
>>> PGP: 0x0F52F982
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:    +41 (0)44 635 47 64
> Cell:          +41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
>         Rainer at krugs.de
> Skype:    RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
>     [[alternative HTML version deleted]]
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From bkum@r @end|ng |rom rocket@o|tw@re@com  Mon Jul 13 11:22:36 2020
From: bkum@r @end|ng |rom rocket@o|tw@re@com (Binit Kumar)
Date: Mon, 13 Jul 2020 09:22:36 +0000
Subject: [R-pkg-devel] Unable to post messages to this group
Message-ID: <CY4PR07MB274376AAE86B2581769415A9BC600@CY4PR07MB2743.namprd07.prod.outlook.com>

Hi Team,
I am unable to post messages to this group and keep getting "waiting for moderator" message from bounce email i.e. "R-package-devel <r-package-devel-bounces at r-project.org>".
Is there any criteria of sending the message to devel group?


Thanks & Regards,

Binit Kumar


================================
Rocket Software, Inc. and subsidiaries ? 77 Fourth Avenue, Waltham MA 02451 ? Main Office Toll Free Number: +1 855.577.4323
Contact Customer Support: https://my.rocketsoftware.com/RocketCommunity/RCEmailSupport
Unsubscribe from Marketing Messages/Manage Your Subscription Preferences - http://www.rocketsoftware.com/manage-your-email-preferences
Privacy Policy - http://www.rocketsoftware.com/company/legal/privacy-policy
================================

This communication and any attachments may contain confidential information of Rocket Software, Inc. All unauthorized use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify Rocket Software immediately and destroy all copies of this communication. Thank you.

	[[alternative HTML version deleted]]


From p@u|@@@v@ry @end|ng |rom un|v-|comte@|r  Mon Jul 13 11:31:17 2020
From: p@u|@@@v@ry @end|ng |rom un|v-|comte@|r (Paul SAVARY)
Date: Mon, 13 Jul 2020 11:31:17 +0200 (CEST)
Subject: [R-pkg-devel] 
 Proper CRAN way - How to handle dependency of java jar file?
In-Reply-To: <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
 <1250265904.886843.1594621050558@mail.yahoo.com>
 <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>
Message-ID: <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>

Thanks you too.

That is also what I am doing. Note that I am downloading jar files into a directory created in rappdirs::user_data_dir() using the command download.file(url, ...).

If I do not specify 'mode='wb'' in download.file() on a Windows OS, downloaded jar file is corrupted and cannot be used because a text file is created in which \n are converted into \r\n, which does not make sens for a binary file.

I hope it can help
Cheers

Paul Savary - PhD Student
UMR 6049 Th?MA (Besan?on), UMR 6282 Biog?osciences (Dijon), ARP-Astrance (Paris) 
Phone number : +33.6.30.97.34.27 
Research topics: population genetics, landscape ecology, graph theory, spatial statistics

----- Mail original -----
De: "Rainer M Krug" <Rainer at krugs.de>
?: "Ma?lle SALMON" <maelle.salmon at yahoo.se>
Cc: "r-package-devel" <r-package-devel at r-project.org>
Envoy?: Lundi 13 Juillet 2020 11:15:10
Objet: Re: [R-pkg-devel]  Proper CRAN way - How to handle dependency of java jar file?

Thanks Ma?lle - that is exactly what I am doing at the moment.

Cheers,

Rainer


> On 13 Jul 2020, at 08:17, Ma?lle SALMON <maelle.salmon at yahoo.se> wrote:
> 
> Regarding where to save the jar file, you might be interested in "app dirs" (via tools::R_user_dir() in R from 4.0, the rappdirs package, the hoardr package) cf https://blog.r-hub.io/2020/03/12/user-preferences/#not-so-temporary-files3
> 
> Ma?lle.
> 
> Den tisdag 23 juni 2020 14:56:30 CEST, Rainer M Krug <rainer at krugs.de> skrev: 
> 
> 
> 
> 
> 
> Thanks Duncan.
> 
>> On 23 Jun 2020, at 14:35, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> 
>> Your assumption that .jar files are not allowed is wrong:  a number of packages contain them:  rscala, J4R, Rbgs, bartMachine, OpenStreetMap, ...  There's a specific mention about how to include them in the CRAN policy document:
> 
> That?s good to know.
> 
>> 
>> "For Java .class and .jar files, the sources should be in a top-level java directory in the source package (or that directory should explain how they can be obtained)."
> 
> So a tet file in the inst/jar directory giving the link to the GitHub repo would be fine in this case?
> 
>> 
>> If you still decide not to include your .jar file (maybe it is too big, for example),
> 
> 
> I guess it would be stretching it a bit, as the jar file is 8.2 MB, and plantuml has regular continuous updates, so I would prefer to keep it dynamic.
> 
> 
>> then I think your option 1 is unusable for those people who can't write to the library location because of permission problems. (Admin privileges are often necessary to install packages in the main library.)  Generally I think everyone can install packages somewhere, but users do really get confused when they have multiple library locations, possibly each containing a different version of a package.
> 
> So the suggested option would be to have a function, which 
> 1) ask the user to create a directory in the home folder 
> 2) download the jar file into that directory or, when no permission is granted, into the tmpdir()
> 
> Thanks, no major changes necessary for that,
> 
> Rainer
> 
> 
>> 
>> Duncan Murdoch
>> 
>> On 23/06/2020 8:18 a.m., Rainer M Krug wrote:
>>> Hi
>>> I have a package called `plantuml` (https://github.com/rkrug/plantuml) which converts plantuml code to UML graphs. It uses for this the java program https://plantuml.com which is Open Source.
>>> As it is not allowed to distribute a binary with an R package, I use the approach of a function which downloads the jar file into the directory `system.file("jar/plantuml.jar", package = "plantuml?)`.
>>> This works nicely, and at the moment, the function is called automatically before the plantuml.jar is used.
>>> Now I would like to submit the package to CRAN. I can?t find the guidelines anymore, so I am asking here:
>>> What is the appropriate way of handling this?
>>> I can think of a at least two ways of making it obvious to the user, that a binary is downloaded:
>>> 1) if the file plantuml.jar is not present, ask the user to run the function `updatePlantumlJar()` which downloads the jar to the original location in the package directory
>>> 2) tell the user to download the file manually and to put it somewhere, where the package will find it
>>> I would prefer the first version, as the plantuml.jar would be in the package directory, where usually nobody but the package is doing stuff.
>>> Any suggestions on how I could make this ?CRAN conform??
>>> Thanks a lot,
>>> Rainer
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> Orcid ID: 0000-0002-7490-0066
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> Office:    +41 (0)44 635 47 64
>>> Cell:          +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>         Rainer at krugs.de
>>> Skype:    RMkrug
>>> PGP: 0x0F52F982
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> Orcid ID: 0000-0002-7490-0066
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> Office:    +41 (0)44 635 47 64
>>> Cell:          +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>         Rainer at krugs.de
>>> Skype:    RMkrug
>>> PGP: 0x0F52F982
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:    +41 (0)44 635 47 64
> Cell:          +41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
>         Rainer at krugs.de
> Skype:    RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
>     [[alternative HTML version deleted]]
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From berryboe@@enkoo| @end|ng |rom hotm@||@com  Mon Jul 13 12:40:58 2020
From: berryboe@@enkoo| @end|ng |rom hotm@||@com (Berry Boessenkool)
Date: Mon, 13 Jul 2020 10:40:58 +0000
Subject: [R-pkg-devel] mode='wb' in download.file()
In-Reply-To: <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
 <1250265904.886843.1594621050558@mail.yahoo.com>
 <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>,
 <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>
Message-ID: <AM0PR01MB403370D83D731D4FB27A49C1D5600@AM0PR01MB4033.eurprd01.prod.exchangelabs.com>


On a related note:

I also need to set mode="wb" to download binary files on Windows in my rdwd package.
I'm considering calling download.file() with that mode as the default.
Is there any problem with that, potentially on other OS or for non-binary files?

Feel free to comment here to not crowd the mailing list:
https://github.com/brry/rdwd/issues/20

Thanks,
Berry



________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Paul SAVARY <paul.savary at univ-fcomte.fr>
Sent: Monday, July 13, 2020 11:31
To: Rainer M Krug <Rainer at krugs.de>
Cc: r-package-devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Proper CRAN way - How to handle dependency of java jar file?

Thanks you too.

That is also what I am doing. Note that I am downloading jar files into a directory created in rappdirs::user_data_dir() using the command download.file(url, ...).


oaded jar file is corrupted and cannot be used because a text file is created in which \n are converted into \r\n, which does not make sens for a binary file.

I hope it can help
Cheers

	[[alternative HTML version deleted]]


From R@|ner @end|ng |rom krug@@de  Mon Jul 13 13:14:01 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Mon, 13 Jul 2020 13:14:01 +0200
Subject: [R-pkg-devel] 
 Proper CRAN way - How to handle dependency of java jar file?
In-Reply-To: <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
 <1250265904.886843.1594621050558@mail.yahoo.com>
 <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>
 <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>
Message-ID: <BA6C1D4A-4E94-466F-83AC-92FCC0C34793@krugs.de>



> On 13 Jul 2020, at 11:31, Paul SAVARY <paul.savary at univ-fcomte.fr> wrote:
> 
> Thanks you too.
> 
> That is also what I am doing. Note that I am downloading jar files into a directory created in rappdirs::user_data_dir() using the command download.file(url, ...).

Jup - exactly.

> 
> If I do not specify 'mode='wb'' in download.file() on a Windows OS, downloaded jar file is corrupted and cannot be used because a text file is created in which \n are converted into \r\n, which does not make sens for a binary file.

Yes - the `mode = ?wb?` bit me as well - developing on MacOS, testing on travis on GitHub with Linux and Mac,, and what did I get, a corrupt jar on windows.

Thanks,

Rainer

> 
> I hope it can help
> Cheers
> 
> Paul Savary - PhD Student
> UMR 6049 Th?MA (Besan?on), UMR 6282 Biog?osciences (Dijon), ARP-Astrance (Paris) 
> Phone number : +33.6.30.97.34.27 
> Research topics: population genetics, landscape ecology, graph theory, spatial statistics
> 
> ----- Mail original -----
> De: "Rainer M Krug" <Rainer at krugs.de>
> ?: "Ma?lle SALMON" <maelle.salmon at yahoo.se>
> Cc: "r-package-devel" <r-package-devel at r-project.org>
> Envoy?: Lundi 13 Juillet 2020 11:15:10
> Objet: Re: [R-pkg-devel]  Proper CRAN way - How to handle dependency of java jar file?
> 
> Thanks Ma?lle - that is exactly what I am doing at the moment.
> 
> Cheers,
> 
> Rainer
> 
> 
>> On 13 Jul 2020, at 08:17, Ma?lle SALMON <maelle.salmon at yahoo.se> wrote:
>> 
>> Regarding where to save the jar file, you might be interested in "app dirs" (via tools::R_user_dir() in R from 4.0, the rappdirs package, the hoardr package) cf https://blog.r-hub.io/2020/03/12/user-preferences/#not-so-temporary-files3
>> 
>> Ma?lle.
>> 
>> Den tisdag 23 juni 2020 14:56:30 CEST, Rainer M Krug <rainer at krugs.de> skrev: 
>> 
>> 
>> 
>> 
>> 
>> Thanks Duncan.
>> 
>>> On 23 Jun 2020, at 14:35, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>> 
>>> Your assumption that .jar files are not allowed is wrong:  a number of packages contain them:  rscala, J4R, Rbgs, bartMachine, OpenStreetMap, ...  There's a specific mention about how to include them in the CRAN policy document:
>> 
>> That?s good to know.
>> 
>>> 
>>> "For Java .class and .jar files, the sources should be in a top-level java directory in the source package (or that directory should explain how they can be obtained)."
>> 
>> So a tet file in the inst/jar directory giving the link to the GitHub repo would be fine in this case?
>> 
>>> 
>>> If you still decide not to include your .jar file (maybe it is too big, for example),
>> 
>> 
>> I guess it would be stretching it a bit, as the jar file is 8.2 MB, and plantuml has regular continuous updates, so I would prefer to keep it dynamic.
>> 
>> 
>>> then I think your option 1 is unusable for those people who can't write to the library location because of permission problems. (Admin privileges are often necessary to install packages in the main library.)  Generally I think everyone can install packages somewhere, but users do really get confused when they have multiple library locations, possibly each containing a different version of a package.
>> 
>> So the suggested option would be to have a function, which 
>> 1) ask the user to create a directory in the home folder 
>> 2) download the jar file into that directory or, when no permission is granted, into the tmpdir()
>> 
>> Thanks, no major changes necessary for that,
>> 
>> Rainer
>> 
>> 
>>> 
>>> Duncan Murdoch
>>> 
>>> On 23/06/2020 8:18 a.m., Rainer M Krug wrote:
>>>> Hi
>>>> I have a package called `plantuml` (https://github.com/rkrug/plantuml) which converts plantuml code to UML graphs. It uses for this the java program https://plantuml.com which is Open Source.
>>>> As it is not allowed to distribute a binary with an R package, I use the approach of a function which downloads the jar file into the directory `system.file("jar/plantuml.jar", package = "plantuml?)`.
>>>> This works nicely, and at the moment, the function is called automatically before the plantuml.jar is used.
>>>> Now I would like to submit the package to CRAN. I can?t find the guidelines anymore, so I am asking here:
>>>> What is the appropriate way of handling this?
>>>> I can think of a at least two ways of making it obvious to the user, that a binary is downloaded:
>>>> 1) if the file plantuml.jar is not present, ask the user to run the function `updatePlantumlJar()` which downloads the jar to the original location in the package directory
>>>> 2) tell the user to download the file manually and to put it somewhere, where the package will find it
>>>> I would prefer the first version, as the plantuml.jar would be in the package directory, where usually nobody but the package is doing stuff.
>>>> Any suggestions on how I could make this ?CRAN conform??
>>>> Thanks a lot,
>>>> Rainer
>>>> --
>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>>> Orcid ID: 0000-0002-7490-0066
>>>> Department of Evolutionary Biology and Environmental Studies
>>>> University of Z?rich
>>>> Office Y34-J-74
>>>> Winterthurerstrasse 190
>>>> 8075 Z?rich
>>>> Switzerland
>>>> Office:    +41 (0)44 635 47 64
>>>> Cell:          +41 (0)78 630 66 57
>>>> email:      Rainer.Krug at uzh.ch
>>>>        Rainer at krugs.de
>>>> Skype:    RMkrug
>>>> PGP: 0x0F52F982
>>>> --
>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>>> Orcid ID: 0000-0002-7490-0066
>>>> Department of Evolutionary Biology and Environmental Studies
>>>> University of Z?rich
>>>> Office Y34-J-74
>>>> Winterthurerstrasse 190
>>>> 8075 Z?rich
>>>> Switzerland
>>>> Office:    +41 (0)44 635 47 64
>>>> Cell:          +41 (0)78 630 66 57
>>>> email:      Rainer.Krug at uzh.ch
>>>>        Rainer at krugs.de
>>>> Skype:    RMkrug
>>>> PGP: 0x0F52F982
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>> 
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> 
>> Orcid ID: 0000-0002-7490-0066
>> 
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> 
>> Office:    +41 (0)44 635 47 64
>> Cell:          +41 (0)78 630 66 57
>> email:      Rainer.Krug at uzh.ch
>>        Rainer at krugs.de
>> Skype:    RMkrug
>> 
>> PGP: 0x0F52F982
>> 
>> 
>> 
>> 
>>    [[alternative HTML version deleted]]
>> 
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:	+41 (0)44 635 47 64
> Cell:       	+41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
> 		Rainer at krugs.de
> Skype:     RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From @@r@h@go@|ee @end|ng |rom gm@||@com  Mon Jul 13 14:20:32 2020
From: @@r@h@go@|ee @end|ng |rom gm@||@com (Sarah Goslee)
Date: Mon, 13 Jul 2020 08:20:32 -0400
Subject: [R-pkg-devel] Unable to post messages to this group
In-Reply-To: <CY4PR07MB274376AAE86B2581769415A9BC600@CY4PR07MB2743.namprd07.prod.outlook.com>
References: <CY4PR07MB274376AAE86B2581769415A9BC600@CY4PR07MB2743.namprd07.prod.outlook.com>
Message-ID: <CAM_vjumNvqxdC2ofTBhCaNcTHJMij60ZtCYbupFHy06ie5TLxw@mail.gmail.com>

Clearly you can post messages to this group, since this message was received.

R-package-devel requires that the first time someone posts, their
message is approved by a human. After that first post, they may post
normally. It's not a problem, or anything you've done - this policy
applies to everyone, and cuts down enormously on spam since the
moderators only approve relevant posts. Since your post appeared here,
you've been cleared.

The policy is on the about page where you signed up:

https://stat.ethz.ch/mailman/listinfo/r-package-devel
You have to be a subscriber to the list in order to post any message.
Even then, your first messages are only posted after one manual
moderator approvement.

The moderation team are all volunteers, and sometimes they are busy or
away from the computer, especially on weekends.

Sarah


On Mon, Jul 13, 2020 at 5:28 AM Binit Kumar <bkumar at rocketsoftware.com> wrote:
>
> Hi Team,
> I am unable to post messages to this group and keep getting "waiting for moderator" message from bounce email i.e. "R-package-devel <r-package-devel-bounces at r-project.org>".
> Is there any criteria of sending the message to devel group?
>
>
> Thanks & Regards,
>
> Binit Kumar
>


--
Sarah Goslee (she/her)
http://www.numberwright.com


From |bec@v @end|ng |rom gm@||@com  Mon Jul 13 20:53:16 2020
From: |bec@v @end|ng |rom gm@||@com (Chuck Powell)
Date: Mon, 13 Jul 2020 14:53:16 -0400
Subject: [R-pkg-devel] Failing rhub::check_for_cran() because of data.table
Message-ID: <CALvJfh+=_xC9zytrGpwjQHVM073iKDMXzbn5JXSbx3gZnTyDWQ@mail.gmail.com>

Hi,

My first posting.  Apologies in advance if I misspeak or am asking a dumb
question.

I maintain a small package on CRAN
https://cran.r-project.org/web/packages/CGPfunctions/index.html

Source is on Github here https://github.com/ibecav/CGPfunctions/

Recently received note I needed to fix my package because of changes to
broom.  Corrections made and everything passes locally.

When I submit to rhub::check_for_cran() however it creates an error in the
development branch
*Build ID:* CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2


with:

#> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()),
versionCheck = vI[[j]]) :

1181
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1181>#>
Calls: ... loadNamespace -> withRestarts -> withOneRestart ->
doWithOneRestart

1182
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1182>#>
Execution halted

1183
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1183>#>
there is no package called 'data.table'

1184
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1184>#>
ERROR: lazy loading failed for package 'CGPfunctions'

1185
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1185>#>
* removing 'C:/Users/USERDFJOuzrklm/R/CGPfunctions'



Looking at data.table on CRAN I see there is no windows binary
Windows binaries: r-devel: not available
<https://cran.r-project.org/bin/windows/contrib/4.1/ReadMe>,


I don't use any data.table functions, I don't import it, or suggest it or
enhance it it's being pulled in through some dependency in car and/or broom.

Am I okay to submit to CRAN?  Is there a setting I can change?
Obviously data.table exists despite what Rhub is reporting.

Thank you hopefully that is a clear enough description.

Chuck

	[[alternative HTML version deleted]]


