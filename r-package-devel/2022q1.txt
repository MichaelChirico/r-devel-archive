From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jan  1 20:11:56 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 1 Jan 2022 14:11:56 -0500
Subject: [R-pkg-devel] doi confusion and Data codoc mismatches
In-Reply-To: <12a47080-a803-45e5-9feb-b501e658ddb0@gmail.com>
References: <9e255e07-f32d-c3ad-a677-f2c6190f44db@effectivedefense.org>
 <32fe7d16-cf04-cb2d-6513-047b61d5c5b7@gmail.com>
 <12a47080-a803-45e5-9feb-b501e658ddb0@gmail.com>
Message-ID: <ff6d01c2-63b4-d827-468d-f891d5db09a5@gmail.com>

On 26/12/2021 8:03 a.m., Duncan Murdoch wrote:
> I've now submitted a bug report for R:
> https://bugs.r-project.org/show_bug.cgi?id=18266 along with a suggested
> patch to remove the first of these.

And this patch was committed to the trunk by Kurt Hornik, so it should 
appear in R 4.2.0 or maybe some 4.1.x release.  Thanks Kurt!

Duncan Murdoch

> 
> Duncan Murdoch
> 
> 
> On 26/12/2021 5:55 a.m., Duncan Murdoch wrote:
>> On 26/12/2021 12:07 a.m., Spencer Graves wrote:
>>> Hello, All:
>>>
>>>
>>> 	  The latest checks on
>>> "https://github.com/sbgraves237/Ecdat/runs/4634725654?check_suite_focus=true"
>>> identify two problems I don't know how to fix:
>>>
>>>
>>> FIRST:  Data codoc mismatches from documentation object 'USnewspapers':
>>>       Variables in data frame 'USnewspapers'
>>>         Code: AdsProportion Ads_G2012dollars Ads_currentGdollars
>>>               Circ_G2012dollars Circ_currentGdollars GDP_G2012 GDP_nominalG
>>>               Population_M RevenuePerCap_2012 RevenuePerCap_nominal
>>>               Revenue_G2012dollars Revenue_currentGdollars Year
>>>               newspapers_p_GDP
>>>         Docs: Ads_G2012dollars Circ_G2012dollars Circ_currentGdollars
>>>               Revenue_G2012dollars Revenue_currentGdollars AdsProportion
>>>               Ads_currentGdollars GDP_G2012 GDP_nominalG Population_M
>>>               RevenuePerCap_2012 RevenuePerCap_nominal Year newspapers_p_GDP
>>>
>>>
>>> 	  I believe that the column names in the data.frame 'USnewspapers'
>>> match the names in the order given in the *.Rd file and the variable
>>> list following "Code" here matches that following "Docs" using, e.g.,
>>> sort(scan(what=character())).
>>
>> You can debug this by running tools::codocData("Ecdat") after the
>> package is installed.  It appears that some of the names in the docs are
>> picking up newlines, specifically the ones documented like this:
>>
>> \item{Ads_currentGdollars,
>>              Ads_G2012dollars,
>>              Circ_currentGdollars,
>>              Circ_G2012dollars,
>>              Revenue_currentGdollars,
>>              Revenue_G2012dollars}
>>
>> I think that's a bug in codocData.  A workaround is to put those all on
>> one line.  You don't get a "line too long" warning, because they'll be
>> reformatted in the display.
>>
>>>
>>>
>>> SECOND:  Found the following URLs which should use \doi (with the DOI
>>> name only):
>>>         File 'AccountantsAuditorsPct.Rd':
>>>           https://doi.org/10.18128/D010.V8.0
>>>         File 'OCC1950.Rd':
>>>           https://doi.org/10.18128/D010.V10.0
>>>
>>>
>>> 	  My concern here is that these two urls are in, e.g.,
>>> \href{https://doi.org/10.18128/D010.V8.0}{text to display to click to
>>> link to the doi url}.  If it were, e.g.,
>>> \url{https://doi.org/10.18128/D010.V8.0} I would try replacing it with
>>> \doi{10.18128/D010.V8.0}.  However, if I do that, I don't know what to
>>> do with the "text to display to click to link to the doi url".
>>
>> The first of those links to a page with this version of the reference:
>>
>> Steven Ruggles, Sarah Flood, Ronald Goeken, Josiah Grover, Erin Meyer,
>> Jose Pacas, and Matthew Sobek. Integrated Public Use Microdata Series:
>> Version 8.0 [dataset]. Minneapolis: University of Minnesota, 2018.
>> http://doi.org/10.18128/D010.V8.0
>>
>>
>> You'd get a format pretty close to that if you don't try to make the
>> title into a link, just enter it as
>>
>>      Steven Ruggles, Sarah Flood, Ronald Goeken,
>>        Josiah Grover, Erin Meyer, Jose Pacas, and
>>        Matthew Sobek (2018)
>> IPUMS
>>        USA: Version 8.0 [dataset]. Minneapolis, MN:
>>        IPUMS. \doi{10.18128/D010.V8.0}
>>
>> Duncan Murdoch
>


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Jan  3 10:43:45 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 3 Jan 2022 10:43:45 +0100
Subject: [R-pkg-devel] 
 Error in inDL(x, as.logical(local), as.logical(now),
 ...) unable to load shared object
In-Reply-To: <a891864b-ec31-d8ef-6b62-c1845048bdf2@landtucker.com>
References: <a6607f62-79d0-af0a-be36-8d052157ada4@landtucker.com>
 <34471861-2063-33b7-3605-6ecdff815ea6@gmail.com>
 <25028.35062.869522.630615@rob.eddelbuettel.com>
 <76bab54d-53a6-b181-d2ae-3a485c45c62d@landtucker.com>
 <114a796c-9951-01a5-b6f6-c6e69381ab9f@gmail.com>
 <a891864b-ec31-d8ef-6b62-c1845048bdf2@landtucker.com>
Message-ID: <b4830673-4c60-e160-48e5-a448dea0bf5a@gmail.com>


On 12/27/21 4:04 PM, Ezra Tucker wrote:
> Hi Tomas,
>
>
> Thanks again for all your great info. One last question- and maybe it's
> a stupid one. You mention the JAGS package-- I've been using xml2 as my
> kind-of template. Installing it on linux for example will fail unless
> you have the libxml2-dev package installed (at least for debian-based),
> whereas for windows it just goes and downloads the dll as part of the
> install process. Why would/should this package NOT just perform this
> action for linux as well (namely, automatically download the precompiled
> .so from somewhere else and package it in so you don't need root
> privileges to install the package)? Is this just a difference in install
> philosophy between linux and windows?

Hi Ezra,

Dirk responded in detail re Unix.

On Windows, static libraries (not dynamic) are used by R and are part of 
the toolchain (Rtools42 for R-devel and R 4.2), you just link the 
libraries from there via PKG_LIBS in your Makevars.ucrt or Makevars.win 
file. See for example rgdal for the recommended way how to do this, and 
[1] for a description.

Best
Tomas

[1] https://developer.r-project.org/WindowsBuilds/winutf8/ucrt3/howto.html

>
>
> Thanks again!
>
> -Ezra
>
> On 12/23/21 17:20, Tomas Kalibera wrote:
>> On 12/23/21 4:52 PM, Ezra Tucker wrote:
>>> Hi Tomas and Dirk,
>>>
>>>
>>> Thanks for your suggestions! Between the two, got it working. I didn't
>>> know Windows didn't do rpath, I think that you're right that setting the
>>> PATH would have helped. I haven't seen that in an R package before, so I
>>> did what was in the Rblpapi package, which was creating a couple of
>>> copies of the dll in question.
>> Well it is very exceptional that packages link to an external DLL, only
>> very few CRAN packages do (another example is packages linking to JAGS).
>> I know about these as some of them caused trouble with staged
>> installation and other with the switch to UCRT, they certainly make
>> maintaining and improving R harder. They typically won't work correctly
>> with encodings on Windows. The C++ interface is particularly tricky and
>> fragile. So, one thing is getting this to work in your package you need
>> another question is whether at all it should be published on CRAN, and
>> if that was your plan that'd be best discussed with the CRAN repository
>> maintainers. In some cases there is no other way thank linking to an
>> external DLL, but the question is always whether such package should be
>> on CRAN.
>>> On a related note, in Rblpapi Makevars.win line 47 it's downloading and
>>> extracting the compiled library from GitHub. My understanding is that
>>> one shouldn't include pre-compiled libraries in R packages for security
>>> reasons, at least not for submitting to CRAN. Is doing it this way a
>>> good way around that?
>> No, those concerns apply and are unrelated in principle to using an
>> external DLL. My understanding is that this was also an exception
>> discussed with the CRAN repository maintainers, but I don't know the
>> case specifically.
>>
>> Best
>> Tomas
>>
>>
>>> Thanks again!
>>>
>>> -Ezra
>>>
>>>
>>> On 12/23/21 09:34, Dirk Eddelbuettel wrote:
>>>> On 23 December 2021 at 11:07, Tomas Kalibera wrote:
>>>> | You can have a look at CRAN package Rblpapi which is using an external DLL.
>>>>
>>>> Yes with one big caveat: You have to make sure the library follows what is
>>>> the "hour-glass pattern": it needs to have an internal (the "narrow" part) C
>>>> library covering the wider underlying library and offered via a wider header.
>>>>
>>>> Only C linkage works across different compiler families. You just cannot use
>>>> a Virtual C++-made Windows DLL from R's MinGW g++ compiler with C++.
>>>>
>>>> But you can use C linkage.  So some libraries (such as the Bloomberg API used
>>>> in Rblpapi and the TileDB API used in the tiledb package (when not using a
>>>> local build) can use a library following the hourglass pattern:
>>>>
>>>>      - "wide" bottom layer (may be C++ or C) with the core implementation
>>>>
>>>>      - "narrow" C layer accessing the bottom and priving an API providing via C
>>>>        which profits from C's portable foreign function interface
>>>>
>>>>      - "wide" layer on top via a header-only C++ file accesssing the C and
>>>>        which the C++ compiler optimizes away so that the C API is used for linking
>>>>
>>>> Sounds complicated, but works great.
>>>>
>>>> Good detail is in a hour-long but not-too-technical talk here
>>>>
>>>>      https://www.youtube.com/watch?v=PVYdHDm0q6Y
>>>>
>>>> and slides etc are here
>>>>
>>>>      https://github.com/CppCon/CppCon2014/tree/master/Presentations/Hourglass%20Interfaces%20for%20C%2B%2B%20APIs
>>>>
>>>> Dirk
>>>>
>>>> --
>>>> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Tue Jan  4 19:28:09 2022
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Tue, 4 Jan 2022 12:28:09 -0600
Subject: [R-pkg-devel] doi confusion and Data codoc mismatches--AND THE
 VALUE OF GITHUB
In-Reply-To: <ff6d01c2-63b4-d827-468d-f891d5db09a5@gmail.com>
References: <9e255e07-f32d-c3ad-a677-f2c6190f44db@effectivedefense.org>
 <32fe7d16-cf04-cb2d-6513-047b61d5c5b7@gmail.com>
 <12a47080-a803-45e5-9feb-b501e658ddb0@gmail.com>
 <ff6d01c2-63b4-d827-468d-f891d5db09a5@gmail.com>
Message-ID: <e8acb9ff-52f9-6288-5515-0626ccfe44be@effectivedefense.org>

	  Thanks to Duncan and Kurt for looking into this, recommending a patch 
for my code, and implementing a change to codocData.


VALUE OF GITHUB:  This exchange illustrates the value of GitHub:


	  1.  It made it easier for Duncan to diagnose the problem and 
recommend fixes both to me and to Kurt.


	  2.  I missed this email when it arrived five days after my post but 
found it after noticing a pull request from Duncan on GitHub.  I 
implemented it, and it worked!  Then I checked for a reply to my earlier 
post, and found Duncan's comment below.


	  Spencer


On 1/1/22 1:11 PM, Duncan Murdoch wrote:
> On 26/12/2021 8:03 a.m., Duncan Murdoch wrote:
>> I've now submitted a bug report for R:
>> https://bugs.r-project.org/show_bug.cgi?id=18266 along with a suggested
>> patch to remove the first of these.
> 
> And this patch was committed to the trunk by Kurt Hornik, so it should 
> appear in R 4.2.0 or maybe some 4.1.x release.? Thanks Kurt!
> 
> Duncan Murdoch
> 
>>
>> Duncan Murdoch
>>
>>
>> On 26/12/2021 5:55 a.m., Duncan Murdoch wrote:
>>> On 26/12/2021 12:07 a.m., Spencer Graves wrote:
>>>> Hello, All:
>>>>
>>>>
>>>> ????? The latest checks on
>>>> "https://github.com/sbgraves237/Ecdat/runs/4634725654?check_suite_focus=true" 
>>>>
>>>> identify two problems I don't know how to fix:
>>>>
>>>>
>>>> FIRST:? Data codoc mismatches from documentation object 'USnewspapers':
>>>> ????? Variables in data frame 'USnewspapers'
>>>> ??????? Code: AdsProportion Ads_G2012dollars Ads_currentGdollars
>>>> ????????????? Circ_G2012dollars Circ_currentGdollars GDP_G2012 
>>>> GDP_nominalG
>>>> ????????????? Population_M RevenuePerCap_2012 RevenuePerCap_nominal
>>>> ????????????? Revenue_G2012dollars Revenue_currentGdollars Year
>>>> ????????????? newspapers_p_GDP
>>>> ??????? Docs: Ads_G2012dollars Circ_G2012dollars Circ_currentGdollars
>>>> ????????????? Revenue_G2012dollars Revenue_currentGdollars 
>>>> AdsProportion
>>>> ????????????? Ads_currentGdollars GDP_G2012 GDP_nominalG Population_M
>>>> ????????????? RevenuePerCap_2012 RevenuePerCap_nominal Year 
>>>> newspapers_p_GDP
>>>>
>>>>
>>>> ????? I believe that the column names in the data.frame 'USnewspapers'
>>>> match the names in the order given in the *.Rd file and the variable
>>>> list following "Code" here matches that following "Docs" using, e.g.,
>>>> sort(scan(what=character())).
>>>
>>> You can debug this by running tools::codocData("Ecdat") after the
>>> package is installed.? It appears that some of the names in the docs are
>>> picking up newlines, specifically the ones documented like this:
>>>
>>> \item{Ads_currentGdollars,
>>> ???????????? Ads_G2012dollars,
>>> ???????????? Circ_currentGdollars,
>>> ???????????? Circ_G2012dollars,
>>> ???????????? Revenue_currentGdollars,
>>> ???????????? Revenue_G2012dollars}
>>>
>>> I think that's a bug in codocData.? A workaround is to put those all on
>>> one line.? You don't get a "line too long" warning, because they'll be
>>> reformatted in the display.
>>>
>>>>
>>>>
>>>> SECOND:? Found the following URLs which should use \doi (with the DOI
>>>> name only):
>>>> ??????? File 'AccountantsAuditorsPct.Rd':
>>>> ????????? https://doi.org/10.18128/D010.V8.0
>>>> ??????? File 'OCC1950.Rd':
>>>> ????????? https://doi.org/10.18128/D010.V10.0
>>>>
>>>>
>>>> ????? My concern here is that these two urls are in, e.g.,
>>>> \href{https://doi.org/10.18128/D010.V8.0}{text to display to click to
>>>> link to the doi url}.? If it were, e.g.,
>>>> \url{https://doi.org/10.18128/D010.V8.0} I would try replacing it with
>>>> \doi{10.18128/D010.V8.0}.? However, if I do that, I don't know what to
>>>> do with the "text to display to click to link to the doi url".
>>>
>>> The first of those links to a page with this version of the reference:
>>>
>>> Steven Ruggles, Sarah Flood, Ronald Goeken, Josiah Grover, Erin Meyer,
>>> Jose Pacas, and Matthew Sobek. Integrated Public Use Microdata Series:
>>> Version 8.0 [dataset]. Minneapolis: University of Minnesota, 2018.
>>> http://doi.org/10.18128/D010.V8.0
>>>
>>>
>>> You'd get a format pretty close to that if you don't try to make the
>>> title into a link, just enter it as
>>>
>>> ???? Steven Ruggles, Sarah Flood, Ronald Goeken,
>>> ?????? Josiah Grover, Erin Meyer, Jose Pacas, and
>>> ?????? Matthew Sobek (2018)
>>> IPUMS
>>> ?????? USA: Version 8.0 [dataset]. Minneapolis, MN:
>>> ?????? IPUMS. \doi{10.18128/D010.V8.0}
>>>
>>> Duncan Murdoch
>>
>


From |gor|@|tu| @end|ng |rom gm@||@com  Wed Jan  5 21:15:20 2022
From: |gor|@|tu| @end|ng |rom gm@||@com (Igor L)
Date: Wed, 5 Jan 2022 17:15:20 -0300
Subject: [R-pkg-devel] Possible bug report/false positive
Message-ID: <CAHGVjrnkv6tR_rm4ZTfU4kX8Ud0DsrB_n3MrndR5w74T=Ahm4A@mail.gmail.com>

To whom it may concern,
I'm using devtools::check() and trying to upload my package to CRAN (The
code is available in github
<https://github.com/igorlaltuf/dail/blob/main/R/requests.R>), but I'm not
able to understand why the function is showing 1 NOTE:


-- R CMD check results
------------------------------------------------------------------------------------
dail 0.0.0.9000 ----
Duration: 17.9s
> checking R code for possible problems ... NOTE
  Found an obsolete/platform-specific call in the following function:
    'requests'
  Found the platform-specific device:
    'X11'
  dev.new() is the preferred way to open a new device, in the unlikely
  event one is needed.
  requests: no visible binding for global variable 'protocolo'
  Undefined global functions or variables:
    protocolo
0 errors ? | 0 warnings ? | 1 note x


After uploading it to CRAN, I noticed that: (1) this only happens on
debian; and (2) as pointed out in this answer
<https://stackoverflow.com/questions/70585796/unable-to-understand-1-note-in-devtoolscheck-caused-by-a-platform-specific-d>,
the code might be understanding X11 as a function from package::grDevices
<https://github.com/wch/r-source/blob/b1434842427cc01b7e8301495fe0f75ef519ac01/src/library/tools/R/QC.R#L6384-L6391>
.
Does anyone know the reason for this and how to solve it?

Best regards,
*Igor Laltuf Marques*
https://igorlaltuf.github.io/

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Jan  6 15:37:01 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 6 Jan 2022 17:37:01 +0300
Subject: [R-pkg-devel] Possible bug report/false positive
In-Reply-To: <CAHGVjrnkv6tR_rm4ZTfU4kX8Ud0DsrB_n3MrndR5w74T=Ahm4A@mail.gmail.com>
References: <CAHGVjrnkv6tR_rm4ZTfU4kX8Ud0DsrB_n3MrndR5w74T=Ahm4A@mail.gmail.com>
Message-ID: <20220106173701.45dd00d6@Tarkus>

On Wed, 5 Jan 2022 17:15:20 -0300
Igor L <igorlaltuf at gmail.com> wrote:

>   Found the platform-specific device:
>    'X11'

> how to solve it?

One of the tricks that work (in the sense that calls to functions using
non-standard evaluation don't result in warnings about "Undefined
global functions or variables") is to declare the variables locally,
inside the function:

protocolo <- X1 <- X2 <- ... X21 <- NULL
var <- readr::read_csv2(...) ...

Alternatively, since you know that the file always has 21 columns,
you can pass the variable to `colnames<-` instead of dplyr::rename,
together with a vector of column names you already have in the
nomes.colunas vector. This way, you won't need to declare the 21 dummy
variable.

By the way, you shouldn't declare at least download.file and unzip
functions as global variables. Instead, import them from the utils
package in your NAMESPACE (or using the @importFrom Roxygen tag, if you
use Roxygen).

There are other ways the package code could be improved:

 - There doesn't seem to be a need for the dynamically-named variable
   you create using assign(paste0('pedidos', i), var) and remove soon
   after; you can just use `var` instead of get(paste0('pedidos', i)).
 - If you're worried about leaving temporary variables around, move
   the loop body into a separate function so that anything you don't
   return from it would be cleaned up automatically.
 - You can future-proof your package by creating the URLs with
   paste0('https://dadosabertos-download.cgu.gov.br/FalaBR/Arquivos_FalaBR_Filtrado/Arquivos_csv_',
   year, '.zip') instead of hard-coding their list. It seems likely to
   me that once the 2022 Right to Information Law report is available,
   it'll have a predictable URL. If not, then you'll update the
   package (as you were going to anyway).
 - If you need to iterate over indices in a vector, use for (idx in
   seq_along(vector)) instead of for (i in vector) and match() to
   find the index. Though in this case, the code can be modified to
   avoid the need for the index in the loop body.

-- 
Best regards,
Ivan


From |gor|@|tu| @end|ng |rom gm@||@com  Thu Jan  6 22:56:45 2022
From: |gor|@|tu| @end|ng |rom gm@||@com (Igor L)
Date: Thu, 6 Jan 2022 18:56:45 -0300
Subject: [R-pkg-devel] Possible bug report/false positive
In-Reply-To: <20220106173701.45dd00d6@Tarkus>
References: <CAHGVjrnkv6tR_rm4ZTfU4kX8Ud0DsrB_n3MrndR5w74T=Ahm4A@mail.gmail.com>
 <20220106173701.45dd00d6@Tarkus>
Message-ID: <CAHGVjrnm2hj2bTPKru6rVcCbF_fL_M1wuK8X5zoD+o7jjQEo2Q@mail.gmail.com>

Ivan,
Declaring the variables inside the function solved the problem (protocolo
<- X1 <- X2 <- ... X21 <- NULL).
Thanks for the help and suggestions for improving the code.
Best Regards,
Igor

Em qui., 6 de jan. de 2022 ?s 11:37, Ivan Krylov <krylov.r00t at gmail.com>
escreveu:

> On Wed, 5 Jan 2022 17:15:20 -0300
> Igor L <igorlaltuf at gmail.com> wrote:
>
> >   Found the platform-specific device:
> >    'X11'
>
> > how to solve it?
>
> One of the tricks that work (in the sense that calls to functions using
> non-standard evaluation don't result in warnings about "Undefined
> global functions or variables") is to declare the variables locally,
> inside the function:
>
> protocolo <- X1 <- X2 <- ... X21 <- NULL
> var <- readr::read_csv2(...) ...
>
> Alternatively, since you know that the file always has 21 columns,
> you can pass the variable to `colnames<-` instead of dplyr::rename,
> together with a vector of column names you already have in the
> nomes.colunas vector. This way, you won't need to declare the 21 dummy
> variable.
>
> By the way, you shouldn't declare at least download.file and unzip
> functions as global variables. Instead, import them from the utils
> package in your NAMESPACE (or using the @importFrom Roxygen tag, if you
> use Roxygen).
>
> There are other ways the package code could be improved:
>
>  - There doesn't seem to be a need for the dynamically-named variable
>    you create using assign(paste0('pedidos', i), var) and remove soon
>    after; you can just use `var` instead of get(paste0('pedidos', i)).
>  - If you're worried about leaving temporary variables around, move
>    the loop body into a separate function so that anything you don't
>    return from it would be cleaned up automatically.
>  - You can future-proof your package by creating the URLs with
>    paste0('
> https://dadosabertos-download.cgu.gov.br/FalaBR/Arquivos_FalaBR_Filtrado/Arquivos_csv_
> ',
>    year, '.zip') instead of hard-coding their list. It seems likely to
>    me that once the 2022 Right to Information Law report is available,
>    it'll have a predictable URL. If not, then you'll update the
>    package (as you were going to anyway).
>  - If you need to iterate over indices in a vector, use for (idx in
>    seq_along(vector)) instead of for (i in vector) and match() to
>    find the index. Though in this case, the code can be modified to
>    avoid the need for the index in the loop body.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From r|cc@r| @end|ng |rom hotm@||@|t  Tue Jan 11 18:44:03 2022
From: r|cc@r| @end|ng |rom hotm@||@|t (riccardo)
Date: Tue, 11 Jan 2022 18:44:03 +0100
Subject: [R-pkg-devel] Fix JFM package problem
Message-ID: <AM5PR0601MB224466DDB533913F015A036FD7519@AM5PR0601MB2244.eurprd06.prod.outlook.com>

Hallo,

I wish to submit the following error rising running an example in a rcpp 
function *only *in Debian check:

> ### Name: least_square_plane_rcpp
> ### Title: returns the coefficients of the least square plane and the
> ###   relative medium square error
> ### Aliases: least_square_plane_rcpp
> 
> ### ** Examples
> 
> list_xyz<-matrix(data = c(-10.0, -10.0, -15.0 ,10.0, -10.0,
+  -5.0, -10.0, 10.0, 5.0, 10.0, 10.0 ,15.0)
+ ,nrow = 4,ncol = 3, byrow = TRUE)
> least_square_plane_rcpp(list_xyz)

warning: eig_sym(): given matrix is not symmetric
Error in least_square_plane_rcpp(list_xyz) :
   Mat::operator(): index out of bounds
Execution halted

This error raised also in window OS, but was fixed changing input 
variable in Rcpp::NumericMatrix.

Complete check is at:
https://win-builder.r-project.org/incoming_pretest/JFM_1.0_20220111_170553/Debian/00check.log

Every suggestion is welcome.

Thank you in advance

Best Regards

Riccardo

	[[alternative HTML version deleted]]


