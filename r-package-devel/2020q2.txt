From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Fri Apr  3 22:03:12 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Fri, 3 Apr 2020 15:03:12 -0500
Subject: [R-pkg-devel] GitHub problems
In-Reply-To: <24791f17-dadf-4dc2-bbf5-4d9d100afdc2@effectivedefense.org>
References: <9524ce4c-4408-5e0b-1826-6291ccf5c54a@effectivedefense.org>
 <CAJmOi+N7M3+YstV7TW7j+t5Qc=DsMJbq38XDp5ppDB3RU-+41w@mail.gmail.com>
 <24791f17-dadf-4dc2-bbf5-4d9d100afdc2@effectivedefense.org>
Message-ID: <71d38934-2cac-aaf2-c5b2-5006ae3967ca@effectivedefense.org>

Hello, All:


 ????? I've been unable to get SSH to work with 
"https://github.com/JamesRamsay5/fda", documented in my email to this 
group almost 3 weeks ago.? I've been able to do "git clone 
https://sbgraves237:<GitHub-password>@github.com/JamesRamsay5/fda", then 
change a file, do "git commit" and "git push".


 ????? However, this has my GitHub password in a plain text ".git" file 
on my hard drive.? I think the hard drive on my computer is encrypted, 
so maybe that's not a problem.


 ????? Am I not allowed to use SSH with a GitHub repository that's not 
my own?


 ????? Thanks,
 ????? Spencer Graves


p.s.? Since my previous email, Ramsay added "README.md" to that 
repository.? I can do "git clone" and get it, then edit it, then "git 
commit".? However, "git push" keeps giving me errors:


git push
remote: Invalid username or password.
fatal: Authentication failed for 
'https://<token>@github.com/JamesRamsay5/fda/'


 ????? A few hours ago, the owner, JamesRamsay5, went to "Settings" > 
"Manage access", then invited me as a collaborator.? I got an email 
asking me to "view invitation", which I did.? I got another email 
saying, "Hey there, we?re just writing to let you know that you?ve been 
automatically subscribed to a repository on GitHub." Sadly, I still 
couldn't access it, so I I deleted my token and created a new one.? I 
also deleted my previous local clone of "fda" and recreated it using? 
"git clone https://<token>@github.com/JamesRamsay5/fda".? Then I did a 
test edit to the one file in that repository, README.md.? I think did 
'git commit README.md -m "tst edit"'.? Then "git push" keeps giving me 
the error just mentioned.


 > sessionInfo()
R version 3.6.3 (2020-02-29)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Catalina 10.15.4

Matrix products: default
BLAS: 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
LAPACK: 
/Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats???? graphics? grDevices utils???? datasets
[6] methods?? base

loaded via a namespace (and not attached):
[1] compiler_3.6.3 tools_3.6.3


On 2020-03-14 02:33, Spencer Graves wrote:
> Thanks very much.
>
>
> I deleted my token.? I will forward your comment to Jim Ramsay to try 
> to figure out the permissions question.
>
>
> Spencer
>
>
> On 2020-03-14 01:35, Hugh Parsonage wrote:
>>
>> You published your token. You should revoke it.
>>
>> You probably don?t have the right permissions associated with git.
>>
>>
>>
>> On Sat, 14 Mar 2020 at 2:14 pm, Spencer Graves 
>> <spencer.graves at effectivedefense.org 
>> <mailto:spencer.graves at effectivedefense.org>> wrote:
>>
>>     Hello, All:
>>
>>
>>     ?????? What do you suggest Jim Ramsay and I do to migrate the fda
>>     package to GitHub?
>>
>>
>>     ?????? Jim successfully created an empty repository:
>>
>>
>>     https://github.com/JamesRamsay5/fda
>>
>>
>>     ?????? He told me he had officially made me a "contributor".? I did:
>>
>>
>>     git clone https://<token>@github.com/JamesRamsay5/fda
>>     <http://github.com/JamesRamsay5/fda>
>>     Cloning into 'fda'...
>>     warning: You appear to have cloned an empty repository.
>>     Checking connectivity... done.
>>
>>
>>     ???? ? Then I copied files into this directory, did "git add" and
>>     "git
>>     commit".
>>
>>
>>     ?????? Then I did "git push", and it wouldn't let me:
>>
>>
>>     SpenceravessMBP:fda sbgraves$ git push
>>     remote: Permission to JamesRamsay5/fda.git denied to sbgraves237.
>>     fatal: unable to access
>>     'https://892da70262d9a4faa857b8602145414d6b21085b at github.com/JamesRamsay5/fda/':
>>
>>     The requested URL returned error: 403
>>
>>
>>     ?????? Suggestions?
>>     ?????? Thanks,
>>     ?????? Spencer Graves
>>
>>     ______________________________________________
>>     R-package-devel at r-project.org
>>     <mailto:R-package-devel at r-project.org> mailing list
>>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>


	[[alternative HTML version deleted]]


From M@x@Turgeon @end|ng |rom um@n|tob@@c@  Fri Apr  3 22:17:34 2020
From: M@x@Turgeon @end|ng |rom um@n|tob@@c@ (Max Turgeon)
Date: Fri, 3 Apr 2020 20:17:34 +0000
Subject: [R-pkg-devel] GitHub problems
In-Reply-To: <71d38934-2cac-aaf2-c5b2-5006ae3967ca@effectivedefense.org>
References: <9524ce4c-4408-5e0b-1826-6291ccf5c54a@effectivedefense.org>
 <CAJmOi+N7M3+YstV7TW7j+t5Qc=DsMJbq38XDp5ppDB3RU-+41w@mail.gmail.com>
 <24791f17-dadf-4dc2-bbf5-4d9d100afdc2@effectivedefense.org>,
 <71d38934-2cac-aaf2-c5b2-5006ae3967ca@effectivedefense.org>
Message-ID: <bda9c0780cba4674a32bfea51be97d9b@umanitoba.ca>

Hi Spencer,


Did you follow the instructions here? https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh


Once the key is setup, you should be able to do "git clone git at github.com:JamesRamsay5/fda.git", without any need to input a token or a password in the command. Similarly, git push/pull/fetch should all work seamlessly.


This is how I've used Github for many years, and it's always worked fine.


Best,

Max

Connecting to GitHub with SSH - GitHub Help<https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh>
help.github.com
You can connect to GitHub using SSH.





Max Turgeon
Assistant Professor
Department of Statistics
Department of Computer Science
University of Manitoba
maxturgeon.ca<http://maxturgeon.ca>


________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Spencer Graves <spencer.graves at effectivedefense.org>
Sent: April 3, 2020 3:03:12 PM
To: Hugh Parsonage
Cc: List r-package-devel
Subject: Re: [R-pkg-devel] GitHub problems

********************************************************
Caution: This message was sent from outside the University of Manitoba.
********************************************************

Hello, All:


       I've been unable to get SSH to work with
"https://github.com/JamesRamsay5/fda", documented in my email to this
group almost 3 weeks ago.  I've been able to do "git clone
https://sbgraves237:<GitHub-password>@github.com/JamesRamsay5/fda", then
change a file, do "git commit" and "git push".


       However, this has my GitHub password in a plain text ".git" file
on my hard drive.  I think the hard drive on my computer is encrypted,
so maybe that's not a problem.


       Am I not allowed to use SSH with a GitHub repository that's not
my own?


       Thanks,
       Spencer Graves


p.s.  Since my previous email, Ramsay added "README.md" to that
repository.  I can do "git clone" and get it, then edit it, then "git
commit".  However, "git push" keeps giving me errors:


git push
remote: Invalid username or password.
fatal: Authentication failed for
'https://<token>@github.com/JamesRamsay5/fda/'


       A few hours ago, the owner, JamesRamsay5, went to "Settings" >
"Manage access", then invited me as a collaborator.  I got an email
asking me to "view invitation", which I did.  I got another email
saying, "Hey there, we?re just writing to let you know that you?ve been
automatically subscribed to a repository on GitHub." Sadly, I still
couldn't access it, so I I deleted my token and created a new one.  I
also deleted my previous local clone of "fda" and recreated it using
"git clone https://<token>@github.com/JamesRamsay5/fda".  Then I did a
test edit to the one file in that repository, README.md.  I think did
'git commit README.md -m "tst edit"'.  Then "git push" keeps giving me
the error just mentioned.


 > sessionInfo()
R version 3.6.3 (2020-02-29)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Catalina 10.15.4

Matrix products: default
BLAS:
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
LAPACK:
/Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets
[6] methods   base

loaded via a namespace (and not attached):
[1] compiler_3.6.3 tools_3.6.3


On 2020-03-14 02:33, Spencer Graves wrote:
> Thanks very much.
>
>
> I deleted my token.  I will forward your comment to Jim Ramsay to try
> to figure out the permissions question.
>
>
> Spencer
>
>
> On 2020-03-14 01:35, Hugh Parsonage wrote:
>>
>> You published your token. You should revoke it.
>>
>> You probably don?t have the right permissions associated with git.
>>
>>
>>
>> On Sat, 14 Mar 2020 at 2:14 pm, Spencer Graves
>> <spencer.graves at effectivedefense.org
>> <mailto:spencer.graves at effectivedefense.org>> wrote:
>>
>>     Hello, All:
>>
>>
>>            What do you suggest Jim Ramsay and I do to migrate the fda
>>     package to GitHub?
>>
>>
>>            Jim successfully created an empty repository:
>>
>>
>>     https://github.com/JamesRamsay5/fda
>>
>>
>>            He told me he had officially made me a "contributor".  I did:
>>
>>
>>     git clone https://<token>@github.com/JamesRamsay5/fda
>>     <http://github.com/JamesRamsay5/fda>
>>     Cloning into 'fda'...
>>     warning: You appear to have cloned an empty repository.
>>     Checking connectivity... done.
>>
>>
>>            Then I copied files into this directory, did "git add" and
>>     "git
>>     commit".
>>
>>
>>            Then I did "git push", and it wouldn't let me:
>>
>>
>>     SpenceravessMBP:fda sbgraves$ git push
>>     remote: Permission to JamesRamsay5/fda.git denied to sbgraves237.
>>     fatal: unable to access
>>     'https://892da70262d9a4faa857b8602145414d6b21085b at github.com/JamesRamsay5/fda/':
>>
>>     The requested URL returned error: 403
>>
>>
>>            Suggestions?
>>            Thanks,
>>            Spencer Graves
>>
>>     ______________________________________________
>>     R-package-devel at r-project.org
>>     <mailto:R-package-devel at r-project.org> mailing list
>>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>


        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Fri Apr  3 22:45:51 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Fri, 3 Apr 2020 15:45:51 -0500
Subject: [R-pkg-devel] GitHub problems
In-Reply-To: <bda9c0780cba4674a32bfea51be97d9b@umanitoba.ca>
References: <9524ce4c-4408-5e0b-1826-6291ccf5c54a@effectivedefense.org>
 <CAJmOi+N7M3+YstV7TW7j+t5Qc=DsMJbq38XDp5ppDB3RU-+41w@mail.gmail.com>
 <24791f17-dadf-4dc2-bbf5-4d9d100afdc2@effectivedefense.org>
 <71d38934-2cac-aaf2-c5b2-5006ae3967ca@effectivedefense.org>
 <bda9c0780cba4674a32bfea51be97d9b@umanitoba.ca>
Message-ID: <07f2367a-d7d8-1194-19e2-337fd94bb922@effectivedefense.org>

Hi, Max et al.:


 ??? ? With SSH established:


git clone git at github.com:JamesRamsay5/fda.git


 ??? ? Worked.


 ????? I had tried something like "git clone 
git at github.com:JamesRamsay5/fda.git" before, but I either did not have 
that exact syntax or I tried that before I had SSH.


 ????? Thanks again,
 ????? Spencer Graves


On 2020-04-03 15:17, Max Turgeon wrote:
>
> Hi Spencer,
>
>
> Did you follow the instructions here? 
> https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh
>
>
> Once the key is setup, you should be able to do "git clone 
> git at github.com:JamesRamsay5/fda.git", without any need to input a 
> token or a password in the command. Similarly, git push/pull/fetch 
> should all work seamlessly.
>
>
> This is how I've used Github for many years, and it's always worked fine.
>
>
> Best,
>
> Max
>
> Connecting to GitHub with SSH - GitHub Help 
> <https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh>
> help.github.com
> You can connect to GitHub using SSH.
>
>
>
>
> Max Turgeon
> Assistant Professor
> Department of Statistics
> Department of Computer Science
> University of Manitoba
> maxturgeon.ca <http://maxturgeon.ca>
>
>
> ------------------------------------------------------------------------
> *From:* R-package-devel <r-package-devel-bounces at r-project.org> on 
> behalf of Spencer Graves <spencer.graves at effectivedefense.org>
> *Sent:* April 3, 2020 3:03:12 PM
> *To:* Hugh Parsonage
> *Cc:* List r-package-devel
> *Subject:* Re: [R-pkg-devel] GitHub problems
> ********************************************************
> Caution: This message was sent from outside the University of Manitoba.
> ********************************************************
>
> Hello, All:
>
>
> ?????? I've been unable to get SSH to work with
> "https://github.com/JamesRamsay5/fda", documented in my email to this
> group almost 3 weeks ago.? I've been able to do "git clone
> https://sbgraves237:<GitHub-password>@github.com/JamesRamsay5/fda", then
> change a file, do "git commit" and "git push".
>
>
> ?????? However, this has my GitHub password in a plain text ".git" file
> on my hard drive.? I think the hard drive on my computer is encrypted,
> so maybe that's not a problem.
>
>
> ?????? Am I not allowed to use SSH with a GitHub repository that's not
> my own?
>
>
> ?????? Thanks,
> ?????? Spencer Graves
>
>
> p.s.? Since my previous email, Ramsay added "README.md" to that
> repository.? I can do "git clone" and get it, then edit it, then "git
> commit".? However, "git push" keeps giving me errors:
>
>
> git push
> remote: Invalid username or password.
> fatal: Authentication failed for
> 'https://<token>@github.com/JamesRamsay5/fda/'
>
>
> ?????? A few hours ago, the owner, JamesRamsay5, went to "Settings" >
> "Manage access", then invited me as a collaborator.? I got an email
> asking me to "view invitation", which I did.? I got another email
> saying, "Hey there, we?re just writing to let you know that you?ve been
> automatically subscribed to a repository on GitHub." Sadly, I still
> couldn't access it, so I I deleted my token and created a new one.? I
> also deleted my previous local clone of "fda" and recreated it using
> "git clone https://<token>@github.com/JamesRamsay5/fda".? Then I did a
> test edit to the one file in that repository, README.md.? I think did
> 'git commit README.md -m "tst edit"'.? Then "git push" keeps giving me
> the error just mentioned.
>
>
> ?> sessionInfo()
> R version 3.6.3 (2020-02-29)
> Platform: x86_64-apple-darwin15.6.0 (64-bit)
> Running under: macOS Catalina 10.15.4
>
> Matrix products: default
> BLAS:
> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
> LAPACK:
> /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib
>
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets
> [6] methods?? base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.6.3 tools_3.6.3
>
>
> On 2020-03-14 02:33, Spencer Graves wrote:
> > Thanks very much.
> >
> >
> > I deleted my token.? I will forward your comment to Jim Ramsay to try
> > to figure out the permissions question.
> >
> >
> > Spencer
> >
> >
> > On 2020-03-14 01:35, Hugh Parsonage wrote:
> >>
> >> You published your token. You should revoke it.
> >>
> >> You probably don?t have the right permissions associated with git.
> >>
> >>
> >>
> >> On Sat, 14 Mar 2020 at 2:14 pm, Spencer Graves
> >> <spencer.graves at effectivedefense.org
> >> <mailto:spencer.graves at effectivedefense.org>> wrote:
> >>
> >>???? Hello, All:
> >>
> >>
> >>???? ?????? What do you suggest Jim Ramsay and I do to migrate the fda
> >>???? package to GitHub?
> >>
> >>
> >>???? ?????? Jim successfully created an empty repository:
> >>
> >>
> >> https://github.com/JamesRamsay5/fda
> >>
> >>
> >>???? ?????? He told me he had officially made me a "contributor".? I 
> did:
> >>
> >>
> >>???? git clone https://<token>@github.com/JamesRamsay5/fda
> >>???? <http://github.com/JamesRamsay5/fda>
> >>???? Cloning into 'fda'...
> >>???? warning: You appear to have cloned an empty repository.
> >>???? Checking connectivity... done.
> >>
> >>
> >>???? ???? ? Then I copied files into this directory, did "git add" and
> >>???? "git
> >>???? commit".
> >>
> >>
> >>???? ?????? Then I did "git push", and it wouldn't let me:
> >>
> >>
> >>???? SpenceravessMBP:fda sbgraves$ git push
> >>???? remote: Permission to JamesRamsay5/fda.git denied to sbgraves237.
> >>???? fatal: unable to access
> >>???? 
> 'https://892da70262d9a4faa857b8602145414d6b21085b at github.com/JamesRamsay5/fda/':
> >>
> >>???? The requested URL returned error: 403
> >>
> >>
> >>???? ?????? Suggestions?
> >>???? ?????? Thanks,
> >>???? ?????? Spencer Graves
> >>
> >>???? ______________________________________________
> >>???? R-package-devel at r-project.org
> >>???? <mailto:R-package-devel at r-project.org> mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >
>
>
> ??????? [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


	[[alternative HTML version deleted]]


From |enz @end|ng |rom |mb|@un|-|re|burg@de  Mon Apr  6 14:21:29 2020
From: |enz @end|ng |rom |mb|@un|-|re|burg@de (Stefan Lenz IMBI)
Date: Mon, 06 Apr 2020 14:21:29 +0200
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
Message-ID: <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>

Dear all,

I just submitted the new package "JuliaConnectoR" to CRAN.
(See https://github.com/stefan-m-lenz/JuliaConnectoR )
The submission does not pass the automatic checks because of two notes (see below).
One note is simply that I am a new submitter.
The other note is because of the the use of "attach".
But I am certain that I am using "attach" in the right way. In its documentation, under "Good practice" , it says,
"In programming, functions should not change the search path unless that is their purpose."
Here this is exactly the purpose because one of the main functionalities of the package is to add Julia functions to the search path.
Can anybody help me with this?
Best wishes
Stefan

----------------urspr?ngliche Nachricht-----------------
Von: Stefan Lenz [Stefan-M-Lenz at web.de ]
An: lenz at imbi.uni-freiburg.de 
Datum: Mon, 6 Apr 2020 14:04:21 +0200
----------------------------------------------------------
>
>
>Gesendet: Montag, 06. April 2020 um 13:04 Uhr
>Von: ligges at statistik.tu-dortmund.de 
>An: stefan-m-lenz at web.de 
>Cc: CRAN-submissions at R-project.org 
>Betreff: [CRAN-pretest-archived] CRAN submission JuliaConnectoR 0.5.0
>Dear maintainer,
>
>package JuliaConnectoR_0.5.0.tar.gz does not pass the incoming checks 
>automatically, please see the following pre-tests:
>Windows: 
>Status: 2 NOTEs
>Debian: 
>Status: 2 NOTEs
>
>Please fix all problems and resubmit a fixed version via the webform.
>If you are not sure how to fix the problems shown, please ask for help on the 
>R-package-devel mailing list:
>
>If you are fairly certain the rejection is a false positive, please reply-all to this 
>message and explain.
>
>More details are given in the directory:
>
>The files will be removed after roughly 7 days.
>
>No strong reverse dependencies to be checked.
>
>Best regards,
>CRAN teams' auto-check service
>Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
>Check: CRAN incoming feasibility, Result: NOTE
>Maintainer: 'Stefan Lenz stefan-m-lenz at web.de '
>
>New submission
>
>Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
>Check: R code for possible problems, Result: NOTE
>Found the following calls to attach():
>File 'JuliaConnectoR/R/importing.R':
>attach(funenv, name = envName)
>See section 'Good practice' in '?attach'.
 

__________________________________________________
Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de 
	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Mon Apr  6 14:38:34 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 6 Apr 2020 08:38:34 -0400
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
Message-ID: <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>

  Just reply to the CRAN maintainers and explain this situation.  It?s
slightly buried, but the e-mail you received does say:

> If you are fairly certain the rejection is a false positive, please reply-all to this
> message and explain.

  cheers
    Ben Bolker

On Mon, Apr 6, 2020 at 8:28 AM Stefan Lenz IMBI
<lenz at imbi.uni-freiburg.de> wrote:
>
> Dear all,
>
> I just submitted the new package "JuliaConnectoR" to CRAN.
> (See https://github.com/stefan-m-lenz/JuliaConnectoR )
> The submission does not pass the automatic checks because of two notes (see below).
> One note is simply that I am a new submitter.
> The other note is because of the the use of "attach".
> But I am certain that I am using "attach" in the right way. In its documentation, under "Good practice" , it says,
> "In programming, functions should not change the search path unless that is their purpose."
> Here this is exactly the purpose because one of the main functionalities of the package is to add Julia functions to the search path.
> Can anybody help me with this?
> Best wishes
> Stefan
>
> ----------------urspr?ngliche Nachricht-----------------
> Von: Stefan Lenz [Stefan-M-Lenz at web.de ]
> An: lenz at imbi.uni-freiburg.de
> Datum: Mon, 6 Apr 2020 14:04:21 +0200
> ----------------------------------------------------------
> >
> >
> >Gesendet: Montag, 06. April 2020 um 13:04 Uhr
> >Von: ligges at statistik.tu-dortmund.de
> >An: stefan-m-lenz at web.de
> >Cc: CRAN-submissions at R-project.org
> >Betreff: [CRAN-pretest-archived] CRAN submission JuliaConnectoR 0.5.0
> >Dear maintainer,
> >
> >package JuliaConnectoR_0.5.0.tar.gz does not pass the incoming checks
> >automatically, please see the following pre-tests:
> >Windows:
> >Status: 2 NOTEs
> >Debian:
> >Status: 2 NOTEs
> >
> >Please fix all problems and resubmit a fixed version via the webform.
> >If you are not sure how to fix the problems shown, please ask for help on the
> >R-package-devel mailing list:
> >
> >If you are fairly certain the rejection is a false positive, please reply-all to this
> >message and explain.
> >
> >More details are given in the directory:
> >
> >The files will be removed after roughly 7 days.
> >
> >No strong reverse dependencies to be checked.
> >
> >Best regards,
> >CRAN teams' auto-check service
> >Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
> >Check: CRAN incoming feasibility, Result: NOTE
> >Maintainer: 'Stefan Lenz stefan-m-lenz at web.de '
> >
> >New submission
> >
> >Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
> >Check: R code for possible problems, Result: NOTE
> >Found the following calls to attach():
> >File 'JuliaConnectoR/R/importing.R':
> >attach(funenv, name = envName)
> >See section 'Good practice' in '?attach'.
>
>
> __________________________________________________
> Stefan Lenz
>
> Institut f?r Medizinische Biometrie und Statistik
> Medizinische Fakult?t / Universit?tsklinikum Freiburg
>
> Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg
>
> Tel.: 0761/203-6670
> E-Mail: lenz at imbi.uni-freiburg.de
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Mon Apr  6 16:49:49 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 6 Apr 2020 09:49:49 -0500
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
Message-ID: <24203.16781.429161.610624@rob.eddelbuettel.com>


On 6 April 2020 at 08:38, Ben Bolker wrote:
|   Just reply to the CRAN maintainers and explain this situation.  It?s
| slightly buried, but the e-mail you received does say:
| 
| > If you are fairly certain the rejection is a false positive, please reply-all to this
| > message and explain.

True, but this misses the "Letter of the law" versus the "Spirit of the law".

It might be worth mentioning that use of attach() is seen, to find one poor
analogy, pretty much like use of global variables these days. "Just because
you could does not mean you should".

See e.g. one of the first google hits for 'r do not use attach' here:
https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From bbo|ker @end|ng |rom gm@||@com  Mon Apr  6 16:59:22 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 6 Apr 2020 10:59:22 -0400
Subject: [R-pkg-devel] attach
In-Reply-To: <24203.16781.429161.610624@rob.eddelbuettel.com>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
Message-ID: <2ea0c9cb-b79e-efd3-5884-291a4a4d1cb3@gmail.com>


  Fair enough.  I'm going to derail/repurpose this thread to ask a
couple of questions about attach().

   I have often used with() for situations where I want to evaluate a
bunch of expressions with the elements of a parameter vector, e.g.
inside a gradient function for deSolve::ode().  However, I have found
this very hard to debug because (AFAIK) you can't debug-step through the
components of a with() expression.
  Potential solutions for this include

 1. attach(params); on.exit(detach(params))

  * this will be flagged by CRAN
  * I have found some really surprising (to me) precedence issues with
this _when used in a package context_ - it looks like the elements in
'params' are found _after_ built-in objects in R?? (I have to take some
time to make a MRE of this

  2. The zeallot package does 'unpacking' as with Python tuples.  I was
worried about dragging in tidyverse dependencies, but it looks like it
doesn't actually Import: anything.
   This doesn't quite do what I want, as I want to unpack using the
names in the object (which makes it look perfect for the attach() solution)


  Thoughts?

On 2020-04-06 10:49 a.m., Dirk Eddelbuettel wrote:
> 
> On 6 April 2020 at 08:38, Ben Bolker wrote:
> |   Just reply to the CRAN maintainers and explain this situation.  It?s
> | slightly buried, but the e-mail you received does say:
> | 
> | > If you are fairly certain the rejection is a false positive, please reply-all to this
> | > message and explain.
> 
> True, but this misses the "Letter of the law" versus the "Spirit of the law".
> 
> It might be worth mentioning that use of attach() is seen, to find one poor
> analogy, pretty much like use of global variables these days. "Just because
> you could does not mean you should".
> 
> See e.g. one of the first google hits for 'r do not use attach' here:
> https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
> 
> Dirk
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Apr  6 17:00:09 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 6 Apr 2020 11:00:09 -0400
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <24203.16781.429161.610624@rob.eddelbuettel.com>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
Message-ID: <3cadf8d8-0591-8763-8a18-7cc4458d281f@gmail.com>

On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
> 
> On 6 April 2020 at 08:38, Ben Bolker wrote:
> |   Just reply to the CRAN maintainers and explain this situation.  It?s
> | slightly buried, but the e-mail you received does say:
> |
> | > If you are fairly certain the rejection is a false positive, please reply-all to this
> | > message and explain.
> 
> True, but this misses the "Letter of the law" versus the "Spirit of the law".
> 
> It might be worth mentioning that use of attach() is seen, to find one poor
> analogy, pretty much like use of global variables these days. "Just because
> you could does not mean you should".
> 
> See e.g. one of the first google hits for 'r do not use attach' here:
> https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead

I don't have a strong opinion on this:  the proposed use seems to be no 
worse than library() or require().  Those are fine for users to use, but 
are discouraged in a package.  If the attach() never happens without an 
explicit request from the user (and that's what it sounds like), I'd say 
it's probably okay.

However, there is an easy workaround:  just return the environment 
without attaching it.  Then the user has the choice of attaching it, or 
using it as a prefix when they call the functions in it.  So it's not as 
though this will destroy the utility of the package if Stefan isn't 
allowed to call attach().

Duncan Murdoch


From |enz @end|ng |rom |mb|@un|-|re|burg@de  Mon Apr  6 17:10:52 2020
From: |enz @end|ng |rom |mb|@un|-|re|burg@de (Stefan Lenz IMBI)
Date: Mon, 06 Apr 2020 17:10:52 +0200
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
Message-ID: <20200406171052.EGroupware.7j2P2odqTiWrpTZjYHlxYFP@_>

My case is a little bit different from the use of global variables for data described in the Stackoverflow post.
I import a data base which contains function names of Julia functions from a Julia package.
This is analogous to loading a package in R.
The goal is to make it possible to call Julia functions like R functions.
If you call library(...) in R then the functions contained in the package are also available in the global search path.
In this case it doesn't make sense to use "with".
I am open to suggestions how I can change it to make it better, but the goal is really to be able to write

    juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
    myJuliaFunction()

same as you would write

    library("MyRPackage") # exports myRFunction
    myRFunction()

Best wishes

Stefan
 
----------------urspr?ngliche Nachricht-----------------
Von: Dirk Eddelbuettel [edd at debian.org]
An: Ben Bolker [bbolker at gmail.com]
Kopie: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], List r-package-devel [r-package-devel at r-project.org]
Datum: Mon, 6 Apr 2020 09:49:49 -0500
-------------------------------------------------
 
 
> 
> On 6 April 2020 at 08:38, Ben Bolker wrote:
> | Just reply to the CRAN maintainers and explain this situation. It?s
> | slightly buried, but the e-mail you received does say:
> | 
> | > If you are fairly certain the rejection is a false positive, please reply-all 
> to this
> | > message and explain.
> 
> True, but this misses the "Letter of the law" versus the "Spirit of the law".
> 
> It might be worth mentioning that use of attach() is seen, to find one poor
> analogy, pretty much like use of global variables these days. "Just because
> you could does not mean you should".
> 
> See e.g. one of the first google hits for 'r do not use attach' here:
> 
> https://stackoverflow.com/questions/10067680/why-is-it-not-advisable
> -to-use-attach-in-r-and-what-should-i-use-instead
> 
> Dirk
> 


-- 

Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de


From renoz@o @end|ng |rom protonm@||@com  Mon Apr  6 17:16:33 2020
From: renoz@o @end|ng |rom protonm@||@com (renozao)
Date: Mon, 06 Apr 2020 15:16:33 +0000
Subject: [R-pkg-devel] =?utf-8?q?Error_creating_union_class=3A_object_?=
 =?utf-8?b?4oCYLl9fQ19fY29tcE1hdHJpeOKAmSBub3QgZm91bmQ=?=
Message-ID: <3NF8PazyTwlR-NsDz0970jmrLD2_ITDmQFXKMkeW075iKUrvebyOISwaQAWAIjvCE8WFbQdAkRakCtUGLFdl7bMJ2TZW3jKcoxsWVnq4CFk=@protonmail.com>

Hi,
following up on this.
Has anybody encountered this issue or could give some insights on it?
Is there anything I can do here, except avoiding using Matrix in the union class?

Thanks
	[[alternative HTML version deleted]]


From |enz @end|ng |rom |mb|@un|-|re|burg@de  Mon Apr  6 17:25:35 2020
From: |enz @end|ng |rom |mb|@un|-|re|burg@de (Stefan Lenz IMBI)
Date: Mon, 06 Apr 2020 17:25:35 +0200
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <24203.16781.429161.610624@rob.eddelbuettel.com>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
Message-ID: <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>

Yes, as I wrote earlier, I would like to imitate the behaviour of loading an R package

 juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
 myJuliaFunction()

like R:

 library("MyRPackage") # exports myRFunction
 myRFunction()

I could return an environment, such that the call becomes

 attach(juliaUsing("SomeJuliaPackage"))
 myJuliaFunction()

But calling juliaUsing(), as it is now, takes care that if a package is imported a second time,
the first data base is removed via detach().
This way, users do not have to worry about calling juliaUsing() mutliple times in a script, same
as R users don't have to worry about calling library() multiple times.
If you call the code with attach() multiple times and do not detach, you get your screen cluttered with
warnings "xxx is masked by xxx".
So I would say it would decrease user-friendliness to return an environment.
I also want to make explicit, that the call to attach
occurs only once in my code, after creating the environment:

 envName <- paste0("JuliaConnectoR:", absoluteModulePath)
 if (envName %in% search()) {
 detach(envName, character.only = TRUE)
 }
 attach(funenv, name = envName)

This code is only called by juliaImport() and juliaUsing(), which aren't called by any other function of 
the package
and are supposed to be called directly by the user.

Stefan 
 
----------------urspr?ngliche Nachricht-----------------
Von: Duncan Murdoch [murdoch.duncan at gmail.com]
An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker [bbolker at gmail.com]
Kopie: List r-package-devel [r-package-devel at r-project.org]
Datum: Mon, 6 Apr 2020 11:00:09 -0400
-------------------------------------------------
 
 
> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>> 
>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>> | Just reply to the CRAN maintainers and explain this situation. It?s
>> | slightly buried, but the e-mail you received does say:
>> |
>> | > If you are fairly certain the rejection is a false positive, please reply-all to this
>> | > message and explain.
>> 
>> True, but this misses the "Letter of the law" versus the "Spirit of the law".
>> 
>> It might be worth mentioning that use of attach() is seen, to find one poor
>> analogy, pretty much like use of global variables these days. "Just because
>> you could does not mean you should".
>> 
>> See e.g. one of the first google hits for 'r do not use attach' here:
>> https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
> 
> I don't have a strong opinion on this: the proposed use seems to be no 
> worse than library() or require(). Those are fine for users to use, but 
> are discouraged in a package. If the attach() never happens without an 
> explicit request from the user (and that's what it sounds like), I'd say 
> it's probably okay.
> 
> However, there is an easy workaround: just return the environment 
> without attaching it. Then the user has the choice of attaching it, or 
> using it as a prefix when they call the functions in it. So it's not as 
> though this will destroy the utility of the package if Stefan isn't 
> allowed to call attach().
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


-- 

Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Apr  6 17:33:51 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 6 Apr 2020 11:33:51 -0400
Subject: [R-pkg-devel] attach
In-Reply-To: <2ea0c9cb-b79e-efd3-5884-291a4a4d1cb3@gmail.com>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <2ea0c9cb-b79e-efd3-5884-291a4a4d1cb3@gmail.com>
Message-ID: <a3128fc4-340e-02c2-5b53-fc071258540e@gmail.com>

On 06/04/2020 10:59 a.m., Ben Bolker wrote:
> 
>    Fair enough.  I'm going to derail/repurpose this thread to ask a
> couple of questions about attach().
> 
>     I have often used with() for situations where I want to evaluate a
> bunch of expressions with the elements of a parameter vector, e.g.
> inside a gradient function for deSolve::ode().  However, I have found
> this very hard to debug because (AFAIK) you can't debug-step through the
> components of a with() expression.
>    Potential solutions for this include
> 
>   1. attach(params); on.exit(detach(params))
> 
>    * this will be flagged by CRAN
>    * I have found some really surprising (to me) precedence issues with
> this _when used in a package context_ - it looks like the elements in
> 'params' are found _after_ built-in objects in R?? (I have to take some
> time to make a MRE of this

I suspect what happened is that you had a copy of a built-in function in 
the global environment.  The global environment always comes ahead of 
attach()'d environments.  On the other hand, with() gets it right.

You can see this:

x <- 123
df <- data.frame(x = 456)
with(df, x)
#> [1] 456
attach(df)
#> The following object is masked _by_ .GlobalEnv:
#>
#>     x
x
#> [1] 123
detach(df)

As for debugging, the setBreakpoint() function can set a breakpoint in 
the code block in with().  RStudio uses that or some equivalent for 
setting breakpoints, so it can set breakpoints within the block.

If you call debug() on a function and get to a with() statement, you can 
eventually get to the code within it by hitting "s" (step in) several 
times.  It's fairly scary stepping into .Internal(), but it does 
eventually get you there.

Duncan Murdoch

> 
>    2. The zeallot package does 'unpacking' as with Python tuples.  I was
> worried about dragging in tidyverse dependencies, but it looks like it
> doesn't actually Import: anything.
>     This doesn't quite do what I want, as I want to unpack using the
> names in the object (which makes it look perfect for the attach() solution)
> 
> 
>    Thoughts?
> 
> On 2020-04-06 10:49 a.m., Dirk Eddelbuettel wrote:
>>
>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>> |   Just reply to the CRAN maintainers and explain this situation.  It?s
>> | slightly buried, but the e-mail you received does say:
>> |
>> | > If you are fairly certain the rejection is a false positive, please reply-all to this
>> | > message and explain.
>>
>> True, but this misses the "Letter of the law" versus the "Spirit of the law".
>>
>> It might be worth mentioning that use of attach() is seen, to find one poor
>> analogy, pretty much like use of global variables these days. "Just because
>> you could does not mean you should".
>>
>> See e.g. one of the first google hits for 'r do not use attach' here:
>> https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>
>> Dirk
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Apr  6 17:40:12 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 6 Apr 2020 11:40:12 -0400
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
Message-ID: <510e7822-e79a-c760-0031-66d878273936@gmail.com>

On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
> Yes, as I wrote earlier, I would like to imitate the behaviour of loading an R package
> 
>   juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>   myJuliaFunction()
> 
> like R:
> 
>   library("MyRPackage") # exports myRFunction
>   myRFunction()
> 
> I could return an environment, such that the call becomes
> 
>   attach(juliaUsing("SomeJuliaPackage"))
>   myJuliaFunction()

I wouldn't use it that way.  I'd write it as

     sjp <- juliaUsing("SomeJuliaPackage")
     sjp$myJuliaFunction()

This is similar to the advice to use pkg::foo() rather than library(pkg) 
followed by plain foo() in the code.

Duncan Murdoch

> 
> But calling juliaUsing(), as it is now, takes care that if a package is imported a second time,
> the first data base is removed via detach().
> This way, users do not have to worry about calling juliaUsing() mutliple times in a script, same
> as R users don't have to worry about calling library() multiple times.
> If you call the code with attach() multiple times and do not detach, you get your screen cluttered with
> warnings "xxx is masked by xxx".
> So I would say it would decrease user-friendliness to return an environment.
> I also want to make explicit, that the call to attach
> occurs only once in my code, after creating the environment:
> 
>   envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>   if (envName %in% search()) {
>   detach(envName, character.only = TRUE)
>   }
>   attach(funenv, name = envName)
> 
> This code is only called by juliaImport() and juliaUsing(), which aren't called by any other function of
> the package
> and are supposed to be called directly by the user.
> 
> Stefan
>   
> ----------------urspr?ngliche Nachricht-----------------
> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker [bbolker at gmail.com]
> Kopie: List r-package-devel [r-package-devel at r-project.org]
> Datum: Mon, 6 Apr 2020 11:00:09 -0400
> -------------------------------------------------
>   
>   
>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>
>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>> | Just reply to the CRAN maintainers and explain this situation. It?s
>>> | slightly buried, but the e-mail you received does say:
>>> |
>>> | > If you are fairly certain the rejection is a false positive, please reply-all to this
>>> | > message and explain.
>>>
>>> True, but this misses the "Letter of the law" versus the "Spirit of the law".
>>>
>>> It might be worth mentioning that use of attach() is seen, to find one poor
>>> analogy, pretty much like use of global variables these days. "Just because
>>> you could does not mean you should".
>>>
>>> See e.g. one of the first google hits for 'r do not use attach' here:
>>> https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>
>> I don't have a strong opinion on this: the proposed use seems to be no
>> worse than library() or require(). Those are fine for users to use, but
>> are discouraged in a package. If the attach() never happens without an
>> explicit request from the user (and that's what it sounds like), I'd say
>> it's probably okay.
>>
>> However, there is an easy workaround: just return the environment
>> without attaching it. Then the user has the choice of attaching it, or
>> using it as a prefix when they call the functions in it. So it's not as
>> though this will destroy the utility of the package if Stefan isn't
>> allowed to call attach().
>>
>> Duncan Murdoch
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
>


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Mon Apr  6 19:51:53 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Mon, 06 Apr 2020 10:51:53 -0700
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <510e7822-e79a-c760-0031-66d878273936@gmail.com>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
 <510e7822-e79a-c760-0031-66d878273936@gmail.com>
Message-ID: <37F2BD9A-21AE-400D-BEEC-19382A591AEB@dcn.davis.ca.us>

One could take the position that the library and require functions were a mistake to begin with and that all contributed packages should be accessed using ::...  or one could recognize that these functions are an expected feature of R at this point and then it is not defensible to ban the proposed approach of importing names as Stefan wants to. I don't think it is fair to require this higher level of specificity just because it involves use of attach.

That said, another feature of R packages is the integrated help system... importing Julia functions wholesale may lead to problems with consistency in navigating the help files. IMO it may be justifiable to ban this particular syntactic convenience to maintain some separation in the minds of users looking for help on these new functions, since the syntactic and semantic structure of functions from another language may not align well with normal R functions. But I am not familiar with Julia or Stefan's package or the support it brings in this area... I just disagree with banning a "library" lookalike function "just because" it happens to involve attach.

On April 6, 2020 8:40:12 AM PDT, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
>> Yes, as I wrote earlier, I would like to imitate the behaviour of
>loading an R package
>> 
>>   juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>>   myJuliaFunction()
>> 
>> like R:
>> 
>>   library("MyRPackage") # exports myRFunction
>>   myRFunction()
>> 
>> I could return an environment, such that the call becomes
>> 
>>   attach(juliaUsing("SomeJuliaPackage"))
>>   myJuliaFunction()
>
>I wouldn't use it that way.  I'd write it as
>
>     sjp <- juliaUsing("SomeJuliaPackage")
>     sjp$myJuliaFunction()
>
>This is similar to the advice to use pkg::foo() rather than
>library(pkg) 
>followed by plain foo() in the code.
>
>Duncan Murdoch
>
>> 
>> But calling juliaUsing(), as it is now, takes care that if a package
>is imported a second time,
>> the first data base is removed via detach().
>> This way, users do not have to worry about calling juliaUsing()
>mutliple times in a script, same
>> as R users don't have to worry about calling library() multiple
>times.
>> If you call the code with attach() multiple times and do not detach,
>you get your screen cluttered with
>> warnings "xxx is masked by xxx".
>> So I would say it would decrease user-friendliness to return an
>environment.
>> I also want to make explicit, that the call to attach
>> occurs only once in my code, after creating the environment:
>> 
>>   envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>>   if (envName %in% search()) {
>>   detach(envName, character.only = TRUE)
>>   }
>>   attach(funenv, name = envName)
>> 
>> This code is only called by juliaImport() and juliaUsing(), which
>aren't called by any other function of
>> the package
>> and are supposed to be called directly by the user.
>> 
>> Stefan
>>   
>> ----------------urspr?ngliche Nachricht-----------------
>> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
>> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker
>[bbolker at gmail.com]
>> Kopie: List r-package-devel [r-package-devel at r-project.org]
>> Datum: Mon, 6 Apr 2020 11:00:09 -0400
>> -------------------------------------------------
>>   
>>   
>>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>>
>>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>>> | Just reply to the CRAN maintainers and explain this situation.
>It?s
>>>> | slightly buried, but the e-mail you received does say:
>>>> |
>>>> | > If you are fairly certain the rejection is a false positive,
>please reply-all to this
>>>> | > message and explain.
>>>>
>>>> True, but this misses the "Letter of the law" versus the "Spirit of
>the law".
>>>>
>>>> It might be worth mentioning that use of attach() is seen, to find
>one poor
>>>> analogy, pretty much like use of global variables these days. "Just
>because
>>>> you could does not mean you should".
>>>>
>>>> See e.g. one of the first google hits for 'r do not use attach'
>here:
>>>>
>https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>>
>>> I don't have a strong opinion on this: the proposed use seems to be
>no
>>> worse than library() or require(). Those are fine for users to use,
>but
>>> are discouraged in a package. If the attach() never happens without
>an
>>> explicit request from the user (and that's what it sounds like), I'd
>say
>>> it's probably okay.
>>>
>>> However, there is an easy workaround: just return the environment
>>> without attaching it. Then the user has the choice of attaching it,
>or
>>> using it as a prefix when they call the functions in it. So it's not
>as
>>> though this will destroy the utility of the package if Stefan isn't
>>> allowed to call attach().
>>>
>>> Duncan Murdoch
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>> 
>>
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From j@red_wood @end|ng |rom 163@com  Tue Apr  7 08:25:21 2020
From: j@red_wood @end|ng |rom 163@com (jared_wood)
Date: Tue, 7 Apr 2020 14:25:21 +0800 (GMT+08:00)
Subject: [R-pkg-devel] About dataset in my own package
Message-ID: <7cf879d3.2ce8.171535093ff.Coremail.jared_wood@163.com>

Dear all?

I have three datasets (drugbank.rda edgar.rda mala.rda) in my package and I put them in the document folder which called ?data?.

 

And I just use the dataset in the function. However, here comes a note:

 

drugbank_disease_gene: no visible binding for global variable

    'drugbank'

  edgar_disease_gene: no visible binding for global variable 'edgar'

  malacards_disease_gene: no visible binding for global variable 'mala'

  Undefined global functions or variables:

drugbank edgar mala

 

It shows that I need to do something else. I am confused and I don? know what need to do next.

 

Thanks for your attention. 

| |
jared_wood
|
|
jared_wood at 163.com
|
???????????
	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Tue Apr  7 09:11:23 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Tue, 07 Apr 2020 00:11:23 -0700
Subject: [R-pkg-devel] About dataset in my own package
In-Reply-To: <7cf879d3.2ce8.171535093ff.Coremail.jared_wood@163.com>
References: <7cf879d3.2ce8.171535093ff.Coremail.jared_wood@163.com>
Message-ID: <BD91642D-4EE8-4902-A915-546118D5EB8D@dcn.davis.ca.us>

Either use the data() function to retrieve it or use the

LazyData: true

line in your DESCRIPTION file.

On April 6, 2020 11:25:21 PM PDT, jared_wood <jared_wood at 163.com> wrote:
>Dear all?
>
>I have three datasets (drugbank.rda edgar.rda mala.rda) in my package
>and I put them in the document folder which called ?data?.
>
> 
>
>And I just use the dataset in the function. However, here comes a note:
>
> 
>
>drugbank_disease_gene: no visible binding for global variable
>
>    'drugbank'
>
>  edgar_disease_gene: no visible binding for global variable 'edgar'
>
>  malacards_disease_gene: no visible binding for global variable 'mala'
>
>  Undefined global functions or variables:
>
>drugbank edgar mala
>
> 
>
>It shows that I need to do something else. I am confused and I don?
>know what need to do next.
>
> 
>
>Thanks for your attention. 
>
>| |
>jared_wood
>|
>|
>jared_wood at 163.com
>|
>???????????
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From @tep@n@@|nde|@r @end|ng |rom or@c|e@com  Tue Apr  7 09:16:31 2020
From: @tep@n@@|nde|@r @end|ng |rom or@c|e@com (Stepan)
Date: Tue, 7 Apr 2020 09:16:31 +0200
Subject: [R-pkg-devel] RIOT 2020: canceled
In-Reply-To: <f079b5c4-6d72-c7eb-c347-a2e0ee494965@oracle.com>
References: <f079b5c4-6d72-c7eb-c347-a2e0ee494965@oracle.com>
Message-ID: <b108a8e9-5fb2-bfb6-bb25-c22de8a49754@oracle.com>

After carefully considering the current situation regarding COVID-19, we 
decided to cancel this year's RIOT workshop.

Best regards,
Stepan

On 25. 02. 20 17:47, Stepan wrote:
> I hope you don?t mind us using this mailing list for a small 
> advertisement, but we think it is relevant for this group:
> 
> We'd like to invite you to RIOT 2020 - the 5rd workshop on R 
> Implementation, Optimization and Tooling [1]. It will take place 
> co-located with, and during, useR! 2020 in St. Louis on July 8th. RIOT 
> is an excellent venue for deep technical discussions about R 
> implementations, tools, optimizations and R extensions, and will be very 
> interesting for anyone interested in what?s under the hood of R.
> 
> The RIOT workshop topics include experience reports and technical 
> details of novel R extensions. For example: ALTREP implementations, 
> approaches to parallelization of R, integration with other (parallel, 
> distributed, ...) computing engines, etc.
> 
> Regards,
> Stepan Sindelar, Lukas Stadler (Oracle Labs), Jan Vitek (Northeastern), 
> Alexander Bertram (BeDataDriven)
> 
> [1] http://riotworkshop.github.io/


From |enz @end|ng |rom |mb|@un|-|re|burg@de  Tue Apr  7 18:40:02 2020
From: |enz @end|ng |rom |mb|@un|-|re|burg@de (Stefan Lenz IMBI)
Date: Tue, 07 Apr 2020 18:40:02 +0200
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <510e7822-e79a-c760-0031-66d878273936@gmail.com>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
 <510e7822-e79a-c760-0031-66d878273936@gmail.com>
Message-ID: <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>

Thank you very much for your comment. 
Could you elaborate how you think that it could interfere with the help system?
I haven't yet connected the Julia help with the R help, as the R help system is quite complex and RStudio handles it again differently. So it's simply like the functions were declared on the command line. They have no help.
A simply way to print the help for a Julia function, e.g. the function "first", is to call
 juliaEval("@doc first")
This then simply prints the output on the command line.

 
----------------urspr?ngliche Nachricht-----------------
Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
An: r-package-devel at r-project.org, Duncan Murdoch [murdoch.duncan at gmail.com], Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de]
Datum: Mon, 06 Apr 2020 10:51:53 -0700
-------------------------------------------------
 
 
> One could take the position that the library and require functions were a mistake 
> to begin with and that all contributed packages should be accessed using ::... or 
> one could recognize that these functions are an expected feature of R at this 
> point and then it is not defensible to ban the proposed approach of importing 
> names as Stefan wants to. I don't think it is fair to require this higher level of 
> specificity just because it involves use of attach.
> 
> That said, another feature of R packages is the integrated help system... 
> importing Julia functions wholesale may lead to problems with consistency in 
> navigating the help files. IMO it may be justifiable to ban this particular 
> syntactic convenience to maintain some separation in the minds of users looking 
> for help on these new functions, since the syntactic and semantic structure of 
> functions from another language may not align well with normal R functions. But I 
> am not familiar with Julia or Stefan's package or the support it brings in this 
> area... I just disagree with banning a "library" lookalike function "just 
> because" it happens to involve attach.
> 
> On April 6, 2020 8:40:12 AM PDT, Duncan Murdoch <murdoch.duncan at gmail.com> 
> wrote:
>>On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
>>> Yes, as I wrote earlier, I would like to imitate the behaviour of
>>loading an R package
>>> 
>>> juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>>> myJuliaFunction()
>>> 
>>> like R:
>>> 
>>> library("MyRPackage") # exports myRFunction
>>> myRFunction()
>>> 
>>> I could return an environment, such that the call becomes
>>> 
>>> attach(juliaUsing("SomeJuliaPackage"))
>>> myJuliaFunction()
>>
>>I wouldn't use it that way. I'd write it as
>>
>> sjp <- juliaUsing("SomeJuliaPackage")
>> sjp$myJuliaFunction()
>>
>>This is similar to the advice to use pkg::foo() rather than
>>library(pkg) 
>>followed by plain foo() in the code.
>>
>>Duncan Murdoch
>>
>>> 
>>> But calling juliaUsing(), as it is now, takes care that if a package
>>is imported a second time,
>>> the first data base is removed via detach().
>>> This way, users do not have to worry about calling juliaUsing()
>>mutliple times in a script, same
>>> as R users don't have to worry about calling library() multiple
>>times.
>>> If you call the code with attach() multiple times and do not detach,
>>you get your screen cluttered with
>>> warnings "xxx is masked by xxx".
>>> So I would say it would decrease user-friendliness to return an
>>environment.
>>> I also want to make explicit, that the call to attach
>>> occurs only once in my code, after creating the environment:
>>> 
>>> envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>>> if (envName %in% search()) {
>>> detach(envName, character.only = TRUE)
>>> }
>>> attach(funenv, name = envName)
>>> 
>>> This code is only called by juliaImport() and juliaUsing(), which
>>aren't called by any other function of
>>> the package
>>> and are supposed to be called directly by the user.
>>> 
>>> Stefan
>>> 
>>> ----------------urspr?ngliche Nachricht-----------------
>>> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
>>> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker
>>[bbolker at gmail.com]
>>> Kopie: List r-package-devel [r-package-devel at r-project.org]
>>> Datum: Mon, 6 Apr 2020 11:00:09 -0400
>>> -------------------------------------------------
>>> 
>>> 
>>>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>>>
>>>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>>>> | Just reply to the CRAN maintainers and explain this situation.
>>It?s
>>>>> | slightly buried, but the e-mail you received does say:
>>>>> |
>>>>> | > If you are fairly certain the rejection is a false positive,
>>please reply-all to this
>>>>> | > message and explain.
>>>>>
>>>>> True, but this misses the "Letter of the law" versus the "Spirit of
>>the law".
>>>>>
>>>>> It might be worth mentioning that use of attach() is seen, to find
>>one poor
>>>>> analogy, pretty much like use of global variables these days. "Just
>>because
>>>>> you could does not mean you should".
>>>>>
>>>>> See e.g. one of the first google hits for 'r do not use attach'
>>here:
>>>>>
>>https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>>>
>>>> I don't have a strong opinion on this: the proposed use seems to be
>>no
>>>> worse than library() or require(). Those are fine for users to use,
>>but
>>>> are discouraged in a package. If the attach() never happens without
>>an
>>>> explicit request from the user (and that's what it sounds like), I'd
>>say
>>>> it's probably okay.
>>>>
>>>> However, there is an easy workaround: just return the environment
>>>> without attaching it. Then the user has the choice of attaching it,
>>or
>>>> using it as a prefix when they call the functions in it. So it's not
>>as
>>>> though this will destroy the utility of the package if Stefan isn't
>>>> allowed to call attach().
>>>>
>>>> Duncan Murdoch
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>> 
>>>
>>
>>______________________________________________
>>R-package-devel at r-project.org mailing list
>>https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


-- 

Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Tue Apr  7 18:52:52 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Tue, 07 Apr 2020 09:52:52 -0700
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
 <510e7822-e79a-c760-0031-66d878273936@gmail.com>
 <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>
Message-ID: <B1F3A1B9-EBDA-4506-BBDA-487D8DBF494E@dcn.davis.ca.us>

I did not say "interfere"... I said "problems with consistency". I don't think your wholesale import of functions without corresponding help pages is consistent with the normal use of R, which will make reading R code written with this mechanism in place a painful source of trouble for help forums.

On the other hand, if the code is prefaced with an environment name then there will be no expectation that a help page should exist on the part of someone reading that code for the first time. (It will be no less obscure, but at least it won't be misleading.)

On April 7, 2020 9:40:02 AM PDT, Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de> wrote:
>Thank you very much for your comment. 
>Could you elaborate how you think that it could interfere with the help
>system?
>I haven't yet connected the Julia help with the R help, as the R help
>system is quite complex and RStudio handles it again differently. So
>it's simply like the functions were declared on the command line. They
>have no help.
>A simply way to print the help for a Julia function, e.g. the function
>"first", is to call
> juliaEval("@doc first")
>This then simply prints the output on the command line.
>
> 
>----------------urspr?ngliche Nachricht-----------------
>Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
>An: r-package-devel at r-project.org, Duncan Murdoch
>[murdoch.duncan at gmail.com], Stefan Lenz IMBI
>[lenz at imbi.uni-freiburg.de]
>Datum: Mon, 06 Apr 2020 10:51:53 -0700
>-------------------------------------------------
> 
> 
>> One could take the position that the library and require functions
>were a mistake 
>> to begin with and that all contributed packages should be accessed
>using ::... or 
>> one could recognize that these functions are an expected feature of R
>at this 
>> point and then it is not defensible to ban the proposed approach of
>importing 
>> names as Stefan wants to. I don't think it is fair to require this
>higher level of 
>> specificity just because it involves use of attach.
>> 
>> That said, another feature of R packages is the integrated help
>system... 
>> importing Julia functions wholesale may lead to problems with
>consistency in 
>> navigating the help files. IMO it may be justifiable to ban this
>particular 
>> syntactic convenience to maintain some separation in the minds of
>users looking 
>> for help on these new functions, since the syntactic and semantic
>structure of 
>> functions from another language may not align well with normal R
>functions. But I 
>> am not familiar with Julia or Stefan's package or the support it
>brings in this 
>> area... I just disagree with banning a "library" lookalike function
>"just 
>> because" it happens to involve attach.
>> 
>> On April 6, 2020 8:40:12 AM PDT, Duncan Murdoch
><murdoch.duncan at gmail.com> 
>> wrote:
>>>On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
>>>> Yes, as I wrote earlier, I would like to imitate the behaviour of
>>>loading an R package
>>>> 
>>>> juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>>>> myJuliaFunction()
>>>> 
>>>> like R:
>>>> 
>>>> library("MyRPackage") # exports myRFunction
>>>> myRFunction()
>>>> 
>>>> I could return an environment, such that the call becomes
>>>> 
>>>> attach(juliaUsing("SomeJuliaPackage"))
>>>> myJuliaFunction()
>>>
>>>I wouldn't use it that way. I'd write it as
>>>
>>> sjp <- juliaUsing("SomeJuliaPackage")
>>> sjp$myJuliaFunction()
>>>
>>>This is similar to the advice to use pkg::foo() rather than
>>>library(pkg) 
>>>followed by plain foo() in the code.
>>>
>>>Duncan Murdoch
>>>
>>>> 
>>>> But calling juliaUsing(), as it is now, takes care that if a
>package
>>>is imported a second time,
>>>> the first data base is removed via detach().
>>>> This way, users do not have to worry about calling juliaUsing()
>>>mutliple times in a script, same
>>>> as R users don't have to worry about calling library() multiple
>>>times.
>>>> If you call the code with attach() multiple times and do not
>detach,
>>>you get your screen cluttered with
>>>> warnings "xxx is masked by xxx".
>>>> So I would say it would decrease user-friendliness to return an
>>>environment.
>>>> I also want to make explicit, that the call to attach
>>>> occurs only once in my code, after creating the environment:
>>>> 
>>>> envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>>>> if (envName %in% search()) {
>>>> detach(envName, character.only = TRUE)
>>>> }
>>>> attach(funenv, name = envName)
>>>> 
>>>> This code is only called by juliaImport() and juliaUsing(), which
>>>aren't called by any other function of
>>>> the package
>>>> and are supposed to be called directly by the user.
>>>> 
>>>> Stefan
>>>> 
>>>> ----------------urspr?ngliche Nachricht-----------------
>>>> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
>>>> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker
>>>[bbolker at gmail.com]
>>>> Kopie: List r-package-devel [r-package-devel at r-project.org]
>>>> Datum: Mon, 6 Apr 2020 11:00:09 -0400
>>>> -------------------------------------------------
>>>> 
>>>> 
>>>>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>>>>
>>>>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>>>>> | Just reply to the CRAN maintainers and explain this situation.
>>>It?s
>>>>>> | slightly buried, but the e-mail you received does say:
>>>>>> |
>>>>>> | > If you are fairly certain the rejection is a false positive,
>>>please reply-all to this
>>>>>> | > message and explain.
>>>>>>
>>>>>> True, but this misses the "Letter of the law" versus the "Spirit
>of
>>>the law".
>>>>>>
>>>>>> It might be worth mentioning that use of attach() is seen, to
>find
>>>one poor
>>>>>> analogy, pretty much like use of global variables these days.
>"Just
>>>because
>>>>>> you could does not mean you should".
>>>>>>
>>>>>> See e.g. one of the first google hits for 'r do not use attach'
>>>here:
>>>>>>
>>>https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>>>>
>>>>> I don't have a strong opinion on this: the proposed use seems to
>be
>>>no
>>>>> worse than library() or require(). Those are fine for users to
>use,
>>>but
>>>>> are discouraged in a package. If the attach() never happens
>without
>>>an
>>>>> explicit request from the user (and that's what it sounds like),
>I'd
>>>say
>>>>> it's probably okay.
>>>>>
>>>>> However, there is an easy workaround: just return the environment
>>>>> without attaching it. Then the user has the choice of attaching
>it,
>>>or
>>>>> using it as a prefix when they call the functions in it. So it's
>not
>>>as
>>>>> though this will destroy the utility of the package if Stefan
>isn't
>>>>> allowed to call attach().
>>>>>
>>>>> Duncan Murdoch
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>> 
>>>>
>>>
>>>______________________________________________
>>>R-package-devel at r-project.org mailing list
>>>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 

-- 
Sent from my phone. Please excuse my brevity.


From @@rtorry @end|ng |rom gm@||@com  Tue Apr  7 23:20:20 2020
From: @@rtorry @end|ng |rom gm@||@com (Ryan Sartor)
Date: Tue, 7 Apr 2020 17:20:20 -0400
Subject: [R-pkg-devel] Windows specific install error
Message-ID: <CAD9kV-LGosh0NoV90pYv3UuRSAaVwMpmxJLqvV4wyMSXaF538w@mail.gmail.com>

Hello everyone,

My package seems to pass all the CRAN checks for Linux but fails to install
on Windows. This is the contents of 00install.out:

* installing *source* package 'DiPALM' ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
Error: .onLoad failed in loadNamespace() for 'S4Vectors', details:
  call: validObject(.Object)
  error: invalid class "LLint" object: superclass "integer_OR_LLint"
not defined in the environment of the object's class
Execution halted
ERROR: lazy loading failed for package 'DiPALM'
* removing 'd:/RCompile/CRANincoming/R-devel/lib/DiPALM'


If I understand the error, it's saying that the CRAN server cannot
load the S4Vectors package because one of classes it depends on is not
defined. I'm guessing this is a namespace issue? I've taken a few
shots at adding directives to my NAMESPACE file but obviously I don't
know what I'm doing or maybe the error has nothing to do with my
package namespace.

Any insight would be greatly appreciated.

Thank you!

	[[alternative HTML version deleted]]


From mtmorg@n@b|oc @end|ng |rom gm@||@com  Wed Apr  8 00:16:03 2020
From: mtmorg@n@b|oc @end|ng |rom gm@||@com (Martin Morgan)
Date: Tue, 7 Apr 2020 22:16:03 +0000
Subject: [R-pkg-devel] Windows specific install error
In-Reply-To: <CAD9kV-LGosh0NoV90pYv3UuRSAaVwMpmxJLqvV4wyMSXaF538w@mail.gmail.com>
References: <CAD9kV-LGosh0NoV90pYv3UuRSAaVwMpmxJLqvV4wyMSXaF538w@mail.gmail.com>
Message-ID: <BL0PR04MB6609C9BDFED98E6FD684D69EF9C30@BL0PR04MB6609.namprd04.prod.outlook.com>

This is the same as

  https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005256.html

and due I believe to stale packages on the CRAN windows builder; the solution is I believe on the CRAN side.

Martin Morgan

?On 4/7/20, 6:14 PM, "R-package-devel on behalf of Ryan Sartor" <r-package-devel-bounces at r-project.org on behalf of sartorry at gmail.com> wrote:

    Hello everyone,
    
    My package seems to pass all the CRAN checks for Linux but fails to install
    on Windows. This is the contents of 00install.out:
    
    * installing *source* package 'DiPALM' ...
    ** using staged installation
    ** R
    ** data
    ** inst
    ** byte-compile and prepare package for lazy loading
    Error: .onLoad failed in loadNamespace() for 'S4Vectors', details:
      call: validObject(.Object)
      error: invalid class "LLint" object: superclass "integer_OR_LLint"
    not defined in the environment of the object's class
    Execution halted
    ERROR: lazy loading failed for package 'DiPALM'
    * removing 'd:/RCompile/CRANincoming/R-devel/lib/DiPALM'
    
    
    If I understand the error, it's saying that the CRAN server cannot
    load the S4Vectors package because one of classes it depends on is not
    defined. I'm guessing this is a namespace issue? I've taken a few
    shots at adding directives to my NAMESPACE file but obviously I don't
    know what I'm doing or maybe the error has nothing to do with my
    package namespace.
    
    Any insight would be greatly appreciated.
    
    Thank you!
    
    	[[alternative HTML version deleted]]
    
    ______________________________________________
    R-package-devel at r-project.org mailing list
    https://stat.ethz.ch/mailman/listinfo/r-package-devel
    

From he|mut@@chuetz @end|ng |rom beb@c@@t  Wed Apr  8 13:43:28 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Wed, 8 Apr 2020 13:43:28 +0200
Subject: [R-pkg-devel] Errors in r-devel (Linux) and r-patched (Solaris)
Message-ID: <387bb665-2e08-f2d7-fcb9-2f363581392b@bebac.at>

Dear all,

I was notified about errors:
https://cran.r-project.org/web/checks/check_results_replicateBE.html

Since I don't have access to those operating systems, I'm a little bit lost.
Here is what I get with 64bit R on Windows:
library(replicateBE)
x <- method.B(details = TRUE, print = FALSE,
               data = rds30, option = 1)[c(10, 19)]
y <- c(17.86418, 92.73371)
d <- as.numeric(signif(abs(x - y), 7))

With R 3.6.2
print(d)
[1] 4.431372e-06 1.182994e-07

With R 3.6.3
print(d)
[1] 1.078696e-05 1.182989e-07

x[10] are Satterthwaite's degrees of freedom obtained by package 
pbkrtest. In both R-versions I use its current version (0.4-8.6 of 
2020-02-20).

Any ideas / suggestions?
As a workaround I could reduce the tolerance of testthat's 
expect_quivalent() from to currently 5e-7 to a higher (_which one?_) 
value. But I still want to know what might be going on the CRAN's 
linux/solaris devel/patched installations since the other R-versions on 
all operating systems passed the tests.

Cheers,
Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
T +43 1 2311746
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From @eb@meyer @end|ng |rom |@u@de  Wed Apr  8 14:15:22 2020
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Wed, 8 Apr 2020 14:15:22 +0200
Subject: [R-pkg-devel] Errors in r-devel (Linux) and r-patched (Solaris)
In-Reply-To: <387bb665-2e08-f2d7-fcb9-2f363581392b@bebac.at>
References: <387bb665-2e08-f2d7-fcb9-2f363581392b@bebac.at>
Message-ID: <d64058a5-0b68-4916-44b6-33927a6f9577@fau.de>

Do both of your R installations use the same version of lme4 ?

A new lme4 version has been published on CRAN yesterday and some changes
regarding default numerical tolerances in optimizations could explain
the difference in your results. See the NEWS here:
https://cran.r-project.org/web/packages/lme4/news.html

Best regards,

	Sebastian Meyer


Am 08.04.20 um 13:43 schrieb Helmut Sch?tz:
> Dear all,
> 
> I was notified about errors:
> https://cran.r-project.org/web/checks/check_results_replicateBE.html
> 
> Since I don't have access to those operating systems, I'm a little bit
> lost.
> Here is what I get with 64bit R on Windows:
> library(replicateBE)
> x <- method.B(details = TRUE, print = FALSE,
> ????????????? data = rds30, option = 1)[c(10, 19)]
> y <- c(17.86418, 92.73371)
> d <- as.numeric(signif(abs(x - y), 7))
> 
> With R 3.6.2
> print(d)
> [1] 4.431372e-06 1.182994e-07
> 
> With R 3.6.3
> print(d)
> [1] 1.078696e-05 1.182989e-07
> 
> x[10] are Satterthwaite's degrees of freedom obtained by package
> pbkrtest. In both R-versions I use its current version (0.4-8.6 of
> 2020-02-20).
> 
> Any ideas / suggestions?
> As a workaround I could reduce the tolerance of testthat's
> expect_quivalent() from to currently 5e-7 to a higher (_which one?_)
> value. But I still want to know what might be going on the CRAN's
> linux/solaris devel/patched installations since the other R-versions on
> all operating systems passed the tests.
> 
> Cheers,
> Helmut
>


From he|mut@@chuetz @end|ng |rom beb@c@@t  Wed Apr  8 14:53:29 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Wed, 8 Apr 2020 14:53:29 +0200
Subject: [R-pkg-devel] Errors in r-devel (Linux) and r-patched (Solaris)
In-Reply-To: <d64058a5-0b68-4916-44b6-33927a6f9577@fau.de>
References: <387bb665-2e08-f2d7-fcb9-2f363581392b@bebac.at>
 <d64058a5-0b68-4916-44b6-33927a6f9577@fau.de>
Message-ID: <85762eb5-abaa-d55b-30d5-c6c8c7b3d910@bebac.at>

Dear Sebastian,

Sebastian Meyer wrote on 2020-04-08 14:15:
> Do both of your R installations use the same version of lme4 ?

THX, good point! On R3.6.2 I have lme4 1.1-21 (2019-03-05) and on R3.6.3 
indeed yesterday's lme4 1.1-23.

> A new lme4 version has been published on CRAN yesterday and some changes
> regarding default numerical tolerances in optimizations could explain
> the difference in your results. See the NEWS here:
> https://cran.r-project.org/web/packages/lme4/news.html

I see. Since the other 93 (!) tests passed, I will submit a fix only for 
_this_ data set. A little bit nasty since we recently published a paper 
about software validation: https://dx.doi.org/10.1208/s12248-020-0427-6
The supplementary material contains code for IQ (installation 
qualification). If a user on r-devel (Linux) or r-patched (Solaris) runs 
it ? with the current lme4 - he/she will be slapped in the face and the 
suppl. material will tell him/her:
"If a test fails [?] the package did not pass IQ in the user?s 
computational environment (hardware, operating system, R-release) and 
_must not_ be used."
Splendid.

Cheers,
Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
T +43 1 2311746
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Apr  8 16:34:45 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 8 Apr 2020 16:34:45 +0200
Subject: [R-pkg-devel] =?utf-8?q?Error_creating_union_class=3A_object_?=
 =?utf-8?b?4oCYLl9fQ19fY29tcE1hdHJpeOKAmSBub3QgZm91bmQ=?=
In-Reply-To: <na_hvS9mQoE2Ex7h3m1UlL7AzQFz0Fuuets5kNRC7b7NBrkkYObfnkUAyj8T8oz48jBuBXZcEf0CJn2UL7f5TZ-N9jiT4qUd0eiE50R9xkU=-4805@protonmail.com>
References: <na_hvS9mQoE2Ex7h3m1UlL7AzQFz0Fuuets5kNRC7b7NBrkkYObfnkUAyj8T8oz48jBuBXZcEf0CJn2UL7f5TZ-N9jiT4qUd0eiE50R9xkU=-4805@protonmail.com>
Message-ID: <24205.57605.672636.944802@stat.math.ethz.ch>

>>>>> renozao  
>>>>>     on Mon, 30 Mar 2020 21:20:43 +0000 writes:

    > Hi,
    > when R CMD check is run under R-devel (2020-03-29 r78108) I get the following error at installation:

    > Error in get(cname, envir = cwhere, inherits = FALSE) :
    > object ?.__C__compMatrix? not found
    > Error in setClassUnion("mMatrix", c("Matrix", "matrix")) :
    > unable to create union class:  could not set members "Matrix"

    > This does not happen on R 3.6.3.

    > I tried with Matrix listed in Depends but I still get the same error.

    > Is this linked to some changes in union classes or the Matrix package?

    > Thank you.

    > Bests,
    > Renaud

Hi Renaud,
One reason you got no response here, is because we don't even
know about which package you are talking.

So there's nothing, anybody can reproduce from your posting.

There have been changes in R's dealing with class unions etc,
notably even *relating* to an earlier bug report on class unions
exactly for such a case which was *triggered* when people built
on such Matrix classes.

But we would really want to be able to reproduce what you are seeing..

Best regards,
Martin Maechler

ETH Zurich, R Core Team *and* maintainer("Matrix")


From wdun|@p @end|ng |rom t|bco@com  Wed Apr  8 17:19:42 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Wed, 8 Apr 2020 08:19:42 -0700
Subject: [R-pkg-devel] =?utf-8?q?Error_creating_union_class=3A_object_?=
	=?utf-8?b?4oCYLl9fQ19fY29tcE1hdHJpeOKAmSBub3QgZm91bmQ=?=
In-Reply-To: <CAF8bMca+KFHQfb87qbZywWchXy9GJ_7qr5iD5GJ3PL-xWJO_fA@mail.gmail.com>
References: <na_hvS9mQoE2Ex7h3m1UlL7AzQFz0Fuuets5kNRC7b7NBrkkYObfnkUAyj8T8oz48jBuBXZcEf0CJn2UL7f5TZ-N9jiT4qUd0eiE50R9xkU=-4805@protonmail.com>
 <24205.57605.672636.944802@stat.math.ethz.ch>
 <CAF8bMca+KFHQfb87qbZywWchXy9GJ_7qr5iD5GJ3PL-xWJO_fA@mail.gmail.com>
Message-ID: <CAF8bMcb-KbfR==w1g3ixjEpGNR7=zn3SEBtwn3i4MimYzzt-dw@mail.gmail.com>

Use trace() to get a bit more detail - .__C_compMatrix is looked for in the
wrong environment with inherits=FALSE.

> setClassUnion("mMatrix", c("Matrix", "matrix"))
Tracing get(name, envir = env) on entry
    x=".AllMTable", envir="<environment: 0x21dcf10>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(name, envir = env) on entry
    x=".MTable", envir="<environment: 0x2238cf0>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(name, envir = env) on entry
    x=".AllMTable", envir="<environment: 0x21dcf10>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get("#HAS_DUPLICATE_CLASS_NAMES", envir = .classTable) on entry
    x="#HAS_DUPLICATE_CLASS_NAMES", envir="<environment: 0x2787710>",
topenv="<environment: base>", inherits=TRUE
Tracing get(name, envir = env) on entry
    x=".AllMTable", envir="<environment: 0x21dcf10>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(name, envir = env) on entry
    x=".MTable", envir="<environment: 0x2238cf0>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(name, envir = env) on entry
    x=".MTable", envir="<environment: 0x21dcf10>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(".SigLength", envir = env) on entry
    x=".SigLength", envir="<environment: 0x21dcf10>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(".SigLength", envir = env) on entry
    x=".SigLength", envir="<environment: 0x21dcf10>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(name, envir = env) on entry
    x=".MTable", envir="<environment: 0x2238cf0>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(".SigLength", envir = env) on entry
    x=".SigLength", envir="<environment: 0x2238cf0>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(".SigLength", envir = env) on entry
    x=".SigLength", envir="<environment: 0x2238cf0>", topenv="<environment:
namespace:methods>", inherits=TRUE
Tracing get(cname, envir = cwhere, inherits = FALSE) on entry
    x=".__C__compMatrix", envir="<environment: R_GlobalEnv>",
topenv="<environment: R_GlobalEnv>", inherits=FALSE
Error in get(cname, envir = cwhere, inherits = FALSE) :
  object '.__C__compMatrix' not found
...

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Wed, Apr 8, 2020 at 7:52 AM William Dunlap <wdunlap at tibco.com> wrote:

> % R-devel --vanilla --quiet
> > library(Matrix)
> > setClassUnion("mMatrix", c("Matrix", "matrix"))
> Error in get(cname, envir = cwhere, inherits = FALSE) :
>   object '.__C__compMatrix' not found
> Error in setClassUnion("mMatrix", c("Matrix", "matrix")) :
>   unable to create union class:  could not set members "Matrix"
> > sessionInfo()
> R Under development (unstable) (2020-04-07 r78175)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 16.04.6 LTS
>
> Matrix products: default
> BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.18.so
>
> locale:
>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] Matrix_1.2-18
>
> loaded via a namespace (and not attached):
> [1] compiler_4.1.0  grid_4.1.0      lattice_0.20-41
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Wed, Apr 8, 2020 at 7:35 AM Martin Maechler <maechler at stat.math.ethz.ch>
> wrote:
>
>> >>>>> renozao
>> >>>>>     on Mon, 30 Mar 2020 21:20:43 +0000 writes:
>>
>>     > Hi,
>>     > when R CMD check is run under R-devel (2020-03-29 r78108) I get the
>> following error at installation:
>>
>>     > Error in get(cname, envir = cwhere, inherits = FALSE) :
>>     > object ?.__C__compMatrix? not found
>>     > Error in setClassUnion("mMatrix", c("Matrix", "matrix")) :
>>     > unable to create union class:  could not set members "Matrix"
>>
>>     > This does not happen on R 3.6.3.
>>
>>     > I tried with Matrix listed in Depends but I still get the same
>> error.
>>
>>     > Is this linked to some changes in union classes or the Matrix
>> package?
>>
>>     > Thank you.
>>
>>     > Bests,
>>     > Renaud
>>
>> Hi Renaud,
>> One reason you got no response here, is because we don't even
>> know about which package you are talking.
>>
>> So there's nothing, anybody can reproduce from your posting.
>>
>> There have been changes in R's dealing with class unions etc,
>> notably even *relating* to an earlier bug report on class unions
>> exactly for such a case which was *triggered* when people built
>> on such Matrix classes.
>>
>> But we would really want to be able to reproduce what you are seeing..
>>
>> Best regards,
>> Martin Maechler
>>
>> ETH Zurich, R Core Team *and* maintainer("Matrix")
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From wdun|@p @end|ng |rom t|bco@com  Wed Apr  8 16:52:03 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Wed, 8 Apr 2020 07:52:03 -0700
Subject: [R-pkg-devel] =?utf-8?q?Error_creating_union_class=3A_object_?=
	=?utf-8?b?4oCYLl9fQ19fY29tcE1hdHJpeOKAmSBub3QgZm91bmQ=?=
In-Reply-To: <24205.57605.672636.944802@stat.math.ethz.ch>
References: <na_hvS9mQoE2Ex7h3m1UlL7AzQFz0Fuuets5kNRC7b7NBrkkYObfnkUAyj8T8oz48jBuBXZcEf0CJn2UL7f5TZ-N9jiT4qUd0eiE50R9xkU=-4805@protonmail.com>
 <24205.57605.672636.944802@stat.math.ethz.ch>
Message-ID: <CAF8bMca+KFHQfb87qbZywWchXy9GJ_7qr5iD5GJ3PL-xWJO_fA@mail.gmail.com>

% R-devel --vanilla --quiet
> library(Matrix)
> setClassUnion("mMatrix", c("Matrix", "matrix"))
Error in get(cname, envir = cwhere, inherits = FALSE) :
  object '.__C__compMatrix' not found
Error in setClassUnion("mMatrix", c("Matrix", "matrix")) :
  unable to create union class:  could not set members "Matrix"
> sessionInfo()
R Under development (unstable) (2020-04-07 r78175)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.6 LTS

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.18.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] Matrix_1.2-18

loaded via a namespace (and not attached):
[1] compiler_4.1.0  grid_4.1.0      lattice_0.20-41

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Wed, Apr 8, 2020 at 7:35 AM Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> >>>>> renozao
> >>>>>     on Mon, 30 Mar 2020 21:20:43 +0000 writes:
>
>     > Hi,
>     > when R CMD check is run under R-devel (2020-03-29 r78108) I get the
> following error at installation:
>
>     > Error in get(cname, envir = cwhere, inherits = FALSE) :
>     > object ?.__C__compMatrix? not found
>     > Error in setClassUnion("mMatrix", c("Matrix", "matrix")) :
>     > unable to create union class:  could not set members "Matrix"
>
>     > This does not happen on R 3.6.3.
>
>     > I tried with Matrix listed in Depends but I still get the same error.
>
>     > Is this linked to some changes in union classes or the Matrix
> package?
>
>     > Thank you.
>
>     > Bests,
>     > Renaud
>
> Hi Renaud,
> One reason you got no response here, is because we don't even
> know about which package you are talking.
>
> So there's nothing, anybody can reproduce from your posting.
>
> There have been changes in R's dealing with class unions etc,
> notably even *relating* to an earlier bug report on class unions
> exactly for such a case which was *triggered* when people built
> on such Matrix classes.
>
> But we would really want to be able to reproduce what you are seeing..
>
> Best regards,
> Martin Maechler
>
> ETH Zurich, R Core Team *and* maintainer("Matrix")
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From renoz@o @end|ng |rom protonm@||@com  Wed Apr  8 18:19:59 2020
From: renoz@o @end|ng |rom protonm@||@com (renozao)
Date: Wed, 08 Apr 2020 16:19:59 +0000
Subject: [R-pkg-devel] =?utf-8?q?Error_creating_union_class=3A_object_?=
 =?utf-8?b?4oCYLl9fQ19fY29tcE1hdHJpeOKAmSBub3QgZm91bmQ=?=
In-Reply-To: <CAF8bMcb-KbfR==w1g3ixjEpGNR7=zn3SEBtwn3i4MimYzzt-dw@mail.gmail.com>
References: <na_hvS9mQoE2Ex7h3m1UlL7AzQFz0Fuuets5kNRC7b7NBrkkYObfnkUAyj8T8oz48jBuBXZcEf0CJn2UL7f5TZ-N9jiT4qUd0eiE50R9xkU=-4805@protonmail.com>
 <24205.57605.672636.944802@stat.math.ethz.ch>
 <CAF8bMca+KFHQfb87qbZywWchXy9GJ_7qr5iD5GJ3PL-xWJO_fA@mail.gmail.com>
 <CAF8bMcb-KbfR==w1g3ixjEpGNR7=zn3SEBtwn3i4MimYzzt-dw@mail.gmail.com>
Message-ID: <cTfz9LdQTDeljdpr97HnBeKOSPRLo90TKjTnzHfV4zfOx0UrOPO5F0KcTex4T85VVqLzSXGp0MyTFZHNjCSoiTYj5nPFijuKiPf2E6siAyg=@protonmail.com>

Thank you William for the reproducible example.

Currently I using the following (same as in William's example):
setClassUnion("mMatrix", c("Matrix", "matrix"))

Martin, are the changes made in the union class handling affecting the way we should declare them?
Thank you.

Bests,
Renaud

??????? Original Message ???????
On Wednesday, April 8, 2020 11:19 AM, William Dunlap <wdunlap at tibco.com> wrote:

> Use trace() to get a bit more detail - .__C_compMatrix is looked for in the wrong environment with inherits=FALSE.
>
>> setClassUnion("mMatrix", c("Matrix", "matrix"))
> Tracing get(name, envir = env) on entry
>     x=".AllMTable", envir="<environment: 0x21dcf10>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(name, envir = env) on entry
>     x=".MTable", envir="<environment: 0x2238cf0>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(name, envir = env) on entry
>     x=".AllMTable", envir="<environment: 0x21dcf10>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get("#HAS_DUPLICATE_CLASS_NAMES", envir = .classTable) on entry
>     x="#HAS_DUPLICATE_CLASS_NAMES", envir="<environment: 0x2787710>", topenv="<environment: base>", inherits=TRUE
> Tracing get(name, envir = env) on entry
>     x=".AllMTable", envir="<environment: 0x21dcf10>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(name, envir = env) on entry
>     x=".MTable", envir="<environment: 0x2238cf0>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(name, envir = env) on entry
>     x=".MTable", envir="<environment: 0x21dcf10>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(".SigLength", envir = env) on entry
>     x=".SigLength", envir="<environment: 0x21dcf10>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(".SigLength", envir = env) on entry
>     x=".SigLength", envir="<environment: 0x21dcf10>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(name, envir = env) on entry
>     x=".MTable", envir="<environment: 0x2238cf0>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(".SigLength", envir = env) on entry
>     x=".SigLength", envir="<environment: 0x2238cf0>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(".SigLength", envir = env) on entry
>     x=".SigLength", envir="<environment: 0x2238cf0>", topenv="<environment: namespace:methods>", inherits=TRUE
> Tracing get(cname, envir = cwhere, inherits = FALSE) on entry
>     x=".__C__compMatrix", envir="<environment: R_GlobalEnv>", topenv="<environment: R_GlobalEnv>", inherits=FALSE
> Error in get(cname, envir = cwhere, inherits = FALSE) :
>   object '.__C__compMatrix' not found
> ...
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Wed, Apr 8, 2020 at 7:52 AM William Dunlap <wdunlap at tibco.com> wrote:
>
>> % R-devel --vanilla --quiet
>>> library(Matrix)
>>> setClassUnion("mMatrix", c("Matrix", "matrix"))
>> Error in get(cname, envir = cwhere, inherits = FALSE) :
>>   object '.__C__compMatrix' not found
>> Error in setClassUnion("mMatrix", c("Matrix", "matrix")) :
>>   unable to create union class:  could not set members "Matrix"
>>> sessionInfo()
>> R Under development (unstable) (2020-04-07 r78175)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 16.04.6 LTS
>>
>> Matrix products: default
>> BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.18.so
>>
>> locale:
>>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> other attached packages:
>> [1] Matrix_1.2-18
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_4.1.0  grid_4.1.0      lattice_0.20-41
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>> On Wed, Apr 8, 2020 at 7:35 AM Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>
>>>>>>>> renozao
>>>>>>>>     on Mon, 30 Mar 2020 21:20:43 +0000 writes:
>>>
>>>     > Hi,
>>>     > when R CMD check is run under R-devel (2020-03-29 r78108) I get the following error at installation:
>>>
>>>     > Error in get(cname, envir = cwhere, inherits = FALSE) :
>>>     > object ?.__C__compMatrix? not found
>>>     > Error in setClassUnion("mMatrix", c("Matrix", "matrix")) :
>>>     > unable to create union class:  could not set members "Matrix"
>>>
>>>     > This does not happen on R 3.6.3.
>>>
>>>     > I tried with Matrix listed in Depends but I still get the same error.
>>>
>>>     > Is this linked to some changes in union classes or the Matrix package?
>>>
>>>     > Thank you.
>>>
>>>     > Bests,
>>>     > Renaud
>>>
>>> Hi Renaud,
>>> One reason you got no response here, is because we don't even
>>> know about which package you are talking.
>>>
>>> So there's nothing, anybody can reproduce from your posting.
>>>
>>> There have been changes in R's dealing with class unions etc,
>>> notably even *relating* to an earlier bug report on class unions
>>> exactly for such a case which was *triggered* when people built
>>> on such Matrix classes.
>>>
>>> But we would really want to be able to reproduce what you are seeing..
>>>
>>> Best regards,
>>> Martin Maechler
>>>
>>> ETH Zurich, R Core Team *and* maintainer("Matrix")
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
	[[alternative HTML version deleted]]


From |eutn@nt @end|ng |rom |h-muen@ter@de  Thu Apr  9 09:51:56 2020
From: |eutn@nt @end|ng |rom |h-muen@ter@de (Dominik Leutnant)
Date: Thu, 9 Apr 2020 07:51:56 +0000
Subject: [R-pkg-devel] Add SystemRequirements of imported package in
 description file?
Message-ID: <936BA237-CCC6-4006-B5FC-FEF0AEA60FD4@contoso.com>

Hi all,

should ?SystemRequirements? of an imported package be listed in the description file of a package?

General scenario:
- Package X imports Package Y.
- Package Y lists ?libzzz? as SystemRequirements.

Should Package X list the SystemRequirements ?libzzz? as well? (question occurred @ https://github.com/dleutnant/influxdbr/issues/47)

Thank you and happy easter!
Dominik



Dr. Dominik Leutnant
Department of Civil Engineering
Institute for Infrastucture?Water?Resources?Environment (IWARU)
WG Urban Hydrology and Water Management

Muenster University of Applied Sciences
Corrensstr. 25
FRG-48149 M?nster
Germany

Tel.:  +49 (0) 251/83-65274
Mail:  leutnant at fh-muenster.de<mailto:leutnant at fh-muenster.de>
Web: https://www.fh-muenster.de/


	[[alternative HTML version deleted]]


From th|erry@onke||nx @end|ng |rom |nbo@be  Thu Apr  9 10:06:10 2020
From: th|erry@onke||nx @end|ng |rom |nbo@be (Thierry Onkelinx)
Date: Thu, 9 Apr 2020 10:06:10 +0200
Subject: [R-pkg-devel] Add SystemRequirements of imported package in
 description file?
In-Reply-To: <936BA237-CCC6-4006-B5FC-FEF0AEA60FD4@contoso.com>
References: <936BA237-CCC6-4006-B5FC-FEF0AEA60FD4@contoso.com>
Message-ID: <CAJuCY5yZgVc9KLyyVL+SQpUsdsbOxMZY-Ono1EVzE4h96PHSGQ@mail.gmail.com>

Dear Dominik,

IMHO you only need to list "first order" dependencies: things that your
package directly uses. Listing higher order dependencies would be redundant
as they are listed in the packages that have them as first order dependency.

Best regards,

ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>


Op do 9 apr. 2020 om 09:52 schreef Dominik Leutnant <leutnant at fh-muenster.de
>:

> Hi all,
>
> should ?SystemRequirements? of an imported package be listed in the
> description file of a package?
>
> General scenario:
> - Package X imports Package Y.
> - Package Y lists ?libzzz? as SystemRequirements.
>
> Should Package X list the SystemRequirements ?libzzz? as well? (question
> occurred @ https://github.com/dleutnant/influxdbr/issues/47)
>
> Thank you and happy easter!
> Dominik
>
>
>
> Dr. Dominik Leutnant
> Department of Civil Engineering
> Institute for Infrastucture?Water?Resources?Environment (IWARU)
> WG Urban Hydrology and Water Management
>
> Muenster University of Applied Sciences
> Corrensstr. 25
> FRG-48149 M?nster
> Germany
>
> Tel.:  +49 (0) 251/83-65274
> Mail:  leutnant at fh-muenster.de<mailto:leutnant at fh-muenster.de>
> Web: https://www.fh-muenster.de/
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From |enz @end|ng |rom |mb|@un|-|re|burg@de  Thu Apr  9 10:41:27 2020
From: |enz @end|ng |rom |mb|@un|-|re|burg@de (Stefan Lenz IMBI)
Date: Thu, 09 Apr 2020 10:41:27 +0200
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
 <510e7822-e79a-c760-0031-66d878273936@gmail.com>
 <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>
Message-ID: <20200409104127.EGroupware.Frn8sICScuDTqpktcG74Az3@_>

It is important for me to get my package into CRAN.
I haven't gotten any answer from the CRAN maintainers. I already tried to submit a version of the package before some months and haven't gotten any reply then.
The replies you gave me (thanks to all engaged in the discussion) were mixed.
I still think that the library-like import is a good feature, but if it is not possible to get this package on CRAN with it, I will change it with returning an environment like reticulate.
My question now is:
So what would be the process how to proceed?
Is there anybody who can make a decision in such cases?
Or do I make this decision myself after I lost hope that it will be accepted the way it is now?

Stefan

 
----------------urspr?ngliche Nachricht-----------------
Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], r-package-devel at r-project.org, Duncan Murdoch [murdoch.duncan at gmail.com]
Datum: Tue, 07 Apr 2020 09:52:52 -0700
-------------------------------------------------
 
 
> I did not say "interfere"... I said "problems with consistency". I don't think 
> your wholesale import of functions without corresponding help pages is 
> consistent with the normal use of R, which will make reading R code written with 
> this mechanism in place a painful source of trouble for help forums.
> 
> On the other hand, if the code is prefaced with an environment name then there will 
> be no expectation that a help page should exist on the part of someone reading that 
> code for the first time. (It will be no less obscure, but at least it won't be 
> misleading.)
> 
> On April 7, 2020 9:40:02 AM PDT, Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de> 
> wrote:
>>Thank you very much for your comment. 
>>Could you elaborate how you think that it could interfere with the help
>>system?
>>I haven't yet connected the Julia help with the R help, as the R help
>>system is quite complex and RStudio handles it again differently. So
>>it's simply like the functions were declared on the command line. They
>>have no help.
>>A simply way to print the help for a Julia function, e.g. the function
>>"first", is to call
>> juliaEval("@doc first")
>>This then simply prints the output on the command line.
>>
>> 
>>----------------urspr?ngliche Nachricht-----------------
>>Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
>>An: r-package-devel at r-project.org, Duncan Murdoch
>>[murdoch.duncan at gmail.com], Stefan Lenz IMBI
>>[lenz at imbi.uni-freiburg.de]
>>Datum: Mon, 06 Apr 2020 10:51:53 -0700
>>-------------------------------------------------
>> 
>> 
>>> One could take the position that the library and require functions
>>were a mistake 
>>> to begin with and that all contributed packages should be accessed
>>using ::... or 
>>> one could recognize that these functions are an expected feature of R
>>at this 
>>> point and then it is not defensible to ban the proposed approach of
>>importing 
>>> names as Stefan wants to. I don't think it is fair to require this
>>higher level of 
>>> specificity just because it involves use of attach.
>>> 
>>> That said, another feature of R packages is the integrated help
>>system... 
>>> importing Julia functions wholesale may lead to problems with
>>consistency in 
>>> navigating the help files. IMO it may be justifiable to ban this
>>particular 
>>> syntactic convenience to maintain some separation in the minds of
>>users looking 
>>> for help on these new functions, since the syntactic and semantic
>>structure of 
>>> functions from another language may not align well with normal R
>>functions. But I 
>>> am not familiar with Julia or Stefan's package or the support it
>>brings in this 
>>> area... I just disagree with banning a "library" lookalike function
>>"just 
>>> because" it happens to involve attach.
>>> 
>>> On April 6, 2020 8:40:12 AM PDT, Duncan Murdoch
>><murdoch.duncan at gmail.com> 
>>> wrote:
>>>>On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
>>>>> Yes, as I wrote earlier, I would like to imitate the behaviour of
>>>>loading an R package
>>>>> 
>>>>> juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>>>>> myJuliaFunction()
>>>>> 
>>>>> like R:
>>>>> 
>>>>> library("MyRPackage") # exports myRFunction
>>>>> myRFunction()
>>>>> 
>>>>> I could return an environment, such that the call becomes
>>>>> 
>>>>> attach(juliaUsing("SomeJuliaPackage"))
>>>>> myJuliaFunction()
>>>>
>>>>I wouldn't use it that way. I'd write it as
>>>>
>>>> sjp <- juliaUsing("SomeJuliaPackage")
>>>> sjp$myJuliaFunction()
>>>>
>>>>This is similar to the advice to use pkg::foo() rather than
>>>>library(pkg) 
>>>>followed by plain foo() in the code.
>>>>
>>>>Duncan Murdoch
>>>>
>>>>> 
>>>>> But calling juliaUsing(), as it is now, takes care that if a
>>package
>>>>is imported a second time,
>>>>> the first data base is removed via detach().
>>>>> This way, users do not have to worry about calling juliaUsing()
>>>>mutliple times in a script, same
>>>>> as R users don't have to worry about calling library() multiple
>>>>times.
>>>>> If you call the code with attach() multiple times and do not
>>detach,
>>>>you get your screen cluttered with
>>>>> warnings "xxx is masked by xxx".
>>>>> So I would say it would decrease user-friendliness to return an
>>>>environment.
>>>>> I also want to make explicit, that the call to attach
>>>>> occurs only once in my code, after creating the environment:
>>>>> 
>>>>> envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>>>>> if (envName %in% search()) {
>>>>> detach(envName, character.only = TRUE)
>>>>> }
>>>>> attach(funenv, name = envName)
>>>>> 
>>>>> This code is only called by juliaImport() and juliaUsing(), which
>>>>aren't called by any other function of
>>>>> the package
>>>>> and are supposed to be called directly by the user.
>>>>> 
>>>>> Stefan
>>>>> 
>>>>> ----------------urspr?ngliche Nachricht-----------------
>>>>> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
>>>>> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker
>>>>[bbolker at gmail.com]
>>>>> Kopie: List r-package-devel [r-package-devel at r-project.org]
>>>>> Datum: Mon, 6 Apr 2020 11:00:09 -0400
>>>>> -------------------------------------------------
>>>>> 
>>>>> 
>>>>>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>>>>>
>>>>>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>>>>>> | Just reply to the CRAN maintainers and explain this situation.
>>>>It?s
>>>>>>> | slightly buried, but the e-mail you received does say:
>>>>>>> |
>>>>>>> | > If you are fairly certain the rejection is a false positive,
>>>>please reply-all to this
>>>>>>> | > message and explain.
>>>>>>>
>>>>>>> True, but this misses the "Letter of the law" versus the "Spirit
>>of
>>>>the law".
>>>>>>>
>>>>>>> It might be worth mentioning that use of attach() is seen, to
>>find
>>>>one poor
>>>>>>> analogy, pretty much like use of global variables these days.
>>"Just
>>>>because
>>>>>>> you could does not mean you should".
>>>>>>>
>>>>>>> See e.g. one of the first google hits for 'r do not use attach'
>>>>here:
>>>>>>>
>>>>https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>>>>>
>>>>>> I don't have a strong opinion on this: the proposed use seems to
>>be
>>>>no
>>>>>> worse than library() or require(). Those are fine for users to
>>use,
>>>>but
>>>>>> are discouraged in a package. If the attach() never happens
>>without
>>>>an
>>>>>> explicit request from the user (and that's what it sounds like),
>>I'd
>>>>say
>>>>>> it's probably okay.
>>>>>>
>>>>>> However, there is an easy workaround: just return the environment
>>>>>> without attaching it. Then the user has the choice of attaching
>>it,
>>>>or
>>>>>> using it as a prefix when they call the functions in it. So it's
>>not
>>>>as
>>>>>> though this will destroy the utility of the package if Stefan
>>isn't
>>>>>> allowed to call attach().
>>>>>>
>>>>>> Duncan Murdoch
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>> 
>>>>>
>>>>
>>>>______________________________________________
>>>>R-package-devel at r-project.org mailing list
>>>>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
> 


-- 

Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de


From Jor|@@Mey@ @end|ng |rom UGent@be  Thu Apr  9 14:59:23 2020
From: Jor|@@Mey@ @end|ng |rom UGent@be (Joris Meys)
Date: Thu, 9 Apr 2020 12:59:23 +0000
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <20200409104127.EGroupware.Frn8sICScuDTqpktcG74Az3@_>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
 <510e7822-e79a-c760-0031-66d878273936@gmail.com>
 <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>,
 <20200409104127.EGroupware.Frn8sICScuDTqpktcG74Az3@_>
Message-ID: <1586437163584.5571@UGent.be>

Hi Stefan,

first of all, thank you for taking the time and effort to link Julia and R. That said, I would strongly encourage you to go for a reticulate-like approach. There's a good reason for that. Once you start mixing languages, you really want to have some indication what code is ran in what language. Especially since I can imagine at one point there'll be a Julia function masking an R function of the same name, and that is going to cause a world of hurt and confusion. 

If you don't like environments, you can try to use namespace functionality. There's the "namespace" package that allows you to create one, and some internal namespace functions are visible (eg namespaceExport() from base). That's going to be the closest to mimicking R packages, but it's beyond my knowledge to know how feasible this approach actually is. I hope someone else chimes in, especially if this is dangerous for other reasons I overlooked.

Kind regards
Joris

Joris Meys
Statistician
T +32 9 264 61 79

Department Data Analysis and Mathematical Modelling

Campus Coupure, Block A 1st floor 110.050, Coupure links 653, B-9000 Ghent, Belgium
T administration office +32 9 264 59 32

www.ugent.be

e-maildisclaimer


________________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
Sent: Thursday, April 9, 2020 10:41 AM
To: Jeff Newmiller; r-package-devel at r-project.org; Duncan Murdoch
Subject: Re: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission JuliaConnectoR 0.5.0

It is important for me to get my package into CRAN.
I haven't gotten any answer from the CRAN maintainers. I already tried to submit a version of the package before some months and haven't gotten any reply then.
The replies you gave me (thanks to all engaged in the discussion) were mixed.
I still think that the library-like import is a good feature, but if it is not possible to get this package on CRAN with it, I will change it with returning an environment like reticulate.
My question now is:
So what would be the process how to proceed?
Is there anybody who can make a decision in such cases?
Or do I make this decision myself after I lost hope that it will be accepted the way it is now?

Stefan


----------------urspr?ngliche Nachricht-----------------
Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], r-package-devel at r-project.org, Duncan Murdoch [murdoch.duncan at gmail.com]
Datum: Tue, 07 Apr 2020 09:52:52 -0700
-------------------------------------------------


> I did not say "interfere"... I said "problems with consistency". I don't think
> your wholesale import of functions without corresponding help pages is
> consistent with the normal use of R, which will make reading R code written with
> this mechanism in place a painful source of trouble for help forums.
>
> On the other hand, if the code is prefaced with an environment name then there will
> be no expectation that a help page should exist on the part of someone reading that
> code for the first time. (It will be no less obscure, but at least it won't be
> misleading.)
>
> On April 7, 2020 9:40:02 AM PDT, Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
> wrote:
>>Thank you very much for your comment.
>>Could you elaborate how you think that it could interfere with the help
>>system?
>>I haven't yet connected the Julia help with the R help, as the R help
>>system is quite complex and RStudio handles it again differently. So
>>it's simply like the functions were declared on the command line. They
>>have no help.
>>A simply way to print the help for a Julia function, e.g. the function
>>"first", is to call
>> juliaEval("@doc first")
>>This then simply prints the output on the command line.
>>
>>
>>----------------urspr?ngliche Nachricht-----------------
>>Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
>>An: r-package-devel at r-project.org, Duncan Murdoch
>>[murdoch.duncan at gmail.com], Stefan Lenz IMBI
>>[lenz at imbi.uni-freiburg.de]
>>Datum: Mon, 06 Apr 2020 10:51:53 -0700
>>-------------------------------------------------
>>
>>
>>> One could take the position that the library and require functions
>>were a mistake
>>> to begin with and that all contributed packages should be accessed
>>using ::... or
>>> one could recognize that these functions are an expected feature of R
>>at this
>>> point and then it is not defensible to ban the proposed approach of
>>importing
>>> names as Stefan wants to. I don't think it is fair to require this
>>higher level of
>>> specificity just because it involves use of attach.
>>>
>>> That said, another feature of R packages is the integrated help
>>system...
>>> importing Julia functions wholesale may lead to problems with
>>consistency in
>>> navigating the help files. IMO it may be justifiable to ban this
>>particular
>>> syntactic convenience to maintain some separation in the minds of
>>users looking
>>> for help on these new functions, since the syntactic and semantic
>>structure of
>>> functions from another language may not align well with normal R
>>functions. But I
>>> am not familiar with Julia or Stefan's package or the support it
>>brings in this
>>> area... I just disagree with banning a "library" lookalike function
>>"just
>>> because" it happens to involve attach.
>>>
>>> On April 6, 2020 8:40:12 AM PDT, Duncan Murdoch
>><murdoch.duncan at gmail.com>
>>> wrote:
>>>>On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
>>>>> Yes, as I wrote earlier, I would like to imitate the behaviour of
>>>>loading an R package
>>>>>
>>>>> juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>>>>> myJuliaFunction()
>>>>>
>>>>> like R:
>>>>>
>>>>> library("MyRPackage") # exports myRFunction
>>>>> myRFunction()
>>>>>
>>>>> I could return an environment, such that the call becomes
>>>>>
>>>>> attach(juliaUsing("SomeJuliaPackage"))
>>>>> myJuliaFunction()
>>>>
>>>>I wouldn't use it that way. I'd write it as
>>>>
>>>> sjp <- juliaUsing("SomeJuliaPackage")
>>>> sjp$myJuliaFunction()
>>>>
>>>>This is similar to the advice to use pkg::foo() rather than
>>>>library(pkg)
>>>>followed by plain foo() in the code.
>>>>
>>>>Duncan Murdoch
>>>>
>>>>>
>>>>> But calling juliaUsing(), as it is now, takes care that if a
>>package
>>>>is imported a second time,
>>>>> the first data base is removed via detach().
>>>>> This way, users do not have to worry about calling juliaUsing()
>>>>mutliple times in a script, same
>>>>> as R users don't have to worry about calling library() multiple
>>>>times.
>>>>> If you call the code with attach() multiple times and do not
>>detach,
>>>>you get your screen cluttered with
>>>>> warnings "xxx is masked by xxx".
>>>>> So I would say it would decrease user-friendliness to return an
>>>>environment.
>>>>> I also want to make explicit, that the call to attach
>>>>> occurs only once in my code, after creating the environment:
>>>>>
>>>>> envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>>>>> if (envName %in% search()) {
>>>>> detach(envName, character.only = TRUE)
>>>>> }
>>>>> attach(funenv, name = envName)
>>>>>
>>>>> This code is only called by juliaImport() and juliaUsing(), which
>>>>aren't called by any other function of
>>>>> the package
>>>>> and are supposed to be called directly by the user.
>>>>>
>>>>> Stefan
>>>>>
>>>>> ----------------urspr?ngliche Nachricht-----------------
>>>>> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
>>>>> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker
>>>>[bbolker at gmail.com]
>>>>> Kopie: List r-package-devel [r-package-devel at r-project.org]
>>>>> Datum: Mon, 6 Apr 2020 11:00:09 -0400
>>>>> -------------------------------------------------
>>>>>
>>>>>
>>>>>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>>>>>
>>>>>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>>>>>> | Just reply to the CRAN maintainers and explain this situation.
>>>>It?s
>>>>>>> | slightly buried, but the e-mail you received does say:
>>>>>>> |
>>>>>>> | > If you are fairly certain the rejection is a false positive,
>>>>please reply-all to this
>>>>>>> | > message and explain.
>>>>>>>
>>>>>>> True, but this misses the "Letter of the law" versus the "Spirit
>>of
>>>>the law".
>>>>>>>
>>>>>>> It might be worth mentioning that use of attach() is seen, to
>>find
>>>>one poor
>>>>>>> analogy, pretty much like use of global variables these days.
>>"Just
>>>>because
>>>>>>> you could does not mean you should".
>>>>>>>
>>>>>>> See e.g. one of the first google hits for 'r do not use attach'
>>>>here:
>>>>>>>
>>>>https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>>>>>
>>>>>> I don't have a strong opinion on this: the proposed use seems to
>>be
>>>>no
>>>>>> worse than library() or require(). Those are fine for users to
>>use,
>>>>but
>>>>>> are discouraged in a package. If the attach() never happens
>>without
>>>>an
>>>>>> explicit request from the user (and that's what it sounds like),
>>I'd
>>>>say
>>>>>> it's probably okay.
>>>>>>
>>>>>> However, there is an easy workaround: just return the environment
>>>>>> without attaching it. Then the user has the choice of attaching
>>it,
>>>>or
>>>>>> using it as a prefix when they call the functions in it. So it's
>>not
>>>>as
>>>>>> though this will destroy the utility of the package if Stefan
>>isn't
>>>>>> allowed to call attach().
>>>>>>
>>>>>> Duncan Murdoch
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>>
>>>>>
>>>>
>>>>______________________________________________
>>>>R-package-devel at r-project.org mailing list
>>>>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>


--

Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |enz @end|ng |rom |mb|@un|-|re|burg@de  Thu Apr  9 17:30:35 2020
From: |enz @end|ng |rom |mb|@un|-|re|burg@de (Stefan Lenz IMBI)
Date: Thu, 09 Apr 2020 17:30:35 +0200
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <20200409104127.EGroupware.Frn8sICScuDTqpktcG74Az3@_>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
 <510e7822-e79a-c760-0031-66d878273936@gmail.com>
 <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>,
 <20200409104127.EGroupware.Frn8sICScuDTqpktcG74Az3@_>
Message-ID: <20200409173035.EGroupware.9va3hIotP_Ry5zTry04BGzf@_>

Hi!
Thanks for pointing to the package "namespace". 
I experimented with it but I couldn't really figure out how it is supposed to work:

The following code leads to strange errors that I don't understand:

 > nse <- list2env(list(data="x", asdf = 2))
 > namespace::registerNamespace(name = "NewNamespace", env = nse)
 > NewNamespace::asdf
 Error in asNamespace(ns) : not a namespace

It would really be interesting if someone could comment on whether the namespace approach is feasible, how it is supposed to work, and whether/how it would be better than using attach.
Greetings!
Stefan

 
----------------urspr?ngliche Nachricht-----------------
Von: Joris Meys [Joris.Meys at ugent.be]
An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], Jeff Newmiller [jdnewmil at dcn.davis.ca.us], r-package-devel at r-project.org, Duncan Murdoch [murdoch.duncan at gmail.com]
Datum: Thu, 9 Apr 2020 12:59:23 +0000
-------------------------------------------------
 
 
> Hi Stefan,
> 
> first of all, thank you for taking the time and effort to link Julia and R. That 
> said, I would strongly encourage you to go for a reticulate-like approach. 
> There's a good reason for that. Once you start mixing languages, you really want 
> to have some indication what code is ran in what language. Especially since I can 
> imagine at one point there'll be a Julia function masking an R function of the same 
> name, and that is going to cause a world of hurt and confusion.
> 
> If you don't like environments, you can try to use namespace functionality. 
> There's the "namespace" package that allows you to create one, and some internal 
> namespace functions are visible (eg namespaceExport() from base). That's 
> going to be the closest to mimicking R packages, but it's beyond my knowledge to 
> know how feasible this approach actually is. I hope someone else chimes in, 
> especially if this is dangerous for other reasons I overlooked.
> 
> Kind regards
> Joris
> 
> Joris Meys
> Statistician
> T +32 9 264 61 79
> 
> Department Data Analysis and Mathematical Modelling
> 
> Campus Coupure, Block A 1st floor 110.050, Coupure links 653, B-9000 Ghent, 
> Belgium
> T administration office +32 9 264 59 32
> 
> www.ugent.be
> 
> e-maildisclaimer
> 
> 
> ________________________________________
> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf 
> of Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
> Sent: Thursday, April 9, 2020 10:41 AM
> To: Jeff Newmiller; r-package-devel at r-project.org; Duncan Murdoch
> Subject: Re: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission 
> JuliaConnectoR 0.5.0
> 
> It is important for me to get my package into CRAN.
> I haven't gotten any answer from the CRAN maintainers. I already tried to submit a 
> version of the package before some months and haven't gotten any reply then.
> The replies you gave me (thanks to all engaged in the discussion) were mixed.
> I still think that the library-like import is a good feature, but if it is not 
> possible to get this package on CRAN with it, I will change it with returning an 
> environment like reticulate.
> My question now is:
> So what would be the process how to proceed?
> Is there anybody who can make a decision in such cases?
> Or do I make this decision myself after I lost hope that it will be accepted the way 
> it is now?
> 
> Stefan
> 
> 
> ----------------urspr?ngliche Nachricht-----------------
> Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
> An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], 
> r-package-devel at r-project.org, Duncan Murdoch 
> [murdoch.duncan at gmail.com]
> Datum: Tue, 07 Apr 2020 09:52:52 -0700
> -------------------------------------------------
> 
> 
>> I did not say "interfere"... I said "problems with consistency". I don't think
>> your wholesale import of functions without corresponding help pages is
>> consistent with the normal use of R, which will make reading R code written with
>> this mechanism in place a painful source of trouble for help forums.
>>
>> On the other hand, if the code is prefaced with an environment name then there will
>> be no expectation that a help page should exist on the part of someone reading that
>> code for the first time. (It will be no less obscure, but at least it won't be
>> misleading.)
>>
>> On April 7, 2020 9:40:02 AM PDT, Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
>> wrote:
>>>Thank you very much for your comment.
>>>Could you elaborate how you think that it could interfere with the help
>>>system?
>>>I haven't yet connected the Julia help with the R help, as the R help
>>>system is quite complex and RStudio handles it again differently. So
>>>it's simply like the functions were declared on the command line. They
>>>have no help.
>>>A simply way to print the help for a Julia function, e.g. the function
>>>"first", is to call
>>> juliaEval("@doc first")
>>>This then simply prints the output on the command line.
>>>
>>>
>>>----------------urspr?ngliche Nachricht-----------------
>>>Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
>>>An: r-package-devel at r-project.org, Duncan Murdoch
>>>[murdoch.duncan at gmail.com], Stefan Lenz IMBI
>>>[lenz at imbi.uni-freiburg.de]
>>>Datum: Mon, 06 Apr 2020 10:51:53 -0700
>>>-------------------------------------------------
>>>
>>>
>>>> One could take the position that the library and require functions
>>>were a mistake
>>>> to begin with and that all contributed packages should be accessed
>>>using ::... or
>>>> one could recognize that these functions are an expected feature of R
>>>at this
>>>> point and then it is not defensible to ban the proposed approach of
>>>importing
>>>> names as Stefan wants to. I don't think it is fair to require this
>>>higher level of
>>>> specificity just because it involves use of attach.
>>>>
>>>> That said, another feature of R packages is the integrated help
>>>system...
>>>> importing Julia functions wholesale may lead to problems with
>>>consistency in
>>>> navigating the help files. IMO it may be justifiable to ban this
>>>particular
>>>> syntactic convenience to maintain some separation in the minds of
>>>users looking
>>>> for help on these new functions, since the syntactic and semantic
>>>structure of
>>>> functions from another language may not align well with normal R
>>>functions. But I
>>>> am not familiar with Julia or Stefan's package or the support it
>>>brings in this
>>>> area... I just disagree with banning a "library" lookalike function
>>>"just
>>>> because" it happens to involve attach.
>>>>
>>>> On April 6, 2020 8:40:12 AM PDT, Duncan Murdoch
>>><murdoch.duncan at gmail.com>
>>>> wrote:
>>>>>On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
>>>>>> Yes, as I wrote earlier, I would like to imitate the behaviour of
>>>>>loading an R package
>>>>>>
>>>>>> juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>>>>>> myJuliaFunction()
>>>>>>
>>>>>> like R:
>>>>>>
>>>>>> library("MyRPackage") # exports myRFunction
>>>>>> myRFunction()
>>>>>>
>>>>>> I could return an environment, such that the call becomes
>>>>>>
>>>>>> attach(juliaUsing("SomeJuliaPackage"))
>>>>>> myJuliaFunction()
>>>>>
>>>>>I wouldn't use it that way. I'd write it as
>>>>>
>>>>> sjp <- juliaUsing("SomeJuliaPackage")
>>>>> sjp$myJuliaFunction()
>>>>>
>>>>>This is similar to the advice to use pkg::foo() rather than
>>>>>library(pkg)
>>>>>followed by plain foo() in the code.
>>>>>
>>>>>Duncan Murdoch
>>>>>
>>>>>>
>>>>>> But calling juliaUsing(), as it is now, takes care that if a
>>>package
>>>>>is imported a second time,
>>>>>> the first data base is removed via detach().
>>>>>> This way, users do not have to worry about calling juliaUsing()
>>>>>mutliple times in a script, same
>>>>>> as R users don't have to worry about calling library() multiple
>>>>>times.
>>>>>> If you call the code with attach() multiple times and do not
>>>detach,
>>>>>you get your screen cluttered with
>>>>>> warnings "xxx is masked by xxx".
>>>>>> So I would say it would decrease user-friendliness to return an
>>>>>environment.
>>>>>> I also want to make explicit, that the call to attach
>>>>>> occurs only once in my code, after creating the environment:
>>>>>>
>>>>>> envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>>>>>> if (envName %in% search()) {
>>>>>> detach(envName, character.only = TRUE)
>>>>>> }
>>>>>> attach(funenv, name = envName)
>>>>>>
>>>>>> This code is only called by juliaImport() and juliaUsing(), which
>>>>>aren't called by any other function of
>>>>>> the package
>>>>>> and are supposed to be called directly by the user.
>>>>>>
>>>>>> Stefan
>>>>>>
>>>>>> ----------------urspr?ngliche Nachricht-----------------
>>>>>> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
>>>>>> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker
>>>>>[bbolker at gmail.com]
>>>>>> Kopie: List r-package-devel [r-package-devel at r-project.org]
>>>>>> Datum: Mon, 6 Apr 2020 11:00:09 -0400
>>>>>> -------------------------------------------------
>>>>>>
>>>>>>
>>>>>>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>>>>>>
>>>>>>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>>>>>>> | Just reply to the CRAN maintainers and explain this situation.
>>>>>It?s
>>>>>>>> | slightly buried, but the e-mail you received does say:
>>>>>>>> |
>>>>>>>> | > If you are fairly certain the rejection is a false positive,
>>>>>please reply-all to this
>>>>>>>> | > message and explain.
>>>>>>>>
>>>>>>>> True, but this misses the "Letter of the law" versus the "Spirit
>>>of
>>>>>the law".
>>>>>>>>
>>>>>>>> It might be worth mentioning that use of attach() is seen, to
>>>find
>>>>>one poor
>>>>>>>> analogy, pretty much like use of global variables these days.
>>>"Just
>>>>>because
>>>>>>>> you could does not mean you should".
>>>>>>>>
>>>>>>>> See e.g. one of the first google hits for 'r do not use attach'
>>>>>here:
>>>>>>>>
>>>>>https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>>>>>>
>>>>>>> I don't have a strong opinion on this: the proposed use seems to
>>>be
>>>>>no
>>>>>>> worse than library() or require(). Those are fine for users to
>>>use,
>>>>>but
>>>>>>> are discouraged in a package. If the attach() never happens
>>>without
>>>>>an
>>>>>>> explicit request from the user (and that's what it sounds like),
>>>I'd
>>>>>say
>>>>>>> it's probably okay.
>>>>>>>
>>>>>>> However, there is an easy workaround: just return the environment
>>>>>>> without attaching it. Then the user has the choice of attaching
>>>it,
>>>>>or
>>>>>>> using it as a prefix when they call the functions in it. So it's
>>>not
>>>>>as
>>>>>>> though this will destroy the utility of the package if Stefan
>>>isn't
>>>>>>> allowed to call attach().
>>>>>>>
>>>>>>> Duncan Murdoch
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>>______________________________________________
>>>>>R-package-devel at r-project.org mailing list
>>>>>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>
> 
> 
> --
> 
> Stefan Lenz
> 
> Institut f?r Medizinische Biometrie und Statistik
> Medizinische Fakult?t / Universit?tsklinikum Freiburg
> 
> Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg
> 
> Tel.: 0761/203-6670
> E-Mail: lenz at imbi.uni-freiburg.de
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


-- 

Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de


From Jor|@@Mey@ @end|ng |rom UGent@be  Thu Apr  9 17:37:09 2020
From: Jor|@@Mey@ @end|ng |rom UGent@be (Joris Meys)
Date: Thu, 9 Apr 2020 15:37:09 +0000
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <20200409173035.EGroupware.9va3hIotP_Ry5zTry04BGzf@_>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
 <510e7822-e79a-c760-0031-66d878273936@gmail.com>
 <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>,
 <20200409104127.EGroupware.Frn8sICScuDTqpktcG74Az3@_>,
 <20200409173035.EGroupware.9va3hIotP_Ry5zTry04BGzf@_>
Message-ID: <1586446629798.79698@UGent.be>

Hi Stefan,

you need the function makeNamespace() to create the environment as a namespace. Look at the examples in the help files, I found them rather instructive. I also hope someone else chimes in to shed some light on whether or not that approach would be acceptable. 


Joris Meys
Statistician
T +32 9 264 61 79

Department Data Analysis and Mathematical Modelling

Campus Coupure, Block A 1st floor 110.050, Coupure links 653, B-9000 Ghent, Belgium
T administration office +32 9 264 59 32

www.ugent.be

e-maildisclaimer


________________________________________
From: Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
Sent: Thursday, April 9, 2020 5:30 PM
To: Joris Meys; Jeff Newmiller; r-package-devel at r-project.org; Duncan Murdoch
Subject: Re: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission JuliaConnectoR 0.5.0

Hi!
Thanks for pointing to the package "namespace".
I experimented with it but I couldn't really figure out how it is supposed to work:

The following code leads to strange errors that I don't understand:

 > nse <- list2env(list(data="x", asdf = 2))
 > namespace::registerNamespace(name = "NewNamespace", env = nse)
 > NewNamespace::asdf
 Error in asNamespace(ns) : not a namespace

It would really be interesting if someone could comment on whether the namespace approach is feasible, how it is supposed to work, and whether/how it would be better than using attach.
Greetings!
Stefan


----------------urspr?ngliche Nachricht-----------------
Von: Joris Meys [Joris.Meys at ugent.be]
An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], Jeff Newmiller [jdnewmil at dcn.davis.ca.us], r-package-devel at r-project.org, Duncan Murdoch [murdoch.duncan at gmail.com]
Datum: Thu, 9 Apr 2020 12:59:23 +0000
-------------------------------------------------


> Hi Stefan,
>
> first of all, thank you for taking the time and effort to link Julia and R. That
> said, I would strongly encourage you to go for a reticulate-like approach.
> There's a good reason for that. Once you start mixing languages, you really want
> to have some indication what code is ran in what language. Especially since I can
> imagine at one point there'll be a Julia function masking an R function of the same
> name, and that is going to cause a world of hurt and confusion.
>
> If you don't like environments, you can try to use namespace functionality.
> There's the "namespace" package that allows you to create one, and some internal
> namespace functions are visible (eg namespaceExport() from base). That's
> going to be the closest to mimicking R packages, but it's beyond my knowledge to
> know how feasible this approach actually is. I hope someone else chimes in,
> especially if this is dangerous for other reasons I overlooked.
>
> Kind regards
> Joris
>
> Joris Meys
> Statistician
> T +32 9 264 61 79
>
> Department Data Analysis and Mathematical Modelling
>
> Campus Coupure, Block A 1st floor 110.050, Coupure links 653, B-9000 Ghent,
> Belgium
> T administration office +32 9 264 59 32
>
> www.ugent.be
>
> e-maildisclaimer
>
>
> ________________________________________
> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf
> of Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
> Sent: Thursday, April 9, 2020 10:41 AM
> To: Jeff Newmiller; r-package-devel at r-project.org; Duncan Murdoch
> Subject: Re: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
> JuliaConnectoR 0.5.0
>
> It is important for me to get my package into CRAN.
> I haven't gotten any answer from the CRAN maintainers. I already tried to submit a
> version of the package before some months and haven't gotten any reply then.
> The replies you gave me (thanks to all engaged in the discussion) were mixed.
> I still think that the library-like import is a good feature, but if it is not
> possible to get this package on CRAN with it, I will change it with returning an
> environment like reticulate.
> My question now is:
> So what would be the process how to proceed?
> Is there anybody who can make a decision in such cases?
> Or do I make this decision myself after I lost hope that it will be accepted the way
> it is now?
>
> Stefan
>
>
> ----------------urspr?ngliche Nachricht-----------------
> Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
> An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de],
> r-package-devel at r-project.org, Duncan Murdoch
> [murdoch.duncan at gmail.com]
> Datum: Tue, 07 Apr 2020 09:52:52 -0700
> -------------------------------------------------
>
>
>> I did not say "interfere"... I said "problems with consistency". I don't think
>> your wholesale import of functions without corresponding help pages is
>> consistent with the normal use of R, which will make reading R code written with
>> this mechanism in place a painful source of trouble for help forums.
>>
>> On the other hand, if the code is prefaced with an environment name then there will
>> be no expectation that a help page should exist on the part of someone reading that
>> code for the first time. (It will be no less obscure, but at least it won't be
>> misleading.)
>>
>> On April 7, 2020 9:40:02 AM PDT, Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
>> wrote:
>>>Thank you very much for your comment.
>>>Could you elaborate how you think that it could interfere with the help
>>>system?
>>>I haven't yet connected the Julia help with the R help, as the R help
>>>system is quite complex and RStudio handles it again differently. So
>>>it's simply like the functions were declared on the command line. They
>>>have no help.
>>>A simply way to print the help for a Julia function, e.g. the function
>>>"first", is to call
>>> juliaEval("@doc first")
>>>This then simply prints the output on the command line.
>>>
>>>
>>>----------------urspr?ngliche Nachricht-----------------
>>>Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
>>>An: r-package-devel at r-project.org, Duncan Murdoch
>>>[murdoch.duncan at gmail.com], Stefan Lenz IMBI
>>>[lenz at imbi.uni-freiburg.de]
>>>Datum: Mon, 06 Apr 2020 10:51:53 -0700
>>>-------------------------------------------------
>>>
>>>
>>>> One could take the position that the library and require functions
>>>were a mistake
>>>> to begin with and that all contributed packages should be accessed
>>>using ::... or
>>>> one could recognize that these functions are an expected feature of R
>>>at this
>>>> point and then it is not defensible to ban the proposed approach of
>>>importing
>>>> names as Stefan wants to. I don't think it is fair to require this
>>>higher level of
>>>> specificity just because it involves use of attach.
>>>>
>>>> That said, another feature of R packages is the integrated help
>>>system...
>>>> importing Julia functions wholesale may lead to problems with
>>>consistency in
>>>> navigating the help files. IMO it may be justifiable to ban this
>>>particular
>>>> syntactic convenience to maintain some separation in the minds of
>>>users looking
>>>> for help on these new functions, since the syntactic and semantic
>>>structure of
>>>> functions from another language may not align well with normal R
>>>functions. But I
>>>> am not familiar with Julia or Stefan's package or the support it
>>>brings in this
>>>> area... I just disagree with banning a "library" lookalike function
>>>"just
>>>> because" it happens to involve attach.
>>>>
>>>> On April 6, 2020 8:40:12 AM PDT, Duncan Murdoch
>>><murdoch.duncan at gmail.com>
>>>> wrote:
>>>>>On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
>>>>>> Yes, as I wrote earlier, I would like to imitate the behaviour of
>>>>>loading an R package
>>>>>>
>>>>>> juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>>>>>> myJuliaFunction()
>>>>>>
>>>>>> like R:
>>>>>>
>>>>>> library("MyRPackage") # exports myRFunction
>>>>>> myRFunction()
>>>>>>
>>>>>> I could return an environment, such that the call becomes
>>>>>>
>>>>>> attach(juliaUsing("SomeJuliaPackage"))
>>>>>> myJuliaFunction()
>>>>>
>>>>>I wouldn't use it that way. I'd write it as
>>>>>
>>>>> sjp <- juliaUsing("SomeJuliaPackage")
>>>>> sjp$myJuliaFunction()
>>>>>
>>>>>This is similar to the advice to use pkg::foo() rather than
>>>>>library(pkg)
>>>>>followed by plain foo() in the code.
>>>>>
>>>>>Duncan Murdoch
>>>>>
>>>>>>
>>>>>> But calling juliaUsing(), as it is now, takes care that if a
>>>package
>>>>>is imported a second time,
>>>>>> the first data base is removed via detach().
>>>>>> This way, users do not have to worry about calling juliaUsing()
>>>>>mutliple times in a script, same
>>>>>> as R users don't have to worry about calling library() multiple
>>>>>times.
>>>>>> If you call the code with attach() multiple times and do not
>>>detach,
>>>>>you get your screen cluttered with
>>>>>> warnings "xxx is masked by xxx".
>>>>>> So I would say it would decrease user-friendliness to return an
>>>>>environment.
>>>>>> I also want to make explicit, that the call to attach
>>>>>> occurs only once in my code, after creating the environment:
>>>>>>
>>>>>> envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>>>>>> if (envName %in% search()) {
>>>>>> detach(envName, character.only = TRUE)
>>>>>> }
>>>>>> attach(funenv, name = envName)
>>>>>>
>>>>>> This code is only called by juliaImport() and juliaUsing(), which
>>>>>aren't called by any other function of
>>>>>> the package
>>>>>> and are supposed to be called directly by the user.
>>>>>>
>>>>>> Stefan
>>>>>>
>>>>>> ----------------urspr?ngliche Nachricht-----------------
>>>>>> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
>>>>>> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker
>>>>>[bbolker at gmail.com]
>>>>>> Kopie: List r-package-devel [r-package-devel at r-project.org]
>>>>>> Datum: Mon, 6 Apr 2020 11:00:09 -0400
>>>>>> -------------------------------------------------
>>>>>>
>>>>>>
>>>>>>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>>>>>>
>>>>>>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>>>>>>> | Just reply to the CRAN maintainers and explain this situation.
>>>>>It?s
>>>>>>>> | slightly buried, but the e-mail you received does say:
>>>>>>>> |
>>>>>>>> | > If you are fairly certain the rejection is a false positive,
>>>>>please reply-all to this
>>>>>>>> | > message and explain.
>>>>>>>>
>>>>>>>> True, but this misses the "Letter of the law" versus the "Spirit
>>>of
>>>>>the law".
>>>>>>>>
>>>>>>>> It might be worth mentioning that use of attach() is seen, to
>>>find
>>>>>one poor
>>>>>>>> analogy, pretty much like use of global variables these days.
>>>"Just
>>>>>because
>>>>>>>> you could does not mean you should".
>>>>>>>>
>>>>>>>> See e.g. one of the first google hits for 'r do not use attach'
>>>>>here:
>>>>>>>>
>>>>>https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>>>>>>
>>>>>>> I don't have a strong opinion on this: the proposed use seems to
>>>be
>>>>>no
>>>>>>> worse than library() or require(). Those are fine for users to
>>>use,
>>>>>but
>>>>>>> are discouraged in a package. If the attach() never happens
>>>without
>>>>>an
>>>>>>> explicit request from the user (and that's what it sounds like),
>>>I'd
>>>>>say
>>>>>>> it's probably okay.
>>>>>>>
>>>>>>> However, there is an easy workaround: just return the environment
>>>>>>> without attaching it. Then the user has the choice of attaching
>>>it,
>>>>>or
>>>>>>> using it as a prefix when they call the functions in it. So it's
>>>not
>>>>>as
>>>>>>> though this will destroy the utility of the package if Stefan
>>>isn't
>>>>>>> allowed to call attach().
>>>>>>>
>>>>>>> Duncan Murdoch
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>>______________________________________________
>>>>>R-package-devel at r-project.org mailing list
>>>>>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>
>
>
> --
>
> Stefan Lenz
>
> Institut f?r Medizinische Biometrie und Statistik
> Medizinische Fakult?t / Universit?tsklinikum Freiburg
>
> Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg
>
> Tel.: 0761/203-6670
> E-Mail: lenz at imbi.uni-freiburg.de
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


--

Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de


From |enz @end|ng |rom |mb|@un|-|re|burg@de  Thu Apr  9 18:09:18 2020
From: |enz @end|ng |rom |mb|@un|-|re|burg@de (Stefan Lenz IMBI)
Date: Thu, 09 Apr 2020 18:09:18 +0200
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <20200409173035.EGroupware.9va3hIotP_Ry5zTry04BGzf@_>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
 <510e7822-e79a-c760-0031-66d878273936@gmail.com>
 <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>,
 <20200409104127.EGroupware.Frn8sICScuDTqpktcG74Az3@_>,
 <20200409173035.EGroupware.9va3hIotP_Ry5zTry04BGzf@_>
Message-ID: <20200409180918.EGroupware.QBjFgVbmXMVuv5G-LPtbU2w@_>

When I execute the example, I also get a strange behaviour:

 library(namespace)
 ns <- makeNamespace("myNamespace")
 assign("test",7, env=ns)
 ls(env=ns) 

When I now want to invoke any help for a function, I get a warning message:

 > ?loadNamespace
 Warning message:
 In find.package(if (is.null(package)) loadedNamespaces() else package, :
 there is no package called ?myNamespace?

Also sessionInfo doesn't work any more:

 > sessionInfo()
 Error in if (pkgpath == "") { : argument is of length zero

I don't think this is a good sign....
Stefan

 
----------------urspr?ngliche Nachricht-----------------
Von: Joris Meys [Joris.Meys at ugent.be]
An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], r-package-devel at r-project.org
Datum: Thu, 9 Apr 2020 15:37:09 +0000
-------------------------------------------------
 
 
> Hi Stefan,
> 
> you need the function makeNamespace() to create the environment as a namespace. 
> Look at the examples in the help files, I found them rather instructive. I also 
> hope someone else chimes in to shed some light on whether or not that approach 
> would be acceptable.
> 
> 
> Joris Meys
> Statistician
> T +32 9 264 61 79
> 
> Department Data Analysis and Mathematical Modelling
> 
> Campus Coupure, Block A 1st floor 110.050, Coupure links 653, B-9000 Ghent, 
> Belgium
> T administration office +32 9 264 59 32
> 
> www.ugent.be
> 
> e-maildisclaimer
> 
> 
> ________________________________________
> From: Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
> Sent: Thursday, April 9, 2020 5:30 PM
> To: Joris Meys; Jeff Newmiller; r-package-devel at r-project.org; Duncan 
> Murdoch
> Subject: Re: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission 
> JuliaConnectoR 0.5.0
> 
> Hi!
> Thanks for pointing to the package "namespace".
> I experimented with it but I couldn't really figure out how it is supposed to work:
> 
> The following code leads to strange errors that I don't understand:
> 
> > nse <- list2env(list(data="x", asdf = 2))
> > namespace::registerNamespace(name = "NewNamespace", env = nse)
> > NewNamespace::asdf
> Error in asNamespace(ns) : not a namespace
> 
> It would really be interesting if someone could comment on whether the namespace 
> approach is feasible, how it is supposed to work, and whether/how it would be 
> better than using attach.
> Greetings!
> Stefan
> 
> 
> ----------------urspr?ngliche Nachricht-----------------
> Von: Joris Meys [Joris.Meys at ugent.be]
> An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], Jeff Newmiller 
> [jdnewmil at dcn.davis.ca.us], r-package-devel at r-project.org, Duncan 
> Murdoch [murdoch.duncan at gmail.com]
> Datum: Thu, 9 Apr 2020 12:59:23 +0000
> -------------------------------------------------
> 
> 
>> Hi Stefan,
>>
>> first of all, thank you for taking the time and effort to link Julia and R. That
>> said, I would strongly encourage you to go for a reticulate-like approach.
>> There's a good reason for that. Once you start mixing languages, you really want
>> to have some indication what code is ran in what language. Especially since I can
>> imagine at one point there'll be a Julia function masking an R function of the same
>> name, and that is going to cause a world of hurt and confusion.
>>
>> If you don't like environments, you can try to use namespace functionality.
>> There's the "namespace" package that allows you to create one, and some internal
>> namespace functions are visible (eg namespaceExport() from base). That's
>> going to be the closest to mimicking R packages, but it's beyond my knowledge to
>> know how feasible this approach actually is. I hope someone else chimes in,
>> especially if this is dangerous for other reasons I overlooked.
>>
>> Kind regards
>> Joris
>>
>> Joris Meys
>> Statistician
>> T +32 9 264 61 79
>>
>> Department Data Analysis and Mathematical Modelling
>>
>> Campus Coupure, Block A 1st floor 110.050, Coupure links 653, B-9000 Ghent,
>> Belgium
>> T administration office +32 9 264 59 32
>>
>> www.ugent.be
>>
>> e-maildisclaimer
>>
>>
>> ________________________________________
>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf
>> of Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
>> Sent: Thursday, April 9, 2020 10:41 AM
>> To: Jeff Newmiller; r-package-devel at r-project.org; Duncan Murdoch
>> Subject: Re: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
>> JuliaConnectoR 0.5.0
>>
>> It is important for me to get my package into CRAN.
>> I haven't gotten any answer from the CRAN maintainers. I already tried to submit a
>> version of the package before some months and haven't gotten any reply then.
>> The replies you gave me (thanks to all engaged in the discussion) were mixed.
>> I still think that the library-like import is a good feature, but if it is not
>> possible to get this package on CRAN with it, I will change it with returning an
>> environment like reticulate.
>> My question now is:
>> So what would be the process how to proceed?
>> Is there anybody who can make a decision in such cases?
>> Or do I make this decision myself after I lost hope that it will be accepted the way
>> it is now?
>>
>> Stefan
>>
>>
>> ----------------urspr?ngliche Nachricht-----------------
>> Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
>> An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de],
>> r-package-devel at r-project.org, Duncan Murdoch
>> [murdoch.duncan at gmail.com]
>> Datum: Tue, 07 Apr 2020 09:52:52 -0700
>> -------------------------------------------------
>>
>>
>>> I did not say "interfere"... I said "problems with consistency". I don't think
>>> your wholesale import of functions without corresponding help pages is
>>> consistent with the normal use of R, which will make reading R code written with
>>> this mechanism in place a painful source of trouble for help forums.
>>>
>>> On the other hand, if the code is prefaced with an environment name then there will
>>> be no expectation that a help page should exist on the part of someone reading that
>>> code for the first time. (It will be no less obscure, but at least it won't be
>>> misleading.)
>>>
>>> On April 7, 2020 9:40:02 AM PDT, Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
>>> wrote:
>>>>Thank you very much for your comment.
>>>>Could you elaborate how you think that it could interfere with the help
>>>>system?
>>>>I haven't yet connected the Julia help with the R help, as the R help
>>>>system is quite complex and RStudio handles it again differently. So
>>>>it's simply like the functions were declared on the command line. They
>>>>have no help.
>>>>A simply way to print the help for a Julia function, e.g. the function
>>>>"first", is to call
>>>> juliaEval("@doc first")
>>>>This then simply prints the output on the command line.
>>>>
>>>>
>>>>----------------urspr?ngliche Nachricht-----------------
>>>>Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
>>>>An: r-package-devel at r-project.org, Duncan Murdoch
>>>>[murdoch.duncan at gmail.com], Stefan Lenz IMBI
>>>>[lenz at imbi.uni-freiburg.de]
>>>>Datum: Mon, 06 Apr 2020 10:51:53 -0700
>>>>-------------------------------------------------
>>>>
>>>>
>>>>> One could take the position that the library and require functions
>>>>were a mistake
>>>>> to begin with and that all contributed packages should be accessed
>>>>using ::... or
>>>>> one could recognize that these functions are an expected feature of R
>>>>at this
>>>>> point and then it is not defensible to ban the proposed approach of
>>>>importing
>>>>> names as Stefan wants to. I don't think it is fair to require this
>>>>higher level of
>>>>> specificity just because it involves use of attach.
>>>>>
>>>>> That said, another feature of R packages is the integrated help
>>>>system...
>>>>> importing Julia functions wholesale may lead to problems with
>>>>consistency in
>>>>> navigating the help files. IMO it may be justifiable to ban this
>>>>particular
>>>>> syntactic convenience to maintain some separation in the minds of
>>>>users looking
>>>>> for help on these new functions, since the syntactic and semantic
>>>>structure of
>>>>> functions from another language may not align well with normal R
>>>>functions. But I
>>>>> am not familiar with Julia or Stefan's package or the support it
>>>>brings in this
>>>>> area... I just disagree with banning a "library" lookalike function
>>>>"just
>>>>> because" it happens to involve attach.
>>>>>
>>>>> On April 6, 2020 8:40:12 AM PDT, Duncan Murdoch
>>>><murdoch.duncan at gmail.com>
>>>>> wrote:
>>>>>>On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
>>>>>>> Yes, as I wrote earlier, I would like to imitate the behaviour of
>>>>>>loading an R package
>>>>>>>
>>>>>>> juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>>>>>>> myJuliaFunction()
>>>>>>>
>>>>>>> like R:
>>>>>>>
>>>>>>> library("MyRPackage") # exports myRFunction
>>>>>>> myRFunction()
>>>>>>>
>>>>>>> I could return an environment, such that the call becomes
>>>>>>>
>>>>>>> attach(juliaUsing("SomeJuliaPackage"))
>>>>>>> myJuliaFunction()
>>>>>>
>>>>>>I wouldn't use it that way. I'd write it as
>>>>>>
>>>>>> sjp <- juliaUsing("SomeJuliaPackage")
>>>>>> sjp$myJuliaFunction()
>>>>>>
>>>>>>This is similar to the advice to use pkg::foo() rather than
>>>>>>library(pkg)
>>>>>>followed by plain foo() in the code.
>>>>>>
>>>>>>Duncan Murdoch
>>>>>>
>>>>>>>
>>>>>>> But calling juliaUsing(), as it is now, takes care that if a
>>>>package
>>>>>>is imported a second time,
>>>>>>> the first data base is removed via detach().
>>>>>>> This way, users do not have to worry about calling juliaUsing()
>>>>>>mutliple times in a script, same
>>>>>>> as R users don't have to worry about calling library() multiple
>>>>>>times.
>>>>>>> If you call the code with attach() multiple times and do not
>>>>detach,
>>>>>>you get your screen cluttered with
>>>>>>> warnings "xxx is masked by xxx".
>>>>>>> So I would say it would decrease user-friendliness to return an
>>>>>>environment.
>>>>>>> I also want to make explicit, that the call to attach
>>>>>>> occurs only once in my code, after creating the environment:
>>>>>>>
>>>>>>> envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>>>>>>> if (envName %in% search()) {
>>>>>>> detach(envName, character.only = TRUE)
>>>>>>> }
>>>>>>> attach(funenv, name = envName)
>>>>>>>
>>>>>>> This code is only called by juliaImport() and juliaUsing(), which
>>>>>>aren't called by any other function of
>>>>>>> the package
>>>>>>> and are supposed to be called directly by the user.
>>>>>>>
>>>>>>> Stefan
>>>>>>>
>>>>>>> ----------------urspr?ngliche Nachricht-----------------
>>>>>>> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
>>>>>>> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker
>>>>>>[bbolker at gmail.com]
>>>>>>> Kopie: List r-package-devel [r-package-devel at r-project.org]
>>>>>>> Datum: Mon, 6 Apr 2020 11:00:09 -0400
>>>>>>> -------------------------------------------------
>>>>>>>
>>>>>>>
>>>>>>>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>>>>>>>
>>>>>>>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>>>>>>>> | Just reply to the CRAN maintainers and explain this situation.
>>>>>>It?s
>>>>>>>>> | slightly buried, but the e-mail you received does say:
>>>>>>>>> |
>>>>>>>>> | > If you are fairly certain the rejection is a false positive,
>>>>>>please reply-all to this
>>>>>>>>> | > message and explain.
>>>>>>>>>
>>>>>>>>> True, but this misses the "Letter of the law" versus the "Spirit
>>>>of
>>>>>>the law".
>>>>>>>>>
>>>>>>>>> It might be worth mentioning that use of attach() is seen, to
>>>>find
>>>>>>one poor
>>>>>>>>> analogy, pretty much like use of global variables these days.
>>>>"Just
>>>>>>because
>>>>>>>>> you could does not mean you should".
>>>>>>>>>
>>>>>>>>> See e.g. one of the first google hits for 'r do not use attach'
>>>>>>here:
>>>>>>>>>
>>>>>>https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>>>>>>>
>>>>>>>> I don't have a strong opinion on this: the proposed use seems to
>>>>be
>>>>>>no
>>>>>>>> worse than library() or require(). Those are fine for users to
>>>>use,
>>>>>>but
>>>>>>>> are discouraged in a package. If the attach() never happens
>>>>without
>>>>>>an
>>>>>>>> explicit request from the user (and that's what it sounds like),
>>>>I'd
>>>>>>say
>>>>>>>> it's probably okay.
>>>>>>>>
>>>>>>>> However, there is an easy workaround: just return the environment
>>>>>>>> without attaching it. Then the user has the choice of attaching
>>>>it,
>>>>>>or
>>>>>>>> using it as a prefix when they call the functions in it. So it's
>>>>not
>>>>>>as
>>>>>>>> though this will destroy the utility of the package if Stefan
>>>>isn't
>>>>>>>> allowed to call attach().
>>>>>>>>
>>>>>>>> Duncan Murdoch
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>>______________________________________________
>>>>>>R-package-devel at r-project.org mailing list
>>>>>>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>
>>
>>
>> --
>>
>> Stefan Lenz
>>
>> Institut f?r Medizinische Biometrie und Statistik
>> Medizinische Fakult?t / Universit?tsklinikum Freiburg
>>
>> Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg
>>
>> Tel.: 0761/203-6670
>> E-Mail: lenz at imbi.uni-freiburg.de
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> 
> --
> 
> Stefan Lenz
> 
> Institut f?r Medizinische Biometrie und Statistik
> Medizinische Fakult?t / Universit?tsklinikum Freiburg
> 
> Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg
> 
> Tel.: 0761/203-6670
> E-Mail: lenz at imbi.uni-freiburg.de
> 


-- 

Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de


From Jor|@@Mey@ @end|ng |rom UGent@be  Thu Apr  9 18:20:37 2020
From: Jor|@@Mey@ @end|ng |rom UGent@be (Joris Meys)
Date: Thu, 9 Apr 2020 16:20:37 +0000
Subject: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
 JuliaConnectoR 0.5.0
In-Reply-To: <20200409180918.EGroupware.QBjFgVbmXMVuv5G-LPtbU2w@_>
References: <20200406105041.591AA161E26@xmpalantir.wu.ac.at>
 <01d60c03$Blat.v3.2.16$208584b7$2b9307833@mail.statistik.tu-dortmund.de>
 <20200406142129.EGroupware.03ZLD_VgacS_cdTQ6r6zcEC@_>
 <CABghstQzbKkjy+C=yYPtbEPXf0xXmD3vgT3iiTLQu4N-vGYANw@mail.gmail.com>
 <24203.16781.429161.610624@rob.eddelbuettel.com>
 <20200406172535.EGroupware.NKaiemiu1midtZ2tBhXcvmw@_>
 <510e7822-e79a-c760-0031-66d878273936@gmail.com>
 <20200407184002.EGroupware.fWu2KFXjoOWHPfhdb2Vo69K@_>,
 <20200409104127.EGroupware.Frn8sICScuDTqpktcG74Az3@_>,
 <20200409173035.EGroupware.9va3hIotP_Ry5zTry04BGzf@_>,
 <20200409180918.EGroupware.QBjFgVbmXMVuv5G-LPtbU2w@_>
Message-ID: <1586449238351.7197@UGent.be>

You're right, that's enough to not dig any further. I remembered it from the earlier days of devtools, but they removed that dependency ages ago. I also believe now the namespace package predates the later changes to the namespace mechanism. Forget what I said, I should have spent a bit more time testing it myself first.

Kind regards
Joris


Joris Meys
Statistician
T +32 9 264 61 79

Department Data Analysis and Mathematical Modelling

Campus Coupure, Block A 1st floor 110.050, Coupure links 653, B-9000 Ghent, Belgium
T administration office +32 9 264 59 32

www.ugent.be

e-maildisclaimer


________________________________________
From: Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
Sent: Thursday, April 9, 2020 6:09 PM
To: Joris Meys; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission JuliaConnectoR 0.5.0

When I execute the example, I also get a strange behaviour:

 library(namespace)
 ns <- makeNamespace("myNamespace")
 assign("test",7, env=ns)
 ls(env=ns)

When I now want to invoke any help for a function, I get a warning message:

 > ?loadNamespace
 Warning message:
 In find.package(if (is.null(package)) loadedNamespaces() else package, :
 there is no package called ?myNamespace?

Also sessionInfo doesn't work any more:

 > sessionInfo()
 Error in if (pkgpath == "") { : argument is of length zero

I don't think this is a good sign....
Stefan


----------------urspr?ngliche Nachricht-----------------
Von: Joris Meys [Joris.Meys at ugent.be]
An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], r-package-devel at r-project.org
Datum: Thu, 9 Apr 2020 15:37:09 +0000
-------------------------------------------------


> Hi Stefan,
>
> you need the function makeNamespace() to create the environment as a namespace.
> Look at the examples in the help files, I found them rather instructive. I also
> hope someone else chimes in to shed some light on whether or not that approach
> would be acceptable.
>
>
> Joris Meys
> Statistician
> T +32 9 264 61 79
>
> Department Data Analysis and Mathematical Modelling
>
> Campus Coupure, Block A 1st floor 110.050, Coupure links 653, B-9000 Ghent,
> Belgium
> T administration office +32 9 264 59 32
>
> www.ugent.be
>
> e-maildisclaimer
>
>
> ________________________________________
> From: Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
> Sent: Thursday, April 9, 2020 5:30 PM
> To: Joris Meys; Jeff Newmiller; r-package-devel at r-project.org; Duncan
> Murdoch
> Subject: Re: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
> JuliaConnectoR 0.5.0
>
> Hi!
> Thanks for pointing to the package "namespace".
> I experimented with it but I couldn't really figure out how it is supposed to work:
>
> The following code leads to strange errors that I don't understand:
>
> > nse <- list2env(list(data="x", asdf = 2))
> > namespace::registerNamespace(name = "NewNamespace", env = nse)
> > NewNamespace::asdf
> Error in asNamespace(ns) : not a namespace
>
> It would really be interesting if someone could comment on whether the namespace
> approach is feasible, how it is supposed to work, and whether/how it would be
> better than using attach.
> Greetings!
> Stefan
>
>
> ----------------urspr?ngliche Nachricht-----------------
> Von: Joris Meys [Joris.Meys at ugent.be]
> An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de], Jeff Newmiller
> [jdnewmil at dcn.davis.ca.us], r-package-devel at r-project.org, Duncan
> Murdoch [murdoch.duncan at gmail.com]
> Datum: Thu, 9 Apr 2020 12:59:23 +0000
> -------------------------------------------------
>
>
>> Hi Stefan,
>>
>> first of all, thank you for taking the time and effort to link Julia and R. That
>> said, I would strongly encourage you to go for a reticulate-like approach.
>> There's a good reason for that. Once you start mixing languages, you really want
>> to have some indication what code is ran in what language. Especially since I can
>> imagine at one point there'll be a Julia function masking an R function of the same
>> name, and that is going to cause a world of hurt and confusion.
>>
>> If you don't like environments, you can try to use namespace functionality.
>> There's the "namespace" package that allows you to create one, and some internal
>> namespace functions are visible (eg namespaceExport() from base). That's
>> going to be the closest to mimicking R packages, but it's beyond my knowledge to
>> know how feasible this approach actually is. I hope someone else chimes in,
>> especially if this is dangerous for other reasons I overlooked.
>>
>> Kind regards
>> Joris
>>
>> Joris Meys
>> Statistician
>> T +32 9 264 61 79
>>
>> Department Data Analysis and Mathematical Modelling
>>
>> Campus Coupure, Block A 1st floor 110.050, Coupure links 653, B-9000 Ghent,
>> Belgium
>> T administration office +32 9 264 59 32
>>
>> www.ugent.be
>>
>> e-maildisclaimer
>>
>>
>> ________________________________________
>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf
>> of Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
>> Sent: Thursday, April 9, 2020 10:41 AM
>> To: Jeff Newmiller; r-package-devel at r-project.org; Duncan Murdoch
>> Subject: Re: [R-pkg-devel] [FWD] [CRAN-pretest-archived] CRAN submission
>> JuliaConnectoR 0.5.0
>>
>> It is important for me to get my package into CRAN.
>> I haven't gotten any answer from the CRAN maintainers. I already tried to submit a
>> version of the package before some months and haven't gotten any reply then.
>> The replies you gave me (thanks to all engaged in the discussion) were mixed.
>> I still think that the library-like import is a good feature, but if it is not
>> possible to get this package on CRAN with it, I will change it with returning an
>> environment like reticulate.
>> My question now is:
>> So what would be the process how to proceed?
>> Is there anybody who can make a decision in such cases?
>> Or do I make this decision myself after I lost hope that it will be accepted the way
>> it is now?
>>
>> Stefan
>>
>>
>> ----------------urspr?ngliche Nachricht-----------------
>> Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
>> An: Stefan Lenz IMBI [lenz at imbi.uni-freiburg.de],
>> r-package-devel at r-project.org, Duncan Murdoch
>> [murdoch.duncan at gmail.com]
>> Datum: Tue, 07 Apr 2020 09:52:52 -0700
>> -------------------------------------------------
>>
>>
>>> I did not say "interfere"... I said "problems with consistency". I don't think
>>> your wholesale import of functions without corresponding help pages is
>>> consistent with the normal use of R, which will make reading R code written with
>>> this mechanism in place a painful source of trouble for help forums.
>>>
>>> On the other hand, if the code is prefaced with an environment name then there will
>>> be no expectation that a help page should exist on the part of someone reading that
>>> code for the first time. (It will be no less obscure, but at least it won't be
>>> misleading.)
>>>
>>> On April 7, 2020 9:40:02 AM PDT, Stefan Lenz IMBI <lenz at imbi.uni-freiburg.de>
>>> wrote:
>>>>Thank you very much for your comment.
>>>>Could you elaborate how you think that it could interfere with the help
>>>>system?
>>>>I haven't yet connected the Julia help with the R help, as the R help
>>>>system is quite complex and RStudio handles it again differently. So
>>>>it's simply like the functions were declared on the command line. They
>>>>have no help.
>>>>A simply way to print the help for a Julia function, e.g. the function
>>>>"first", is to call
>>>> juliaEval("@doc first")
>>>>This then simply prints the output on the command line.
>>>>
>>>>
>>>>----------------urspr?ngliche Nachricht-----------------
>>>>Von: Jeff Newmiller [jdnewmil at dcn.davis.ca.us]
>>>>An: r-package-devel at r-project.org, Duncan Murdoch
>>>>[murdoch.duncan at gmail.com], Stefan Lenz IMBI
>>>>[lenz at imbi.uni-freiburg.de]
>>>>Datum: Mon, 06 Apr 2020 10:51:53 -0700
>>>>-------------------------------------------------
>>>>
>>>>
>>>>> One could take the position that the library and require functions
>>>>were a mistake
>>>>> to begin with and that all contributed packages should be accessed
>>>>using ::... or
>>>>> one could recognize that these functions are an expected feature of R
>>>>at this
>>>>> point and then it is not defensible to ban the proposed approach of
>>>>importing
>>>>> names as Stefan wants to. I don't think it is fair to require this
>>>>higher level of
>>>>> specificity just because it involves use of attach.
>>>>>
>>>>> That said, another feature of R packages is the integrated help
>>>>system...
>>>>> importing Julia functions wholesale may lead to problems with
>>>>consistency in
>>>>> navigating the help files. IMO it may be justifiable to ban this
>>>>particular
>>>>> syntactic convenience to maintain some separation in the minds of
>>>>users looking
>>>>> for help on these new functions, since the syntactic and semantic
>>>>structure of
>>>>> functions from another language may not align well with normal R
>>>>functions. But I
>>>>> am not familiar with Julia or Stefan's package or the support it
>>>>brings in this
>>>>> area... I just disagree with banning a "library" lookalike function
>>>>"just
>>>>> because" it happens to involve attach.
>>>>>
>>>>> On April 6, 2020 8:40:12 AM PDT, Duncan Murdoch
>>>><murdoch.duncan at gmail.com>
>>>>> wrote:
>>>>>>On 06/04/2020 11:25 a.m., Stefan Lenz IMBI wrote:
>>>>>>> Yes, as I wrote earlier, I would like to imitate the behaviour of
>>>>>>loading an R package
>>>>>>>
>>>>>>> juliaUsing("SomeJuliaPackage") # exports myJuliaFunction
>>>>>>> myJuliaFunction()
>>>>>>>
>>>>>>> like R:
>>>>>>>
>>>>>>> library("MyRPackage") # exports myRFunction
>>>>>>> myRFunction()
>>>>>>>
>>>>>>> I could return an environment, such that the call becomes
>>>>>>>
>>>>>>> attach(juliaUsing("SomeJuliaPackage"))
>>>>>>> myJuliaFunction()
>>>>>>
>>>>>>I wouldn't use it that way. I'd write it as
>>>>>>
>>>>>> sjp <- juliaUsing("SomeJuliaPackage")
>>>>>> sjp$myJuliaFunction()
>>>>>>
>>>>>>This is similar to the advice to use pkg::foo() rather than
>>>>>>library(pkg)
>>>>>>followed by plain foo() in the code.
>>>>>>
>>>>>>Duncan Murdoch
>>>>>>
>>>>>>>
>>>>>>> But calling juliaUsing(), as it is now, takes care that if a
>>>>package
>>>>>>is imported a second time,
>>>>>>> the first data base is removed via detach().
>>>>>>> This way, users do not have to worry about calling juliaUsing()
>>>>>>mutliple times in a script, same
>>>>>>> as R users don't have to worry about calling library() multiple
>>>>>>times.
>>>>>>> If you call the code with attach() multiple times and do not
>>>>detach,
>>>>>>you get your screen cluttered with
>>>>>>> warnings "xxx is masked by xxx".
>>>>>>> So I would say it would decrease user-friendliness to return an
>>>>>>environment.
>>>>>>> I also want to make explicit, that the call to attach
>>>>>>> occurs only once in my code, after creating the environment:
>>>>>>>
>>>>>>> envName <- paste0("JuliaConnectoR:", absoluteModulePath)
>>>>>>> if (envName %in% search()) {
>>>>>>> detach(envName, character.only = TRUE)
>>>>>>> }
>>>>>>> attach(funenv, name = envName)
>>>>>>>
>>>>>>> This code is only called by juliaImport() and juliaUsing(), which
>>>>>>aren't called by any other function of
>>>>>>> the package
>>>>>>> and are supposed to be called directly by the user.
>>>>>>>
>>>>>>> Stefan
>>>>>>>
>>>>>>> ----------------urspr?ngliche Nachricht-----------------
>>>>>>> Von: Duncan Murdoch [murdoch.duncan at gmail.com]
>>>>>>> An: Dirk Eddelbuettel [edd at debian.org], Ben Bolker
>>>>>>[bbolker at gmail.com]
>>>>>>> Kopie: List r-package-devel [r-package-devel at r-project.org]
>>>>>>> Datum: Mon, 6 Apr 2020 11:00:09 -0400
>>>>>>> -------------------------------------------------
>>>>>>>
>>>>>>>
>>>>>>>> On 06/04/2020 10:49 a.m., Dirk Eddelbuettel wrote:
>>>>>>>>>
>>>>>>>>> On 6 April 2020 at 08:38, Ben Bolker wrote:
>>>>>>>>> | Just reply to the CRAN maintainers and explain this situation.
>>>>>>It?s
>>>>>>>>> | slightly buried, but the e-mail you received does say:
>>>>>>>>> |
>>>>>>>>> | > If you are fairly certain the rejection is a false positive,
>>>>>>please reply-all to this
>>>>>>>>> | > message and explain.
>>>>>>>>>
>>>>>>>>> True, but this misses the "Letter of the law" versus the "Spirit
>>>>of
>>>>>>the law".
>>>>>>>>>
>>>>>>>>> It might be worth mentioning that use of attach() is seen, to
>>>>find
>>>>>>one poor
>>>>>>>>> analogy, pretty much like use of global variables these days.
>>>>"Just
>>>>>>because
>>>>>>>>> you could does not mean you should".
>>>>>>>>>
>>>>>>>>> See e.g. one of the first google hits for 'r do not use attach'
>>>>>>here:
>>>>>>>>>
>>>>>>https://stackoverflow.com/questions/10067680/why-is-it-not-advisable-to-use-attach-in-r-and-what-should-i-use-instead
>>>>>>>>
>>>>>>>> I don't have a strong opinion on this: the proposed use seems to
>>>>be
>>>>>>no
>>>>>>>> worse than library() or require(). Those are fine for users to
>>>>use,
>>>>>>but
>>>>>>>> are discouraged in a package. If the attach() never happens
>>>>without
>>>>>>an
>>>>>>>> explicit request from the user (and that's what it sounds like),
>>>>I'd
>>>>>>say
>>>>>>>> it's probably okay.
>>>>>>>>
>>>>>>>> However, there is an easy workaround: just return the environment
>>>>>>>> without attaching it. Then the user has the choice of attaching
>>>>it,
>>>>>>or
>>>>>>>> using it as a prefix when they call the functions in it. So it's
>>>>not
>>>>>>as
>>>>>>>> though this will destroy the utility of the package if Stefan
>>>>isn't
>>>>>>>> allowed to call attach().
>>>>>>>>
>>>>>>>> Duncan Murdoch
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>>______________________________________________
>>>>>>R-package-devel at r-project.org mailing list
>>>>>>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>
>>
>>
>> --
>>
>> Stefan Lenz
>>
>> Institut f?r Medizinische Biometrie und Statistik
>> Medizinische Fakult?t / Universit?tsklinikum Freiburg
>>
>> Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg
>>
>> Tel.: 0761/203-6670
>> E-Mail: lenz at imbi.uni-freiburg.de
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>
> --
>
> Stefan Lenz
>
> Institut f?r Medizinische Biometrie und Statistik
> Medizinische Fakult?t / Universit?tsklinikum Freiburg
>
> Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg
>
> Tel.: 0761/203-6670
> E-Mail: lenz at imbi.uni-freiburg.de
>


--

Stefan Lenz

Institut f?r Medizinische Biometrie und Statistik
Medizinische Fakult?t / Universit?tsklinikum Freiburg

Postadresse: Stefan-Meier-Str. 26, 79104 Freiburg

Tel.: 0761/203-6670
E-Mail: lenz at imbi.uni-freiburg.de


From |@w@onj@|7net @end|ng |rom gm@||@com  Thu Apr  9 21:28:49 2020
From: |@w@onj@|7net @end|ng |rom gm@||@com (John Lawson)
Date: Thu, 9 Apr 2020 13:28:49 -0600
Subject: [R-pkg-devel] manual inspection of new packages
Message-ID: <CAJiVmSBKg9OeVh5U76m9w+f6YWsruw4ZD9bMyX4ZpsxuY6Wpgg@mail.gmail.com>

I submitted the Package AQLSchemes on Dec 9, 2019. I corrected the errors
noted in the manual inspection and resubmitted it on Jan 9. I got the
message that it passed the automatic checks and was awaiting manual
inspection. I have not heard anything since.  Do I need to resubmitt the
package? Or how can I find out if this package is still in the queue for
manual inspection?

Thank you
John Lawson

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Thu Apr  9 21:33:13 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 9 Apr 2020 15:33:13 -0400
Subject: [R-pkg-devel] manual inspection of new packages
In-Reply-To: <CAJiVmSBKg9OeVh5U76m9w+f6YWsruw4ZD9bMyX4ZpsxuY6Wpgg@mail.gmail.com>
References: <CAJiVmSBKg9OeVh5U76m9w+f6YWsruw4ZD9bMyX4ZpsxuY6Wpgg@mail.gmail.com>
Message-ID: <18901446-8c10-1a39-008e-ff16745cba2f@gmail.com>

 ? foghorn::cran_incoming() will let you inspect the package queue.

 ? (most likely if the package has been sitting this long it's not ever 
going to move farther through the queue and you should resubmit.? An 
e-mail to the CRAN maintainers after you check the status would probably 
be appropriate.)


On 4/9/20 3:28 PM, John Lawson wrote:
> I submitted the Package AQLSchemes on Dec 9, 2019. I corrected the errors
> noted in the manual inspection and resubmitted it on Jan 9. I got the
> message that it passed the automatic checks and was awaiting manual
> inspection. I have not heard anything since.  Do I need to resubmitt the
> package? Or how can I find out if this package is still in the queue for
> manual inspection?
>
> Thank you
> John Lawson
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Apr  9 21:46:09 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 9 Apr 2020 15:46:09 -0400
Subject: [R-pkg-devel] manual inspection of new packages
In-Reply-To: <CAJiVmSBKg9OeVh5U76m9w+f6YWsruw4ZD9bMyX4ZpsxuY6Wpgg@mail.gmail.com>
References: <CAJiVmSBKg9OeVh5U76m9w+f6YWsruw4ZD9bMyX4ZpsxuY6Wpgg@mail.gmail.com>
Message-ID: <429ad5d3-2e10-a709-e976-5f0fd6e08afe@gmail.com>

On 09/04/2020 3:28 p.m., John Lawson wrote:
> I submitted the Package AQLSchemes on Dec 9, 2019. I corrected the errors
> noted in the manual inspection and resubmitted it on Jan 9. I got the
> message that it passed the automatic checks and was awaiting manual
> inspection. I have not heard anything since.  Do I need to resubmitt the
> package? Or how can I find out if this package is still in the queue for
> manual inspection?
> 

As the CRAN policy document says under Submission, you can see the queue 
by looking at ftp://cran.r-project.org/incoming/.  The foghorn package 
makes this really easy:  you run foghorn::cran_incoming("AQLSchemes") to 
see where your package is sitting.  It doesn't appear to be there at all.

Next time, I'd follow up if you go a week without hearing a reply; 
waiting 3 months seems a bit long.

Duncan Murdoch


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Apr 10 00:13:56 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 09 Apr 2020 15:13:56 -0700
Subject: [R-pkg-devel] Add SystemRequirements of imported package in
 description file?
In-Reply-To: <936BA237-CCC6-4006-B5FC-FEF0AEA60FD4@contoso.com>
References: <936BA237-CCC6-4006-B5FC-FEF0AEA60FD4@contoso.com>
Message-ID: <DD591087-3C32-45B9-8C8E-11846C1A49BD@dcn.davis.ca.us>

AFAIK, no, though if the upstream package cannot (or won't) be implemented without that system requirement and it really is a requirement for this package then you might want to indicate "libzzz via Package X" just to be clear for users. If it isn't a requirement for most of your functionality then you may want to use Suggests to alleviate the problem.

On April 9, 2020 12:51:56 AM PDT, Dominik Leutnant <leutnant at fh-muenster.de> wrote:
>Hi all,
>
>should ?SystemRequirements? of an imported package be listed in the
>description file of a package?
>
>General scenario:
>- Package X imports Package Y.
>- Package Y lists ?libzzz? as SystemRequirements.
>
>Should Package X list the SystemRequirements ?libzzz? as well?
>(question occurred @ https://github.com/dleutnant/influxdbr/issues/47)
>
>Thank you and happy easter!
>Dominik
>
>
>
>Dr. Dominik Leutnant
>Department of Civil Engineering
>Institute for Infrastucture?Water?Resources?Environment (IWARU)
>WG Urban Hydrology and Water Management
>
>Muenster University of Applied Sciences
>Corrensstr. 25
>FRG-48149 M?nster
>Germany
>
>Tel.:  +49 (0) 251/83-65274
>Mail:  leutnant at fh-muenster.de<mailto:leutnant at fh-muenster.de>
>Web: https://www.fh-muenster.de/
>
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From |@w@onj@|7net @end|ng |rom gm@||@com  Fri Apr 10 05:08:46 2020
From: |@w@onj@|7net @end|ng |rom gm@||@com (John Lawson)
Date: Thu, 9 Apr 2020 21:08:46 -0600
Subject: [R-pkg-devel] manual inspection of new packages
In-Reply-To: <429ad5d3-2e10-a709-e976-5f0fd6e08afe@gmail.com>
References: <CAJiVmSBKg9OeVh5U76m9w+f6YWsruw4ZD9bMyX4ZpsxuY6Wpgg@mail.gmail.com>
 <429ad5d3-2e10-a709-e976-5f0fd6e08afe@gmail.com>
Message-ID: <CAJiVmSCW=iUXSQ4koyPGv1M6zF2UeGW7HDMv7U8rjbr00niYEg@mail.gmail.com>

Ok, thanks.

On Thu, Apr 9, 2020 at 1:46 PM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 09/04/2020 3:28 p.m., John Lawson wrote:
> > I submitted the Package AQLSchemes on Dec 9, 2019. I corrected the errors
> > noted in the manual inspection and resubmitted it on Jan 9. I got the
> > message that it passed the automatic checks and was awaiting manual
> > inspection. I have not heard anything since.  Do I need to resubmitt the
> > package? Or how can I find out if this package is still in the queue for
> > manual inspection?
> >
>
> As the CRAN policy document says under Submission, you can see the queue
> by looking at ftp://cran.r-project.org/incoming/.  The foghorn package
> makes this really easy:  you run foghorn::cran_incoming("AQLSchemes") to
> see where your package is sitting.  It doesn't appear to be there at all.
>
> Next time, I'd follow up if you go a week without hearing a reply;
> waiting 3 months seems a bit long.
>
> Duncan Murdoch
>

	[[alternative HTML version deleted]]


From p@u|@de@n@b@||ey @end|ng |rom gm@||@com  Sat Apr 11 00:23:59 2020
From: p@u|@de@n@b@||ey @end|ng |rom gm@||@com (Paul Bailey)
Date: Fri, 10 Apr 2020 17:23:59 -0500
Subject: [R-pkg-devel] R CMD check fails on namespace load for an installed
 package
References: <BYAPR05MB565544AF3B69FC73B317AE6ABEDE0@BYAPR05MB5655.namprd05.prod.outlook.com>
Message-ID: <831CE732-A262-4534-9321-A0914FB0CC92@gmail.com>

When I try to R CMD check --as-cran the EdSurvey package for submission on R-devel I get this error:

> 
> * installing *source* package 'EdSurvey' ...
> ** using staged installation
> ** R
> ** inst
> ** byte-compile and prepare package for lazy loading
> Error: package or namespace load failed for 'car':
> package 'car' was installed before R 4.0.0: please re-install it
> Error: package 'car' could not be loaded
> Execution halted
> ERROR: lazy loading failed for package 'EdSurvey'
> * removing 'C:/Users/pbailey/Documents/GitHub/EdSurvey.Rcheck/EdSurvey'
>  


So, I went into R and tried installing car, and that  appears to exit cleanly (at end of message). But then I still got the same (above) message.

I made sure the .libPath was the one in R-devel/library.

What can I do to test my package on R-devel?


>  
> > install.packages("car")
> Warning: unable to access index for repository https://cloud.r-project.org/bin/windows/contrib/4.1: <https://cloud.r-project.org/bin/windows/contrib/4.1:>
>   cannot open URL 'https://cloud.r-project.org/bin/windows/contrib/4.1/PACKAGES <https://cloud.r-project.org/bin/windows/contrib/4.1/PACKAGES>'
> installing the source package ?car?
>  
> trying URL 'https://cloud.r-project.org/src/contrib/car_3.0-7.tar.gz <https://cloud.r-project.org/src/contrib/car_3.0-7.tar.gz>'
> Content type 'application/x-gzip' length 497735 bytes (486 KB)
> downloaded 486 KB
>  
> * installing *source* package 'car' ...
> ** package 'car' successfully unpacked and MD5 sums checked
> ** using staged installation
> ** R
> ** inst
> ** byte-compile and prepare package for lazy loading
> ** help
> *** installing help indices
>   converting help for package 'car'
>     finding HTML links ... done
>     Anova                                   html  
>     Boot                                    html  
>     Boxplot                                 html  
>     Contrasts                               html  
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/Contrasts.Rd:68: file link 'contr.treatment' in package 'stats' does not exist and so has been treated as a topic
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/Contrasts.Rd:68: file link 'contr.sum' in package 'stats' does not exist and so has been treated as a topic
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/Contrasts.Rd:69: file link 'contr.helmert' in package 'stats' does not exist and so has been treated as a topic
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/Contrasts.Rd:69: file link 'contr.poly' in package 'stats' does not exist and so has been treated as a topic
>     Ellipses                                html  
>     Export                                  html  
>     Import                                  html  
>     Predict                                 html  
>     S                                       html  
>     ScatterplotSmoothers                    html  
>     Tapply                                  html  
>     TransformationAxes                      html  
>     avPlots                                 html  
>     bcPower                                 html  
>     boxCox                                  html  
>     boxCoxVariable                          html  
>     boxTidwell                              html  
>     brief                                   html  
>     car-defunct                             html  
>     car-deprecated                          html  
>     car-internal                            html  
>     carHexsticker                           html  
>     carPalette                              html  
>     carWeb                                  html  
>     ceresPlots                              html  
>     compareCoefs                            html  
>     crPlots                                 html  
>     deltaMethod                             html  
>     densityPlot                             html  
>     dfbetaPlots                             html  
>     durbinWatsonTest                        html  
>     hccm                                    html  
>     hist.boot                               html  
>     infIndexPlot                            html  
>     influence-mixed-models                  html  
>     influencePlot                           html  
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/influencePlot.Rd:57: file link 'cooks.distance' in package 'stats' does not exist and so has been treated as a topic
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/influencePlot.Rd:57: file link 'rstudent' in package 'stats' does not exist and so has been treated as a topic
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/influencePlot.Rd:58: file link 'hatvalues' in package 'stats' does not exist and so has been treated as a topic
>     invResPlot                              html  
>     invTranPlot                             html  
>     leveneTest                              html  
>     leveragePlots                           html  
>     linearHypothesis                        html  
>     logit                                   html  
>     marginalModelPlot                       html  
>     mcPlots                                 html  
>     ncvTest                                 html  
>     outlierTest                             html  
>     panel.car                               html  
>     poTest                                  html  
>     powerTransform                          html  
>     qqPlot                                  html  
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/qqPlot.Rd:124: file link 'qqplot' in package 'stats' does not exist and so has been treated as a topic
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/qqPlot.Rd:125: file link 'qqline' in package 'stats' does not exist and so has been treated as a topic
>     recode                                  html  
>     regLine                                 html  
>     residualPlots                           html  
>     scatter3d                               html  
>     scatterplot                             html  
>     finding level-2 HTML links ... done
>  
>     scatterplotMatrix                       html  
>     showLabels                              html  
>     sigmaHat                                html  
>     some                                    html  
> Rd warning: C:/Users/pbailey/AppData/Local/Temp/1/Rtmpisyc8f/R.INSTALL3f14202022a7/car/man/some.Rd:48: file link 'tail' in package 'utils' does not exist and so has been treated as a topic
>     spreadLevelPlot                         html  
>     subsets                                 html  
>     symbox                                  html  
>     testTransform                           html  
>     vif                                     html  
>     wcrossprod                              html  
>     which.names                             html  
> ** building package indices
> ** installing vignettes
> ** testing if installed package can be loaded from temporary location
> *** arch - i386
> *** arch - x64
> ** testing if installed package can be loaded from final location
> *** arch - i386
> *** arch - x64
> ** testing if installed package keeps a record of temporary installation path
> * DONE (car)
>  
> The downloaded source packages are in
>         ?C:\Users\pbailey\AppData\Local\Temp\1\RtmpWiUQtf\downloaded_packages?


	[[alternative HTML version deleted]]


