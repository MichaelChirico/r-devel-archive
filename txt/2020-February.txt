From k|m@|@me @end|ng |rom y@hoo@|r  Mon Feb  3 07:23:01 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Mon, 3 Feb 2020 06:23:01 +0000 (UTC)
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
References: <1120275228.1123321.1580710981461.ref@mail.yahoo.com>
Message-ID: <1120275228.1123321.1580710981461@mail.yahoo.com>

Hello
I am trying to extract AICs from an ARIMA estimation with different
combinations of p & q ( p =0,1,2,3
and q=0,1.2,3). I have tried using the following code unsucessfully. Can
anyone help?

code:
storage1 <- numeric(16)
for (p in 0:3){

? ? for (q in 0:3){
?
? ? storage1[p]? <- arima(x,order=c(p,0,q), method="ML")}
}
storage1$aic

	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Mon Feb  3 10:46:32 2020
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Mon, 3 Feb 2020 09:46:32 +0000
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <1120275228.1123321.1580710981461@mail.yahoo.com>
References: <1120275228.1123321.1580710981461.ref@mail.yahoo.com>
 <1120275228.1123321.1580710981461@mail.yahoo.com>
Message-ID: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>

Hello,

You can solve the problem in two different ways.

1. Redefine storage1 as a matrix and extract the aic *in* the loop.

storage1 <- matrix(0, 4, 4)
for(p in 0:3){
   for(q in 0:3){
     storage1[p + 1, q + 1] <- arima(etc)$aic
   }
}


2. define storage1 as a list.

storage1 <- vector("list", 16)
i <- 0L
for(p in 0:3){
   for(q in 0:3){
     i <- i + 1L
     storage1[[i]] <- arima(etc)
   }
}

lapply(storage1, '[[', "aic")  # get the aic's.

Maybe sapply is better it will return a vector.


Hope this helps,

Rui Barradas




?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
> Hello
> I am trying to extract AICs from an ARIMA estimation with different
> combinations of p & q ( p =0,1,2,3
> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
> anyone help?
> 
> code:
> storage1 <- numeric(16)
> for (p in 0:3){
> 
>  ? ? for (q in 0:3){
>   
>  ? ? storage1[p]? <- arima(x,order=c(p,0,q), method="ML")}
> }
> storage1$aic
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From k|m@|@me @end|ng |rom y@hoo@|r  Mon Feb  3 11:09:24 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Mon, 3 Feb 2020 04:09:24 -0600
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
References: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
Message-ID: <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>

It works!!!
Thank you so much for your help!

Sent from my iPhone

> On Feb 3, 2020, at 3:47 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
> 
> ?Hello,
> 
> You can solve the problem in two different ways.
> 
> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
> 
> storage1 <- matrix(0, 4, 4)
> for(p in 0:3){
>  for(q in 0:3){
>    storage1[p + 1, q + 1] <- arima(etc)$aic
>  }
> }
> 
> 
> 2. define storage1 as a list.
> 
> storage1 <- vector("list", 16)
> i <- 0L
> for(p in 0:3){
>  for(q in 0:3){
>    i <- i + 1L
>    storage1[[i]] <- arima(etc)
>  }
> }
> 
> lapply(storage1, '[[', "aic")  # get the aic's.
> 
> Maybe sapply is better it will return a vector.
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> 
> 
> 
> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>> Hello
>> I am trying to extract AICs from an ARIMA estimation with different
>> combinations of p & q ( p =0,1,2,3
>> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>> anyone help?
>> code:
>> storage1 <- numeric(16)
>> for (p in 0:3){
>>     for (q in 0:3){
>>       storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>> }
>> storage1$aic
>>    [[alternative HTML version deleted]]
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From k|m@|@me @end|ng |rom y@hoo@|r  Mon Feb  3 11:09:24 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Mon, 3 Feb 2020 04:09:24 -0600
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
References: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
Message-ID: <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>

It works!!!
Thank you so much for your help!

Sent from my iPhone

> On Feb 3, 2020, at 3:47 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
> 
> ?Hello,
> 
> You can solve the problem in two different ways.
> 
> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
> 
> storage1 <- matrix(0, 4, 4)
> for(p in 0:3){
>  for(q in 0:3){
>    storage1[p + 1, q + 1] <- arima(etc)$aic
>  }
> }
> 
> 
> 2. define storage1 as a list.
> 
> storage1 <- vector("list", 16)
> i <- 0L
> for(p in 0:3){
>  for(q in 0:3){
>    i <- i + 1L
>    storage1[[i]] <- arima(etc)
>  }
> }
> 
> lapply(storage1, '[[', "aic")  # get the aic's.
> 
> Maybe sapply is better it will return a vector.
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> 
> 
> 
> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>> Hello
>> I am trying to extract AICs from an ARIMA estimation with different
>> combinations of p & q ( p =0,1,2,3
>> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>> anyone help?
>> code:
>> storage1 <- numeric(16)
>> for (p in 0:3){
>>     for (q in 0:3){
>>       storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>> }
>> storage1$aic
>>    [[alternative HTML version deleted]]
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Feb  3 12:04:45 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 3 Feb 2020 12:04:45 +0100
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>
References: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
 <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>
Message-ID: <24119.65101.642933.417166@stat.math.ethz.ch>

>>>>> ismael ismael via R-devel 
>>>>>     on Mon, 3 Feb 2020 04:09:24 -0600 writes:

    > It works!!!
    > Thank you so much for your help!

and it was an "R help" question which  Rui  so generously answered.

But this is the R-devel mailing list.
Please do *NOT* misuse it for  R-help questions in the future:

These should go to the R-help mailing list instead!

Best,
Martin Maechler


    >> On Feb 3, 2020, at 3:47 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
    >> 
    >> ?Hello,
    >> 
    >> You can solve the problem in two different ways.
    >> 
    >> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
    >> 
    >> storage1 <- matrix(0, 4, 4)
    >> for(p in 0:3){
    >> for(q in 0:3){
    >> storage1[p + 1, q + 1] <- arima(etc)$aic
    >> }
    >> }
    >> 
    >> 
    >> 2. define storage1 as a list.
    >> 
    >> storage1 <- vector("list", 16)
    >> i <- 0L
    >> for(p in 0:3){
    >> for(q in 0:3){
    >> i <- i + 1L
    >> storage1[[i]] <- arima(etc)
    >> }
    >> }
    >> 
    >> lapply(storage1, '[[', "aic")  # get the aic's.
    >> 
    >> Maybe sapply is better it will return a vector.
    >> 
    >> 
    >> Hope this helps,
    >> 
    >> Rui Barradas
    >> 
    >> 
    >> 
    >> 
    >> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
    >>> Hello
    >>> I am trying to extract AICs from an ARIMA estimation with different
    >>> combinations of p & q ( p =0,1,2,3
    >>> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
    >>> anyone help?
    >>> code:
    >>> storage1 <- numeric(16)
    >>> for (p in 0:3){
    >>> for (q in 0:3){
    >>> storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
    >>> }
    >>> storage1$aic
    >>> [[alternative HTML version deleted]]
    >>> ______________________________________________
    >>> R-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Mon Feb  3 18:32:00 2020
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Mon, 3 Feb 2020 17:32:00 +0000
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <24119.65101.642933.417166@stat.math.ethz.ch>
References: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
 <5A8A4646-6443-4A53-9D49-1AE0229109A5@yahoo.fr>
 <24119.65101.642933.417166@stat.math.ethz.ch>
Message-ID: <3e93f7d9-13e4-d27b-ee9f-0d0f509d4fc0@sapo.pt>

Hello,

Inline.

?s 11:04 de 03/02/20, Martin Maechler escreveu:
>>>>>> ismael ismael via R-devel
>>>>>>      on Mon, 3 Feb 2020 04:09:24 -0600 writes:
> 
>      > It works!!!
>      > Thank you so much for your help!
> 
> and it was an "R help" question which  Rui  so generously answered.
> 
> But this is the R-devel mailing list.
> Please do *NOT* misuse it for  R-help questions in the future:
> 
> These should go to the R-help mailing list instead!

Yes, and I had noticed it but then, after writing down the answer, 
forgot to mention it.
Thanks for the warning.

Rui Barradas

> 
> Best,
> Martin Maechler
> 
> 
>      >> On Feb 3, 2020, at 3:47 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
>      >>
>      >> ?Hello,
>      >>
>      >> You can solve the problem in two different ways.
>      >>
>      >> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
>      >>
>      >> storage1 <- matrix(0, 4, 4)
>      >> for(p in 0:3){
>      >> for(q in 0:3){
>      >> storage1[p + 1, q + 1] <- arima(etc)$aic
>      >> }
>      >> }
>      >>
>      >>
>      >> 2. define storage1 as a list.
>      >>
>      >> storage1 <- vector("list", 16)
>      >> i <- 0L
>      >> for(p in 0:3){
>      >> for(q in 0:3){
>      >> i <- i + 1L
>      >> storage1[[i]] <- arima(etc)
>      >> }
>      >> }
>      >>
>      >> lapply(storage1, '[[', "aic")  # get the aic's.
>      >>
>      >> Maybe sapply is better it will return a vector.
>      >>
>      >>
>      >> Hope this helps,
>      >>
>      >> Rui Barradas
>      >>
>      >>
>      >>
>      >>
>      >> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>      >>> Hello
>      >>> I am trying to extract AICs from an ARIMA estimation with different
>      >>> combinations of p & q ( p =0,1,2,3
>      >>> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>      >>> anyone help?
>      >>> code:
>      >>> storage1 <- numeric(16)
>      >>> for (p in 0:3){
>      >>> for (q in 0:3){
>      >>> storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>      >>> }
>      >>> storage1$aic
>      >>> [[alternative HTML version deleted]]
>      >>> ______________________________________________
>      >>> R-devel at r-project.org mailing list
>      >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>      > ______________________________________________
>      > R-devel at r-project.org mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>


From d@v|@ @end|ng |rom r@tud|o@com  Mon Feb  3 18:40:15 2020
From: d@v|@ @end|ng |rom r@tud|o@com (Davis Vaughan)
Date: Mon, 3 Feb 2020 12:40:15 -0500
Subject: [Rd] ALTREP "wrapper" classes needs an Extract_subset method
Message-ID: <CABzLhzxrq_ROOtzb9f_JCNVNgSHZaXmUC5xTserugC0sMwsETg@mail.gmail.com>

Hi all,

I believe I have found a bug (or perhaps just an oversight) with the ALTREP
wrapper classes. The short form of this is that I believe that the wrapper
classes need to override the default ALTREP `Extract_subset_method()` with
a method that calls `Extract_subset()` on the "wrapped" object. I have a
patch prepared here:

https://github.com/DavisVaughan/r-source/pull/1

There is currently no call to `R_set_altvec_Extract_subset_method()` in the
wrapper class init functions. This means that the default ALTREP method of
`altvec_Extract_subset_default()` is called, which simply returns `NULL`.

Consider what that means for an ALTREP compact integer seq that has been
"wrapped". The default subsetting code will eventually call
`ExtractSubset()`. That checks if the object is ALTREP, and calls the
ALTREP Extract_subset() method if so. If the return value from that is
NULL, then it will fallback to repeatedly calling `INTEGER_ELT()` to do the
subsetting. See below for the relevant section:

https://github.com/wch/r-source/blob/d1c0c6b921fc6a0cbe82c4354c6ec6ceb7f320aa/src/main/subset.c#L103

This wrapped compact integer seq is an ALTREP object, so `ALTREP(x)`
returns true. But then it just calls the default method of returning NULL
rather than calling the compact integer seq `Extract_subset()` method! This
still "works" because it falls back to `INTEGER_ELT()` for which there is
a `wrapper_integer_Elt()` method defined that will use the underlying
compact seq's `integer_Elt()` method, but it is less efficient than it
could be.

My rough benchmarks show that in R 3.6.0 the subset benchmarks at the
bottom of this message take 4ms on the compact seq, and 5ms on the wrapped
compact seq. With a patch that I have prepared, both take 4ms.

The other reason I bring this up is that it can result in bugs with some
ALTREP objects. I was working on one where it makes sense to have an
`Extract_subset()` method but not an `Elt()` method. When it gets
"wrapped", my `Extract_subset()` method is bypassed as shown above, and the
`Elt()` method is incorrectly called (which throws an error because it is
not meaningful for me).

If you all agree these changes should be made, I can submit the patch.

Thanks,
Davis

# Ensure we have enough elements for "wrapping" to kick in
x <- 1:65

# select the 1st element a large number of times
index <- rep(1L, 1e6) + 0L

# ALTREP - but not wrapped
# .Internal(inspect(x))

bench::mark(x[index], iterations = 1000)

# Wrap it by adding a dummy attribute
attributes(x) <- list(foo = "bar")

# ALTREP - wrapped + compact seq
# .Internal(inspect(x))

bench::mark(x[index], iterations = 1000)

	[[alternative HTML version deleted]]


From iuke-tier@ey m@iii@g oii uiow@@edu  Tue Feb  4 04:43:37 2020
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Mon, 3 Feb 2020 21:43:37 -0600 (CST)
Subject: [Rd] 
 [External] ALTREP "wrapper" classes needs an Extract_subset method
In-Reply-To: <CABzLhzxrq_ROOtzb9f_JCNVNgSHZaXmUC5xTserugC0sMwsETg@mail.gmail.com>
References: <CABzLhzxrq_ROOtzb9f_JCNVNgSHZaXmUC5xTserugC0sMwsETg@mail.gmail.com>
Message-ID: <alpine.OSX.2.21.2002032136230.657@macbook-air-5.local>

It's not a bug as there will always be cases where ALTREP will need to
fall back. But it does look like something that would be good to
address. So please file it as a wishlist item and I'll look at a patch
if you have one.

As to your issue at the end, it seems to me that you should probably
have another look at your design. Supporting getting a subset,
including one of size one, but not getting an element seems odd, and I
suspect will get you in trouble somewhere else before long..

Best,

luke

On Mon, 3 Feb 2020, Davis Vaughan wrote:

> Hi all,
>
> I believe I have found a bug (or perhaps just an oversight) with the ALTREP
> wrapper classes. The short form of this is that I believe that the wrapper
> classes need to override the default ALTREP `Extract_subset_method()` with
> a method that calls `Extract_subset()` on the "wrapped" object. I have a
> patch prepared here:
>
> https://github.com/DavisVaughan/r-source/pull/1
>
> There is currently no call to `R_set_altvec_Extract_subset_method()` in the
> wrapper class init functions. This means that the default ALTREP method of
> `altvec_Extract_subset_default()` is called, which simply returns `NULL`.
>
> Consider what that means for an ALTREP compact integer seq that has been
> "wrapped". The default subsetting code will eventually call
> `ExtractSubset()`. That checks if the object is ALTREP, and calls the
> ALTREP Extract_subset() method if so. If the return value from that is
> NULL, then it will fallback to repeatedly calling `INTEGER_ELT()` to do the
> subsetting. See below for the relevant section:
>
> https://github.com/wch/r-source/blob/d1c0c6b921fc6a0cbe82c4354c6ec6ceb7f320aa/src/main/subset.c#L103
>
> This wrapped compact integer seq is an ALTREP object, so `ALTREP(x)`
> returns true. But then it just calls the default method of returning NULL
> rather than calling the compact integer seq `Extract_subset()` method! This
> still "works" because it falls back to `INTEGER_ELT()` for which there is
> a `wrapper_integer_Elt()` method defined that will use the underlying
> compact seq's `integer_Elt()` method, but it is less efficient than it
> could be.
>
> My rough benchmarks show that in R 3.6.0 the subset benchmarks at the
> bottom of this message take 4ms on the compact seq, and 5ms on the wrapped
> compact seq. With a patch that I have prepared, both take 4ms.
>
> The other reason I bring this up is that it can result in bugs with some
> ALTREP objects. I was working on one where it makes sense to have an
> `Extract_subset()` method but not an `Elt()` method. When it gets
> "wrapped", my `Extract_subset()` method is bypassed as shown above, and the
> `Elt()` method is incorrectly called (which throws an error because it is
> not meaningful for me).
>
> If you all agree these changes should be made, I can submit the patch.
>
> Thanks,
> Davis
>
> # Ensure we have enough elements for "wrapping" to kick in
> x <- 1:65
>
> # select the 1st element a large number of times
> index <- rep(1L, 1e6) + 0L
>
> # ALTREP - but not wrapped
> # .Internal(inspect(x))
>
> bench::mark(x[index], iterations = 1000)
>
> # Wrap it by adding a dummy attribute
> attributes(x) <- list(foo = "bar")
>
> # ALTREP - wrapped + compact seq
> # .Internal(inspect(x))
>
> bench::mark(x[index], iterations = 1000)
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From k|m@|@me @end|ng |rom y@hoo@|r  Tue Feb  4 14:20:26 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Tue, 4 Feb 2020 13:20:26 +0000 (UTC)
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
References: <1120275228.1123321.1580710981461.ref@mail.yahoo.com>
 <1120275228.1123321.1580710981461@mail.yahoo.com>
 <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
Message-ID: <5714922.446597.1580822426141@mail.yahoo.com>

  
I am nowaware that I should not post this type of questions on this group. However, Iwould like to have some clarifications related to the response you've?alreadyprovided. The code you provided yields accurate results, however I still haveissues grasping the loop process in case 1 & 2.

In case1,?the use of?"p+1" and "q+1" is still blurry tome? Likewise "0L" and " i + 1L" in case 2.

?

Can youplease provide explanations on the loop mechanisms you've used.?




    Le lundi 3 f?vrier 2020 ? 03:47:20 UTC?6, Rui Barradas <ruipbarradas at sapo.pt> a ?crit :  
 
 Hello,

You can solve the problem in two different ways.

1. Redefine storage1 as a matrix and extract the aic *in* the loop.

storage1 <- matrix(0, 4, 4)
for(p in 0:3){
? for(q in 0:3){
? ? storage1[p + 1, q + 1] <- arima(etc)$aic
? }
}


2. define storage1 as a list.

storage1 <- vector("list", 16)
i <- 0L
for(p in 0:3){
? for(q in 0:3){
? ? i <- i + 1L
? ? storage1[[i]] <- arima(etc)
? }
}

lapply(storage1, '[[', "aic")? # get the aic's.

Maybe sapply is better it will return a vector.


Hope this helps,

Rui Barradas




?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
> Hello
> I am trying to extract AICs from an ARIMA estimation with different
> combinations of p & q ( p =0,1,2,3
> and q=0,1.2,3). I have tried using the following code unsucessfully. Can
> anyone help?
> 
> code:
> storage1 <- numeric(16)
> for (p in 0:3){
> 
>? ? ? for (q in 0:3){
>? 
>? ? ? storage1[p]? <- arima(x,order=c(p,0,q), method="ML")}
> }
> storage1$aic
> 
> ??? [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
  
	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Tue Feb  4 16:36:30 2020
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Tue, 4 Feb 2020 15:36:30 +0000
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <5714922.446597.1580822426141@mail.yahoo.com>
References: <1120275228.1123321.1580710981461.ref@mail.yahoo.com>
 <1120275228.1123321.1580710981461@mail.yahoo.com>
 <6edaef9e-cd53-a81e-d1a4-4138f9de4134@sapo.pt>
 <5714922.446597.1580822426141@mail.yahoo.com>
Message-ID: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>

Hello,

Don't worry, we've seen worst questions :).
Inline.

?s 13:20 de 04/02/20, ismael ismael escreveu:
> I am now aware that I should not post this type of questions on this 
> group. However, I would like to have some clarifications related to the 
> response you've?already provided. The code you provided yields accurate 
> results, however I still have issues grasping the loop process in case 1 
> & 2.
> 
> In case 1,?the use of?"p+1" and "q+1" is still blurry to me? 

1. R indexes starting from 1, both your orders p and q are 0:3. So to 
assign the results to the results matrix, add 1 and get indices 1:4.
You could also set the row and column names after, to make it more clear:

dimnames(storage1) <- list(paste0("p", 0:3), paste0("q", 0:3))

2. 0L is an integer, just 0 is a floating-point corresponding to the C 
language double.

class(0L)   # "integer"
class(0)    # "numeric"

typeof(0L)  # "integer"
typeof(0)   # "double"

Indices are integers, so I used integers and added 1L every iteration 
through the inner loop.

This also means that in point 1. I should have indexed the matrix with p 
+ 1L and q + 1L, see the output of

class(0:3)


Hope this helps,

Rui Barradas

Likewise
> "0L" and " i + 1L" in case 2.
> 
> Can you please provide explanations on the loop mechanisms you've used.
> 
> 
> 
> 
> 
> Le lundi 3 f?vrier 2020 ? 03:47:20 UTC?6, Rui Barradas 
> <ruipbarradas at sapo.pt> a ?crit :
> 
> 
> Hello,
> 
> You can solve the problem in two different ways.
> 
> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
> 
> storage1 <- matrix(0, 4, 4)
> for(p in 0:3){
>  ? for(q in 0:3){
>  ? ? storage1[p + 1, q + 1] <- arima(etc)$aic
>  ? }
> }
> 
> 
> 2. define storage1 as a list.
> 
> storage1 <- vector("list", 16)
> i <- 0L
> for(p in 0:3){
>  ? for(q in 0:3){
>  ? ? i <- i + 1L
>  ? ? storage1[[i]] <- arima(etc)
>  ? }
> }
> 
> lapply(storage1, '[[', "aic")? # get the aic's.
> 
> Maybe sapply is better it will return a vector.
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> 
> 
> 
> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>  > Hello
>  > I am trying to extract AICs from an ARIMA estimation with different
>  > combinations of p & q ( p =0,1,2,3
>  > and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>  > anyone help?
>  >
>  > code:
>  > storage1 <- numeric(16)
>  > for (p in 0:3){
>  >
>  >? ? ? for (q in 0:3){
>  >
>  >? ? ? storage1[p]? <- arima(x,order=c(p,0,q), method="ML")}
>  > }
>  > storage1$aic
> 
>  >
>  > ??? [[alternative HTML version deleted]]
>  >
>  > ______________________________________________
>  > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>  > https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>  >


From j@goreck| @end|ng |rom w|t@edu@p|  Tue Feb  4 17:18:03 2020
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Tue, 4 Feb 2020 21:48:03 +0530
Subject: [Rd] document base::`[[.data.frame`
Message-ID: <CAOO9MKWTFqSkJ2EhD=dQ8BSnwW1wNzDk7_VGrf39xme3P2dOxA@mail.gmail.com>

Dear R-devel,

Looking at source of base::`[[.data.frame` we can see a mysterious
handling of subsetting rows and columns at the same time. That does
not seems to be dcoumented anywhere in `[[`. Could we extend
documentation for such data.frame use cases? Or if it is meant to be
used only internally, then maybe better to put that into own internal
function?

Best regards,
Jan Gorecki


From k|m@|@me @end|ng |rom y@hoo@|r  Tue Feb  4 22:00:48 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Tue, 4 Feb 2020 15:00:48 -0600
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>
References: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>
Message-ID: <B53EFAA6-175F-4131-A859-44FA7727045A@yahoo.fr>

I does help! Thank you for clarifications!


Sent from my iPhone

> On Feb 4, 2020, at 9:36 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
> 
> ?Hello,
> 
> Don't worry, we've seen worst questions :).
> Inline.
> 
> ?s 13:20 de 04/02/20, ismael ismael escreveu:
>> I am now aware that I should not post this type of questions on this group. However, I would like to have some clarifications related to the response you've already provided. The code you provided yields accurate results, however I still have issues grasping the loop process in case 1 & 2.
>> In case 1, the use of "p+1" and "q+1" is still blurry to me? 
> 
> 1. R indexes starting from 1, both your orders p and q are 0:3. So to assign the results to the results matrix, add 1 and get indices 1:4.
> You could also set the row and column names after, to make it more clear:
> 
> dimnames(storage1) <- list(paste0("p", 0:3), paste0("q", 0:3))
> 
> 2. 0L is an integer, just 0 is a floating-point corresponding to the C language double.
> 
> class(0L)   # "integer"
> class(0)    # "numeric"
> 
> typeof(0L)  # "integer"
> typeof(0)   # "double"
> 
> Indices are integers, so I used integers and added 1L every iteration through the inner loop.
> 
> This also means that in point 1. I should have indexed the matrix with p + 1L and q + 1L, see the output of
> 
> class(0:3)
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> Likewise
>> "0L" and " i + 1L" in case 2.
>> Can you please provide explanations on the loop mechanisms you've used.
>> Le lundi 3 f?vrier 2020 ? 03:47:20 UTC?6, Rui Barradas <ruipbarradas at sapo.pt> a ?crit :
>> Hello,
>> You can solve the problem in two different ways.
>> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
>> storage1 <- matrix(0, 4, 4)
>> for(p in 0:3){
>>   for(q in 0:3){
>>     storage1[p + 1, q + 1] <- arima(etc)$aic
>>   }
>> }
>> 2. define storage1 as a list.
>> storage1 <- vector("list", 16)
>> i <- 0L
>> for(p in 0:3){
>>   for(q in 0:3){
>>     i <- i + 1L
>>     storage1[[i]] <- arima(etc)
>>   }
>> }
>> lapply(storage1, '[[', "aic")  # get the aic's.
>> Maybe sapply is better it will return a vector.
>> Hope this helps,
>> Rui Barradas
>> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>> > Hello
>> > I am trying to extract AICs from an ARIMA estimation with different
>> > combinations of p & q ( p =0,1,2,3
>> > and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>> > anyone help?
>> >
>> > code:
>> > storage1 <- numeric(16)
>> > for (p in 0:3){
>> >
>> >      for (q in 0:3){
>> >
>> >      storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>> > }
>> > storage1$aic
>> >
>> >     [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >


From k|m@|@me @end|ng |rom y@hoo@|r  Tue Feb  4 22:00:48 2020
From: k|m@|@me @end|ng |rom y@hoo@|r (ismael ismael)
Date: Tue, 4 Feb 2020 15:00:48 -0600
Subject: [Rd] Stroring and extracting AICs from an ARIMA model using a
 nested loop
In-Reply-To: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>
References: <555a3b0a-261f-6bbd-1f60-a075de9c7b88@sapo.pt>
Message-ID: <B53EFAA6-175F-4131-A859-44FA7727045A@yahoo.fr>

I does help! Thank you for clarifications!


Sent from my iPhone

> On Feb 4, 2020, at 9:36 AM, Rui Barradas <ruipbarradas at sapo.pt> wrote:
> 
> ?Hello,
> 
> Don't worry, we've seen worst questions :).
> Inline.
> 
> ?s 13:20 de 04/02/20, ismael ismael escreveu:
>> I am now aware that I should not post this type of questions on this group. However, I would like to have some clarifications related to the response you've already provided. The code you provided yields accurate results, however I still have issues grasping the loop process in case 1 & 2.
>> In case 1, the use of "p+1" and "q+1" is still blurry to me? 
> 
> 1. R indexes starting from 1, both your orders p and q are 0:3. So to assign the results to the results matrix, add 1 and get indices 1:4.
> You could also set the row and column names after, to make it more clear:
> 
> dimnames(storage1) <- list(paste0("p", 0:3), paste0("q", 0:3))
> 
> 2. 0L is an integer, just 0 is a floating-point corresponding to the C language double.
> 
> class(0L)   # "integer"
> class(0)    # "numeric"
> 
> typeof(0L)  # "integer"
> typeof(0)   # "double"
> 
> Indices are integers, so I used integers and added 1L every iteration through the inner loop.
> 
> This also means that in point 1. I should have indexed the matrix with p + 1L and q + 1L, see the output of
> 
> class(0:3)
> 
> 
> Hope this helps,
> 
> Rui Barradas
> 
> Likewise
>> "0L" and " i + 1L" in case 2.
>> Can you please provide explanations on the loop mechanisms you've used.
>> Le lundi 3 f?vrier 2020 ? 03:47:20 UTC?6, Rui Barradas <ruipbarradas at sapo.pt> a ?crit :
>> Hello,
>> You can solve the problem in two different ways.
>> 1. Redefine storage1 as a matrix and extract the aic *in* the loop.
>> storage1 <- matrix(0, 4, 4)
>> for(p in 0:3){
>>   for(q in 0:3){
>>     storage1[p + 1, q + 1] <- arima(etc)$aic
>>   }
>> }
>> 2. define storage1 as a list.
>> storage1 <- vector("list", 16)
>> i <- 0L
>> for(p in 0:3){
>>   for(q in 0:3){
>>     i <- i + 1L
>>     storage1[[i]] <- arima(etc)
>>   }
>> }
>> lapply(storage1, '[[', "aic")  # get the aic's.
>> Maybe sapply is better it will return a vector.
>> Hope this helps,
>> Rui Barradas
>> ?s 06:23 de 03/02/20, ismael ismael via R-devel escreveu:
>> > Hello
>> > I am trying to extract AICs from an ARIMA estimation with different
>> > combinations of p & q ( p =0,1,2,3
>> > and q=0,1.2,3). I have tried using the following code unsucessfully. Can
>> > anyone help?
>> >
>> > code:
>> > storage1 <- numeric(16)
>> > for (p in 0:3){
>> >
>> >      for (q in 0:3){
>> >
>> >      storage1[p]  <- arima(x,order=c(p,0,q), method="ML")}
>> > }
>> > storage1$aic
>> >
>> >     [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >


From pd@me@ @end|ng |rom cb@@dk  Thu Feb  6 16:58:13 2020
From: pd@me@ @end|ng |rom cb@@dk (Peter Dalgaard)
Date: Thu, 6 Feb 2020 15:58:13 +0000
Subject: [Rd] R 3.6.3 scheduled for February 29
Message-ID: <8913CAB2-6C63-4563-8A88-40B991C42ABC@cbs.dk>

Full schedule is available on developer.r-project.org.

(The date is chosen to celebrate the 5th anniversary of R 1.0.0. Some irregularity may occur on the release day, since this happens to be a Saturday and the release manager is speaking at the CelebRation2020 event...) 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From @purd|e@@ @end|ng |rom gm@||@com  Thu Feb  6 21:32:02 2020
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Fri, 7 Feb 2020 09:32:02 +1300
Subject: [Rd] R 3.6.3 scheduled for February 29
In-Reply-To: <8913CAB2-6C63-4563-8A88-40B991C42ABC@cbs.dk>
References: <8913CAB2-6C63-4563-8A88-40B991C42ABC@cbs.dk>
Message-ID: <CAB8pepzEJ7MmJjpgbQDTBF7VtK2J9r5k-5zQxqvrxYvDdwy2Sg@mail.gmail.com>

Congratulations!

> celebrate (beeR=TRUE, loud.music=FALSE,
    nbeeRs=2L,
    proportion.of.tech.talk=0.4)

Why is it the 5th anniversary and the not the 20th anniversary?


On Fri, Feb 7, 2020 at 4:58 AM Peter Dalgaard via R-devel
<r-devel at r-project.org> wrote:
>
> Full schedule is available on developer.r-project.org.
>
> (The date is chosen to celebrate the 5th anniversary of R 1.0.0. Some irregularity may occur on the release day, since this happens to be a Saturday and the release manager is speaking at the CelebRation2020 event...)
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From bbo|ker @end|ng |rom gm@||@com  Thu Feb  6 21:43:51 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 6 Feb 2020 15:43:51 -0500
Subject: [Rd] R 3.6.3 scheduled for February 29
In-Reply-To: <CAB8pepzEJ7MmJjpgbQDTBF7VtK2J9r5k-5zQxqvrxYvDdwy2Sg@mail.gmail.com>
References: <8913CAB2-6C63-4563-8A88-40B991C42ABC@cbs.dk>
 <CAB8pepzEJ7MmJjpgbQDTBF7VtK2J9r5k-5zQxqvrxYvDdwy2Sg@mail.gmail.com>
Message-ID: <CABghstQepeoxZXS22eNZ=zKCLhQnM8F2f6d-KL2ZnQ7k69-mNw@mail.gmail.com>

  Because it's the fifth recurrence of the date (29 February).
  https://en.wikipedia.org/wiki/The_Pirates_of_Penzance

On Thu, Feb 6, 2020 at 3:32 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
>
> Congratulations!
>
> > celebrate (beeR=TRUE, loud.music=FALSE,
>     nbeeRs=2L,
>     proportion.of.tech.talk=0.4)
>
> Why is it the 5th anniversary and the not the 20th anniversary?
>
>
> On Fri, Feb 7, 2020 at 4:58 AM Peter Dalgaard via R-devel
> <r-devel at r-project.org> wrote:
> >
> > Full schedule is available on developer.r-project.org.
> >
> > (The date is chosen to celebrate the 5th anniversary of R 1.0.0. Some irregularity may occur on the release day, since this happens to be a Saturday and the release manager is speaking at the CelebRation2020 event...)
> >
> > --
> > Peter Dalgaard, Professor,
> > Center for Statistics, Copenhagen Business School
> > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > Phone: (+45)38153501
> > Office: A 4.23
> > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From berw|n@tur|@ch @end|ng |rom gm@||@com  Sat Feb  8 09:27:07 2020
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Sat, 8 Feb 2020 16:27:07 +0800
Subject: [Rd] Development version of R fails tests and is not installed
Message-ID: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>

G'day all,

I have daily scripts running to install the patched version of the
current R version and the development version of R on my linux box
(Ubuntu 18.04.4 LTS).

The last development version that was successfully compiled and
installed was "R Under development (unstable) (2020-01-25 r77715)" on
27 January.  Since then the script always fails as a regression test
seems to fail.  Specifically, in the tests/ subdirectory of my build
directory I have a file reg-tests-1d.Rout.fail which ends with:

> ## more than half of the above were rounded *down* in R <= 3.6.x
> ## Some "wrong" test cases from CRAN packages (partly relying on wrong R <= 3.6.x behavior) 
> stopifnot(exprs = {
+     all.equal(round(10.7775, digits=3), 10.778, tolerance = 1e-12) # even tol=0, was 10.777
+     all.equal(round(12345 / 1000,   2), 12.35 , tolerance = 1e-12) # even tol=0, was 12.34 in Rd
+     all.equal(round(9.18665, 4),        9.1866, tolerance = 1e-12) # even tol=0, was  9.1867
+ })
Error: round(10.7775, digits = 3) and 10.778 are not equal:
  Mean relative difference: 9.27902e-05
Execution halted

This happens while the 32bit architecture is installed,  which is a bit
surprising as I get the following results for the last installed
version of R's development version:

R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences" 
Copyright (C) 2020 The R Foundation for Statistical Computing 
Platform: x86_64-pc-linux-gnu/32 (32-bit)
[...]
> round(10.7775, digits=3)
[1] 10.778

and

R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences" 
Copyright (C) 2020 The R Foundation for Statistical Computing 
Platform: x86_64-pc-linux-gnu/64 (64-bit) 
[...]
> round(10.7775, digits=3)
[1] 10.778


On the other hand, the R 3.6.2 version, that I mainly use at the moment,
gives the following results:

R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu/32 (32-bit)
[...]
> round(10.7775, digits=3)
[1] 10.777

and

R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu/64 (64-bit)
[...]
> round(10.7775, digits=3)
[1] 10.777


So it seems as if the behaviour of round() has changed between R 3.6.2
and the development version.  But I do not understand why this test all
of a sudden failed if the results from the last successfully installed
development version of R suggest that the test should be passed.

Thanks in advance for any insight and tips.

Cheers,

	Berwin


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Sat Feb  8 11:12:43 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Sat, 8 Feb 2020 21:12:43 +1100
Subject: [Rd] Development version of R fails tests and is not installed
In-Reply-To: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
References: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
Message-ID: <CAJmOi+OHSZ_RA4c-vujM7HvGUbMhKiJ6g80wCRg1PZK3v-wMLw@mail.gmail.com>

The only observation I can make is that the change to round() was made
in r77727 whereas your R-devel appears to be r77715 (so would not
exhibit the fixed behaviour).  My guess is that there was a perpetual
installation failure after r77715 but that the test folder was still
retrieved and used.

On Sat, 8 Feb 2020 at 19:27, Berwin A Turlach <berwin.turlach at gmail.com> wrote:
>
> G'day all,
>
> I have daily scripts running to install the patched version of the
> current R version and the development version of R on my linux box
> (Ubuntu 18.04.4 LTS).
>
> The last development version that was successfully compiled and
> installed was "R Under development (unstable) (2020-01-25 r77715)" on
> 27 January.  Since then the script always fails as a regression test
> seems to fail.  Specifically, in the tests/ subdirectory of my build
> directory I have a file reg-tests-1d.Rout.fail which ends with:
>
> > ## more than half of the above were rounded *down* in R <= 3.6.x
> > ## Some "wrong" test cases from CRAN packages (partly relying on wrong R <= 3.6.x behavior)
> > stopifnot(exprs = {
> +     all.equal(round(10.7775, digits=3), 10.778, tolerance = 1e-12) # even tol=0, was 10.777
> +     all.equal(round(12345 / 1000,   2), 12.35 , tolerance = 1e-12) # even tol=0, was 12.34 in Rd
> +     all.equal(round(9.18665, 4),        9.1866, tolerance = 1e-12) # even tol=0, was  9.1867
> + })
> Error: round(10.7775, digits = 3) and 10.778 are not equal:
>   Mean relative difference: 9.27902e-05
> Execution halted
>
> This happens while the 32bit architecture is installed,  which is a bit
> surprising as I get the following results for the last installed
> version of R's development version:
>
> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu/32 (32-bit)
> [...]
> > round(10.7775, digits=3)
> [1] 10.778
>
> and
>
> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu/64 (64-bit)
> [...]
> > round(10.7775, digits=3)
> [1] 10.778
>
>
> On the other hand, the R 3.6.2 version, that I mainly use at the moment,
> gives the following results:
>
> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
> Copyright (C) 2019 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu/32 (32-bit)
> [...]
> > round(10.7775, digits=3)
> [1] 10.777
>
> and
>
> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
> Copyright (C) 2019 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu/64 (64-bit)
> [...]
> > round(10.7775, digits=3)
> [1] 10.777
>
>
> So it seems as if the behaviour of round() has changed between R 3.6.2
> and the development version.  But I do not understand why this test all
> of a sudden failed if the results from the last successfully installed
> development version of R suggest that the test should be passed.
>
> Thanks in advance for any insight and tips.
>
> Cheers,
>
>         Berwin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Feb  8 18:02:45 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 8 Feb 2020 18:02:45 +0100
Subject: [Rd] round(x, dig) [was "Development version of R fails tests .."]
In-Reply-To: <CAJmOi+OHSZ_RA4c-vujM7HvGUbMhKiJ6g80wCRg1PZK3v-wMLw@mail.gmail.com>
References: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
 <CAJmOi+OHSZ_RA4c-vujM7HvGUbMhKiJ6g80wCRg1PZK3v-wMLw@mail.gmail.com>
Message-ID: <24126.59829.811380.837844@stat.math.ethz.ch>

>>>>> Hugh Parsonage 
>>>>>     on Sat, 8 Feb 2020 21:12:43 +1100 writes:

    > The only observation I can make is that the change to
    > round() was made in r77727 whereas your R-devel appears to
    > be r77715 (so would not exhibit the fixed behaviour).  My
    > guess is that there was a perpetual installation failure
    > after r77715 but that the test folder was still retrieved
    > and used.


    > On Sat, 8 Feb 2020 at 19:27, Berwin A Turlach <berwin.turlach at gmail.com> wrote:
    >> 
    >> G'day all,
    >> 
    >> I have daily scripts running to install the patched version of the
    >> current R version and the development version of R on my linux box
    >> (Ubuntu 18.04.4 LTS).
    >> 
    >> The last development version that was successfully compiled and
    >> installed was "R Under development (unstable) (2020-01-25 r77715)" on
    >> 27 January.  Since then the script always fails as a regression test
    >> seems to fail.  Specifically, in the tests/ subdirectory of my build
    >> directory I have a file reg-tests-1d.Rout.fail which ends with:
    >> 
    >> > ## more than half of the above were rounded *down* in R <= 3.6.x
    >> > ## Some "wrong" test cases from CRAN packages (partly relying on wrong R <= 3.6.x behavior)
    >> > stopifnot(exprs = {
    >> +     all.equal(round(10.7775, digits=3), 10.778, tolerance = 1e-12) # even tol=0, was 10.777
    >> +     all.equal(round(12345 / 1000,   2), 12.35 , tolerance = 1e-12) # even tol=0, was 12.34 in Rd
    >> +     all.equal(round(9.18665, 4),        9.1866, tolerance = 1e-12) # even tol=0, was  9.1867
    >> + })
    >> Error: round(10.7775, digits = 3) and 10.778 are not equal:

    >> Mean relative difference: 9.27902e-05
    >> Execution halted
    >> 
    >> This happens while the 32bit architecture is installed,  which is a bit
    >> surprising as I get the following results for the last installed
    >> version of R's development version:
    >> 
    >> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences"
    >> Copyright (C) 2020 The R Foundation for Statistical Computing
    >> Platform: x86_64-pc-linux-gnu/32 (32-bit)
    >> [...]
    >> > round(10.7775, digits=3)
    >> [1] 10.778
    >> 
    >> and
    >> 
    >> R Under development (unstable) (2020-01-25 r77715) -- "Unsuffered Consequences"
    >> Copyright (C) 2020 The R Foundation for Statistical Computing
    >> Platform: x86_64-pc-linux-gnu/64 (64-bit)
    >> [...]
    >> > round(10.7775, digits=3)
    >> [1] 10.778
    >> 
    >> 
    >> On the other hand, the R 3.6.2 version, that I mainly use at the moment,
    >> gives the following results:
    >> 
    >> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
    >> Copyright (C) 2019 The R Foundation for Statistical Computing
    >> Platform: x86_64-pc-linux-gnu/32 (32-bit)
    >> [...]
    >> > round(10.7775, digits=3)
    >> [1] 10.777
    >> 
    >> and
    >> 
    >> R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
    >> Copyright (C) 2019 The R Foundation for Statistical Computing
    >> Platform: x86_64-pc-linux-gnu/64 (64-bit)
    >> [...]
    >> > round(10.7775, digits=3)
    >> [1] 10.777
    >> 
    >> 
    >> So it seems as if the behaviour of round() has changed between R 3.6.2
    >> and the development version.  But I do not understand why this test all
    >> of a sudden failed if the results from the last successfully installed
    >> development version of R suggest that the test should be passed.
    >> 
    >> Thanks in advance for any insight and tips.
    >> 
    >> Cheers,
    >> Berwin

Note that r77727 was the last of a few commits I made related to
dealing with R's bug report PR#17668:
  https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668

which itself triggered an involved dialogue, mostly online,
visible at the PR's URL above.

It lead me to also write an R package 'round' (in order to
compare R 3.6.x and later's round() versions, comparing them etc)
with a (not entirely polished) package vignette
that explains how rounding to decimal digits is not at all
trivial and why and how I ended (*) improving R's
round(x, digits) algorithm in R-devel.

The CRAN version of the package
    https://cran.r-project.org/package=round

    install.packages("round")
    
is not quite current, notably its vignette isn't and so I have
mentioned in the above thread
( https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668#c8 )
that the latest version of the vignette is also available as

     https://stat.ethz.ch/~maechler/R/Rounding.html

You can install and load the devel version of 'round' by

   remotes::install_gitlab("mmaechler/round") 
   require("round")

and then look a bit at the different versions of round(.)  using

   example(roundX)

i.e. using round::roundX(x, digits, version)

For those who read so far:  I'm really interested in getting
critical (constructive) feedback and comments about what I've
written there (in the bugzilla report, and the package vignette).
It seems almost nobody till now has had much interest and time to delve
into the somewhat intriguing issues.

Best regards,
Martin Maechler
ETH Zurich and R Core team


From jeroen @end|ng |rom berke|ey@edu  Sun Feb  9 01:04:24 2020
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Sun, 9 Feb 2020 01:04:24 +0100
Subject: [Rd] Development version of R fails tests and is not installed
In-Reply-To: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
References: <20200208162707.04cc63d2@ECM-DTC-716.uniwa.uwa.edu.au>
Message-ID: <CABFfbXs19vQLHU39ysuqrY21+ghcivo+73VHQ2GUmgL9i6=N9g@mail.gmail.com>

On Sat, Feb 8, 2020 at 9:27 AM Berwin A Turlach
<berwin.turlach at gmail.com> wrote:
>
> G'day all,
>
> I have daily scripts running to install the patched version of the
> current R version and the development version of R on my linux box
> (Ubuntu 18.04.4 LTS).
>
> The last development version that was successfully compiled and
> installed was "R Under development (unstable) (2020-01-25 r77715)" on
> 27 January.  Since then the script always fails as a regression test
> seems to fail.  Specifically, in the tests/ subdirectory of my build
> directory I have a file reg-tests-1d.Rout.fail which ends with:
>
> > ## more than half of the above were rounded *down* in R <= 3.6.x
> > ## Some "wrong" test cases from CRAN packages (partly relying on wrong R <= 3.6.x behavior)
> > stopifnot(exprs = {
> +     all.equal(round(10.7775, digits=3), 10.778, tolerance = 1e-12) # even tol=0, was 10.777
> +     all.equal(round(12345 / 1000,   2), 12.35 , tolerance = 1e-12) # even tol=0, was 12.34 in Rd
> +     all.equal(round(9.18665, 4),        9.1866, tolerance = 1e-12) # even tol=0, was  9.1867
> + })
> Error: round(10.7775, digits = 3) and 10.778 are not equal:
>   Mean relative difference: 9.27902e-05
> Execution halted
>
> This happens while the 32bit architecture is installed,  which is a bit
> surprising as I get the following results for the last installed
> version of R's development version

There are two independent, but slightly related issues here:

First, as Martin already explained, the round() function was recently
improved, and some very strict tests were added to confirm the new
behavior. That explains why you see different round() results in R 4.0
from R 3.6.2. The bugzilla thread explains why:
https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17668

The second issue has to do with numeric precision on 32-bit systems,
which is why I think you are getting this error. We ran into the same
problem on Windows where results on 32-bit are slightly off, including
(but not limited to) edge-cases in rounding. This has always been the
case, but the 32-bit inaccuracies have increased for recent versions
of GCC.

In general, the main difference in float precision between i686 and
x86_64 could come from whether it uses x87 (with 80 bit floats as
intermediates, as long as all intermediates are stored in registers)
or sse2 for general math. Depending on what the tests do, you can get
test failures (i.e. different results) if intermediates use different
precision, if the test reference is calculated assuming rounding all
intermediates to a certain length between each step.

The solution: to get the same results on 32-bit as on 64-bit, you need
to build R with these extra gcc flags: -mfpmath=sse -msse2. As
explained in https://gcc.gnu.org/onlinedocs/gcc-8.3.0/gcc/x86-Options.html#x86-Options
the -mfpmath=sse is the default for x86-64 but not for i686. As of
r77719 we have made sse the default on Windows and now we get
consistent results on 32-bit and 64-bit, including the round() edge
cases.

I think the intention was to add something similar in R's autoconf
script to enable sse on 32-bit unix systems, but seemingly this hasn't
happened. For now I think you should be able to make your 32-bit
checks succeed if you build R with CFLAGS=-mfpmath=sse -msse2.


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Tue Feb 11 10:02:02 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Tue, 11 Feb 2020 20:02:02 +1100
Subject: [Rd] Minor typo in recent commit
Message-ID: <CAJmOi+Pm1qW8+mshgVO48pLxkvtqBBSXqvGgadVaKNKB1Yq+1g@mail.gmail.com>

I believe should be February 2020 not 2010

--- a/doc/manual/R-exts.texi
+++ b/doc/manual/R-exts.texi
@@ -2631,9 +2631,9 @@ not necessarily installed) on all known @R{}
platforms.  As from @R{}
 4.0.0 a C++ compiler will be selected only if it conforms to the 2011
 standard (`C++11').  A minor update at footnote{The changes are linked from
 @uref{https://isocpp.org/@/std/@/standing-documents/@/sd-6-sg10-feature-test-recommendations}.}

-(`C++14') was published in December 2014.  The latest standard (`C++17')
-was published in December 2017, and a further revision (`C++20') is in
-preparation.
+(`C++14') was published in December 2014.  A revision (`C++17') was
+published in December 2017, and a further revision (`C++20', with many
+new features) is scheduled for February 2010.


From neon|r@ @end|ng |rom gm@||@com  Tue Feb 11 14:57:01 2020
From: neon|r@ @end|ng |rom gm@||@com (neonira Arinoem)
Date: Tue, 11 Feb 2020 14:57:01 +0100
Subject: [Rd] PDF generation issue from manual page
Message-ID: <CAN--Dz1KKtjmmvgNg3osk9KYEKOY9gECEsCkctqCmw0Kf6yYBw@mail.gmail.com>

Hi R gurus

Got an issue risen by CRAN about using unknown characters from Latex.

Here is the error message







*Check: PDF version of manual, Result: WARNING   LaTeX errors when creating
PDF version.   This typically indicates Rd problems.   LaTeX errors found:
  ! Undefined control sequence.   <recently read> \blacktriangleright *




*   l.237 STRATUM $\blacktriangleright
$ LAYER\_3   ! Undefined control sequence.   <recently read>
\blacktriangleright *




*   l.239 PHASING $\blacktriangleright
$ RUN   ! Undefined control sequence.   <recently read> \blacktriangleright
*

*   l.241 INTENT  $\blacktriangleright
$ FEEDBACK*

I understand that the \blacktriangleright is an unknown control sequence
from latex ... and that sounds strange to me, as I uses it often in
vignettes without any issue so far.

In the incriminated manual page, the code generating this sequence is the
following
*\ifelse{latex}{\out{$\blacktriangleright$}}{\ifelse{html}{\out{&#x25B6;}}{\u25b6}}*

I am wondering what is wrong and how to circumvent such issue.
Yours ideas and hints welcome

Best.
Neonira

	[[alternative HTML version deleted]]


From pe|j@@z @end|ng |rom y@hoo@co@uk  Tue Feb 11 15:54:12 2020
From: pe|j@@z @end|ng |rom y@hoo@co@uk (lejeczek)
Date: Tue, 11 Feb 2020 14:54:12 +0000
Subject: [Rd] R with Squid proxy - invalid requests ??
References: <e25b904d-f06a-bd62-aae2-503abeecff9f.ref@yahoo.co.uk>
Message-ID: <e25b904d-f06a-bd62-aae2-503abeecff9f@yahoo.co.uk>

dear devel,

I thought you guys would know best - I have an R which fails to get
communicate outside via a proxy, and Squid's logs show:

...

1581432434.501????? 0 10.5.8.17 TAG_NONE/400 4064? %C5/%B6* -
HIER_NONE/- text/html
1581432497.231????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
error:invalid-request - HIER_NONE/- text/html
1581432497.338????? 0 10.5.8.17 TAG_NONE/400 4300?
%AC%9E%D0Rj%84%19%8D%23O%F9%E5%D4%E9%DBj%8D%F9x%C3:%FB-%02f%FBE%E5O%92c%9A
- HIER_NONE/- text/html
1581432497.445????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
error:invalid-request - HIER_NONE/- text/html
1581432497.552????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
error:invalid-request - HIER_NONE/- text/html
1581432497.659????? 0 10.5.8.17 TAG_NONE/400 4320?
Fi%E3@%04%D3%97o0%23%13%1B%C1%08%082%E8%A5%1B%DAh%F3%18%E1%DB%A1%1E%FET%01%DD
- HIER_NONE/- text/html
1581432497.766????? 0 10.5.8.17 TAG_NONE/400 4452?
%01%D4%F7%8AB%CA%AE%A5%D7.%BE%C4I%B5%D4%10c%0F%9D%9B%D9%C7%BA%15%FF%A2JO%B3%60%D0%86%B8lY%8F%97%B5%BC%15%C9
- HIER_NONE/- text/html
1581432557.005????? 0 10.5.8.17 TAG_NONE/400 4346?
%CC6%F3%CA%F4%90%F5%E0%9B%B47%C6%DB%83%89%E1%F4%F1=%08a%81%06KK%3C%B4%DAj%AC%B7
- HIER_NONE/- text/html
1581432557.112????? 0 10.5.8.17 TAG_NONE/400 4320?
%DE%D3%1B%89%1Et%94R%ECQ%ADd%04%8D=r%92%9AZ%5E%98%C4%1F%F9%9F%06%FF%AB%5E%BC%D7@
- HIER_NONE/- text/html
1581432557.219????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
error:invalid-request - HIER_NONE/- text/html
1581432557.326????? 0 10.5.8.17 TAG_NONE/400 4288?
%A8O%FBmW%E4%97%9E%7C%FC%C4 at T8S%BA3%19%C36%9E%9C%E5%CBt%1F%C3&.7%14%C2 -
HIER_NONE/- text/html
1581432557.433????? 0 10.5.8.17 TAG_NONE/400 4260?
?9a%AB%8E%ECh-w%1C%C3%5D%084x%0F*%1Efw%D7+%0ED%7D%92%94%06%DA%EC%BB; -
HIER_NONE/- text/html
1581432557.540????? 0 10.5.8.17 TAG_NONE/400 4298?
%C5%EA?%A6%11t.%DE%FC%%C8%82o%C0%F49%BCFX%C4%D0%EEbfb%01%A8%27Y%F8%DB%C4
- HIER_NONE/- text/html

when I do anything, something like:

> install.packages("sos")

Everything else on the box uses & works fine with that Squid. Could it
be be somehow "crooked" default R on that box which is Centos 8?

Or what else?

many thanks, L.




From pe|j@@z @end|ng |rom y@hoo@co@uk  Tue Feb 11 17:08:03 2020
From: pe|j@@z @end|ng |rom y@hoo@co@uk (lejeczek)
Date: Tue, 11 Feb 2020 16:08:03 +0000
Subject: [Rd] R with Squid proxy - invalid requests ??
In-Reply-To: <e25b904d-f06a-bd62-aae2-503abeecff9f@yahoo.co.uk>
References: <e25b904d-f06a-bd62-aae2-503abeecff9f.ref@yahoo.co.uk>
 <e25b904d-f06a-bd62-aae2-503abeecff9f@yahoo.co.uk>
Message-ID: <686d2b7e-2188-fdd1-696f-668a603a681d@yahoo.co.uk>

On 11/02/2020 14:54, lejeczek via R-devel wrote:
> dear devel,
>
> I thought you guys would know best - I have an R which fails to get
> communicate outside via a proxy, and Squid's logs show:
>
> ...
>
> 1581432434.501????? 0 10.5.8.17 TAG_NONE/400 4064? %C5/%B6* -
> HIER_NONE/- text/html
> 1581432497.231????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
> error:invalid-request - HIER_NONE/- text/html
> 1581432497.338????? 0 10.5.8.17 TAG_NONE/400 4300?
> %AC%9E%D0Rj%84%19%8D%23O%F9%E5%D4%E9%DBj%8D%F9x%C3:%FB-%02f%FBE%E5O%92c%9A
> - HIER_NONE/- text/html
> 1581432497.445????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
> error:invalid-request - HIER_NONE/- text/html
> 1581432497.552????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
> error:invalid-request - HIER_NONE/- text/html
> 1581432497.659????? 0 10.5.8.17 TAG_NONE/400 4320?
> Fi%E3@%04%D3%97o0%23%13%1B%C1%08%082%E8%A5%1B%DAh%F3%18%E1%DB%A1%1E%FET%01%DD
> - HIER_NONE/- text/html
> 1581432497.766????? 0 10.5.8.17 TAG_NONE/400 4452?
> %01%D4%F7%8AB%CA%AE%A5%D7.%BE%C4I%B5%D4%10c%0F%9D%9B%D9%C7%BA%15%FF%A2JO%B3%60%D0%86%B8lY%8F%97%B5%BC%15%C9
> - HIER_NONE/- text/html
> 1581432557.005????? 0 10.5.8.17 TAG_NONE/400 4346?
> %CC6%F3%CA%F4%90%F5%E0%9B%B47%C6%DB%83%89%E1%F4%F1=%08a%81%06KK%3C%B4%DAj%AC%B7
> - HIER_NONE/- text/html
> 1581432557.112????? 0 10.5.8.17 TAG_NONE/400 4320?
> %DE%D3%1B%89%1Et%94R%ECQ%ADd%04%8D=r%92%9AZ%5E%98%C4%1F%F9%9F%06%FF%AB%5E%BC%D7@
> - HIER_NONE/- text/html
> 1581432557.219????? 0 10.5.8.17 TAG_NONE/400 4570 NONE
> error:invalid-request - HIER_NONE/- text/html
> 1581432557.326????? 0 10.5.8.17 TAG_NONE/400 4288?
> %A8O%FBmW%E4%97%9E%7C%FC%C4 at T8S%BA3%19%C36%9E%9C%E5%CBt%1F%C3&.7%14%C2 -
> HIER_NONE/- text/html
> 1581432557.433????? 0 10.5.8.17 TAG_NONE/400 4260?
> ?9a%AB%8E%ECh-w%1C%C3%5D%084x%0F*%1Efw%D7+%0ED%7D%92%94%06%DA%EC%BB; -
> HIER_NONE/- text/html
> 1581432557.540????? 0 10.5.8.17 TAG_NONE/400 4298?
> %C5%EA?%A6%11t.%DE%FC%%C8%82o%C0%F49%BCFX%C4%D0%EEbfb%01%A8%27Y%F8%DB%C4
> - HIER_NONE/- text/html
>
> when I do anything, something like:
>
>> install.packages("sos")
> Everything else on the box uses & works fine with that Squid. Could it
> be be somehow "crooked" default R on that box which is Centos 8?
>
> Or what else?
>
> many thanks, L.
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

I think R+CURL is "crooked".


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Tue Feb 11 21:23:50 2020
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Tue, 11 Feb 2020 21:23:50 +0100
Subject: [Rd] Minor typo in recent commit
In-Reply-To: <CAJmOi+Pm1qW8+mshgVO48pLxkvtqBBSXqvGgadVaKNKB1Yq+1g@mail.gmail.com>
References: <CAJmOi+Pm1qW8+mshgVO48pLxkvtqBBSXqvGgadVaKNKB1Yq+1g@mail.gmail.com>
Message-ID: <24131.3414.976793.470798@hornik.net>

>>>>> Hugh Parsonage writes:

Thanks: fixed now.

Best
-k

> I believe should be February 2020 not 2010
> --- a/doc/manual/R-exts.texi
> +++ b/doc/manual/R-exts.texi
> @@ -2631,9 +2631,9 @@ not necessarily installed) on all known @R{}
> platforms.  As from @R{}
>  4.0.0 a C++ compiler will be selected only if it conforms to the 2011
>  standard (`C++11').  A minor update at footnote{The changes are linked from
>  @uref{https://isocpp.org/@/std/@/standing-documents/@/sd-6-sg10-feature-test-recommendations}.}

> -(`C++14') was published in December 2014.  The latest standard (`C++17')
> -was published in December 2017, and a further revision (`C++20') is in
> -preparation.
> +(`C++14') was published in December 2014.  A revision (`C++17') was
> +published in December 2017, and a further revision (`C++20', with many
> +new features) is scheduled for February 2010.

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m|kko@korpe|@ @end|ng |rom m@@nm|tt@u@|@|to@@||  Wed Feb 12 10:23:09 2020
From: m|kko@korpe|@ @end|ng |rom m@@nm|tt@u@|@|to@@|| (Korpela Mikko (MML))
Date: Wed, 12 Feb 2020 09:23:09 +0000
Subject: [Rd] PDF generation issue from manual page
Message-ID: <93b4497ff7c7428e854058b9e6ea76e3@C119S212VM022.msvyvi.vaha.local>

Hi Neonira!

The \blacktriangleright macro is defined in LaTeX package "amssymb". According to Writing R Extensions (section 2.6 Mathematics), "only basic LaTeX can be used, there being no provision to specify LaTeX style files such as the AMS extensions" (in Rd files).

Best,
- Mikko
 
-----Alkuper?inen viesti-----
L?hett?j?: R-devel <r-devel-bounces at r-project.org> Puolesta neonira Arinoem
L?hetetty: tiistai 11. helmikuuta 2020 15.57
Vastaanottaja: r-devel <r-devel at r-project.org>
Aihe: [Rd] PDF generation issue from manual page

Hi R gurus

Got an issue risen by CRAN about using unknown characters from Latex.

Here is the error message







*Check: PDF version of manual, Result: WARNING   LaTeX errors when creating
PDF version.   This typically indicates Rd problems.   LaTeX errors found:
  ! Undefined control sequence.   <recently read> \blacktriangleright *




*   l.237 STRATUM $\blacktriangleright
$ LAYER\_3   ! Undefined control sequence.   <recently read>
\blacktriangleright *




*   l.239 PHASING $\blacktriangleright
$ RUN   ! Undefined control sequence.   <recently read> \blacktriangleright
*

*   l.241 INTENT  $\blacktriangleright
$ FEEDBACK*

I understand that the \blacktriangleright is an unknown control sequence from latex ... and that sounds strange to me, as I uses it often in vignettes without any issue so far.

In the incriminated manual page, the code generating this sequence is the following
*\ifelse{latex}{\out{$\blacktriangleright$}}{\ifelse{html}{\out{&#x25B6;}}{\u25b6}}*

I am wondering what is wrong and how to circumvent such issue.
Yours ideas and hints welcome

Best.
Neonira

	[[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Thu Feb 13 11:10:58 2020
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Thu, 13 Feb 2020 10:10:58 +0000
Subject: [Rd] changed names from lm() in R-devel
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E01CC7BBA2D@MBXP01.ds.man.ac.uk>

In the last week or so lm() in R-devel (and Rpatched, see https://cran.rstudio.com/web/checks/check_results_pcts.html) started to produce different names for some interactions, compared to R-3.6.x. A full example is at the end of this email but the gist is that a term  
"TimeIndex:Season", where "Season" is a factor produces names like "TimeIndex:Season1", while R-devel changes the order of the names to "Season1:TimeIndex", etc. 

Is this change on purpose? 

Georgi Boshnakov

---

ex_fac    <- as.factor(rep(1:4, 10))
ex_fo     <- as.formula("x ~ -1 - Season  + TimeIndex:Season")
ex_data   <- data.frame(x = rnorm(40), Season = ex_fac, TimeIndex = 1:40)
lm(ex_fo, data = ex_data, na.action = na.exclude)

## R version 3.6.1 (2019-07-05) -- "Action of the Toes"
##
## Call:
## lm(formula = ex_fo, data = ex_data, na.action = na.exclude)
##
## Coefficients:
## TimeIndex:Season1  TimeIndex:Season2  TimeIndex:Season3  TimeIndex:Season4
##         0.0036876         -0.0033619          0.0211838         -0.0008042


## R Under development (unstable) (2020-02-12 r77798) -- "Unsuffered
Consequences"
##
## Call:
## lm(formula = ex_fo, data = ex_data, na.action = na.exclude)
##
## Coefficients:
## Season1:TimeIndex  Season2:TimeIndex  Season3:TimeIndex  Season4:TimeIndex
##          -0.01033            0.02900            0.01791            0.01596

