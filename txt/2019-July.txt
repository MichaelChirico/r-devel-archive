From @purd|e@@ @end|ng |rom gm@||@com  Mon Jul  1 00:35:40 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 1 Jul 2019 10:35:40 +1200
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
Message-ID: <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>

> First time posting in the R mailing lists so hopefully this works well.
> I noticed when I type `R CMD` I get this unhelpful message:
> /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many

I wasn't able to reproduce this.
Maybe it's a Linux thing.
But then, I suspect you've omitted some of your input.

> I also think it would be nice if `R CMD help` showed the usable commands.

What do you mean...
All of the following give you the "usable commands":

> R CMD
> R CMD -h
> R CMD --help

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Mon Jul  1 01:29:03 2019
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 1 Jul 2019 00:29:03 +0100
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
Message-ID: <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>

For the record, this is Linux R-devel:

root at 4bef68c16864:~# R CMD
/opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
root at 4bef68c16864:~# R CMD -h
/opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
root at 4bef68c16864:~# R CMD --help
/opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found

This is R-release on macOS:

? R CMD
/Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
/Library/Frameworks/R.framework/Resources/bin/: is a directory
/Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
/Library/Frameworks/R.framework/Resources/bin/: cannot execute:
Undefined error: 0
? R CMD -h
/Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
invalid option
exec: usage: exec [-cl] [-a name] file [redirection ...]
? R CMD --help
/Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
invalid option
exec: usage: exec [-cl] [-a name] file [redirection ...]

On Windows you indeed get a useful list of commands and more helpful tips.

Gabor


On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
>
> > First time posting in the R mailing lists so hopefully this works well.
> > I noticed when I type `R CMD` I get this unhelpful message:
> > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
>
> I wasn't able to reproduce this.
> Maybe it's a Linux thing.
> But then, I suspect you've omitted some of your input.
>
> > I also think it would be nice if `R CMD help` showed the usable commands.
>
> What do you mean...
> All of the following give you the "usable commands":
>
> > R CMD
> > R CMD -h
> > R CMD --help
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @purd|e@@ @end|ng |rom gm@||@com  Mon Jul  1 02:08:45 2019
From: @purd|e@@ @end|ng |rom gm@||@com (Abby Spurdle)
Date: Mon, 1 Jul 2019 12:08:45 +1200
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
Message-ID: <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>

In that case, I was wrong.
And I must apologize...

In saying that, good to see Windows out performing Linux on the command
line...


On Mon, Jul 1, 2019 at 11:30 AM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>
> For the record, this is Linux R-devel:
>
> root at 4bef68c16864:~# R CMD
> /opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
> root at 4bef68c16864:~# R CMD -h
> /opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
> root at 4bef68c16864:~# R CMD --help
> /opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found
>
> This is R-release on macOS:
>
> ? R CMD
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
> /Library/Frameworks/R.framework/Resources/bin/: is a directory
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
> /Library/Frameworks/R.framework/Resources/bin/: cannot execute:
> Undefined error: 0
> ? R CMD -h
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
> invalid option
> exec: usage: exec [-cl] [-a name] file [redirection ...]
> ? R CMD --help
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
> invalid option
> exec: usage: exec [-cl] [-a name] file [redirection ...]
>
> On Windows you indeed get a useful list of commands and more helpful tips.
>
> Gabor
>
>
> On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
> >
> > > First time posting in the R mailing lists so hopefully this works
well.
> > > I noticed when I type `R CMD` I get this unhelpful message:
> > > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
> >
> > I wasn't able to reproduce this.
> > Maybe it's a Linux thing.
> > But then, I suspect you've omitted some of your input.
> >
> > > I also think it would be nice if `R CMD help` showed the usable
commands.
> >
> > What do you mean...
> > All of the following give you the "usable commands":
> >
> > > R CMD
> > > R CMD -h
> > > R CMD --help
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Jul  1 02:21:31 2019
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 30 Jun 2019 20:21:31 -0400
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
 <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
Message-ID: <e51aeaea-e24c-8a5b-4780-bd0f89beab3e@gmail.com>

On 30/06/2019 8:08 p.m., Abby Spurdle wrote:
> In that case, I was wrong.
> And I must apologize...
> 
> In saying that, good to see Windows out performing Linux on the command
> line...

That's going to set the bees abuzz...


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Mon Jul  1 05:16:17 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sun, 30 Jun 2019 22:16:17 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
Message-ID: <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>



On 2019-06-30 06:58, Joshua Ulrich wrote:
<snip>

> I imported both packages into separate repositories:
> https://github.com/joshuaulrich/tmp-ecdat
> https://github.com/joshuaulrich/tmp-ecfun
>
> I changed your email address on your R-Forge commits to match your
> GitHub email address, so R-Forge commits would be associated with your
> GitHub account.  I also omitted the "move" commit from Ecdat, and the
> "obsolete > GitHub" commits from both packages.  I've attached a file
> with the commands I used, if anyone is interested.
>
> You can use my repos by cloning them to your local machine, adding
> your repos as new remotes, and pushing to them.  You would need to run
> these commands (untested):
>
> ### clone my GitHub repo to your machine
> git clone git at github.com:joshuaulrich/tmp-ecfun.git Ecdat


Thanks so much.? Sadly, I'm still having troubles.? This "git clone ..." 
generates:


Enter passphrase for key '/Users/sbgraves/.ssh/id_rsa':


 ????? Sadly, I don't know the passphrase it's looking for here, and I 
don't know how to find what it's looking for.? Under GitHub > Settings > 
"SSH and GPG keys", I see an SSH key dated two days ago, when I cloned 
Ecdat from within RStudio.? And in "~.ssh" I see files id_rsa and 
id_rsa.pub, both created two days ago.


 ????? What do you suggest I try to get past this?


 ????? Thanks again for all your help.


 ????? Spencer Graves

> cd Ecdat
> ### rename my GitHub repo remote from 'origin' to 'tmp'
> git remote rename origin tmp
> ### add your GitHub repo remote as 'origin'
> ### NOTE: this should be a new, clean repo.
> ###    Rename your existing 'Ecdat' so you don't overwrite it
> git remote add origin https://github.com/sbgraves237/Ecdat
> ### push to your GitHub repo
> git push -u origin master
>
> Then you need to run similar commands for Ecfun.
>
> Best,
> Josh
>
>>>         Thanks,
>>>         Spencer
>>>
>>>
>>> On 2019-06-29 14:09, Henrik Bengtsson wrote:
>>>> On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
>>>> <spencer.graves at prodsyse.com> wrote:
>>>>> Hi, Ott et al.:
>>>>>
>>>>>
>>>>>          What's the best way to get "Travis CI" to build and test the two
>>>>> packages, Ecdat and Ecfun, that have long been combined in the Ecdat
>>>>> project?
>>>>>
>>>>>
>>>>>          Following Ott's advice and studying studying Wickham's "R
>>>>> Packages" (http://r-pkgs.had.co.nz/), I was able to configure RStudio so
>>>>> it would sync using git with "GitHub.com/sbgraves237/Ecdat".  However,
>>>>> when I tried to configure "Travis CI", it said, "No DESCRIPTION file
>>>>> found, user must supply their own install and script steps".
>>>>>
>>>>>
>>>>>          Earlier in this thread, I think someone suggested I make the
>>>>> Ecdat and Ecfun packages separate projects on GitHub (though I can't
>>>>> find that suggestion now).  This would not be an issue if it were all
>>>>> local without version control.  With RStudio managing my interface with
>>>>> GitHub, it now seems quite tricky.
>>>> I'm 99.999% confident that your life will be much much easier if you
>>>> keep one R package per repository.  If you don't, you'll probably be
>>>> very lonely when it comes to tools etc.  There are built-in 'git'
>>>> commands, but also git utility tools, for extracting a subset of
>>>> folders/files from git repository into new git repositories.  You'll
>>>> still preserve the commit history.  I would deal with this in the
>>>> terminal, using the 'git' client and possible some extraction tool.
>>>>
>>>> Also, while you spend time on this, have a look at the commit
>>>> authorship that I mentioned previously.  It's nice to have that in
>>>> place later.
>>>>
>>>> After you got the above in place, then .travis.yml and appveyor.yml is
>>>> pretty straightforward (might even be a copy'n'paste).
>>>>
>>>> Finally, I saw you put your credentials in the URL when you cloned.  I
>>>> don't think that's safe, your GitHub credentials will be stored in the
>>>> ./.git/config file.  Instead, just clone with:
>>>>
>>>> git clone https://github.com/sbgraves237/Ecdat.git
>>>>
>>>> You can then configure git to cache your HTTPS credentials for a
>>>> certain time, e.g. 120 minutes, so you don't have to enter them each
>>>> time you pull/push.  See https://git-scm.com/docs/git-credential-cache
>>>> for details.  That's what I tell new-comers to Git(Hub|Lab|...) to
>>>> use.  Personally, I add my public SSH key to GitHub and then clone
>>>> with the ssh protocol:
>>>>
>>>> git clone git at github.com:sbgraves237/Ecdat.git
>>>>
>>>> That way my I never have to worry entering my credentials.
>>>>
>>>> /Henrik
>>>>
>>>>>          Suggestions?
>>>>>          Thanks again to all who have offered suggestions so far.  This
>>>>> migration from R-Forge to GitHub seems complete except for the automatic
>>>>> tests provided via "Travis CI".
>>>>>
>>>>>
>>>>>          Spencer
>>>>>
>>>>>
>>>>> On 2019-06-28 22:25, Ott Toomet wrote:
>>>>>> Apparently your username/password are wrong.  Can you clone/push from
>>>>>> other repos?
>>>>>>
>>>>>> You do not need authorization when cloning a public repo, so even
>>>>>> incorrect credentials may work (haven't tested this though).  But for
>>>>>> push you have to have that in order.
>>>>>>
>>>>>> I suggest you create ssh keys, upload those to GH, and use ssh
>>>>>> authorization instead of https.
>>>>>>
>>>>>> Cheers,
>>>>>> Ott
>>>>>>
>>>>>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
>>>>>> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
>>>>>>
>>>>>>       Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
>>>>>>
>>>>>>
>>>>>>              I created a local copy of the new GitHub version using the
>>>>>>       following:
>>>>>>
>>>>>>       git clone
>>>>>>       https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
>>>>>>
>>>>>>
>>>>>>
>>>>>>              That worked in the sense that I got a local copy. However,
>>>>>>       after
>>>>>>       I rolled the version number and did "git commit" on the DESCRIPTION
>>>>>>       files, my "git push" command generated the following:
>>>>>>
>>>>>>
>>>>>>       remote: Invalid username or password.
>>>>>>       fatal: Authentication failed for
>>>>>>       'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
>>>>>>
>>>>>>
>>>>>>              What am I missing?  [Note:  I used my actual GitHub
>>>>>>       password in
>>>>>>       place of "mypassword" here, and this "Authentication failed" message
>>>>>>       reported the GitHub password I used here.]
>>>>>>
>>>>>>
>>>>>>              Thanks,
>>>>>>              Spencer
>>>>>>
>>>>>>
>>>>>>       p.s.  I'm doing this under macOS Mojave 10.14.5.  Also,  I added
>>>>>>       ".onAttach" functions to the R-Forge versions as Brian G. Peterson
>>>>>>       suggested.  That seemed to work fine.
>>>>>>
>>>>>>
>>>>>>       On 2019-06-28 07:13, Duncan Murdoch wrote:
>>>>>>       > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
>>>>>>       >
>>>>>>       >> Instead, you can do as Duncan suggested, and put a README in your
>>>>>>       >> R-Forge
>>>>>>       >> repository, that points to *your* GitHub repositor(y/ies). Then the
>>>>>>       >> https://github.com/rforge/ecdat read only mirror will pick this up
>>>>>>       >> and will
>>>>>>       >> point there as well.
>>>>>>       >
>>>>>>       > Just for the record:  that was Henrik Singmann's suggestion, I just
>>>>>>       > agreed with it.
>>>>>>       >
>>>>>>       > Duncan Murdoch
>>>>>>       >
>>>>>>
>>>>>>
>>>>>>               [[alternative HTML version deleted]]
>>>>>>
>>>>>>       ______________________________________________
>>>>>>       R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>>>>>       https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>           [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>> --
>> Joshua Ulrich  |  about.me/joshuaulrich
>> FOSS Trading  |  www.fosstrading.com
>
>


From otoomet @end|ng |rom gm@||@com  Mon Jul  1 08:05:15 2019
From: otoomet @end|ng |rom gm@||@com (Ott Toomet)
Date: Sun, 30 Jun 2019 23:05:15 -0700
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <cb4218b1-7fcc-80cb-18ab-361b93a3177e@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
Message-ID: <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>

Apparently you created id_rsa key pair with a passphrase.  Passphrase is
like an additional password protection layer on your ssh key.  I don't know
how did you create it.  But you can always create a new one (you should
delete the old one before you create a new one) using the shell command
'ssh-keygen'.  It asks for a passphrase, just push enter for an empty
passphrase (twice).  You also have to update the ssh public key
(id_rsa.pub) on github by supplying the new public key (id_rsa.pub).

There are some implications you should be aware of:
* if you delete id_rsa*, you cannot use any ssh authorization that relies
on this key any more (that's why you have to update on GH).  From the what
you write (... created 2 days ago) I guess you do not use these keys
elsewhere but I may be wrong.
* if you supply empty passphrase, you bypass the optional extra security
layer.  I think this is OK for open source software development on your
personal computer but your preferences/situation may differ.
* You cannot use the same keys with passphrase if they are created without
one.  This is likely not an issue, but if it turns out to be a problem, you
can either add passphrase to the default keys, or create another set of
keys, passphrase protected.

Cheers,
Ott


On Sun, Jun 30, 2019 at 9:51 PM Spencer Graves <spencer.graves at prodsyse.com>
wrote:

>
>
> On 2019-06-30 06:58, Joshua Ulrich wrote:
> <snip>
>
> > I imported both packages into separate repositories:
> > https://github.com/joshuaulrich/tmp-ecdat
> > https://github.com/joshuaulrich/tmp-ecfun
> >
> > I changed your email address on your R-Forge commits to match your
> > GitHub email address, so R-Forge commits would be associated with your
> > GitHub account.  I also omitted the "move" commit from Ecdat, and the
> > "obsolete > GitHub" commits from both packages.  I've attached a file
> > with the commands I used, if anyone is interested.
> >
> > You can use my repos by cloning them to your local machine, adding
> > your repos as new remotes, and pushing to them.  You would need to run
> > these commands (untested):
> >
> > ### clone my GitHub repo to your machine
> > git clone git at github.com:joshuaulrich/tmp-ecfun.git Ecdat
>
>
> Thanks so much.  Sadly, I'm still having troubles.  This "git clone ..."
> generates:
>
>
> Enter passphrase for key '/Users/sbgraves/.ssh/id_rsa':
>
>
>        Sadly, I don't know the passphrase it's looking for here, and I
> don't know how to find what it's looking for.  Under GitHub > Settings >
> "SSH and GPG keys", I see an SSH key dated two days ago, when I cloned
> Ecdat from within RStudio.  And in "~.ssh" I see files id_rsa and
> id_rsa.pub, both created two days ago.
>
>
>        What do you suggest I try to get past this?
>
>
>        Thanks again for all your help.
>
>
>        Spencer Graves
>
> > cd Ecdat
> > ### rename my GitHub repo remote from 'origin' to 'tmp'
> > git remote rename origin tmp
> > ### add your GitHub repo remote as 'origin'
> > ### NOTE: this should be a new, clean repo.
> > ###    Rename your existing 'Ecdat' so you don't overwrite it
> > git remote add origin https://github.com/sbgraves237/Ecdat
> > ### push to your GitHub repo
> > git push -u origin master
> >
> > Then you need to run similar commands for Ecfun.
> >
> > Best,
> > Josh
> >
> >>>         Thanks,
> >>>         Spencer
> >>>
> >>>
> >>> On 2019-06-29 14:09, Henrik Bengtsson wrote:
> >>>> On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
> >>>> <spencer.graves at prodsyse.com> wrote:
> >>>>> Hi, Ott et al.:
> >>>>>
> >>>>>
> >>>>>          What's the best way to get "Travis CI" to build and test
> the two
> >>>>> packages, Ecdat and Ecfun, that have long been combined in the Ecdat
> >>>>> project?
> >>>>>
> >>>>>
> >>>>>          Following Ott's advice and studying studying Wickham's "R
> >>>>> Packages" (http://r-pkgs.had.co.nz/), I was able to configure
> RStudio so
> >>>>> it would sync using git with "GitHub.com/sbgraves237/Ecdat".
> However,
> >>>>> when I tried to configure "Travis CI", it said, "No DESCRIPTION file
> >>>>> found, user must supply their own install and script steps".
> >>>>>
> >>>>>
> >>>>>          Earlier in this thread, I think someone suggested I make the
> >>>>> Ecdat and Ecfun packages separate projects on GitHub (though I can't
> >>>>> find that suggestion now).  This would not be an issue if it were all
> >>>>> local without version control.  With RStudio managing my interface
> with
> >>>>> GitHub, it now seems quite tricky.
> >>>> I'm 99.999% confident that your life will be much much easier if you
> >>>> keep one R package per repository.  If you don't, you'll probably be
> >>>> very lonely when it comes to tools etc.  There are built-in 'git'
> >>>> commands, but also git utility tools, for extracting a subset of
> >>>> folders/files from git repository into new git repositories.  You'll
> >>>> still preserve the commit history.  I would deal with this in the
> >>>> terminal, using the 'git' client and possible some extraction tool.
> >>>>
> >>>> Also, while you spend time on this, have a look at the commit
> >>>> authorship that I mentioned previously.  It's nice to have that in
> >>>> place later.
> >>>>
> >>>> After you got the above in place, then .travis.yml and appveyor.yml is
> >>>> pretty straightforward (might even be a copy'n'paste).
> >>>>
> >>>> Finally, I saw you put your credentials in the URL when you cloned.  I
> >>>> don't think that's safe, your GitHub credentials will be stored in the
> >>>> ./.git/config file.  Instead, just clone with:
> >>>>
> >>>> git clone https://github.com/sbgraves237/Ecdat.git
> >>>>
> >>>> You can then configure git to cache your HTTPS credentials for a
> >>>> certain time, e.g. 120 minutes, so you don't have to enter them each
> >>>> time you pull/push.  See
> https://git-scm.com/docs/git-credential-cache
> >>>> for details.  That's what I tell new-comers to Git(Hub|Lab|...) to
> >>>> use.  Personally, I add my public SSH key to GitHub and then clone
> >>>> with the ssh protocol:
> >>>>
> >>>> git clone git at github.com:sbgraves237/Ecdat.git
> >>>>
> >>>> That way my I never have to worry entering my credentials.
> >>>>
> >>>> /Henrik
> >>>>
> >>>>>          Suggestions?
> >>>>>          Thanks again to all who have offered suggestions so far.
> This
> >>>>> migration from R-Forge to GitHub seems complete except for the
> automatic
> >>>>> tests provided via "Travis CI".
> >>>>>
> >>>>>
> >>>>>          Spencer
> >>>>>
> >>>>>
> >>>>> On 2019-06-28 22:25, Ott Toomet wrote:
> >>>>>> Apparently your username/password are wrong.  Can you clone/push
> from
> >>>>>> other repos?
> >>>>>>
> >>>>>> You do not need authorization when cloning a public repo, so even
> >>>>>> incorrect credentials may work (haven't tested this though).  But
> for
> >>>>>> push you have to have that in order.
> >>>>>>
> >>>>>> I suggest you create ssh keys, upload those to GH, and use ssh
> >>>>>> authorization instead of https.
> >>>>>>
> >>>>>> Cheers,
> >>>>>> Ott
> >>>>>>
> >>>>>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
> >>>>>> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>>
> wrote:
> >>>>>>
> >>>>>>       Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
> >>>>>>
> >>>>>>
> >>>>>>              I created a local copy of the new GitHub version using
> the
> >>>>>>       following:
> >>>>>>
> >>>>>>       git clone
> >>>>>>
> https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
> >>>>>>
> >>>>>>
> >>>>>>
> >>>>>>              That worked in the sense that I got a local copy.
> However,
> >>>>>>       after
> >>>>>>       I rolled the version number and did "git commit" on the
> DESCRIPTION
> >>>>>>       files, my "git push" command generated the following:
> >>>>>>
> >>>>>>
> >>>>>>       remote: Invalid username or password.
> >>>>>>       fatal: Authentication failed for
> >>>>>>       '
> https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
> >>>>>>
> >>>>>>
> >>>>>>              What am I missing?  [Note:  I used my actual GitHub
> >>>>>>       password in
> >>>>>>       place of "mypassword" here, and this "Authentication failed"
> message
> >>>>>>       reported the GitHub password I used here.]
> >>>>>>
> >>>>>>
> >>>>>>              Thanks,
> >>>>>>              Spencer
> >>>>>>
> >>>>>>
> >>>>>>       p.s.  I'm doing this under macOS Mojave 10.14.5.  Also,  I
> added
> >>>>>>       ".onAttach" functions to the R-Forge versions as Brian G.
> Peterson
> >>>>>>       suggested.  That seemed to work fine.
> >>>>>>
> >>>>>>
> >>>>>>       On 2019-06-28 07:13, Duncan Murdoch wrote:
> >>>>>>       > On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
> >>>>>>       >
> >>>>>>       >> Instead, you can do as Duncan suggested, and put a README
> in your
> >>>>>>       >> R-Forge
> >>>>>>       >> repository, that points to *your* GitHub repositor(y/ies).
> Then the
> >>>>>>       >> https://github.com/rforge/ecdat read only mirror will
> pick this up
> >>>>>>       >> and will
> >>>>>>       >> point there as well.
> >>>>>>       >
> >>>>>>       > Just for the record:  that was Henrik Singmann's
> suggestion, I just
> >>>>>>       > agreed with it.
> >>>>>>       >
> >>>>>>       > Duncan Murdoch
> >>>>>>       >
> >>>>>>
> >>>>>>
> >>>>>>               [[alternative HTML version deleted]]
> >>>>>>
> >>>>>>       ______________________________________________
> >>>>>>       R-devel at r-project.org <mailto:R-devel at r-project.org> mailing
> list
> >>>>>>       https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>>>>
> >>>>>           [[alternative HTML version deleted]]
> >>>>>
> >>>>> ______________________________________________
> >>>>> R-devel at r-project.org mailing list
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>> ______________________________________________
> >>> R-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >>
> >> --
> >> Joshua Ulrich  |  about.me/joshuaulrich
> >> FOSS Trading  |  www.fosstrading.com
> >
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From j@@onx98 @end|ng |rom gm@||@com  Mon Jul  1 02:09:19 2019
From: j@@onx98 @end|ng |rom gm@||@com (Jason Xu)
Date: Sun, 30 Jun 2019 20:09:19 -0400
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
Message-ID: <CAGPh-qOApct2AJ7AhyYxG6rAeRoaRtgrrMHUDzkJE+26dm_Nug@mail.gmail.com>

Yes I'm using R 3.4.4 on Ubuntu 18.04. I doubt the Windows version would
make use of a bash script.
I'm all for a more consistent interface. It puzzles me that a shell script
is used at all since that does not seem portable, especially for Windows
users.

To my surprise I discovered the R that's called from shell, usr/bin/R, is
actually just a shell script. The binary that's called seems to be
/usr/lib/R/bin/exec/R which is a tiny executable that then probably calls
something else.
In comparison the python called from shell, /usr/bin/python3.6, really is a
binary. I'm sure there's a good reason that R uses a shell wrapper script
but it's not like a C program can't parse arguments or set env vars.





On Sun, Jun 30, 2019 at 7:30 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> For the record, this is Linux R-devel:
>
> root at 4bef68c16864:~# R CMD
> /opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
> root at 4bef68c16864:~# R CMD -h
> /opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
> root at 4bef68c16864:~# R CMD --help
> /opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found
>
> This is R-release on macOS:
>
> ? R CMD
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
> /Library/Frameworks/R.framework/Resources/bin/: is a directory
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
> /Library/Frameworks/R.framework/Resources/bin/: cannot execute:
> Undefined error: 0
> ? R CMD -h
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
> invalid option
> exec: usage: exec [-cl] [-a name] file [redirection ...]
> ? R CMD --help
> /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
> invalid option
> exec: usage: exec [-cl] [-a name] file [redirection ...]
>
> On Windows you indeed get a useful list of commands and more helpful tips.
>
> Gabor
>
>
> On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
> >
> > > First time posting in the R mailing lists so hopefully this works well.
> > > I noticed when I type `R CMD` I get this unhelpful message:
> > > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
> >
> > I wasn't able to reproduce this.
> > Maybe it's a Linux thing.
> > But then, I suspect you've omitted some of your input.
> >
> > > I also think it would be nice if `R CMD help` showed the usable
> commands.
> >
> > What do you mean...
> > All of the following give you the "usable commands":
> >
> > > R CMD
> > > R CMD -h
> > > R CMD --help
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From j@@onx98 @end|ng |rom gm@||@com  Mon Jul  1 02:26:48 2019
From: j@@onx98 @end|ng |rom gm@||@com (Jason Xu)
Date: Sun, 30 Jun 2019 20:26:48 -0400
Subject: [Rd] Making R CMD nicer
In-Reply-To: <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
 <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
Message-ID: <CAGPh-qOfkiB-J7iK38asVyc0DNLTKwjuofP7ee6yyovQumXpmg@mail.gmail.com>

In my humble personal opinion, I try to avoid bash scripts longer than a
couple lines because I find the syntax so obtuse and unintuitive it's
difficult to maintain and write less buggy code. But that is mostly a
reflection of my personal inexperience.
I think the only time a bash script is really needed is for maximum
portability in systems _with bash_.
(I would use python for a wrapper in personal projects, given python comes
pre-installed on many linux systems and OS X, but I completely understand
not wanting to burden Windows users with an extra python dependency to
install.)





On Sun, Jun 30, 2019 at 8:08 PM Abby Spurdle <spurdle.a at gmail.com> wrote:

> In that case, I was wrong.
> And I must apologize...
>
> In saying that, good to see Windows out performing Linux on the command
> line...
>
>
> On Mon, Jul 1, 2019 at 11:30 AM G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> >
> > For the record, this is Linux R-devel:
> >
> > root at 4bef68c16864:~# R CMD
> > /opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
> > root at 4bef68c16864:~# R CMD -h
> > /opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
> > root at 4bef68c16864:~# R CMD --help
> > /opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found
> >
> > This is R-release on macOS:
> >
> > ? R CMD
> > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
> > /Library/Frameworks/R.framework/Resources/bin/: is a directory
> > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
> > /Library/Frameworks/R.framework/Resources/bin/: cannot execute:
> > Undefined error: 0
> > ? R CMD -h
> > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
> > invalid option
> > exec: usage: exec [-cl] [-a name] file [redirection ...]
> > ? R CMD --help
> > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
> > invalid option
> > exec: usage: exec [-cl] [-a name] file [redirection ...]
> >
> > On Windows you indeed get a useful list of commands and more helpful
> tips.
> >
> > Gabor
> >
> >
> > On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com>
> wrote:
> > >
> > > > First time posting in the R mailing lists so hopefully this works
> well.
> > > > I noticed when I type `R CMD` I get this unhelpful message:
> > > > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
> > >
> > > I wasn't able to reproduce this.
> > > Maybe it's a Linux thing.
> > > But then, I suspect you've omitted some of your input.
> > >
> > > > I also think it would be nice if `R CMD help` showed the usable
> commands.
> > >
> > > What do you mean...
> > > All of the following give you the "usable commands":
> > >
> > > > R CMD
> > > > R CMD -h
> > > > R CMD --help
> > >
> > >         [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Mon Jul  1 11:11:39 2019
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Mon, 1 Jul 2019 09:11:39 +0000
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E018F7206B3@MBXP02.ds.man.ac.uk>

I run checks with  R-devel rev. 76756 on several of my packages which use S4, with no ill effects. 

With the risk of not adding much, it seems that Martin's example, which I repeat below, suggests a crossover between several "signatures" involved here - the signature of the generic, the signature of the method (the argument for setMethod()), and the signature of the function object defining the method.

    >> r2 <- oligoFn(object=diag(2),          target=array(42))
    > Error in .local(object, target) :
    > argument "target" is missing, with no default
    >> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
    > Method Definition:

    > function (object, subset, target, value)
    > {
    > .local <- function (object, subset, target, value)
    > list(object = object, target = target)
    > .local(object, target)
    > }


a) .local() seems superfluous here, since the signature of the function object is identical to that of the generic.

b) "subset" is "missing" in the signature of the method but it is (legally, I believe) present in the function object. The call .local(object, target) would be appropriate if "subset" was missing also from the signature of the function object (the latter would be illegal here). Alternatively, it could be named, as in .local(object, target = target)  or maybe even 
.local(object, , target).

--
Georgi Boshnakov 

------------------------------
Date: Sat, 29 Jun 2019 22:44:49 +0200
From: Martin Maechler <maechler at stat.math.ethz.ch>
To: R-devel <r-devel at r-project.org>, Henrik Bengtsson
        <henrik.bengtsson at gmail.com>
Cc: Martin Maechler <maechler at stat.math.ethz.ch>
Subject: Re: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true
        error
Message-ID: <23831.52673.201433.320952 at stat.math.ethz.ch>
Content-Type: text/plain; charset="utf-8"

>>>>> Martin Maechler
>>>>>     on Sat, 29 Jun 2019 12:05:49 +0200 writes:

>>>>> Martin Maechler
>>>>>     on Sat, 29 Jun 2019 10:33:10 +0200 writes:

>>>>> peter dalgaard
>>>>>     on Fri, 28 Jun 2019 16:20:03 +0200 writes:

    >>> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >>> >
    >>> >>>>>> Henrik Bengtsson
    >>> >>>>>>    on Thu, 27 Jun 2019 16:00:39 -0700 writes:
    >>> >
    >>> >> Using:
    >>> >>
    >>> >> untrace(methods::conformMethod)
    >>> >> at <- c(12,4,3,2)
    >>> >> str(body(methods::conformMethod)[[at]])
    >>> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >>> >> cc <- 0L
    >>> >> trace(methods::conformMethod, tracer = quote({
    >>> >>  cc <<- cc + 1L
    >>> >>  print(cc)
    >>> >>  if (cc == 31) {  ## manually identified
    >>> >>    untrace(methods::conformMethod)
    >>> >>    trace(methods::conformMethod, at = list(at), tracer = quote({
    >>> >>      str(list(signature = signature, mnames = mnames, fnames = fnames))
    >>> >>      print(ls())
    >>> >>      try(str(list(omittedSig = omittedSig, signature = signature)))
    >>> >>    }))
    >>> >>  }
    >>> >> }))
    >>> >> loadNamespace("oligo")
    >>> >>
    >>> >> gives:
    >>> >>
    >>> >> Untracing function "conformMethod" in package "methods"
    >>> >> Tracing function "conformMethod" in package "methods"
    >>> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
    >>> >> step 12,4,3,2
    >>> >> List of 3
    >>> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
    >>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
    >>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
    >>> >> $ mnames   : chr [1:2] "object" "value"
    >>> >> $ fnames   : chr [1:4] "object" "subset" "target" "value"
    >>> >> [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
    >>> >> [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
    >>> >> [11] "sigNames"   "signature"
    >>> >> List of 2
    >>> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
    >>> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
    >>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
    >>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
    >>> >> Error in omittedSig && (signature[omittedSig] != "missing") :
    >>> >>  'length(x) = 4 > 1' in coercion to 'logical(1)'
    >>> >> Error: unable to load R code in package 'oligo'
    >>> >>
    >>> >
    >>> > Thank you, Henrik, nice piece of using trace() .. and the above
    >>> > is useful for solving the issue --  I can work with that.
    >>> >
    >>> > I'm  already pretty sure the wrong code starts with
    >>> >
    >>> >    omittedSig <- sigNames %in% fnames[omitted] # ....

    >> my  "pretty sure"  statement above has proven to be wrong ..

    >>> > -------------
    >>> >
    >>>
    >>> I think the intention must have been that the two "ANY" signatures should change to "missing".

    >> Definitely.

    >>> However, with the current logic that will not happen, because
    >>>
    >>> > c(F,T,T,F) &&  c(T,T)
    >>> [1] FALSE
    >>>
    >>> Henrik's non-fix would have resulted in
    >>>
    >>> > c(F,T,T,F) &  c(T,T)
    >>> [1] FALSE  TRUE  TRUE FALSE
    >>>
    >>> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
    >>>
    >>> Barring NA issues, I still think
    >>>
    >>> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
    >>>
    >>> should do the trick.

    >> yes, (most probably).  I've found a version of that which should
    >> be even easier to "read and understand", in  svn commit 76753 :

    >> svn diff -c 76753 src/library/methods/R/RMethodUtils.R

    >> --- src/library/methods/R/RMethodUtils.R (Revision 76752)
    >> +++ src/library/methods/R/RMethodUtils.R (Revision 76753)
    >> @@ -342,8 +342,7 @@
    >> gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
    >> call. = TRUE, domain = NA)
    >> }
    >> -    else if(!all(signature[omittedSig] == "missing")) {
    >> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
    >> +    else if(any(omittedSig <- omittedSig & signature != "missing")) {


    >> BTW:  I've marked this --- and the  runmed() seg.fault + na.action
    >> change ---  as something to be added to R 3.6.1 patched,  as I
    >> deemed I should obey the "code freeze" rule in both cases.

    >> Martin

    > Hmm... I think we got a 'Neverending Story' here -- because it
    > seems, both Peter and I were wrong in thinking that it's a good
    > idea to change "missing" to "ANY" here ...
    > ((or if that *was* correct, that needs to entail more changes
    > happening during setMethod(.) {conformMethod() is only called in
    > one place in our code base, namely from setMethod()} :

as a matter of fact, I've been brave for now, left the change to
conformMethod()  and started to fix the constructed .local()
calls which are created in  conformMethod()'s sibling,
which is rematchDefinition().

It seems that this builds e.g. Matrix {with its gazillion
setMethod()s} and that continues to run its own tests.  OTOH,
Matrix may not trigger the situations that are dealt with here
at all, as the signature() are rarely longer than three, and at
some point in time I had made long passes through the package in
order to "minimize" the .local() calls.

--> svn commit 76756  (in addition to 76753, mentioned earlier)
    now has rematchDefinition() changes

I would be positively surprised if (but can imagine that) this
had no affect on CRAN / Bioconductor packages.

Still, these two changes seem to achieve what both the comments
and the documentation of  conformMethod() and rematchDefinition()
suggest should happen.

Of course, I'd really be happy if people with S4 packages would
check them with an R-devel version with svn rev >=  76756
and report problems they see.
I do imagine effects, and would expect that bugs in current code
become visible where they had not done so previously.

Martin

    > I've started to explore the effects of the change using and
    > extending the tests/reg-tests-1d.R  example that I had just committed.

    > And the result is *not good* :

    > As we said above, the new code does replace all "ANY" by "missing" in the
    > signature, unless the "ANY" are at the end of the signature.

    > However, later methods package code producing the .local(.)
    > calls in the method definition (in cases where the signature of
    > the generic and the method do not match exactly) --- possibly
    > may have been tweaked later than the conformMethod() code ---
    > and the .local() calls they now produce

    > - work as intended for R <= 3.6.0 (and R 3.6.1 RC)
    > - fail to work for R-devel with the change :

    > See this (not a minimal rep.rex. but one building on Henrik's
    > oligo case and what's newly in  tests/reg-tests-1d.R ) :

    > -----------------------------------------------------------------------------

    > ## conformMethod()  "&& logic" bug, by Henrik Bengtsson on R-devel list, 2019-06-22
    > setClass("tilingFSet", slots = c(x = "numeric"))
    > if(!is.null(getGeneric("oligoFn"))) removeGeneric("oligoFn")
    > setGeneric("oligoFn",
    > function(object, subset, target, value) { standardGeneric("oligoFn") })
    > Sys.unsetenv("_R_CHECK_LENGTH_1_LOGIC2_") ## << added here, to compare with R 3.6.0, 3.5.3, ..
    > setMethod("oligoFn", signature(object = "tilingFSet", value="array"),     ## Method _ 1 _
    > function(object, value) { list(object=object, value=value) })
    > setMethod("oligoFn", signature(object = "matrix", target="array"),        ## Method _ 2 _
    > function(object, target) list(object=object, target=target))
    > setMethod("oligoFn", signature(object = "matrix", subset="integer"),      ## Method _ 3 _
    > function(object, subset) list(object=object, subset=subset))      #       (*no* Note: ANY at end)
    > setMethod("oligoFn", signature(object = "matrix"),                        ## Method _ 4 _
    > function(object) list(object=object))                             #       (*no* Note: ANY at end)
    > showMethods("oligoFn") # F.Y.I.:  in R 3.6.0 and earlier: contains "ANY" everywhere

    > ##-- Now, the following *DOES* work fine in R <= 3.6.0  but *no longer* in R-devel :
    > str(r1 <- oligoFn(object=new("tilingFSet"), value=array(2)))
    > str(r2 <- oligoFn(object=diag(2),          target=array(42)))
    > ## These 2 work fine in all versions of R: Here the "ANY" remain at the end:
    > str(r3 <- oligoFn(object=diag(2),          subset=1:3))
    > str(r4 <- oligoFn(object=diag(2)))

    > -----------------------------------------------------------------------------
    > The two errors in R-devel are actually quite user-confusing:

    >> r2 <- oligoFn(object=diag(2),          target=array(42))
    > Error in .local(object, target) :
    > argument "target" is missing, with no default
    >> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
    > Method Definition:

    > function (object, subset, target, value)
    > {
    > .local <- function (object, subset, target, value)
    > list(object = object, target = target)
    > .local(object, target)
    > }

    > Signatures:
    > object   subset    target  value
    > target  "matrix" "missing" "array" "ANY"
    > defined "matrix" "missing" "array" "ANY"
    >>


    > My conclusion:  There's something really wrong with what
    > conformMethod() has been *intended* to achieve and what it
    > "accidentally" did achieve in these cases: it never replaced
    > "ANY" by "missing" in all these cases *AND* that is what it
    > seems it should continue doing.

    > BTW: ?conformMethod  goes to a page with quite a few things,
    > relevantly containing

    > ?conformMethod?: If the formal arguments, ?mnames?, are not
    > identical to the formal arguments to the function, ?fnames?,
    > ?conformMethod? determines whether the signature and the two
    > sets of arguments conform, and returns the signature,
    > possibly extended.  The function name, ?f? is supplied for
    > error messages. The generic function, ?fdef?, supplies the
    > generic signature for matching purposes.

    > The method assignment conforms if method and generic function
    > have identical formal argument lists.  It can also conform if
    > the method omits some of the formal arguments of the function
    > but: (1) the non-omitted arguments are a subset of the
    > function arguments, appearing in the same order; (2) there
    > are no arguments to the method that are not arguments to the
    > function; and (3) the omitted formal arguments do not appear
    > as explicit classes in the signature.  A future extension
    > hopes to test also that the omitted arguments are not assumed
    > by being used as locally assigned names or function names in
    > the body of the method.

    > ---
    > It seems my commit to R-devel needs another change.
    > This has to wait for hours currently, though.

    > Martin

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jul  1 14:11:16 2019
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 1 Jul 2019 14:11:16 +0200
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true
In-Reply-To: <438D2EC9EAFE5946B2D5864670EA468E018F7206B3@MBXP02.ds.man.ac.uk>
References: <CAFDcVCQOWVr0p2e2HONOy9NvqPdpoAH=HPMOEP65K-N6UjhA2g@mail.gmail.com>
 <67D2E7FE-74E3-4379-B9FB-C4028AB808DF@gmail.com>
 <CAFDcVCTARMfrJRs-KiS5UiSo=SoU8+TgPh_KE+e-zFRR0eCSFQ@mail.gmail.com>
 <23824.41030.156424.792062@stat.math.ethz.ch>
 <CAFDcVCTq-Zc49t9HrdVQB4VHhOtuaoOmpGnx9JsAy+_esene3w@mail.gmail.com>
 <03ED7150-6BF7-4E6E-AD78-B6DFACE43A97@gmail.com>
 <6334E748-4121-41E7-9CD4-3F3B2278E8DC@gmail.com>
 <23828.56742.426539.104574@stat.math.ethz.ch>
 <CAFDcVCSoHT-GxRyw-bncfnbzbG19t9sUpvPnpg=Edz_j35DiFA@mail.gmail.com>
 <23830.7740.817555.22803@stat.math.ethz.ch>
 <B499F134-0795-42AD-9CDD-C639D3FD87A0@gmail.com>
 <23831.8774.109040.126892@stat.math.ethz.ch>
 <23831.14333.101371.604209@stat.math.ethz.ch>
 <438D2EC9EAFE5946B2D5864670EA468E018F7206B3@MBXP02.ds.man.ac.uk>
Message-ID: <23833.63588.823966.300544@stat.math.ethz.ch>

>>>>> Georgi Boshnakov 
>>>>>     on Mon, 1 Jul 2019 09:11:39 +0000 writes:

    > I run checks with R-devel rev. 76756 on several of my
    > packages which use S4, with no ill effects.  

Thank you, Georgi!

    > With the risk of not adding much, it seems that Martin's example, which
    > I repeat below, suggests a crossover between several
    > "signatures" involved here - the signature of the generic,
    > the signature of the method (the argument for setMethod()),
    > and the signature of the function object defining the method.

that's correct.

and the conformMethod() plus  rematchDefinition()  utility functions
have been created to deal with this problem "optimally" and consistently.

>>> r2 <- oligoFn(object=diag(2), target=array(42))
>>  Error in .local(object, target) :
>>      argument "target" is missing, with no default
>>> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
>>
>> Method Definition:
>
>> function (object, subset, target, value)
>> {
>>   .local <- function (object, subset, target, value)
>>                   list(object = object, target = target)
>>   .local(object, target)
>> }


    > a) .local() seems superfluous here, since the signature of
    > the function object is identical to that of the generic.

that's only true in the *result*ing method,
but not in how the method was defined (the following code was in
my post) :

 setMethod("oligoFn", signature(object = "matrix", target="array"),   ## Method _ 2 _
     function(object, target) list(object=object, target=target))

Here, function object has arguments  (object, target)   only


    > b) "subset" is "missing" in the signature of the method
    > but it is (legally, I believe) present in the function
    > object. The call .local(object, target) would be
    > appropriate if "subset" was missing also from the
    > signature of the function object (the latter would be
    > illegal here). Alternatively, it could be named, as in
    > .local(object, target = target) or maybe even
    > .local(object, , target).

    > --
    > Georgi Boshnakov


The 2nd patch I committed -- the one mostly to
rematchDefiniton() --  does exactly that:  It uses .local()
calls where those argument *are* named which should be named.
==> hence the above example works fine there.

Martin

    > ------------------------------
> Date: Sat, 29 Jun 2019 22:44:49 +0200
> From: Martin Maechler <maechler at stat.math.ethz.ch>
> To: R-devel <r-devel at r-project.org>, Henrik Bengtsson
>         <henrik.bengtsson at gmail.com>
> Cc: Martin Maechler <maechler at stat.math.ethz.ch>
> Subject: Re: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true
>         error
> Message-ID: <23831.52673.201433.320952 at stat.math.ethz.ch>
> Content-Type: text/plain; charset="utf-8"
> 
> >>>>> Martin Maechler
> >>>>>     on Sat, 29 Jun 2019 12:05:49 +0200 writes:
> 
> >>>>> Martin Maechler
> >>>>>     on Sat, 29 Jun 2019 10:33:10 +0200 writes:
> 
> >>>>> peter dalgaard
> >>>>>     on Fri, 28 Jun 2019 16:20:03 +0200 writes:
> 
 >>>> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
 >>>> >
 >>>> >>>>>> Henrik Bengtsson
 >>>> >>>>>>    on Thu, 27 Jun 2019 16:00:39 -0700 writes:
 >>>> >
 >>>> >> Using:
 >>>> >>
 >>>> >> untrace(methods::conformMethod)
 >>>> >> at <- c(12,4,3,2)
 >>>> >> str(body(methods::conformMethod)[[at]])
 >>>> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
 >>>> >> cc <- 0L
 >>>> >> trace(methods::conformMethod, tracer = quote({
 >>>> >>  cc <<- cc + 1L
 >>>> >>  print(cc)
 >>>> >>  if (cc == 31) {  ## manually identified
 >>>> >>    untrace(methods::conformMethod)
 >>>> >>    trace(methods::conformMethod, at = list(at), tracer = quote({
 >>>> >>      str(list(signature = signature, mnames = mnames, fnames = fnames))
 >>>> >>      print(ls())
 >>>> >>      try(str(list(omittedSig = omittedSig, signature = signature)))
 >>>> >>    }))
 >>>> >>  }
 >>>> >> }))
 >>>> >> loadNamespace("oligo")
 >>>> >>
 >>>> >> gives:
 >>>> >>
 >>>> >> Untracing function "conformMethod" in package "methods"
 >>>> >> Tracing function "conformMethod" in package "methods"
 >>>> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
 >>>> >> step 12,4,3,2
 >>>> >> List of 3
 >>>> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
 >>>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
 >>>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
 >>>> >> $ mnames   : chr [1:2] "object" "value"
 >>>> >> $ fnames   : chr [1:4] "object" "subset" "target" "value"
 >>>> >> [1] "f"          "fdef"       "fnames"     "fsig"       "imf"
 >>>> >> [6] "method"     "mnames"     "omitted"    "omittedSig" "sig0"
 >>>> >> [11] "sigNames"   "signature"
 >>>> >> List of 2
 >>>> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
 >>>> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
 >>>> >>  ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
 >>>> >>  ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
 >>>> >> Error in omittedSig && (signature[omittedSig] != "missing") :
 >>>> >>  'length(x) = 4 > 1' in coercion to 'logical(1)'
 >>>> >> Error: unable to load R code in package 'oligo'
 >>>> >>
 >>>> >
 >>>> > Thank you, Henrik, nice piece of using trace() .. and the above
 >>>> > is useful for solving the issue --  I can work with that.
 >>>> >
 >>>> > I'm  already pretty sure the wrong code starts with
 >>>> >
 >>>> >    omittedSig <- sigNames %in% fnames[omitted] # ....
> 
>     >> my  "pretty sure"  statement above has proven to be wrong ..
> 
 >>>> > -------------
 >>>> >
 >>>>
 >>>> I think the intention must have been that the two "ANY" signatures should change to "missing".
> 
>     >> Definitely.
> 
 >>>> However, with the current logic that will not happen, because
 >>>>
 >>>> > c(F,T,T,F) &&  c(T,T)
 >>>> [1] FALSE
 >>>>
 >>>> Henrik's non-fix would have resulted in
 >>>>
 >>>> > c(F,T,T,F) &  c(T,T)
 >>>> [1] FALSE  TRUE  TRUE FALSE
 >>>>
 >>>> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
 >>>>
 >>>> Barring NA issues, I still think
 >>>>
 >>>> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
 >>>>
 >>>> should do the trick.
> 
>     >> yes, (most probably).  I've found a version of that which should
>     >> be even easier to "read and understand", in  svn commit 76753 :
> 
>     >> svn diff -c 76753 src/library/methods/R/RMethodUtils.R
> 
>     >> --- src/library/methods/R/RMethodUtils.R (Revision 76752)
>     >> +++ src/library/methods/R/RMethodUtils.R (Revision 76753)
>     >> @@ -342,8 +342,7 @@
>     >> gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
>     >> call. = TRUE, domain = NA)
>     >> }
>     >> -    else if(!all(signature[omittedSig] == "missing")) {
>     >> -        omittedSig <- omittedSig && (signature[omittedSig] != "missing")
>     >> +    else if(any(omittedSig <- omittedSig & signature != "missing")) {
> 
> 
>     >> BTW:  I've marked this --- and the  runmed() seg.fault + na.action
>     >> change ---  as something to be added to R 3.6.1 patched,  as I
>     >> deemed I should obey the "code freeze" rule in both cases.
> 
>     >> Martin
> 
>     > Hmm... I think we got a 'Neverending Story' here -- because it
>     > seems, both Peter and I were wrong in thinking that it's a good
>     > idea to change "missing" to "ANY" here ...
>     > ((or if that *was* correct, that needs to entail more changes
>     > happening during setMethod(.) {conformMethod() is only called in
>     > one place in our code base, namely from setMethod()} :
> 
> as a matter of fact, I've been brave for now, left the change to
> conformMethod()  and started to fix the constructed .local()
> calls which are created in  conformMethod()'s sibling,
> which is rematchDefinition().
> 
> It seems that this builds e.g. Matrix {with its gazillion
> setMethod()s} and that continues to run its own tests.  OTOH,
> Matrix may not trigger the situations that are dealt with here
> at all, as the signature() are rarely longer than three, and at
> some point in time I had made long passes through the package in
> order to "minimize" the .local() calls.
> 
> --> svn commit 76756  (in addition to 76753, mentioned earlier)
>     now has rematchDefinition() changes
> 
> I would be positively surprised if (but can imagine that) this
> had no affect on CRAN / Bioconductor packages.
> 
> Still, these two changes seem to achieve what both the comments
> and the documentation of  conformMethod() and rematchDefinition()
> suggest should happen.
> 
> Of course, I'd really be happy if people with S4 packages would
> check them with an R-devel version with svn rev >=  76756
> and report problems they see.
> I do imagine effects, and would expect that bugs in current code
> become visible where they had not done so previously.
> 
> Martin
> 
>     > I've started to explore the effects of the change using and
>     > extending the tests/reg-tests-1d.R  example that I had just committed.
> 
>     > And the result is *not good* :
> 
>     > As we said above, the new code does replace all "ANY" by "missing" in the
>     > signature, unless the "ANY" are at the end of the signature.
> 
>     > However, later methods package code producing the .local(.)
>     > calls in the method definition (in cases where the signature of
>     > the generic and the method do not match exactly) --- possibly
>     > may have been tweaked later than the conformMethod() code ---
>     > and the .local() calls they now produce
> 
>     > - work as intended for R <= 3.6.0 (and R 3.6.1 RC)
>     > - fail to work for R-devel with the change :
> 
>     > See this (not a minimal rep.rex. but one building on Henrik's
>     > oligo case and what's newly in  tests/reg-tests-1d.R ) :
> 
>     > -----------------------------------------------------------------------------
> 
>     > ## conformMethod()  "&& logic" bug, by Henrik Bengtsson on R-devel list, 2019-06-22
>     > setClass("tilingFSet", slots = c(x = "numeric"))
>     > if(!is.null(getGeneric("oligoFn"))) removeGeneric("oligoFn")
>     > setGeneric("oligoFn",
>     > function(object, subset, target, value) { standardGeneric("oligoFn") })
>     > Sys.unsetenv("_R_CHECK_LENGTH_1_LOGIC2_") ## << added here, to compare with R 3.6.0, 3.5.3, ..
>     > setMethod("oligoFn", signature(object = "tilingFSet", value="array"),     ## Method _ 1 _
>     > function(object, value) { list(object=object, value=value) })
>     > setMethod("oligoFn", signature(object = "matrix", target="array"),        ## Method _ 2 _
>     > function(object, target) list(object=object, target=target))
>     > setMethod("oligoFn", signature(object = "matrix", subset="integer"),      ## Method _ 3 _
>     > function(object, subset) list(object=object, subset=subset))      #       (*no* Note: ANY at end)
>     > setMethod("oligoFn", signature(object = "matrix"),                        ## Method _ 4 _
>     > function(object) list(object=object))                             #       (*no* Note: ANY at end)
>     > showMethods("oligoFn") # F.Y.I.:  in R 3.6.0 and earlier: contains "ANY" everywhere
> 
>     > ##-- Now, the following *DOES* work fine in R <= 3.6.0  but *no longer* in R-devel :
>     > str(r1 <- oligoFn(object=new("tilingFSet"), value=array(2)))
>     > str(r2 <- oligoFn(object=diag(2),          target=array(42)))
>     > ## These 2 work fine in all versions of R: Here the "ANY" remain at the end:
>     > str(r3 <- oligoFn(object=diag(2),          subset=1:3))
>     > str(r4 <- oligoFn(object=diag(2)))
> 
>     > -----------------------------------------------------------------------------
>     > The two errors in R-devel are actually quite user-confusing:
> 
>     >> r2 <- oligoFn(object=diag(2),          target=array(42))
>     > Error in .local(object, target) :
>     > argument "target" is missing, with no default
>     >> getMethod("oligoFn", signature(object="matrix", subset="missing", target="array"))
>     > Method Definition:
> 
>     > function (object, subset, target, value)
>     > {
>     > .local <- function (object, subset, target, value)
>     > list(object = object, target = target)
>     > .local(object, target)
>     > }
> 
>     > Signatures:
>     > object   subset    target  value
>     > target  "matrix" "missing" "array" "ANY"
>     > defined "matrix" "missing" "array" "ANY"
>     >>
> 
> 
>     > My conclusion:  There's something really wrong with what
>     > conformMethod() has been *intended* to achieve and what it
>     > "accidentally" did achieve in these cases: it never replaced
>     > "ANY" by "missing" in all these cases *AND* that is what it
>     > seems it should continue doing.
> 
>     > BTW: ?conformMethod  goes to a page with quite a few things,
>     > relevantly containing
> 
>     > ?conformMethod?: If the formal arguments, ?mnames?, are not
>     > identical to the formal arguments to the function, ?fnames?,
>     > ?conformMethod? determines whether the signature and the two
>     > sets of arguments conform, and returns the signature,
>     > possibly extended.  The function name, ?f? is supplied for
>     > error messages. The generic function, ?fdef?, supplies the
>     > generic signature for matching purposes.
> 
>     > The method assignment conforms if method and generic function
>     > have identical formal argument lists.  It can also conform if
>     > the method omits some of the formal arguments of the function
>     > but: (1) the non-omitted arguments are a subset of the
>     > function arguments, appearing in the same order; (2) there
>     > are no arguments to the method that are not arguments to the
>     > function; and (3) the omitted formal arguments do not appear
>     > as explicit classes in the signature.  A future extension
>     > hopes to test also that the omitted arguments are not assumed
>     > by being used as locally assigned names or function names in
>     > the body of the method.
> 
>     > ---
>     > It seems my commit to R-devel needs another change.
>     > This has to wait for hours currently, though.
> 
>     > Martin
> 
>     > ______________________________________________
>     > R-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-devel


From b@row||ng@on @end|ng |rom |@nc@@ter@@c@uk  Mon Jul  1 14:11:51 2019
From: b@row||ng@on @end|ng |rom |@nc@@ter@@c@uk (Barry Rowlingson)
Date: Mon, 1 Jul 2019 13:11:51 +0100
Subject: [Rd] Making R CMD nicer
In-Reply-To: <10fa7a57a775472883147fcb335e5f23@LNXP265MB0395.GBRP265.PROD.OUTLOOK.COM>
References: <CAGPh-qOZsZz7CPtquXFijQzUwybXjWrTXZFuGYm0G1T_i6VR5Q@mail.gmail.com>
 <CAB8pepyrM+BF8WOFNDSuz4bAMRic5PaRTuO--wRcOwdj5_4MMg@mail.gmail.com>
 <CABtg=K=kKUVgDvWbg-nngZYZGTd7zMZ9CD66bZrtcFNJEJ=x6Q@mail.gmail.com>
 <CAB8pepwpeVpD6iT8LpzcjeW_poCyoZQM7qBWWG3s+1x_4gpjgg@mail.gmail.com>
 <10fa7a57a775472883147fcb335e5f23@LNXP265MB0395.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <CANVKczOWzJ-LGuspFwpzw-Y2wvvxr1JcHdBsVdHTxr7RTLn+BQ@mail.gmail.com>

If you write a lot of R code to run as command line scripts then look at
Dirk E's "littler":

$ r --help

Usage: r [options] [-|file]

Launch GNU R to execute the R commands supplied in the specified file, or
from stdin if '-' is used. Suitable for so-called shebang '#!/'-line
scripts.

Options:
  -h, --help           Give this help list
      --usage          Give a short usage message
  -V, --version        Show the version number
  -v, --vanilla        Pass the '--vanilla' option to R
  -t, --rtemp          Use per-session temporary directory as R does
  -i, --interactive    Let interactive() return 'true' rather than 'false'
  -q, --quick          Skip autoload / delayed assign of default libraries
  -p, --verbose        Print the value of expressions to the console
  -l, --packages list  Load the R packages from the comma-separated 'list'
  -d, --datastdin      Prepend command to load 'X' as csv from stdin
  -L, --libpath dir    Add directory to library path via '.libPaths(dir)'
  -e, --eval expr      Let R evaluate 'expr'

available from an archive near you...


On Mon, Jul 1, 2019 at 8:58 AM Jason Xu <jasonx98 at gmail.com> wrote:

> In my humble personal opinion, I try to avoid bash scripts longer than a
> couple lines because I find the syntax so obtuse and unintuitive it's
> difficult to maintain and write less buggy code. But that is mostly a
> reflection of my personal inexperience.
> I think the only time a bash script is really needed is for maximum
> portability in systems _with bash_.
> (I would use python for a wrapper in personal projects, given python comes
> pre-installed on many linux systems and OS X, but I completely understand
> not wanting to burden Windows users with an extra python dependency to
> install.)
>
>
>
>
>
> On Sun, Jun 30, 2019 at 8:08 PM Abby Spurdle <spurdle.a at gmail.com> wrote:
>
> > In that case, I was wrong.
> > And I must apologize...
> >
> > In saying that, good to see Windows out performing Linux on the command
> > line...
> >
> >
> > On Mon, Jul 1, 2019 at 11:30 AM G?bor Cs?rdi <csardi.gabor at gmail.com>
> > wrote:
> > >
> > > For the record, this is Linux R-devel:
> > >
> > > root at 4bef68c16864:~# R CMD
> > > /opt/R-devel/lib/R/bin/Rcmd: 60: shift: can't shift that many
> > > root at 4bef68c16864:~# R CMD -h
> > > /opt/R-devel/lib/R/bin/Rcmd: 62: exec: -h: not found
> > > root at 4bef68c16864:~# R CMD --help
> > > /opt/R-devel/lib/R/bin/Rcmd: 62: exec: --help: not found
> > >
> > > This is R-release on macOS:
> > >
> > > ? R CMD
> > > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62:
> > > /Library/Frameworks/R.framework/Resources/bin/: is a directory
> > > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec:
> > > /Library/Frameworks/R.framework/Resources/bin/: cannot execute:
> > > Undefined error: 0
> > > ? R CMD -h
> > > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: -h:
> > > invalid option
> > > exec: usage: exec [-cl] [-a name] file [redirection ...]
> > > ? R CMD --help
> > > /Library/Frameworks/R.framework/Resources/bin/Rcmd: line 62: exec: --:
> > > invalid option
> > > exec: usage: exec [-cl] [-a name] file [redirection ...]
> > >
> > > On Windows you indeed get a useful list of commands and more helpful
> > tips.
> > >
> > > Gabor
> > >
> > >
> > > On Sun, Jun 30, 2019 at 11:36 PM Abby Spurdle <spurdle.a at gmail.com>
> > wrote:
> > > >
> > > > > First time posting in the R mailing lists so hopefully this works
> > well.
> > > > > I noticed when I type `R CMD` I get this unhelpful message:
> > > > > /usr/lib/R/bin/Rcmd: 60: shift: can't shift that many
> > > >
> > > > I wasn't able to reproduce this.
> > > > Maybe it's a Linux thing.
> > > > But then, I suspect you've omitted some of your input.
> > > >
> > > > > I also think it would be nice if `R CMD help` showed the usable
> > commands.
> > > >
> > > > What do you mean...
> > > > All of the following give you the "usable commands":
> > > >
> > > > > R CMD
> > > > > R CMD -h
> > > > > R CMD --help
> > > >
> > > >         [[alternative HTML version deleted]]
> > > >
> > > > ______________________________________________
> > > > R-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From therne@u @end|ng |rom m@yo@edu  Mon Jul  1 16:55:24 2019
From: therne@u @end|ng |rom m@yo@edu (Therneau, Terry M., Ph.D.)
Date: Mon, 01 Jul 2019 09:55:24 -0500
Subject: [Rd] ASAN error with R-devel
Message-ID: <8fb769$bvkt9j@ironport10.mayo.edu>

I have an ASAN enabled version of R-devel on my test machine, and can get it to relably 
crash.? Here is the first part of the session:

tmt-local2434% R --vanilla

R Under development (unstable) (2019-06-28 r76752) -- "Unsuffered Consequences"
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

 ? Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.
 > install.packages('kinship2')
Installing package into ?/home/therneau/Rlib?
(as ?lib? is unspecified)
--- Please select a CRAN mirror for use in this session ---
=================================================================
==21606==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000042830 at pc 
0x7f9f834fa0f7 bp 0x7fff24ab9050 sp 0x7fff24ab87f8
READ of size 1 at 0x602000042830 thread T0
 ??? #0 0x7f9f834fa0f6 (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5a0f6)
 ??? #1 0x7f787837d683 in _XimUnRegisterIMInstantiateCallback 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x64683)
 ??? #2 0x7f7878364d32 in XUnregisterIMInstantiateCallback 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x4bd32)
 ??? #3 0x7f787837d566 in _XimRegisterIMInstantiateCallback 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x64566)
 ??? #4 0x7f7878364cba in XRegisterIMInstantiateCallback 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x4bcba)
 ??? #5 0x7f78745cddfb in TkpOpenDisplay (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0xf2dfb)
 ??? #6 0x7f787453c769 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x61769)
 ??? #7 0x7f787453d0ab in TkCreateMainWindow (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x620ab)
 ??? #8 0x7f7874548cc6 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x6dcc6)
 ??? #9 0x7f7874546c7a (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x6bc7a)
 ??? #10 0x7f787453f6c4 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x646c4)
 ??? #11 0x7f7874bf0c0b in tcltk_init /usr/local/src/R-devel/src/library/tcltk/src/tcltk.c:697
 ??? #12 0x5582e3aa93c1 in do_dotCode /usr/local/src/R-devel/src/main/dotcode.c:1743
 ??? #13 0x5582e3b41f79 in bcEval /usr/local/src/R-devel/src/main/eval.c:6775
 ??? #14 0x5582e3b6a5df in Rf_eval /usr/local/src/R-devel/src/main/eval.c:620
 ??? #15 0x5582e3b702b9 in R_execClosure /usr/local/src/R-devel/src/main/eval.c:1780
 ??? #16 0x5582e3b72777 in Rf_applyClosure /usr/local/src/R-devel/src/main/eval.c:1706
 ??? #17 0x5582e3b4ab0a in bcEval /usr/local/src/R-devel/src/main/eval.c:6743
 ??? #18 0x5582e3b6a5df in Rf_eval /usr/local/src/R-devel/src/main/eval.c:620
 ??? #19 0x5582e3b6c55e in forcePromise /usr/local/src/R-devel/src/main/eval.c:516
 ??? #20 0x5582e3b6d22f in FORCE_PROMISE /usr/local/src/R-devel/src/main/eval.c:4900
 ?...
 ??? #133 0x7f788f5e6b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
 ??? #134 0x5582e392b999 in _start (/usr/local/src/R-devel/bin/exec/R+0x135999)

0x602000055af0 is located 0 bytes inside of 1-byte region [0x602000055af0,0x602000055af1)
freed by thread T0 here:
 ??? #0 0x7f7891a157b8 in __interceptor_free (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xde7b8)
 ??? #1 0x7f7878373d8c in XSetLocaleModifiers (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x5ad8c)

previously allocated by thread T0 here:
 ??? #0 0x7f7891a15b50 in __interceptor_malloc 
(/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeb50)
 ??? #1 0x7f7878373984 in _XlcDefaultMapModifiers 
(/usr/lib/x86_64-linux-gnu/libX11.so.6+0x5a984)

SUMMARY: AddressSanitizer: heap-use-after-free 
(/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5a0f6)

------------------------------
The window with a choice of machines never appeared.

Terry T.




	[[alternative HTML version deleted]]


From jenny@|@bry@n @end|ng |rom gm@||@com  Tue Jul  2 04:26:42 2019
From: jenny@|@bry@n @end|ng |rom gm@||@com (Jennifer Bryan)
Date: Mon, 1 Jul 2019 19:26:42 -0700
Subject: [Rd] eliminate a partial argument match warning in R CMD check
Message-ID: <CANe9BHE9RWCjc-e=BZH7-ow3oWMeS-HeobhEJDN_O-J0g5cenw@mail.gmail.com>

Hello,

I'm seeing a nuisance warning when I run `R CMD check --as-cran
whatever_x.y.z.tar.gz`.

I generally work with these options set:

options(
  warnPartialMatchArgs = TRUE,
  warnPartialMatchAttr = TRUE,
  warnPartialMatchDollar = TRUE
)

And I see this:

* checking use of SHLIB_OPENMP_*FLAGS in Makefiles ...Warning in dir("src",
patt = "[.]c$") :
  partial argument match of 'patt' to 'pattern'
Warning in dir("src", patt = "[.](cc|cpp)$") :
  partial argument match of 'patt' to 'pattern'
Warning in dir("src", patt = "[.]f$") :
  partial argument match of 'patt' to 'pattern'
Warning in dir("src", patt = "[.]f9[05]$") :
  partial argument match of 'patt' to 'pattern'

It's not a big deal but it would be nice to silence it. Patch below.

Thanks,
Jenny

diff --git a/src/library/tools/R/check.R b/src/library/tools/R/check.R

index 21d192af485..199029bda73 100644
--- a/src/library/tools/R/check.R
+++ b/src/library/tools/R/check.R
@@ -2933,10 +2933,10 @@ add_dummies <- function(dir, Log)
             any <- msg <- character()
             for (m in makefiles) {
                 lines <- readLines(m, warn = FALSE)
-                have_c <- length(dir('src', patt = "[.]c$", recursive
= TRUE)) > 0L
-                have_cxx <- length(dir('src', patt = "[.](cc|cpp)$",
recursive = TRUE)) > 0L
-                have_f <- length(dir('src', patt = "[.]f$", recursive
= TRUE)) > 0L
-                have_f9x <- length(dir('src', patt = "[.]f9[05]$",
recursive = TRUE)) > 0L
+                have_c <- length(dir('src', pattern = "[.]c$",
recursive = TRUE)) > 0L
+                have_cxx <- length(dir('src', pattern =
"[.](cc|cpp)$", recursive = TRUE)) > 0L
+                have_f <- length(dir('src', pattern = "[.]f$",
recursive = TRUE)) > 0L
+                have_f9x <- length(dir('src', pattern = "[.]f9[05]$",
recursive = TRUE)) > 0L
                 for (f in c("C", "CXX", "F", "FC", "CPP"))  {
                     this <- paste0(f, "FLAGS")
                     this2 <- paste0("PKG_", this)

	[[alternative HTML version deleted]]


From m@r||n- @end|ng |rom gmx@cn  Tue Jul  2 07:35:54 2019
From: m@r||n- @end|ng |rom gmx@cn (Jialin Ma)
Date: Mon, 01 Jul 2019 22:35:54 -0700
Subject: [Rd] Format printing inside a matrix
Message-ID: <3279306.Pz8kNGSOn8@plastic>

Hi everyone,

I am not sure if there is an existing solution to this, but I want my S4
objects inside a list matrix showing correctly. Currently it shows as:

R> str(lst[[1]])
Formal class 'Basic' [package "symengine"] with 1 slot
  ..@ ptr:<externalptr>
R> matrix(lst, 2)
     [,1] [,2] [,3] [,4] [,5]
[1,] ?    ?    ?    ?    ?
[2,] ?    ?    ?    ?    ?

Is it possible that the print method for matrix can call some type of generic
such as `as.character` or `format` when it encounters such cases? Or is there
any other place that I can override without introducing a new S3 class?

Thanks!
Jialin Ma


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Tue Jul  2 08:32:23 2019
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Tue, 2 Jul 2019 08:32:23 +0200
Subject: [Rd] eliminate a partial argument match warning in R CMD check
In-Reply-To: <CANe9BHE9RWCjc-e=BZH7-ow3oWMeS-HeobhEJDN_O-J0g5cenw@mail.gmail.com>
References: <CANe9BHE9RWCjc-e=BZH7-ow3oWMeS-HeobhEJDN_O-J0g5cenw@mail.gmail.com>
Message-ID: <23834.64119.702506.122370@hornik.net>

>>>>> Jennifer Bryan writes:

Thanks: fixed with c76763 in the trunk.

Best
-k

> Hello,
> I'm seeing a nuisance warning when I run `R CMD check --as-cran
> whatever_x.y.z.tar.gz`.

> I generally work with these options set:

> options(
>   warnPartialMatchArgs = TRUE,
>   warnPartialMatchAttr = TRUE,
>   warnPartialMatchDollar = TRUE
> )

> And I see this:

> * checking use of SHLIB_OPENMP_*FLAGS in Makefiles ...Warning in dir("src",
> patt = "[.]c$") :
>   partial argument match of 'patt' to 'pattern'
> Warning in dir("src", patt = "[.](cc|cpp)$") :
>   partial argument match of 'patt' to 'pattern'
> Warning in dir("src", patt = "[.]f$") :
>   partial argument match of 'patt' to 'pattern'
> Warning in dir("src", patt = "[.]f9[05]$") :
>   partial argument match of 'patt' to 'pattern'

> It's not a big deal but it would be nice to silence it. Patch below.

> Thanks,
> Jenny

> diff --git a/src/library/tools/R/check.R b/src/library/tools/R/check.R

> index 21d192af485..199029bda73 100644
> --- a/src/library/tools/R/check.R
> +++ b/src/library/tools/R/check.R
> @@ -2933,10 +2933,10 @@ add_dummies <- function(dir, Log)
>              any <- msg <- character()
>              for (m in makefiles) {
>                  lines <- readLines(m, warn = FALSE)
> -                have_c <- length(dir('src', patt = "[.]c$", recursive
> = TRUE)) > 0L
> -                have_cxx <- length(dir('src', patt = "[.](cc|cpp)$",
> recursive = TRUE)) > 0L
> -                have_f <- length(dir('src', patt = "[.]f$", recursive
> = TRUE)) > 0L
> -                have_f9x <- length(dir('src', patt = "[.]f9[05]$",
> recursive = TRUE)) > 0L
> +                have_c <- length(dir('src', pattern = "[.]c$",
> recursive = TRUE)) > 0L
> +                have_cxx <- length(dir('src', pattern =
> "[.](cc|cpp)$", recursive = TRUE)) > 0L
> +                have_f <- length(dir('src', pattern = "[.]f$",
> recursive = TRUE)) > 0L
> +                have_f9x <- length(dir('src', pattern = "[.]f9[05]$",
> recursive = TRUE)) > 0L
>                  for (f in c("C", "CXX", "F", "FC", "CPP"))  {
>                      this <- paste0(f, "FLAGS")
>                      this2 <- paste0("PKG_", this)

> 	[[alternative HTML version deleted]]

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Tue Jul  2 09:15:59 2019
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Tue, 2 Jul 2019 08:15:59 +0100
Subject: [Rd] ASAN error with R-devel
In-Reply-To: <8fb769$bvkt9j@ironport10.mayo.edu>
References: <8fb769$bvkt9j@ironport10.mayo.edu>
Message-ID: <207a0404-580d-14c0-c6a8-1c0ed2b50f7d@stats.ox.ac.uk>

This is entirely within your OS's installation of Tcl/Tk and X11: the 
latter both allocated and freed.  We've seen it before (even had it as 
bug report on R). Please check your OS is fully up-to-date and if so 
report it there.

On 01/07/2019 15:55, Therneau, Terry M., Ph.D. via R-devel wrote:
> I have an ASAN enabled version of R-devel on my test machine, and can get it to relably
> crash.? Here is the first part of the session:
> 
> tmt-local2434% R --vanilla
> 
> R Under development (unstable) (2019-06-28 r76752) -- "Unsuffered Consequences"
> Platform: x86_64-pc-linux-gnu (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
>   ? Natural language support but running in an English locale
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>   > install.packages('kinship2')
> Installing package into ?/home/therneau/Rlib?
> (as ?lib? is unspecified)
> --- Please select a CRAN mirror for use in this session ---
> =================================================================
> ==21606==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000042830 at pc
> 0x7f9f834fa0f7 bp 0x7fff24ab9050 sp 0x7fff24ab87f8
> READ of size 1 at 0x602000042830 thread T0
>   ??? #0 0x7f9f834fa0f6 (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5a0f6)
>   ??? #1 0x7f787837d683 in _XimUnRegisterIMInstantiateCallback
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x64683)
>   ??? #2 0x7f7878364d32 in XUnregisterIMInstantiateCallback
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x4bd32)
>   ??? #3 0x7f787837d566 in _XimRegisterIMInstantiateCallback
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x64566)
>   ??? #4 0x7f7878364cba in XRegisterIMInstantiateCallback
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x4bcba)
>   ??? #5 0x7f78745cddfb in TkpOpenDisplay (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0xf2dfb)
>   ??? #6 0x7f787453c769 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x61769)
>   ??? #7 0x7f787453d0ab in TkCreateMainWindow (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x620ab)
>   ??? #8 0x7f7874548cc6 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x6dcc6)
>   ??? #9 0x7f7874546c7a (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x6bc7a)
>   ??? #10 0x7f787453f6c4 (/usr/lib/x86_64-linux-gnu/libtk8.6.so+0x646c4)
>   ??? #11 0x7f7874bf0c0b in tcltk_init /usr/local/src/R-devel/src/library/tcltk/src/tcltk.c:697
>   ??? #12 0x5582e3aa93c1 in do_dotCode /usr/local/src/R-devel/src/main/dotcode.c:1743
>   ??? #13 0x5582e3b41f79 in bcEval /usr/local/src/R-devel/src/main/eval.c:6775
>   ??? #14 0x5582e3b6a5df in Rf_eval /usr/local/src/R-devel/src/main/eval.c:620
>   ??? #15 0x5582e3b702b9 in R_execClosure /usr/local/src/R-devel/src/main/eval.c:1780
>   ??? #16 0x5582e3b72777 in Rf_applyClosure /usr/local/src/R-devel/src/main/eval.c:1706
>   ??? #17 0x5582e3b4ab0a in bcEval /usr/local/src/R-devel/src/main/eval.c:6743
>   ??? #18 0x5582e3b6a5df in Rf_eval /usr/local/src/R-devel/src/main/eval.c:620
>   ??? #19 0x5582e3b6c55e in forcePromise /usr/local/src/R-devel/src/main/eval.c:516
>   ??? #20 0x5582e3b6d22f in FORCE_PROMISE /usr/local/src/R-devel/src/main/eval.c:4900
>   ?...
>   ??? #133 0x7f788f5e6b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
>   ??? #134 0x5582e392b999 in _start (/usr/local/src/R-devel/bin/exec/R+0x135999)
> 
> 0x602000055af0 is located 0 bytes inside of 1-byte region [0x602000055af0,0x602000055af1)
> freed by thread T0 here:
>   ??? #0 0x7f7891a157b8 in __interceptor_free (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xde7b8)
>   ??? #1 0x7f7878373d8c in XSetLocaleModifiers (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x5ad8c)
> 
> previously allocated by thread T0 here:
>   ??? #0 0x7f7891a15b50 in __interceptor_malloc
> (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeb50)
>   ??? #1 0x7f7878373984 in _XlcDefaultMapModifiers
> (/usr/lib/x86_64-linux-gnu/libX11.so.6+0x5a984)
> 
> SUMMARY: AddressSanitizer: heap-use-after-free
> (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5a0f6)
> 
> ------------------------------
> The window with a choice of machines never appeared.
> 
> Terry T.
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From bbo|ker @end|ng |rom gm@||@com  Wed Jul  3 07:35:19 2019
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 3 Jul 2019 01:35:19 -0400
Subject: [Rd] trivial typos in man/switch.Rd
Message-ID: <d7f7e4b9-0baf-e62b-a61a-8b3ae5c74735@gmail.com>


  My colleague points out that these typos are probably still present
because almost no-one has the stamina to read that far down in ?switch ...

  cheers
    Ben Bolker

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: switch_patch.txt
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20190703/8fce1dbc/attachment.txt>

From Kurt@Horn|k @end|ng |rom wu@@c@@t  Wed Jul  3 09:01:44 2019
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Wed, 3 Jul 2019 09:01:44 +0200
Subject: [Rd] trivial typos in man/switch.Rd
In-Reply-To: <d7f7e4b9-0baf-e62b-a61a-8b3ae5c74735@gmail.com>
References: <d7f7e4b9-0baf-e62b-a61a-8b3ae5c74735@gmail.com>
Message-ID: <23836.21208.968847.888088@hornik.net>

>>>>> Ben Bolker writes:

Thanks: fixed now in the trunk.

Best
-k

>   My colleague points out that these typos are probably still present
> because almost no-one has the stamina to read that far down in ?switch ...

>   cheers
>     Ben Bolker
> x[DELETED ATTACHMENT switch_patch.txt, plain text]
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Thu Jul  4 06:30:38 2019
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Wed, 3 Jul 2019 23:30:38 -0500
Subject: [Rd] R-Forge > GitHub?
In-Reply-To: <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
References: <71f66de5-e1aa-5649-b07a-6cf79f9b07bc@prodsyse.com>
 <8d6c6dd4-d231-ecc7-c584-6e08f93a81e5@gmail.com>
 <89645BC9-C6BF-4E57-8AA0-9F426BA8AC5E@rstudio.com>
 <CA+rDMK+HXUKnA0j49czOf99M62QBfnyO36Sf1MBEe8a5AO-+XA@mail.gmail.com>
 <06a9569b-5b68-a288-8c4f-1537120a5213@prodsyse.com>
 <CABtg=Km5cdEWyUM55FEiabNdZdHvJoELHZ7RCRMPgQhUg9Gc6w@mail.gmail.com>
 <6d983b3b-62ea-3bb9-724a-01baaff51e70@gmail.com>
 <fb319697-6408-17b5-30a1-7a8f9d8da928@prodsyse.com>
 <CAMMJQ0a7ZtndwL8YYas6+k3BRDtAFizAuaacONQ6i6HmrQMTeA@mail.gmail.com>
 <3f01d7bc-ed20-1a39-25bc-ce7d34e22398@prodsyse.com>
 <CAFDcVCR9=WMJRmT3RVZxaQaWxQ4EciojC5ct4K=PrSjuJKtKNw@mail.gmail.com>
 <c9f1e823-9384-1f9f-0d70-e6ccbe8e9075@prodsyse.com>
 <CAPPM_gQ6Ef0+FYz0NrywwiPyW9O2Wwcms8sbmQATp-jcgyYhBA@mail.gmail.com>
 <CAPPM_gQm4JEDZnqg1xPN8U7j2y76=bBNsmxB0dAm0Z7ujmrXzQ@mail.gmail.com>
 <593d5e40-611e-3fcc-c131-6fb7de1130b9@prodsyse.com>
 <CAMMJQ0a0ONoBnZnnn9wq3a4ey336t24CTLrf_RZS99u_hMKrjA@mail.gmail.com>
Message-ID: <a896f66e-6727-cb45-9cd6-60c7ffdc2d9f@prodsyse.com>

 ????? Thanks so much for your help.


 ????? Now your "git push -u origin master" was "![rejected]", after 
creating a new SSH and after your "git clone" and other "git remote 
rename ..." commands seemed to work:


$ git clone git at github.com:joshuaulrich/tmp-ecfun.git Ecdat
# Cloning into 'Ecdat'...<snip> done.

$ cd Ecdat/
$ git remote rename origin tmp
$ git remote add origin https://github.com/sbgraves237/Ecdat
$ git push -u origin master
#[Username & password OK]
To https://github.com/sbgraves237/Ecdat
 ?! [rejected]??????? master -> master (fetch first)
error: failed to push some refs to 'https://github.com/sbgraves237/Ecdat'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
SpenceravessMBP:Ecdat sbgraves$


 ????? Suggestions?
 ????? Thanks again,
 ????? Spencer Graves


On 2019-07-01 01:05, Ott Toomet wrote:
> Apparently you created id_rsa key pair with a passphrase. Passphrase 
> is like an additional password protection layer on your ssh key.? I 
> don't know how did you create it.? But you can always create a new one 
> (you should delete the old one before you create a new one) using the 
> shell command 'ssh-keygen'.? It asks for a passphrase, just push enter 
> for an empty passphrase (twice).? You also have to update the ssh 
> public key (id_rsa.pub) on github by supplying the new public key 
> (id_rsa.pub).
>
> There are some implications you should be aware of:
> * if you delete id_rsa*, you cannot use any ssh authorization that 
> relies on this key any more (that's why you have to update on GH).? 
> From the what you write (... created 2 days ago) I guess you do not 
> use these keys elsewhere but I may be wrong.
> * if you supply empty passphrase, you bypass the optional extra 
> security layer.? I think this is OK for open source software 
> development on your personal computer but your preferences/situation 
> may differ.
> * You cannot use the same keys with passphrase if they are created 
> without one.? This is likely not an issue, but if it turns out to be a 
> problem, you can either add passphrase to the default keys, or create 
> another set of keys, passphrase protected.
>
> Cheers,
> Ott
>
>
> On Sun, Jun 30, 2019 at 9:51 PM Spencer Graves 
> <spencer.graves at prodsyse.com <mailto:spencer.graves at prodsyse.com>> wrote:
>
>
>
>     On 2019-06-30 06:58, Joshua Ulrich wrote:
>     <snip>
>
>     > I imported both packages into separate repositories:
>     > https://github.com/joshuaulrich/tmp-ecdat
>     > https://github.com/joshuaulrich/tmp-ecfun
>     >
>     > I changed your email address on your R-Forge commits to match your
>     > GitHub email address, so R-Forge commits would be associated
>     with your
>     > GitHub account.? I also omitted the "move" commit from Ecdat,
>     and the
>     > "obsolete > GitHub" commits from both packages.? I've attached a
>     file
>     > with the commands I used, if anyone is interested.
>     >
>     > You can use my repos by cloning them to your local machine, adding
>     > your repos as new remotes, and pushing to them.? You would need
>     to run
>     > these commands (untested):
>     >
>     > ### clone my GitHub repo to your machine
>     > git clone git at github.com:joshuaulrich/tmp-ecfun.git Ecdat
>
>
>     Thanks so much.? Sadly, I'm still having troubles.? This "git
>     clone ..."
>     generates:
>
>
>     Enter passphrase for key '/Users/sbgraves/.ssh/id_rsa':
>
>
>     ?????? Sadly, I don't know the passphrase it's looking for here,
>     and I
>     don't know how to find what it's looking for.? Under GitHub >
>     Settings >
>     "SSH and GPG keys", I see an SSH key dated two days ago, when I
>     cloned
>     Ecdat from within RStudio.? And in "~.ssh" I see files id_rsa and
>     id_rsa.pub, both created two days ago.
>
>
>     ?????? What do you suggest I try to get past this?
>
>
>     ?????? Thanks again for all your help.
>
>
>     ?????? Spencer Graves
>
>     > cd Ecdat
>     > ### rename my GitHub repo remote from 'origin' to 'tmp'
>     > git remote rename origin tmp
>     > ### add your GitHub repo remote as 'origin'
>     > ### NOTE: this should be a new, clean repo.
>     > ###? ? Rename your existing 'Ecdat' so you don't overwrite it
>     > git remote add origin https://github.com/sbgraves237/Ecdat
>     > ### push to your GitHub repo
>     > git push -u origin master
>     >
>     > Then you need to run similar commands for Ecfun.
>     >
>     > Best,
>     > Josh
>     >
>     >>>? ? ? ? ?Thanks,
>     >>>? ? ? ? ?Spencer
>     >>>
>     >>>
>     >>> On 2019-06-29 14:09, Henrik Bengtsson wrote:
>     >>>> On Sat, Jun 29, 2019 at 9:43 AM Spencer Graves
>     >>>> <spencer.graves at prodsyse.com
>     <mailto:spencer.graves at prodsyse.com>> wrote:
>     >>>>> Hi, Ott et al.:
>     >>>>>
>     >>>>>
>     >>>>>? ? ? ? ? What's the best way to get "Travis CI" to build and
>     test the two
>     >>>>> packages, Ecdat and Ecfun, that have long been combined in
>     the Ecdat
>     >>>>> project?
>     >>>>>
>     >>>>>
>     >>>>>? ? ? ? ? Following Ott's advice and studying studying
>     Wickham's "R
>     >>>>> Packages" (http://r-pkgs.had.co.nz/), I was able to
>     configure RStudio so
>     >>>>> it would sync using git with
>     "GitHub.com/sbgraves237/Ecdat".? However,
>     >>>>> when I tried to configure "Travis CI", it said, "No
>     DESCRIPTION file
>     >>>>> found, user must supply their own install and script steps".
>     >>>>>
>     >>>>>
>     >>>>>? ? ? ? ? Earlier in this thread, I think someone suggested I
>     make the
>     >>>>> Ecdat and Ecfun packages separate projects on GitHub (though
>     I can't
>     >>>>> find that suggestion now).? This would not be an issue if it
>     were all
>     >>>>> local without version control.? With RStudio managing my
>     interface with
>     >>>>> GitHub, it now seems quite tricky.
>     >>>> I'm 99.999% confident that your life will be much much easier
>     if you
>     >>>> keep one R package per repository.? If you don't, you'll
>     probably be
>     >>>> very lonely when it comes to tools etc. There are built-in 'git'
>     >>>> commands, but also git utility tools, for extracting a subset of
>     >>>> folders/files from git repository into new git repositories.?
>     You'll
>     >>>> still preserve the commit history.? I would deal with this in the
>     >>>> terminal, using the 'git' client and possible some extraction
>     tool.
>     >>>>
>     >>>> Also, while you spend time on this, have a look at the commit
>     >>>> authorship that I mentioned previously.? It's nice to have
>     that in
>     >>>> place later.
>     >>>>
>     >>>> After you got the above in place, then .travis.yml and
>     appveyor.yml is
>     >>>> pretty straightforward (might even be a copy'n'paste).
>     >>>>
>     >>>> Finally, I saw you put your credentials in the URL when you
>     cloned.? I
>     >>>> don't think that's safe, your GitHub credentials will be
>     stored in the
>     >>>> ./.git/config file.? Instead, just clone with:
>     >>>>
>     >>>> git clone https://github.com/sbgraves237/Ecdat.git
>     >>>>
>     >>>> You can then configure git to cache your HTTPS credentials for a
>     >>>> certain time, e.g. 120 minutes, so you don't have to enter
>     them each
>     >>>> time you pull/push.? See
>     https://git-scm.com/docs/git-credential-cache
>     >>>> for details.? That's what I tell new-comers to
>     Git(Hub|Lab|...) to
>     >>>> use.? Personally, I add my public SSH key to GitHub and then
>     clone
>     >>>> with the ssh protocol:
>     >>>>
>     >>>> git clone git at github.com:sbgraves237/Ecdat.git
>     >>>>
>     >>>> That way my I never have to worry entering my credentials.
>     >>>>
>     >>>> /Henrik
>     >>>>
>     >>>>>? ? ? ? ? Suggestions?
>     >>>>>? ? ? ? ? Thanks again to all who have offered suggestions so
>     far.? This
>     >>>>> migration from R-Forge to GitHub seems complete except for
>     the automatic
>     >>>>> tests provided via "Travis CI".
>     >>>>>
>     >>>>>
>     >>>>>? ? ? ? ? Spencer
>     >>>>>
>     >>>>>
>     >>>>> On 2019-06-28 22:25, Ott Toomet wrote:
>     >>>>>> Apparently your username/password are wrong.? Can you
>     clone/push from
>     >>>>>> other repos?
>     >>>>>>
>     >>>>>> You do not need authorization when cloning a public repo,
>     so even
>     >>>>>> incorrect credentials may work (haven't tested this
>     though).? But for
>     >>>>>> push you have to have that in order.
>     >>>>>>
>     >>>>>> I suggest you create ssh keys, upload those to GH, and use ssh
>     >>>>>> authorization instead of https.
>     >>>>>>
>     >>>>>> Cheers,
>     >>>>>> Ott
>     >>>>>>
>     >>>>>> On Fri, Jun 28, 2019 at 8:18 PM Spencer Graves
>     >>>>>> <spencer.graves at prodsyse.com
>     <mailto:spencer.graves at prodsyse.com>
>     <mailto:spencer.graves at prodsyse.com
>     <mailto:spencer.graves at prodsyse.com>>> wrote:
>     >>>>>>
>     >>>>>>? ? ? ?Thanks to Duncan, Henrik and Henrik, Brian, and G?bor:
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? I created a local copy of the new GitHub
>     version using the
>     >>>>>>? ? ? ?following:
>     >>>>>>
>     >>>>>>? ? ? ?git clone
>     >>>>>> https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git
>     >>>>>>
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? That worked in the sense that I got a local
>     copy. However,
>     >>>>>>? ? ? ?after
>     >>>>>>? ? ? ?I rolled the version number and did "git commit" on
>     the DESCRIPTION
>     >>>>>>? ? ? ?files, my "git push" command generated the following:
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ?remote: Invalid username or password.
>     >>>>>>? ? ? ?fatal: Authentication failed for
>     >>>>>>? ? ?
>     ?'https://sbgraves237:mypassword at github.com/sbgraves237/Ecdat.git/'
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? What am I missing? [Note:? I used my actual GitHub
>     >>>>>>? ? ? ?password in
>     >>>>>>? ? ? ?place of "mypassword" here, and this "Authentication
>     failed" message
>     >>>>>>? ? ? ?reported the GitHub password I used here.]
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? Thanks,
>     >>>>>>? ? ? ? ? ? ? Spencer
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ?p.s.? I'm doing this under macOS Mojave 10.14.5.?
>     Also,? I added
>     >>>>>>? ? ? ?".onAttach" functions to the R-Forge versions as
>     Brian G. Peterson
>     >>>>>>? ? ? ?suggested.? That seemed to work fine.
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ?On 2019-06-28 07:13, Duncan Murdoch wrote:
>     >>>>>>? ? ? ?> On 28/06/2019 6:26 a.m., G?bor Cs?rdi wrote:
>     >>>>>>? ? ? ?>
>     >>>>>>? ? ? ?>> Instead, you can do as Duncan suggested, and put a
>     README in your
>     >>>>>>? ? ? ?>> R-Forge
>     >>>>>>? ? ? ?>> repository, that points to *your* GitHub
>     repositor(y/ies). Then the
>     >>>>>>? ? ? ?>> https://github.com/rforge/ecdat read only mirror
>     will pick this up
>     >>>>>>? ? ? ?>> and will
>     >>>>>>? ? ? ?>> point there as well.
>     >>>>>>? ? ? ?>
>     >>>>>>? ? ? ?> Just for the record:? that was Henrik Singmann's
>     suggestion, I just
>     >>>>>>? ? ? ?> agreed with it.
>     >>>>>>? ? ? ?>
>     >>>>>>? ? ? ?> Duncan Murdoch
>     >>>>>>? ? ? ?>
>     >>>>>>
>     >>>>>>
>     >>>>>>? ? ? ? ? ? ? ?[[alternative HTML version deleted]]
>     >>>>>>
>     >>>>>> ?______________________________________________
>     >>>>>> R-devel at r-project.org <mailto:R-devel at r-project.org>
>     <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>
>     mailing list
>     >>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>>>>>
>     >>>>>? ? ? ? ? ?[[alternative HTML version deleted]]
>     >>>>>
>     >>>>> ______________________________________________
>     >>>>> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing
>     list
>     >>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>> ______________________________________________
>     >>> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>     >>
>     >>
>     >> --
>     >> Joshua Ulrich? | about.me/joshuaulrich
>     <http://about.me/joshuaulrich>
>     >> FOSS Trading? | www.fosstrading.com <http://www.fosstrading.com>
>     >
>     >
>
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>


	[[alternative HTML version deleted]]


From @uh@rto_@nggono @end|ng |rom y@hoo@com  Thu Jul  4 17:13:55 2019
From: @uh@rto_@nggono @end|ng |rom y@hoo@com (Suharto Anggono Suharto Anggono)
Date: Thu, 4 Jul 2019 15:13:55 +0000 (UTC)
Subject: [Rd] methods package: A _R_CHECK_LENGTH_1_LOGIC2_=true error
References: <793203922.1895806.1562253235836.ref@mail.yahoo.com>
Message-ID: <793203922.1895806.1562253235836@mail.yahoo.com>

In 'conformMethod', there is another instance of
omittedSig & <something about signature[omittedSig]> .
It just affects error message.

Original:
? ? if(any(is.na(match(signature[omittedSig], c("ANY", "missing"))))) {
? ? ? ? bad <- omittedSig & is.na(match(signature[omittedSig], c("ANY", "missing")))

After r76756:
? ? if(any(iiN <- is.na(match(signature[omittedSig], c("ANY", "missing"))))) {
? ? ? ? bad <- omittedSig & iiN


----------------------------------------------
>>>>> Martin Maechler 
>>>>>? ?  on Sat, 29 Jun 2019 12:05:49 +0200 writes:

>>>>> Martin Maechler 
>>>>>? ?  on Sat, 29 Jun 2019 10:33:10 +0200 writes:

>>>>> peter dalgaard 
>>>>>? ?  on Fri, 28 Jun 2019 16:20:03 +0200 writes:

? ? >>> > On 28 Jun 2019, at 16:03 , Martin Maechler <maechler using stat.math.ethz.ch> wrote:
? ? >>> > 
? ? >>> >>>>>> Henrik Bengtsson 
? ? >>> >>>>>>? ? on Thu, 27 Jun 2019 16:00:39 -0700 writes:
? ? >>> > 
? ? >>> >> Using:
? ? >>> >> 
? ? >>> >> untrace(methods::conformMethod)
? ? >>> >> at <- c(12,4,3,2)
? ? >>> >> str(body(methods::conformMethod)[[at]])
? ? >>> >> ## language omittedSig <- omittedSig && (signature[omittedSig] != "missing")
? ? >>> >> cc <- 0L
? ? >>> >> trace(methods::conformMethod, tracer = quote({
? ? >>> >>? cc <<- cc + 1L
? ? >>> >>? print(cc)
? ? >>> >>? if (cc == 31) {? ## manually identified
? ? >>> >>? ? untrace(methods::conformMethod)
? ? >>> >>? ? trace(methods::conformMethod, at = list(at), tracer = quote({
? ? >>> >>? ? ? str(list(signature = signature, mnames = mnames, fnames = fnames))
? ? >>> >>? ? ? print(ls())
? ? >>> >>? ? ? try(str(list(omittedSig = omittedSig, signature = signature)))
? ? >>> >>? ? }))
? ? >>> >>? }
? ? >>> >> }))
? ? >>> >> loadNamespace("oligo")
? ? >>> >> 
? ? >>> >> gives:
? ? >>> >> 
? ? >>> >> Untracing function "conformMethod" in package "methods"
? ? >>> >> Tracing function "conformMethod" in package "methods"
? ? >>> >> Tracing conformMethod(signature, mnames, fnames, f, fdef, definition)
? ? >>> >> step 12,4,3,2
? ? >>> >> List of 3
? ? >>> >> $ signature: Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
? ? >>> >>? ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
? ? >>> >>? ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
? ? >>> >> $ mnames?  : chr [1:2] "object" "value"
? ? >>> >> $ fnames?  : chr [1:4] "object" "subset" "target" "value"
? ? >>> >> [1] "f"? ? ? ? ? "fdef"? ? ?  "fnames"? ?  "fsig"? ? ?  "imf"
? ? >>> >> [6] "method"? ?  "mnames"? ?  "omitted"? ? "omittedSig" "sig0"
? ? >>> >> [11] "sigNames"?  "signature"
? ? >>> >> List of 2
? ? >>> >> $ omittedSig: logi [1:4] FALSE TRUE TRUE FALSE
? ? >>> >> $ signature : Named chr [1:4] "TilingFeatureSet" "ANY" "ANY" "array"
? ? >>> >>? ..- attr(*, "names")= chr [1:4] "object" "subset" "target" "value"
? ? >>> >>? ..- attr(*, "package")= chr [1:4] "oligoClasses" "methods" "methods" "methods"
? ? >>> >> Error in omittedSig && (signature[omittedSig] != "missing") :
? ? >>> >>? 'length(x) = 4 > 1' in coercion to 'logical(1)'
? ? >>> >> Error: unable to load R code in package 'oligo'
? ? >>> >> 
? ? >>> > 
? ? >>> > Thank you, Henrik, nice piece of using trace() .. and the above
? ? >>> > is useful for solving the issue --? I can work with that.
? ? >>> > 
? ? >>> > I'm? already pretty sure the wrong code starts with
? ? >>> > 
? ? >>> >? ? omittedSig <- sigNames %in% fnames[omitted] # ....

? ? >> my? "pretty sure"? statement above has proven to be wrong ..

? ? >>> > -------------
? ? >>> > 
? ? >>> 
? ? >>> I think the intention must have been that the two "ANY" signatures should change to "missing". 

? ? >> Definitely.

? ? >>> However, with the current logic that will not happen, because
? ? >>> 
? ? >>> > c(F,T,T,F) &&? c(T,T)
? ? >>> [1] FALSE
? ? >>> 
? ? >>> Henrik's non-fix would have resulted in
? ? >>> 
? ? >>> > c(F,T,T,F) &? c(T,T)
? ? >>> [1] FALSE? TRUE? TRUE FALSE
? ? >>> 
? ? >>> which is actually right, but only coincidentally due to recycling of c(T,T). Had it been c(F,T) then it would have been expanded to c(F,T,F,T) which would be the opposite of what was wanted.
? ? >>> 
? ? >>> Barring NA issues, I still think 
? ? >>> 
? ? >>> omittedSig[omittedSig] <- (signature[omittedSig] != "missing")
? ? >>> 
? ? >>> should do the trick.

? ? >> yes, (most probably).? I've found a version of that which should
? ? >> be even easier to "read and understand", in? svn commit 76753 :

? ? >> svn diff -c 76753 src/library/methods/R/RMethodUtils.R

? ? >> --- src/library/methods/R/RMethodUtils.R??? (Revision 76752)
? ? >> +++ src/library/methods/R/RMethodUtils.R??? (Revision 76753)
? ? >> @@ -342,8 +342,7 @@
? ? >> gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature", bad2),
? ? >> call. = TRUE, domain = NA)
? ? >> }
? ? >> -? ? else if(!all(signature[omittedSig] == "missing")) {
? ? >> -? ? ? ? omittedSig <- omittedSig && (signature[omittedSig] != "missing")
? ? >> +? ? else if(any(omittedSig <- omittedSig & signature != "missing")) {


? ? >> BTW:? I've marked this --- and the? runmed() seg.fault + na.action
? ? >> change ---? as something to be added to R 3.6.1 patched,? as I
? ? >> deemed I should obey the "code freeze" rule in both cases.

? ? >> Martin

? ? > Hmm... I think we got a 'Neverending Story' here -- because it
? ? > seems, both Peter and I were wrong in thinking that it's a good
? ? > idea to change "missing" to "ANY" here ...
? ? > ((or if that *was* correct, that needs to entail more changes
? ? > happening during setMethod(.) {conformMethod() is only called in
? ? > one place in our code base, namely from setMethod()} :

as a matter of fact, I've been brave for now, left the change to
conformMethod()? and started to fix the constructed .local()
calls which are created in? conformMethod()'s sibling,
which is rematchDefinition().

It seems that this builds e.g. Matrix {with its gazillion
setMethod()s} and that continues to run its own tests.? OTOH,
Matrix may not trigger the situations that are dealt with here
at all, as the signature() are rarely longer than three, and at
some point in time I had made long passes through the package in
order to "minimize" the .local() calls.

--> svn commit 76756? (in addition to 76753, mentioned earlier)
? ? now has rematchDefinition() changes

I would be positively surprised if (but can imagine that) this
had no affect on CRAN / Bioconductor packages.

Still, these two changes seem to achieve what both the comments
and the documentation of? conformMethod() and rematchDefinition()
suggest should happen.

Of course, I'd really be happy if people with S4 packages would
check them with an R-devel version with svn rev >=? 76756
and report problems they see.
I do imagine effects, and would expect that bugs in current code
become visible where they had not done so previously.

Martin


